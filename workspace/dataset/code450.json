{
    "codes": [
        {
            "id": "java-python_GeeksForGeeks_4023_A_1",
            "java_code": "import java . io . * ; class GfG { static int sumOfTheSeries ( int n ) { return ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( \"Sum = \" + sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT return int ( ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ) NEWLINE DEDENT n = 5 NEWLINE print ( \"Sum =\" , sumOfTheSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1143_A_2",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001143A { static public void main ( final String [ ] args ) throws IOException { p001143A . _main ( args ) ; }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) z = a . count ( 0 ) o = a . count ( 1 ) ze = 0 on = 0 for i in range ( n ) : if ze == z : print ( i ) break ; elif on == o : print ( i ) break ; if a [ i ] == 0 : ze += 1 else : on += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4738_A_3",
            "java_code": "class GFG { static int PositionRightmostSetbit ( int n ) { int position = 1 ; int m = 1 ; while ( ( n & m ) == 0 ) { m = m << 1 ; position ++ ; } return position ; } public static void main ( String [ ] args ) { int n = 16 ; System . out . println ( PositionRightmostSetbit ( n ) ) ; } }",
            "python_code": "def PositionRightmostSetbit ( n ) : NEWLINE INDENT position = 1 NEWLINE m = 1 NEWLINE while ( not ( n & m ) ) : NEWLINE INDENTINDENT m = m << 1 NEWLINE position += 1 NEWLINE DEDENT return position NEWLINE DEDENT n = 16 NEWLINE print ( PositionRightmostSetbit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1474_A_4",
            "java_code": "import java . util . * ; public class PuzzleFromTheFuture {  public static void main ( String [ ] args ) {",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE b = input ( ) NEWLINE a = '' NEWLINE d = '' NEWLINE for i in b : try : if 1 + int ( i ) == int ( d [ - 1 ] ) : NEWLINE INDENT a += '0' else : NEWLINE a += '1' except : a = '1' NEWLINE DEDENT d = str ( int ( a [ - 1 ] ) + int ( i ) ) NEWLINE print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3459_A_5",
            "java_code": "class GFG { static int findSum ( int N , int k ) { int sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += ( int ) Math . pow ( i , k ) ; } return sum ; } public static void main ( String [ ] args ) { int N = 8 , k = 4 ; System . out . println ( findSum ( N , k ) ) ; } }",
            "python_code": "from math import pow NEWLINE def findSum ( N , k ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , N + 1 , 1 ) : NEWLINE INDENTINDENT sum += pow ( i , k ) NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 8 NEWLINE k = 4 NEWLINE print ( int ( findSum ( N , k ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4566_A_6",
            "java_code": "import java . io . * ; class GFG { static float cyl ( float r , float R , float h ) { if ( h < 0 && r < 0 && R < 0 ) return - 1 ; float r1 = r ; float h1 = h ; float V = ( float ) ( 3.14 * Math . pow ( r1 , 2 ) * h1 ) ; return V ; } public static void main ( String [ ] args ) { float r = 7 , R = 11 , h = 6 ; System . out . print ( cyl ( r , R , h ) ) ; } }",
            "python_code": "def cyl ( r , R , h ) : NEWLINE INDENT if ( h < 0 and r < 0 and R < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT r1 = r NEWLINE h1 = h NEWLINE V = 3.14 * pow ( r1 , 2 ) * h1 NEWLINE return round ( V , 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r , R , h = 7 , 11 , 6 NEWLINE print ( cyl ( r , R , h ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1266_B_7",
            "java_code": "import java . util . Scanner ;  public class _0709DiceTower {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { long n = sc . nextLong ( ) ; if ( n <= 14 ) { System . out . println ( \"NO\" ) ; } else if ( n % 14 <= 6 && n % 14 >= 1 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }  }",
            "python_code": "n = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) for i in li : tmp = i % 14 dc = i // 14 if 6 >= tmp >= 1 and dc >= 1 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1057_A_8",
            "java_code": "import java . util . * ; public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int ar [ ] = new int [ n + 2 ] ; for ( int i = 2 ; i < ( n + 1 ) ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; } List < Integer > list = new ArrayList < > ( ) ; int k = n ; while ( k >= 1 ) {",
            "python_code": "n = int ( input ( ) ) p = [ 0 ] * 2 + list ( map ( int , input ( ) . split ( ) ) )  c = npath = [ n ] while c != 1 : c = p [ c ] path . append ( c ) print ( * path [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3222_A_9",
            "java_code": "class GFG { static int countOperations ( int n ) { int i = 2 ; while ( ( i * i ) < n && ( n % i ) > 0 ) i += 1 ; if ( ( i * i ) > n ) i = n ; return ( 1 + ( n - i ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( countOperations ( n ) ) ; } }",
            "python_code": "def countOperations ( n ) : NEWLINE INDENT i = 2 NEWLINE while ( ( i * i ) < n and ( n % i ) ) : NEWLINE INDENTINDENT i += 1 NEWLINE DEDENT if ( ( i * i ) > n ) : NEWLINE INDENTINDENT i = n NEWLINE DEDENT return ( 1 + ( n - i ) // 2 ) NEWLINE DEDENT n = 5 NEWLINE print ( countOperations ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1_A_10",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; long l = ( long ) n / a ; long k = ( long ) m / a ; if ( n % a != 0 ) l ++ ; if ( m % a != 0 ) k ++ ; System . out . println ( l * k ) ; } }",
            "python_code": "n , m , a = map ( int , input ( ) . split ( ) ) ans = 0 ans1 = 0 if n % a == 0 : ans = n // aelse : ans = n // a + 1 if m % a == 0 : ans1 = m // a else : ans1 = m // a + 1 print ( ans * ans1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_491_A_11",
            "java_code": "import java . util . * ;  public class Main {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int h = m + n + 1 ; h = h - n ; System . out . print ( h + \" \" ) ; for ( int i = 0 ; i < n ; i ++ ) { h ++ ; System . out . print ( h + \" \" ) ; } h = m + 1 ; for ( int j = 0 ; j < m ; j ++ ) { h -- ; System . out . print ( h + \" \" ) ;    } }  }",
            "python_code": " a = int ( input ( ) ) b = int ( input ( ) )    n = a + b + 1 t = [ ]   for k in range ( 1 , n + 1 ) : t . append ( k )  print ( * ( t [ : a ] + t [ a : ] [ : : - 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1217_A_12",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute { public static int binary ( int n , int m , int k ) { int st = 0 , end = k , pos = - 1 ; while ( st <= end ) { int mid = st + ( end - st ) / 2 ;",
            "python_code": "for t in range ( int ( input ( ) ) ) : s , i , e = map ( int , input ( ) . split ( ) ) low = 0 high = e low_pos = high_pos = e + 1 while low <= high : mid = low + ( high - low ) // 2 if mid + s > i + ( e - mid ) : low_pos = mid high = mid - 1 else : low = mid + 1 print ( high_pos - low_pos ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_515_A_13",
            "java_code": "import java . util . Scanner ;  public class StupidWalker { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  long d = Math . abs ( scan . nextLong ( ) ) + Math . abs ( scan . nextLong ( ) ) ; long s = scan . nextLong ( ) - d ;  if ( s >= 0 && s % 2 == 0 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "a , b , s = map ( int , input ( ) . split ( ) ) if a < 0 : a *= ( - 1 ) if b < 0 : b *= ( - 1 ) if a + b > s : print ( \"No\" ) else : if a + b == s : print ( \"Yes\" ) else : if ( a + b - s ) % 2 == 1 : print ( \"No\" ) else : print ( \"Yes\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3279_A_14",
            "java_code": "import java . io . * ; class GFG { static int ncr ( int n , int r ) { int ans = 1 ; for ( int i = 1 ; i <= r ; i += 1 ) { ans *= ( n - r + i ) ; ans /= i ; } return ans ; } static int totalWays ( int X , int Y , int M , int W ) { return ( ncr ( M , X ) * ncr ( W , Y ) ) ; } public static void main ( String [ ] args ) { int X = 4 , Y = 3 , M = 6 , W = 5 ; System . out . println ( totalWays ( X , Y , M , W ) ) ; } }",
            "python_code": "def ncr ( n , r ) : NEWLINE INDENT ans = 1 NEWLINE for i in range ( 1 , r + 1 ) : NEWLINE INDENTINDENT ans *= ( n - r + i ) NEWLINE ans //= i NEWLINE DEDENT return ans NEWLINE DEDENT def totalWays ( X , Y , M , W ) : NEWLINE INDENT return ( ncr ( M , X ) * ncr ( W , Y ) ) NEWLINE DEDENT X = 4 NEWLINE Y = 3 NEWLINE M = 6 NEWLINE W = 5 NEWLINE print ( totalWays ( X , Y , M , W ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1220_B_15",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c693a {",
            "python_code": "n = int ( input ( ) ) l = [ ] for i in range ( n ) : l . append ( list ( map ( int , input ( ) . split ( ) ) ) ) ans = [ ] a = int ( ( ( l [ 0 ] [ 1 ] * l [ 1 ] [ 2 ] ) // l [ 0 ] [ 2 ] ) ** 0.5 )  for i in range ( n ) : if l [ 1 ] [ i ] != 0 : ans . append ( l [ 1 ] [ i ] // a ) else : ans . append ( a ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_501_A_16",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "a , b , c , d = map ( int , input ( ) . split ( ) )  x = max ( 3 * a // 10 , a - ( a // 250 ) * c ) y = max ( 3 * b // 10 , b - ( b // 250 ) * d )  if x > y : print ( 'Misha' ) elif x < y : print ( 'Vasya' ) else : print ( 'Tie' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3612_A_17",
            "java_code": "import java . io . * ; class GFG { static boolean checkOrigin ( int x1 , int y1 , int x2 , int y2 ) { return ( x1 * ( y2 - y1 ) == y1 * ( x2 - x1 ) ) ; } public static void main ( String [ ] args ) { if ( checkOrigin ( 1 , 28 , 2 , 56 ) == true ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def checkOrigin ( x1 , y1 , x2 , y2 ) : NEWLINE INDENT return ( x1 * ( y2 - y1 ) == y1 * ( x2 - x1 ) ) NEWLINE DEDENT if ( checkOrigin ( 1 , 28 , 2 , 56 ) == True ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1014_A_18",
            "java_code": "class GFG { static int countNum ( int N , int arr [ ] ) { int sum = 0 , count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { sum += arr [ i ] ; } for ( int i = 0 ; i < N ; i ++ ) { if ( ( sum - arr [ i ] ) % arr [ i ] == 0 ) { count ++ ; } } return count ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 10 , 4 , 6 , 7 } ; int n = arr . length ; System . out . println ( countNum ( n , arr ) ) ; } }",
            "python_code": "def countNum ( N , arr ) : NEWLINE INDENT Sum , count = 0 , 0 NEWLINE for i in range ( N ) : NEWLINE INDENTINDENT Sum += arr [ i ] NEWLINE DEDENT for i in range ( N ) : NEWLINE INDENTINDENT if ( ( Sum - arr [ i ] ) % arr [ i ] == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT arr = [ 3 , 10 , 4 , 6 , 7 ] NEWLINE n = len ( arr ) NEWLINE print ( countNum ( n , arr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_188_A_19",
            "java_code": "import java . util . * ; class GFG { static void print ( int n , int k ) { System . out . print ( k + \" \" ) ; for ( int i = 2 ; i <= n ; i ++ ) { int x = ( int ) ( Math . pow ( k , i ) - Math . pow ( k , i - 1 ) ) ; System . out . print ( x + \" \" ) ; } } public static void main ( String [ ] args ) { int N = 3 , K = 4 ; print ( N , K ) ; } }",
            "python_code": "from math import pow NEWLINE def printf ( n , k ) : NEWLINE INDENT print ( int ( k ) , end = \" \" ) NEWLINE for i in range ( 2 , n + 1 , 1 ) : NEWLINE INDENTINDENT x = pow ( k , i ) - pow ( k , i - 1 ) NEWLINE print ( int ( x ) , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 3 NEWLINE K = 4 NEWLINE printf ( N , K ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3529_A_20",
            "java_code": "import java . io . * ; class GFG { static float squarearea ( float r ) { if ( r < 0 ) return - 1 ; float a = 4 * ( float ) ( Math . pow ( r , 2 ) / 5 ) ; return a ; } public static void main ( String [ ] args ) { float r = 5 ; System . out . println ( squarearea ( r ) ) ; } }",
            "python_code": "def squarearea ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = 4 * ( pow ( r , 2 ) / 5 ) NEWLINE return a NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r = 5 NEWLINE print ( int ( squarearea ( r ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1065_A_21",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "t = int ( input ( ) ) for i in range ( 0 , t ) : s , a , b , c = map ( int , input ( ) . split ( ) ) chocolates = 0 chocolates += s // c if s // c >= a : chocolates += ( chocolates // a ) * b print ( chocolates ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1269_A_22",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int a = 9 * n ; int b = 8 * n ; System . out . println ( a + \" \" + b ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( 9 * n , end = \" \" ) print ( 8 * n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3887_A_23",
            "java_code": "import java . lang . System . * ; class GFG { static int findBucketNo ( int p ) { return ( int ) Math . ceil ( ( Math . sqrt ( 8 * p + 1 ) - 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int p = 10 ; System . out . println ( findBucketNo ( p ) ) ; } }",
            "python_code": "import math NEWLINE def findBucketNo ( p ) : NEWLINE INDENT return math . ceil ( ( math . sqrt ( 8 * p + 1 ) - 1 ) / 2 ) NEWLINE DEDENT p = 10 NEWLINE print ( findBucketNo ( p ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1243_A_24",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Square { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { ",
            "python_code": "k = int ( input ( ) )  for _ in range ( k ) :  n = int ( input ( ) ) planks_in = input ( ) planks = planks_in . split ( ) planks = list ( map ( int , planks ) ) planks . sort ( )  for i in range ( n ) : if planks [ i ] >= ( n - i ) : print ( n - i ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5198_A_25",
            "java_code": "import java . io . * ; class GFG { static int XorSum ( int arr [ ] , int n ) { int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int k = 0 ; for ( int j = 1 ; j <= arr [ i ] ; j ++ ) k ^= arr [ i ] ; result += k ; } return result ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 6 , 3 , 4 , 5 } ; int n = arr . length ; System . out . println ( XorSum ( arr , n ) ) ; } }",
            "python_code": "def XorSum ( arr , n ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT k = 0 NEWLINE for j in range ( 1 , arr [ i ] + 1 ) : NEWLINE INDENTINDENTINDENT k = k ^ arr [ i ] NEWLINE DEDENT result = result + k NEWLINE DEDENT return result NEWLINE DEDENT arr = [ 1 , 2 , 6 , 3 , 4 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( XorSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_494_A_26",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { FastScanner in = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; new Main ( ) . run ( in , out ) ; out . close ( ) ; }  void run ( FastScanner in , PrintWriter out ) { ",
            "python_code": "s = input ( ) c = 0 ; t = s . rfind ( '#' ) ans = [ ] ; b = Truefor i in range ( t ) : if s [ i ] == '(' : c += 1 elif s [ i ] == ')' : c -= 1 else : c -= 1 ans . append ( 1 ) if c < 0 : b = False breakm = cfor i in range ( t + 1 , len ( s ) ) : if s [ i ] == '(' : c += 1 else : c -= 1 m = min ( m , c )  if b and m > 0 and m == c : ans . append ( m ) print ( * ans , sep = '\\n' ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3491_A_27",
            "java_code": "import java . util . Arrays ; import java . io . * ; class GFG { static int items ( int n , int a [ ] ) { Arrays . sort ( a ) ; int z = a [ n - 1 ] ; int x = 1 ; int s = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { s += a [ i ] ; if ( s <= z ) x += 1 ; else break ; } return x ; } public static void main ( String [ ] args ) { int n = 5 ; int a [ ] = { 5 , 3 , 1 , 5 , 6 } ; System . out . println ( items ( n , a ) ) ; } }",
            "python_code": "def items ( n , a ) : NEWLINE INDENT a . sort ( ) NEWLINE z = a [ n - 1 ] NEWLINE x = 1 NEWLINE s = 0 NEWLINE for i in range ( 0 , n - 1 ) : NEWLINE INDENTINDENT s += a [ i ] NEWLINE if ( s <= z ) : NEWLINE INDENTINDENTINDENT x += 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT DEDENT return x NEWLINE DEDENT n = 5 NEWLINE a = [ 5 , 3 , 1 , 5 , 6 ] NEWLINE print ( items ( n , a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_401_A_28",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int k = s . nextInt ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += s . nextInt ( ) ; } int ans = Math . abs ( sum ) / k ; if ( Math . abs ( sum ) % k > 0 ) { ans ++ ; } System . out . println ( ans ) ; } }",
            "python_code": "from math import ceiln , x = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) print ( ceil ( abs ( sum ( l ) ) / x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1093_A_29",
            "java_code": "import java . util . * ; import java . io . * ; public class MainClass { public static void main ( String [ ] args ) throws IOException { Reader in = new Reader ( ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) if n % 2 == 0 : print ( n // 2 ) elif n % 3 == 0 : print ( n // 3 ) elif n % 4 == 0 : print ( n // 4 ) elif n % 5 == 0 : print ( n // 5 ) elif n % 6 == 0 : print ( n // 6 ) elif n % 7 == 0 : print ( n // 7 ) else : print ( ( n - 3 ) // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p007_A_30",
            "java_code": "public final class p007 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p007 ( ) . run ( ) ) ; } public String run ( ) { for ( int i = 2 , count = 0 ; ; i ++ ) { if ( Library . isPrime ( i ) ) { count ++ ; if ( count == 10001 ) return Integer . toString ( i ) ; } } } }",
            "python_code": "import eulerlib NEWLINE import itertools NEWLINE def compute ( ) : NEWLINE INDENT ans = next ( itertools . islice ( filter ( eulerlib . is_prime , itertools . count ( 2 ) ) , 10000 , None ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_588_B_31",
            "java_code": "import java . io . * ; import java . util . * ;  public class B { static ArrayList < Long > power = new ArrayList < > ( ) ; static ArrayList < Long > divisors = new ArrayList < > ( ) ; public static void main ( String [ ] args ) throws IOException { Scanner in = new Scanner ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; dp ( ) ; long n = in . nextLong ( ) ; divisor ( n ) ;",
            "python_code": "n = int ( input ( ) )  i = 2 while i * i <= n : while n % ( i * i ) == 0 : n /= i i += 1  print ( int ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3253_A_32",
            "java_code": "class GFG { public static int arraySum ( int arr [ ] , int n ) { int x = ( n + 1 ) / 2 ; return ( arr [ 0 ] - 1 ) * n + x * x ; } public static void main ( String [ ] args ) { int arr [ ] = { 10 , 11 , 12 , 13 , 12 , 11 , 10 } ; int n = arr . length ; System . out . print ( arraySum ( arr , n ) ) ; } }",
            "python_code": "def arraySum ( arr , n ) : NEWLINE INDENT x = ( n + 1 ) / 2 NEWLINE return ( arr [ 0 ] - 1 ) * n + x * x NEWLINE DEDENT arr = [ 10 , 11 , 12 , 13 , 12 , 11 , 10 ] NEWLINE n = len ( arr ) NEWLINE print ( arraySum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_A_33",
            "java_code": "import java . util . * ;  public class CompProg2 {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int k = scan . nextInt ( ) ; int n = scan . nextInt ( ) ; int w = scan . nextInt ( ) ; int price = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { price += i * k ; } if ( n > price ) System . out . println ( 0 ) ; else System . out . println ( price - n ) ;   }  }",
            "python_code": "a , b , c = list ( map ( int , input ( ) . split ( \" \" ) ) ) total = int ( a * c * ( c + 1 ) * 1 / 2 ) if ( total - b ) < 0 : print ( 0 ) else : print ( total - b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4285_A_34",
            "java_code": "class GFG { public static int Valid ( int a , int b , int c , int d ) { if ( a + b + c + d == 360 ) return 1 ; return 0 ; } public static void main ( String [ ] args ) { int a = 80 , b = 70 , c = 100 , d = 110 ; if ( Valid ( a , b , c , d ) == 1 ) System . out . println ( \"Valid quadilateral\" ) ; else System . out . println ( \"Invalid quadilateral\" ) ; } }",
            "python_code": "def Valid ( a , b , c , d ) : NEWLINE INDENT if ( a + b + c + d == 360 ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT a = 80 ; b = 70 ; c = 100 ; d = 110 ; NEWLINE if ( Valid ( a , b , c , d ) ) : NEWLINE INDENT print ( \"Valid quadilateral\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"Invalid quadilateral\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_777_A_35",
            "java_code": "class GFG { static void findNumbers ( int n ) { int i = 1 ; while ( i <= n ) { System . out . print ( ( ( 2 * i ) - 1 ) + \" \" ) ; i ++ ; } } public static void main ( String args [ ] ) { int n = 3 ; findNumbers ( n ) ; } }",
            "python_code": "def findNumber ( n ) : NEWLINE INDENT i = 1 NEWLINE while i <= n : NEWLINE INDENTINDENT print ( ( 2 * i ) - 1 , end = \" \" ) NEWLINE i += 1 NEWLINE DEDENT DEDENT n = 3 NEWLINE findNumber ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1582_A_36",
            "java_code": "import java . io . * ; class GFG { static int modInverse ( int a , int m ) { a = a % m ; for ( int x = 1 ; x < m ; x ++ ) if ( ( a * x ) % m == 1 ) return x ; return 1 ; } public static void main ( String args [ ] ) { int a = 3 , m = 11 ; System . out . println ( modInverse ( a , m ) ) ; } }",
            "python_code": "def modInverse ( a , m ) : NEWLINE INDENT a = a % m ; NEWLINE for x in range ( 1 , m ) : NEWLINE INDENTINDENT if ( ( a * x ) % m == 1 ) : NEWLINE INDENTINDENTINDENT return x NEWLINE DEDENT DEDENT return 1 NEWLINE DEDENT a = 3 NEWLINE m = 11 NEWLINE print ( modInverse ( a , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_318_A_37",
            "java_code": "import java . util . Scanner ;  public class EvenOdds { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; if ( k <= ( n + 1 ) / 2 ) { System . out . println ( k * 2 - 1 ) ; } else { System . out . println ( ( k - ( n + 1 ) / 2 ) * 2 ) ; }  } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) if a % 2 == 0 : if b > a / 2 : print ( int ( ( b - a / 2 ) * 2 ) ) else : print ( int ( b * 2 - 1 ) ) else : if b > a // 2 + 1 : print ( int ( ( b - ( a // 2 + 1 ) ) * 2 ) ) else : print ( int ( b * 2 - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1288_B_38",
            "java_code": " import java . util . Scanner ;  public class MemeProblem { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long p = 1 , c = 0 ; while ( Math . pow ( 10 , p ) - 1 <= b ) { c += a ; p ++ ; } System . out . println ( c ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : l = list ( input ( ) . split ( ) ) a = l [ 0 ] b = l [ 1 ] x = len ( b ) if ( '9' * len ( b ) != b ) : x = x - 1 print ( int ( a ) * x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1047_B_39",
            "java_code": "import java . util . * ;   public class Practise { ",
            "python_code": "maxi = 0 for i in range ( int ( input ( ) ) ) : x , y = map ( int , input ( ) . split ( ' ' ) ) maxi = max ( x + y , maxi ) print ( maxi ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1331_B_40",
            "java_code": "import java . util . Scanner ; public class p1331B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; StringBuilder s = new StringBuilder ( ) ; for ( int i = 2 , j = ( int ) Math . sqrt ( n ) ; i <= j ; i ++ ) { if ( n % i == 0 ) { System . out . print ( i + \"\" + n / i ) ; return ; } } } }",
            "python_code": "m = int ( input ( ) ) j = 2 while m % j != 0 : j += 1 print ( j , m // j , sep = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1220_A_41",
            "java_code": "import java . util . Scanner ; public class cards { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int len = s . nextInt ( ) ; String str = s . next ( ) ; s . close ( ) ; for ( int i = 0 ; i < len ; i ++ ) { if ( str . charAt ( i ) == 'n' ) System . out . print ( \"1 \" ) ; } for ( int i = 0 ; i < len ; i ++ ) { if ( str . charAt ( i ) == 'z' ) System . out . print ( \"0 \" ) ; } } }",
            "python_code": "a = int ( input ( ) ) x = [ str ( x ) for x in str ( input ( ) [ : a ] ) ] z = x . count ( 'z' ) e = x . count ( 'e' ) r = x . count ( 'r' ) o = x . count ( 'o' ) n = x . count ( 'n' ) print ( * [ n * '1 ' + r * '0 ' ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4663_A_42",
            "java_code": "class GFG { static int CountZeroBit ( int n ) { int count = 0 ; while ( n > 0 ) { if ( ( n & 1 ) != 0 ) count ++ ; n >>= 1 ; } return count ; } static int CountORandSumEqual ( int N ) { int count = CountZeroBit ( N ) ; return ( 1 << count ) ; } public static void main ( String [ ] args ) { int N = 10 ; System . out . print ( CountORandSumEqual ( N ) ) ; } }",
            "python_code": "def CountZeroBit ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT if ( not ( n & 1 ) ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT def CountORandSumEqual ( N ) : NEWLINE INDENT count = CountZeroBit ( N ) NEWLINE return ( 1 << count ) NEWLINE DEDENT N = 10 NEWLINE print ( CountORandSumEqual ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2532_A_43",
            "java_code": "import java . io . * ; class GFG { static int countMoves ( int n ) { int ct = 0 ; for ( int i = 1 ; i <= n ; i ++ ) ct += i * ( n - i ) ; ct += n ; return ct ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countMoves ( n ) ) ; } }",
            "python_code": "def countMoves ( n ) : NEWLINE INDENT ct = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT ct += i * ( n - i ) NEWLINE DEDENT ct += n NEWLINE return ct NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( countMoves ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3420_A_44",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { double n = 12 ; System . out . println ( Math . sqrt ( n ) ) ; } }",
            "python_code": "import math NEWLINE if __name__ == '__main__' : NEWLINE INDENT n = 12 NEWLINE print ( math . sqrt ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_724_A_45",
            "java_code": "class Solution { public int pivotIndex ( int [ ] nums ) { int totalsum = 0 , leftsum = 0 ; for ( int i = 0 ; i < nums . length ; i ++ ) totalsum += nums [ i ] ; for ( int i = 0 ; i < nums . length ; i ++ ) { if ( leftsum == totalsum - leftsum - nums [ i ] ) return i ; leftsum += nums [ i ] ; } return - 1 ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def pivotIndex ( self , nums ) : NEWLINE INDENTINDENT totalsum = sum ( nums ) NEWLINE leftsum = 0 NEWLINE for i , v in enumerate ( nums ) : NEWLINE INDENTINDENTINDENT if leftsum == totalsum - leftsum - v : NEWLINE INDENTINDENTINDENTINDENT return i NEWLINE DEDENT leftsum += v NEWLINE DEDENT return - 1 NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1023_B_46",
            "java_code": "import java . util . Scanner ;  public class maxstack { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long m = sc . nextLong ( ) ; long c = 0 ; if ( m <= n ) { c = ( m - 1 ) / 2 ; } else c = n - m / 2 ; System . out . println ( c < 0 ? 0 : c ) ; }  }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) print ( max ( min ( n , k - 1 ) - k // 2 , 0 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_450_B_47",
            "java_code": "import java . util . * ; public class Practice { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long x = sc . nextLong ( ) ; long y = sc . nextLong ( ) ; long n = sc . nextLong ( ) ; long v [ ] = { x , y , y - x , - 1 * x , - 1 * y , x - y } ; n -- ; long M = 1000000007 ; System . out . print ( ( ( v [ ( int ) n % 6 ] % M ) + M ) % M ) ;  } } ",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) num = int ( input ( ) ) num %= 6 num = num if num != 0 else num + 6 t , l = x , yfor _ in range ( num - 2 ) : x , y = y , y - x x %= 10 ** 9 + 7 y %= 10 ** 9 + 7 if num == 1 : print ( t % ( 10 ** 9 + 7 ) ) elif num == 2 : print ( l % ( 10 ** 9 + 7 ) ) else :   print ( y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1180_A_48",
            "java_code": "import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int arr [ ] = new int [ 101 ] ; int n = sc . nextInt ( ) ; arr [ 0 ] = 1 ; arr [ 1 ] = 5 ; for ( int i = 2 ; i < 101 ; i ++ ) { arr [ i ] = arr [ i - 1 ] + 2 * ( arr [ i - 1 ] - arr [ i - 2 ] ) ; } System . out . println ( 2 * n * ( n - 1 ) + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) if ( n == 1 ) : print ( 1 ) else : ans = 2 * n - 1 while ( n >= 2 ) : ans += 4 * n - 6 n -= 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3557_A_49",
            "java_code": "import java . io . * ; class GFG { int MAX = 100 ; static int countCommon ( int mat [ ] [ ] , int n ) { int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( mat [ i ] [ i ] == mat [ i ] [ n - i - 1 ] ) res ++ ; return res ; } public static void main ( String args [ ] ) throws IOException { int mat [ ] [ ] = { { 1 , 2 , 3 } , { 4 , 5 , 6 } , { 7 , 8 , 9 } } ; System . out . println ( countCommon ( mat , 3 ) ) ; } }",
            "python_code": "Max = 100 NEWLINE def countCommon ( mat , n ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if mat [ i ] [ i ] == mat [ i ] [ n - i - 1 ] : NEWLINE INDENTINDENTINDENT res = res + 1 NEWLINE DEDENT DEDENT return res NEWLINE DEDENT mat = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] NEWLINE print ( countCommon ( mat , 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1713_A_50",
            "java_code": "import java . io . * ; class GFG { static int centeredTetrahedralNumber ( int n ) { return ( 2 * n + 1 ) * ( n * n + n + 3 ) / 3 ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( centeredTetrahedralNumber ( n ) ) ; } }",
            "python_code": "def centeredTetrahedralNumber ( n ) : NEWLINE INDENT return ( 2 * n + 1 ) * ( n * n + n + 3 ) // 3 NEWLINE DEDENT n = 6 NEWLINE print ( centeredTetrahedralNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1727_A_51",
            "java_code": "import java . io . * ; class GFG { static int centered_square_num ( int n ) { return n * n + ( ( n - 1 ) * ( n - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . print ( n + \"th Centered\" + \" square number: \" + centered_square_num ( n ) ) ; } }",
            "python_code": "def centered_square_num ( n ) : NEWLINE INDENT return n * n + ( ( n - 1 ) * ( n - 1 ) ) NEWLINE DEDENT n = 7 NEWLINE print ( \"%sth Centered square number: \" % n , centered_square_num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2379_A_52",
            "java_code": "import java . io . * ; class GFG { static long countOfMultiples ( long n ) { return ( n / 3 + n / 5 - n / 15 ) ; } static public void main ( String [ ] args ) { System . out . println ( countOfMultiples ( 6 ) ) ; System . out . println ( countOfMultiples ( 16 ) ) ; } }",
            "python_code": "def countOfMultiples ( n ) : NEWLINE INDENT return ( int ( n / 3 ) + int ( n / 5 ) - int ( n / 15 ) ) ; NEWLINE DEDENT print ( countOfMultiples ( 6 ) ) NEWLINE print ( countOfMultiples ( 16 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_807_A_53",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class Gfg { static int getHeight ( int X ) { return ( 2 * X ) ; } public static void main ( String [ ] args ) throws java . lang . Exception { int X = 35 ; System . out . println ( getHeight ( X ) ) ; } }",
            "python_code": "def getHeight ( X ) : NEWLINE INDENT return ( 2 * X ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT X = 35 NEWLINE print ( getHeight ( X ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2150_A_54",
            "java_code": "class GFG { static float Cel_To_Fah ( float n ) { return ( ( n * 9.0f / 5.0f ) + 32.0f ) ; } public static void main ( String [ ] args ) { float n = 20.0f ; System . out . println ( Cel_To_Fah ( n ) ) ; } }",
            "python_code": "def Cel_To_Fah ( n ) : NEWLINE INDENT return ( n * 1.8 ) + 32 NEWLINE DEDENT n = 20 NEWLINE print ( int ( Cel_To_Fah ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1382_B_55",
            "java_code": " import java . math . * ; import java . util . * ; import java . io . * ; public class gr13b {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) s = sum ( l ) if s == n and n % 2 : print ( \"First\" ) elif s == n and n % 2 == 0 : print ( \"Second\" ) else : w = 0 for i in l : if i == 1 : w = 1 - w else : break if w == 0 : print ( \"First\" ) else : print ( \"Second\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3347_A_56",
            "java_code": "import java . util . * ; class GFG { static int findRotations ( String str ) { String tmp = str + str ; int n = str . length ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { String substring = tmp . substring ( i , str . length ( ) ) ; if ( str == substring ) return i ; } return n ; } public static void main ( String [ ] args ) { String str = \"abc\" ; System . out . println ( findRotations ( str ) ) ; } }",
            "python_code": "def findRotations ( str ) : NEWLINE INDENT tmp = str + str NEWLINE n = len ( str ) NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT substring = tmp [ i : i + n ] NEWLINE if ( str == substring ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return n NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT str = \"abc\" NEWLINE print ( findRotations ( str ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_520_B_57",
            "java_code": "import java . util . Scanner ;  public class codeforces { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long start = in . nextLong ( ) ; long end = in . nextLong ( ) ; int click = 0 ; while ( start < end ) { if ( end % 2 == 0 ) { end /= 2 ; } else { end += 1 ; } click ++ ; } System . out . println ( click + start - end ) ; } }",
            "python_code": "from collections import deque  n , m = map ( int , input ( ) . split ( ) ) a = [ 1000000 ] * 10100 a [ n ] = 0 q = deque ( ) q . append ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2095_A_58",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int counLastDigitK ( int low , int high , int k ) { int count = ( high - low ) / 10 ; if ( high % 10 >= k ) count ++ ; if ( low % 10 > k ) count -- ; return count ; } public static void main ( String argc [ ] ) { int low = 3 , high = 35 , k = 3 ; System . out . println ( counLastDigitK ( low , high , k ) ) ; } }",
            "python_code": "def counLastDigitK ( low , high , k ) : NEWLINE INDENT count = ( high - low ) / 10 NEWLINE if ( high % 10 >= k ) : NEWLINE INDENTINDENT count += 1 NEWLINE DEDENT if ( low % 10 > k ) : NEWLINE INDENTINDENT count -= 1 NEWLINE DEDENT return int ( count ) NEWLINE DEDENT low = 3 NEWLINE high = 35 NEWLINE k = 3 NEWLINE print ( counLastDigitK ( low , high , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_935_A_59",
            "java_code": "import java . io . IOException ; import java . util . Scanner ;  public class fafa { public static void main ( String [ ] args ) throws IOException { Scanner scanner = new Scanner ( System . in ) ; int m = scanner . nextInt ( ) ; int count = 0 ; for ( int i = 1 ; i <= m / 2 ; i ++ ) { if ( ( m - i ) % i == 0 ) { count += 1 ; } } System . out . print ( count ) ; }  }",
            "python_code": "from collections import Counter  def solve ( ) : n = int ( input ( ) ) count = 1  for i in range ( 2 , n // 2 + 1 ) : if n % i == 0 : count += 1  return count  print ( solve ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1940_A_60",
            "java_code": "class GFG { static String largestSubStr ( String s ) { while ( s . length ( ) != 0 && s . charAt ( s . length ( ) - 1 ) == '1' ) s = s . substring ( 0 , s . length ( ) - 1 ) ; if ( s . length ( ) == 0 ) return \"-1\" ; else return s ; } public static void main ( String [ ] args ) { String s = \"11001\" ; System . out . println ( largestSubStr ( s ) ) ; } }",
            "python_code": "def largestSubStr ( s ) : NEWLINE INDENT while ( len ( s ) and s [ len ( s ) - 1 ] == '1' ) : NEWLINE INDENTINDENT s = s [ : len ( s ) - 1 ] ; NEWLINE DEDENT if ( len ( s ) == 0 ) : NEWLINE INDENTINDENT return \"-1\" ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return s ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s = \"11001\" ; NEWLINE print ( largestSubStr ( s ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_5_B_61",
            "java_code": "import java . io . * ;  public class Main { static final int N = 1010 ; static String [ ] arr = new String [ N ] ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; static BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import sys todo = [ ] base = 0 flag = Truefor line in sys . stdin : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1186_A_62",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n , m , k ; n = sc . nextInt ( ) ; m = sc . nextInt ( ) ; k = sc . nextInt ( ) ; if ( ( n <= m ) && ( n <= k ) ) { System . out . println ( \"yes\" ) ; } else System . out . println ( \"No\" ) ; } }",
            "python_code": "n , m , k = ( int ( i ) for i in input ( ) . split ( ) ) if ( m >= n and k >= n ) : print ( \"Yes\" ) else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_954_B_63",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) s = input ( )  best = nfor i in range ( 2 , n // 2 + 1 ) : if s [ : i ] == s [ i : 2 * i ] : cur = i + 1 + n - 2 * i best = min ( best , cur ) print ( best ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_747_A_64",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Main main = new Main ( ) ; Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int num1 = 0 ; int num2 = 0 ; for ( int i = 1 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) { num1 = i ; num2 = n / i ; } } System . out . println ( num1 + \" \" + num2 ) ; } } ",
            "python_code": "n = int ( input ( ) ) a = int ( n ** 0.5 ) while n % a : a -= 1 print ( a , n // a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4677_A_65",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int edgeCover ( int n ) { int result = 0 ; result = ( int ) Math . ceil ( ( double ) n / 2.0 ) ; return result ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . print ( edgeCover ( n ) ) ; } }",
            "python_code": "import math NEWLINE def edgeCover ( n ) : NEWLINE INDENT result = 0 NEWLINE result = math . ceil ( n / 2.0 ) NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 NEWLINE print ( int ( edgeCover ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1296_B_66",
            "java_code": "import java . util . * ;  public class CodeForces { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int number = sc . nextInt ( ) ; int sum = number ; int cesh = 0 ; while ( number > 9 ) { int q = number % 10 ; cesh += number / 10 ; number /= 10 ; number += q ; } System . out . println ( sum + cesh ) ; } }  }",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) ans = 0 while n >= 10 : ans += ( 10 * ( n // 10 ) ) n = n - ( 9 * ( n // 10 ) ) ans += n print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1371_A_67",
            "java_code": "import java . util . * ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- != 0 ) { long n = sc . nextLong ( ) ; System . out . println ( ( n + 1 ) / 2 ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) print ( ( n + 1 ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4913_A_68",
            "java_code": "public class GFG { static void printExpansion ( String str ) { for ( int i = str . length ( ) - 1 ; i >= 0 ; i -- ) { String subStr = str . substring ( i ) ; System . out . print ( subStr ) ; } } public static void main ( String args [ ] ) { String str = \"geeks\" ; printExpansion ( str ) ; } }",
            "python_code": "def printExpansion ( str ) : NEWLINE INDENT for i in range ( len ( str ) - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT for j in range ( i , len ( str ) ) : NEWLINE INDENTINDENTINDENT print ( str [ j ] , end = \"\" ) NEWLINE DEDENT DEDENT DEDENT str = \"geeks\" NEWLINE printExpansion ( str ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_834_A_69",
            "java_code": "import java . io . * ; class GFG { static void angleextcycquad ( int z ) { System . out . print ( \"The exterior angle of the\" + \" cyclic quadrilateral is \" + z + \" degrees\" ) ; } public static void main ( String [ ] args ) { int z = 48 ; angleextcycquad ( z ) ; } }",
            "python_code": "def angleextcycquad ( z ) : NEWLINE INDENT print ( \"The exterior angle of the\" , end = \"\" ) ; NEWLINE print ( \"cyclic quadrilateral is \" , end = \"\" ) ; NEWLINE print ( z , \" degrees\" ) ; NEWLINE DEDENT z = 48 ; NEWLINE angleextcycquad ( z ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1459_B_70",
            "java_code": "import java . util . Scanner ;  public class B1459 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int answer ; if ( N % 2 == 0 ) { answer = ( N / 2 + 1 ) * ( N / 2 + 1 ) ; } else { answer = ( N + 2 ) * ( N + 2 ) / 2 ; } System . out . println ( answer ) ; }  }",
            "python_code": "n = int ( input ( ) ) NEWLINE if ( n % 2 == 0 ) : NEWLINE INDENT print ( int ( ( n / 2 + 1 ) ** 2 ) ) else : NEWLINE n = ( n + 1 ) / 2 NEWLINE DEDENT print ( int ( 4 + ( ( n - 1 ) * ( 2 * 8 + ( n - 2 ) * 4 ) ) / 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1200_A_71",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; String str = br . readLine ( ) ; int lastvacant = - 1 ; int [ ] ans = new int [ 10 ] ;",
            "python_code": "n = int ( input ( ) ) vet = list ( input ( ) ) res = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] for item in vet : if item == 'L' : pos = res . index ( 0 ) res [ pos ] = 1  elif item == 'R' : res . reverse ( ) pos = 9 - res . index ( 0 ) res . reverse ( ) res [ pos ] = 1  else : res [ int ( item ) ] = 0  str1 = '' . join ( [ str ( elem ) for elem in res ] ) print ( str1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1392_A_72",
            "java_code": "import java . io . * ; public class GFG { static void divide ( int n , int m ) { System . out . println ( \"Remainder = \" + ( ( n ) & ( m - 1 ) ) ) ; System . out . println ( \"Quotient = \" + ( n > > ( int ) ( Math . log ( m ) / Math . log ( 2 ) ) ) ) ; } static public void main ( String [ ] args ) { int n = 43 , m = 8 ; divide ( n , m ) ; } }",
            "python_code": "import math NEWLINE def divide ( n , m ) : NEWLINE INDENT print ( \"Remainder = \" , ( ( n ) & ( m - 1 ) ) ) NEWLINE print ( \"Quotient = \" , ( n >> ( int ) ( math . log2 ( m ) ) ) ) NEWLINE DEDENT n = 43 NEWLINE m = 8 NEWLINE divide ( n , m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1228_B_73",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ; import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ;  public class RoughBackup {  static Scanner scn = new Scanner ( System . in ) ;  public static void main ( String [ ] args ) throws Exception { int h = scn . nextInt ( ) ;",
            "python_code": "M = ( 10 ** 9 ) + 7 h , w = map ( int , input ( ) . split ( ) ) r = list ( map ( int , input ( ) . split ( ) ) ) c = list ( map ( int , input ( ) . split ( ) ) ) ans = 1 mat = [ ] for i in range ( h + 1 ) : o = [ 0 ] * ( w + 1 ) mat . append ( o )  for row in range ( h ) : col = r [ row ] for x in range ( col ) : if mat [ row ] [ x ] == 0 : mat [ row ] [ x ] = 1  mat [ row ] [ col ] = 2  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4080_A_74",
            "java_code": "import java . io . * ; class Nth { static float CalculateRatio ( float m , float n ) { return ( 2 * m - 1 ) / ( 2 * n - 1 ) ; } } class GFG { public static void main ( String [ ] args ) { float m = 6 , n = 2 ; Nth a = new Nth ( ) ; System . out . println ( a . CalculateRatio ( m , n ) ) ; } }",
            "python_code": "def CalculateRatio ( m , n ) : NEWLINE INDENT return ( 2 * m - 1 ) / ( 2 * n - 1 ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT m = 6 ; NEWLINE n = 2 ; NEWLINE print ( float ( CalculateRatio ( m , n ) ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1060_A_75",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner lol = new Scanner ( System . in ) ;  int n = lol . nextInt ( ) ; int num8 = 0 ; String nn = lol . next ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( '8' == nn . charAt ( i ) ) { num8 ++ ; } } int Fina_res = 0 ; for ( int i = 0 ; i < n / 11 ; i ++ ) { if ( num8 == 0 ) break ; Fina_res ++ ; num8 -- ; } System . out . println ( Fina_res ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) if s . count ( '8' ) == 0 : print ( 0 ) elif len ( s ) < 11 : print ( 0 ) else : x = n // 11 y = s . count ( '8' ) if x <= y : print ( x ) else : print ( y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_841_B_76",
            "java_code": "import java . io . * ; import java . util . * ;    public class A {",
            "python_code": "n = int ( input ( ) ) a = [ int ( x ) for x in input ( ) . split ( ) ] c = 0 flag = 0 for i in range ( n ) : if a [ i ] % 2 != 0 : flag = 1 breakif flag == 1 : print ( 'First' ) else : print ( 'Second' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_197_A_77",
            "java_code": "class GFG { static void makePolygon ( double a ) { double n = 360 / ( 180 - a ) ; if ( n == ( int ) n ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } public static void main ( String [ ] args ) { double a = 90 ; makePolygon ( a ) ; } }",
            "python_code": "def makePolygon ( a ) : NEWLINE INDENT n = 360 / ( 180 - a ) NEWLINE if n == int ( n ) : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 90 NEWLINE makePolygon ( a ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_570_B_78",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) if n == 1 : print ( 1 ) else : print ( m - 1 if m - 1 >= n - m else m + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4743_A_79",
            "java_code": "class GFG { static boolean oppositeSigns ( int x , int y ) { return ( ( x ^ y ) < 0 ) ; } public static void main ( String [ ] args ) { int x = 100 , y = - 100 ; if ( oppositeSigns ( x , y ) == true ) System . out . println ( \"Signs are opposite\" ) ; else System . out . println ( \"Signs are not opposite\" ) ; } }",
            "python_code": "def oppositeSigns ( x , y ) : NEWLINE INDENT return ( ( x ^ y ) < 0 ) ; NEWLINE DEDENT x = 100 NEWLINE y = 1 NEWLINE if ( oppositeSigns ( x , y ) == True ) : NEWLINE INDENT print \"Signs are opposite\" NEWLINE DEDENT else : NEWLINE INDENT print \"Signs are not opposite\" NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_343_B_80",
            "java_code": "import java . util . Stack ; public class p343B { public static void main ( String [ ] args ) { Stack < Character > st = new Stack < > ( ) ; char pre = ' ' ; for ( char c : new java . util . Scanner ( System . in ) . next ( ) . toCharArray ( ) ) { if ( c == pre ) st . pop ( ) ; else st . add ( c ) ; if ( ! st . isEmpty ( ) ) pre = st . peek ( ) ; else pre = ' ' ; } System . out . println ( st . empty ( ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5022_A_81",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 3 ) + ( int ) Math . pow ( n , 2 ) ; } public static void main ( String arr [ ] ) { int N = 3 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 2 * pow ( n , 3 ) + pow ( n , 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 3 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_221_A_82",
            "java_code": "import java . util . * ;   public class dummycodes {  public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; System . out . print ( n + \" \" ) ; for ( int i = 1 ; i <= n - 1 ; i ++ ) { System . out . print ( i + \" \" ) ; } } }  ",
            "python_code": "N = int ( input ( ) ) print ( N , * range ( 1 , N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2014_A_83",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int calculateSum ( int n ) { return n * ( n + 1 ) / 2 + n * ( n + 1 ) * ( 2 * n + 1 ) / 6 ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . print ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) // 2 + n * ( n + 1 ) * ( 2 * n + 1 ) // 6 ) NEWLINE DEDENT n = 3 NEWLINE print ( \"Sum = \" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1370_A_84",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; while ( t -- > 0 ) { int n = scanner . nextInt ( ) ; System . out . println ( n % 2 == 0 ? n / 2 : ( n - 1 ) / 2 ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) print ( n // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1223_A_85",
            "java_code": "import java . util . Scanner ;  public class CME { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int q = in . nextInt ( ) ; int n ; while ( q -- != 0 ) { n = in . nextInt ( ) ; if ( n == 2 ) System . out . println ( \"2\" ) ; else if ( n % 2 == 0 ) System . out . println ( \"0\" ) ; else System . out . println ( \"1\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) if ( n <= 3 ) : print ( 4 - n ) else : print ( n % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1443_A_86",
            "java_code": "import java . util . * ; import java . util . Collections ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) {",
            "python_code": "import sys  input = sys . stdin . buffer . readlinet = int ( input ( ) )  for _ in range ( t ) : n = int ( input ( ) )  print ( \" \" . join ( list ( map ( str , list ( range ( 2 * n + 2 , 4 * n + 1 , 2 ) ) ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_265_B_87",
            "java_code": "import java . util . * ; public class Practice { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] += sc . nextInt ( ) ; } int ans = n + arr [ 0 ] ; for ( int i = 0 ; i < arr . length - 1 ; i ++ ) { ans += Math . abs ( arr [ i + 1 ] - arr [ i ] ) + 1 ; } System . out . println ( ans ) ; } } ",
            "python_code": "for _ in range ( 1 ) : n = int ( input ( ) ) currH = 0 total = 0 for i in range ( n ) : h = int ( input ( ) ) if currH <= h : total += h - currH + 2 currH = h  else : total += currH - h + 2 currH = h  print ( total - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_804_A_88",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n == 2 ) { System . out . println ( 0 ) ; return ; } if ( n % 2 != 0 ) System . out . println ( ( int ) Math . ceil ( n / 2 ) ) ; else System . out . println ( ( ( n / 2 ) + n ) % ( n + 1 ) ) ;  } }",
            "python_code": "n = int ( input ( ) ) if n == 1 : print ( \"0\" ) elif n % 2 == 0 : print ( n // 2 - 1 ) else : print ( ( n // 2 - 1 ) + ( ( n // 2 + 1 ) + ( n + 1 ) // 2 ) % n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4784_A_89",
            "java_code": "import java . io . * ; class GFG { static int averageOdd ( int n ) { if ( n % 2 == 0 ) { System . out . println ( \"Invalid Input\" ) ; return - 1 ; } return ( n + 1 ) / 2 ; } public static void main ( String args [ ] ) { int n = 15 ; System . out . println ( averageOdd ( n ) ) ; } }",
            "python_code": "def averageOdd ( n ) : NEWLINE INDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT print ( \"Invalid Input\" ) NEWLINE return - 1 NEWLINE DEDENT return ( n + 1 ) // 2 NEWLINE DEDENT n = 15 NEWLINE print ( averageOdd ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2147_A_90",
            "java_code": "import java . io . * ; class GFG { static int binaryToDecimal ( String n ) { String num = n ; int dec_value = 0 ; int base = 1 ; int len = num . length ( ) ; for ( int i = len - 1 ; i >= 0 ; i -- ) { if ( num . charAt ( i ) == '1' ) dec_value += base ; base = base * 2 ; } return dec_value ; } public static void main ( String [ ] args ) { String num = new String ( \"10101001\" ) ; System . out . println ( binaryToDecimal ( num ) ) ; } }",
            "python_code": "def binaryToDecimal ( n ) : NEWLINE INDENT num = n ; NEWLINE dec_value = 0 ; NEWLINE base1 = 1 ; NEWLINE len1 = len ( num ) ; NEWLINE for i in range ( len1 - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT if ( num [ i ] == '1' ) : NEWLINE INDENTINDENTINDENT dec_value += base1 ; NEWLINE DEDENT base1 = base1 * 2 ; NEWLINE DEDENT return dec_value ; NEWLINE DEDENT num = \"10101001\" ; NEWLINE print ( binaryToDecimal ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1145_A_91",
            "java_code": "class GFG { static void printSeriesSum ( int N ) { double sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { if ( i % 2 == 1 ) { sum += ( double ) i / ( i + 1 ) ; } else { sum -= ( double ) i / ( i + 1 ) ; } } System . out . print ( sum + \"\\n\" ) ; } public static void main ( String [ ] args ) { int N = 10 ; printSeriesSum ( N ) ; } }",
            "python_code": "def printSeriesSum ( N ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT if ( i & 1 ) : NEWLINE INDENTINDENTINDENT sum += i / ( i + 1 ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT sum -= i / ( i + 1 ) ; NEWLINE DEDENT DEDENT print ( sum ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 10 ; NEWLINE printSeriesSum ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1429_A_92",
            "java_code": "import java . io . * ; class GFG { static int sumNatural ( int n ) { int sum = ( n * ( n + 1 ) ) ; return sum ; } static int sumEven ( int l , int r ) { return sumNatural ( r / 2 ) - sumNatural ( ( l - 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int l = 2 , r = 5 ; System . out . println ( \"Sum of Natural numbers from L to R is \" + sumEven ( l , r ) ) ; } }",
            "python_code": "def sumNatural ( n ) : NEWLINE INDENT sum = ( n * ( n + 1 ) ) NEWLINE return int ( sum ) NEWLINE DEDENT def sumEven ( l , r ) : NEWLINE INDENT return ( sumNatural ( int ( r / 2 ) ) - sumNatural ( int ( ( l - 1 ) / 2 ) ) ) NEWLINE DEDENT l , r = 2 , 5 NEWLINE print ( \"Sum of Natural numbers\" , \"from L to R is\" , sumEven ( l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2040_A_93",
            "java_code": "class GFG { static int calculate ( int x , int k , int m ) { int result = x ; k -- ; while ( k -- > 0 ) { result = ( int ) Math . pow ( result , x ) ; if ( result > m ) result %= m ; } return result ; } public static void main ( String args [ ] ) { int x = 5 , k = 2 , m = 3 ; System . out . println ( calculate ( x , k , m ) ) ; } }",
            "python_code": "import math NEWLINE def calculate ( x , k , m ) : NEWLINE INDENT result = x ; NEWLINE k = k - 1 ; NEWLINE while ( k ) : NEWLINE INDENTINDENT result = math . pow ( result , x ) ; NEWLINE if ( result > m ) : NEWLINE INDENTINDENTINDENT result = result % m ; NEWLINE DEDENT k = k - 1 ; NEWLINE DEDENT return int ( result ) ; NEWLINE DEDENT x = 5 ; NEWLINE k = 2 ; NEWLINE m = 3 ; NEWLINE print ( calculate ( x , k , m ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_337_A_94",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n , k = [ int ( i ) for i in input ( ) . split ( ) ] m = [ int ( i ) for i in input ( ) . split ( ) ] m . sort ( ) a = m [ n - 1 ] - m [ 0 ] for i in range ( 1 , k - 1 ) : if i + n - 1 > k - 1 : break c = m [ i + n - 1 ] - m [ i ] if c < a : a = m [ i + n - 1 ] - m [ i ] print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1457_A_95",
            "java_code": "class GFG { static int count ( int n ) { int x = ( n / 3 ) - 1 ; if ( n % 3 > 0 ) { x ++ ; } return ( 4 * x + 4 * n ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( count ( n ) + \"\\n\" ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT x = ( n // 3 ) - 1 ; NEWLINE if ( n % 3 > 0 ) : NEWLINE INDENTINDENT x += 1 ; NEWLINE DEDENT return ( 4 * x + 4 * n ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 ; NEWLINE print ( count ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2892_A_96",
            "java_code": "import java . io . * ; class GFG { static int number_of_digits ( int n ) { int i ; int res ; int sum = 0 ; for ( i = 4 , res = 1 ; ; i *= 4 , res ++ ) { sum += i ; if ( sum >= n ) break ; } return res ; } public static void main ( String [ ] args ) { int n = 21 ; System . out . println ( number_of_digits ( n ) ) ; } }",
            "python_code": "def number_of_digits ( n ) : NEWLINE INDENT i = 4 ; NEWLINE res = 1 ; NEWLINE sum = 0 ; NEWLINE while ( True ) : NEWLINE INDENTINDENT i *= 4 ; NEWLINE res += 1 ; NEWLINE sum += i ; NEWLINE if ( sum >= n ) : NEWLINE INDENTINDENTINDENT break ; NEWLINE DEDENT DEDENT return res ; NEWLINE DEDENT n = 21 ; NEWLINE print ( number_of_digits ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_632_A_97",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class A632 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "n , p = map ( int , input ( ) . split ( ) ) a = [ ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_676_A_98",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) lst = [ int ( i ) for i in input ( ) . split ( ) ] mn = lst . index ( min ( lst ) ) mx = lst . index ( max ( lst ) )  print ( max ( mn , n - mn - 1 , mx , n - mx - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_365_B_99",
            "java_code": "import java . util . * ; public class TheFibonacciSegment {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 cnt = 2 for i in range ( 2 , n ) : if a [ i ] == ( a [ i - 1 ] + a [ i - 2 ] ) : cnt += 1 else : cnt = 2 ans = max ( ans , cnt ) if n <= 2 : ans = nprint ( ans )        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1214_A_100",
            "java_code": "import java . io . * ; import java . util . Scanner ; public class Main {",
            "python_code": "n = int ( input ( ) ) d = int ( input ( ) ) e = int ( input ( ) ) i = 0 ans = nwhile ( i * e * 5 <= n ) : ans = min ( ans , ( n - i * e * 5 ) % d ) i += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_432_A_101",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int count = 0 ; int tot = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int m = sc . nextInt ( ) ; if ( 5 - m >= k ) { count ++ ; } if ( count == 3 ) { tot ++ ; count = 0 ; } } System . out . println ( tot ) ; } } ;",
            "python_code": "from collections import Counterimport math  def solve ( ) : n , k = list ( map ( int , input ( ) . split ( ) ) ) array = list ( map ( int , input ( ) . split ( ) ) ) array . sort ( ) if ( n % 3 == 0 ) : end = n else : end = n - n % 3  i , count = 0 , 0  while i < end - 2 : if array [ i ] + k <= 5 and array [ i + 1 ] + k <= 5 and array [ i + 2 ] + k <= 5 : count += 1 else : break i += 3 return count   print ( solve ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_52_B_102",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ; import java . awt . Point ; public class Main {",
            "python_code": "import sysfrom array import array NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1325_B_103",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ;  public class fifteen {  public static void main ( String [ ] args ) {",
            "python_code": "for i in range ( int ( input ( ) ) ) : a = input ( ) print ( len ( set ( input ( ) . split ( ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1075_A_104",
            "java_code": "import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; if ( a + b <= n + 1 ) { System . out . println ( \"White\" ) ; } else { System . out . println ( \"Black\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) x , y = map ( int , input ( ) . split ( \" \" ) ) if x + y > n + 1 : print ( \"Black\" ) else : print ( \"White\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3431_A_105",
            "java_code": "import java . io . * ; class GFG { static int count ( int S [ ] , int m , int n ) { if ( n == 0 ) return 1 ; if ( n < 0 ) return 0 ; if ( m <= 0 && n >= 1 ) return 0 ; return count ( S , m - 1 , n ) + count ( S , m , n - S [ m - 1 ] ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int m = arr . length ; System . out . println ( count ( arr , m , 4 ) ) ; } }",
            "python_code": "def count ( S , m , n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if ( n < 0 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT if ( m <= 0 and n >= 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return count ( S , m - 1 , n ) + count ( S , m , n - S [ m - 1 ] ) ; NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE m = len ( arr ) NEWLINE print ( count ( arr , m , 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3565_A_106",
            "java_code": "import java . io . * ; class GFG { static int minimumNumbers ( int n , int s ) { if ( ( s % n ) > 0 ) return s / n + 1 ; else return s / n ; } public static void main ( String [ ] args ) { int n = 5 ; int s = 11 ; System . out . println ( minimumNumbers ( n , s ) ) ; } }",
            "python_code": "def minimumNumbers ( n , s ) : NEWLINE INDENT if ( s % n ) : NEWLINE INDENTINDENT return s / n + 1 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return s / n ; NEWLINE DEDENT DEDENT n = 5 ; NEWLINE s = 11 ; NEWLINE print ( int ( minimumNumbers ( n , s ) ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_897_B_107",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int k = scan . nextInt ( ) ; int P = scan . nextInt ( ) ; long sum = 0 ; for ( int i = 1 ; i <= k ; i ++ ) { String first = i + \"\" ; StringBuilder last = new StringBuilder ( first ) . reverse ( ) ; sum += Long . parseLong ( first + last ) ; sum = sum % P ; } System . out . println ( sum ) ; } }",
            "python_code": "k , p = map ( int , input ( ) . split ( ) ) res = 0 for i in range ( 1 , k + 1 ) : res += int ( str ( i ) + ( str ( i ) [ : : - 1 ] ) ) res %= pprint ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_632_B_108",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class B632 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "n = int ( input ( ) ) p = list ( map ( int , input ( ) . split ( ) ) ) s = input ( ) total = 0 for i in range ( n ) : if s [ i ] == 'B' : total += p [ i ] ans = totalcur = totalfor i in range ( n ) : if s [ i ] == 'A' : cur += p [ i ] else : cur -= p [ i ] ans = max ( ans , cur )  cur = totalfor i in reversed ( range ( n ) ) : if s [ i ] == 'A' : cur += p [ i ] else : cur -= p [ i ] ans = max ( ans , cur )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_448_A_109",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "import sysinput = sys . stdin . readline  ''''''  from math import ceil  a1 , a2 , a3 = map ( int , input ( ) . split ( ) ) b1 , b2 , b3 = map ( int , input ( ) . split ( ) ) n = int ( input ( ) ) shelves_cup = ceil ( ( a1 + a2 + a3 ) / 5 ) shelves_medal = ceil ( ( b1 + b2 + b3 ) / 10 )  print ( \"YES\" if shelves_cup + shelves_medal <= n else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1627_A_110",
            "java_code": "import java . util . * ; public class SortExample { static void mySort ( Integer [ ] arr ) { int n = arr . length ; Arrays . sort ( arr , 0 , n / 2 ) ; Arrays . sort ( arr , n / 2 , n , Collections . reverseOrder ( ) ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , 7 } ; mySort ( arr ) ; System . out . printf ( \"Modified arr[] : %s\" , Arrays . toString ( arr ) ) ; } }",
            "python_code": "def mySort ( arr , n ) : NEWLINE INDENT arr1 = arr [ : n // 2 ] NEWLINE arr2 = arr [ n // 2 : ] NEWLINE arr1 . sort ( ) NEWLINE arr2 . sort ( reverse = True ) NEWLINE return arr1 + arr2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , 7 ] NEWLINE n = len ( arr ) NEWLINE arr = mySort ( arr , n ) NEWLINE print ( \"Modified Array : \" ) NEWLINE print ( arr ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2686_A_111",
            "java_code": "import java . io . * ; public class GFG { static boolean allCharactersSame ( String s ) { int n = s . length ( ) ; for ( int i = 1 ; i < n ; i ++ ) if ( s . charAt ( i ) != s . charAt ( 0 ) ) return false ; return true ; } static public void main ( String [ ] args ) { String s = \"aaa\" ; if ( allCharactersSame ( s ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def allCharactersSame ( s ) : NEWLINE INDENT n = len ( s ) NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT if s [ i ] != s [ 0 ] : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT DEDENT return True NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s = \"aaa\" NEWLINE if allCharactersSame ( s ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1328_A_112",
            "java_code": "import java . util . * ;  public class test { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int testCase = scanner . nextInt ( ) ; for ( int i = 0 ; i < testCase ; i ++ ) { int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; if ( a % b == 0 ) { System . out . println ( 0 ) ; } else System . out . println ( b - ( a % b ) ) ; } }  }",
            "python_code": "t = int ( input ( ) ) while ( t ) : a , b = map ( int , input ( ) . split ( ) ) if ( a % b == 0 ) : print ( '0' ) else : print ( b - ( a % b ) ) t -= 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_899_A_113",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) nums = list ( map ( int , input ( ) . split ( ' ' ) ) ) one = nums . count ( 1 ) two = nums . count ( 2 ) if one == 0 : print ( 0 ) elif two == 0 : print ( one // 3 ) else : discard = max ( one , two ) - min ( one , two ) form = len ( nums ) - discard if discard > 2 and one > two : discard = discard // 3 print ( ( form // 2 ) + discard ) else : print ( form // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4062_A_114",
            "java_code": "import java . io . * ; class GFG { static int factorial ( int n ) { int res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) res = res * i ; return res ; } static int calculateSeries ( int n ) { return 2 + ( n * n + n - 2 ) * factorial ( n + 1 ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( calculateSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def factorial ( n ) : NEWLINE INDENT res = 1 NEWLINE i = 2 NEWLINE for i in ( n + 1 ) : NEWLINE INDENTINDENT res = res * i NEWLINE DEDENT return res NEWLINE DEDENT def calculateSeries ( n ) : NEWLINE INDENT return ( 2 + ( n * n + n - 2 ) * math . factorial ( n + 1 ) ) NEWLINE DEDENT n = 3 NEWLINE print ( calculateSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1702_A_115",
            "java_code": "class GFG { static int MAX = 11 ; static boolean isMultipleof5 ( int n ) { char str [ ] = new char [ MAX ] ; int len = str . length ; if ( str [ len - 1 ] == '5' || str [ len - 1 ] == '0' ) return true ; return false ; } public static void main ( String [ ] args ) { int n = 19 ; if ( isMultipleof5 ( n ) == true ) System . out . println ( n + \" is multiple \" + \"of 5\" ) ; else System . out . println ( n + \" is not a \" + \"multiple of 5\" ) ; } }",
            "python_code": "MAX = 11 ; NEWLINE def isMultipleof5 ( n ) : NEWLINE INDENT s = str ( n ) ; NEWLINE l = len ( s ) ; NEWLINE if ( s [ l - 1 ] == '5' or s [ l - 1 ] == '0' ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT n = 19 ; NEWLINE if ( isMultipleof5 ( n ) == True ) : NEWLINE INDENT print ( n , \"is multiple of 5\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( n , \"is not a multiple of 5\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3734_A_116",
            "java_code": "class GFG { static double increaseInVol ( double l , double b , double h ) { double percentInc = ( 1 + ( l / 100 ) ) * ( 1 + ( b / 100 ) ) * ( 1 + ( h / 100 ) ) ; percentInc -= 1 ; percentInc *= 100 ; return percentInc ; } public static void main ( String [ ] args ) { double l = 50 , b = 20 , h = 10 ; System . out . println ( increaseInVol ( l , b , h ) + \"%\" ) ; } }",
            "python_code": "def increaseInVol ( l , b , h ) : NEWLINE INDENT percentInc = ( ( 1 + ( l / 100 ) ) * ( 1 + ( b / 100 ) ) * ( 1 + ( h / 100 ) ) ) NEWLINE percentInc -= 1 NEWLINE percentInc *= 100 NEWLINE return percentInc NEWLINE DEDENT l = 50 NEWLINE b = 20 NEWLINE h = 10 NEWLINE print ( increaseInVol ( l , b , h ) , \"%\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5289_A_117",
            "java_code": "import java . io . * ; class GFG { static void NicomachuTheorum_sum ( int n ) { int sum = 0 ; for ( int k = 1 ; k <= n ; k ++ ) sum += k * k * k ; int triNo = n * ( n + 1 ) / 2 ; if ( sum == triNo * triNo ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } public static void main ( String [ ] args ) { int n = 5 ; NicomachuTheorum_sum ( n ) ; } }",
            "python_code": "def NicomachuTheorum_sum ( n ) : NEWLINE INDENT sum = 0 ; NEWLINE for k in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += k * k * k ; NEWLINE DEDENT triNo = n * ( n + 1 ) / 2 ; NEWLINE if ( sum == triNo * triNo ) : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) ; NEWLINE DEDENT DEDENT n = 5 ; NEWLINE NicomachuTheorum_sum ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_362_A_118",
            "java_code": "import java . io . * ; import java . util . * ;  import static java . lang . Math . max ; import static java . lang . Math . min ; import static java . lang . StrictMath . abs ;   public class Solution implements Runnable { public static void main ( String [ ] args ) throws IOException , InterruptedException {",
            "python_code": "n = int ( input ( ) ) for t in range ( n ) : if t : input ( ) board = [ [ c for c in input ( ) ] for i in range ( 8 ) ] k1 , k2 = ( ( i , j ) for i in range ( 8 ) for j in range ( 8 ) if board [ i ] [ j ] == 'K' ) if ( k1 [ 0 ] - k2 [ 0 ] ) % 4 == 0 and ( k1 [ 1 ] - k2 [ 1 ] ) % 4 == 0 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4013_A_119",
            "java_code": "import java . io . * ; public class GFG { static long squareRoot ( int n ) { int x = n ; int y = 1 ; while ( x > y ) { x = ( x + y ) / 2 ; y = n / x ; } return ( long ) x ; } static public void main ( String [ ] args ) { int n = 49 ; System . out . println ( \"root of \" + n + \" is \" + squareRoot ( n ) ) ; } }",
            "python_code": "def squareRoot ( n ) : NEWLINE INDENT x = n ; NEWLINE y = 1 ; NEWLINE while ( x > y ) : NEWLINE INDENTINDENT x = ( x + y ) / 2 ; NEWLINE y = n / x ; NEWLINE DEDENT return x ; NEWLINE DEDENT n = 49 ; NEWLINE print ( \"root of\" , n , \"is\" , squareRoot ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2185_A_120",
            "java_code": "class GFG { static int countNumbers ( int l , int r ) { return ( ( r / 6 ) - ( l - 1 ) / 6 ) ; } public static void main ( String [ ] args ) { int l = 1000 , r = 6000 ; System . out . println ( countNumbers ( l , r ) ) ; } }",
            "python_code": "def countNumbers ( l , r ) : NEWLINE INDENT return ( ( r // 6 ) - ( l - 1 ) // 6 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l = 1000 ; r = 6000 ; NEWLINE print ( countNumbers ( l , r ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3744_A_121",
            "java_code": "import java . io . * ; class GFG { static int stepRequired ( int n ) { return Integer . bitCount ( n - 1 ) ; } public static void main ( String [ ] args ) { int n = 94 ; System . out . println ( stepRequired ( n ) ) ; } }",
            "python_code": "def stepRequired ( n ) : NEWLINE INDENT return bin ( 94 ) . count ( '1' ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 94 NEWLINE print ( stepRequired ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3161_A_122",
            "java_code": "class GFG { static void findArea ( float a , float b ) { float Area ; Area = ( float ) 3.142 * a * b ; System . out . println ( \"Area: \" + Area ) ; } public static void main ( String [ ] args ) { float a = 5 , b = 4 ; findArea ( a , b ) ; } }",
            "python_code": "def findArea ( a , b ) : NEWLINE INDENT Area = 3.142 * a * b ; NEWLINE print ( \"Area:\" , round ( Area , 2 ) ) ; NEWLINE DEDENT a = 5 ; NEWLINE b = 4 ; NEWLINE findArea ( a , b ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_697_A_123",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "t , s , x = map ( int , input ( ) . split ( ) ) if x >= t : x -= t sss = x // s x = x % s if x == 0 or ( sss != 0 and x == 1 ) : print ( 'YES' ) else : print ( 'NO' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_355_B_124",
            "java_code": " import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {  Scanner s = new Scanner ( System . in ) ; int c [ ] = new int [ 4 ] ; int m = 0 ; int bus = 0 , tro = 0 ; for ( int i = 0 ; i < c . length ; i ++ ) { c [ i ] = s . nextInt ( ) ; }",
            "python_code": "c1 , c2 , c3 , c4 = map ( int , input ( ) . split ( ) ) n , m = map ( int , input ( ) . split ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) t = list ( map ( int , input ( ) . split ( ) ) ) a = 0 for i in range ( n ) : a += min ( c1 * b [ i ] , c2 ) ans = min ( a , c3 ) b = 0 for i in range ( m ) : b += min ( c1 * t [ i ] , c2 ) ans += min ( b , c3 ) print ( min ( ans , c4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2696_A_125",
            "java_code": "import java . io . * ; class GFG { static int evenDecimalValue ( String str , int n ) { int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( str . charAt ( i ) == '0' ) { result += ( n - i ) ; } } return result ; } public static void main ( String [ ] args ) { String str = \"10010\" ; int n = 5 ; System . out . println ( evenDecimalValue ( str , n ) ) ; } }",
            "python_code": "def evenDecimalValue ( str , n ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( str [ i ] == '0' ) : NEWLINE INDENTINDENTINDENT result += ( n - i ) NEWLINE DEDENT DEDENT return result NEWLINE DEDENT str = \"10010\" NEWLINE n = 5 NEWLINE print ( evenDecimalValue ( str , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_886_A_126",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } public static void main ( String [ ] args ) { int a = 2 ; int b = 4 ; System . out . println ( gcd ( a , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if a == 0 : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT a = 2 NEWLINE b = 4 NEWLINE print ( gcd ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_58_B_127",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int flag = 0 ; while ( n != 1 ) { System . out . print ( n + \" \" ) ; flag = 0 ; for ( int i = 2 ; i <= Math . sqrt ( n ) ; i ++ ) { if ( n % i == 0 ) { flag = 1 ; n /= i ; break ; } } if ( flag == 0 ) break ; } System . out . println ( 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE s = nl = [ n ] NEWLINE i = s - 1 NEWLINE while ( s > 0 ) : if NEWLINE i == 0 : NEWLINE break NEWLINE if s % i == 0 : l . append ( i ) NEWLINE s = i NEWLINE i = s - 1 NEWLINE if i == 0 : NEWLINE INDENT break else : NEWLINE i -= 1 NEWLINE DEDENT print ( * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1351_A_128",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Cv {",
            "python_code": "for t in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) print ( a + b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_282_A_129",
            "java_code": "import java . util . Scanner ;  public class BitPlusPlus {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int am = scanner . nextInt ( ) ; int x = 0 ; for ( int i = 0 ; i < am ; i ++ ) { String line = scanner . next ( ) ; if ( line . contains ( \"++\" ) ) x ++ ; else x -- ; } System . out . println ( x ) ; }  }",
            "python_code": "n = int ( input ( ) ) x = 0 for i in range ( n ) : bit_operation = input ( ) if bit_operation == \"X++\" or bit_operation == \"++X\" : x = x + 1 elif bit_operation == \"X--\" or bit_operation == \"--X\" : x = x - 1 print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1199_B_130",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import mathh , l = map ( int , input ( ) . split ( ) ) angle = math . atan ( l / h ) - math . atan ( h / l ) print ( math . tan ( angle ) * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_768_B_131",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main {  private static int MAX = Integer . MAX_VALUE ; private static int MIN = Integer . MIN_VALUE ; private static int MOD = 1000000007 ; static FastScanner sc = new FastScanner ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from sys import stdinimport math  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1421_A_132",
            "java_code": "import java . util . * ; public class sol { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int x = in . nextInt ( ) ; int y = in . nextInt ( ) ; System . out . println ( x ^ y ) ; } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE for _ in range ( t ) : a , b = map ( int , input ( ) . split ( ) ) NEWLINE print ( a ^ b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_706_A_133",
            "java_code": "class GFG { static int maxAND ( int L , int R ) { int maximum = L & R ; for ( int i = L ; i < R ; i ++ ) for ( int j = i + 1 ; j <= R ; j ++ ) maximum = Math . max ( maximum , ( i & j ) ) ; return maximum ; } public static void main ( String [ ] args ) { int L = 1 , R = 632 ; System . out . println ( maxAND ( L , R ) ) ; } }",
            "python_code": "def maxAND ( L , R ) : NEWLINE INDENT maximum = L & R NEWLINE for i in range ( L , R , 1 ) : NEWLINE INDENTINDENT for j in range ( i + 1 , R + 1 , 1 ) : NEWLINE INDENTINDENTINDENT maximum = max ( maximum , ( i & j ) ) NEWLINE DEDENT DEDENT return maximum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT L = 1 NEWLINE R = 632 NEWLINE print ( maxAND ( L , R ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_201_A_134",
            "java_code": " import java . util . * ; import java . lang . * ;  public class Codeforces {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) if n == 3 : print ( 5 ) exit ( ) for i in range ( 1 , 200 ) : if i % 2 != 0 : v = ( i * i ) // 2 + 1 if n <= v : print ( i ) exit ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2578_A_135",
            "java_code": "class GFG { static int log_a_to_base_b ( int a , int b ) { int rslt = ( a > b - 1 ) ? 1 + log_a_to_base_b ( a / b , b ) : 0 ; return rslt ; } public static void main ( String [ ] args ) { int a = 3 ; int b = 2 ; System . out . println ( log_a_to_base_b ( a , b ) ) ; a = 256 ; b = 4 ; System . out . println ( log_a_to_base_b ( a , b ) ) ; } }",
            "python_code": "def log_a_to_base_b ( a , b ) : NEWLINE INDENT rslt = ( 1 + log_a_to_base_b ( a // b , b ) ) if ( a > ( b - 1 ) ) else 0 ; NEWLINE return rslt ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 3 ; NEWLINE b = 2 ; NEWLINE print ( log_a_to_base_b ( a , b ) ) ; NEWLINE a = 256 ; NEWLINE b = 4 ; NEWLINE print ( log_a_to_base_b ( a , b ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3606_A_136",
            "java_code": "import java . util . * ; class Geeks { static float maxVol ( float P , float A ) { float l = ( float ) ( P - Math . sqrt ( P * P - 24 * A ) ) / 12 ; float V = ( float ) ( l * ( A / 2.0 - l * ( P / 4.0 - l ) ) ) ; return V ; } public static void main ( String args [ ] ) { float P = 20 , A = 16 ; System . out . println ( maxVol ( P , A ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def maxVol ( P , A ) : NEWLINE INDENT l = ( P - sqrt ( P * P - 24 * A ) ) / 12 NEWLINE V = l * ( A / 2.0 - l * ( P / 4.0 - l ) ) NEWLINE return V NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT P = 20 NEWLINE A = 16 NEWLINE print ( maxVol ( P , A ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1268_A_137",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from sys import stdin NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_B_138",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) kmin = n // mkmax = n - m  pairMin = m * kmin * ( kmin - 1 ) // 2 + kmin * ( n % m ) pairMax = ( kmax + 1 ) * kmax // 2  print ( pairMin , pairMax ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_120_B_139",
            "java_code": "import java . io . * ; import java . util . * ; public class kuchBhi { public static void main ( String [ ] args ) throws Throwable {",
            "python_code": "import sys  sys . stdin = open ( r'input.txt' , 'r' ) sys . stdout = open ( r'output.txt' , 'w' )  n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) )  i = k - 1 ; while ( True ) : if i == n : i = 0 continue  if a [ i ] == 1 : print ( i + 1 ) break  i += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2017_A_140",
            "java_code": "public class GFG { static int calculateSum ( int n ) { return n * ( n + 1 ) / 2 + ( int ) Math . pow ( ( n * ( n + 1 ) / 2 ) , 2 ) ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . println ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) // 2 + pow ( ( n * ( n + 1 ) // 2 ) , 2 ) ) NEWLINE DEDENT n = 3 NEWLINE print ( \"Sum = \" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_931_B_141",
            "java_code": "import java . util . Scanner ; public class WorldCup { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; int pow = 2 ; int i = 1 ; for ( i = 1 ; Math . abs ( ( ( a - 1 ) / pow ) - ( ( b - 1 ) / pow ) ) > 0 ; i ++ ) { pow *= 2 ; } System . out . println ( pow >= n ? \"Final!\" : i ) ; } }",
            "python_code": "import math  n , a , b = map ( int , input ( ) . split ( ' ' ) ) rounds = math . log ( n , 2 ) r = int ( rounds ) for i in range ( 1 , int ( rounds ) + 1 ) : a = math . ceil ( a / 2 ) b = math . ceil ( b / 2 ) if ( a == b ) : if ( i == r ) : print ( 'Final!' ) break else : print ( i ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_837_A_142",
            "java_code": "import java . util . * ; public class test { public static void main ( String [ ] agrs ) { int n ; String s ; Scanner scan = new Scanner ( System . in ) ; n = scan . nextInt ( ) ; s = scan . nextLine ( ) ;",
            "python_code": "n = input ( ) S = list ( map ( str , input ( ) . split ( ) ) ) Max = 0 for i in range ( len ( S ) ) : C = 0 for j in range ( len ( S [ i ] ) ) : if S [ i ] [ j ] . isupper ( ) : C += 1 if C > Max : Max = Cprint ( Max ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_675_A_143",
            "java_code": "import java . io . * ; import java . util . * ;  public class practice675a { public static void main ( String [ ] args ) throws Exception {",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) ; s = 0 if c == 0 : if a == b : print ( \"YES\" ) else : print ( \"NO\" ) elif c < 0 : if a < b : print ( \"NO\" ) else : if abs ( a - b ) % c == 0 : print ( \"YES\" ) else : print ( \"NO\" ) else : if a > b : print ( \"NO\" ) else : if abs ( a - b ) % c == 0 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_6_A_144",
            "java_code": "import java . util . Scanner ;  public class Main { static boolean flag ; public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int c = in . nextInt ( ) ; int d = in . nextInt ( ) ; fun ( a , b , c ) ;",
            "python_code": "daf = list ( map ( int , input ( ) . split ( ) ) )  daf . sort ( )  x1 = daf [ 2 ] - daf [ 1 ] - daf [ 0 ] x2 = daf [ 3 ] - daf [ 2 ] - daf [ 1 ]  x = min ( x1 , x2 )  if x > 0 : print ( 'IMPOSSIBLE' ) elif x == 0 : print ( 'SEGMENT' ) else : print ( 'TRIANGLE' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2260_A_145",
            "java_code": "class Solution { static int smallestEven ( int n ) { if ( n == 1 ) return 0 ; return Math . pow ( 10 , n - 1 ) ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( smallestEven ( n ) ) ; } }",
            "python_code": "def smallestEven ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return pow ( 10 , n - 1 ) NEWLINE DEDENT n = 4 NEWLINE print ( smallestEven ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_296_A_146",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) array = input ( ) . split ( ) c = ( n + 1 ) / 2 most_repeated = max ( set ( array ) , key = array . count ) counter = 0  for i in array : if ( i == most_repeated ) : counter += 1 else : continue  if ( c <= counter and n % 2 == 0 ) : print ( \"NO\" ) elif ( c < counter and n % 2 != 0 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1259_A_147",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int nextPerfectCube ( int N ) { int nextN = ( int ) Math . floor ( Math . cbrt ( N ) ) + 1 ; return nextN * nextN * nextN ; } public static void main ( String args [ ] ) { int n = 35 ; System . out . print ( nextPerfectCube ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def nextPerfectCube ( N ) : NEWLINE INDENT nextN = floor ( N ** ( 1 / 3 ) ) + 1 NEWLINE return nextN ** 3 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 35 NEWLINE print ( nextPerfectCube ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1372_A_148",
            "java_code": "import java . util . Scanner ;  public class OmkarAndComp {  public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t > 0 ) { int natasha = s . nextInt ( ) ; for ( int i = natasha ; i > 0 ; i -- ) { System . out . print ( 1 + \" \" ) ; } System . out . println ( ) ; t -- ; }  }  }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : print ( * [ 1 ] * int ( input ( ) ) , sep = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4362_A_149",
            "java_code": "class GFG { static int product ( int ar [ ] , int n ) { int result = 1 ; for ( int i = 0 ; i < n ; i ++ ) result = result * ar [ i ] ; return result ; } public static void main ( String [ ] args ) { int ar [ ] = { 1 , 2 , 3 , 4 , 5 } ; int n = ar . length ; System . out . printf ( \"%d\" , product ( ar , n ) ) ; } }",
            "python_code": "def product ( ar , n ) : NEWLINE INDENT result = 1 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT result = result * ar [ i ] NEWLINE DEDENT return result NEWLINE DEDENT ar = [ 1 , 2 , 3 , 4 , 5 ] NEWLINE n = len ( ar ) NEWLINE print ( product ( ar , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1342_B_150",
            "java_code": "import java . util . Scanner ;  public class BinaryPeriod {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) )  while t > 0 : t -= 1 s = input ( ) if '0' not in s or '1' not in s : print ( s ) else : s1 = \"01\" * len ( s ) print ( s1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_610_A_151",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "n = int ( input ( ) ) if ( n % 2 == 1 ) : print ( 0 ) elif ( n % 4 == 0 ) : print ( n // 4 - 1 ) else : print ( n // 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2094_A_152",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int counLastDigitK ( int low , int high , int k ) { int count = 0 ; for ( int i = low ; i <= high ; i ++ ) if ( i % 10 == k ) count ++ ; return count ; } public static void main ( String args [ ] ) { int low = 3 , high = 35 , k = 3 ; System . out . println ( counLastDigitK ( low , high , k ) ) ; } }",
            "python_code": "def counLastDigitK ( low , high , k ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( low , high + 1 ) : NEWLINE INDENTINDENT if ( i % 10 == k ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT low = 3 NEWLINE high = 35 NEWLINE k = 3 NEWLINE print ( counLastDigitK ( low , high , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_675_A_153",
            "java_code": "public class GFG { static void find_array ( int [ ] a , int n ) { int x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] += x ; System . out . print ( a [ i ] + \" \" ) ; x = Math . max ( x , a [ i ] ) ; } } public static void main ( String [ ] args ) { int [ ] a = { 40 , 12 , 62 } ; int n = a . length ; find_array ( a , n ) ; } }",
            "python_code": "def find_array ( a , n ) : NEWLINE INDENT x = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT a [ i ] += x ; NEWLINE print ( a [ i ] , end = ' ' ) ; NEWLINE x = max ( x , a [ i ] ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 40 , 12 , 62 ] ; NEWLINE n = len ( a ) ; NEWLINE find_array ( a , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1136_B_154",
            "java_code": "import java . util . Scanner ;  public class _0721NastyaIsPlayingComputerGames {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; System . out . println ( 3 * n + Math . min ( n - k , k - 1 ) ) ; }  }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) ans = min ( k - 1 , n - k ) * 2 + max ( k - 1 , n - k ) + 2 * n + 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_540_A_155",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; import java . text . * ;  public class Main { static PrintWriter out ; static Reader in ; public static void main ( String [ ] args ) throws IOException { input_output ( ) ;",
            "python_code": "from __future__ import division , print_functionfrom collections import * from math import * from itertools import * import osimport sysfrom io import BytesIO , IOBaseimport math  if sys . version_info [ 0 ] < 3 : from __builtin__ import xrange as range from future_builtins import ascii , filter , hex , map , oct , zip    def main ( ) : n = int ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_745_A_156",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ; import java . util . Set ;  public class problem100 {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) ans = set ( ) ans . add ( s ) c = s [ 1 : ] + s [ 0 ] while c != s : ans . add ( c ) c = c [ 1 : ] + c [ 0 ]   print ( len ( ans ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_389_A_157",
            "java_code": "import java . util . Scanner ;  public class _0714FoxandNumberGame { static boolean isPrime ( int n ) {",
            "python_code": "n = input ( ) n1 = int ( n ) c = list ( map ( int , input ( ) . split ( ) [ : n1 ] ) ) c . sort ( reverse = True ) l = len ( c ) i = - 1 while i < l - 2 : i = i + 1 if i == l - 1 : break if c [ i ] > c [ i + 1 ] : c [ i ] = c [ i ] - c [ i + 1 ] c . sort ( reverse = True ) i = - 1 print ( sum ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4665_A_158",
            "java_code": "import java . io . * ; class GFG { static int series ( int n ) { return ( 8 * n * n ) + 1 ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( series ( n ) ) ; } }",
            "python_code": "def series ( n ) : NEWLINE INDENT print ( ( 8 * n ** 2 ) + 1 ) NEWLINE DEDENT series ( 5 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_312_B_159",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "a , b , c , d = map ( int , input ( ) . split ( ) ) print ( ( a * d ) / ( b * c + a * d - a * c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5199_A_160",
            "java_code": "class GFG { static int XorSum ( int arr [ ] , int n ) { int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 != 0 ) result += arr [ i ] ; } return result ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 6 , 3 , 4 , 5 } ; int n = arr . length ; System . out . println ( XorSum ( arr , n ) ) ; } }",
            "python_code": "def XorSum ( arr , n ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 != 0 ) : NEWLINE INDENTINDENTINDENT result += arr [ i ] NEWLINE DEDENT DEDENT return result NEWLINE DEDENT arr = [ 1 , 2 , 6 , 3 , 4 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( XorSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_306_A_161",
            "java_code": "import java . util . Scanner ;  public class problem65 {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = input ( ) . split ( ) n = int ( n ) m = int ( m ) q = n // mr = n % mlst = [ ] for i in range ( m ) : if ( i < m - r ) : lst . append ( q ) else : lst . append ( q + 1 ) print ( * lst ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_747_B_162",
            "java_code": "import java . util . Scanner ; public class MammothSGenomeDecoding {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int arr [ ] = new int [ 5 ] ;",
            "python_code": "n = int ( input ( ) ) genomes = list ( input ( ) ) if n % 4 != 0 or any ( [ genomes . count ( x ) > n // 4 for x in 'ACGT' ] ) : print ( '===' ) else : cnt = { } for x in 'ACGT' : cnt [ x ] = n // 4 - genomes . count ( x ) for i in range ( n ) : if genomes [ i ] == '?' : for x in 'ACGT' : if cnt [ x ] > 0 : genomes [ i ] = x cnt [ x ] -= 1 break print ( '' . join ( genomes ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_959_B_163",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; public static void main ( String [ ] args ) { int t = 1 ;",
            "python_code": "import sys , mathfrom collections import deque , defaultdictimport operator as opfrom functools import reducefrom itertools import permutations  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1149_A_164",
            "java_code": "import com . sun . security . jgss . GSSUtil ; import org . w3c . dom . Node ;  import javax . print . DocFlavor ; import javax . swing . table . AbstractTableModel ; import java . io . * ; import java . util . * ; import java . util . concurrent . ConcurrentHashMap ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; ",
            "python_code": "N = int ( input ( ) ) one = input ( ) . count ( '1' ) two = N - oneif not one or not two : ans = [ 1 ] * one + [ 2 ] * twoelse : ans = [ 2 , 1 ] + [ 2 ] * ( two - 1 ) + [ 1 ] * ( one - 1 ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_990_A_165",
            "java_code": "import java . util . Scanner ;  public class CommentaryBoxes { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) , m = in . nextLong ( ) , d = n / m * m ; int a = in . nextInt ( ) , b = in . nextInt ( ) ;  in . close ( ) ; System . out . println ( n % m == 0 ? 0 : Math . min ( ( d + m - n ) * a , ( n - d ) * b ) ) ; } }",
            "python_code": "from sys import stdinn , m , a , b = map ( int , stdin . readline ( ) . split ( ) ) x = n % mprint ( min ( a * ( m - x ) , b * x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1249_A_166",
            "java_code": "class GFG { static int count ( int n ) { return ( int ) ( 15 * Math . pow ( 16 , n - 1 ) ) ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( count ( n ) ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT return 15 * pow ( 16 , n - 1 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE print ( count ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_66_A_167",
            "java_code": "import java . util . Scanner ; public class p66A { public static void main ( String [ ] args ) { Scanner x = new Scanner ( new Scanner ( System . in ) . next ( ) ) ; String s ; if ( x . hasNextByte ( ) ) s = \"byte\" ; else if ( x . hasNextShort ( ) ) s = \"short\" ; else if ( x . hasNextInt ( ) ) s = \"int\" ; else if ( x . hasNextLong ( ) ) s = \"long\" ; else s = \"BigInteger\" ; System . out . println ( s ) ; } }",
            "python_code": "n = int ( input ( ) )  if n >= - 128 and n <= 127 : NEWLINE INDENT print ( 'byte' ) elif n >= - 32768 and n <= 32767 : NEWLINE print ( 'short' ) elif n >= - 2147483648 and n <= 2147483647 : NEWLINE print ( 'int' ) elif n >= - 9223372036854775808 and n <= 9223372036854775807 : NEWLINE print ( 'long' ) else : NEWLINE print ( 'BigInteger' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1366_A_168",
            "java_code": "import java . io . * ; class GFG { static int findTrailingZeros ( int n ) { int count = 0 ; for ( int i = 5 ; n / i >= 1 ; i *= 5 ) count += n / i ; return count ; } public static void main ( String [ ] args ) { int n = 100 ; System . out . println ( \"Count of trailing 0s in \" + n + \"! is \" + findTrailingZeros ( n ) ) ; } }",
            "python_code": "def findTrailingZeros ( n ) : NEWLINE INDENT count = 0 NEWLINE i = 5 NEWLINE while ( n / i >= 1 ) : NEWLINE INDENTINDENT count += int ( n / i ) NEWLINE i *= 5 NEWLINE DEDENT return int ( count ) NEWLINE DEDENT n = 100 NEWLINE print ( \"Count of trailing 0s \" + \"in 100! is\" , findTrailingZeros ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1418_A_169",
            "java_code": "import java . util . Scanner ;  public class A1418 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { long X = in . nextLong ( ) ; long Y = in . nextLong ( ) ; long K = in . nextLong ( ) ; long sticksNeeded = K * ( Y + 1 ) ; long answer = K + ( sticksNeeded - 1 + X - 2 ) / ( X - 1 ) ; System . out . println ( answer ) ; } }  }",
            "python_code": "import sysinput = sys . stdin . readlinefor NEWLINE _ in range ( int ( input ( ) ) ) : a , b , c = [ int ( x ) for x in input ( ) . split ( ) ] NEWLINE print ( c + ( b * c + c - 1 + a + - 2 ) // ( a - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3282_A_170",
            "java_code": "class GFG { static int LucasSum ( int N ) { int sum = 0 ; int a = 2 , b = 1 , c ; sum += a ; while ( b <= N ) { sum += b ; c = a + b ; a = b ; b = c ; } return sum ; } public static void main ( String [ ] args ) { int N = 20 ; System . out . println ( LucasSum ( N ) ) ; } }",
            "python_code": "def LucasSum ( N ) : NEWLINE INDENT Sum = 0 NEWLINE a = 2 NEWLINE b = 1 NEWLINE c = 0 NEWLINE Sum += a NEWLINE while ( b <= N ) : NEWLINE INDENTINDENT Sum += b NEWLINE c = a + b NEWLINE a = b NEWLINE b = c NEWLINE DEDENT return Sum NEWLINE DEDENT N = 20 NEWLINE print ( LucasSum ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2146_A_171",
            "java_code": "class GFG { static int binaryToDecimal ( int n ) { int num = n ; int dec_value = 0 ; int base = 1 ; int temp = num ; while ( temp > 0 ) { int last_digit = temp % 10 ; temp = temp / 10 ; dec_value += last_digit * base ; base = base * 2 ; } return dec_value ; } public static void main ( String [ ] args ) { int num = 10101001 ; System . out . println ( binaryToDecimal ( num ) ) ; } }",
            "python_code": "def binaryToDecimal ( n ) : NEWLINE INDENT num = n ; NEWLINE dec_value = 0 ; NEWLINE base = 1 ; NEWLINE temp = num ; NEWLINE while ( temp ) : NEWLINE INDENTINDENT last_digit = temp % 10 ; NEWLINE temp = int ( temp / 10 ) ; NEWLINE dec_value += last_digit * base ; NEWLINE base = base * 2 ; NEWLINE DEDENT return dec_value ; NEWLINE DEDENT num = 10101001 ; NEWLINE print ( binaryToDecimal ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_764_A_172",
            "java_code": "import java . util . Scanner ;   public class Main { public static void main ( String [ ] args ) {",
            "python_code": "import math   if __name__ == '__main__' : n , m , z = map ( int , input ( ) . split ( ) ) print ( z // ( n * m // math . gcd ( n , m ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1729_A_173",
            "java_code": "import java . io . * ; class GFG { static long centered_heptagonal_num ( long n ) { return ( 7 * n * n - 7 * n + 2 ) / 2 ; } public static void main ( String [ ] args ) { long n = 5 ; System . out . println ( n + \"th Centered \" + \"heptagonal number : \" + centered_heptagonal_num ( n ) ) ; } }",
            "python_code": "def centered_heptagonal_num ( n ) : NEWLINE INDENT return ( 7 * n * n - 7 * n + 2 ) // 2 NEWLINE DEDENT n = 5 NEWLINE print ( \"%sth Centered heptagonal number : \" % n , centered_heptagonal_num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2024_A_174",
            "java_code": "import java . io . * ; class GFG { static int unitDigitXRaisedY ( int x , int y ) { int res = 1 ; for ( int i = 0 ; i < y ; i ++ ) res = ( res * x ) % 10 ; return res ; } public static void main ( String args [ ] ) throws IOException { System . out . println ( unitDigitXRaisedY ( 4 , 2 ) ) ; } }",
            "python_code": "def unitDigitXRaisedY ( x , y ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( y ) : NEWLINE INDENTINDENT res = ( res * x ) % 10 NEWLINE DEDENT return res NEWLINE DEDENT print ( unitDigitXRaisedY ( 4 , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1285_A_175",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String n = sc . nextLine ( ) ; String s = sc . nextLine ( ) ; System . out . println ( s . length ( ) + 1 ) ; } }",
            "python_code": "import ren = int ( input ( ) ) x = input ( ) a = len ( re . findall ( 'L' , x ) ) b = len ( re . findall ( 'R' , x ) ) d = - 1 * ac = b - aprint ( b - d + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1972_A_176",
            "java_code": "import java . io . * ; class GFG { static int xorPairSum ( int ar [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < n ; j ++ ) sum = sum ^ ( ar [ i ] + ar [ j ] ) ; return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . print ( xorPairSum ( arr , n ) ) ; } }",
            "python_code": "def xor_pair_sum ( ar , n ) : NEWLINE INDENT total = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( n ) : NEWLINE INDENTINDENTINDENT total = total ^ ( ar [ i ] + ar [ j ] ) NEWLINE DEDENT DEDENT return total NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT data = [ 1 , 2 , 3 ] NEWLINE print ( xor_pair_sum ( data , len ( data ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1312_B_177",
            "java_code": "import java . util . * ;  public class BogoSort {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) { System . out . print ( a [ i ] + \" \" ) ; } } }  }",
            "python_code": "N = int ( input ( ) ) for _ in range ( N ) : _ = int ( input ( ) ) a = sorted ( [ int ( ii ) for ii in input ( ) . split ( ' ' ) ] , reverse = True ) print ( * a , sep = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_1310_A_178",
            "java_code": "class Solution { public int [ ] xorQueries ( int [ ] arr , int [ ] [ ] queries ) { int [ ] res = new int [ queries . length ] , q ; for ( int i = 1 ; i < arr . length ; i ++ ) arr [ i ] ^= arr [ i - 1 ] ; for ( int i = 0 ; i < queries . length ; i ++ ) { q = queries [ i ] ; res [ i ] = q [ 0 ] > 0 ? arr [ q [ 0 ] - 1 ] ^ arr [ q [ 1 ] ] : arr [ q [ 1 ] ] ; } return res ; } }",
            "python_code": "class Solution : NEWLINE INDENT def xorQueries ( self , arr : List [ int ] , queries : List [ List [ int ] ] ) -> List [ int ] : NEWLINE INDENTINDENT pref = [ 0 ] NEWLINE for e in arr : NEWLINE INDENTINDENTINDENT pref . append ( e ^ pref [ - 1 ] ) NEWLINE DEDENT ans = [ ] NEWLINE for [ l , r ] in queries : NEWLINE INDENTINDENTINDENT ans . append ( pref [ r + 1 ] ^ pref [ l ] ) NEWLINE DEDENT return ans NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4527_A_179",
            "java_code": "import java . io . * ; class GFG { static int bitAtGivenPosSetOrUnset ( int n , int k ) { int new_num = n > > ( k - 1 ) ; return ( new_num & 1 ) ; } public static void main ( String [ ] args ) { int n = 10 , k = 2 ; if ( bitAtGivenPosSetOrUnset ( n , k ) == 1 ) System . out . println ( \"Set\" ) ; else System . out . println ( \"Unset\" ) ; } }",
            "python_code": "import math NEWLINE def bitAtGivenPosSetOrUnset ( n , k ) : NEWLINE INDENT new_num = n >> ( k - 1 ) NEWLINE return ( new_num & 1 ) NEWLINE DEDENT n = 10 NEWLINE k = 2 NEWLINE if ( bitAtGivenPosSetOrUnset ( n , k ) ) : NEWLINE INDENT print ( \"Set\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"Unset\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_780_A_180",
            "java_code": "import javax . print . DocFlavor ; import java . io . * ; import java . net . Inet4Address ; import java . sql . ClientInfoStatus ; import java . util . * ; ",
            "python_code": "import sys  def main ( ) : _ , * l = map ( int , sys . stdin . read ( ) . strip ( ) . split ( ) ) s , c , m = set ( ) , 0 , 0 for i in l : if i in s : s . remove ( i ) if m < c : m = c c -= 1 else : s . add ( i ) ; c += 1 return m print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_7_A_181",
            "java_code": "import java . util . * ; import java . util . Map . Entry ;   import java . io . * ; import java . math . * ; import static java . util . stream . Collectors . * ; import static java . util . Map . Entry . * ;  public class Hey { public static void main ( String [ ] args ) throws IOException { final long mod = ( long ) ( 1e9 + 7 ) ; Reader s = new Reader ( ) ; PrintWriter pt = new PrintWriter ( System . out ) ;",
            "python_code": "import sys  lines = list ( sys . stdin . read ( ) . strip ( ) . split ( ) )  print_lines = 0 columns = [ 0 for _ in range ( 8 ) ] for line in lines : if line == 'BBBBBBBB' : print_lines += 1 for j , s in enumerate ( line ) : columns [ j ] += bool ( s == 'B' )  print_col = sum ( j == 8 for j in columns )  if print_col == 8 : print_col = 0  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_492_A_182",
            "java_code": "import java . util . Scanner ;  public class A492 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) , i = 1 , sum = 0 ; while ( n > sum ) { sum += i ; n = n - sum ; if ( n < 0 ) break ; i ++ ; } System . out . println ( i - 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) k = 0 c = 0 for i in range ( 1 , 10001 ) : k += i c += k if c == n : print ( i ) break if c >= n : print ( i - 1 ) break  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5196_A_183",
            "java_code": "class OddPosition { public static long getFinalElement ( long n ) { long finalNum ; for ( finalNum = 2 ; finalNum * 2 <= n ; finalNum *= 2 ) ; return finalNum ; } public static void main ( String [ ] args ) { int N = 12 ; System . out . println ( getFinalElement ( N ) ) ; } }",
            "python_code": "def getFinalElement ( n ) : NEWLINE INDENT finalNum = 2 NEWLINE while finalNum * 2 <= n : NEWLINE INDENTINDENT finalNum *= 2 NEWLINE DEDENT return finalNum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 12 NEWLINE print ( getFinalElement ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4603_A_184",
            "java_code": "import java . util . * ; class GFG { static int findNthNumber ( int A , int B , int N ) { int sum = 0 ; for ( int i = 2 ; i < N ; i ++ ) { sum = A + B ; A = B ; B = sum ; } return sum ; } public static void main ( String [ ] args ) { int A = 5 , B = 7 , N = 10 ; System . out . println ( findNthNumber ( A , B , N ) ) ; } }",
            "python_code": "def findNthNumber ( A , B , N ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 2 , N ) : NEWLINE INDENTINDENT sum = A + B NEWLINE A = B NEWLINE B = sum NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT A = 5 NEWLINE B = 7 NEWLINE N = 10 NEWLINE print ( findNthNumber ( A , B , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_465_A_185",
            "java_code": "import java . util . * ;  public class CF10 { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) s = str ( input ( ) ) y = s [ : : - 1 ] t = 0j = 1 for i in range ( n ) : if y [ n - j ] == '1' : t += 1 j += 1 else : print ( t + 1 ) exit ( ) print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1431_A_186",
            "java_code": "class GFG { static int sumNatural ( int n ) { int sum = ( n * ( n + 1 ) ) / 2 ; return sum ; } static int suminRange ( int l , int r ) { return sumNatural ( r ) - sumNatural ( l - 1 ) ; } public static void main ( String [ ] args ) { int l = 2 , r = 5 ; System . out . println ( \"Sum of Natural numbers from L to R is \" + suminRange ( l , r ) ) ; } }",
            "python_code": "def sumNatural ( n ) : NEWLINE INDENT sum = ( n * ( n + 1 ) ) // 2 NEWLINE return sum NEWLINE DEDENT def suminRange ( l , r ) : NEWLINE INDENT return sumNatural ( r ) - sumNatural ( l - 1 ) NEWLINE DEDENT l = 2 ; r = 5 NEWLINE print ( \"Sum of Natural numbers from L to R is \" , suminRange ( l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_265_B_187",
            "java_code": "import java . util . * ; public class Roadside_Trees {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) count = 0 g = int ( input ( ) ) count += g + 1 for i in range ( n - 1 ) : a = int ( input ( ) ) if ( a > g ) : count += a - g + 1 + 1 g = a else : count += g - a + 1 + 1 g = aprint ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_899_A_188",
            "java_code": "import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) ris = 0 num2 = arr . count ( 2 ) num1 = arr . count ( 1 ) if num1 >= num2 : ris += num2 num1 -= num2 ris += num1 // 3 elif num1 <= num2 and 1 in arr : ris += num1print ( ris ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1986_A_189",
            "java_code": "import java . io . * ; class GFG { static int getMaxNum ( int a , int b , int c ) { if ( b % c == 0 ) return b ; int x = ( ( b / c ) * c ) ; if ( x >= a && x <= b ) return x ; else return - 1 ; } public static void main ( String [ ] args ) { int a = 2 , b = 10 , c = 3 ; System . out . println ( getMaxNum ( a , b , c ) ) ; } }",
            "python_code": "def getMaxNum ( a , b , c ) : NEWLINE INDENT if ( b % c == 0 ) : NEWLINE INDENTINDENT return b NEWLINE DEDENT x = ( ( b // c ) * c ) NEWLINE if ( x >= a and x <= b ) : NEWLINE INDENTINDENT return x NEWLINE DEDENT else : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT DEDENT a , b , c = 2 , 10 , 3 NEWLINE print ( getMaxNum ( a , b , c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4821_A_190",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int sumOfSeries ( int n ) { int x ; if ( n % 2 == 0 ) x = ( n / 2 ) * ( n + 1 ) ; else x = ( ( n + 1 ) / 2 ) * n ; return x * x ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT x = 0 NEWLINE if n % 2 == 0 : NEWLINE INDENTINDENT x = ( n / 2 ) * ( n + 1 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT x = ( ( n + 1 ) / 2 ) * n NEWLINE DEDENT return ( int ) ( x * x ) NEWLINE DEDENT n = 5 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4086_A_191",
            "java_code": "class GFG { static float sumOfAP ( float a , float d , float n ) { float sum = ( n / 2 ) * ( 2 * a + ( n - 1 ) * d ) ; return sum ; } public static void main ( String [ ] args ) { float n = 20 ; float a = 2.5f , d = 1.5f ; System . out . print ( sumOfAP ( a , d , n ) ) ; } }",
            "python_code": "def sumOfAP ( a , d , n ) : NEWLINE INDENT sum = ( n / 2 ) * ( 2 * a + ( n - 1 ) * d ) NEWLINE return sum NEWLINE DEDENT n = 20 NEWLINE a = 2.5 NEWLINE d = 1.5 NEWLINE print ( sumOfAP ( a , d , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4606_A_192",
            "java_code": "class PellNumber { public static int pell ( int n ) { if ( n <= 2 ) return n ; return 2 * pell ( n - 1 ) + pell ( n - 2 ) ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( pell ( n ) ) ; } }",
            "python_code": "def pell ( n ) : NEWLINE INDENT if ( n <= 2 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT return ( 2 * pell ( n - 1 ) + pell ( n - 2 ) ) NEWLINE DEDENT n = 4 ; NEWLINE print ( pell ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2944_A_193",
            "java_code": "import java . io . * ; class GFG { static void printMultiples ( int n ) { int unit_digit = n % 10 ; if ( unit_digit == 0 ) unit_digit = 10 ; for ( int i = unit_digit ; i <= n ; i += unit_digit ) System . out . print ( i + \" \" ) ; } public static void main ( String [ ] args ) { int n = 39 ; printMultiples ( n ) ; } }",
            "python_code": "def printMultiples ( n ) : NEWLINE INDENT unit_digit = n % 10 NEWLINE if ( unit_digit == 0 ) : NEWLINE INDENTINDENT unit_digit = 10 NEWLINE DEDENT for i in range ( unit_digit , n + 1 , unit_digit ) : NEWLINE INDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT DEDENT n = 39 NEWLINE printMultiples ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2626_A_194",
            "java_code": "class GFG { static long calculateSum ( int n , int k ) { int res = 1 ; int MOD = 1000000007 ; while ( k > 0 ) { if ( ( k & 1 ) == 1 ) res = ( res * n ) % MOD ; k = k / 2 ; n = ( n * n ) % MOD ; } return res ; } public static void main ( String [ ] args ) { int n = 4 , k = 3 ; System . out . print ( calculateSum ( n , k ) ) ; } } ;",
            "python_code": "def calculateSum ( n , k ) : NEWLINE INDENT res = 1 NEWLINE MOD = 1000000007 NEWLINE while k > 0 : NEWLINE INDENTINDENT if ( k & 1 ) == 1 : NEWLINE INDENTINDENTINDENT res = ( res * n ) % MOD NEWLINE DEDENT k = k // 2 NEWLINE n = ( n * n ) % MOD NEWLINE DEDENT return res NEWLINE DEDENT n = 4 NEWLINE k = 3 NEWLINE print ( calculateSum ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1131_B_195",
            "java_code": "import java . util . Scanner ;  public class Draw { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i , x = 0 , y = 0 , o = 1 ;  for ( i = 0 ; i < n ; i ++ ) { int a = in . nextInt ( ) , b = in . nextInt ( ) ; o += Math . max ( 0 , Math . min ( a , b ) - Math . max ( x , y ) + ( x != y ? 1 : 0 ) ) ; x = a ; y = b ; } in . close ( ) ; System . out . println ( o ) ; } }",
            "python_code": "from sys import stdin , stdoutinput = stdin . readline def main ( ) : n = int ( input ( ) ) preva = prevb = - 1 ans = 0 for i in range ( n ) : a , b = map ( int , input ( ) . split ( ) ) if preva != prevb : ans += max ( 0 , min ( a , b ) - max ( preva , prevb ) + 1 ) else : ans += max ( 0 , min ( a , b ) - max ( preva , prevb ) ) preva , prevb = a , b print ( ans ) main ( )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5082_A_196",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int product ( int x , int y ) { if ( x < y ) return product ( y , x ) ; else if ( y != 0 ) return ( x + product ( x , y - 1 ) ) ; else return 0 ; } public static void main ( String [ ] args ) { int x = 5 , y = 2 ; System . out . println ( product ( x , y ) ) ; } }",
            "python_code": "def product ( x , y ) : NEWLINE INDENT if x < y : NEWLINE INDENTINDENT return product ( y , x ) NEWLINE DEDENT elif y != 0 : NEWLINE INDENTINDENT return ( x + product ( x , y - 1 ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT DEDENT x = 5 NEWLINE y = 2 NEWLINE print ( product ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_994_A_197",
            "java_code": "import java . util . Scanner ;  public class nineteen {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) l1 = list ( map ( int , input ( ) . split ( ) ) ) l2 = list ( map ( int , input ( ) . split ( ) ) ) d2 = { } for i in l2 : if ( i in d2 ) : d2 [ i ] += 1 else : d2 [ i ] = 1 for i in l1 : if ( i in d2 ) : print ( i , end = ' ' ) d2 [ i ] -= 1 if ( d2 [ i ] <= 0 ) : del ( d2 [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4537_A_198",
            "java_code": "import java . io . * ; class GFG { static void printTwoSetBitNums ( int n ) { int x = 1 ; while ( n > 0 ) { int y = 0 ; while ( y < x ) { System . out . print ( ( ( 1 << x ) + ( 1 << y ) ) + \" \" ) ; n -- ; if ( n == 0 ) return ; y ++ ; } x ++ ; } } public static void main ( String [ ] args ) { int n = 4 ; printTwoSetBitNums ( n ) ; } }",
            "python_code": "def printTwoSetBitNums ( n ) : NEWLINE INDENT x = 1 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT y = 0 NEWLINE while ( y < x ) : NEWLINE INDENTINDENTINDENT print ( ( 1 << x ) + ( 1 << y ) , end = \" \" ) NEWLINE n -= 1 NEWLINE if ( n == 0 ) : NEWLINE INDENTINDENTINDENTINDENT return NEWLINE DEDENT y += 1 NEWLINE DEDENT x += 1 NEWLINE DEDENT DEDENT printTwoSetBitNums ( 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1880_A_199",
            "java_code": "class GFG { static int setKthBit ( int n , int k ) { return ( ( 1 << k ) | n ) ; } public static void main ( String arg [ ] ) { int n = 10 , k = 2 ; System . out . print ( \"Kth bit set number = \" + setKthBit ( n , k ) ) ; } }",
            "python_code": "def setKthBit ( n , k ) : NEWLINE INDENT return ( ( 1 << k ) | n ) NEWLINE DEDENT n = 10 NEWLINE k = 2 NEWLINE print ( \"Kth bit set number = \" , setKthBit ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4412_A_200",
            "java_code": "import java . io . * ; class GFG { static int summation ( int n ) { int sum = 0 , j = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { sum = sum + j ; j = ( j * 10 ) + 1 ; } return sum ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( summation ( n ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT sum = 0 NEWLINE j = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum = sum + j NEWLINE j = ( j * 10 ) + 1 NEWLINE DEDENT return sum NEWLINE DEDENT n = 5 NEWLINE print ( summation ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1413_A_201",
            "java_code": "import java . util . * ; import java . util . Arrays ; public class Finding_Sasuke {  public static void main ( String [ ] args ) {",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE i = 0 NEWLINE j = n - 1 NEWLINE result = [ 0 ] * n NEWLINE while i < j : result [ i ] = - a [ j ] NEWLINE result [ j ] = a [ i ] NEWLINE i += 1 NEWLINE j -= 1 NEWLINE print ( \" \" . join ( str ( x ) for x in result ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_981_A_202",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ;  public static void main ( String [ ] args ) {",
            "python_code": "s = list ( input ( ) )   if s == s [ : : - 1 ] : if len ( set ( s ) ) == 1 : print ( 0 ) else : print ( len ( s ) - 1 )  else : print ( len ( s ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4494_A_203",
            "java_code": "import java . io . * ; class GFG { static String areAllBitsSet ( int n ) { if ( n == 0 ) return \"No\" ; while ( n > 0 ) { if ( ( n & 1 ) == 0 ) return \"No\" ; n = n > > 1 ; } return \"Yes\" ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . println ( areAllBitsSet ( n ) ) ; } }",
            "python_code": "def areAllBitsSet ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return \"No\" NEWLINE DEDENT while ( n > 0 ) : NEWLINE INDENTINDENT if ( ( n & 1 ) == 0 ) : NEWLINE INDENTINDENTINDENT return \"No\" NEWLINE DEDENT n = n >> 1 NEWLINE DEDENT return \"Yes\" NEWLINE DEDENT n = 7 NEWLINE print ( areAllBitsSet ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2223_A_204",
            "java_code": "import java . io . * ; import java . math . * ; class GFG { static int countDigits ( int a , int b ) { int count = 0 ; int p = Math . abs ( a * b ) ; if ( p == 0 ) return 1 ; while ( p > 0 ) { count ++ ; p = p / 10 ; } return count ; } public static void main ( String args [ ] ) { int a = 33 ; int b = - 24 ; System . out . println ( \"Number of digits = \" + countDigits ( a , b ) ) ; } }",
            "python_code": "def countDigits ( a , b ) : NEWLINE INDENT count = 0 NEWLINE p = abs ( a * b ) NEWLINE if ( p == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT while ( p > 0 ) : NEWLINE INDENTINDENT count = count + 1 NEWLINE p = p // 10 NEWLINE DEDENT return count NEWLINE DEDENT a = 33 NEWLINE b = - 24 NEWLINE print ( \"Number of digits = \" , countDigits ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_722_B_205",
            "java_code": "import java . util . Scanner ;  public class Verse_Pattern { static Scanner scanner = new Scanner ( System . in ) ; static int n ; static boolean valid ( String s , int n ) { int count = 0 ;",
            "python_code": "'''import syssys.stdin=open(\"input.txt\",\"r\")sys.stdout=open(\"output.txt\",\"w\")'''  n = int ( input ( ) ) p = [ int ( i ) for i in input ( ) . split ( ) ] flag = Truefor i in range ( n ) : s = input ( ) if ( s . count ( 'a' ) + s . count ( 'e' ) + s . count ( 'i' ) + s . count ( 'o' ) + s . count ( 'u' ) + s . count ( 'y' ) ) != p [ i ] and flag : flag = Falseif flag : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_339_B_206",
            "java_code": "import java . util . * ;  public class JavaApplication116 { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n , m , a = 1 , count = 0 ; n = in . nextLong ( ) ; m = in . nextLong ( ) ; for ( int i = 0 ; i < m ; i ++ ) { long b = in . nextLong ( ) ; if ( a <= b ) count += b - a ; else count += ( n - a ) + b ; a = b ; } System . out . println ( count ) ; } }",
            "python_code": "n , m = ( map ( int , input ( ) . split ( ) ) ) bt = list ( map ( int , input ( ) . split ( ) ) ) ini = 1 ans = 0 for a in bt : if ( a >= ini ) : ans += ( a - ini ) ini = a else : ans += ( n - ini ) + 1 ini = 1 ans += ( a - ini ) ini = aprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1017_A_207",
            "java_code": "import java . util . Arrays ; class GFG { static int minNumber ( int a [ ] , int n , int x ) { Arrays . sort ( a ) ; int k ; for ( k = 0 ; a [ ( n ) / 2 ] != x ; k ++ ) { a [ n ++ ] = x ; Arrays . sort ( a ) ; } return k ; } public static void main ( String [ ] args ) { int x = 10 ; int a [ ] = { 10 , 20 , 30 } ; int n = 3 ; System . out . println ( minNumber ( a , n - 1 , x ) ) ; } }",
            "python_code": "def minNumber ( a , n , x ) : NEWLINE INDENT a . sort ( reverse = False ) NEWLINE k = 0 NEWLINE while ( a [ int ( ( n - 1 ) / 2 ) ] != x ) : NEWLINE INDENTINDENT a [ n - 1 ] = x NEWLINE n += 1 NEWLINE a . sort ( reverse = False ) NEWLINE k += 1 NEWLINE DEDENT return k NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 10 NEWLINE a = [ 10 , 20 , 30 ] NEWLINE n = 3 NEWLINE print ( minNumber ( a , n , x ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_270_B_208",
            "java_code": "import java . util . Scanner ; public class cf { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , cnt = 1 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; for ( int i = n - 1 ; i > 0 ; i -- ) { if ( a [ i - 1 ] < a [ i ] ) cnt ++ ; else break ; } System . out . println ( n - cnt ) ; } }",
            "python_code": "n = int ( input ( ) ) aux = input ( ) . split ( ) first = int ( aux [ 0 ] ) flag = 1 for i in range ( 1 , n ) : if int ( aux [ i ] ) < first : flag = 1 else : flag += 1 first = int ( aux [ i ] ) print ( n - flag ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1451_B_209",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; ",
            "python_code": "cases = int ( input ( ) ) NEWLINE while cases : cases -= 1 NEWLINE a , b = map ( int , input ( ) . split ( ) ) NEWLINE s = input ( )  while b : b -= 1 NEWLINE l , r = ( map ( int , input ( ) . split ( ) ) ) NEWLINE l , r = l - 1 , r - 1  if s [ : l ] . count ( s [ l ] ) == s [ r + 1 : ] . count ( s [ r ] ) == 0 : NEWLINE INDENT print ( \"NO\" ) else : NEWLINE print ( \"YES\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_669_A_210",
            "java_code": "import javax . swing . plaf . IconUIResource ; import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) print ( n // 3 * 2 if n % 3 == 0 else n // 3 * 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_A_211",
            "java_code": "import java . util . * ;  public class CodeForces922A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int x = input . nextInt ( ) ; int y = input . nextInt ( ) ; y -- ; x -= y ; if ( x % 2 == 0 && x >= 0 && y > 0 || y == 0 && x == 0 ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } }",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) if y == 0 : print ( 'No' ) exit ( 0 ) if y == 1 : if x == 0 : print ( 'Yes' ) else : print ( 'No' ) exit ( 0 ) print ( 'Yes' if x - y + 1 >= 0 and ( x - y + 1 ) % 2 == 0 else 'No' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2987_A_212",
            "java_code": "class GFG { static int factorial ( int start , int end ) { int res = 1 ; for ( int i = start ; i <= end ; i ++ ) res *= i ; return res ; } static int sumofsquare ( int n ) { return factorial ( n + 1 , 2 * n ) / factorial ( 1 , n ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( sumofsquare ( n ) ) ; } }",
            "python_code": "def factorial ( start , end ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( start , end + 1 ) : NEWLINE INDENTINDENT res *= i NEWLINE DEDENT return res NEWLINE DEDENT def sumofsquare ( n ) : NEWLINE INDENT return int ( factorial ( n + 1 , 2 * n ) / factorial ( 1 , n ) ) NEWLINE DEDENT n = 4 NEWLINE print ( sumofsquare ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_173_B_213",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "from collections import dequefrom collections import defaultdict  n , m = map ( int , input ( ) . split ( ) ) INF = 10 ** 9 visited = defaultdict ( int )  g = [ [ ] for _ in range ( n + m ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_630_A_214",
            "java_code": "import java . util . Scanner ;  public class AgainTwentyFive { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String n = scanner . nextLine ( ) ; System . out . println ( 25 ) ; ",
            "python_code": "t = input ( ) print ( 25 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1412_A_215",
            "java_code": "class GFG { static int minXOR ( int arr [ ] , int n ) { int min_xor = Integer . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) min_xor = Math . min ( min_xor , arr [ i ] ^ arr [ j ] ) ; return min_xor ; } public static void main ( String args [ ] ) { int arr [ ] = { 9 , 5 , 3 } ; int n = arr . length ; System . out . println ( minXOR ( arr , n ) ) ; } }",
            "python_code": "def minXOR ( arr , n ) : NEWLINE INDENT arr . sort ( ) ; NEWLINE min_xor = 999999 NEWLINE val = 0 NEWLINE for i in range ( 0 , n - 1 ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n - 1 ) : NEWLINE INDENTINDENTINDENT val = arr [ i ] ^ arr [ j ] NEWLINE min_xor = min ( min_xor , val ) NEWLINE DEDENT DEDENT return min_xor NEWLINE DEDENT arr = [ 9 , 5 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( minXOR ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_135_A_216",
            "java_code": " import java . util . * ; import java . io . * ; import java . math . * ;  public class Main { static FastReader sc = new FastReader ( ) ; static int dp [ ] [ ] ;",
            "python_code": "a = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) z = max ( b ) if z == 1 : b [ b . index ( z ) ] = 2 else : b [ b . index ( z ) ] = 1 print ( * sorted ( b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_84_A_217",
            "java_code": "import java . util . * ; import java . util . regex . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; System . out . println ( ( 3 * n ) / 2 ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE print ( n + ( n // 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4391_A_218",
            "java_code": "class GFG { static void printFloydTriangle ( int n ) { int i , j , val = 1 ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 ; j <= i ; j ++ ) { System . out . print ( val + \" \" ) ; val ++ ; } System . out . println ( ) ; } } public static void main ( String [ ] args ) { printFloydTriangle ( 6 ) ; } }",
            "python_code": "def loydTriangle ( n ) : NEWLINE INDENT val = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT print ( val , end = \" \" ) NEWLINE val += 1 NEWLINE DEDENT print ( \"\" ) NEWLINE DEDENT DEDENT loydTriangle ( 6 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3020_A_219",
            "java_code": "import java . io . * ; class GFG { static long doublefactorial ( long n ) { if ( n == 0 || n == 1 ) return 1 ; return n * doublefactorial ( n - 2 ) ; } static public void main ( String [ ] args ) { System . out . println ( \"Double factorial\" + \" is \" + doublefactorial ( 5 ) ) ; } }",
            "python_code": "def doublefactorial ( n ) : NEWLINE INDENT if ( n == 0 or n == 1 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT return n * doublefactorial ( n - 2 ) ; NEWLINE DEDENT print ( \"Double factorial is\" , doublefactorial ( 5 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_137_A_220",
            "java_code": "import java . util . Scanner ;   public class PostcardsAndPhotos { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; String s = input . next ( ) ; int count = 1 ; char c = s . charAt ( 0 ) ; int temp = 1 ; for ( int i = 1 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) != c || temp == 5 ) { count ++ ; temp = 1 ; c = s . charAt ( i ) ; } else temp ++ ; } System . out . println ( count ) ; } }",
            "python_code": "s = input ( ) c = 0 d = 0 if ( len ( s ) > 1 ) : for i in range ( len ( s ) - 1 ) : if ( s [ i ] != s [ i + 1 ] ) :  c = c + 1 d = 0  else : d = d + 1 if ( d == 5 ) : d = 0 c = c + 1 if ( s [ - 1 ] == s [ - 2 ] and d != 5 ) : c = c + 1 elif ( s [ - 1 ] != s [ - 2 ] ) : c = c + 1 print ( c ) else : print ( 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_820_B_221",
            "java_code": "import java . util . Scanner ;  public class B820 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; double alpha = Math . toRadians ( in . nextInt ( ) ) ; double minDiff = Double . POSITIVE_INFINITY ; int [ ] answer = null ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) x = 180 / n  y = int ( m / x )  z = y * x  w = ( y + 1 ) * x  if m - z <= w - m : v = yelse : v = y + 1 if v == 0 : v = 1 if 2 + v > n : print ( 2 , 1 , n ) else : print ( 2 , 1 , 2 + v ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_462_B_222",
            "java_code": "import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "from collections import Counterdef f ( arr , k ) : x = Counter ( arr ) ans = 0 for i , j in sorted ( x . items ( ) , key = lambda s : s [ 1 ] , reverse = True ) : if j <= k : k -= j ans += j ** 2 else : ans += k ** 2 k = 0 break return ans   a , b = map ( int , input ( ) . strip ( ) . split ( ) ) lst = input ( ) print ( f ( lst , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1791_A_223",
            "java_code": "import java . io . * ; class GFG { static long evenPowerSum ( int n ) { return ( 8 * n * ( n + 1 ) * ( 2 * n + 1 ) * ( 3 * n * n + 3 * n - 1 ) ) / 15 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( evenPowerSum ( n ) ) ; } }",
            "python_code": "def evenPowerSum ( n ) : NEWLINE INDENT return ( 8 * n * ( n + 1 ) * ( 2 * n + 1 ) * ( 3 * n * n + 3 * n - 1 ) ) / 15 ; NEWLINE DEDENT n = 4 ; NEWLINE print ( int ( evenPowerSum ( n ) ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4644_A_224",
            "java_code": "class GFG { static double sumOfSeries ( int n ) { double res = 0.0 ; int sum = 0 , prod = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { sum += i ; prod *= i ; res += ( ( double ) sum / prod ) ; } return res ; } public static void main ( String arg [ ] ) { int n = 4 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT res = 0.0 NEWLINE sum = 0 NEWLINE prod = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum = sum + i NEWLINE prod = prod * i NEWLINE res = res + ( sum / prod ) NEWLINE DEDENT return res NEWLINE DEDENT n = 4 NEWLINE print ( round ( sumOfSeries ( n ) , 5 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_650_A_225",
            "java_code": "import java . util . * ; class GFG { static int minDiff ( int n , int x , int A [ ] ) { int mn = A [ 0 ] , mx = A [ 0 ] ; for ( int i = 0 ; i < n ; ++ i ) { mn = Math . min ( mn , A [ i ] ) ; mx = Math . max ( mx , A [ i ] ) ; } return Math . max ( 0 , mx - mn - 2 * x ) ; } public static void main ( String [ ] args ) { int n = 3 , x = 3 ; int A [ ] = { 1 , 3 , 6 } ; System . out . println ( minDiff ( n , x , A ) ) ; } }",
            "python_code": "def minDiff ( n , x , A ) : NEWLINE INDENT mn = A [ 0 ] NEWLINE mx = A [ 0 ] NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT mn = min ( mn , A [ i ] ) NEWLINE mx = max ( mx , A [ i ] ) NEWLINE DEDENT return max ( 0 , mx - mn - 2 * x ) NEWLINE DEDENT n = 3 NEWLINE x = 3 NEWLINE A = [ 1 , 3 , 6 ] NEWLINE print ( minDiff ( n , x , A ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1062_A_226",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) nums = [ int ( j ) for j in input ( ) . split ( ) ] p = 0 val = 0 while p < n : length , sp = 1 , p + 1 while sp < n : if nums [ sp ] - nums [ sp - 1 ] < 2 : sp += 1 length += 1 else : break if nums [ p ] != 1 : length -= 1 if nums [ sp - 1 ] != 1000 : length -= 1 val = max ( val , length ) p = spprint ( val ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1505_B_227",
            "java_code": "import java . util . * ; public class HelloWorld { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; while ( n >= 10 ) { n = sum ( n ) ; } System . out . println ( n ) ; } static int sum ( int n ) { int sum = 0 ; while ( n > 0 ) { sum += n % 10 ; n = n / 10 ; } return sum ; } }",
            "python_code": "print ( ( int ( input ( ) ) - 1 ) % 9 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p072_A_228",
            "java_code": "public final class p072 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p072 ( ) . run ( ) ) ; } private static final int LIMIT = Library . pow ( 10 , 6 ) ; public String run ( ) { long sum = 0 ; int [ ] totients = Library . listTotients ( LIMIT ) ; for ( int i = 2 ; i < totients . length ; i ++ ) sum += totients [ i ] ; return Long . toString ( sum ) ; } }",
            "python_code": "import eulerlib NEWLINE import itertools NEWLINE def compute ( ) : NEWLINE INDENT totients = eulerlib . list_totients ( 10 ** 6 ) NEWLINE ans = sum ( itertools . islice ( totients , 2 , None ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4065_A_229",
            "java_code": "import java . util . * ; class Odd { public static int oddSum ( int n ) { int sum = 0 , curr = 1 ; for ( int i = 0 ; i < n ; i ++ ) { sum += curr ; curr += 2 ; } return sum ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( \" Sum of first \" + n + \" Odd Numbers is: \" + oddSum ( n ) ) ; } }",
            "python_code": "def oddSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE curr = 1 NEWLINE i = 0 NEWLINE while i < n : NEWLINE INDENTINDENT sum = sum + curr NEWLINE curr = curr + 2 NEWLINE i = i + 1 NEWLINE DEDENT return sum NEWLINE DEDENT n = 20 NEWLINE print ( \" Sum of first\" , n , \"Odd Numbers is: \" , oddSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_990_B_230",
            "java_code": "import com . sun . security . jgss . GSSUtil ;  import javax . swing . table . AbstractTableModel ; import java . io . * ; import java . util . * ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; ",
            "python_code": "n , K = map ( int , input ( ) . split ( ) ) b = sorted ( [ int ( x ) for x in input ( ) . split ( ) ] ) l = cur = 0 for i in range ( 1 , n ) : if b [ i ] == b [ i - 1 ] : continue if b [ i ] > b [ i - 1 ] + K : l = i else : cur += ( i - l ) ; l = iprint ( n - cur ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1396_A_231",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int xorEqualsOrCount ( int N ) { int count = 0 ; int bit ; while ( N > 0 ) { bit = N % 2 ; if ( bit == 0 ) count ++ ; N = N / 2 ; } return ( int ) Math . pow ( 2 , count ) ; } public static void main ( String args [ ] ) { int N = 7 ; System . out . println ( xorEqualsOrCount ( N ) ) ; } }",
            "python_code": "def xorEqualsOrCount ( N ) : NEWLINE INDENT count = 0 NEWLINE while ( N > 0 ) : NEWLINE INDENTINDENT bit = N % 2 NEWLINE if bit == 0 : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT N //= 2 NEWLINE DEDENT return int ( pow ( 2 , count ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 7 NEWLINE print ( xorEqualsOrCount ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1319_A_232",
            "java_code": "import java . lang . * ; class GFG { static int findKHCF ( int x , int y , int k ) { int small = Math . min ( x , y ) ; int count = 1 ; for ( int i = 2 ; i <= small ; i ++ ) { if ( x % i == 0 && y % i == 0 ) count ++ ; if ( count == k ) return i ; } return - 1 ; } public static void main ( String [ ] args ) { int x = 4 , y = 24 , k = 3 ; System . out . print ( findKHCF ( x , y , k ) ) ; } }",
            "python_code": "def findKHCF ( x , y , k ) : NEWLINE INDENT small = min ( x , y ) NEWLINE count = 1 NEWLINE for i in range ( 2 , small + 1 ) : NEWLINE INDENTINDENT if ( x % i == 0 and y % i == 0 ) : NEWLINE INDENTINDENTINDENT count = count + 1 NEWLINE DEDENT if ( count == k ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return - 1 NEWLINE DEDENT x = 4 NEWLINE y = 24 NEWLINE k = 3 NEWLINE print ( findKHCF ( x , y , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5019_A_233",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return ( int ) Math . pow ( n , 2 ) + 2 * n + 2 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "from math import * NEWLINE def nthTerm ( n ) : NEWLINE INDENT return pow ( n , 2 ) + 2 * n + 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1720_A_234",
            "java_code": "import java . io . * ; class GFG { static int Centered_Trigunal_num ( int n ) { return ( 3 * n * n + 3 * n + 2 ) / 2 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( Centered_Trigunal_num ( n ) ) ; n = 12 ; System . out . println ( Centered_Trigunal_num ( n ) ) ; } }",
            "python_code": "def Centered_Trigunal_num ( n ) : NEWLINE INDENT return ( 3 * n * n + 3 * n + 2 ) // 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( Centered_Trigunal_num ( n ) ) NEWLINE n = 12 NEWLINE print ( Centered_Trigunal_num ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_143_B_235",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . * ;   public class Main { public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) dot = 0 if \".\" in s : dot = s . index ( \".\" ) else : dot = len ( s ) a = s [ 0 : dot ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1146_A_236",
            "java_code": "import java . util . Scanner ;  public class Love_A {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  String s = in . nextLine ( ) ; int sa = s . replaceAll ( \"[^a]\" , \"\" ) . length ( ) ;  if ( sa <= s . length ( ) / 2 ) { System . out . println ( 2 * sa - 1 ) ; } else { System . out . println ( s . length ( ) ) ; } }  }",
            "python_code": "s = [ i for i in input ( ) ] i = 0 a = 0 x = 0 while i < len ( s ) : if s [ i ] == 'a' : a = a + 1 else : x = x + 1 i = i + 1 if a > x : print ( a + x ) else : print ( a + a - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1687_A_237",
            "java_code": "public class GFG { static int countOddPair ( int A [ ] , int N ) { int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ( A [ i ] % 2 != 1 ) ) { count ++ ; } } int evenPairCount = count * ( count - 1 ) / 2 ; int totPairs = N * ( N - 1 ) / 2 ; return totPairs - evenPairCount ; } public static void main ( String [ ] args ) { int A [ ] = { 5 , 6 , 2 , 8 } ; int N = A . length ; System . out . println ( countOddPair ( A , N ) ) ; } }",
            "python_code": "def countOddPair ( A , N ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT if ( A [ i ] % 2 != 1 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT evenPairCount = count * ( count - 1 ) / 2 NEWLINE totPairs = N * ( N - 1 ) / 2 NEWLINE return ( int ) ( totPairs - evenPairCount ) NEWLINE DEDENT A = [ 5 , 6 , 2 , 8 ] NEWLINE N = len ( A ) NEWLINE print ( countOddPair ( A , N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1845_A_238",
            "java_code": "class GFG { static int count ( int n ) { int cnt = 0 ; int p = 1 ; while ( p <= n ) { cnt ++ ; p *= 2 ; } return cnt ; } public static void main ( String args [ ] ) { int n = 7 ; System . out . print ( count ( n ) ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT cnt = 0 NEWLINE p = 1 NEWLINE while ( p <= n ) : NEWLINE INDENTINDENT cnt = cnt + 1 NEWLINE p *= 2 NEWLINE DEDENT return cnt NEWLINE DEDENT n = 7 NEWLINE print ( count ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_932_A_239",
            "java_code": "import java . util . Scanner ;  public class Codeforces_932A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; char [ ] s = in . next ( ) . toCharArray ( ) ; for ( int i = 0 ; i < s . length ; i ++ ) { System . out . printf ( \"%c\" , s [ i ] ) ; } for ( int i = s . length - 1 ; i >= 0 ; i -- ) { System . out . printf ( \"%c\" , s [ i ] ) ; } } }",
            "python_code": "s = input ( )  print ( s + s [ : : - 1 ] )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4687_A_240",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int summation ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( i * i ) ; return sum ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( summation ( n ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT return sum ( [ i ** 2 for i in range ( 1 , n + 1 ) ] ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 NEWLINE print ( summation ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_560_A_241",
            "java_code": "public class Solution { public int subarraySum ( int [ ] nums , int k ) { int count = 0 , sum = 0 ; HashMap < Integer , Integer > map = new HashMap < > ( ) ; map . put ( 0 , 1 ) ; for ( int i = 0 ; i < nums . length ; i ++ ) { sum += nums [ i ] ; if ( map . containsKey ( sum - k ) ) count += map . get ( sum - k ) ; map . put ( sum , map . getOrDefault ( sum , 0 ) + 1 ) ; } return count ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def subarraySum ( self , nums , k ) : NEWLINE INDENTINDENT sum_map = { } NEWLINE sum_map [ 0 ] = 1 NEWLINE count = curr_sum = 0 NEWLINE for num in nums : NEWLINE INDENTINDENTINDENT curr_sum += num NEWLINE count += sum_map . get ( curr_sum - k , 0 ) NEWLINE sum_map [ curr_sum ] = sum_map . get ( curr_sum , 0 ) + 1 NEWLINE DEDENT return count NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_4_A_242",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ; int w = sc . nextInt ( ) ; if ( w % 2 == 0 && w != 2 ) out . println ( \"YES\" ) ; else out . println ( \"NO\" ) ;",
            "python_code": "kg = int ( input ( ) ) if kg <= 2 : print ( \"NO\" ) else : for n in range ( 2 , kg , 2 ) : if ( kg - n ) % 2 == 0 : print ( \"YES\" ) break elif n == kg - 1 or n == kg - 2 : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_455_A_243",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { public int countPaths ( int m , int n ) { if ( m == 1 || n == 1 ) return 1 ; return countPaths ( m - 1 , n ) + countPaths ( m , n - 1 ) ; } public static void main ( String args [ ] ) { GFG g = new GFG ( ) ; int n = 5 , m = 5 ; System . out . println ( g . countPaths ( n , m ) ) ; } }",
            "python_code": "def countPaths ( m , n ) : NEWLINE INDENT if m == 1 or n == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return ( countPaths ( m - 1 , n ) + countPaths ( m , n - 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 NEWLINE m = 5 NEWLINE print ( countPaths ( n , m ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1295_A_244",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; StringBuilder sb = new StringBuilder ( \"\" ) ; while ( n > 3 ) { sb . append ( \"1\" ) ; n -= 2 ; } String s = sb . toString ( ) ; if ( n == 3 ) s = '7' + s ; if ( n == 2 ) s = s + '1' ; System . out . println ( s ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) if ( n % 2 == 1 ) : print ( 7 , end = '' ) n -= 3 while ( n > 0 ) : print ( 1 , end = '' ) n -= 2 print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_283_A_245",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; ",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3688_A_246",
            "java_code": "import java . io . * ; class GFG { static float area ( float r ) { return ( float ) ( ( 0.5 ) * ( 3.14 ) * ( r * r ) ) ; } static float perimeter ( float r ) { return ( float ) ( ( 3.14 ) * ( r ) ) ; } public static void main ( String [ ] args ) { float r = 10 ; System . out . println ( \"The Area of Semicircle: \" + area ( r ) ) ; System . out . println ( \"The Perimeter of Semicircle:\" + + perimeter ( r ) ) ; } }",
            "python_code": "def area ( r ) : NEWLINE INDENT return ( 0.5 ) * ( 3.14 ) * ( r * r ) NEWLINE DEDENT def perimeter ( r ) : NEWLINE INDENT return ( 3.14 ) * ( r ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT r = 10 NEWLINE print ( \"The Area of Semicircle: \" , area ( r ) ) NEWLINE print ( \"The Perimeter of Semicircle: \" , perimeter ( r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1013_A_247",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "size = int ( input ( ) ) num1 = list ( map ( int , input ( ) . split ( ' ' ) ) ) nums2 = list ( map ( int , input ( ) . split ( ' ' ) ) ) sum1 = sum ( num1 ) sum2 = sum ( nums2 ) if sum2 <= sum1 : print ( 'Yes' ) else : print ( 'No' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1043_B_248",
            "java_code": "import javax . swing . plaf . IconUIResource ; import java . awt . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . * ; import static java . lang . Math . * ; public class Main { public static void main ( String [ ] args ) { FastScanner sc = new FastScanner ( ) ;",
            "python_code": "n = int ( input ( ) ) a = [ 0 ] + [ int ( i ) for i in input ( ) . split ( ) ] x = [ ] for ind , a_i in enumerate ( a [ 1 : ] ) : x . append ( a_i - a [ ind ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_794_B_249",
            "java_code": "import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . util . * ;   public class CodeForce { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringBuilder sb = new StringBuilder ( ) ;",
            "python_code": "from math import sqrtn , h = map ( int , input ( ) . split ( ) ) result = [ ] for i in range ( 1 , n ) : result . append ( h * sqrt ( i / n ) ) print ( * result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_304_A_250",
            "java_code": "import java . util . Scanner ;  public class PythogoreanTriplets { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  int n = scan . nextInt ( ) ; int count = 0 ;  for ( int a = 2 ; a < n ; a ++ ) { for ( int b = 1 ; b < a ; b ++ ) { double c = Math . sqrt ( a * a + b * b ) ; if ( c - ( int ) c == 0.0 && c <= n ) count ++ ; } } System . out . println ( count ) ; } }",
            "python_code": "from math import gcd , sqrtn = int ( input ( ) ) ; ans = 0 for i in range ( 5 , n + 1 ) : for j in range ( 1 , i ) : k = i ** 2 - j ** 2 if int ( sqrt ( k ) ) == sqrt ( k ) : ans += 1 print ( ans // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_492_B_251",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;      public class Main { static double binarySearch ( int arr [ ] , int l , int r , double x ) {  if ( r >= l ) { int mid = l ;  if ( ( arr [ mid ] - arr [ mid - 1 ] ) / 2.0 > x ) { x = ( arr [ mid ] - arr [ mid - 1 ] ) / 2.0 ;  }  return binarySearch ( arr , mid + 1 , r , x ) ; } ",
            "python_code": "n , l = map ( int , input ( ) . split ( ) ) lights = sorted ( list ( map ( int , input ( ) . split ( ) ) ) , reverse = True )  max_dif = 0  for i in range ( len ( lights ) - 1 ) : max_dif = max ( max_dif , lights [ i ] - lights [ i + 1 ] )  print ( format ( max ( max_dif / 2 , lights [ - 1 ] , l - lights [ 0 ] ) , '.10f' ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_15_A_252",
            "java_code": "import java . util . * ; class GFG { static boolean isDivisible ( int n ) { int d ; while ( ( n / 100 ) > 0 ) { d = n % 10 ; n /= 10 ; n = Math . abs ( n - ( d * 14 ) ) ; } return ( n % 47 == 0 ) ; } public static void main ( String [ ] args ) { int N = 59173 ; if ( isDivisible ( N ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n = abs ( n - ( d * 14 ) ) NEWLINE DEDENT return ( n % 47 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 59173 NEWLINE if ( isDivisible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_739_A_253",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) ans = n + 1 for i in range ( m ) : a , b = map ( int , input ( ) . split ( ) ) ans = min ( ans , b - a + 1 ) print ( ans ) arr = [ 0 ] * nput = 0 for i in range ( n ) : arr [ i ] = put put += 1 if ( put == ans ) : put = 0 print ( * arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_B_254",
            "java_code": "import java . util . Scanner ;  public class problem69 {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) NEWLINE for i in range ( t ) : z = int ( input ( ) ) NEWLINE c = 0 NEWLINE for j in range ( z // 2020 + 1 ) : if NEWLINE ( z - 2020 * j ) % 2021 == 0 : c = 1 NEWLINE if c == 1 : NEWLINE INDENT print ( 'YES' ) else : NEWLINE print ( 'NO' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1341_A_255",
            "java_code": "import java . util . * ; import java . io . * ;  public class Practice { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , a , b , c , d = map ( int , input ( ) . split ( ) ) u1 = a + b d1 = abs ( a - b ) u2 = c + d d2 = abs ( c - d ) z = 0 if ( n * u1 < d2 ) : z = 1 elif ( n * d1 > u2 ) : z = 1 if ( z == 1 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2908_A_256",
            "java_code": "class GFG { static int solve ( double M , double N , double s ) { int ans = ( ( int ) ( Math . ceil ( M / s ) ) * ( int ) ( Math . ceil ( N / s ) ) ) ; return ans ; } public static void main ( String [ ] args ) { double N = 12 , M = 13 , s = 4 ; System . out . println ( solve ( M , N , s ) ) ; } }",
            "python_code": "import math NEWLINE def solve ( M , N , s ) : NEWLINE INDENT ans = ( ( math . ceil ( M / s ) ) * ( math . ceil ( N / s ) ) ) ; NEWLINE return ans NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 12 NEWLINE M = 13 NEWLINE s = 4 NEWLINE print ( solve ( M , N , s ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1220_A_257",
            "java_code": "import java . io . * ; class GFG { static double Area ( int b1 , int b2 , int h ) { return ( ( b1 + b2 ) / 2 ) * h ; } public static void main ( String [ ] args ) { int base1 = 8 , base2 = 10 , height = 6 ; double area = Area ( base1 , base2 , height ) ; System . out . println ( \"Area is: \" + area ) ; } }",
            "python_code": "def Area ( b1 , b2 , h ) : NEWLINE INDENT return ( ( b1 + b2 ) / 2 ) * h NEWLINE DEDENT base1 = 8 ; base2 = 10 ; height = 6 NEWLINE area = Area ( base1 , base2 , height ) NEWLINE print ( \"Area is:\" , area ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3434_A_258",
            "java_code": "import java . io . * ; class GFG { static int sum_even_and_even_index ( int arr [ ] , int n ) { int i = 0 , sum = 0 ; for ( i = 0 ; i < n ; i += 2 ) { if ( arr [ i ] % 2 == 0 ) { sum += arr [ i ] ; } } return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 6 , 12 , 1 , 18 , 8 } ; int n = arr . length ; System . out . println ( \"Sum of even numbers\" + \" at even indices is \" + + sum_even_and_even_index ( arr , n ) ) ; } }",
            "python_code": "def sum_even_and_even_index ( arr , n ) : NEWLINE INDENT i = 0 NEWLINE sum = 0 NEWLINE for i in range ( 0 , n , 2 ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 == 0 ) : NEWLINE INDENTINDENTINDENT sum += arr [ i ] NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT arr = [ 5 , 6 , 12 , 1 , 18 , 8 ] NEWLINE n = len ( arr ) NEWLINE print ( \"Sum of even numbers at \" , \"even indices is \" , sum_even_and_even_index ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_874_A_259",
            "java_code": "import java . io . * ; public class GFG { static int calculateSum ( int n ) { return ( int ) ( ( 2 * Math . pow ( ( n * ( n + 1 ) / 2 ) , 2 ) ) ) + ( ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT return ( ( 2 * ( n * ( n + 1 ) / 2 ) ** 2 ) + ( ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ) ) NEWLINE DEDENT n = 4 NEWLINE print ( \"Sum =\" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1334_A_260",
            "java_code": "import static java . lang . Math . pow ; class Test { static int sumOfTermsInNthRow ( int n ) { int sum = ( int ) ( n * ( 2 * pow ( n , 2 ) + 1 ) ) ; return sum ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( \"Sum of all the terms in nth row = \" + sumOfTermsInNthRow ( n ) ) ; } }",
            "python_code": "from math import pow NEWLINE def sumOfTermsInNthRow ( n ) : NEWLINE INDENT sum = n * ( 2 * pow ( n , 2 ) + 1 ) NEWLINE return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 4 NEWLINE print ( \"Sum of all the terms in nth row =\" , int ( sumOfTermsInNthRow ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1325_A_261",
            "java_code": "import java . util . Scanner ;  public class A1325 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = t ; i > 0 ; i -- ) { int x = scanner . nextInt ( ) ; System . out . println ( 1 + \" \" + ( x - 1 ) ) ; } } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : a = int ( input ( ) ) print ( a - 1 , 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1453_B_262",
            "java_code": "import java . io . * ; import java . util . * ;  public class test {",
            "python_code": "import sysimport NEWLINE mathfrom NEWLINE collections NEWLINE import deque NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1389_A_263",
            "java_code": "import java . util . Scanner ; public class DigestThread { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int num1 , num2 ; num1 = sc . nextInt ( ) ; num2 = sc . nextInt ( ) ; if ( num1 * 2 > num2 ) System . out . println ( \"-1 -1\" ) ; else System . out . println ( num1 + \" \" + num1 * 2 ) ; } } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : NEWLINE INDENT m , n = map ( int , input ( ) . split ( ) ) NEWLINE if n % m == 0 : NEWLINE INDENTINDENT print ( m , n ) NEWLINE DEDENT elif m * 2 <= n : NEWLINE INDENTINDENT print ( m , m * 2 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( - 1 , - 1 ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4712_A_264",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { static int N = 3 ; static double calcDeterminant ( int arr [ ] ) { double determinant = 0 ; for ( int i = 0 ; i < N ; i ++ ) { determinant += Math . pow ( arr [ i ] , 3 ) ; } determinant -= 3 * arr [ 0 ] * arr [ 1 ] * arr [ 2 ] ; return determinant ; } static public void main ( String args [ ] ) { int [ ] arr = { 4 , 5 , 3 } ; System . out . println ( calcDeterminant ( arr ) ) ; } }",
            "python_code": "def calcDeterminant ( arr , n ) : NEWLINE INDENT determinant = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT determinant += pow ( arr [ i ] , 3 ) NEWLINE DEDENT determinant -= 3 * arr [ 0 ] * arr [ 1 ] * arr [ 2 ] NEWLINE return determinant NEWLINE DEDENT arr = [ 4 , 5 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( calcDeterminant ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_859_A_265",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; int sum = 0 ; if ( a [ n - 1 ] > 25 ) { sum = a [ n - 1 ] - 25 ; } System . out . println ( sum ) ; } }",
            "python_code": "K = int ( input ( ) ) T = list ( map ( int , input ( ) . split ( ) ) ) T . sort ( ) if T [ - 1 ] <= 25 : print ( '0' ) else : print ( T [ - 1 ] - 25 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_5_A_266",
            "java_code": "import java . util . * ; public class a1 { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int l = 0 ; int c = 0 ; String s ; while ( in . hasNextLine ( ) ) { s = in . nextLine ( ) ; if ( s . charAt ( 0 ) == '+' ) c ++ ; else if ( s . charAt ( 0 ) == '-' ) c -- ; else { l += c * ( s . length ( ) - s . indexOf ( ':' ) - 1 ) ; } } System . out . println ( l ) ; } }",
            "python_code": "'''Jana Goodman5A chat server''' import sys  ADD = '+' REMOVE = '-' SEND = ':' if __name__ == '__main__' : chatters , answer = 0 , 0 for command in sys . stdin : if command [ 0 ] == ADD : chatters += 1 elif command [ 0 ] == REMOVE : chatters -= 1 else : name , message = command . split ( SEND ) answer += chatters * len ( message . strip ( ) ) print ( answer ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1701_A_267",
            "java_code": "class GFG { static boolean isMultipleof5 ( int n ) { while ( n > 0 ) n = n - 5 ; if ( n == 0 ) return true ; return false ; } public static void main ( String [ ] args ) { int n = 19 ; if ( isMultipleof5 ( n ) == true ) System . out . printf ( \"%d is multiple of 5\\n\" , n ) ; else System . out . printf ( \"%d is not a multiple of 5\\n\" , n ) ; } }",
            "python_code": "def isMultipleof5 ( n ) : NEWLINE INDENT while ( n > 0 ) : NEWLINE INDENTINDENT n = n - 5 NEWLINE DEDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return 0 NEWLINE DEDENT i = 19 NEWLINE if ( isMultipleof5 ( i ) == 1 ) : NEWLINE INDENT print ( i , \"is multiple of 5\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( i , \"is not a multiple of 5\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4824_A_268",
            "java_code": "class GFG { static int findSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( ( i * ( i + 1 ) * ( 2 * i + 1 ) ) / 6 ) ; return sum ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT summ = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT summ = ( summ + ( ( i * ( i + 1 ) * ( 2 * i + 1 ) ) / 6 ) ) NEWLINE DEDENT return summ NEWLINE DEDENT n = 3 NEWLINE print ( int ( findSum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_390_A_269",
            "java_code": "import java . util . * ; class GFG { static int make_permutation ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) ans += Math . abs ( i + 1 - arr [ i ] ) ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 3 , 8 , 1 , 1 } ; int n = arr . length ; System . out . print ( make_permutation ( arr , n ) ) ; } }",
            "python_code": "def make_permutation ( arr , n ) : NEWLINE INDENT arr . sort ( ) ; NEWLINE ans = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT ans += abs ( i + 1 - arr [ i ] ) ; NEWLINE DEDENT return ans ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 5 , 3 , 8 , 1 , 1 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( make_permutation ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1194_A_270",
            "java_code": "class GFG { static void last_digit ( int X , int Y ) { System . out . print ( X % Y ) ; } public static void main ( String [ ] args ) { int X = 55 , Y = 3 ; last_digit ( X , Y ) ; } }",
            "python_code": "def last_digit ( X , Y ) : NEWLINE INDENT print ( X % Y ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT X = 55 ; Y = 3 ; NEWLINE last_digit ( X , Y ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_285_A_271",
            "java_code": "import java . util . * ; public class SlightlyDecreasingPermutations {  public static void main ( String [ ] args ) {",
            "python_code": "arr = [ int ( x ) for x in input ( ) . split ( ) ] n , k = arr [ 0 ] , arr [ 1 ] c = n - k - 1 ans = [ i + 1 for i in range ( c ) ] for i in range ( n , n - k - 1 , - 1 ) : ans . append ( i ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_439_A_272",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , d = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) s = sum ( l ) + ( n - 1 ) * 10  if ( s > d ) : print ( - 1 ) else : x = ( n - 1 ) * 2 x += ( d - s ) // 5 print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1033_A_273",
            "java_code": "import java . util . * ; public class test { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) ax , ay = map ( int , input ( ) . split ( ) ) bx , by = map ( int , input ( ) . split ( ) ) cx , cy = map ( int , input ( ) . split ( ) ) if ax in range ( min ( bx , cx ) , max ( bx , cx ) ) or ay in range ( min ( by , cy ) , max ( by , cy ) ) : print ( 'NO' ) else : print ( 'YES' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p015_A_274",
            "java_code": "public final class p015 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p015 ( ) . run ( ) ) ; } public String run ( ) { return Library . binomial ( 40 , 20 ) . toString ( ) ; } }",
            "python_code": "import eulerlib NEWLINE def compute ( ) : NEWLINE INDENT return str ( eulerlib . binomial ( 40 , 20 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5288_A_275",
            "java_code": "public class GFG { static int sum ( int x , int y , int n ) { int sum1 = ( int ) ( ( Math . pow ( x , 2 ) * ( Math . pow ( x , 2 * n ) - 1 ) ) / ( Math . pow ( x , 2 ) - 1 ) ) ; int sum2 = ( int ) ( ( x * y * ( Math . pow ( x , n ) * Math . pow ( y , n ) - 1 ) ) / ( x * y - 1 ) ) ; return sum1 + sum2 ; } public static void main ( String args [ ] ) { int x = 2 , y = 2 , n = 2 ; System . out . println ( sum ( x , y , n ) ) ; } }",
            "python_code": "def sum ( x , y , n ) : NEWLINE INDENT sum1 = ( ( x ** 2 ) * ( x ** ( 2 * n ) - 1 ) ) // ( x ** 2 - 1 ) NEWLINE sum2 = ( x * y * ( x ** n * y ** n - 1 ) ) // ( x * y - 1 ) NEWLINE return ( sum1 + sum2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 2 NEWLINE y = 2 NEWLINE n = 2 NEWLINE print ( sum ( x , y , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1030_A_276",
            "java_code": "import java . util . Scanner ; public class CF800 { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int x = input . nextInt ( ) ; boolean y = false ; int [ ] k = new int [ x ] ; for ( int i = 0 ; i < x ; i ++ ) { k [ i ] = input . nextInt ( ) ; if ( k [ i ] == 1 ) { y = true ; } } if ( y == true ) { System . out . println ( \"Hard\" ) ; } else { System . out . println ( \"Easy\" ) ; } } }",
            "python_code": "_ = input ( ) l = map ( int , input ( ) . split ( ) )  if any ( l ) : print ( \"HARD\" ) else : print ( \"EASY\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_489_A_277",
            "java_code": "import java . util . * ; import java . io . * ; public class A { public static void main ( String ar [ ] ) throws Exception { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; int arr [ ] = new int [ n ] ; String str [ ] = br . readLine ( ) . split ( \" \" ) ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = Integer . parseInt ( str [ i ] ) ; sort ( arr , n ) ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) print ( n - 1 ) for i in range ( n - 1 ) : j = a . index ( min ( a [ i : ] ) , i ) print ( i , j ) a [ i ] , a [ j ] = a [ j ] , a [ i ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1878_A_278",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { System . out . println ( Integer . bitCount ( 4 ) ) ; System . out . println ( Integer . bitCount ( 15 ) ) ; } }",
            "python_code": "print ( bin ( 4 ) . count ( '1' ) ) ; NEWLINE print ( bin ( 15 ) . count ( '1' ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1013_A_279",
            "java_code": "import java . util . * ;  public class CodeForces1013A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = input . nextInt ( ) ; sum += x ; } for ( int i = 0 ; i < n ; i ++ ) { sum -= input . nextInt ( ) ; } if ( sum < 0 ) { System . out . println ( \"No\" ) ; } else { System . out . println ( \"Yes\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) print ( 'YES' if sum ( [ int ( i ) for i in input ( ) . split ( ) ] ) >= sum ( [ int ( i ) for i in input ( ) . split ( ) ] ) else 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_A_280",
            "java_code": "import java . util . Scanner ;  public class _0844InitialBet {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int c1 = sc . nextInt ( ) ; int c2 = sc . nextInt ( ) ; int c3 = sc . nextInt ( ) ; int c4 = sc . nextInt ( ) ; int c5 = sc . nextInt ( ) ; int sum = c1 + c2 + c3 + c4 + c5 ; if ( sum % 5 == 0 && sum != 0 ) { System . out . println ( sum / 5 ) ; } else { System . out . println ( - 1 ) ; } }  }",
            "python_code": "c1 , c2 , c3 , c4 , c5 = map ( int , input ( ) . split ( ) ) if ( c1 + c2 + c3 + c4 + c5 ) % 5 == 0 and ( c1 + c2 + c3 + c4 + c5 ) != 0 : print ( ( c1 + c2 + c3 + c4 + c5 ) // 5 ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1102_A_281",
            "java_code": "import java . util . * ; public class MyClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long s = n * ( n + 1 ) / 2 ; if ( s % 2 == 0 ) System . out . println ( 0 ) ; else System . out . println ( 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) s = ( ( n + 1 ) // 2 ) print ( s % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5116_A_282",
            "java_code": "import java . util . * ; class GFG { static int findAnswer ( int n , int [ ] arr ) { Arrays . sort ( arr ) ; int sum = 0 ; for ( int i = 0 ; i < n / 2 ; ++ i ) { sum += ( arr [ i ] + arr [ n - i - 1 ] ) * ( arr [ i ] + arr [ n - i - 1 ] ) ; } return sum ; } public static void main ( String [ ] args ) { int [ ] arr = { 53 , 28 , 143 , 5 } ; int n = arr . length ; System . out . println ( findAnswer ( n , arr ) ) ; } }",
            "python_code": "def findAnswer ( n , arr ) : NEWLINE INDENT arr . sort ( reverse = False ) NEWLINE sum = 0 NEWLINE for i in range ( int ( n / 2 ) ) : NEWLINE INDENTINDENT sum += ( ( arr [ i ] + arr [ n - i - 1 ] ) * ( arr [ i ] + arr [ n - i - 1 ] ) ) NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 53 , 28 , 143 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( findAnswer ( n , arr ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_291_A_283",
            "java_code": "public class GFG { public static double floatError ( double no ) { double sum = 0.0 ; for ( int i = 0 ; i < 10 ; i ++ ) { sum = sum + no ; } return sum ; } public static void main ( String [ ] args ) { System . out . println ( floatError ( 0.1 ) ) ; } }",
            "python_code": "def floatError ( no ) : NEWLINE INDENT sum = 0.0 NEWLINE for i in range ( 10 ) : NEWLINE INDENTINDENT sum = sum + no NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT print ( floatError ( 0.1 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1803_A_284",
            "java_code": "import java . io . * ; class GFG { static boolean sameLength ( int A , int B ) { while ( ( A > 0 ) && ( B > 0 ) ) { A = A / 10 ; B = B / 10 ; } if ( ( A == 0 ) && ( B == 0 ) ) return true ; return false ; } public static void main ( String [ ] args ) { int A = 21 , B = 1 ; if ( sameLength ( A , B ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def sameLength ( A , B ) : NEWLINE INDENT while ( A > 0 and B > 0 ) : NEWLINE INDENTINDENT A = A / 10 ; NEWLINE B = B / 10 ; NEWLINE DEDENT if ( A == 0 and B == 0 ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT A = 21 ; B = 1 ; NEWLINE if ( sameLength ( A , B ) ) : NEWLINE INDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4914_A_285",
            "java_code": "import java . util . * ; class solution { static void printExpansion ( String str ) { String suff = \"\" ; for ( int i = str . length ( ) - 1 ; i >= 0 ; i -- ) { suff = suff + str . charAt ( i ) ; System . out . print ( suff ) ; } } public static void main ( String args [ ] ) { String str = \"geeks\" ; printExpansion ( str ) ; } }",
            "python_code": "def printExpansion ( str ) : NEWLINE INDENT suff = \"\" NEWLINE for i in range ( len ( str ) - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT suff = suff + str [ i ] NEWLINE print ( suff , end = \"\" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str = \"geeks\" NEWLINE printExpansion ( str ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_732_B_286",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "m , k = [ int ( i ) for i in input ( ) . split ( ) ]  days = [ int ( i ) for i in input ( ) . split ( ) ]   s1 = 0 for q in range ( 1 , m ) : if days [ q ] + days [ q - 1 ] < k : s1 += k - ( days [ q ] + days [ q - 1 ] ) days [ q ] += k - ( days [ q ] + days [ q - 1 ] )  print ( s1 ) print ( * days ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_253_A_287",
            "java_code": "class GFG { static int xorOfArray ( int arr [ ] , int n ) { int xor_arr = 0 ; for ( int i = 0 ; i < n ; i ++ ) { xor_arr = xor_arr ^ arr [ i ] ; } return xor_arr ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 9 , 12 , 13 , 15 } ; int n = arr . length ; System . out . println ( xorOfArray ( arr , n ) ) ; } }",
            "python_code": "def xorOfArray ( arr , n ) : NEWLINE INDENT xor_arr = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT xor_arr = xor_arr ^ arr [ i ] NEWLINE DEDENT return xor_arr NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 3 , 9 , 12 , 13 , 15 ] NEWLINE n = len ( arr ) NEWLINE print ( xorOfArray ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_407_B_288",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ;  public class pracs { public static int dp [ ] ; public static int [ ] arr ; public static int MOD = ( int ) ( 1e9 + 7 ) ; public static void main ( String [ ] args ) { FastReader in = new FastReader ( ) ; int n = in . nextInt ( ) ; arr = new int [ n + 2 ] ; for ( int i = 1 ; i <= n ; i ++ ) arr [ i ] = in . nextInt ( ) ; dp = new int [ n + 2 ] ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) dp = [ 0 for i in range ( n + 1 ) ] for i in range ( n + 1 ) : if i > 0 : dp [ i ] = ( 2 * dp [ i - 1 ] + 2 - dp [ a [ i - 1 ] - 1 ] ) % 1000000007 print ( ( dp [ n ] + 1000000007 ) % 1000000007 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1360_A_289",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( int ) Math . max ( Math . pow ( Math . max ( a , b ) , 2 ) , Math . pow ( 2 * Math . min ( a , b ) , 2 ) ) ) ; } } } ;",
            "python_code": "for x in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) mi = min ( a , b ) ma = max ( a , b ) if 2 * mi < ma : print ( ma ** 2 ) else : print ( ( mi * 2 ) ** 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2049_A_290",
            "java_code": "class GFG { static boolean isPower ( int x , int y ) { int res1 = ( int ) Math . log ( y ) / ( int ) Math . log ( x ) ; double res2 = Math . log ( y ) / Math . log ( x ) ; return ( res1 == res2 ) ; } public static void main ( String args [ ] ) { if ( isPower ( 27 , 729 ) ) System . out . println ( \"1\" ) ; else System . out . println ( \"0\" ) ; } }",
            "python_code": "import math NEWLINE def isPower ( x , y ) : NEWLINE INDENT res1 = math . log ( y ) // math . log ( x ) ; NEWLINE res2 = math . log ( y ) / math . log ( x ) ; NEWLINE return 1 if ( res1 == res2 ) else 0 ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT print ( isPower ( 27 , 729 ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1251_A_291",
            "java_code": "class GFG { static boolean isPalindrome ( int n ) { if ( n % 11 == 0 ) { return true ; } return false ; } public static void main ( String [ ] args ) { System . out . println ( isPalindrome ( 123321 ) ? \"Palindrome\" : \"Not Palindrome\" ) ; } }",
            "python_code": "def isPalindrome ( n ) : NEWLINE INDENT if n % 11 == 0 : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 123321 NEWLINE if isPalindrome ( n ) : NEWLINE INDENTINDENT print ( \"Palindrome\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"Not Palindrome\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3512_A_292",
            "java_code": "class Geeks { static int countways ( int n ) { if ( n == 1 ) return 0 ; else if ( n % 2 == 0 ) return 1 + countways ( n / 2 ) ; else return 1 + Math . min ( countways ( n - 1 ) , countways ( n + 1 ) ) ; } public static void main ( String args [ ] ) { int n = 15 ; System . out . println ( countways ( n ) ) ; } }",
            "python_code": "def countways ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT elif ( n % 2 == 0 ) : NEWLINE INDENTINDENT return 1 + countways ( n / 2 ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return 1 + min ( countways ( n - 1 ) , countways ( n + 1 ) ) ; NEWLINE DEDENT DEDENT n = 15 ; NEWLINE print ( countways ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2956_A_293",
            "java_code": "class GFG { static int highestPowerof2 ( int n ) { int res = 0 ; for ( int i = n ; i >= 1 ; i -- ) { if ( ( i & ( i - 1 ) ) == 0 ) { res = i ; break ; } } return res ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( highestPowerof2 ( n ) ) ; } }",
            "python_code": "def highestPowerof2 ( n ) : NEWLINE INDENT res = 0 ; NEWLINE for i in range ( n , 0 , - 1 ) : NEWLINE INDENTINDENT if ( ( i & ( i - 1 ) ) == 0 ) : NEWLINE INDENTINDENTINDENT res = i ; NEWLINE break ; NEWLINE DEDENT DEDENT return res ; NEWLINE DEDENT n = 10 ; NEWLINE print ( highestPowerof2 ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_462_A_294",
            "java_code": "import java . util . * ; public class AppleMan {  public static void main ( String [ ] args ) {",
            "python_code": "'''* Author : Ayushman Chahar #* About  : IT Sophomore    #* Insti  : VIT, Vellore    #'''  import osimport sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_214_A_295",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; int ans = 0 ; for ( int a = 0 ; a * a <= n && a <= m ; a ++ ) { int b = n - a * a ; if ( a + ( b * b ) == m ) { ans ++ ; } } System . out . print ( ans ) ; } }",
            "python_code": " n , m = map ( int , input ( ) . split ( ) )   count = 0 for i in range ( 0 , int ( n ** ( 1 / 2 ) ) + 1 ) : for j in range ( 0 , int ( m ** ( 1 / 2 ) ) + 1 ) : if ( i ** 2 ) + j == n and i + ( j ** 2 ) == m : count += 1  print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_909_A_296",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; int T = 1 ;",
            "python_code": "a , b = input ( ) . split ( )  ans = \"z\" * 101   f = \"\" l = \"\"  for i in a : f += i l = \"\" for j in b : l += j ans = min ( ans , f + l )  print ( ans )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1051_B_297",
            "java_code": "import java . util . * ; public class Output { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; System . out . println ( \"YES\" ) ; for ( long i = a ; i < b ; i += 2 ) { System . out . println ( Long . toString ( i ) + \" \" + Long . toString ( i + 1 ) ) ; }  } }",
            "python_code": "import itertoolsimport bisectimport mathfrom collections import * import osimport sysfrom io import BytesIO , IOBase  ii = lambda : int ( input ( ) ) lmii = lambda : list ( map ( int , input ( ) . split ( ) ) ) slmii = lambda : sorted ( map ( int , input ( ) . split ( ) ) ) li = lambda : list ( input ( ) ) mii = lambda : map ( int , input ( ) . split ( ) ) msi = lambda : map ( str , input ( ) . split ( ) )   def main ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_851_A_298",
            "java_code": "import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; if ( t <= k ) { System . out . println ( t ) ; } else if ( t >= k && t <= n ) { System . out . println ( k ) ; } else { int d = n + k - t ; System . out . println ( d ) ; } } }",
            "python_code": "n , k , t = map ( int , input ( ) . split ( ) ) print ( min ( t , k , n + k - t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_B_299",
            "java_code": " import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; char p = 'a' ; int c = 1 ; StringBuilder h = new StringBuilder ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( c > 2 ) { if ( p == 'a' ) p = 'b' ; else p = 'a' ; c = 1 ; } h . append ( p ) ;",
            "python_code": "n = int ( input ( ) )  v = [ 'a' , [ 'aa' , 'bb' ] , 'aab' , 'aabb' ] if n == 1 : print ( 'a' ) elif n == 2 : print ( 'ab' ) elif n == 3 : print ( 'aab' ) elif n == 4 : print ( 'aabb' ) else : s = 'aabb' while len ( s ) < n : s += s  print ( s [ : n ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3605_A_300",
            "java_code": "import java . util . * ; class GFG { public static int findMaximumPieces ( int n ) { int x = n / 2 ; return ( ( x + 1 ) * ( n - x + 1 ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( \"Max number of pieces for n = \" + n + \" is \" + findMaximumPieces ( 3 ) ) ; } }",
            "python_code": "def findMaximumPieces ( n ) : NEWLINE INDENT x = n // 2 NEWLINE return ( ( x + 1 ) * ( n - x + 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( \"Max number of pieces for n = \" + str ( n ) + \" is \" + str ( findMaximumPieces ( 3 ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_710_A_301",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; int c = s . charAt ( 0 ) - 96 ; int r = s . charAt ( 1 ) - 48 ;",
            "python_code": "s = input ( ) if ( s == 'a1' ) or ( s == 'a8' ) or ( s == 'h1' ) or ( s == 'h8' ) : print ( 3 ) elif ( s [ 1 ] == '1' ) or ( s [ 1 ] == '8' ) or ( s [ 0 ] == 'a' ) or ( s [ 0 ] == 'h' ) : print ( 5 ) else : print ( 8 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5005_A_302",
            "java_code": "import java . io . * ; class GFG { static void findValues ( int a , int b ) { if ( ( a - b ) % 2 == 1 ) { System . out . println ( \"-1\" ) ; return ; } System . out . println ( ( ( a - b ) / 2 ) + \" \" + ( ( a + b ) / 2 ) ) ; } public static void main ( String [ ] args ) { int a = 12 , b = 8 ; findValues ( a , b ) ; } }",
            "python_code": "def findValues ( a , b ) : NEWLINE INDENT if ( ( a - b ) % 2 == 1 ) : NEWLINE INDENTINDENT print ( \"-1\" ) ; NEWLINE return ; NEWLINE DEDENT print ( ( a - b ) // 2 , ( a + b ) // 2 ) ; NEWLINE DEDENT a = 12 ; b = 8 ; NEWLINE findValues ( a , b ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4502_A_303",
            "java_code": "class GFG { static int frequencyDigits ( int n , int d ) { int c = 0 ; while ( n > 0 ) { if ( n % 10 == d ) c ++ ; n = n / 10 ; } return c ; } public static void main ( String args [ ] ) { int N = 1122322 ; int D = 2 ; System . out . println ( frequencyDigits ( N , D ) ) ; } }",
            "python_code": "def frequencyDigits ( n , d ) : NEWLINE INDENT c = 0 ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT if ( n % 10 == d ) : NEWLINE INDENTINDENTINDENT c += 1 ; NEWLINE DEDENT n = int ( n / 10 ) ; NEWLINE DEDENT return c ; NEWLINE DEDENT N = 1122322 ; NEWLINE D = 2 ; NEWLINE print ( frequencyDigits ( N , D ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3528_A_304",
            "java_code": "class GFG { static float rectanglearea ( float r ) { if ( r < 0 ) return - 1 ; float a = r * r ; return a ; } public static void main ( String [ ] args ) { float r = 5 ; System . out . println ( ( int ) rectanglearea ( r ) ) ; } }",
            "python_code": "def rectanglearea ( r ) : NEWLINE INDENT if r < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = r * r NEWLINE return a NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r = 5 NEWLINE print ( rectanglearea ( r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_144_A_305",
            "java_code": "import java . io . * ; import java . util . * ; public class MyClass { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; String s [ ] = br . readLine ( ) . split ( \" \" ) ;",
            "python_code": "a = int ( input ( ) ) b = input ( ) . split ( ) sec = 0 mx = 0 mn = 0 x = [ ] for i in b : x . append ( int ( i ) ) if x [ 0 ] != max ( x ) : for i in range ( a ) : if x [ i ] == max ( x ) : sec += i mx = i breakelse : mx = 0 if x [ - 1 ] != min ( x ) : for i in range ( a - 1 , - 1 , - 1 ) : if x [ i ] == min ( x ) : sec += len ( x ) - 1 - i mn = i breakelse : mn = a - 1 if mx > mn : sec -= 1 print ( sec ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_579_A_306",
            "java_code": "class GFG { static float kPresentProbability ( int a [ ] , int n , int k ) { float count = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == k ) count ++ ; return count / n ; } public static void main ( String [ ] args ) { int A [ ] = { 4 , 7 , 2 , 0 , 8 , 7 , 5 } ; int K = 2 ; int N = A . length ; double n = kPresentProbability ( A , N , K ) ; double p = ( double ) Math . round ( n * 100 ) / 100 ; System . out . println ( p ) ; } }",
            "python_code": "def kPresentProbability ( a , n , k ) : NEWLINE INDENT count = a . count ( k ) NEWLINE return round ( count / n , 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT A = [ 4 , 7 , 2 , 0 , 8 , 7 , 5 ] NEWLINE K = 2 NEWLINE N = len ( A ) NEWLINE print ( kPresentProbability ( A , N , K ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3788_A_307",
            "java_code": "import java . util . Arrays ; class GFG { static int maxLen ( int [ ] arr , int n ) { int min_val = Arrays . stream ( arr ) . min ( ) . getAsInt ( ) ; int freq = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] == min_val ) freq ++ ; } return freq ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 3 , 1 } ; int n = arr . length ; System . out . println ( maxLen ( arr , n ) ) ; } }",
            "python_code": "def maxLen ( arr , n ) : NEWLINE INDENT min_val = min ( arr ) ; NEWLINE freq = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] == min_val ) : NEWLINE INDENTINDENTINDENT freq += 1 ; NEWLINE DEDENT DEDENT return freq ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 3 , 1 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( maxLen ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3737_A_308",
            "java_code": "import java . io . * ; class GFG { static int countSolutions ( int a ) { int count = 0 ; for ( int i = 0 ; i <= a ; i ++ ) { if ( a == ( i + ( a ^ i ) ) ) count ++ ; } return count ; } public static void main ( String [ ] args ) { int a = 3 ; System . out . println ( countSolutions ( a ) ) ; } }",
            "python_code": "def countSolutions ( a ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( a + 1 ) : NEWLINE INDENTINDENT if ( a == ( i + ( a ^ i ) ) ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 3 NEWLINE print ( countSolutions ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_1304_A_309",
            "java_code": "public int [ ] sumZero ( int n ) { int [ ] res = new int [ n ] ; for ( int i = 1 ; i < n ; i ++ ) { res [ i ] = i ; res [ 0 ] -= i ; } return res ; }",
            "python_code": "class Solution : NEWLINE INDENT def sumZero ( self , n : int ) -> List [ int ] : NEWLINE INDENTINDENT prefix_sum = 0 NEWLINE res = [ ] NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENTINDENT res . append ( i ) NEWLINE prefix_sum = prefix_sum + i NEWLINE DEDENT res . append ( - prefix_sum ) NEWLINE return res NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_320_A_310",
            "java_code": "import java . util . Scanner ;  public class MagicNumbers { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s = scanner . next ( ) ; String s3 = s . replace ( \"144\" , \"\" ) ; String s2 = s3 . replace ( \"14\" , \"\" ) ; String s1 = s2 . replace ( \"1\" , \"\" ) ;",
            "python_code": "n = input ( ) result = Truei = 0 t = len ( n ) while i < len ( n ) : if n [ i ] == \"1\" : i += 1 if i == t : break if n [ i ] == \"4\" : i += 1 if i == t : break if n [ i ] == \"4\" : i += 1 if i == t : break else : i += 1 result = Falseif result is True : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_495_A_311",
            "java_code": "import java . util . Scanner ;  public class NewMain {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) m = { '0' : 2 , '1' : 7 , '2' : 2 , '3' : 3 , '4' : 3 , '5' : 4 , '6' : 2 , '7' : 5 , '8' : 1 , '9' : 2 , } print ( m [ s [ 0 ] ] * m [ s [ 1 ] ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4481_A_312",
            "java_code": "class GFG { static int countSquares ( int n ) { return ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( \"Count of squares is \" + countSquares ( n ) ) ; } }",
            "python_code": "def countSquares ( n ) : NEWLINE INDENT return ( ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ) NEWLINE DEDENT n = 4 NEWLINE print ( \"Count of squares is \" , countSquares ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2878_A_313",
            "java_code": "import java . lang . * ; class GFG { static int findTerm ( int n ) { if ( n == 1 ) return n ; else { int term = 7 ; for ( int i = 2 ; i <= n ; i ++ ) term = term * 2 + ( i - 1 ) ; return term ; } } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( findTerm ( n ) ) ; } }",
            "python_code": "def findTerm ( n ) : NEWLINE INDENT if n == 1 : NEWLINE INDENTINDENT return n NEWLINE DEDENT else : NEWLINE INDENTINDENT term = 7 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENTINDENT term = term * 2 + ( i - 1 ) ; NEWLINE DEDENT DEDENT return term ; NEWLINE DEDENT print ( findTerm ( 5 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1046_A_314",
            "java_code": "public class GFG { static int maxPrefix ( String s , String t ) { int count = 0 ; for ( int i = 0 ; i < t . length ( ) ; i ++ ) { if ( count == s . length ( ) ) break ; if ( t . charAt ( i ) == s . charAt ( count ) ) count ++ ; } return count ; } public static void main ( String args [ ] ) { String S = \"digger\" ; String T = \"biggerdiagram\" ; System . out . println ( maxPrefix ( S , T ) ) ; } }",
            "python_code": "def maxPrefix ( s , t ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , len ( t ) ) : NEWLINE INDENTINDENT if ( count == len ( s ) ) : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT if ( t [ i ] == s [ count ] ) : NEWLINE INDENTINDENTINDENT count = count + 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT S = \"digger\" NEWLINE T = \"biggerdiagram\" NEWLINE print ( maxPrefix ( S , T ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_98_A_315",
            "java_code": "class GFG { static boolean isEven ( int n ) { return ( ( n & 1 ) != 1 ) ; } public static void main ( String [ ] args ) { int n = 101 ; System . out . print ( isEven ( n ) == true ? \"Even\" : \"Odd\" ) ; } }",
            "python_code": "def isEven ( n ) : NEWLINE INDENT return ( not ( n & 1 ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 101 ; NEWLINE if isEven ( n ) : NEWLINE INDENTINDENT print ( \"Even\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"Odd\" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_898_A_316",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) {  Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int t = n % 10 ; System . out . println ( ( t >= 5 ) ? n + ( 10 - t ) : n - t ) ; } }",
            "python_code": "n = input ( ) if n [ - 1 ] == '0' : print ( n ) elif n [ - 1 ] <= '5' : s = int ( n [ - 1 ] ) n = int ( n ) print ( n - s ) else : s = 10 - int ( n [ - 1 ] ) print ( int ( n ) + s )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_806_A_317",
            "java_code": "import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_inscribed ( double P , double B , double H ) { return ( ( P + B - H ) * ( P + B - H ) * ( PI / 4 ) ) ; } public static void main ( String [ ] args ) { double P = 3 , B = 4 , H = 5 ; System . out . println ( area_inscribed ( P , B , H ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def area_inscribed ( P , B , H ) : NEWLINE INDENT return ( ( P + B - H ) * ( P + B - H ) * ( PI / 4 ) ) NEWLINE DEDENT P = 3 NEWLINE B = 4 NEWLINE H = 5 NEWLINE print ( area_inscribed ( P , B , H ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4700_A_318",
            "java_code": "import java . io . * ; class GFG { static int number_cake ( int n ) { return ( n * n * n + 5 * n + 6 ) / 6 ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( number_cake ( n ) ) ; n = 8 ; System . out . println ( number_cake ( n ) ) ; n = 25 ; System . out . println ( number_cake ( n ) ) ; } }",
            "python_code": "def number_cake ( n ) : NEWLINE INDENT return ( n * n * n + 5 * n + 6 ) // 6 NEWLINE DEDENT n = 2 NEWLINE print ( number_cake ( n ) ) NEWLINE n = 8 NEWLINE print ( number_cake ( n ) ) NEWLINE n = 25 NEWLINE print ( number_cake ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_940_B_319",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class pblm3 { static int a ; static int b ; static int k ; static HashMap < Integer , Long > map ; public static long steps ( int n ) {",
            "python_code": "n = int ( input ( ) ) k = int ( input ( ) ) a = int ( input ( ) ) b = int ( input ( ) )  ans = 0  if k == 1 : ans += ( n ) * a - aelse : while n > 1 : if n % k > 0 : if n < k : ans += ( n % k ) * a - a ; n -= ( n % k ) else : ans += ( n % k ) * a ; n -= ( n % k ) else : ans += min ( ( n - ( n // k ) ) * a , b ) n = n // kprint ( ans )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1909_A_320",
            "java_code": "class GFG { static int countStrings ( int n ) { int a [ ] = new int [ n ] , b [ ] = new int [ n ] ; a [ 0 ] = b [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { a [ i ] = a [ i - 1 ] + b [ i - 1 ] ; b [ i ] = a [ i - 1 ] ; } from 2 ^ n return ( 1 << n ) - a [ n - 1 ] - b [ n - 1 ] ; } public static void main ( String args [ ] ) { System . out . println ( countStrings ( 5 ) ) ; } }",
            "python_code": "def countStrings ( n ) : NEWLINE INDENT a = [ 0 ] * n NEWLINE b = [ 0 ] * n NEWLINE a [ 0 ] = b [ 0 ] = 1 NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT a [ i ] = a [ i - 1 ] + b [ i - 1 ] NEWLINE b [ i ] = a [ i - 1 ] NEWLINE DEDENT return ( 1 << n ) - a [ n - 1 ] - b [ n - 1 ] NEWLINE DEDENT print ( countStrings ( 5 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1874_A_321",
            "java_code": "import java . io . * ; class GFG { public static int countSetBits ( int n ) { if ( n == 0 ) return 0 ; else return ( n & 1 ) + countSetBits ( n > > 1 ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( countSetBits ( n ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( n & 1 ) + countSetBits ( n >> 1 ) NEWLINE DEDENT DEDENT n = 9 NEWLINE print ( countSetBits ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_604_A_322",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class Main { public static int mod = ( int ) Math . pow ( 10 , 9 ) + 7 ;",
            "python_code": "m = list ( map ( int , input ( ) . split ( ) ) ) w = list ( map ( int , input ( ) . split ( ) ) ) h = list ( map ( int , input ( ) . split ( ) ) ) points = [ 500 , 1000 , 1500 , 2000 , 2500 ] ans = 0 for i in range ( 5 ) : ans += max ( 0.3 * points [ i ] , ( ( 1 - m [ i ] / 250 ) * points [ i ] ) - 50 * w [ i ] ) ans += 100 * h [ 0 ] - 50 * h [ 1 ] print ( int ( ans ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_996_B_323",
            "java_code": "import java . io . * ; import java . util . * ;  public class B { public static void main ( String [ ] args ) { FastScanner sc = new FastScanner ( ) ; int t = 1 ;",
            "python_code": "import mathn = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) k = [ ] mn = 10000000000 for i in range ( n ) : sm = math . ceil ( ( a [ i ] - i ) / n ) if sm < mn : mn = sm ind = iprint ( ind + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1076_B_324",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;  public class Welcomejava {  public static void main ( String [ ] args ) {",
            "python_code": "for _ in range ( 1 ) : n = int ( input ( ) ) ans = n NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1064_A_325",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) a [ i ] = sc . nextInt ( ) ; Arrays . sort ( a ) ; System . out . println ( Math . max ( 0 , a [ 2 ] - a [ 1 ] - a [ 0 ] + 1 ) ) ;  } }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) if ( a < b ) : max = b b = a a = maxif ( a < c ) : max = c c = a a = maxk = 0 if a >= b + c : k = a - ( b + c ) + 1 else : k = 0 print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4526_A_326",
            "java_code": "class GFG { static int countUnsetBits ( int n ) { int cnt = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int temp = i ; while ( temp > 0 ) { if ( temp % 2 == 0 ) { cnt = cnt + 1 ; } temp = temp / 2 ; } } return cnt ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( countUnsetBits ( n ) ) ; } }",
            "python_code": "def countUnsetBits ( n ) : NEWLINE INDENT cnt = 0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT temp = i ; NEWLINE while ( temp ) : NEWLINE INDENTINDENTINDENT if ( temp % 2 == 0 ) : NEWLINE INDENTINDENTINDENTINDENT cnt += 1 ; NEWLINE DEDENT temp = temp // 2 ; NEWLINE DEDENT DEDENT return cnt ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE print ( countUnsetBits ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1205_A_327",
            "java_code": "  import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  ",
            "python_code": "n = int ( input ( ) ) lst = [ 0 ] * ( 2 * n ) f = 0 lst [ 0 ] = 1 ind = 0 for i in range ( 2 , ( 2 * n ) + 1 ) : if f == 0 : ind = ( ind + n ) % ( 2 * n ) lst [ ind ] = i f = 1 else : ind -= 1 lst [ ind ] = i f = 0  if n % 2 : print ( \"YES\" ) print ( * lst ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_807_B_328",
            "java_code": "import java . io . * ; import java . util . * ;  public class practice807b { public static void main ( String [ ] args ) throws Exception {",
            "python_code": "p , x , y = map ( int , input ( ) . split ( ) )   def check ( s ) : i = ( s // 50 ) % 475 for t in range ( 25 ) : i = ( i * 96 + 42 ) % 475 if 26 + i == p : return True return False   flag = Falsefor up in range ( 500 ) : for down in range ( 500 ) : if x + 100 * up - 50 * down >= y and check ( x + 100 * up - 50 * down ) : print ( up ) flag = True break if flag : break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4582_A_329",
            "java_code": "class Rectangle { static int count ( int N ) { int a = 0 ; a = ( N * ( N + 1 ) ) / 2 ; return a ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . print ( count ( n ) ) ; } }",
            "python_code": "def count ( N ) : NEWLINE INDENT a = 0 ; NEWLINE a = ( N * ( N + 1 ) ) / 2 ; NEWLINE return int ( a ) ; NEWLINE DEDENT N = 4 ; NEWLINE print ( count ( N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_227_B_330",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) d = { } for i in range ( n ) : d [ a [ i ] ] = i NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2618_A_331",
            "java_code": "class GFG { static int Maxsum ( int c1 , int c2 , int c3 , int c4 ) { int sum = 0 ; int two34 = Math . min ( c2 , Math . min ( c3 , c4 ) ) ; sum = two34 * 234 ; c2 -= two34 ; sum += Math . min ( c2 , c1 ) * 12 ; return sum ; } public static void main ( String [ ] args ) { int c1 = 5 , c2 = 2 , c3 = 3 , c4 = 4 ; System . out . println ( Maxsum ( c1 , c2 , c3 , c4 ) ) ; } }",
            "python_code": "def Maxsum ( c1 , c2 , c3 , c4 ) : NEWLINE INDENT sum = 0 NEWLINE two34 = min ( c2 , min ( c3 , c4 ) ) NEWLINE sum = two34 * 234 NEWLINE c2 -= two34 NEWLINE sum += min ( c2 , c1 ) * 12 NEWLINE return sum NEWLINE DEDENT c1 = 5 ; c2 = 2 ; c3 = 3 ; c4 = 4 NEWLINE print ( Maxsum ( c1 , c2 , c3 , c4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_49_A_332",
            "java_code": "import java . util . * ; public class Sleuth {  public static void main ( String [ ] args ) {",
            "python_code": "x = [ \"a\" , \"e\" , \"i\" , \"o\" , \"u\" , \"y\" , \"A\" , \"E\" , \"I\" , \"O\" , \"U\" , \"Y\" ] a = input ( ) a = a . replace ( \" \" , \"\" ) if a [ - 2 ] in x : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4466_A_333",
            "java_code": "class GFG { static void findSetBits ( int n ) { for ( int i = 0 ; i <= n ; i ++ ) System . out . print ( Integer . bitCount ( i ) + \" \" ) ; } public static void main ( String [ ] args ) { int n = 5 ; findSetBits ( n ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT count += n & 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT def findSetBits ( n ) : NEWLINE INDENT for i in range ( n + 1 ) : NEWLINE INDENTINDENT print ( count ( i ) , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE findSetBits ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3893_A_334",
            "java_code": "public void push ( int new_data ) { Node new_Node = new Node ( new_data ) ; new_Node . next = head ; new_Node . prev = null ; if ( head != null ) head . prev = new_Node ; head = new_Node ; }",
            "python_code": "def push ( self , new_data ) : NEWLINE INDENT new_node = Node ( data = new_data ) NEWLINE new_node . next = self . head NEWLINE new_node . prev = None NEWLINE if self . head is not None : NEWLINE INDENTINDENT self . head . prev = new_node NEWLINE DEDENT self . head = new_node NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3892_A_335",
            "java_code": "public class DLL { Node head ; class Node { int data ; Node prev ; Node next ; Node ( int d ) { data = d ; } } }",
            "python_code": "class Node : NEWLINE INDENT def __init__ ( self , next = None , prev = None , data = None ) : NEWLINE INDENTINDENT self . next = next NEWLINE self . prev = prev NEWLINE self . data = data NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_900_A_336",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "i = input ; n = int ( i ( ) ) ; x = sum ( int ( i ( ) . split ( ) [ 0 ] ) > 0 for _ in [ 0 ] * n ) ; print ( 'YNEOS' [ 1 < x < n - 1 : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3297_A_337",
            "java_code": "class GFG { static int countSubStr ( String str , int len ) { int ans = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( str . charAt ( i ) == '0' ) ans += ( i + 1 ) ; } return ans ; } public static void main ( String [ ] args ) { String str = \"10010\" ; int len = str . length ( ) ; System . out . println ( countSubStr ( str , len ) ) ; } }",
            "python_code": "def countSubStr ( strr , lenn ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( lenn ) : NEWLINE INDENTINDENT if ( strr [ i ] == '0' ) : NEWLINE INDENTINDENTINDENT ans += ( i + 1 ) NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT strr = \"10010\" NEWLINE lenn = len ( strr ) NEWLINE print ( countSubStr ( strr , lenn ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4068_A_338",
            "java_code": "import java . io . * ; class GFG { static int squaresum ( int n ) { return ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } public static void main ( String args [ ] ) throws IOException { int n = 4 ; System . out . println ( squaresum ( n ) ) ; } }",
            "python_code": "def squaresum ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) * ( 2 * n + 1 ) ) // 6 NEWLINE DEDENT n = 4 NEWLINE print ( squaresum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_863_A_339",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "string = input ( ) while string [ - 1 ] == '0' : string = string [ : len ( string ) - 1 ] if string == string [ : : - 1 ] : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2338_A_340",
            "java_code": "import java . io . * ; class GFG { static void printNumber ( int n ) { int count [ ] = new int [ 10 ] ; while ( n > 0 ) { count [ n % 10 ] ++ ; n /= 10 ; } for ( int i = 1 ; i < 10 ; i ++ ) { for ( int j = 0 ; j < count [ i ] * i ; j ++ ) System . out . print ( i ) ; } } public static void main ( String [ ] args ) { int n = 3225 ; printNumber ( n ) ; } }",
            "python_code": "def printNumber ( n ) : NEWLINE INDENT count = [ 0 ] * 10 NEWLINE while ( n ) : NEWLINE INDENTINDENT count [ n % 10 ] += 1 NEWLINE n //= 10 NEWLINE DEDENT for i in range ( 1 , 10 ) : NEWLINE INDENTINDENT for j in range ( count [ i ] * i ) : NEWLINE INDENTINDENTINDENT print ( i , end = \"\" ) NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3225 NEWLINE printNumber ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3405_A_341",
            "java_code": "class GFG { static boolean isToOne ( int n ) { return ( n > 0 ) ; } public static void main ( String [ ] args ) { int n = 5 ; if ( isToOne ( n ) == true ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isToOne ( n ) : NEWLINE INDENT return ( n > 0 ) NEWLINE DEDENT n = 5 NEWLINE if isToOne ( n ) == True : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_399_B_342",
            "java_code": "import java . util . Scanner ;  public class B_RedAndBlueBalls { ",
            "python_code": "length , string = int ( input ( ) ) , input ( ) print ( sum ( [ 2 ** i if string [ i ] == \"B\" else 0 for i in range ( len ( string ) ) ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_A_343",
            "java_code": "import java . util . Scanner ; public class MyClass { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int k = s . nextInt ( ) ; int n = s . nextInt ( ) ; int w = s . nextInt ( ) ; int x = 0 , y = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { x = k * i ; y = y + x ; } if ( y > n ) { k = y - n ; System . out . println ( k ) ; } else System . out . println ( \"0\" ) ; } }",
            "python_code": "k , n , w = map ( int , input ( ) . split ( ) ) total = 0 for i in range ( 1 , w + 1 ) : total = total + k * iif total >= n : print ( total - n ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1073_B_344",
            "java_code": "import java . util . HashMap ; import java . util . Scanner ;  public class VasyaAndBooks2 { public static void main ( String [ ] args ) {  Scanner entrada = new Scanner ( System . in ) ; String n ;",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3112_A_345",
            "java_code": "import java . util . * ; class GFG { static double polyarea ( double n , double r ) { if ( r < 0 && n < 0 ) return - 1 ; double A = ( ( r * r * n ) * Math . sin ( ( 360 / n ) * 3.14159 / 180 ) ) / 2 ; return A ; } public static void main ( String [ ] args ) { float r = 9 , n = 6 ; System . out . println ( polyarea ( n , r ) ) ; } }",
            "python_code": "from math import sin NEWLINE def polyarea ( n , r ) : NEWLINE INDENT if ( r < 0 and n < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = ( ( ( r * r * n ) * sin ( ( 360 / n ) * 3.14159 / 180 ) ) / 2 ) ; NEWLINE return round ( A , 3 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r , n = 9 , 6 NEWLINE print ( polyarea ( n , r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_516_A_346",
            "java_code": "import java . util . * ; class GFG { public static int findY ( int x ) { if ( x > 2 ) return x - 2 ; return x + 2 ; } public static void main ( String [ ] args ) { int x = 5 ; System . out . println ( findY ( x ) ) ; } }",
            "python_code": "def findY ( x ) : NEWLINE INDENT if ( x > 2 ) : NEWLINE INDENTINDENT return x - 2 NEWLINE DEDENT return x + 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 5 NEWLINE print ( findY ( x ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5002_A_347",
            "java_code": "public class GFG { static int countX ( int n ) { int count = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { if ( n - i == ( n ^ i ) ) count ++ ; } return count ; } public static void main ( String args [ ] ) { int n = 5 ; int answer = countX ( n ) ; System . out . println ( answer ) ; } }",
            "python_code": "import math as mt NEWLINE def countX ( n ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( n + 1 ) : NEWLINE INDENTINDENT if n - i == ( n ^ i ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE answer = countX ( n ) NEWLINE print ( answer ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5232_A_348",
            "java_code": "class GfG { static int calcNodes ( int N , int I ) { int result = 0 ; result = I * ( N - 1 ) + 1 ; return result ; } public static void main ( String [ ] args ) { int N = 5 , I = 2 ; System . out . println ( \"Leaf nodes = \" + calcNodes ( N , I ) ) ; } }",
            "python_code": "def calcNodes ( N , I ) : NEWLINE INDENT result = 0 NEWLINE result = I * ( N - 1 ) + 1 NEWLINE return result NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 5 NEWLINE I = 2 NEWLINE print ( \"Leaf nodes = \" , calcNodes ( N , I ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_131_A_349",
            "java_code": "import java . util . Scanner ;  public class problem116 {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) x , up , low , st = len ( s ) , 0 , 0 , \"\" for i in range ( 1 , x ) : if ( ord ( s [ i ] ) > 90 ) : low += 1 else : up += 1 if ( up == ( len ( s ) - 1 ) or len ( s ) == 1 ) : st += s . swapcase ( ) print ( st ) else : print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4848_A_350",
            "java_code": "import java . io . * ; class GFG { static int Circumference ( int l , int w ) { return ( 2 * ( l + w ) ) ; } static public void main ( String [ ] args ) { int l = 8 , w = 4 ; int c = Circumference ( l , w ) ; System . out . println ( \"Circumference of \" + \"a rectangle is \" + c ) ; } }",
            "python_code": "def Circumference ( l , w ) : NEWLINE INDENT return ( 2 * ( l + w ) ) NEWLINE DEDENT l = 8 NEWLINE w = 4 NEWLINE c = Circumference ( l , w ) NEWLINE print ( \"Circumference of a\" + \" rectangle is % d\" % ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5050_A_351",
            "java_code": "import java . math . * ; class GFG { public static void cal_IST ( int h , double r ) { double IST = ( h * r * 1.0 ) / 360 ; int int_IST = ( int ) IST ; int float_IST = ( int ) Math . ceil ( ( int ) ( ( IST - int_IST ) * 60 ) ) ; System . out . println ( int_IST + \":\" + float_IST ) ; } public static void main ( String [ ] args ) { int h = 20 ; double r = 150 ; cal_IST ( h , r ) ; } }",
            "python_code": "from math import ceil NEWLINE def cal_IST ( h , r ) : NEWLINE INDENT IST = round ( ( h * r * 1.0 ) / 360 , 3 ) ; NEWLINE int_IST = int ( IST ) ; NEWLINE float_IST = ceil ( ( IST - int_IST ) * 60 ) ; NEWLINE print ( int_IST , \":\" , float_IST ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT h = 20 ; NEWLINE r = 150 ; NEWLINE cal_IST ( h , r ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2240_A_352",
            "java_code": "class GFG { static int cntWays ( int n ) { if ( n % 2 == 1 ) { return 0 ; } else { return ( n - 2 ) / 4 ; } } public static void main ( String [ ] args ) { int n = 18 ; System . out . println ( cntWays ( n ) ) ; } }",
            "python_code": "def cntWays ( n ) : NEWLINE INDENT if n % 2 == 1 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( n - 2 ) // 4 NEWLINE DEDENT DEDENT n = 18 NEWLINE print ( cntWays ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_B_353",
            "java_code": " import java . util . Arrays ; import java . util . HashSet ; import java . util . Scanner ; import java . util . Set ; import java . util . Vector ;  public class Javaweb {  public static void main ( String [ ] args ) {",
            "python_code": "n = input ( ) a = [ int ( each ) for each in input ( ) . split ( ) ] a . sort ( reverse = True ) len0 = len ( a ) res = a [ 0 ] for i in range ( 1 , len0 ) : if a [ i ] > a [ i - 1 ] - 1 : a [ i ] = a [ i - 1 ] - 1 if a [ i ] == 0 : break res += a [ i ] print ( res )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1512_A_354",
            "java_code": "public class GFG { static int maxval ( int a [ ] , int n ) { if ( n < 2 ) { return - 99999 ; } int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { int x = ( a [ i ] + i ) * ( a [ j ] + j ) ; if ( max < x ) { max = x ; } } } return max ; } public static void main ( String args [ ] ) { int arr [ ] = { 4 , 5 , 3 , 1 , 10 } ; int len = arr . length ; System . out . println ( maxval ( arr , len ) ) ; } }",
            "python_code": "def maxval ( a , n ) : NEWLINE INDENT if ( n < 2 ) : NEWLINE INDENTINDENT return - 99999 NEWLINE DEDENT max = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT x = ( a [ i ] + i ) * ( a [ j ] + j ) NEWLINE if max < x : NEWLINE INDENTINDENTINDENTINDENT max = x NEWLINE DEDENT DEDENT DEDENT return max NEWLINE DEDENT print ( maxval ( [ 4 , 5 , 3 , 1 , 10 ] , 5 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1159_A_355",
            "java_code": "import java . util . * ; public class ch1 { public static void main ( String [ ] args ) throws Exception { int a , b = 0 ; char ch ; Scanner reader = new Scanner ( System . in ) ; a = reader . nextInt ( ) ; String str = reader . next ( ) ; for ( int i = 0 ; i < a ; ++ i ) { if ( str . charAt ( i ) == '+' ) ++ b ; else if ( b > 0 ) -- b ; } System . out . print ( b ) ; } }",
            "python_code": "n = int ( input ( ) ) a = input ( ) c1 = 0 for i in a : if i == '+' : c1 += 1 else : if ( c1 > 0 ) : c1 -= 1 print ( c1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_570_A_356",
            "java_code": " import java . util . * ; import java . lang . * ;",
            "python_code": "n , m = [ int ( j ) for j in input ( ) . split ( ) ] mat = [ ] for j in range ( m ) : mat . append ( [ int ( j ) for j in input ( ) . split ( ) ] ) stream = n * [ 0 ] for j in range ( m ) : index = 0 for k in range ( 1 , n ) : if mat [ j ] [ k ] > mat [ j ] [ index ] : index = k stream [ index ] += 1 print ( stream . index ( max ( stream ) ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2059_A_357",
            "java_code": "class GFG { static int calculateLeaps ( int n ) { if ( n == 0 ) return 1 ; return ( 1 << ( n - 1 ) ) ; } public static void main ( String [ ] args ) { System . out . println ( calculateLeaps ( 4 ) ) ; } }",
            "python_code": "def calculateLeaps ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT return ( 1 << ( n - 1 ) ) ; NEWLINE DEDENT print ( calculateLeaps ( 4 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1154_A_358",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a [ ] = new int [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } int max = a [ 0 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { if ( a [ i ] > max ) { max = a [ i ] ; } } for ( int i = 0 ; i < 4 ; i ++ ) { if ( max - a [ i ] != 0 ) { System . out . println ( max - a [ i ] + \" \" ) ; } }  } }",
            "python_code": "numbers = list ( map ( int , input ( ) . split ( ) ) ) max_ = max ( numbers ) output = [ ]  for num in numbers : if num != max_ : print ( max_ - num , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1183_A_359",
            "java_code": "import java . util . Scanner ;  public class Test { public static void main ( String [ ] args ) {  Scanner input = new Scanner ( System . in ) ;  short j = input . nextShort ( ) ;  while ( ( ( j / 1000 ) + ( j % 1000 / 100 ) + ( j % 100 / 10 ) + ( j % 10 ) ) % 4 != 0 ) { j ++ ; }  System . out . println ( j ) ; } }",
            "python_code": "n = int ( input ( ) )  while True : if sum ( map ( int , list ( str ( n ) ) ) ) % 4 == 0 : rep = n break else : n += 1 print ( rep ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_875_B_360",
            "java_code": "import java . util . * ; import java . io . * ;  public class Codeforces { InputStream is ; PrintWriter out ; String INPUT = \"\" ; ",
            "python_code": "n = int ( input ( ) )  p = [ int ( x ) for x in input ( ) . split ( ) ]  mx = n  a = [ 0 ] * ( n + 1 )  ans = [ 1 ]  for i in range ( 0 , n ) :  t = p [ i ]  a [ t ] = 1  while a [ mx ] == 1 and mx >= 1 : mx -= 1  ans . append ( i + 1 - ( n - mx ) + 1 )  print ( ' ' . join ( map ( str , ans ) ) )      NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_205_A_361",
            "java_code": "import java . util . * ; import java . lang . Math ; public class Main { public static void main ( String [ ] args ) {",
            "python_code": "from sys import stdinfrom bisect import bisect_right as br  input = stdin . readline  n = int ( input ( ) ) lst = list ( map ( int , input ( ) . strip ( ) . split ( ) ) ) arr = sorted ( lst ) ind = br ( arr , arr [ 0 ] ) - 1 if ind == 0 : print ( lst . index ( arr [ 0 ] ) + 1 ) else : print ( 'Still Rozdil' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_264_A_362",
            "java_code": "public class GFG { static void perfectCube ( int N ) { int cube_root ; cube_root = ( int ) Math . round ( Math . cbrt ( N ) ) ; if ( cube_root * cube_root * cube_root == N ) { System . out . println ( \"Yes\" ) ; return ; } else { System . out . println ( \"NO\" ) ; return ; } } public static void main ( String [ ] args ) { int N = 125 ; perfectCube ( N ) ; } }",
            "python_code": "def perfectCube ( N ) : NEWLINE INDENT cube_root = round ( N ** ( 1 / 3 ) ) ; NEWLINE if cube_root * cube_root * cube_root == N : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE return ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"NO\" ) ; NEWLINE return ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 125 ; NEWLINE perfectCube ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_437_A_363",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "if __name__ == '__main__' : s = list ( ) for _ in range ( 4 ) : s . append ( len ( input ( ) ) - 2 ) l = sorted ( s ) mn , mx = l [ 0 ] , l [ 3 ] mn = l [ 0 ] if l [ 0 ] <= l [ 1 ] / 2 else 0 mx = l [ 3 ] if l [ 3 ] >= l [ 2 ] * 2 else 0 if not mn and mx : print ( chr ( s . index ( mx ) + ord ( \"A\" ) ) ) elif mn and not mx : print ( chr ( s . index ( mn ) + ord ( \"A\" ) ) ) else : print ( \"C\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3364_A_364",
            "java_code": "class sol { static boolean isPossible ( int l , int m , int x , int y ) { if ( l * m == x + y ) return true ; return false ; } public static void main ( String args [ ] ) { int l = 3 , m = 2 , x = 4 , y = 2 ; if ( isPossible ( l , m , x , y ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isPossible ( l , m , x , y ) : NEWLINE INDENT if ( l * m == x + y ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l = 3 ; m = 2 ; x = 4 ; y = 2 ; NEWLINE if ( isPossible ( l , m , x , y ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1579_A_365",
            "java_code": "class Test { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int a = 98 , b = 56 ; System . out . println ( \"GCD of \" + a + \" and \" + b + \" is \" + gcd ( a , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( b == 0 ) : NEWLINE INDENTINDENT return a NEWLINE DEDENT return gcd ( b , a % b ) NEWLINE DEDENT a = 98 NEWLINE b = 56 NEWLINE if ( gcd ( a , b ) ) : NEWLINE INDENT print ( 'GCD of' , a , 'and' , b , 'is' , gcd ( a , b ) ) NEWLINE DEDENT else : NEWLINE INDENT print ( 'not found' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_297_B_366",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; public class Main {  public void solve ( ) throws IOException {  int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int k = in . nextInt ( ) ;  int [ ] aa = new int [ n ] ; int [ ] bb = new int [ m ] ;  for ( int i = 0 ; i < n ; i ++ ) { aa [ i ] = in . nextInt ( ) ; }  for ( int i = 0 ; i < m ; i ++ ) { bb [ i ] = in . nextInt ( ) ; } ",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) a = sorted ( map ( int , input ( ) . split ( ) ) , reverse = True ) b = sorted ( map ( int , input ( ) . split ( ) ) , reverse = True ) cou = ind = 0 l = min ( m , n ) aa = max ( b ) for i in range ( l ) : if a [ i ] > b [ i ] : cou += 1 ind = max ( ind , a [ i ] )  if m >= n and cou > 0 : print ( \"YES\" ) elif m < n : print ( \"YES\" ) else : print ( \"NO\" )                      NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_805_A_367",
            "java_code": "import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_cicumscribed ( double c ) { return ( c * c * ( PI / 4 ) ) ; } public static void main ( String [ ] args ) { double c = 8.0 ; System . out . println ( area_cicumscribed ( c ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def area_cicumscribed ( c ) : NEWLINE INDENT return ( c * c * ( PI / 4 ) ) NEWLINE DEDENT c = 8.0 NEWLINE print ( area_cicumscribed ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1790_A_368",
            "java_code": "import java . io . * ; class GFG { static long evenPowerSum ( int n ) { long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int j = 2 * i ; sum = sum + ( j * j * j * j ) ; } return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( evenPowerSum ( n ) ) ; } }",
            "python_code": "def evenPowerSum ( n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT j = 2 * i ; NEWLINE sum = sum + ( j * j * j * j ) ; NEWLINE DEDENT return sum ; NEWLINE DEDENT n = 5 ; NEWLINE print ( evenPowerSum ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1872_A_369",
            "java_code": "import java . util . * ; class GFG { static int numberOfMen ( int D , int m , int d ) { int Men = ( m * ( D - d ) ) / d ; return Men ; } public static void main ( String args [ ] ) { int D = 5 , m = 4 , d = 4 ; System . out . println ( numberOfMen ( D , m , d ) ) ; } }",
            "python_code": "def numberOfMen ( D , m , d ) : NEWLINE INDENT Men = ( m * ( D - d ) ) / d ; NEWLINE return int ( Men ) ; NEWLINE DEDENT D = 5 ; m = 4 ; d = 4 ; NEWLINE print ( numberOfMen ( D , m , d ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1004_B_370",
            "java_code": "import java . util . * ; public class Contest8 { static Scanner scn = new Scanner ( System . in ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) c = 0 ; ans = str ( ) for i in range ( n ) : ans += str ( c ^ 1 ) c = c ^ 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_771_A_371",
            "java_code": "import java . io . * ; class GFG { public static int countDivisors ( int N , int a , int b ) { int count1 = N / a ; int count2 = N / b ; int count3 = ( N / ( a * b ) ) ; return count1 + count2 - count3 ; } public static void main ( String [ ] args ) { int N = 1000 , a = 3 , b = 4 ; System . out . println ( countDivisors ( N , a , b ) ) ; } }",
            "python_code": "def countDivisors ( N , a , b ) : NEWLINE INDENT count1 = N // a NEWLINE count2 = N // b NEWLINE count3 = ( N // ( a * b ) ) NEWLINE return count1 + count2 - count3 NEWLINE DEDENT N = 1000 NEWLINE a = 3 NEWLINE b = 4 NEWLINE print ( countDivisors ( N , a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4678_A_372",
            "java_code": "public class GFG { static int calculateSum ( int n ) { int r1 = 2 , r2 = 3 ; int a1 = 1 , a2 = 1 ; return ( int ) ( a1 * ( Math . pow ( r1 , n ) - 1 ) / ( r1 - 1 ) + a2 * ( Math . pow ( r2 , n ) - 1 ) / ( r2 - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def calculateSum ( n ) : NEWLINE INDENT r1 , r2 = 2 , 3 NEWLINE a1 , a2 = 1 , 1 NEWLINE return ( a1 * ( pow ( r1 , n ) - 1 ) // ( r1 - 1 ) + a2 * ( pow ( r2 , n ) - 1 ) // ( r2 - 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE print ( \"SUM = \" , calculateSum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4301_A_373",
            "java_code": "import java . util . * ; class solution { static int findSum ( int N ) { return ( N * ( N + 1 ) * ( 2 * N - 5 ) + 4 * N ) / 2 ; } public static void main ( String arr [ ] ) { int N = 3 ; System . out . println ( findSum ( N ) ) ; } }",
            "python_code": "def findSum ( N ) : NEWLINE INDENT return ( ( N * ( N + 1 ) * ( 2 * N - 5 ) + 4 * N ) / 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 3 NEWLINE print ( findSum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_A_374",
            "java_code": " import java . io . * ; import java . util . * ; public class S { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int q = n / 3 , r = n % 3 , f = 0 , i = 0 ; if ( r == 2 ) q ++ ; f += ( q / 12 ) ; i += q % 12 ; System . out . print ( f + \" \" + i ) ; } }",
            "python_code": "x = ( int ( input ( ) ) + 1 ) // 3 print ( x // 12 , x % 12 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_796_B_375",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; static HashSet < Long > list = new HashSet < > ( ) ; public static void main ( String [ ] args ) {",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) holes = set ( map ( int , input ( ) . split ( ) ) ) p = 1 f = Truefor _ in range ( k ) : u , v = map ( int , input ( ) . split ( ) ) if not f : continue else : if p in holes : f = False break elif u == p : p = v elif v == p : p = uprint ( p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_801_B_376",
            "java_code": "import java . util . Scanner ;  public class problem102 {  public static void main ( String [ ] args ) {",
            "python_code": "try : x = input ( ) z = input ( ) y = \"\" v = True for i in range ( len ( x ) ) : if ascii ( x [ i ] ) < ascii ( z [ i ] ) : print ( - 1 ) v = False break else : y = y + z [ i ] if v : print ( y ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_200_B_377",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) u = [ int ( u ) for u in input ( ) . split ( ) ] print ( sum ( u ) / n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_12_A_378",
            "java_code": "class GFG { static int largestPower ( int x , int P ) { int res = 0 ; while ( x != 0 ) { x /= P ; res += x ; } return res ; } static int sumOfDivisblePowers ( int L , int R , int P ) { return largestPower ( R , P ) - largestPower ( L - 1 , P ) ; } public static void main ( String [ ] args ) { int L = 1 , R = 10 , P = 2 ; System . out . println ( sumOfDivisblePowers ( L , R , P ) ) ; } }",
            "python_code": "def largestPower ( x , P ) : NEWLINE INDENT res = 0 NEWLINE while ( x ) : NEWLINE INDENTINDENT x = int ( x / P ) NEWLINE res += x NEWLINE DEDENT return res NEWLINE DEDENT def sumOfDivisblePowers ( L , R , P ) : NEWLINE INDENT return largestPower ( R , P ) - largestPower ( L - 1 , P ) NEWLINE DEDENT L = 1 NEWLINE R = 10 NEWLINE P = 2 NEWLINE print ( sumOfDivisblePowers ( L , R , P ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1313_B_379",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { static int [ ] A ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , x , y = map ( int , input ( ) . split ( ) )  print ( max ( 1 , min ( n , x + y - n + 1 ) ) , min ( n , x + y - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_677_A_380",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner r = new Scanner ( System . in ) ; int n = r . nextInt ( ) ; int h = r . nextInt ( ) ; int result = 0 ;  for ( int i = 0 ; i < n ; i ++ ) {  result += ( r . nextInt ( ) > h ) ? 2 : 1 ; }  System . out . println ( result ) ;  r . close ( ) ; }  }",
            "python_code": "n , h = map ( int , input ( ) . split ( ) ) a = input ( ) . split ( ) sum = 0 for i in a : if int ( i ) > h : sum += 2 else : sum += 1 print ( sum ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_430_B_381",
            "java_code": "import java . io . * ; import java . util . * ; public class Solution { static Scanner sc = new Scanner ( System . in ) ; static PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "import os , iofrom sys import stdoutimport collections NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4005_A_382",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { int x = 10 ; int y = 5 ; x = x * y ; y = x / y ; x = x / y ; System . out . println ( \"After swaping:\" + \" x = \" + x + \", y = \" + y ) ; } }",
            "python_code": "x = 10 NEWLINE y = 5 NEWLINE x = x * y NEWLINE y = x // y ; NEWLINE x = x // y ; NEWLINE print ( \"After Swapping: x =\" , x , \" y =\" , y ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_887_A_383",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; char [ ] s1 = s . toCharArray ( ) ; long sum = 0 ; boolean check = false ;",
            "python_code": "s = input ( ) i = s . find ( '1' ) if i == - 1 : print ( 'no' ) else : if s [ i + 1 : ] . count ( '0' ) < 6 : print ( 'no' ) else : print ( 'yes' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_B_384",
            "java_code": "import java . util . * ; public class RandomTeams {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) f = n // mt = n % m  mini = ( f * ( f - 1 ) ) // ( 1 + 1 ) mini *= mmini += f * t ma = n - mma = ( ma * ( ma + 1 ) ) // ( 1 + 1 ) print ( mini , ma ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_688_B_385",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; StringBuilder n = new StringBuilder ( sc . next ( ) ) ; String ans = n + n . reverse ( ) . toString ( ) ; System . out . println ( ans ) ;   }   public static int getAns ( String s , int k , int start1 , int end1 ) {",
            "python_code": "s = input ( ) print ( s + s [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4057_A_386",
            "java_code": "import java . io . * ; class GFG { static int sumOfSeries ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum = sum + ( 2 * i - 1 ) * ( 2 * i - 1 ) ; return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def sumOfSeries ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum = sum + ( 2 * i - 1 ) * ( 2 * i - 1 ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 10 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1139_B_387",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) throws Exception { int n = in . readInt ( ) ; long [ ] A = in . readLA ( ) ; long ans = 0 , cur = 0 , next = ( long ) 1e18 ; for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( next == 0 ) {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) ans = l [ - 1 ] x = n - 1 p = l [ - 1 ] while x >= 1 : if p == 0 : break else : if l [ x - 1 ] >= p : ans += p - 1 p = p - 1 else : ans += l [ x - 1 ] p = l [ x - 1 ] x -= 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1312_A_388",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ;",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n , m = list ( map ( int , input ( ) . split ( ) ) ) if n % m == 0 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2495_A_389",
            "java_code": "class GFG { static int countOdd ( int L , int R ) { int N = ( R - L ) / 2 ; if ( R % 2 != 0 || L % 2 != 0 ) N ++ ; return N ; } public static void main ( String [ ] args ) { int L = 3 , R = 7 ; int odds = countOdd ( L , R ) ; int evens = ( R - L + 1 ) - odds ; System . out . println ( \"Count of odd numbers is \" + odds ) ; System . out . println ( \"Count of even numbers is \" + evens ) ; } }",
            "python_code": "def countOdd ( L , R ) : NEWLINE INDENT N = ( R - L ) // 2 NEWLINE if ( R % 2 != 0 or L % 2 != 0 ) : NEWLINE INDENTINDENT N += 1 NEWLINE DEDENT return N NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT L = 3 NEWLINE R = 7 NEWLINE odds = countOdd ( L , R ) NEWLINE evens = ( R - L + 1 ) - odds NEWLINE print ( \"Count of odd numbers is\" , odds ) NEWLINE print ( \"Count of even numbers is\" , evens ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3412_A_390",
            "java_code": "import java . util . * ; class GFG { static void isPerfectSquare ( int x ) { int sr = ( int ) Math . sqrt ( x ) ; if ( sr * sr == x ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } public static void main ( String args [ ] ) { int n = 7 , k = 2 ; isPerfectSquare ( n + k ) ; } }",
            "python_code": "from math import sqrt NEWLINE def isPerfectSquare ( x ) : NEWLINE INDENT sr = int ( sqrt ( x ) ) ; NEWLINE if ( sr * sr == x ) : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 7 ; k = 2 ; NEWLINE isPerfectSquare ( n + k ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_251_A_391",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute { public static void main ( String [ ] args ) {",
            "python_code": "n , d = map ( int , input ( ) . split ( ) ) ar = list ( map ( int , input ( ) . split ( ) ) ) i , j , s = 0 , 0 , 0 while i < n : while ar [ i ] - ar [ j ] > d : j += 1 N = i - j s += N * ( N - 1 ) // 2 i += 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_263_B_392",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class problem106 {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = list ( map ( int , input ( ) . split ( ) ) ) a = list ( map ( int , input ( ) . split ( ) ) )  if k <= n : a . sort ( reverse = True ) print ( f\"{a[k - 1]} {a[k - 1]}\" ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1436_B_393",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "cases = int ( input ( ) ) NEWLINE while cases : cases -= 1 NEWLINE num = int ( input ( ) )  matrix = [ [ 0 for i in range ( num ) ] for j in range ( num ) ] NEWLINE matrix [ 0 ] [ 0 ] = 1 NEWLINE for i in range ( 1 , num ) : matrix [ i ] [ i ] = 1 NEWLINE matrix [ i - 1 ] [ i ] = 1 NEWLINE matrix [ i ] [ i - 1 ] = 1  for i in matrix : print ( * i )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4564_A_394",
            "java_code": "import java . io . * ; class GFG { static int findNth ( int N ) { int b = 14 ; int i ; for ( i = 2 ; i <= N ; i ++ ) { if ( i % 2 == 0 ) b = b * 2 ; else b = b - 8 ; } return b ; } public static void main ( String [ ] args ) { int N = 6 ; System . out . print ( findNth ( N ) ) ; } }",
            "python_code": "def findNth ( N ) : NEWLINE INDENT b = 14 NEWLINE for i in range ( 2 , N + 1 ) : NEWLINE INDENTINDENT if ( i % 2 == 0 ) : NEWLINE INDENTINDENTINDENT b = b * 2 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT b = b - 8 NEWLINE DEDENT DEDENT return b NEWLINE DEDENT N = 6 NEWLINE print ( findNth ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_577_A_395",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static float rainDayProbability ( int a [ ] , int n ) { float count = 0 , m ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 1 ) count ++ ; } m = count / n ; return m ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 0 , 1 , 0 , 1 , 1 , 1 , 1 } ; int n = a . length ; System . out . print ( rainDayProbability ( a , n ) ) ; } }",
            "python_code": "def rainDayProbability ( a , n ) : NEWLINE INDENT count = a . count ( 1 ) NEWLINE m = count / n NEWLINE return m NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 1 , 0 , 1 , 0 , 1 , 1 , 1 , 1 ] NEWLINE n = len ( a ) NEWLINE print ( rainDayProbability ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1041_B_396",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import matha , b , x , y = map ( int , input ( ) . split ( ) ) d = math . gcd ( x , y ) print ( min ( a * d // x , b * d // y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_B_397",
            "java_code": "import java . util . Scanner ;  public class B1455 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int X = in . nextInt ( ) ; int jump = 1 ; while ( X > 0 ) { X -= jump ++ ; } int answer = ( X == - 1 ) ? jump : ( jump - 1 ) ; System . out . println ( answer ) ; } }  }",
            "python_code": "res = [ ]  for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE if n < 0 : NEWLINE INDENT res . append ( - n ) else : NEWLINE s = 0 NEWLINE DEDENT i = 0 NEWLINE while s < n : i += 1 NEWLINE s += i NEWLINE if s == n or s - n > 1 : NEWLINE INDENT res . append ( i ) else : NEWLINE res . append ( i + 1 )  for i in res : print ( i ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_171_B_398",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int temp1 = p6 ( a ) ; int temp2 = p3 ( a * 3 - 2 ) ;  System . out . println ( temp2 * 2 - temp1 ) ; } static int p6 ( int n ) { return p3 ( n ) * 6 - n * 6 + 1 ; } static int p3 ( int n ) { return n * ( n + 1 ) / 2 ; } }",
            "python_code": "n = int ( input ( ) ) print ( 6 * n * n - 6 * n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_854_B_399",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; String a [ ] = new String [ 8 ] ; int n = input . nextInt ( ) ; int k = input . nextInt ( ) ; if ( k == 0 || k == n ) System . out . println ( 0 + \" \" + 0 ) ; else { System . out . print ( 1 + \" \" ) ; int sale = n - k ; System . out . println ( Math . min ( sale , k * 2 ) ) ; } } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if n == k or k == 0 : print ( 0 , 0 ) else : print ( 1 , min ( n - k , 2 * k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_600_A_400",
            "java_code": "import java . io . * ; class GFG { static int findIndex ( int n ) { if ( n <= 1 ) return n ; int a = 0 , b = 1 , c = 1 ; int res = 1 ; while ( c < n ) { c = a + b ; res ++ ; a = b ; b = c ; } return res ; } public static void main ( String [ ] args ) { int result = findIndex ( 21 ) ; System . out . println ( result ) ; } }",
            "python_code": "def findIndex ( n ) : NEWLINE INDENT if ( n <= 1 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT a = 0 NEWLINE b = 1 NEWLINE c = 1 NEWLINE res = 1 NEWLINE while ( c < n ) : NEWLINE INDENTINDENT c = a + b NEWLINE res = res + 1 NEWLINE a = b NEWLINE b = c NEWLINE DEDENT return res NEWLINE DEDENT result = findIndex ( 21 ) NEWLINE print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_981_A_401",
            "java_code": "import java . util . * ; public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "s = input ( ) if ( s != s [ : : - 1 ] ) : print ( len ( s ) ) exit ( 0 ) p = s [ 0 ] * len ( s ) if p == s : print ( 0 ) ; exit ( 0 ) print ( len ( s ) - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3728_A_402",
            "java_code": "class OddOccurance { int getOddOccurrence ( int ar [ ] , int ar_size ) { int i ; int res = 0 ; for ( i = 0 ; i < ar_size ; i ++ ) { res = res ^ ar [ i ] ; } return res ; } public static void main ( String [ ] args ) { OddOccurance occur = new OddOccurance ( ) ; int ar [ ] = new int [ ] { 2 , 3 , 5 , 4 , 5 , 2 , 4 , 3 , 5 , 2 , 4 , 4 , 2 } ; int n = ar . length ; System . out . println ( occur . getOddOccurrence ( ar , n ) ) ; } }",
            "python_code": "def getOddOccurrence ( arr ) : NEWLINE INDENT res = 0 NEWLINE for element in arr : NEWLINE INDENTINDENT res = res ^ element NEWLINE DEDENT return res NEWLINE DEDENT arr = [ 2 , 3 , 5 , 4 , 5 , 2 , 4 , 3 , 5 , 2 , 4 , 4 , 2 ] NEWLINE print ( \"%d\" % getOddOccurrence ( arr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4623_A_403",
            "java_code": "class GFG { static void fibonacci ( double n ) { double fib ; for ( double i = 0 ; i < n ; i ++ ) { fib = ( Math . pow ( ( 1 + Math . sqrt ( 5 ) ) , i ) - Math . pow ( ( 1 - Math . sqrt ( 5 ) ) , i ) ) / ( Math . pow ( 2 , i ) * Math . sqrt ( 5 ) ) ; System . out . print ( ( int ) fib + \" \" ) ; } } public static void main ( String [ ] args ) { double n = 8 ; fibonacci ( n ) ; } }",
            "python_code": "import math NEWLINE def fibonacci ( n ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT fib = ( ( pow ( ( 1 + math . sqrt ( 5 ) ) , i ) - pow ( ( 1 - math . sqrt ( 5 ) ) , i ) ) / ( pow ( 2 , i ) * math . sqrt ( 5 ) ) ) ; NEWLINE print ( int ( fib ) , end = \" \" ) ; NEWLINE DEDENT DEDENT n = 8 ; NEWLINE fibonacci ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1147_A_404",
            "java_code": "class GFG { static long product ( int [ ] [ ] mat , int n ) { long d1 = 0 , d2 = 0 ; for ( int i = 0 ; i < n ; i ++ ) { d1 += mat [ i ] [ i ] ; d2 += mat [ i ] [ n - i - 1 ] ; } return 1L * d1 * d2 ; } public static void main ( String [ ] args ) { int [ ] [ ] mat = { { 5 , 8 , 1 } , { 5 , 10 , 3 } , { - 6 , 17 , - 9 } } ; int n = mat . length ; System . out . print ( product ( mat , n ) ) ; } }",
            "python_code": "def product ( mat , n ) : NEWLINE INDENT d1 = 0 NEWLINE d2 = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT d1 += mat [ i ] [ i ] NEWLINE d2 += mat [ i ] [ n - i - 1 ] NEWLINE DEDENT return d1 * d2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT mat = [ [ 5 , 8 , 1 ] , [ 5 , 10 , 3 ] , [ - 6 , 17 , - 9 ] ] NEWLINE n = len ( mat ) NEWLINE print ( product ( mat , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4078_A_405",
            "java_code": "import java . io . * ; class GFG { static void printPartition ( int n , int m ) { int k = n / m ; int ct = n % m ; int i ; for ( i = 1 ; i <= ct ; i ++ ) System . out . print ( k + 1 + \" \" ) ; for ( ; i <= m ; i ++ ) System . out . print ( k + \" \" ) ; } public static void main ( String [ ] args ) { int n = 5 , m = 2 ; printPartition ( n , m ) ; } }",
            "python_code": "def printPartition ( n , m ) : NEWLINE INDENT k = int ( n / m ) NEWLINE ct = n % m NEWLINE for i in range ( 1 , ct + 1 , 1 ) : NEWLINE INDENTINDENT print ( k + 1 , end = \" \" ) NEWLINE DEDENT count = i NEWLINE for i in range ( count , m , 1 ) : NEWLINE INDENTINDENT print ( k , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE m = 2 NEWLINE printPartition ( n , m ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1478_A_406",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner infile = new Scanner ( System . in ) ; int T = infile . nextInt ( ) ; while ( T -- > 0 ) { int N = infile . nextInt ( ) ; int [ ] freq = new int [ N + 1 ] ; while ( N -- > 0 ) { freq [ infile . nextInt ( ) ] ++ ; } int res = 0 ; for ( int x : freq ) res = Math . max ( res , x ) ; System . out . println ( res ) ; } } }",
            "python_code": "import matht = int ( input ( ) ) NEWLINE for i in range ( 0 , t ) : n = int ( input ( ) ) NEWLINE l = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_939_A_407",
            "java_code": "import java . util . Scanner ;  public class Problem25 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) f = [ 1 ] + list ( map ( int , input ( ) . split ( ) ) ) for i in range ( 1 , n + 1 ) : if f [ f [ f [ i ] ] ] == i : print ( 'Yes' ) breakelse : print ( 'No' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4050_A_408",
            "java_code": "class demo { public static double sumOfTheSeries ( int n ) { double sum = 0.0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += 1.0 / ( i * ( i + 1 ) ) ; return sum ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += 1.0 / ( i * ( i + 1 ) ) ; NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT ans = sumOfTheSeries ( 10 ) NEWLINE print ( round ( ans , 6 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5016_A_409",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 2 ) + 4 * n - 2 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 2 * pow ( n , 2 ) + 4 * n - 2 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1199_B_410",
            "java_code": "import java . util . * ;  public class questionCF { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long h = sc . nextInt ( ) ; long l = sc . nextInt ( ) ; System . out . printf ( \"%.13f\" , ( double ) ( l * l - h * h ) / ( 2 * h ) ) ; } }",
            "python_code": "h , l = list ( map ( int , input ( ) . split ( ) ) )  res = ( l ** 2 - h ** 2 ) / ( 2 * h ) print ( res )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_169_A_411",
            "java_code": "import java . io . * ; class GFG { static boolean isDivisible ( long n ) { while ( n / 100 > 0 ) { long d = n % 10 ; n /= 10 ; n += d * 2 ; } return ( n % 19 == 0 ) ; } public static void main ( String [ ] args ) { long n = 101156 ; if ( isDivisible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while ( n // 100 ) : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n += d * 2 NEWLINE DEDENT return ( n % 19 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 101156 NEWLINE if ( isDivisible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4410_A_412",
            "java_code": "import java . io . * ; class GFG { static double findSum ( long n ) { return Math . sqrt ( 3 ) * ( n * ( n + 1 ) / 2 ) ; } public static void main ( String [ ] args ) { long n = 10 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def findSum ( n ) : NEWLINE INDENT return math . sqrt ( 3 ) * ( n * ( n + 1 ) / 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( findSum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_182_B_413",
            "java_code": "import java . util . * ; public class vesya_clender {  public static void main ( String [ ] args ) {",
            "python_code": "d = int ( input ( ) ) n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) count = 0 for i in range ( len ( a ) - 1 ) : count += d - a [ i ] print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4210_A_414",
            "java_code": "import java . util . * ; import java . lang . Math ; import java . io . * ; class GFG { static int nextPowerOfFour ( int n ) { int x = ( int ) Math . floor ( Math . sqrt ( Math . sqrt ( n ) ) ) ; if ( Math . pow ( x , 4 ) == n ) return n ; else { x = x + 1 ; return ( int ) Math . pow ( x , 4 ) ; } } public static void main ( String [ ] args ) throws java . lang . Exception { int n = 122 ; System . out . println ( nextPowerOfFour ( n ) ) ; } }",
            "python_code": "import math NEWLINE def nextPowerOfFour ( n ) : NEWLINE INDENT x = math . floor ( ( n ** ( 1 / 2 ) ) ** ( 1 / 2 ) ) ; NEWLINE if ( ( x ** 4 ) == n ) : NEWLINE INDENTINDENT return n ; NEWLINE DEDENT else : NEWLINE INDENTINDENT x = x + 1 ; NEWLINE return ( x ** 4 ) ; NEWLINE DEDENT DEDENT n = 122 ; NEWLINE print ( nextPowerOfFour ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4349_A_415",
            "java_code": "class GFG { static int nthEven ( int n ) { return ( 2 * n ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( nthEven ( n ) ) ; } }",
            "python_code": "def nthEven ( n ) : NEWLINE INDENT return ( 2 * n ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( nthEven ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_832_A_416",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Scanner ;  public class Singleton_Pattern { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long x = n / k ; if ( x % 2 == 0 ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if ( ( n // k ) % 2 == 0 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3395_A_417",
            "java_code": "class GFG { static int GIF ( double n ) { return ( int ) Math . floor ( n ) ; } public static void main ( String [ ] args ) { double n = 2.3 ; System . out . println ( GIF ( n ) ) ; } }",
            "python_code": "import math NEWLINE def GIF ( n ) : NEWLINE INDENT return int ( math . floor ( n ) ) ; NEWLINE DEDENT n = 2.3 ; NEWLINE print ( GIF ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2635_A_418",
            "java_code": "import java . io . * ; class Series { static int term ( int n ) { int x = ( ( ( 1 ) + ( int ) Math . sqrt ( 1 + ( 8 * n ) ) ) / 2 ) ; return x ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( term ( n ) ) ; } }",
            "python_code": "import math NEWLINE def term ( n ) : NEWLINE INDENT x = ( ( ( 1 ) + math . sqrt ( 1 + ( 8 * n ) ) ) / 2 ) NEWLINE return x NEWLINE DEDENT n = 5 NEWLINE print ( int ( term ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1091_B_419",
            "java_code": "import java . util . * ; import java . io . * ; public class tre { public static void main ( String [ ] Args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long x = 0 , y = 0 ; for ( int i = 0 ; i < 2 * n ; i ++ ) { x += sc . nextLong ( ) ; y += sc . nextLong ( ) ;   } System . out . println ( x / n + \" \" + y / n ) ;  }  }",
            "python_code": "def solve ( n , pillar , clues ) : index = 0 dup_clues = set ( clues ) while index < n : found = True x = pillar [ 0 ] [ 0 ] + clues [ index ] [ 0 ] y = pillar [ 0 ] [ 1 ] + clues [ index ] [ 1 ] for x1 , y1 in pillar : if ( x - x1 , y - y1 ) in dup_clues : continue else : found = False break if found : print ( x , y ) index += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1272_A_420",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNext ( ) ) { int n = sc . nextInt ( ) ; while ( n -- > 0 ) { long a = sc . nextLong ( ) , b = sc . nextLong ( ) , c = sc . nextLong ( ) ; System . out . println ( Math . max ( ( Math . abs ( a - b ) + Math . abs ( a - c ) + Math . abs ( b - c ) - 4 ) , 0 ) ) ; } } } }",
            "python_code": "import sysinput = sys . stdin . readline  for test in range ( int ( input ( ) ) ) : a = sorted ( [ int ( i ) for i in input ( ) . split ( ) ] ) if a [ 0 ] == a [ 2 ] or a [ 0 ] + 1 == a [ 2 ] : print ( 0 ) continue a [ 0 ] += 1 a [ 1 ] = a [ 0 ] a [ 2 ] -= 1 ans = abs ( a [ 0 ] - a [ 1 ] ) + abs ( a [ 0 ] - a [ 2 ] ) + abs ( a [ 1 ] - a [ 2 ] ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_B_421",
            "java_code": "import javax . print . DocFlavor ; import java . io . * ; import java . net . Inet4Address ; import java . sql . ClientInfoStatus ; import java . util . * ; ",
            "python_code": "n , s = map ( int , input ( ) . split ( ) ) l = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) cost = 0 boi0 = l [ : n // 2 ] boi1 = l [ n // 2 + 1 : ] for i in range ( n // 2 ) : if boi0 [ - 1 - i ] > s : cost += abs ( boi0 [ - 1 - i ] - s ) boi0 [ - 1 - i ] = s if boi1 [ i ] < s : cost += abs ( boi1 [ i ] - s ) boi1 [ i ] = scost += abs ( l [ n // 2 ] - s ) print ( cost ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3821_A_422",
            "java_code": "class GFG { static void findNums ( int arr [ ] , int n ) { int S = 0 , X = 0 ; for ( int i = 0 ; i < n ; i ++ ) { S += arr [ i ] ; X ^= arr [ i ] ; } System . out . println ( X + \" \" + ( X + S ) ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 7 } ; int n = arr . length ; findNums ( arr , n ) ; } }",
            "python_code": "def findNums ( arr , n ) : NEWLINE INDENT S = 0 ; X = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT S += arr [ i ] ; NEWLINE X ^= arr [ i ] ; NEWLINE DEDENT print ( X , X + S ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 7 ] ; NEWLINE n = len ( arr ) ; NEWLINE findNums ( arr , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1914_A_423",
            "java_code": "public class GFG { static int maxZeros ( int N ) { int maxm = - 1 ; int cnt = 0 ; while ( N != 0 ) { if ( ( N & 1 ) == 0 ) { cnt ++ ; N >>= 1 ; maxm = Math . max ( maxm , cnt ) ; } else { maxm = Math . max ( maxm , cnt ) ; cnt = 0 ; N >>= 1 ; } } return maxm ; } public static void main ( String args [ ] ) { int N = 14 ; System . out . println ( maxZeros ( N ) ) ; } }",
            "python_code": "def maxZeros ( N ) : NEWLINE INDENT maxm = - 1 NEWLINE cnt = 0 NEWLINE while ( N ) : NEWLINE INDENTINDENT if ( not ( N & 1 ) ) : NEWLINE INDENTINDENTINDENT cnt += 1 NEWLINE N >>= 1 NEWLINE maxm = max ( maxm , cnt ) NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT maxm = max ( maxm , cnt ) NEWLINE cnt = 0 NEWLINE N >>= 1 NEWLINE DEDENT DEDENT return maxm NEWLINE DEDENT N = 14 NEWLINE print ( maxZeros ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3650_A_424",
            "java_code": "import java . util . * ; class GFG { static void getmax ( int arr [ ] , int n , int x ) { int s = 0 ; for ( int i = 0 ; i < n ; i ++ ) { s = s + arr [ i ] ; } System . out . print ( Math . min ( s , x ) ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 4 } ; int x = 5 ; int arr_size = arr . length ; getmax ( arr , arr_size , x ) ; } }",
            "python_code": "def getmax ( arr , n , x ) : NEWLINE INDENT s = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT s = s + arr [ i ] NEWLINE DEDENT print ( min ( s , x ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 1 , 2 , 3 , 4 ] NEWLINE x = 5 NEWLINE arr_size = len ( arr ) NEWLINE getmax ( arr , arr_size , x ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_224_A_425",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "import math as mpdef parallelepiped ( areas ) : a = areas [ 0 ] / areas [ 1 ] b2 = mp . sqrt ( areas [ 2 ] / a ) a1 = areas [ 1 ] / b2 b1 = areas [ 0 ] / a1 edge_sum = ( 4 * a1 ) + ( 4 * b1 ) + ( 4 * b2 ) return ( int ( edge_sum ) )  areas = list ( map ( int , input ( ) . split ( ) ) ) result = parallelepiped ( areas ) print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3076_A_426",
            "java_code": "class GFG { public static void main ( String [ ] args ) { long ans = 1 ; long mod = ( long ) 1000000007 * 120 ; for ( int i = 0 ; i < 5 ; i ++ ) ans = ( ans * ( 55555 - i ) ) % mod ; ans = ans / 120 ; System . out . println ( \"Answer using\" + \" shortcut: \" + ans ) ; } }",
            "python_code": "ans = 1 NEWLINE mod = 1000000007 * 120 NEWLINE for i in range ( 0 , 5 ) : NEWLINE INDENT ans = ( ans * ( 55555 - i ) ) % mod NEWLINE DEDENT ans = int ( ans / 120 ) NEWLINE print ( \"Answer using shortcut: \" , ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_869_B_427",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "a , b = [ int ( x ) for x in input ( ) . split ( ) ]  x = b % 10 mul = 1 for i in range ( b , a , - 1 ) : mul *= x x -= 1 if x < 0 and i > a : print ( \"0\" ) mul = - 1 breakif mul != - 1 : mul = mul % 10 print ( mul ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3665_A_428",
            "java_code": "class Test { static final double PI = Math . PI ; static double findArea ( int r ) { return PI * Math . pow ( r , 2 ) ; } public static void main ( String [ ] args ) { System . out . println ( \"Area is \" + findArea ( 5 ) ) ; } }",
            "python_code": "def findArea ( r ) : NEWLINE INDENT PI = 3.142 NEWLINE return PI * ( r * r ) ; NEWLINE DEDENT print ( \"Area is %.6f\" % findArea ( 5 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_466_A_429",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {",
            "python_code": "n , m , a , b = map ( int , input ( ) . split ( ) ) l = [ ] for i in range ( 0 , n * 2 ) : l . append ( i * b + ( ( n - m * i ) * a if n - m * i > 0 else 0 ) ) print ( min ( l ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1102_A_430",
            "java_code": "import java . util . Scanner ; public class Main { static Scanner in = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int ans = 0 ; int n = in . nextInt ( ) ; if ( n % 2 == 0 ) { if ( ( n > > 1 ) % 2 == 1 ) ans = 1 ; else ans = 0 ; } else { if ( ( ( n - 1 ) > > 1 ) % 2 == 0 ) ans = 1 ; else ans = 0 ; } System . out . println ( ans ) ; } }",
            "python_code": "n = int ( input ( ) ) if ( n * ( n + 1 ) ) % 4 == 0 : print ( 0 ) elif n <= 2 : print ( 1 ) elif n == 3 : print ( 0 ) else : print ( 1 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5179_A_431",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int findremainder ( int arr [ ] , int len , int n ) { int mul = 1 ; for ( int i = 0 ; i < len ; i ++ ) mul = ( mul * ( arr [ i ] % n ) ) % n ; return mul % n ; } public static void main ( String argc [ ] ) { int [ ] arr = new int [ ] { 100 , 10 , 5 , 25 , 35 , 14 } ; int len = 6 ; int n = 11 ; System . out . println ( findremainder ( arr , len , n ) ) ; } }",
            "python_code": "def findremainder ( arr , lens , n ) : NEWLINE INDENT mul = 1 NEWLINE for i in range ( lens ) : NEWLINE INDENTINDENT mul = ( mul * ( arr [ i ] % n ) ) % n NEWLINE DEDENT return mul % n NEWLINE DEDENT arr = [ 100 , 10 , 5 , 25 , 35 , 14 ] NEWLINE lens = len ( arr ) NEWLINE n = 11 NEWLINE print ( findremainder ( arr , lens , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3155_A_432",
            "java_code": "class GFG { static int __gcd ( int a , int b ) { if ( b == 0 ) return a ; return __gcd ( b , a % b ) ; } static int countRectangles ( int l , int w ) { int squareSide = __gcd ( l , w ) ; return ( l * w ) / ( squareSide * squareSide ) ; } public static void main ( String [ ] args ) { int l = 4 , w = 6 ; System . out . println ( countRectangles ( l , w ) ) ; } }",
            "python_code": "import math NEWLINE def countRectangles ( l , w ) : NEWLINE INDENT squareSide = math . gcd ( l , w ) NEWLINE return ( l * w ) / ( squareSide * squareSide ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT l = 4 NEWLINE w = 6 NEWLINE ans = countRectangles ( l , w ) NEWLINE print ( int ( ans ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p002_A_433",
            "java_code": "public final class p002 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p002 ( ) . run ( ) ) ; } public String run ( ) { int sum = 0 ; int x = 1 ; int y = 2 ; while ( x <= 4000000 ) { if ( x % 2 == 0 ) sum += x ; int z = x + y ; x = y ; y = z ; } return Integer . toString ( sum ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT ans = 0 NEWLINE x = 1 NEWLINE y = 2 NEWLINE while x <= 4000000 : NEWLINE INDENTINDENT if x % 2 == 0 : NEWLINE INDENTINDENTINDENT ans += x NEWLINE DEDENT x , y = y , x + y NEWLINE DEDENT return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_520_A_434",
            "java_code": "import java . util . * ; public class Pangram { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; int count = 0 ; for ( char c = 'a' ; c <= 'z' ; c ++ ) { if ( s . toLowerCase ( ) . contains ( String . valueOf ( c ) ) ) count ++ ; } if ( count == 26 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) l = [ ] for i in s : k = i . lower ( ) if k not in l : l . append ( k ) if ( len ( l ) == 26 ) : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2867_A_435",
            "java_code": "import java . io . * ; class GFG { static int countReduce ( String str ) { int n = str . length ( ) ; int res = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) res += Math . abs ( str . charAt ( i ) - str . charAt ( n - i - 1 ) ) ; return res ; } public static void main ( String [ ] args ) { String str = \"abcd\" ; System . out . println ( countReduce ( str ) ) ; } }",
            "python_code": "def countReduce ( str ) : NEWLINE INDENT n = len ( str ) NEWLINE res = 0 NEWLINE for i in range ( 0 , int ( n / 2 ) ) : NEWLINE INDENTINDENT res += abs ( int ( ord ( str [ i ] ) ) - int ( ord ( str [ n - i - 1 ] ) ) ) NEWLINE DEDENT return res NEWLINE DEDENT str = \"abcd\" NEWLINE print ( countReduce ( str ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3149_A_436",
            "java_code": "class GFG { static int reversDigits ( int num ) { int rev_num = 0 ; while ( num > 0 ) { rev_num = rev_num * 10 + num % 10 ; num = num / 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( \"Reverse of no. is \" + reversDigits ( num ) ) ; } }",
            "python_code": "n = 4562 ; NEWLINE rev = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENT a = n % 10 NEWLINE rev = rev * 10 + a NEWLINE n = n / 10 NEWLINE DEDENT print ( rev ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_20_A_437",
            "java_code": "public class GFG { static int search ( int arr [ ] , int n , int x ) { int i ; for ( i = 0 ; i < n ; i ++ ) { if ( arr [ i ] == x ) { return i ; } } return - 1 ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 10 , 30 , 15 } ; int x = 30 ; int n = arr . length ; System . out . printf ( \"%d is present at index %d\" , x , search ( arr , n , x ) ) ; } }",
            "python_code": "def search ( arr , n , x ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if arr [ i ] == x : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return - 1 NEWLINE DEDENT arr = [ 1 , 10 , 30 , 15 ] NEWLINE x = 30 NEWLINE n = len ( arr ) NEWLINE print ( x , \"is present at index\" , search ( arr , n , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_272_A_438",
            "java_code": "import java . util . Scanner ;  public class Problem_272A { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int friends = s . nextInt ( ) ; int fingerSum = 0 ; for ( int i = 0 ; i < friends ; i ++ ) fingerSum += s . nextInt ( ) ;  int ways = 0 ; for ( int i = 1 ; i <= 5 ; i ++ ) { if ( ( fingerSum + i ) % ( friends + 1 ) != 1 ) { ways ++ ; } }  System . out . println ( ways ) ;  } }",
            "python_code": "n = int ( input ( ) ) + 1 fingers = sum ( map ( int , input ( ) . split ( ) ) ) start = fingers % noptions = 0 for x in range ( 1 , 6 ) : if ( start + x ) % n != 1 : options += 1 print ( options ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_413_A_439",
            "java_code": "import java . io . IOException ; import java . util . Scanner ;  public class A { public static void main ( String [ ] args ) throws IOException { Scanner scan = new Scanner ( System . in ) ;  int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; int min = scan . nextInt ( ) ; int max = scan . nextInt ( ) ; ",
            "python_code": "n , m , l , r = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) if max ( a ) > r or min ( a ) < l : print ( \"Incorrect\" ) elif n - m >= 2 : print ( \"Correct\" ) else : if l not in a and r not in a and l != r : print ( \"Incorrect\" ) else : print ( \"Correct\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_157_A_440",
            "java_code": "import java . util . Scanner ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int row [ ] = new int [ n ] ; int col [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) {",
            "python_code": "a = int ( input ( ) ) b = list ( ) for i in range ( a ) : b . append ( list ( map ( int , input ( ) . split ( ) ) ) ) h = 0 for i in range ( a ) : for j in range ( a ) : if ( sum ( b [ i ] [ j ] for i in range ( a ) ) > sum ( b [ i ] ) ) : h += 1 print ( h )                        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_667_B_441",
            "java_code": "import java . util . Scanner ;  public class B667 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; long sum = 0 ; long max = 0 ; for ( int n = 0 ; n < N ; n ++ ) { int length = in . nextInt ( ) ; sum += length ; max = Math . max ( max , length ) ; } long answer = max - ( sum - max ) + 1 ; System . out . println ( answer ) ; }  }",
            "python_code": "n = int ( input ( ) ) l = [ int ( x ) for x in input ( ) . split ( ) ] print ( max ( l ) - ( sum ( l ) - max ( l ) ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1963_A_442",
            "java_code": "import java . util . * ; class GFG { static void printNonConsecutive ( int n ) { int p = ( 1 << n ) ; for ( int i = 1 ; i < p ; i ++ ) if ( ( i & ( i << 1 ) ) == 0 ) System . out . print ( i + \" \" ) ; } public static void main ( String [ ] args ) { int n = 3 ; printNonConsecutive ( n ) ; } }",
            "python_code": "def printNonConsecutive ( n ) : NEWLINE INDENT p = ( 1 << n ) NEWLINE for i in range ( 1 , p ) : NEWLINE INDENTINDENT if ( ( i & ( i << 1 ) ) == 0 ) : NEWLINE INDENTINDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT DEDENT DEDENT n = 3 NEWLINE printNonConsecutive ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1406_A_443",
            "java_code": "import java . lang . * ; public class GFG { static int cost ( int [ ] a , int n ) { int min = a [ 0 ] ; for ( int i = 1 ; i < a . length ; i ++ ) { if ( a [ i ] < min ) min = a [ i ] ; } return ( n - 1 ) * min ; } static public void main ( String [ ] args ) { int [ ] a = { 4 , 3 , 2 } ; int n = a . length ; System . out . println ( cost ( a , n ) ) ; } }",
            "python_code": "def cost ( a , n ) : NEWLINE INDENT return ( ( n - 1 ) * min ( a ) ) NEWLINE DEDENT a = [ 4 , 3 , 2 ] NEWLINE n = len ( a ) NEWLINE print ( cost ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_118_B_444",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) )  space = n * 2 arr = [ ' ' * space + \"0\" ]  for i in range ( 1 , n + 1 ) : space -= 2 arr . append ( ( ' ' * space + ( arr [ - 1 ] + \" \" + str ( i ) ) . strip ( ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_551_A_445",
            "java_code": "import java . util . * ; public class GukiZandContest {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) lst = [ int ( i ) for i in input ( ) . split ( ) ] exp = sorted ( lst , reverse = True )  for i in lst : print ( exp . index ( i ) + 1 , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4506_A_446",
            "java_code": "class GFG { static int addOne ( int x ) { return ( - ( ~ x ) ) ; } public static void main ( String [ ] args ) { System . out . printf ( \"%d\" , addOne ( 13 ) ) ; } }",
            "python_code": "def addOne ( x ) : NEWLINE INDENT return ( - ( ~ x ) ) ; NEWLINE DEDENT print ( addOne ( 13 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_876_A_447",
            "java_code": "import java . io . * ; class GFG { static void printPair ( int g , int l ) { System . out . print ( g + \" \" + l ) ; } public static void main ( String [ ] args ) { int g = 3 , l = 12 ; printPair ( g , l ) ; } }",
            "python_code": "def printPair ( g , l ) : NEWLINE INDENT print ( g , l ) NEWLINE DEDENT g = 3 ; l = 12 ; NEWLINE printPair ( g , l ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1106_A_448",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001106A { static public void main ( final String [ ] args ) throws IOException { p001106A . _main ( args ) ; }",
            "python_code": "p = list ( map ( int , input ( ) . split ( ) ) ) k = p [ 0 ] a = [ ] for i in range ( k ) : s = input ( ) a . append ( s ) ans = int ( 0 ) for i in range ( 1 , k - 1 ) : for j in range ( 1 , k - 1 ) : if a [ i - 1 ] [ j - 1 ] == 'X' and a [ i - 1 ] [ j + 1 ] == 'X' and a [ i + 1 ] [ j - 1 ] == 'X' and a [ i + 1 ] [ j + 1 ] == 'X' and a [ i ] [ j ] == 'X' : ans = ans + 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_246_A_449",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; if ( n == 1 || n == 2 ) System . out . println ( - 1 ) ; else { for ( int i = n ; i >= 1 ; i -- ) { System . out . print ( i + \" \" ) ; } }  } }",
            "python_code": "n = int ( input ( ) ) if n <= 2 : print ( \"-1\" ) else : for i in range ( n , 0 , - 1 ) : print ( i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1405_A_450",
            "java_code": "import java . util . * ;  public class PermutationF { public static void main ( String [ ] agrs ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; for ( int i = n - 1 ; i >= 0 ; i -- ) System . out . print ( a [ i ] + \" \" ) ; System . out . println ( ) ; } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE ans = [ ] NEWLINE for i in range ( t ) : n = input ( ) NEWLINE p = input ( ) . split ( ) NEWLINE p . reverse ( ) NEWLINE ans . append ( p ) NEWLINE for j in ans : print ( \" \" . join ( j ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5226_A_451",
            "java_code": "import java . util . * ; class GFG { static double sum ( int n ) { if ( n == 0 ) return 1 ; double ans = 1 / ( double ) Math . pow ( 3 , n ) + sum ( n - 1 ) ; return ans ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( sum ( n ) ) ; } }",
            "python_code": "def sum ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return 1 / pow ( 3 , n ) + sum ( n - 1 ) NEWLINE DEDENT n = 5 ; NEWLINE print ( sum ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_798_A_452",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ;   public class atcbg {",
            "python_code": "str = str ( input ( ) ) def pal ( ) : global str lst = [ ] count1 = 0 count2 = 0 n = len ( str ) for i in str : lst . append ( i ) for i in range ( len ( lst ) ) : if lst [ i ] == lst [ n - 1 - i ] : count1 += 1 else : count2 += 1 if len ( str ) % 2 == 0 : if ( count2 == 2 ) : print ( \"YES\" ) else : print ( \"NO\" ) if len ( str ) % 2 == 1 : if ( count2 == 0 or count2 == 2 ) : print ( \"YES\" ) else : print ( 'NO' ) pal ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_989_A_453",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String s1 = s . nextLine ( ) ; if ( s1 . contains ( \"ABC\" ) || s1 . contains ( \"ACB\" ) || s1 . contains ( \"BAC\" ) || s1 . contains ( \"BCA\" ) || s1 . contains ( \"CBA\" ) || s1 . contains ( \"CAB\" ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "s = input ( )   f = Falsefor i in range ( len ( s ) - 2 ) : x = s [ i : i + 3 ]  if 'A' in x and 'B' in x and 'C' in x : f = True break  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_680_A_454",
            "java_code": "import java . util . Scanner ;  public class NewMain4 {  public static void main ( String [ ] args ) {",
            "python_code": "a = 3 * [ 0 ] + sorted ( map ( int , input ( ) . split ( ) ) ) print ( sum ( a ) - max ( 2 * z + ( x == z ) * z for x , y , z in zip ( a , a [ 1 : ] , a [ 2 : ] ) if z == y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2199_A_455",
            "java_code": "import java . io . * ; import java . lang . * ; class GFG { public static double answer ( double X , double K ) { double i = 10 ; double MIN = Math . pow ( i , K - 1 ) ; if ( MIN % X == 0 ) return ( MIN ) ; else return ( ( MIN + X ) - ( ( MIN + X ) % X ) ) ; } public static void main ( String [ ] args ) { double X = 83 ; double K = 5 ; System . out . println ( ( int ) answer ( X , K ) ) ; } }",
            "python_code": "def answer ( X , K ) : NEWLINE INDENT MIN = pow ( 10 , K - 1 ) NEWLINE if ( MIN % X == 0 ) : NEWLINE INDENTINDENT return ( MIN ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( ( MIN + X ) - ( ( MIN + X ) % X ) ) NEWLINE DEDENT DEDENT X = 83 ; NEWLINE K = 5 ; NEWLINE print ( answer ( X , K ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_854_A_456",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) if n % 2 == 0 : if ( n // 2 ) % 2 == 1 : print ( n // 2 - 2 , n // 2 + 2 ) else : print ( n // 2 - 1 , n // 2 + 1 ) else : print ( n // 2 , n // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5218_A_457",
            "java_code": "class GFG { static void printCombination ( int n ) { System . out . print ( 1 + \" \" ) ; if ( ( n - 2 ) % 3 == 0 ) System . out . print ( 2 + \" \" + ( n - 3 ) ) ; else System . out . print ( 1 + \" \" + ( n - 2 ) ) ; } public static void main ( String [ ] args ) { int n = 233 ; printCombination ( n ) ; } }",
            "python_code": "def printCombination ( n ) : NEWLINE INDENT print ( \"1 \" , end = \"\" ) ; NEWLINE if ( ( n - 2 ) % 3 == 0 ) : NEWLINE INDENTINDENT print ( \"2\" , n - 3 , end = \"\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"1\" , ( n - 2 ) , end = \"\" ) ; NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 233 ; NEWLINE printCombination ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1020_B_458",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { public static void main ( String args [ ] ) throws Exception { FastScanner fs = new FastScanner ( ) ;",
            "python_code": "n = int ( input ( ) ) d = dict ( zip ( range ( 1 , n + 1 ) , map ( int , input ( ) . split ( ) ) ) ) ans = [ 0 ] * nfor i in d : node = i s = set ( ) while node not in s : s . add ( node ) node = d [ node ] ans [ i - 1 ] = node  print ( * ans )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4482_A_459",
            "java_code": "import java . lang . * ; class GFG { public static double per ( double a , double b ) { return ( a + b ) ; } public static double area ( double s ) { return ( s / 2 ) ; } public static void main ( String [ ] args ) { double a = 7 , b = 8 , s = 10 ; System . out . println ( per ( a , b ) ) ; System . out . println ( area ( s ) ) ; } }",
            "python_code": "def per ( a , b ) : NEWLINE INDENT return ( a + b ) NEWLINE DEDENT def area ( s ) : NEWLINE INDENT return ( s / 2 ) NEWLINE DEDENT a = 7 NEWLINE b = 8 NEWLINE s = 10 NEWLINE print ( per ( a , b ) ) NEWLINE print ( area ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_339_B_460",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n , m = list ( map ( int , input ( ) . split ( ) ) ) a = [ 1 ] + list ( map ( int , input ( ) . split ( ) ) ) print ( sum ( [ ( a [ i ] - a [ i - 1 ] ) % n for i in range ( 1 , m + 1 ) ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1277_A_461",
            "java_code": " import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ;",
            "python_code": "x = int ( input ( ) ) for i in range ( x ) : n = int ( input ( ) ) s = 0 k = 1 for j in range ( 1 , 11 ) : for h in range ( 1 , 10 ) : if ( h * k <= n ) : s = s + 1 k = ( k * 10 ) + 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_394_B_462",
            "java_code": "import java . util . * ; import java . io . * ; import static java . lang . System . out ; import static java . util . Arrays . * ; import static java . lang . Math . * ; public class ContestMain { private static Reader in = new Reader ( ) ; private static StringBuilder ans = new StringBuilder ( ) ; private static long MOD = 1000000007 ;",
            "python_code": "p , k = input ( ) . split ( )  p = int ( p ) k = int ( k )  y = 10 * k - 1 x = ( ( 10 ** ( p - 1 ) ) - k ) % y   b = True  for i in range ( k , 10 ) : if ( ( x * i % y ) == 0 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_721_B_463",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) s = [ ] for i in range ( n ) : a = input ( ) s . append ( a ) flag = Trueb = 0 w = 0 d = 0 l = 0 password = input ( ) for i in range ( n ) : if len ( s [ i ] ) < len ( password ) : d += 1 elif len ( s [ i ] ) == len ( password ) : l += 1 x = d + l - 1 w = x + ( x // k ) * 5 + 1 b = d + ( d // k ) * 5 + 1 print ( b , w ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3014_A_464",
            "java_code": "import java . io . * ; class GFG { static long oddNumSum ( int n ) { int j = 0 ; long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { j = ( 2 * i - 1 ) ; sum = sum + ( j * j * j * j ) ; } return sum ; } public static void main ( String args [ ] ) { int n = 6 ; System . out . println ( oddNumSum ( n ) ) ; } }",
            "python_code": "def oddNumSum ( n ) : NEWLINE INDENT j = 0 NEWLINE sm = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT j = ( 2 * i - 1 ) NEWLINE sm = sm + ( j * j * j * j ) NEWLINE DEDENT return sm NEWLINE DEDENT n = 6 ; NEWLINE print ( oddNumSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3738_A_465",
            "java_code": "import java . io . * ; class GFG { static int countSolutions ( int a ) { int count = Integer . bitCount ( a ) ; count = ( int ) Math . pow ( 2 , count ) ; return count ; } public static void main ( String [ ] args ) { int a = 3 ; System . out . println ( countSolutions ( a ) ) ; } }",
            "python_code": "def countSolutions ( a ) : NEWLINE INDENT count = bin ( a ) . count ( '1' ) NEWLINE return 2 ** count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 3 NEWLINE print ( countSolutions ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1374_A_466",
            "java_code": "import java . util . Scanner ;  public class RequiredRemainder { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int ans = - 1 ; int k = n - ( ( n - y ) % x ) ; System . out . println ( k ) ; } } }",
            "python_code": "a = int ( input ( ) ) for i in range ( a ) : m , n , o = map ( int , input ( ) . split ( ) ) print ( ( o - n ) // m * m + n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1016_A_467",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) A = list ( map ( int , input ( ) . split ( ) ) ) cur = mans = [ 0 ] * nfor i , a in enumerate ( A ) : if a < cur : cur -= a ans [ i ] = 0 else : q = ( a - cur + m - 1 ) // m r = q * m - ( a - cur ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_194_B_468",
            "java_code": "import java . util . Scanner ;  public class B194 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { long N = in . nextInt ( ) ; long gcd = gcd ( N + 1 , 4 * N ) ; long answer = 4 * N / gcd ; System . out . println ( answer + 1 ) ; } }  static long gcd ( long a , long b ) { return ( b == 0 ) ? a : gcd ( b , a % b ) ; }  }",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_415_A_469",
            "java_code": "import java . util . * ; public class mashmokh {   public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { int x = in . nextInt ( ) ; for ( int j = x - 1 ; j < n ; j ++ ) if ( a [ j ] == 0 ) a [ j ] = x ; } for ( int i : a ) System . out . print ( i + \" \" ) ; }  }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) buttons = list ( map ( int , input ( ) . split ( ) ) ) lights = [ 0 ] * nfor i in buttons : for j in range ( i - 1 , len ( lights ) ) : if lights [ j ] == 0 : lights [ j ] = ifor i in range ( len ( lights ) ) : print ( lights [ i ] , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4879_A_470",
            "java_code": "class GFG { static int countSum ( int N , int L , int R ) { if ( L > R ) { return 0 ; } if ( N == 1 ) { return R - L + 1 ; } if ( N > 1 ) { return ( N - 2 ) * ( R - L ) + 1 ; } return 0 ; } public static void main ( String [ ] args ) { int N = 4 , L = 4 , R = 6 ; System . out . print ( countSum ( N , L , R ) ) ; } }",
            "python_code": "def countSum ( N , L , R ) : NEWLINE INDENT if ( L > R ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT if ( N == 1 ) : NEWLINE INDENTINDENT return R - L + 1 ; NEWLINE DEDENT if ( N > 1 ) : NEWLINE INDENTINDENT return ( N - 2 ) * ( R - L ) + 1 ; NEWLINE DEDENT return 0 ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N , L , R = 4 , 4 , 6 ; NEWLINE print ( countSum ( N , L , R ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4649_A_471",
            "java_code": "import java . io . * ; class GFG { static int getResult ( int n ) { if ( ( n & 1 ) > 0 ) return 1 ; return - 1 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( getResult ( n ) ) ; } }",
            "python_code": "def getResult ( n ) : NEWLINE INDENT if n & 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return - 1 NEWLINE DEDENT n = 3 NEWLINE print ( getResult ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_383_A_472",
            "java_code": "import java . util . Scanner ;  public class C {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = input ( ) a = [ int ( x ) for x in a . split ( ) ] sum = 0 ans = 0 for i in range ( n ) : if a [ i ] == 1 : sum += 1 else : ans += sumprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3142_A_473",
            "java_code": "import java . util . * ; class GFG { static int minimumIncrease ( int a , int b , int c ) { int arr [ ] = { a , b , c } ; Arrays . sort ( arr ) ; if ( arr [ 0 ] + arr [ 1 ] >= arr [ 2 ] ) return 0 ; else return arr [ 2 ] - ( arr [ 0 ] + arr [ 1 ] ) ; } public static void main ( String [ ] args ) { int a = 3 , b = 5 , c = 10 ; System . out . println ( minimumIncrease ( a , b , c ) ) ; } }",
            "python_code": "def minimumIncrease ( a , b , c ) : NEWLINE INDENT arr = [ a , b , c ] NEWLINE arr . sort ( ) NEWLINE if arr [ 0 ] + arr [ 1 ] >= arr [ 2 ] : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT return arr [ 2 ] - ( arr [ 0 ] + arr [ 1 ] ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b , c = 3 , 5 , 10 NEWLINE print ( minimumIncrease ( a , b , c ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_208_A_474",
            "java_code": "import java . io . * ; import java . util . * ; import java . util . Scanner ; import java . util . Arrays ;  public class cas { public static void main ( String [ ] args ) {",
            "python_code": "Str = input ( ) NStr = Str . replace ( \"WUB\" , \" \" ) NStr1 = NStr . title ( ) NStr2 = NStr1 . replace ( \" \" , \"\" )  import reStr1 = re . sub ( '([A-Z])' , r' \\1' , NStr2 ) Str2 = Str1 [ 1 : ] . upper ( ) print ( Str2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_764_A_475",
            "java_code": "import java . util . * ; public class Taymyr_is_calling_you {  public static void main ( String [ ] args ) {",
            "python_code": "import mathn , m , z = map ( int , input ( ) . split ( ) ) print ( z // ( ( n * m ) // math . gcd ( n , m ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2369_A_476",
            "java_code": "import java . io . * ; class GFG { static void newvol ( double x ) { System . out . print ( \"percentage increase in the\" + \" volume of the sphere is \" + ( Math . pow ( x , 3 ) / 10000 + 3 * x + ( 3 * Math . pow ( x , 2 ) ) / 100 ) + \"%\" ) ; } public static void main ( String [ ] args ) { double x = 10 ; newvol ( x ) ; } }",
            "python_code": "def newvol ( x ) : NEWLINE INDENT print ( \"percentage increase in the\" \" volume of the sphere is \" , pow ( x , 3 ) / 10000 + 3 * x + ( 3 * pow ( x , 2 ) ) / 100 , \"%\" ) NEWLINE DEDENT x = 10.0 NEWLINE newvol ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3182_A_477",
            "java_code": "import java . io . * ; class GFG { static int seriesSum ( int n ) { return ( n * ( n + 1 ) * ( n + 2 ) ) / 6 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( seriesSum ( n ) ) ; } }",
            "python_code": "def seriesSum ( n ) : NEWLINE INDENT return int ( ( n * ( n + 1 ) * ( n + 2 ) ) / 6 ) NEWLINE DEDENT n = 4 NEWLINE print ( seriesSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_954_A_478",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) s = input ( ) a = list ( s ) i = 0 c = 0 while i < n - 1 : if a [ i ] == 'U' and a [ i + 1 ] == 'R' : c = c + 1 a [ i ] = 'D' a [ i + 1 ] = 'D' elif a [ i ] == 'R' and a [ i + 1 ] == 'U' : a [ i ] = 'D' a [ i + 1 ] = 'D' c = c + 1 i = i + 1 print ( n - c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1023_A_479",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a , b = [ * open ( 0 ) ] [ 1 : ] if '*' in a : x , y = a . split ( '*' ) r = b . startswith ( x ) and b [ len ( x ) : ] . endswith ( y ) else : r = a == bprint ( 'NYOE S' [ r : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_799_A_480",
            "java_code": "import java . util . * ; public class OPPJava {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , t = sc . nextInt ( ) , k = sc . nextInt ( ) , d = sc . nextInt ( ) ; System . out . println ( ( n - 1 ) / k * t > d ? \"YES\" : \"NO\" ) ; }  }",
            "python_code": "import sysinput = sys . stdin . readlineimport math  def inpit ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_347_A_481",
            "java_code": "import java . io . * ; class GFG { static float exponential ( int n , float x ) { float sum = 1 ; for ( int i = n - 1 ; i > 0 ; -- i ) sum = 1 + x * sum / i ; return sum ; } public static void main ( String [ ] args ) { int n = 10 ; float x = 1 ; System . out . println ( \"e^x = \" + exponential ( n , x ) ) ; } }",
            "python_code": "def exponential ( n , x ) : NEWLINE INDENT sum = 1.0 NEWLINE for i in range ( n , 0 , - 1 ) : NEWLINE INDENTINDENT sum = 1 + x * sum / i NEWLINE DEDENT print ( \"e^x =\" , sum ) NEWLINE DEDENT n = 10 NEWLINE x = 1.0 NEWLINE exponential ( n , x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1183_A_482",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001183A { static public void main ( final String [ ] args ) throws IOException { p001183A . _main ( args ) ; }",
            "python_code": "n = int ( input ( ) ) while sum ( [ int ( x ) for x in str ( n ) ] ) % 4 != 0 : n += 1 print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_246_A_483",
            "java_code": "import java . util . * ; public class BuggySorting {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) )  if n > 2 : for i in range ( n , 0 , - 1 ) : print ( i , end = ' ' ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1420_A_484",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {",
            "python_code": "for u in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE x = [ int ( w ) for w in input ( ) . split ( ) ] NEWLINE f = False NEWLINE for i in range ( n - 1 ) : if NEWLINE INDENT ( x [ i ] <= x [ i + 1 ] ) : f = True NEWLINE DEDENT break NEWLINE if ( f ) : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1775_A_485",
            "java_code": "import java . io . * ; class GFG { static float area ( float a , float b ) { if ( a < 0 || b < 0 ) return - 1 ; float A = a * b ; return A ; } public static void main ( String [ ] args ) { float a = 5 , b = 2 ; System . out . println ( area ( a , b ) ) ; } }",
            "python_code": "def area ( a , b ) : NEWLINE INDENT if ( a < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = a * b NEWLINE return A NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 5 NEWLINE b = 2 NEWLINE print ( area ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_918_B_486",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) d = { } for _ in range ( n ) : s = list ( input ( ) . split ( ) ) d [ s [ 1 ] ] = s [ 0 ] for _ in range ( m ) : x = list ( input ( ) . split ( ) ) print ( x [ 0 ] + \" \" + x [ 1 ] + \" #\" + d [ x [ 1 ] [ : - 1 ] ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_344_A_487",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ;  int g = 0 ; int prev = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { int m = in . nextInt ( ) ; if ( m != prev ) { g ++ ; prev = m ; } }  System . out . println ( g ) ; } }",
            "python_code": "n = int ( input ( ) ) c = 1 for i in range ( n ) : if i == 0 : new = input ( ) continue old = new new = input ( ) if old [ 1 ] == new [ 0 ] : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_827_A_488",
            "java_code": "class GFG { static float circlearea ( float R ) { if ( R < 0 ) return - 1 ; float a = ( float ) ( ( 3.14 * R * R ) / 4 ) ; return a ; } public static void main ( String [ ] args ) { float R = 2 ; System . out . println ( circlearea ( R ) ) ; } }",
            "python_code": "def circlearea ( R ) : NEWLINE INDENT if ( R < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT a = ( 3.14 * R * R ) / 4 ; NEWLINE return a ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT R = 2 ; NEWLINE print ( circlearea ( R ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4598_A_489",
            "java_code": "class GFG { static double PHI = 1.6180339 ; static int f [ ] = { 0 , 1 , 1 , 2 , 3 , 5 } ; static int fib ( int n ) { if ( n < 6 ) return f [ n ] ; int t = 5 ; int fn = 5 ; while ( t < n ) { fn = ( int ) Math . round ( fn * PHI ) ; t ++ ; } return fn ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( n + \"th Fibonacci Number = \" + fib ( n ) ) ; } }",
            "python_code": "PHI = 1.6180339 NEWLINE f = [ 0 , 1 , 1 , 2 , 3 , 5 ] NEWLINE def fib ( n ) : NEWLINE INDENT if n < 6 : NEWLINE INDENTINDENT return f [ n ] NEWLINE DEDENT t = 5 NEWLINE fn = 5 NEWLINE while t < n : NEWLINE INDENTINDENT fn = round ( fn * PHI ) NEWLINE t += 1 NEWLINE DEDENT return fn NEWLINE DEDENT n = 9 NEWLINE print ( n , \"th Fibonacci Number =\" , fib ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_122_B_490",
            "java_code": "import java . util . * ;  public class LuckySubstring_B {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) x1 , y1 = s . count ( \"7\" ) , s . count ( \"4\" ) if x1 == 0 and y1 == 0 : print ( \"-1\" )  elif x1 > y1 : print ( \"7\" ) else : print ( \"4\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_79_B_491",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . lang . reflect . Array ; import java . nio . Buffer ; import java . util . Arrays ; import java . util . HashSet ; import java . util . Set ; import java . util . StringTokenizer ;  public class ColoredFields {  public static int floorSearch ( int arr [ ] , int low , int high , int x ) {  if ( low > high ) return - 1 ; ",
            "python_code": "n , m , k , t = map ( int , input ( ) . split ( ) ) NEWLINE waste = [ tuple ( map ( int , input ( ) . split ( ) ) ) for _ in range ( k ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1085_B_492",
            "java_code": "import java . util . Scanner ; public class p1085B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , k = sc . nextInt ( ) , p = k - 1 ; while ( n % p > 0 && p > 0 ) p -- ; System . out . println ( n / p * k + p ) ; } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if n < k : print ( k + n ) else : ans = [ ] ; i = 1 while i * i <= n : if n % i == 0 and n % ( n // i ) == 0 : ans . append ( [ i , n // i ] ) i += 1 ans1 = [ ] for j in ans : if k > j [ 0 ] : ans1 . append ( k * j [ 1 ] + j [ 0 ] ) if k > j [ 1 ] : ans1 . append ( k * j [ 0 ] + j [ 1 ] ) print ( min ( ans1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5011_A_493",
            "java_code": "import java . io . * ; class GFG { float sum ( float n ) { if ( n < 2 ) return 1 ; else return 1 / n + ( sum ( n - 1 ) ) ; } public static void main ( String args [ ] ) { GFG g = new GFG ( ) ; System . out . println ( g . sum ( 8 ) ) ; System . out . print ( g . sum ( 10 ) ) ; } }",
            "python_code": "def sum ( n ) : NEWLINE INDENT if n < 2 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 1 / n + ( sum ( n - 1 ) ) NEWLINE DEDENT DEDENT print ( sum ( 8 ) ) NEWLINE print ( sum ( 10 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3163_A_494",
            "java_code": "import java . util . Arrays ; class GFG { static int solve ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int a = 0 , b = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 != 0 ) a = a * 10 + arr [ i ] ; else b = b * 10 + arr [ i ] ; } return a + b ; } public static void main ( String [ ] args ) { int arr [ ] = { 6 , 8 , 4 , 5 , 2 , 3 } ; int n = arr . length ; System . out . print ( \"Sum is \" + solve ( arr , n ) ) ; } }",
            "python_code": "def solve ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE a = 0 ; b = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( i % 2 != 0 ) : NEWLINE INDENTINDENTINDENT a = a * 10 + arr [ i ] NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT b = b * 10 + arr [ i ] NEWLINE DEDENT DEDENT return a + b NEWLINE DEDENT arr = [ 6 , 8 , 4 , 5 , 2 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( \"Sum is \" , solve ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_770_A_495",
            "java_code": "import java . util . * ;  public class AWords {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int length = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; String password = \"\" ;  for ( int i = 0 ; i < length ; i ++ ) { password += ( char ) ( ( int ) 'a' + i % k ) ; }  System . out . println ( password ) ; } }",
            "python_code": "m , n = map ( int , input ( ) . split ( ) ) print ( ( \"abcdefghijklmnopqrstuvwxyz\" [ : n ] * m ) [ : m ] )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_332_A_496",
            "java_code": "import java . io . * ; class GFG { public static int countP ( int n , int k ) { if ( n == 0 || k == 0 || k > n ) return 0 ; if ( k == 1 || k == n ) return 1 ; return ( k * countP ( n - 1 , k ) + countP ( n - 1 , k - 1 ) ) ; } public static void main ( String args [ ] ) { System . out . println ( countP ( 3 , 2 ) ) ; } }",
            "python_code": "def countP ( n , k ) : NEWLINE INDENT if ( n == 0 or k == 0 or k > n ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT if ( k == 1 or k == n ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return ( k * countP ( n - 1 , k ) + countP ( n - 1 , k - 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( countP ( 3 , 2 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_489_A_497",
            "java_code": "import java . util . Scanner ; public class Main {  public static void main ( String [ ] args ) { Scanner SC = new Scanner ( System . in ) ; int N , Cnt = 0 , A [ ] , B [ ] [ ] , Min , ID , Tmp ; N = SC . nextInt ( ) ; A = new int [ N ] ; B = new int [ 2 ] [ N ] ; for ( int i = 0 ; i < N ; i ++ ) A [ i ] = SC . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) ) x = list ( map ( int , input ( ) . split ( ) ) ) z = [ ] c = 0 for i in range ( n ) : a , b = i , x [ i ] for j in range ( i , n ) : if x [ j ] < b : a = j b = x [ j ] x [ i ] , x [ a ] = x [ a ] , x [ i ] if a != i : c += 1 z . append ( [ i , a ] ) print ( c ) for i in z : for j in i : print ( j , end = \" \" ) print ( \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_964_A_498",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; System . out . println ( ( N / 2 ) + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( n // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_770_B_499",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "x = input ( ) n = len ( x ) if n == 1 : print ( x ) exit ( 0 ) ans = \"\" s = 0 ps = 0 pn = \"\" for i in range ( n ) : ts = ps + int ( x [ i ] ) - 1 + 9 * ( n - i - 1 ) if ts >= s : ans = pn + str ( int ( x [ i ] ) - 1 ) + \"9\" * ( n - i - 1 ) s = ts ps += int ( x [ i ] ) pn += x [ i ] if ps >= s : ans = pnprint ( int ( ans ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_854_B_500",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if k == n or k == 0 : print ( 0 , 0 ) elif k <= ( n ) // 3 : print ( 1 , k * 2 ) else : print ( 1 , n - k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1811_A_501",
            "java_code": "class GFG { static void findNumberOfDigits ( long n , int base ) { int dig = ( int ) ( Math . floor ( Math . log ( n ) / Math . log ( base ) ) + 1 ) ; System . out . println ( \"The Number of digits of Number \" + n + \" in base \" + base + \" is \" + dig ) ; } public static void main ( String [ ] args ) { long n = 1446 ; int base = 7 ; findNumberOfDigits ( n , base ) ; } }",
            "python_code": "import math NEWLINE def findNumberOfDigits ( n , base ) : NEWLINE INDENT dig = ( math . floor ( math . log ( n ) / math . log ( base ) ) + 1 ) NEWLINE print ( \"The Number of digits of\" \" Number {} in base {} is {}\" . format ( n , base , dig ) ) NEWLINE DEDENT n = 1446 NEWLINE base = 7 NEWLINE findNumberOfDigits ( n , base ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4489_A_502",
            "java_code": "class GFG { public static int countunsetbits ( int n ) { int count = 0 ; for ( int x = 1 ; x <= n ; x = x << 1 ) if ( ( x & n ) == 0 ) count ++ ; return count ; } public static void main ( String [ ] args ) { int n = 17 ; System . out . println ( countunsetbits ( n ) ) ; } }",
            "python_code": "def countunsetbits ( n ) : NEWLINE INDENT count = 0 NEWLINE x = 1 NEWLINE while ( x < n + 1 ) : NEWLINE INDENTINDENT if ( ( x & n ) == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT x = x << 1 NEWLINE DEDENT return count NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 17 NEWLINE print ( countunsetbits ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2442_A_503",
            "java_code": "class GFG { static void bin ( Integer n ) { if ( n > 1 ) bin ( n > > 1 ) ; System . out . printf ( \"%d\" , n & 1 ) ; } public static void main ( String [ ] args ) { bin ( 131 ) ; System . out . printf ( \"\\n\" ) ; bin ( 3 ) ; } }",
            "python_code": "def bin ( n ) : NEWLINE INDENT if ( n > 1 ) : NEWLINE INDENTINDENT bin ( n >> 1 ) NEWLINE DEDENT print ( n & 1 , end = \"\" ) NEWLINE DEDENT bin ( 131 ) NEWLINE print ( ) NEWLINE bin ( 3 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_915_A_504",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] ar = new int [ n ] ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; if ( k % ar [ i ] == 0 ) { min = Math . min ( min , k / ar [ i ] ) ; } } System . out . println ( min ) ;",
            "python_code": "import math   def func ( num_buckets , length , buckets ) : buckets . sort ( reverse = True ) for i in range ( num_buckets ) : if ( length % buckets [ i ] == 0 ) : return ( int ( length / buckets [ i ] ) ) return None  num_buckets , length = list ( map ( int , input ( ) . split ( ) ) ) buckets = list ( map ( int , input ( ) . split ( ) ) )  hours = func ( num_buckets , length , buckets )  print ( hours )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3593_A_505",
            "java_code": "class GFG { public static int countPairs ( int n ) { if ( n == 2 ) return 4 ; int num = ( ( n / 2 ) + 1 ) ; int max = n % num ; int count = n - max ; return count ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( countPairs ( n ) ) ; } }",
            "python_code": "def countPairs ( n ) : NEWLINE INDENT if ( n == 2 ) : NEWLINE INDENTINDENT return 4 NEWLINE DEDENT num = ( ( n // 2 ) + 1 ) ; NEWLINE max = n % num ; NEWLINE count = n - max ; NEWLINE return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE DEDENT print ( countPairs ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2624_A_506",
            "java_code": "import java . io . * ; class GFG { static int findNthTerm ( int x , int y , int n ) { int [ ] f = new int [ 6 ] ; f [ 0 ] = x ; f [ 1 ] = y ; for ( int i = 2 ; i <= 5 ; i ++ ) f [ i ] = f [ i - 1 ] - f [ i - 2 ] ; return f [ n % 6 ] ; } public static void main ( String args [ ] ) { int x = 2 , y = 3 , n = 3 ; System . out . println ( findNthTerm ( x , y , n ) ) ; } }",
            "python_code": "def findNthTerm ( x , y , n ) : NEWLINE INDENT f = [ 0 ] * 6 NEWLINE f [ 0 ] = x NEWLINE f [ 1 ] = y NEWLINE for i in range ( 2 , 6 ) : NEWLINE INDENTINDENT f [ i ] = f [ i - 1 ] - f [ i - 2 ] NEWLINE DEDENT return f [ n % 6 ] NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT x , y , n = 2 , 3 , 3 NEWLINE print ( findNthTerm ( x , y , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1157_B_507",
            "java_code": "import javax . print . DocFlavor ; import java . io . * ; import java . net . Inet4Address ; import java . sql . ClientInfoStatus ; import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) A = [ int ( d ) for d in input ( ) ] f = [ int ( x ) for x in input ( ) . split ( ) ] flag = Falsefor i in range ( n ) : d = A [ i ] x = f [ A [ i ] - 1 ] if x > d : flag = True A [ i ] = x elif x == d : continue else : if flag : breakA = list ( map ( str , A ) ) print ( '' . join ( A ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2881_A_508",
            "java_code": "class GFG { static int toDecimal ( String binary , int i ) { int n = binary . length ( ) ; if ( i == n - 1 ) return binary . charAt ( i ) - '0' ; return ( ( binary . charAt ( i ) - '0' ) << ( n - i - 1 ) ) + toDecimal ( binary , i + 1 ) ; } public static void main ( String [ ] args ) { String binary = \"1010\" ; int i = 0 ; System . out . println ( toDecimal ( binary , i ) ) ; } }",
            "python_code": "def toDecimal ( binary , i = 0 ) : NEWLINE INDENT n = len ( binary ) NEWLINE if ( i == n - 1 ) : NEWLINE INDENTINDENT return int ( binary [ i ] ) - 0 NEWLINE DEDENT return ( ( ( int ( binary [ i ] ) - 0 ) << ( n - i - 1 ) ) + toDecimal ( binary , i + 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT binary = \"1010\" NEWLINE print ( toDecimal ( binary ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_12_B_509",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { static final int N = 15 ; static String str1 , str2 ; static Character [ ] arr = new Character [ N ] ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; static BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "num = input ( ) given = input ( )  num = \"\" . join ( sorted ( num ) )  idx = - 1 for i in range ( len ( num ) ) : if int ( num [ i ] ) > 0 : idx = i break  if idx == - 1 : solution = \"0\" else : solution = num [ idx ] + num [ : idx ] + num [ idx + 1 : ]  print ( \"WRONG_ANSWER\" if solution != given else \"OK\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1345_B_510",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "tests = [ ] maxh = 0 for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) if n > maxh : maxh = n tests . append ( n ) cards = 2 h = [ 2 ] x = 0 while cards <= maxh : x += 1 cards += 3 * x + 2 h . append ( cards ) for t in tests : ans = 0 while t >= h [ 0 ] : for b in h [ : : - 1 ] : if b <= t : ans += 1 t -= b break print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_840_A_511",
            "java_code": "import java . io . * ; class GFG { static int angle ( int n ) { return 2 * n ; } public static void main ( String [ ] args ) { int n = 30 ; System . out . println ( angle ( n ) ) ; } }",
            "python_code": "def angle ( n ) : NEWLINE INDENT return 2 * n NEWLINE DEDENT n = 30 NEWLINE print ( angle ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_344_A_512",
            "java_code": "class GFG { static int power ( int x , int y ) { if ( y == 0 ) return 1 ; else if ( y % 2 == 0 ) return power ( x , y / 2 ) * power ( x , y / 2 ) ; else return x * power ( x , y / 2 ) * power ( x , y / 2 ) ; } public static void main ( String [ ] args ) { int x = 2 ; int y = 3 ; System . out . printf ( \"%d\" , power ( x , y ) ) ; } }",
            "python_code": "def power ( x , y ) : NEWLINE INDENT if ( y == 0 ) : return 1 NEWLINE elif ( int ( y % 2 ) == 0 ) : NEWLINE INDENTINDENT return ( power ( x , int ( y / 2 ) ) * power ( x , int ( y / 2 ) ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( x * power ( x , int ( y / 2 ) ) * power ( x , int ( y / 2 ) ) ) NEWLINE DEDENT DEDENT x = 2 ; y = 3 NEWLINE print ( power ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_918_A_513",
            "java_code": "import java . util . * ; public class contest16 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "a , b = 1 , 1 k = int ( input ( ) ) n = 1 while n <= k : if n == b : print ( \"O\" , end = \"\" ) a , b = b , a + b else : print ( \"o\" , end = \"\" ) n = n + 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_357_B_514",
            "java_code": "import java . util . * ; public class CF_357B {  public static void main ( String [ ] args ) {",
            "python_code": "import sysimport mathclass DictList ( dict ) : def __setitem__ ( self , key , value ) : try : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5169_A_515",
            "java_code": "class GFG { static void myCopy ( char s1 [ ] , char s2 [ ] , int index ) { s2 [ index ] = s1 [ index ] ; if ( index == s1 . length - 1 ) { return ; } myCopy ( s1 , s2 , index + 1 ) ; } public static void main ( String [ ] args ) { char s1 [ ] = \"GEEKSFORGEEKS\" . toCharArray ( ) ; char s2 [ ] = new char [ s1 . length ] ; int index = 0 ; myCopy ( s1 , s2 , index ) ; System . out . println ( String . valueOf ( s2 ) ) ; } }",
            "python_code": "def myCopy ( s1 , s2 , index ) : NEWLINE INDENT s2 [ index ] = s1 [ index ] ; NEWLINE if ( index == len ( s1 ) - 1 ) : NEWLINE INDENTINDENT return ; NEWLINE DEDENT myCopy ( s1 , s2 , index + 1 ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT s1 = \"GEEKSFORGEEKS\" ; NEWLINE s2 = [ 0 ] * ( len ( s1 ) ) ; NEWLINE index = 0 ; NEWLINE myCopy ( s1 , s2 , index ) ; NEWLINE print ( \"\" . join ( s2 ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_A_516",
            "java_code": "import java . io . * ; import java . util . * ;  public class GFG { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int y = ( int ) ( ( double ) Math . log ( N ) / Math . log ( 2 ) ) ; System . out . println ( y + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) for i in range ( 1 , 35 ) : if 2 ** i - 1 >= n : print ( i ) ; break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_376_A_517",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Ideone { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "s = input ( ) . split ( \"^\" ) l = s [ 0 ] r = s [ 1 ]  l = l [ : : - 1 ] l_v = 0 r_v = 0  for index in range ( 0 , len ( l ) ) : if l [ index ] != \"=\" : l_v += int ( l [ index ] ) * ( index + 1 )  for index in range ( 0 , len ( r ) ) : if r [ index ] != \"=\" : r_v += int ( r [ index ] ) * ( index + 1 )   if l_v == r_v : print ( \"balance\" ) elif l_v > r_v : print ( \"left\" ) else : print ( \"right\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2914_A_518",
            "java_code": "import java . io . * ; class GFG { static int Nth_Term ( int n ) { return ( int ) ( 3 * Math . pow ( n , 2 ) - n + 2 ) / ( 2 ) ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . println ( Nth_Term ( N ) ) ; } }",
            "python_code": "def Nth_Term ( n ) : NEWLINE INDENT return ( 3 * pow ( n , 2 ) - n + 2 ) // ( 2 ) NEWLINE DEDENT N = 5 NEWLINE print ( Nth_Term ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4478_A_519",
            "java_code": "import java . io . * ; class GFG { static int findCullen ( int n ) { return ( 1 << n ) * n + 1 ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( findCullen ( n ) ) ; } }",
            "python_code": "def findCullen ( n ) : NEWLINE INDENT return ( 1 << n ) * n + 1 NEWLINE DEDENT n = 2 NEWLINE print ( findCullen ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_38_A_520",
            "java_code": "import java . util . Scanner ;  public class pROBLEM39 {  public static void main ( String [ ] args ) {",
            "python_code": "b = 0 w = int ( input ( ) ) maxyear = 0 n = list ( map ( int , input ( ) . split ( ) ) ) [ : w ] a , b = map ( int , input ( ) . split ( ) ) d = ( b - 1 ) for j in range ( ( a - 1 ) , d ) : maxyear += n [ j ] print ( maxyear ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2797_A_521",
            "java_code": "import java . util . * ; class GFG { static int countDigit ( long n ) { if ( n == 0 ) return 0 ; return 1 + countDigit ( n / 10 ) ; } public static void main ( String [ ] args ) { long n = 345289467 ; System . out . print ( \"Number of digits : \" + countDigit ( n ) ) ; } }",
            "python_code": "def countDigit ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return 1 + countDigit ( n // 10 ) NEWLINE DEDENT n = 345289467 NEWLINE print ( \"Number of digits : % d\" % ( countDigit ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_451_A_522",
            "java_code": "import java . util . Scanner ; public class GameOfSticks { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int total = n * m ; int res = - 1 ; int inter = total ; while ( inter != 0 ) { res ++ ; n -- ; m -- ; inter = n * m ; } if ( res % 2 != 0 ) { System . out . println ( \"Malvika\" ) ; } else { System . out . println ( \"Akshat\" ) ; } } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) points = 0 if n < m : points = nelse : points = mif ( points % 2 ) != 0 : print ( \"Akshat\" ) else : print ( \"Malvika\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1505_B_523",
            "java_code": "import java . util . Scanner ; public class DMCA { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int sum = 0 ; while ( n / 10 > 0 ) { while ( n > 0 ) { int dig = n % 10 ; sum += dig ; n /= 10 ; } n = sum ; sum = 0 ; } System . out . println ( n ) ; } }",
            "python_code": "def digital_root ( n ) : NEWLINE INDENT x = sum ( int ( digit ) for digit in str ( n ) ) NEWLINE if x < 10 : NEWLINE INDENTINDENT return x NEWLINE DEDENT else : NEWLINE INDENTINDENT return digital_root ( x ) NEWLINE DEDENT DEDENT def main ( ) : NEWLINE INDENT a = int ( input ( ) ) NEWLINE print ( digital_root ( a ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT main ( ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_274_A_524",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main {  private static int MAX = Integer . MAX_VALUE ; private static int MIN = Integer . MIN_VALUE ; private static int MOD = 1000000007 ; static FastScanner sc = new FastScanner ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from sys import stdin , stdoutfrom itertools import accumulatenmbr = lambda : int ( stdin . readline ( ) ) lst = lambda : list ( map ( int , stdin . readline ( ) . split ( ) ) ) for _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5068_A_525",
            "java_code": "class GFG { static int countCubes ( int a , int b ) { return ( int ) ( Math . floor ( Math . cbrt ( b ) ) - Math . ceil ( Math . cbrt ( a ) ) + 1 ) ; } public static void main ( String [ ] args ) { int a = 7 , b = 28 ; System . out . print ( \"Count of cubes is \" + countCubes ( a , b ) ) ; } }",
            "python_code": "from math import * NEWLINE def countCubes ( a , b ) : NEWLINE INDENT return ( floor ( b ** ( 1. / 3. ) ) - ceil ( a ** ( 1. / 3. ) ) + 1 ) NEWLINE DEDENT a = 7 NEWLINE b = 28 NEWLINE print ( \"Count of cubes is\" , countCubes ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_912_B_526",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sys n , k = map ( int , input ( ) . split ( ) ) if k == 1 : print ( n ) sys . exit ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_788_A_527",
            "java_code": "import java . io . * ; class GFG { static int findCount ( int d ) { return 9 * ( ( int ) ( Math . pow ( 10 , d - 1 ) ) - ( int ) ( Math . pow ( 9 , d - 1 ) ) ) ; } public static void main ( String args [ ] ) { int d = 1 ; System . out . println ( findCount ( d ) ) ; d = 2 ; System . out . println ( findCount ( d ) ) ; d = 4 ; System . out . println ( findCount ( d ) ) ; } }",
            "python_code": "import math NEWLINE def findCount ( d ) : NEWLINE INDENT return 9 * ( ( int ) ( math . pow ( 10 , d - 1 ) ) - ( int ) ( math . pow ( 9 , d - 1 ) ) ) ; NEWLINE DEDENT d = 1 NEWLINE print ( findCount ( d ) ) NEWLINE d = 2 NEWLINE print ( findCount ( d ) ) NEWLINE d = 4 NEWLINE print ( findCount ( d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_553_B_528",
            "java_code": "import java . io . * ; import java . util . * ;  public class cf553B {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = [ int ( x ) for x in input ( ) . split ( ) ] F = [ 1 , 1 ] for i in range ( 2 , n ) : F . append ( F [ - 1 ] + F [ - 2 ] ) perm = [ i + 1 for i in range ( n ) ] for i in range ( n ) : if m > F [ n - 1 - i ] : m -= F [ n - 1 - i ] perm [ i ] , perm [ i + 1 ] = perm [ i + 1 ] , perm [ i ] for k in perm : print ( k , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4535_A_529",
            "java_code": "class GFG { static int a , b , c ; static void swapThree ( ) { a = a + b + c ; b = a - ( b + c ) ; c = a - ( b + c ) ; a = a - ( b + c ) ; } public static void main ( String [ ] args ) { a = 10 ; b = 20 ; c = 30 ; System . out . println ( \"Before swapping a = \" + a + \", b = \" + b + \", c = \" + c ) ; swapThree ( ) ; System . out . println ( \"After swapping a = \" + a + \", b = \" + b + \", c = \" + c ) ; } }",
            "python_code": "def swapThree ( a , b , c ) : NEWLINE INDENT a = a + b + c NEWLINE b = a - ( b + c ) NEWLINE c = a - ( b + c ) NEWLINE a = a - ( b + c ) NEWLINE print ( \"After swapping a =\" , a , \", b =\" , b , \", c =\" , c ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 10 NEWLINE b = 20 NEWLINE c = 30 NEWLINE print ( \"Before swapping a =\" , a , \", b =\" , b , \", c =\" , c ) NEWLINE swapThree ( a , b , c ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4616_A_530",
            "java_code": "class GFG { static double sum ( double a , double b , double c , double d , double x ) { double ans = ( x * ( a + b ) * ( c - d ) ) / ( ( a * d ) - ( b * c ) ) ; return ans ; } public static void main ( String [ ] args ) { double a = 1 , b = 2 , c = 9 , d = 13 , x = 5 ; System . out . println ( sum ( a , b , c , d , x ) ) ; } }",
            "python_code": "def sum ( a , b , c , d , x ) : NEWLINE INDENT ans = ( ( x * ( a + b ) * ( c - d ) ) / ( ( a * d ) - ( b * c ) ) ) ; NEWLINE return ans ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a , b , c , d , x = 1 , 2 , 9 , 13 , 5 ; NEWLINE print ( sum ( a , b , c , d , x ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1393_A_531",
            "java_code": "import java . util . Scanner ; public class A1393 { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int N = in . nextInt ( ) ; int answer = N / 2 + 1 ; System . out . println ( answer ) ; } } }",
            "python_code": "''' 1393a Rainbow Dash, Fluttershy and Chess coloring ''' NEWLINE for _ in range ( int ( input ( ) ) ) : NEWLINE INDENT print ( int ( input ( ) ) // 2 + 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_330_B_532",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "R = lambda : map ( int , input ( ) . split ( ) ) n , m = R ( ) a = set ( range ( 1 , n + 1 ) ) for i in range ( m ) : a = a - set ( R ( ) ) a = list ( a ) [ 0 ] print ( n - 1 ) for i in range ( 1 , n + 1 ) : if i != a : print ( a , i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_374_B_533",
            "java_code": "import java . io . * ; import java . util . * ; public final class code",
            "python_code": "a = input ( ) n = len ( a ) ans = 1 c = 0 for i in range ( n - 1 ) : if int ( a [ i + 1 ] ) + int ( a [ i ] ) == 9 : c += 1 else : if c % 2 == 0 and c != 0 : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_459_A_534",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "x1 , y1 , x2 , y2 = map ( int , input ( ) . split ( ) )  if x1 == x2 : x3 = x1 + abs ( y2 - y1 ) x4 = x3 y3 = y1 y4 = y2 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1296_B_535",
            "java_code": "import java . util . * ; public class foodbying { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 1 ; i <= t ; i ++ ) { int s = sc . nextInt ( ) ; int spent ; int total = 0 ; while ( s != 0 ) { if ( s < 10 ) { total += s ; s = 0 ; } else { spent = s - s % 10 ; total += spent ; s = s % 10 + spent / 10 ; } } System . out . println ( total ) ; } } }",
            "python_code": "from sys import stdin , stdout  def main ( ) : for _ in range ( int ( stdin . readline ( ) ) ) : s = int ( stdin . readline ( ) ) x = 0 while s >= 10 : q = s // 10 r = s % 10 s = q + r x += q * 10 x += s stdout . write ( str ( x ) + '\\n' )  if __name__ == \"__main__\" : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_349_B_536",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ; public class Main { static InputReader sc ; static PrintWriter pw ; public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; sc = new InputReader ( inputStream ) ; pw = new PrintWriter ( outputStream ) ; solve ( ) ; pw . close ( ) ; }",
            "python_code": "\"\"\"Code of Ayush TiwariCodeforces: servermonkCodechef: ayush572000\"\"\" NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3100_A_537",
            "java_code": "class GFG { static int numLen ( int K ) { if ( K % 2 == 0 || K % 5 == 0 ) { return - 1 ; } int number = 0 ; int len = 1 ; for ( len = 1 ; len <= K ; len ++ ) { number = number * 10 + 1 ; if ( ( number % K == 0 ) ) { return len ; } } return - 1 ; } public static void main ( String [ ] args ) { int K = 7 ; System . out . println ( numLen ( K ) ) ; } }",
            "python_code": "def numLen ( K ) : NEWLINE INDENT if ( K % 2 == 0 or K % 5 == 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT number = 0 ; NEWLINE len = 1 ; NEWLINE for len in range ( 1 , K + 1 ) : NEWLINE INDENTINDENT number = number * 10 + 1 ; NEWLINE if ( ( number % K == 0 ) ) : NEWLINE INDENTINDENTINDENT return len ; NEWLINE DEDENT DEDENT return - 1 ; NEWLINE DEDENT K = 7 ; NEWLINE print ( numLen ( K ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1657_A_538",
            "java_code": "class GFG { static int minOperations ( int A , int B ) { if ( A > B ) { A = A + B ; B = A - B ; A = A - B ; } B = B / __gcd ( A , B ) ; return B - 1 ; } static int __gcd ( int a , int b ) { return b == 0 ? a : __gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int A = 7 , B = 15 ; System . out . print ( minOperations ( A , B ) + \"\\n\" ) ; } }",
            "python_code": "import math NEWLINE def minOperations ( A , B ) : NEWLINE INDENT if ( A > B ) : NEWLINE INDENTINDENT swap ( A , B ) NEWLINE DEDENT B = B // math . gcd ( A , B ) ; NEWLINE return B - 1 NEWLINE DEDENT A = 7 NEWLINE B = 15 NEWLINE print ( minOperations ( A , B ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_B_539",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) res = 0 for a in range ( 1 , n ) : for b in range ( a + 1 , n + 1 ) : c = a ^ b if c >= b and c <= n and ( a + b > c ) and ( a + c > b ) and ( b + c > a ) and ( a ^ b ^ c == 0 ) : res += 1 print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1148_A_540",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) print ( 2 * min ( a , b ) + 2 * c + ( 0 if a == b else 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1095_A_541",
            "java_code": "import java . util . * ; class solution { static int countNumbers ( int N ) { return ( int ) Math . sqrt ( N ) - 1 ; } public static void main ( String args [ ] ) { int N = 36 ; System . out . println ( countNumbers ( N ) ) ; } }",
            "python_code": "import math NEWLINE def countNumbers ( N ) : NEWLINE INDENT return int ( math . sqrt ( N ) ) - 1 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 36 NEWLINE print ( countNumbers ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_545_B_542",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class B545 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_A_543",
            "java_code": "import java . util . * ;  public class CodeForces1037A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; System . out . println ( ( long ) ( Math . log ( n ) / Math . log ( 2 ) ) + 1 ) ; } }",
            "python_code": "t = int ( input ( ) ) i = 1 k = 0 x = 0 while x < t : x = x + i i = i * 2 k = k + 1 print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2434_A_544",
            "java_code": "import java . io . * ; class GFG { static int countDivisibles ( int A , int B , int M ) { int counter = 0 ; for ( int i = A ; i <= B ; i ++ ) if ( i % M == 0 ) counter ++ ; return counter ; } public static void main ( String [ ] args ) { int A = 30 , B = 100 , M = 30 ; System . out . println ( countDivisibles ( A , B , M ) ) ; } }",
            "python_code": "def countDivisibles ( A , B , M ) : NEWLINE INDENT counter = 0 ; NEWLINE for i in range ( A , B ) : NEWLINE INDENTINDENT if ( i % M == 0 ) : NEWLINE INDENTINDENTINDENT counter = counter + 1 NEWLINE DEDENT DEDENT return counter NEWLINE DEDENT A = 30 NEWLINE B = 100 NEWLINE M = 30 NEWLINE print ( countDivisibles ( A , B , M ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1922_A_545",
            "java_code": "import java . io . * ; class GFG { static int getRemainder ( int num , int divisor ) { return ( num - divisor * ( num / divisor ) ) ; } public static void main ( String [ ] args ) { System . out . println ( getRemainder ( 100 , 7 ) ) ; } }",
            "python_code": "def getRemainder ( num , divisor ) : NEWLINE INDENT return ( num - divisor * ( num // divisor ) ) NEWLINE DEDENT num = 100 NEWLINE divisor = 7 NEWLINE print ( getRemainder ( num , divisor ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_577_A_546",
            "java_code": "import java . util . Scanner ;   public class MutliTable { public static void main ( String [ ] args ) { Scanner S = new Scanner ( System . in ) ; int table = S . nextInt ( ) ; int find = S . nextInt ( ) ; int answer = 0 ; for ( int x = 1 ; x <= table ; x ++ ) { if ( find % x == 0 && find / x <= table ) answer ++ ; } System . out . print ( answer ) ; } }",
            "python_code": "n , x = map ( int , input ( ) . split ( ) ) count = 0 for i in range ( 1 , n + 1 ) : if x % i == 0 and x // i <= n and i <= n : count = count + 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4408_A_547",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { static int sum_of_series ( int n ) { int result = 0 ; if ( n % 2 == 0 ) { result = - ( n * ( n + 1 ) ) / 2 ; } else { result = ( n * ( n + 1 ) ) / 2 ; } return result ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . println ( sum_of_series ( n ) ) ; n = 10 ; System . out . println ( sum_of_series ( n ) ) ; } }",
            "python_code": "def sum_of_series ( n ) : NEWLINE INDENT result = 0 NEWLINE if ( n % 2 == 0 ) : NEWLINE INDENTINDENT result = - ( n * ( n + 1 ) ) // 2 NEWLINE DEDENT else : NEWLINE INDENTINDENT result = ( n * ( n + 1 ) ) // 2 NEWLINE DEDENT return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( sum_of_series ( n ) ) NEWLINE n = 10 NEWLINE print ( sum_of_series ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4060_A_548",
            "java_code": "class GFG { static int sum ( int k , int n ) { int sum = ( int ) ( Math . pow ( k , n + 1 ) - Math . pow ( k - 1 , n + 1 ) ) ; return sum ; } public static void main ( String args [ ] ) { int n = 3 ; int K = 3 ; System . out . print ( sum ( K , n ) ) ; } }",
            "python_code": "def sum ( k , n ) : NEWLINE INDENT sum = ( pow ( k , n + 1 ) - pow ( k - 1 , n + 1 ) ) ; NEWLINE return sum ; NEWLINE DEDENT n = 3 ; NEWLINE K = 3 ; NEWLINE print ( sum ( K , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2637_A_549",
            "java_code": "class GFG { public static int nthTerm ( int N ) { int nth = 0 ; nth = ( N * N * ( N + 1 ) ) / 2 ; return nth ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT nth = 0 NEWLINE nth = ( N * N * ( N + 1 ) ) // 2 NEWLINE return nth NEWLINE DEDENT N = 5 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_62_B_550",
            "java_code": "import java . util . * ; import java . io . * ; ",
            "python_code": "from bisect import bisect_leftn , k = map ( int , input ( ) . split ( ) ) NEWLINE q = \"abcdefghijklmnopqrstuvwxyz\" NEWLINE a = { i : [ ] for i in q }  for key , value in enumerate ( input ( ) ) : a [ value ] . append ( key ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5125_A_551",
            "java_code": "class GFG { static int min_elimination ( int n , int arr [ ] ) { int countOdd = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] % 2 == 1 ) countOdd ++ ; return Math . min ( countOdd , n - countOdd ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 7 , 9 } ; int n = arr . length ; System . out . println ( min_elimination ( n , arr ) ) ; } }",
            "python_code": "def min_elimination ( n , arr ) : NEWLINE INDENT countOdd = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 ) : NEWLINE INDENTINDENTINDENT countOdd += 1 NEWLINE DEDENT DEDENT return min ( countOdd , n - countOdd ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 1 , 2 , 3 , 7 , 9 ] NEWLINE n = len ( arr ) NEWLINE print ( min_elimination ( n , arr ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1208_A_552",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class XorNiacci { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { ",
            "python_code": "for i in range ( int ( input ( ) ) ) : a , b , n = map ( int , input ( ) . split ( ' ' ) ) g = [ a , b , a ^ b ] print ( g [ n % 3 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5129_A_553",
            "java_code": "import java . io . * ; import java . lang . * ; class GFG { public static double sumOfSeries ( double num ) { double res = 0 , fact = 1 ; for ( int i = 1 ; i <= num ; i ++ ) { fact = fact * i ; res = res + ( i / fact ) ; } return ( res ) ; } public static void main ( String [ ] args ) { double n = 5 ; System . out . println ( \"Sum: \" + sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( num ) : NEWLINE INDENT res = 0 NEWLINE fact = 1 NEWLINE for i in range ( 1 , num + 1 ) : NEWLINE INDENTINDENT fact *= i NEWLINE res = res + ( i / fact ) NEWLINE DEDENT return res NEWLINE DEDENT n = 5 NEWLINE print ( \"Sum: \" , sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_758_B_554",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) throws Exception { char [ ] garland = in . readLine ( ) . toCharArray ( ) ;",
            "python_code": "s = input ( ) t = [ 0 ] * 4 d = { } for i , c in enumerate ( s ) : if c == \"!\" : t [ i % 4 ] += 1 else : d [ c ] = i % 4 for c in \"RBYG\" : print ( t [ d [ c ] ] , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4194_A_555",
            "java_code": "class GFG { static void findPoint ( int x1 , int y1 , int x2 , int y2 ) { System . out . println ( \"(\" + ( int ) ( 2 * x2 - x1 ) + \",\" + ( int ) ( 2 * y2 - y1 ) + \" )\" ) ; } public static void main ( String args [ ] ) { int x1 = 0 , y1 = 0 , x2 = 1 , y2 = 1 ; findPoint ( x1 , y1 , x2 , y2 ) ; } }",
            "python_code": "def findPoint ( x1 , y1 , x2 , y2 ) : NEWLINE INDENT print ( \"(\" , 2 * x2 - x1 , \",\" , 2 * y2 - y1 , \")\" ) ; NEWLINE DEDENT x1 = 0 ; NEWLINE y1 = 0 ; NEWLINE x2 = 1 ; NEWLINE y2 = 1 ; NEWLINE findPoint ( x1 , y1 , x2 , y2 ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_96_A_556",
            "java_code": "import java . util . Scanner ; public class FootBall { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . next ( ) ; checkSituation ( str ) ; sc . close ( ) ; } private static void checkSituation ( String str ) { if ( str . contains ( \"0000000\" ) || str . contains ( \"1111111\" ) ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "pos = input ( ) NEWLINE if pos . find ( \"0000000\" ) != - 1 or pos . find ( \"1111111\" ) != - 1 : NEWLINE INDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_397_A_557",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;",
            "python_code": "n = int ( input ( ) ) l = [ ] q = [ 0 ] * 100 p = list ( map ( int , input ( ) . split ( ) ) ) l . append ( p ) for i in range ( n - 1 ) : p = list ( map ( int , input ( ) . split ( ) ) ) l . append ( p ) for k in range ( p [ 0 ] , p [ 1 ] ) : q [ k ] = 1 r = 0 for i in range ( l [ 0 ] [ 0 ] , l [ 0 ] [ 1 ] ) : if ( q [ i ] == 0 ) : r = r + 1 print ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_765_A_558",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {  int n ; String input = \"\" ; String home ; Scanner sc = new Scanner ( System . in ) ;  n = sc . nextInt ( ) ; home = sc . next ( ) ; for ( int i = 0 ; i < n ; i ++ ) { sc . reset ( ) ; input = sc . next ( ) ; } ",
            "python_code": "n = int ( input ( ) ) home = input ( ) L = [ ] for i in range ( n ) : L . append ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_717_A_559",
            "java_code": "class Solution { public boolean isOneBitCharacter ( int [ ] bits ) { int pos = 0 ; while ( pos < bits . length - 1 ) { pos += bits [ pos ] + 1 ; } return pos == bits . length - 1 ; } }",
            "python_code": "class Solution : NEWLINE INDENT def isOneBitCharacter ( self , bits : List [ int ] ) -> bool : NEWLINE INDENTINDENT pos = 0 NEWLINE while pos < len ( bits ) - 1 : NEWLINE INDENTINDENTINDENT pos += bits [ pos ] + 1 NEWLINE DEDENT return pos == len ( bits ) - 1 NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_859_A_560",
            "java_code": "import java . util . Scanner ;  public class codeforces62 {  public static void main ( String [ ] args ) {",
            "python_code": "num = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  mx = max ( arr )  print ( max ( 0 , mx - 25 ) )          NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_732_A_561",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; int total = 1 ; int total_temp = 0 ;  while ( true ) { total_temp = total * k ; if ( total_temp % 10 == 0 || total_temp % 10 == r ) { break ; } else { total ++ ; } }  System . out . println ( total ) ; } }",
            "python_code": "k , r = map ( int , input ( ) . split ( \" \" ) ) i , m = 1 , kwhile m % 10 != r and m % 10 != 0 : i += 1 m = k * iprint ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_481_A_562",
            "java_code": "class GfG { static void printElements ( int arr [ ] , int n ) { for ( int i = 1 ; i < n - 1 ; i ++ ) { if ( arr [ i ] > arr [ i - 1 ] && arr [ i ] > arr [ i + 1 ] ) System . out . print ( arr [ i ] + \" \" ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 2 , 3 , 1 , 5 , 4 , 9 , 8 , 7 , 5 } ; int n = arr . length ; printElements ( arr , n ) ; } }",
            "python_code": "def printElements ( arr , n ) : NEWLINE INDENT for i in range ( 1 , n - 1 , 1 ) : NEWLINE INDENTINDENT if ( arr [ i ] > arr [ i - 1 ] and arr [ i ] > arr [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT print ( arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 2 , 3 , 1 , 5 , 4 , 9 , 8 , 7 , 5 ] NEWLINE n = len ( arr ) NEWLINE printElements ( arr , n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_14_A_563",
            "java_code": "class GFG { static boolean isDivisible ( long n ) { while ( n / 100 != 0 ) { int d = ( int ) ( n % 10 ) ; n /= 10 ; n -= d * 4 ; } return ( n % 41 == 0 ) ; } public static void main ( String [ ] args ) { long n = 104413920565933L ; if ( isDivisible ( n ) ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n -= d * 4 NEWLINE DEDENT return n % 41 == 0 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 104413920565933 NEWLINE if isDivisible ( n ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3742_A_564",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 3 * ( int ) Math . pow ( n , 2 ) + n - 2 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 3 * pow ( n , 2 ) + n - 2 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1437_A_565",
            "java_code": "import java . util . Scanner ;  public class A1437 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int L = in . nextInt ( ) ; int R = in . nextInt ( ) ; boolean possible = R < 2 * L ; System . out . println ( possible ? \"YES\" : \"NO\" ) ; } }  }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) NEWLINE if ( m < 2 * n ) : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE print ( \"NO\" )  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_216_B_566",
            "java_code": "import java . util . * ;  ",
            "python_code": "from collections import defaultdictfrom collections import dequeclass graph : def __init__ ( self , V ) : self . nodes = defaultdict ( list ) self . V = V self . edges = [ ] def addEdge ( self , u , v ) : self . nodes [ u ] . append ( v ) self . nodes [ v ] . append ( u ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1714_A_567",
            "java_code": "import java . io . * ; class GFG { static int pentagon_pyramidal ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int p = ( 3 * i * i - i ) / 2 ; sum = sum + p ; } return sum ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( pentagon_pyramidal ( n ) ) ; } }",
            "python_code": "def pentagon_pyramidal ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT p = ( 3 * i * i - i ) / 2 NEWLINE sum = sum + p NEWLINE DEDENT return sum NEWLINE DEDENT n = 4 NEWLINE print ( int ( pentagon_pyramidal ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_347_A_568",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c693a {",
            "python_code": "n = int ( input ( ) ) ; l = list ( map ( int , input ( ) . split ( ) ) ) ; l . sort ( ) l2 = l [ : len ( l ) // 2 ] ; l1 = l [ len ( l ) // 2 : ] print ( l1 [ - 1 ] , * l2 [ 1 : ] , * l1 [ : - 1 ] , l2 [ 0 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4436_A_569",
            "java_code": "class GFG { static void ladder_pattern ( int N ) { for ( int i = 0 ; i <= N ; i ++ ) { System . out . println ( \"*   *\" ) ; System . out . println ( \"*   *\" ) ; if ( i < N ) { System . out . println ( \"*****\" ) ; } } } public static void main ( String args [ ] ) { int N = 3 ; ladder_pattern ( N ) ; } }",
            "python_code": "def ladder_pattern ( N ) : NEWLINE INDENT for i in range ( N + 1 ) : NEWLINE INDENTINDENT print ( \"*   *\" ) ; NEWLINE print ( \"*   *\" ) ; NEWLINE if ( i < N ) : NEWLINE INDENTINDENTINDENT print ( \"*****\" ) ; NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 3 ; NEWLINE ladder_pattern ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1140_A_570",
            "java_code": "import java . util . * ; import java . io . * ; public class EdE { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {",
            "python_code": "from sys import stdinn = int ( stdin . readline ( ) ) a = list ( map ( int , stdin . readline ( ) . split ( ) ) ) a = [ i - 1 for i in a ] ans = 0 pos = 0 while pos < n : ans += 1 mx_val = pos while pos < n and pos <= mx_val : mx_val = max ( mx_val , a [ pos ] ) pos += 1  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_659_A_571",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; if ( b > 0 ) { System . out . println ( ( a + b % n - 1 ) % n + 1 ) ; } else { System . out . println ( ( a + n - ( - b % n ) - 1 ) % n + 1 ) ; } } }",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) )  s = 0 drctn = 1 if b >= 0 else - 1 while s < abs ( b ) : a += 1 * drctn s += 1  if a > n : a = 1 elif a <= 0 : a = n  print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_148_B_572",
            "java_code": "import java . util . * ; public class Main { public static double calcTime ( double d , int vd , int vp ) { return d / ( vd - vp ) ; } public static void main ( String [ ] args ) throws java . lang . Exception { Scanner in = new Scanner ( System . in ) ;",
            "python_code": "p , vd , t , f , c = [ int ( input ( ) ) for i in range ( 5 ) ] if p >= vd : exit ( print ( 0 ) ) cur = ( p * t * vd ) / ( vd - p ) ans = 0 while c > cur : ans += 1 cur += p * ( 2 * cur + f * vd ) / ( vd - p ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_879_A_573",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;",
            "python_code": "a = 0 for i in range ( int ( input ( ) ) ) : s , d = list ( map ( int , input ( ) . split ( ) ) ) a += 1 while a < s or ( a - s ) % d != 0 : a += 1 print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1194_A_574",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "'''Description: https://blog.csdn.net/qq_45859188Author: NEFU AB_INversion: 1.0Date: 2021-03-14 09:56:33LastEditors: NEFU AB_INLastEditTime: 2021-03-20 18:45:06''' import math  def solve ( ) : n , x = map ( int , input ( ) . split ( ) ) print ( 2 * x ) for _ in range ( int ( input ( ) ) ) : solve ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2336_A_575",
            "java_code": "import java . io . * ; class GFG { static int squareSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( 2 * i ) * ( 2 * i ) ; return sum ; } public static void main ( String args [ ] ) throws IOException { System . out . println ( squareSum ( 8 ) ) ; } }",
            "python_code": "def squareSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n + 1 ) : NEWLINE INDENTINDENT sum += ( 2 * i ) * ( 2 * i ) NEWLINE DEDENT return sum NEWLINE DEDENT ans = squareSum ( 8 ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_262_A_576",
            "java_code": "import java . util . * ; public class RomaandLuckyNumbers {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) arr = list ( input ( ) . split ( ) ) ans = 0 for i in arr : if i . count ( '4' ) + i . count ( '7' ) <= k : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1831_A_577",
            "java_code": "import java . io . * ; class Nth { public int nthTerm ( int N ) { return ( N * ( ( N % 2 ) + ( N % 3 ) ) ) ; } } class GFG { public static void main ( String [ ] args ) { int N = 5 ; Nth a = new Nth ( ) ; System . out . println ( \"Nth term for N = \" + N + \" : \" + a . nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT return ( N * ( ( N % 2 ) + ( N % 3 ) ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 5 NEWLINE print ( \"Nth term for N = \" , N , \" : \" , nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_567_B_578",
            "java_code": "import java . io . * ; import java . util . * ; public class Main {  public static void main ( String [ ] args ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; Random gen = new Random ( ) ; int test = 1 ;",
            "python_code": "n , l , m , a = int ( input ( ) ) , [ 0 ] * 1000000 , 0 , [ ] for _ in range ( n ) : a . append ( input ( ) ) for i in range ( n ) : v = int ( a [ i ] [ 2 : ] ) if a [ i ] [ 0 ] == '+' : l [ v - 1 ] = 1 elif not l [ v - 1 ] : m += 1 ans = mfor i in range ( n ) : if a [ i ] [ 0 ] == '+' : m += 1 ; ans = max ( m , ans ) else : m -= 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_236_B_579",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; static HashSet < Long > list = new HashSet < > ( ) ; public static void main ( String [ ] args ) {",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) )  divs = [ 1 ] * 1000001 mod = 1073741824  for i in range ( 2 , 1000001 ) : for j in range ( i , 1000001 , i ) : divs [ j ] += 1  ans = 0 for i in range ( 1 , a + 1 ) : for j in range ( 1 , b + 1 ) : for k in range ( 1 , c + 1 ) : ans += ( divs [ i * j * k ] ) % mod  print ( ans % ( mod * 2 ** 30 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_867_A_580",
            "java_code": "import java . util . * ; class GFG { static int minimumProduct ( int [ ] arr , int n ) { Arrays . sort ( arr ) ; int product = 1 ; for ( int i = 0 ; i < n ; i += 2 ) { product *= ( arr [ i ] + arr [ i + 1 ] ) ; } return product ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 6 , 3 , 1 , 7 , 8 } ; int n = arr . length ; System . out . print ( minimumProduct ( arr , n ) + \"\\n\" ) ; } }",
            "python_code": "def minimumProduct ( arr , n ) : NEWLINE INDENT arr = sorted ( arr ) NEWLINE product = 1 NEWLINE for i in range ( 0 , n , 2 ) : NEWLINE INDENTINDENT product *= ( arr [ i ] + arr [ i + 1 ] ) NEWLINE DEDENT return product NEWLINE DEDENT arr = [ 1 , 6 , 3 , 1 , 7 , 8 ] NEWLINE n = len ( arr ) NEWLINE print ( minimumProduct ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1447_A_581",
            "java_code": "import java . util . * ; public class Main {  public static void main ( String [ ] args ) { int t , n ;  Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . nextInt ( ) ;  System . out . println ( n ) ;  for ( int i = 1 ; i <= n ; i ++ ) { System . out . print ( i + \" \" ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE for i in range ( n ) : m = int ( input ( ) ) NEWLINE print ( m ) NEWLINE print ( * [ k for k in range ( 1 , m + 1 ) ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5009_A_582",
            "java_code": "class GFG { static int alternate ( int a , int b , int x ) { return x = a ^ b ^ x ; } public static void main ( String [ ] args ) { int a = - 10 ; int b = 15 ; int x = a ; System . out . print ( \"x is : \" + x ) ; x = alternate ( a , b , x ) ; System . out . print ( \"\\nAfter exchange \" ) ; System . out . print ( \"\\nx is : \" + x ) ; } }",
            "python_code": "def alternate ( a , b , x ) : NEWLINE INDENT x = a ^ b ^ x NEWLINE print ( \"After exchange\" ) NEWLINE print ( \"x is\" , x ) NEWLINE DEDENT a = - 10 NEWLINE b = 15 NEWLINE x = a NEWLINE print ( \"x is\" , x ) NEWLINE alternate ( a , b , x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_281_A_583",
            "java_code": "import java . util . * ;  public class watermelon { public static void main ( String args [ ] ) {  String word ; Scanner scanner = new Scanner ( System . in ) ; word = scanner . nextLine ( ) ;  for ( int i = 0 ; i < word . length ( ) ; i ++ ) { if ( i == 0 ) { char temp = word . toUpperCase ( ) . charAt ( 0 ) ; System . out . print ( temp ) ; } else { System . out . print ( word . charAt ( i ) ) ; } } } }",
            "python_code": "s = list ( input ( ) ) s [ 0 ] = s [ 0 ] . upper ( ) print ( '' . join ( map ( str , s ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_270_A_584",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  double x = in . nextDouble ( ) ; double m , conter = 0 ; for ( int i = 0 ; i < x ; i ++ ) { m = in . nextDouble ( ) ;  if ( 360 % ( 180 - m ) == 0 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } } }  ",
            "python_code": "for i in range ( int ( input ( ) ) ) : n = 360 / ( 180 - int ( input ( ) ) ) print ( \"YES\" if int ( n ) == n else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3192_A_585",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static void print ( char a [ ] , int n , int ind ) { for ( int i = ind ; i < n + ind ; i ++ ) System . out . print ( a [ ( i % n ) ] + \" \" ) ; } public static void main ( String argc [ ] ) { char [ ] a = new char [ ] { 'A' , 'B' , 'C' , 'D' , 'E' , 'F' } ; int n = 6 ; print ( a , n , 3 ) ; } }",
            "python_code": "def prints ( a , n , ind ) : NEWLINE INDENT i = ind NEWLINE while i < n + ind : NEWLINE INDENTINDENT print ( a [ ( i % n ) ] , end = \" \" ) NEWLINE i = i + 1 NEWLINE DEDENT DEDENT a = [ 'A' , 'B' , 'C' , 'D' , 'E' , 'F' ] NEWLINE n = len ( a ) ; NEWLINE prints ( a , n , 3 ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3302_A_586",
            "java_code": "class GFG { static int getsum ( int x ) { return ( x * ( x + 1 ) ) / 2 ; } static int countJumps ( int n ) { n = Math . abs ( n ) ; int ans = 0 ; while ( getsum ( ans ) < n || ( ( getsum ( ans ) - n ) & 1 ) > 0 ) ans ++ ; return ans ; } public static void main ( String args [ ] ) { int n = 9 ; System . out . println ( countJumps ( n ) ) ; } }",
            "python_code": "def getsum ( x ) : NEWLINE INDENT return int ( ( x * ( x + 1 ) ) / 2 ) NEWLINE DEDENT def countJumps ( n ) : NEWLINE INDENT n = abs ( n ) NEWLINE ans = 0 NEWLINE while ( getsum ( ans ) < n or ( getsum ( ans ) - n ) & 1 ) : NEWLINE INDENTINDENT ans += 1 NEWLINE DEDENT return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 9 NEWLINE print ( countJumps ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4516_A_587",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int toggleLastMBits ( int n , int m ) { int num = ( 1 << m ) - 1 ; return ( n ^ num ) ; } public static void main ( String argc [ ] ) { int n = 107 ; int m = 4 ; n = toggleLastMBits ( n , m ) ; System . out . println ( n ) ; } }",
            "python_code": "def toggleLastMBits ( n , m ) : NEWLINE INDENT num = ( 1 << m ) - 1 NEWLINE return ( n ^ num ) NEWLINE DEDENT n = 107 NEWLINE m = 4 NEWLINE print ( toggleLastMBits ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1459_B_588",
            "java_code": "import java . util . Scanner ; public class suanfa5 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = 0 ; if ( n % 2 == 0 ) { int res = ( n / 2 + 1 ) ; m = res * res ; } else { m = ( n + 3 ) * ( n + 1 ) / 2 ; } System . out . println ( m ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE m = n // 2 l = n - mans = ( m + 1 ) * ( l + 1 ) NEWLINE if n % 2 == 1 : ans *= 2 NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2777_A_589",
            "java_code": "class GFG { static String LexicographicalMaxString ( String str ) { String mx = \"\" ; for ( int i = 0 ; i < str . length ( ) ; ++ i ) { if ( mx . compareTo ( str . substring ( i ) ) <= 0 ) { mx = str . substring ( i ) ; } } return mx ; } public static void main ( String [ ] args ) { String str = \"ababaa\" ; System . out . println ( LexicographicalMaxString ( str ) ) ; } }",
            "python_code": "def LexicographicalMaxString ( str ) : NEWLINE INDENT mx = \"\" NEWLINE for i in range ( len ( str ) ) : NEWLINE INDENTINDENT mx = max ( mx , str [ i : ] ) NEWLINE DEDENT return mx NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT str = \"ababaa\" NEWLINE print ( LexicographicalMaxString ( str ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_81_A_590",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "s = input ( )  i = 0 NEWLINE t = [ ] NEWLINE while i < len ( s ) : j = i NEWLINE while j + 1 < len ( s ) and s [ j + 1 ] == s [ i ] : j += 1 NEWLINE if ( j - i + 1 ) % 2 == 1 : if NEWLINE t and t [ - 1 ] == s [ i ] : t . pop ( ) else : t . append ( s [ i ] ) NEWLINE i = j + 1  print ( '' . join ( t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1152_A_591",
            "java_code": "import java . util . * ;  public class Practice {  public static void main ( String [ ] args ) {",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) n , m = I ( ) x = sum ( a % 2 for a in I ( ) ) y = sum ( b % 2 for b in I ( ) ) print ( min ( x , m - y ) + min ( y , n - x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2234_A_592",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { static double countNumbers ( int N ) { return ( Math . pow ( 10 , N ) - 1 ) - ( Math . pow ( 10 , N ) - Math . pow ( 8 , N ) ) / 2 ; } static public void main ( String args [ ] ) { int n = 2 ; System . out . println ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumber ( n ) : NEWLINE INDENT return ( pow ( 10 , n ) - 1 ) - ( pow ( 10 , n ) - pow ( 8 , n ) ) // 2 NEWLINE DEDENT n = 2 NEWLINE print ( countNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1307_B_593",
            "java_code": "import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . * ; import java . io . IOException ; import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . InputStream ; ",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , x = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( )  start = int ( x / a [ - 1 ] ) * a [ - 1 ] ans = int ( x / a [ - 1 ] ) diff = x - start temp = ans for i in a : if i > diff and start != 0 : ans += 1 break elif i == diff : ans += 1 break if temp == ans : ans += 2 if x % a [ - 1 ] == 0 : ans = int ( x / a [ - 1 ] ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_837_A_594",
            "java_code": "import java . io . * ; import java . util . * ;  public class A1008 { public static void main ( String [ ] args ) { InputStream inputReader = System . in ; OutputStream outputReader = System . out ; InputReader in = new InputReader ( inputReader ) ;",
            "python_code": "num = input ( )  arr = input ( ) . split ( )  mx = 0 ct = 0 for word in arr : for char in word : if char . isupper ( ) : ct += 1 mx = max ( mx , ct ) ct = 0  print ( mx )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_61_A_595",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) {  Scanner scn = new Scanner ( System . in ) ; String num = scn . nextLine ( ) ; String num2 = scn . nextLine ( ) ; String str = \"\" ; for ( int i = 0 ; i < num . length ( ) ; i ++ ) { if ( num . charAt ( i ) == num2 . charAt ( i ) ) { str = str + 0 ; } else { str = str + 1 ; } } System . out . print ( str ) ;  } }",
            "python_code": "a , b = input ( ) , input ( ) NEWLINE c = [ 0 ] * len ( a ) NEWLINE for i in range ( len ( a ) ) : if NEWLINE a [ i ] != b [ i ] : c [ i ] = 1 NEWLINE print ( * c , sep = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_362_B_596",
            "java_code": "import java . util . * ;  public class PetyaAndStaircases_B {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) if m == 0 : print ( \"YES\" ) exit ( ) a = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) if a [ 0 ] == 1 or a [ - 1 ] == n : print ( \"NO\" ) exit ( ) x = 0 for i in range ( m - 1 ) : if a [ i ] + 1 == a [ i + 1 ] : x += 1 if x == 2 : print ( \"NO\" ) exit ( ) else : x = 0 print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_457_A_597",
            "java_code": "class GFG { static int numberOfPaths ( int m , int n ) { if ( m == 1 || n == 1 ) return 1 ; return numberOfPaths ( m - 1 , n ) + numberOfPaths ( m , n - 1 ) ; } public static void main ( String args [ ] ) { System . out . println ( numberOfPaths ( 3 , 3 ) ) ; } }",
            "python_code": "def numberOfPaths ( m , n ) : NEWLINE INDENT if ( m == 1 or n == 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return numberOfPaths ( m - 1 , n ) + numberOfPaths ( m , n - 1 ) NEWLINE DEDENT m = 3 NEWLINE n = 3 NEWLINE print ( numberOfPaths ( m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_322_A_598",
            "java_code": "class GFG { static int findSum ( int [ ] arr , int n , int k ) { int ans = arr [ n - k - 1 ] - arr [ 0 ] ; for ( int i = 1 ; i <= k ; i ++ ) { ans = Math . min ( arr [ n - 1 - ( k - i ) ] - arr [ i ] , ans ) ; } return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 100 , 120 , 140 } ; int k = 2 ; int n = arr . length ; System . out . println ( findSum ( arr , n , k ) ) ; } }",
            "python_code": "def findSum ( arr , n , k ) : NEWLINE INDENT ans = arr [ n - k - 1 ] - arr [ 0 ] ; NEWLINE for i in range ( 1 , k + 1 ) : NEWLINE INDENTINDENT ans = min ( arr [ n - 1 - ( k - i ) ] - arr [ i ] , ans ) ; NEWLINE DEDENT return ans ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 100 , 120 , 140 ] ; NEWLINE k = 2 ; NEWLINE n = len ( arr ) ; NEWLINE print ( findSum ( arr , n , k ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_160_A_599",
            "java_code": "import java . util . ArrayList ; import java . util . Collections ; import java . util . Scanner ; ",
            "python_code": "n = input ( ) l = list ( map ( int , input ( ) . split ( ) ) ) l . sort ( reverse = True ) count = 0 ans = sum ( l ) for i in range ( len ( l ) ) : count += l [ i ] if ( count > ans / 2 ) : print ( i + 1 ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1813_A_600",
            "java_code": "class GFG { static int sumOfDigit ( int n , int b ) { int unitDigit , sum = 0 ; while ( n > 0 ) { unitDigit = n % b ; sum += unitDigit ; n = n / b ; } return sum ; } public static void main ( String [ ] args ) { int n = 50 ; int b = 2 ; System . out . print ( sumOfDigit ( n , b ) ) ; } }",
            "python_code": "def sumOfDigit ( n , b ) : NEWLINE INDENT unitDigit = 0 NEWLINE sum = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT unitDigit = n % b NEWLINE sum += unitDigit NEWLINE n = n // b NEWLINE DEDENT return sum NEWLINE DEDENT n = 50 NEWLINE b = 2 NEWLINE print ( sumOfDigit ( n , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1355_B_601",
            "java_code": "import java . util . * ; public class YoungExplorers {  public static void main ( String [ ] args ) {",
            "python_code": "import sysinput = sys . stdin . readline NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_743_B_602",
            "java_code": "   import java . util . * ;   public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; long k = input . nextLong ( ) ; System . out . println ( Long . numberOfTrailingZeros ( k ) + 1 ) ; }  } ",
            "python_code": "import mathm , n = map ( int , input ( ) . split ( ) ) while True : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2996_A_603",
            "java_code": "import java . io . * ; class GFG { static void series ( int A , int X , int n ) { int term = ( int ) Math . pow ( A , n ) ; System . out . print ( term + \" \" ) ; for ( int i = 1 ; i <= n ; i ++ ) { term = term * X * ( n - i + 1 ) / ( i * A ) ; System . out . print ( term + \" \" ) ; } } public static void main ( String [ ] args ) { int A = 3 , X = 4 , n = 5 ; series ( A , X , n ) ; } }",
            "python_code": "def series ( A , X , n ) : NEWLINE INDENT term = pow ( A , n ) NEWLINE print ( term , end = \" \" ) NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT term = int ( term * X * ( n - i + 1 ) / ( i * A ) ) NEWLINE print ( term , end = \" \" ) NEWLINE DEDENT DEDENT A = 3 ; X = 4 ; n = 5 NEWLINE series ( A , X , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1006_A_604",
            "java_code": "import java . util . Scanner ;  public class AdjacentReplacement {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ;  int a [ ] = new int [ n ] ;  for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; if ( a [ i ] % 2 == 0 ) { a [ i ] -- ; }  System . out . print ( a [ i ] + \" \" ) ; }  }  }",
            "python_code": "input ( ) nums = map ( int , str ( input ( ) ) . split ( ' ' ) ) print ( ' ' . join ( map ( str , map ( lambda x : x if x % 2 == 1 else x - 1 , nums ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3986_A_605",
            "java_code": "import java . util . * ; class GFG { static int findTrailingZeros ( int n ) { if ( ( n & 1 ) == 1 ) return 0 ; else { int ans = 0 ; n /= 2 ; while ( n != 0 ) { ans += n / 5 ; n /= 5 ; } return ans ; } } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( findTrailingZeros ( n ) ) ; } }",
            "python_code": "def findTrailingZeros ( n ) : NEWLINE INDENT if ( n & 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT ans = 0 NEWLINE n //= 2 NEWLINE while ( n ) : NEWLINE INDENTINDENTINDENT ans += n // 5 NEWLINE n //= 5 NEWLINE DEDENT return ans NEWLINE DEDENT DEDENT n = 12 NEWLINE print ( findTrailingZeros ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1186_A_606",
            "java_code": "import java . util . Scanner ;  public class Vsa {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  int n , m , k ; n = in . nextInt ( ) ; m = in . nextInt ( ) ; k = in . nextInt ( ) ;  boolean b = m >= n && k >= n ; System . out . println ( ( b ) ? \"YES\" : \"NO\" ) ;  } }",
            "python_code": "x , y , z = map ( int , input ( ) . split ( ) ) if y >= x and z >= x : print ( \"Yes\" ) else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4003_A_607",
            "java_code": "import java . lang . Math ; class gfg { static float sph ( float r , float R , float h ) { if ( r < 0 && R < 0 && h < 0 ) return - 1 ; float x = r ; float V = ( float ) ( 4 * 3.14f * Math . pow ( r , 3 ) ) / 3 ; return V ; } public static void main ( String [ ] args ) { float r = 5 , R = 8 , h = 11 ; System . out . println ( sph ( r , R , h ) ) ; } }",
            "python_code": "import math as mt NEWLINE def sph ( r , R , h ) : NEWLINE INDENT if ( r < 0 and R < 0 and h < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = r NEWLINE V = ( 4 * 3.14 * pow ( r , 3 ) ) / 3 NEWLINE return V NEWLINE DEDENT r , R , h = 5 , 8 , 11 NEWLINE print ( sph ( r , R , h ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3137_A_608",
            "java_code": "class GFG { public static void main ( String [ ] args ) { StringBuilder str = new StringBuilder ( \"geeksforgeeks\" ) ; str . reverse ( ) ; System . out . println ( str ) ; } }",
            "python_code": "str = \"geeksforgeeks\" ; NEWLINE str = \"\" . join ( reversed ( str ) ) NEWLINE print ( str ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1468_A_609",
            "java_code": "import java . io . * ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . StringTokenizer ; import java . util . List ; import java . util . * ; public class realfast implements Runnable { private static final int INF = ( int ) 1e9 ; long in = 1000000007 ; long fac [ ] = new long [ 1000001 ] ; long inv [ ] = new long [ 1000001 ] ; public void solve ( ) throws IOException { ",
            "python_code": "import osimport NEWLINE sysfrom NEWLINE io NEWLINE import BytesIO , IOBase NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1213_A_610",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c582a {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) ev = 0 od = 0  for i in range ( len ( l ) ) : if ( l [ i ] % 2 == 0 ) : ev += 1 else : od += 1  print ( min ( ev , od ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_927_A_611",
            "java_code": "import java . io . * ; class GFG { static int numberOfDays ( int a , int b , int n ) { int Days = b * ( n + a ) / ( a + b ) ; return Days ; } public static void main ( String [ ] args ) { int a = 10 , b = 20 , n = 5 ; System . out . println ( numberOfDays ( a , b , n ) ) ; } }",
            "python_code": "def numberOfDays ( a , b , n ) : NEWLINE INDENT Days = b * ( n + a ) // ( a + b ) NEWLINE return Days NEWLINE DEDENT a = 10 NEWLINE b = 20 NEWLINE n = 5 NEWLINE print ( numberOfDays ( a , b , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_894_B_612",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main {  static long res = 0 ; static int n , m ;  public static void main ( String [ ] args ) throws Exception { BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ; PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) if k == - 1 and n % 2 != m % 2 : print ( 0 ) else : print ( pow ( 2 , ( n - 1 ) * ( m - 1 ) , 10 ** 9 + 7 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1757_A_613",
            "java_code": "public class GFG { static int PowerOFPINnfactorial ( int n , int p ) { int ans = 0 ; int temp = p ; while ( temp <= n ) { ans += n / temp ; temp = temp * p ; } return ans ; } public static void main ( String [ ] args ) { System . out . println ( PowerOFPINnfactorial ( 4 , 2 ) ) ; } }",
            "python_code": "def PowerOFPINnfactorial ( n , p ) : NEWLINE INDENT ans = 0 NEWLINE temp = p NEWLINE while ( temp <= n ) : NEWLINE INDENTINDENT ans += n / temp NEWLINE temp = temp * p NEWLINE DEDENT return int ( ans ) NEWLINE DEDENT print ( PowerOFPINnfactorial ( 4 , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4666_A_614",
            "java_code": "import java . io . * ; class Nth { public static int nthTerm ( int N ) { return N * N + ( N + 1 ) * ( N + 1 ) ; } public static void main ( String [ ] args ) { int N = 3 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT return N * N + ( N + 1 ) * ( N + 1 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 3 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_666_A_615",
            "java_code": "import java . io . * ; import java . util . * ;  public class main { public static void solucion ( String strPalabra ) { List < String > ans = new ArrayList < > ( ) ;",
            "python_code": "lectura = input ( ) sufix = set ( ) comb = { ( len ( lectura ) , 2 ) } setPrueba = set ( ) while comb : x , y = comb . pop ( ) pos3 = x + y for i in [ y , 5 - y ] : posIni = x - i stringActual = ( posIni , i ) if ( stringActual in setPrueba or ( posIni < 5 ) or ( lectura [ posIni : x ] == lectura [ x : pos3 ] ) ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2309_A_616",
            "java_code": "class GFG { static int difference ( int n ) { int S , res ; S = ( n * ( n + 1 ) ) / 2 ; res = S * ( S - 1 ) ; return res ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( difference ( n ) ) ; } }",
            "python_code": "def difference ( n ) : NEWLINE INDENT S = ( n * ( n + 1 ) ) // 2 ; NEWLINE res = S * ( S - 1 ) ; NEWLINE return res ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE print ( difference ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1920_A_617",
            "java_code": "import java . io . * ; class GFG { static int remainder ( String str ) { int len = str . length ( ) ; int num , rem = 0 ; for ( int i = 0 ; i < len ; i ++ ) { num = rem * 10 + ( str . charAt ( i ) - '0' ) ; rem = num % 11 ; } return rem ; } public static void main ( String args [ ] ) { String str = \"3435346456547566345436457867978\" ; System . out . println ( remainder ( str ) ) ; } }",
            "python_code": "def remainder ( st ) : NEWLINE INDENT ln = len ( st ) NEWLINE rem = 0 NEWLINE for i in range ( 0 , ln ) : NEWLINE INDENTINDENT num = rem * 10 + ( int ) ( st [ i ] ) NEWLINE rem = num % 11 NEWLINE DEDENT return rem NEWLINE DEDENT st = \"3435346456547566345436457867978\" NEWLINE print ( remainder ( st ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_810_A_618",
            "java_code": "public class GFG { static double ReuleauxArea ( float a ) { if ( a < 0 ) return - 1 ; double A = ( double ) 0.70477 * Math . pow ( a , 2 ) ; return A ; } public static void main ( String args [ ] ) { float a = 6 ; System . out . println ( ReuleauxArea ( a ) ) ; } }",
            "python_code": "import math as mt NEWLINE def ReuleauxArea ( a ) : NEWLINE INDENT if a < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return 0.70477 * pow ( a , 2 ) NEWLINE DEDENT a = 6 NEWLINE print ( ReuleauxArea ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2037_A_619",
            "java_code": "class GFG { static int cal ( int n ) { double res = Math . pow ( Math . ceil ( ( Math . pow ( Math . pow ( 10 , ( n - 1 ) ) , 1 / 4 ) ) ) , 4 ) ; return ( int ) res ; } public static void main ( String [ ] args ) { int n = 1 ; System . out . println ( cal ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def cal ( n ) : NEWLINE INDENT res = pow ( ceil ( ( pow ( pow ( 10 , ( n - 1 ) ) , 1 / 4 ) ) ) , 4 ) NEWLINE return int ( res ) NEWLINE DEDENT n = 1 NEWLINE print ( cal ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1081_A_620",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; public class Practice { static FastReader sc = new FastReader ( ) ; static int mod = ( int ) Math . pow ( 10 , 9 ) + 7 ; public static void main ( String [ ] args ) { int ttt = 1 ;",
            "python_code": "a , = map ( int , input ( ) . split ( ) ) if a == 2 : print ( 2 ) else : print ( 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_729_A_621",
            "java_code": "public class GFG { static int NumberOfRectangles ( int n , int m ) { if ( n % 2 == 0 ) return ( n / 2 ) * m ; else if ( m % 2 == 0 ) return ( m / 2 ) * n ; return ( n * m - 1 ) / 2 ; } public static void main ( String args [ ] ) { int n = 3 , m = 3 ; System . out . println ( NumberOfRectangles ( n , m ) ) ; } }",
            "python_code": "def NumberOfRectangles ( n , m ) : NEWLINE INDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT return ( n / 2 ) * m NEWLINE DEDENT elif ( m % 2 == 0 ) : NEWLINE INDENTINDENT return ( m // 2 ) * n NEWLINE DEDENT return ( n * m - 1 ) // 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE m = 3 NEWLINE print ( NumberOfRectangles ( n , m ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3608_A_622",
            "java_code": "class GFG { static void maxRegions ( int n ) { int num ; num = n * ( n + 1 ) / 2 + 1 ; System . out . println ( num ) ; ; } public static void main ( String [ ] args ) { int n = 10 ; maxRegions ( n ) ; } }",
            "python_code": "def maxRegions ( n ) : NEWLINE INDENT num = n * ( n + 1 ) // 2 + 1 NEWLINE print ( num ) NEWLINE DEDENT n = 10 NEWLINE maxRegions ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_769_A_623",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class UniversityEntrance { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ;  int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = input . nextInt ( ) ;  Arrays . sort ( arr ) ; System . out . println ( arr [ n / 2 ] ) ; } }",
            "python_code": "nennum = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr . sort ( ) print ( arr [ ( len ( arr ) - 1 ) // 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2753_A_624",
            "java_code": "class GfG { static int getCount ( String a , String b ) { if ( b . length ( ) % a . length ( ) != 0 ) return - 1 ; int count = b . length ( ) / a . length ( ) ; String str = \"\" ; for ( int i = 0 ; i < count ; i ++ ) { str = str + a ; } if ( str . equals ( b ) ) return count ; return - 1 ; } public static void main ( String [ ] args ) { String a = \"geeks\" ; String b = \"geeksgeeks\" ; System . out . println ( getCount ( a , b ) ) ; } }",
            "python_code": "def getCount ( a , b ) : NEWLINE INDENT if ( len ( b ) % len ( a ) != 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT count = int ( len ( b ) / len ( a ) ) NEWLINE a = a * count NEWLINE if ( a == b ) : NEWLINE INDENTINDENT return count NEWLINE DEDENT return - 1 ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 'geeks' NEWLINE b = 'geeksgeeks' NEWLINE print ( getCount ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5078_A_625",
            "java_code": "import java . io . * ; class GFG { static int NumberOfSolutions ( int a , int b , int c , int d ) { int ans = 0 ; for ( int i = a ; i <= b ; i ++ ) if ( d >= Math . max ( c , i + 1 ) ) ans += d - Math . max ( c , i + 1 ) + 1 ; return ans ; } public static void main ( String [ ] args ) { int a = 2 , b = 3 , c = 3 , d = 4 ; System . out . println ( NumberOfSolutions ( a , b , c , d ) ) ; } }",
            "python_code": "def NumberOfSolutions ( a , b , c , d ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( a , b + 1 ) : NEWLINE INDENTINDENT if d >= max ( c , i + 1 ) : NEWLINE INDENTINDENTINDENT ans += d - max ( c , i + 1 ) + 1 NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b , c , d = 2 , 3 , 3 , 4 NEWLINE print ( NumberOfSolutions ( a , b , c , d ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5234_A_626",
            "java_code": "import java . io . * ; class GFG { static int gcd ( int a , int b ) { while ( b != 0 ) { int t = b ; b = a % b ; a = t ; } return a ; } static int findMinDiff ( int a , int b , int x , int y ) { int g = gcd ( a , b ) ; int diff = Math . abs ( x - y ) % g ; return Math . min ( diff , g - diff ) ; } public static void main ( String [ ] args ) { int a = 20 , b = 52 , x = 5 , y = 7 ; System . out . println ( findMinDiff ( a , b , x , y ) ) ; } }",
            "python_code": "import math as mt NEWLINE def gcd ( a , b ) : NEWLINE INDENT while ( b != 0 ) : NEWLINE INDENTINDENT t = b NEWLINE b = a % b NEWLINE a = t NEWLINE DEDENT return a NEWLINE DEDENT def findMinDiff ( a , b , x , y ) : NEWLINE INDENT g = gcd ( a , b ) NEWLINE diff = abs ( x - y ) % g NEWLINE return min ( diff , g - diff ) NEWLINE DEDENT a , b , x , y = 20 , 52 , 5 , 7 NEWLINE print ( findMinDiff ( a , b , x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3421_A_627",
            "java_code": "import java . io . * ; class GFG { static double squareRoot ( double n ) { return Math . pow ( 2 , 0.5 * ( Math . log ( n ) / Math . log ( 2 ) ) ) ; } public static void main ( String [ ] args ) { double n = 12 ; System . out . println ( squareRoot ( n ) ) ; } }",
            "python_code": "import math NEWLINE def squareRoot ( n ) : NEWLINE INDENT return pow ( 2 , 0.5 * math . log2 ( n ) ) NEWLINE DEDENT n = 12 NEWLINE print ( squareRoot ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1195_B_628",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; long low = 0 ; long high = n ; while ( low <= high ) { long mid = low + ( high - low ) / 2 ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) for r in range ( 1 , 10 ** 5 ) : if ( r * ( r + 1 ) ) // 2 + r == k + n : print ( n - r ) exit ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5_A_629",
            "java_code": "import java . io . * ; class GFG { static int countDivisors ( int n , int k ) { int count = 0 , i ; for ( i = 1 ; i <= n ; i ++ ) { if ( n % i == 0 && i % k == 0 ) { count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 12 , k = 3 ; System . out . println ( countDivisors ( n , k ) ) ; } }",
            "python_code": "def countDivisors ( n , k ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if ( n % i == 0 and i % k == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , k = 12 , 3 NEWLINE print ( countDivisors ( n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1401_A_630",
            "java_code": "import java . util . Scanner ; public class CodeForces { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; if ( n > m ) { System . out . println ( ( n - m ) % 2 ) ; } else { System . out . println ( m - n ) ; } } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n , k = list ( map ( int , input ( ) . split ( ) ) ) if n <= k : print ( k - n ) else : if ( n + k ) % 2 == 0 : print ( 0 ) else : print ( 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1303_A_631",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int T = sc . nextInt ( ) ; sc . nextLine ( ) ; while ( T -- > 0 ) { String x = sc . nextLine ( ) ;",
            "python_code": "from re import findallfrom typing import Iterator   def get_num_input ( ) -> Iterator [ int ] : return map ( int , input ( ) . split ( ) )   def main ( ) -> None : print ( sum ( map ( len , findall ( r\"(?<=1)0+(?=1)\" , input ( ) ) ) ) )   if __name__ == \"__main__\" : ONLY_ONCE : bool = False for _ in range ( 1 if ONLY_ONCE else int ( input ( ) ) ) : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1107_B_632",
            "java_code": " import java . util . Scanner ; import java . util . Arrays ; public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception { try { Scanner sc = new Scanner ( System . in ) ; int t , k , i ; long n ; t = sc . nextInt ( ) ; while ( t > 0 ) { t -- ; n = sc . nextLong ( ) ; k = sc . nextInt ( ) ; System . out . println ( k + ( n - 1 ) * 9 ) ; } } catch ( Exception e ) { } } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : k , x = map ( int , input ( ) . split ( ) ) print ( 9 * ( k - 1 ) + x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1419_B_633",
            "java_code": "import java . util . * ;  public class Stairs {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) NEWLINE for _ in range ( t ) : n = int ( input ( ) ) NEWLINE sum1 = 0 NEWLINE base = 1 NEWLINE ans = 0 NEWLINE while sum1 <= n : sum1 += ( base * ( base + 1 ) ) // 2 NEWLINE base = ( base * 2 ) + 1 NEWLINE ans += 1 NEWLINE print ( ans - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1759_A_634",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . BigInteger ; class GFG { static boolean getParity ( int n ) { boolean parity = false ; while ( n != 0 ) { parity = ! parity ; n = n & ( n - 1 ) ; } return parity ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( \"Parity of no \" + n + \" = \" + ( getParity ( n ) ? \"odd\" : \"even\" ) ) ; } }",
            "python_code": "def getParity ( n ) : NEWLINE INDENT parity = 0 NEWLINE while n : NEWLINE INDENTINDENT parity = ~ parity NEWLINE n = n & ( n - 1 ) NEWLINE DEDENT return parity NEWLINE DEDENT n = 7 NEWLINE print ( \"Parity of no \" , n , \" = \" , ( \"odd\" if getParity ( n ) else \"even\" ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_65_A_635",
            "java_code": "import java . lang . reflect . Array ; import java . util . * ; import java . util . function . BiConsumer ; import java . util . function . Consumer ; import java . util . function . Function ; import java . util . stream . * ;  public class Main { public static void main ( String arg [ ] ) {",
            "python_code": "a , b , c , d , e , f = map ( int , input ( ) . split ( ) ) ; if a * c * e < b * d * f or a == 0 and b * d > 0 or c == 0 and d > 0 : print ( \"Ron\" ) ; else : print ( \"Hermione\" ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_645_B_636",
            "java_code": "import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . util . * ;   public class CodeForce { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if k == 0 or n == 1 : print ( 0 ) elif k >= n // 2 : print ( ( ( n - 1 ) * n ) // 2 ) else : ans = 0 for i in range ( 1 , n + 1 ) : if i <= k : ans += n - i elif i <= n - k : ans += k for j in range ( k - 1 , - 1 , - 1 ) : ans += j print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4627_A_637",
            "java_code": "class GFG { static void printAP ( int a , int d , int n ) { int curr_term ; curr_term = a ; for ( int i = 1 ; i <= n ; i ++ ) { System . out . print ( curr_term + \" \" ) ; curr_term = curr_term + d ; } } public static void main ( String [ ] args ) { int a = 2 ; int d = 1 ; int n = 5 ; printAP ( a , d , n ) ; } }",
            "python_code": "def printAP ( a , d , n ) : NEWLINE INDENT curr_term NEWLINE DEDENT curr_term = a NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE DEDENT print ( curr_term , end = ' ' ) NEWLINE INDENT curr_term = curr_term + d NEWLINE DEDENT a = 2 NEWLINE d = 1 NEWLINE n = 5 NEWLINE printAP ( a , d , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3766_A_638",
            "java_code": "class CFG { static int Minsteps ( int n , int m ) { int ans = 0 ; while ( m > n ) { if ( m % 2 != 0 ) { m ++ ; ans ++ ; } m /= 2 ; ans ++ ; } return ans + n - m ; } public static void main ( String [ ] args ) { int n = 4 , m = 6 ; System . out . println ( Minsteps ( n , m ) ) ; } }",
            "python_code": "def Minsteps ( n , m ) : NEWLINE INDENT ans = 0 NEWLINE while ( m > n ) : NEWLINE INDENTINDENT if ( m & 1 ) : NEWLINE INDENTINDENTINDENT m += 1 NEWLINE ans += 1 NEWLINE DEDENT m //= 2 NEWLINE ans += 1 NEWLINE DEDENT return ans + n - m NEWLINE DEDENT n = 4 NEWLINE m = 6 NEWLINE print ( Minsteps ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1864_A_639",
            "java_code": "import java . io . * ; class GFG { static int pairAndSum ( int arr [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) ans += arr [ i ] & arr [ j ] ; return ans ; } public static void main ( String args [ ] ) { int arr [ ] = { 5 , 10 , 15 } ; int n = arr . length ; System . out . println ( pairAndSum ( arr , n ) ) ; } }",
            "python_code": "def pairAndSum ( arr , n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT for j in range ( ( i + 1 ) , n ) : NEWLINE INDENTINDENTINDENT ans = ans + arr [ i ] & arr [ j ] NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 5 , 10 , 15 ] NEWLINE n = len ( arr ) NEWLINE print ( pairAndSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_844_A_640",
            "java_code": "import javax . print . DocFlavor ; import java . io . * ; import java . net . Inet4Address ; import java . sql . ClientInfoStatus ; import java . util . * ; ",
            "python_code": "s = list ( str ( input ( ) ) ) k = int ( input ( ) ) r = 0 possible = Trueif len ( s ) < k : possible = Falseelse : r = k - len ( set ( s ) ) r = 0 if r < 0 else rprint ( r if possible else \"impossible\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2163_A_641",
            "java_code": "public class GFG { static double sumProductDifference ( int a , int b , int c , int d , int e ) { double rootSum = ( double ) ( - 1 * b ) / a ; double rootProduct = ( double ) e / a ; return Math . abs ( rootSum - rootProduct ) ; } public static void main ( String args [ ] ) { System . out . println ( sumProductDifference ( 8 , 4 , 6 , 4 , 1 ) ) ; } }",
            "python_code": "def sumProductDifference ( a , b , c , d , e ) : NEWLINE INDENT rootSum = ( - 1 * b ) / a NEWLINE rootProduct = e / a NEWLINE return abs ( rootSum - rootProduct ) NEWLINE DEDENT print ( sumProductDifference ( 8 , 4 , 6 , 4 , 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1260_A_642",
            "java_code": "import java . util . * ; import java . lang . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int c = s . nextInt ( ) ; int sum = s . nextInt ( ) ; int a = sum / c ; int b = sum % c ; System . out . println ( b * ( a + 1 ) * ( a + 1 ) + ( c - b ) * a * a ) ; } } }",
            "python_code": "for case in range ( int ( input ( ) ) ) : c , s = [ int ( x ) for x in input ( ) . split ( ) ] mn = s // c c2 = 0 if mn != 0 : c2 = s % c else : c2 = s  c -= c2 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1255_B_643",
            "java_code": "import java . util . Scanner ; import java . util . * ;  public class fridgeLockers { static Scanner input = new Scanner ( System . in ) ; static int t ; static int n , m ;  public static void main ( String [ ] args ) { t = input . nextInt ( ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) if m < n or n == 2 : print ( - 1 ) else : print ( 2 * sum ( a ) ) for i in range ( n ) : print ( i + 1 , max ( 1 , ( i + 2 ) % ( n + 1 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_349_A_644",
            "java_code": "class GFG { static double distance ( int x1 , int y1 , int x2 , int y2 ) { return Math . sqrt ( Math . pow ( x2 - x1 , 2 ) + Math . pow ( y2 - y1 , 2 ) * 1.0 ) ; } public static void main ( String [ ] args ) { System . out . println ( Math . round ( distance ( 3 , 4 , 4 , 3 ) * 100000.0 ) / 100000.0 ) ; } }",
            "python_code": "import math NEWLINE def distance ( x1 , y1 , x2 , y2 ) : NEWLINE INDENT return math . sqrt ( math . pow ( x2 - x1 , 2 ) + math . pow ( y2 - y1 , 2 ) * 1.0 ) NEWLINE DEDENT print ( \"%.6f\" % distance ( 3 , 4 , 4 , 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2046_A_645",
            "java_code": "class GFG { static int NumUnsignBits = 64 ; static long findNum ( long x ) { for ( int i = 0 ; i < NumUnsignBits - 1 ; i ++ ) { if ( ( ( x > > i ) & 1 ) != ( ( x > > ( i + 1 ) ) & 1 ) ) { x ^= ( 1 << i ) | ( 1 << ( i + 1 ) ) ; return x ; } } return Long . MIN_VALUE ; } public static void main ( String [ ] args ) { int n = 92 ; System . out . println ( findNum ( n ) ) ; } }",
            "python_code": "NumUnsignBits = 64 ; NEWLINE def findNum ( x ) : NEWLINE INDENT for i in range ( NumUnsignBits - 1 ) : NEWLINE INDENTINDENT if ( ( ( x >> i ) & 1 ) != ( ( x >> ( i + 1 ) ) & 1 ) ) : NEWLINE INDENTINDENTINDENT x ^= ( 1 << i ) | ( 1 << ( i + 1 ) ) ; NEWLINE return x ; NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 92 ; NEWLINE print ( findNum ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_116_A_646",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int tran = 0 ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = scan . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) ) x = 0 y = 0 for i in range ( 0 , n ) : z = list ( map ( int , input ( ) . rstrip ( ) . split ( ) ) ) x = x - z [ 0 ] x = x + z [ 1 ] if y < x : y = xprint ( y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1173_B_647",
            "java_code": "import java . io . * ; import java . util . * ; public class Mohammad { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , c = n / 2 ; System . out . println ( ++ c ) ; for ( int i = 1 ; i <= c ; i ++ ) System . out . println ( 1 + \" \" + i ) ; for ( int i = 2 ; i <= n - c + 1 ; i ++ ) System . out . println ( c + \" \" + i ) ; } }",
            "python_code": "n = int ( input ( ) ) m = n // 2 + 1 print ( m ) for i in range ( n ) : print ( i // 2 + 1 , i // 2 + 1 + i % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4458_A_648",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int countStrings ( String s ) { int sum = 1 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( i % 2 == 0 && s . charAt ( i ) == '$' ) sum *= 21 ; else if ( s . charAt ( i ) == '$' ) sum *= 5 ; } return sum ; } public static void main ( String args [ ] ) { String str = \"s$$e$\" ; System . out . println ( countStrings ( str ) ) ; } }",
            "python_code": "def countStrings ( s ) : NEWLINE INDENT sum = 1 NEWLINE for i in range ( len ( s ) ) : NEWLINE INDENTINDENT if ( i % 2 == 0 and s [ i ] == '$' ) : NEWLINE INDENTINDENTINDENT sum *= 21 NEWLINE DEDENT elif ( s [ i ] == '$' ) : NEWLINE INDENTINDENTINDENT sum *= 5 NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str = \"s$$e$\" NEWLINE print ( countStrings ( str ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_500_A_649",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ;  public class cp { static BufferedReader br ; static StringTokenizer st ;  public static void main ( String [ ] args ) throws IOException {  br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;  st = readLine ( ) ; int n = tokenInt ( ) ; int t = tokenInt ( ) ;  st = readLine ( ) ; int [ ] array = readIntArray ( n ) ; ",
            "python_code": "n , t = list ( map ( int , input ( ) . split ( ) ) ) a = list ( map ( int , input ( ) . split ( ) ) ) i = 1 while i < t : i += a [ i - 1 ] print ( 'YES' if i == t else 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1033_A_650",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c701a {",
            "python_code": "n = int ( input ( ) ) ax , ay = map ( int , input ( ) . split ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2368_A_651",
            "java_code": "import java . io . * ; class GFG { static void newvol ( double x ) { System . out . print ( \"percentage increase \" + \"in the volume of the cylinder is \" + x + \"%\" ) ; } public static void main ( String [ ] args ) { double x = 10 ; newvol ( x ) ; } }",
            "python_code": "def newvol ( x ) : NEWLINE INDENT print ( \"percentage increase in the volume of the cylinder is \" , x , \"%\" ) NEWLINE DEDENT x = 10.0 NEWLINE newvol ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_408_B_652",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "from collections import Countera = list ( input ( ) ) b = list ( input ( ) ) d1 = Counter ( a ) c = 0 d2 = Counter ( b ) for i in d2 : if i in d1 : if d1 [ i ] < d2 [ i ] : c += d1 [ i ] else : c += d2 [ i ] else : c = 0 breakif c == 0 : print ( - 1 ) else : print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_579_A_653",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; int x = sc . nextInt ( ) ; int i = 0 ; int count = 0 ; for ( i = 0 ; i < 32 ; i ++ ) { if ( ( x & ( 1 << i ) ) != 0 ) count ++ ; } pw . print ( count ) ;     pw . close ( ) ; }              ",
            "python_code": "print ( bin ( int ( input ( ) ) ) . count ( '1' ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_514_A_654",
            "java_code": "import java . util . * ; class GFG { static int findpos ( String n ) { int k = 0 , pos = 0 , i = 0 ; while ( k != n . length ( ) ) { switch ( n . charAt ( i ) ) { case '4' : pos = pos * 2 + 1 ; break ; case '7' : pos = pos * 2 + 2 ; break ; } i ++ ; k ++ ; } return pos ; } public static void main ( String [ ] args ) { String n = \"774\" ; System . out . println ( findpos ( n ) ) ; } }",
            "python_code": "def findpos ( n ) : NEWLINE INDENT i = 0 NEWLINE j = len ( n ) NEWLINE pos = 0 NEWLINE while ( i < j ) : NEWLINE INDENTINDENT if ( n [ i ] == '4' ) : NEWLINE INDENTINDENTINDENT pos = pos * 2 + 1 NEWLINE DEDENT if ( n [ i ] == '7' ) : NEWLINE INDENTINDENTINDENT pos = pos * 2 + 2 NEWLINE DEDENT i = i + 1 NEWLINE DEDENT return pos NEWLINE DEDENT n = \"774\" NEWLINE print ( findpos ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_460_A_655",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner myObj = new Scanner ( System . in ) ; int x = myObj . nextInt ( ) ; int y = myObj . nextInt ( ) ; int counter = 1 ; while ( x > 0 ) { x -- ;  if ( counter % y == 0 ) { x ++ ; } counter ++ ; } System . out . println ( counter - 1 ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) )  answer = n + n // ( m - 1 )  if n % ( m - 1 ) == 0 : answer -= 1  print ( answer ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_639_B_656",
            "java_code": "import java . util . * ; import java . io . * ;   public class Forces {  public static PrintWriter cout ; public static void main ( String ... arg ) {",
            "python_code": "n , d , h = map ( int , input ( ) . split ( ) ) if n == 2 : if d == h and d == 1 : print ( '1 2' ) else : print ( - 1 ) elif d == 1 or d > 2 * h : print ( - 1 ) else : for i in range ( h ) : print ( i + 1 , i + 2 ) for i in range ( d - h ) : print ( 1 if i == 0 else i + h + 1 , i + h + 2 ) for i in range ( d + 1 , n ) : print ( 2 if d == h else 1 , i + 1 )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_749_B_657",
            "java_code": "import java . util . * ; import java . io . * ; public class Asd { static Scanner s = new Scanner ( System . in ) ; static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String args [ ] ) { int t = 1 ;",
            "python_code": "p = [ ] for i in range ( 3 ) : p . append ( list ( map ( int , input ( ) . split ( ) ) ) ) print ( 3 ) print ( p [ 0 ] [ 0 ] + p [ 1 ] [ 0 ] - p [ 2 ] [ 0 ] , p [ 0 ] [ 1 ] + p [ 1 ] [ 1 ] - p [ 2 ] [ 1 ] ) print ( p [ 0 ] [ 0 ] + p [ 2 ] [ 0 ] - p [ 1 ] [ 0 ] , p [ 0 ] [ 1 ] + p [ 2 ] [ 1 ] - p [ 1 ] [ 1 ] ) print ( p [ 1 ] [ 0 ] + p [ 2 ] [ 0 ] - p [ 0 ] [ 0 ] , p [ 1 ] [ 1 ] + p [ 2 ] [ 1 ] - p [ 0 ] [ 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_448_A_658",
            "java_code": "import java . io . * ; public class GFG { static int sn ( int n , int an ) { return ( n * ( 1 + an ) ) / 2 ; } static int trace ( int n , int m ) { int an = 1 + ( n - 1 ) * ( m + 1 ) ; int rowmajorSum = sn ( n , an ) ; an = 1 + ( n - 1 ) * ( n + 1 ) ; int colmajorSum = sn ( n , an ) ; return rowmajorSum + colmajorSum ; } static public void main ( String [ ] args ) { int N = 3 , M = 3 ; System . out . println ( trace ( N , M ) ) ; } }",
            "python_code": "def sn ( n , an ) : NEWLINE INDENT return ( n * ( 1 + an ) ) / 2 ; NEWLINE DEDENT def trace ( n , m ) : NEWLINE INDENT an = 1 + ( n - 1 ) * ( m + 1 ) ; NEWLINE rowmajorSum = sn ( n , an ) ; NEWLINE an = 1 + ( n - 1 ) * ( n + 1 ) ; NEWLINE colmajorSum = sn ( n , an ) ; NEWLINE return int ( rowmajorSum + colmajorSum ) ; NEWLINE DEDENT N = 3 ; NEWLINE M = 3 ; NEWLINE print ( trace ( N , M ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2438_A_659",
            "java_code": "class GFG { static int countNumbers ( int X , int Y , int N ) { int count = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { if ( ( i % X == 0 ) && ( i % Y != 0 ) ) count ++ ; } return count ; } public static void main ( String [ ] args ) { int X = 2 , Y = 3 , N = 10 ; System . out . println ( countNumbers ( X , Y , N ) ) ; } }",
            "python_code": "def countNumbers ( X , Y , N ) : NEWLINE INDENT count = 0 ; NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT if ( ( i % X == 0 ) and ( i % Y != 0 ) ) : NEWLINE INDENTINDENTINDENT count += 1 ; NEWLINE DEDENT DEDENT return count ; NEWLINE DEDENT X = 2 ; NEWLINE Y = 3 ; NEWLINE N = 10 ; NEWLINE print ( countNumbers ( X , Y , N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_82_A_660",
            "java_code": "import java . util . Scanner ;  public class DoubleCola { public static String doubleCola ( int n ) { int [ ] sheldrons = getSheldon ( n ) ; int firstShedron = sheldrons [ 0 ] ; int numberOfShedron = sheldrons [ 1 ] ; int who = 0 ; int sum = firstShedron ; while ( sum < n ) { sum += numberOfShedron ; if ( sum <= n ) { who ++ ; }  } String [ ] names = { \"Sheldon\" , \"Leonard\" , \"Penny\" , \"Rajesh\" , \"Howard\" } ; return names [ who ] ; ",
            "python_code": "import mathque = int ( input ( ) )  name = [ \"Sheldon\" , \"Leonard\" , \"Penny\" , \"Rajesh\" , \"Howard\" ]  n = 0 NEWLINE while que - 5 * math . pow ( 2 , n ) > 0 : que -= 5 * math . pow ( 2 , n ) NEWLINE n += 1  print ( name [ math . ceil ( que / math . pow ( 2 , n ) ) - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2937_A_661",
            "java_code": "import java . io . * ; class GFG { static int __gcd ( int a , int b ) { if ( a == 0 || b == 0 ) return 0 ; if ( a == b ) return a ; if ( a > b ) return __gcd ( a - b , b ) ; return __gcd ( a , b - a ) ; } static int minValidNumber ( int p , int q ) { if ( q % p == 0 ) return __gcd ( p , q ) ; else return - 1 ; } public static void main ( String [ ] args ) { int p = 2 , q = 6 ; System . out . print ( minValidNumber ( p , q ) ) ; } }",
            "python_code": "from math import gcd NEWLINE def minValidNumber ( p , q ) : NEWLINE INDENT if ( q % p == 0 ) : NEWLINE INDENTINDENT return gcd ( p , q ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT p , q = 2 , 6 ; NEWLINE print ( minValidNumber ( p , q ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1130_A_662",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import mathn = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) c = 0 d = 0 for i in l : if i / 1 > 0 : c += 1 for i in l : if i / ( - 1 ) > 0 : d += 1 if c >= math . ceil ( n / 2 ) : print ( 1 ) elif d >= math . ceil ( n / 2 ) : print ( - 1 ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4820_A_663",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int sumOfSeries ( int n ) { int x = ( n * ( n + 1 ) / 2 ) ; return x * x ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT x = ( n * ( n + 1 ) / 2 ) NEWLINE return ( int ) ( x * x ) NEWLINE DEDENT n = 5 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4399_A_664",
            "java_code": "import java . io . * ; class GFG { static void printSeries ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) { int num = i * ( i + 1 ) * ( i + 2 ) / 6 ; System . out . print ( num + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 10 ; printSeries ( n ) ; } }",
            "python_code": "def printSeries ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT num = i * ( i + 1 ) * ( i + 2 ) // 6 NEWLINE print ( num , end = ' ' ) NEWLINE DEDENT DEDENT n = 10 NEWLINE printSeries ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2275_A_665",
            "java_code": "import java . io . * ; class GFG { static int aliquotSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i < n ; i ++ ) if ( n % i == 0 ) sum += i ; return sum ; } public static void main ( String args [ ] ) throws IOException { int n = 12 ; System . out . println ( aliquotSum ( n ) ) ; } }",
            "python_code": "def aliquotSum ( n ) : NEWLINE INDENT sm = 0 NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT sm = sm + i NEWLINE DEDENT DEDENT return sm NEWLINE DEDENT n = 12 NEWLINE print ( aliquotSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_756_A_666",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class PavelAndBarbeque { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; sc . nextLine ( ) ;",
            "python_code": "n = int ( input ( ) ) p = [ int ( i ) for i in input ( ) . split ( ) ] b = [ int ( i ) for i in input ( ) . split ( ) ] ans = 0 visited = [ False for i in range ( n ) ] for i in range ( n ) : if visited [ i ] : continue ans += 1 while not visited [ i ] : visited [ i ] = True i = p [ i ] - 1 if ans == 1 : ans = 0 ans += ( sum ( b ) + 1 ) % 2 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1143_A_667",
            "java_code": "import java . util . Scanner ;  public class Problem38 {  public static void main ( String [ ] args ) {",
            "python_code": "import sys  def main ( ) : _ , s = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) t = s . replace ( ' ' , '' ) . rstrip ( s [ - 1 ] ) return len ( t ) print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3285_A_668",
            "java_code": "import java . io . * ; public class GFG { static int countNonEmptySubstr ( String str ) { int n = str . length ( ) ; return n * ( n + 1 ) / 2 ; } public static void main ( String args [ ] ) { String s = \"abcde\" ; System . out . println ( countNonEmptySubstr ( s ) ) ; } }",
            "python_code": "def countNonEmptySubstr ( str ) : NEWLINE INDENT n = len ( str ) ; NEWLINE return int ( n * ( n + 1 ) / 2 ) ; NEWLINE DEDENT s = \"abcde\" ; NEWLINE print ( countNonEmptySubstr ( s ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4497_A_669",
            "java_code": "class GFG { static boolean adjacentSet ( int n ) { int x = ( n & ( n > > 1 ) ) ; if ( x == 1 ) return true ; else return false ; } public static void main ( String args [ ] ) { int n = 3 ; if ( adjacentSet ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def adjacentSet ( n ) : NEWLINE INDENT return ( n & ( n >> 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE if ( adjacentSet ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_620_B_670",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { int [ ] segments = { 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 } ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int ans = 0 ; for ( int i = a ; i <= b ; i ++ ) { String str = i + \"\" ;",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) arr = [ 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 ] seg = 0 for i in range ( a , b + 1 ) : while ( i > 0 ) : x = int ( i % 10 ) seg += arr [ x ] i = i // 10 print ( seg ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1093_A_671",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001093A { static public void main ( final String [ ] args ) throws IOException { p001093A . _main ( args ) ; }",
            "python_code": "exec ( int ( input ( ) ) * \"print(int(input())//2);\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_366_B_672",
            "java_code": "import java . util . * ; public class B_366B {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans = 10 ** 9 bestI = 0 for i in range ( k ) : score = 0 r = n // k while r > 0 : score += a [ i ] i += k if i >= n : i -= n r -= 1 if score < ans : ans = score bestI = i + 1 print ( bestI ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_84_A_673",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int ans = ( n / 2 ) * 3 ; System . out . println ( ans ) ;  } }",
            "python_code": "n = int ( input ( ) ) NEWLINE print ( n * 3 // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4189_A_674",
            "java_code": "class GFG { static boolean isMember ( int a , int d , int x ) { if ( d == 0 ) return ( x == a ) ; return ( ( x - a ) % d == 0 && ( x - a ) / d >= 0 ) ; } public static void main ( String args [ ] ) { int a = 1 , x = 7 , d = 3 ; if ( isMember ( a , d , x ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isMember ( a , d , x ) : NEWLINE INDENT if d == 0 : NEWLINE INDENTINDENT return x == a NEWLINE DEDENT return ( ( x - a ) % d == 0 & int ( ( x - a ) / d ) >= 0 ) NEWLINE DEDENT a = 1 NEWLINE x = 7 NEWLINE d = 3 NEWLINE if isMember ( a , d , x ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1406_B_675",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example {",
            "python_code": "def prod ( arr ) : p = 1 NEWLINE INDENT pass NEWLINE DEDENT for i in arr : p *= i NEWLINE return p   for test in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE lst = sorted ( list ( map ( int , input ( ) . strip ( ) . split ( ) ) ) , reverse = True ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3996_A_676",
            "java_code": "class Factorial { int factorial ( int n ) { return ( n == 1 || n == 0 ) ? 1 : n * factorial ( n - 1 ) ; } public static void main ( String args [ ] ) { Factorial obj = new Factorial ( ) ; int num = 5 ; System . out . println ( \"Factorial of \" + num + \" is \" + obj . factorial ( num ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT return 1 if ( n == 1 or n == 0 ) else n * factorial ( n - 1 ) NEWLINE DEDENT num = 5 NEWLINE print ( \"Factorial of\" , num , \"is\" , factorial ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_588_A_677",
            "java_code": "import java . util . Scanner ;   public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int a , b ; int ans = 0 , p = 100 ; for ( int i = 0 ; i < n ; i ++ ) { a = in . nextInt ( ) ; b = in . nextInt ( ) ; p = Math . min ( p , b ) ; ans += p * a ; } System . out . println ( ans ) ;  } }",
            "python_code": "import sysfrom os import pathif ( path . exists ( 'input.txt' ) and path . exists ( 'output.txt' ) ) : sys . stdout = open ( 'output.txt' , 'w' ) sys . stdin = open ( 'input.txt' , 'r' )   def main ( ) : N = int ( input ( ) ) min_price = 200 ans = 0 for i in range ( N ) : a , p = map ( int , input ( ) . split ( ) ) min_price = min ( min_price , p ) ans += min_price * a print ( ans )  main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_225_A_678",
            "java_code": "import java . lang . Math ; public class GfG { static int countSteps ( int n ) { int steps = 0 ; while ( n > 0 ) { int largest = ( int ) Math . sqrt ( n ) ; n -= ( largest * largest ) ; steps ++ ; } return steps ; } public static void main ( String [ ] args ) { int n = 85 ; System . out . println ( countSteps ( n ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def countSteps ( n ) : NEWLINE INDENT steps = 0 ; NEWLINE while ( n ) : NEWLINE INDENTINDENT largest = int ( sqrt ( n ) ) ; NEWLINE n -= ( largest * largest ) ; NEWLINE steps += 1 ; NEWLINE DEDENT return steps ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 85 ; NEWLINE print ( countSteps ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3741_A_679",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 5 * ( int ) Math . pow ( n , 2 ) - 5 * n ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 5 * pow ( n , 2 ) - 5 * n NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1225_A_680",
            "java_code": "import java . io . * ; import java . util . * ;",
            "python_code": "na , nb = map ( int , input ( ) . split ( ) )  if na - nb == 8 : print ( 9 , 10 ) elif nb - na == 1 : print ( na * 10 + 9 , nb * 10 )  elif na == nb : print ( na * 10 , nb * 10 + 1 )  else : print ( - 1 )      NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_137_A_681",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; char ch = s . charAt ( 0 ) ; int c = 1 ; int ans = 1 ; for ( int i = 1 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == ch ) { if ( c < 5 ) c ++ ; else { ans += 1 ; c = 1 ; } } else { ans += 1 ; c = 1 ; ch = s . charAt ( i ) ; }",
            "python_code": "import sysfrom math import sqrt , log , log2 , ceil , log10 , gcd , floor , pow , sin , cos , tan , pi , inf , factorialfrom copy import copy , deepcopyfrom sys import exit , stdin , stdoutfrom collections import Counter , defaultdict , dequefrom itertools import permutationsimport heapqfrom bisect import bisect_left from bisect import bisect_right NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_596_A_682",
            "java_code": "import java . io . * ; class GFG { static boolean isDivisible ( long n ) { while ( n / 100 > 0 ) { int last_digit = ( int ) n % 10 ; n /= 10 ; n += last_digit * 3 ; } return ( n % 29 == 0 ) ; } public static void main ( String [ ] args ) { long n = 348 ; if ( isDivisible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while ( int ( n / 100 ) ) : NEWLINE INDENTINDENT last_digit = int ( n % 10 ) NEWLINE n = int ( n / 10 ) NEWLINE n += last_digit * 3 NEWLINE DEDENT return ( n % 29 == 0 ) NEWLINE DEDENT n = 348 NEWLINE if ( isDivisible ( n ) != 0 ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2496_A_683",
            "java_code": "class GFG { static void printFactorialNums ( int n ) { int fact = 1 ; int x = 2 ; while ( fact <= n ) { System . out . print ( fact + \" \" ) ; fact = fact * x ; x ++ ; } } public static void main ( String [ ] args ) { int n = 100 ; printFactorialNums ( n ) ; } }",
            "python_code": "def printFactorialNums ( n ) : NEWLINE INDENT fact = 1 NEWLINE x = 2 NEWLINE while fact <= n : NEWLINE INDENTINDENT print ( fact , end = \" \" ) NEWLINE fact = fact * x NEWLINE x += 1 NEWLINE DEDENT DEDENT n = 100 NEWLINE printFactorialNums ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_994_A_684",
            "java_code": " import java . util . * ; public class f { public static void main ( String [ ] ta ) { Scanner sc = new Scanner ( System . in ) ; if ( sc . hasNext ( ) ) { int n = sc . nextInt ( ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l1 = list ( map ( int , input ( ) . split ( ) ) ) d = dict . fromkeys ( l1 ) for i in l : if ( i in d ) : print ( i , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_299_B_685",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = input ( ) mx , cur = 0 , 0 for ch in a : if ch == '.' : mx = max ( mx , cur ) cur = 0 else : cur += 1 print ( \"YES\" ) if mx < k else print ( \"NO\" )  '''* So I drown it out * Like I always do* Dancing through our house* With the ghost of you''' NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1031_B_686",
            "java_code": "import java . io . * ; import java . util . * ;  public class Task {  public static void main ( String [ ] args ) throws IOException {  new Task ( ) . go ( ) ; }  PrintWriter out ; Reader in ; BufferedReader br ;  Task ( ) throws IOException {  try { ",
            "python_code": "NL NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_835_B_687",
            "java_code": "import java . util . * ; import java . io . * ; public class Solution { static int rock = 0 ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; public static void main ( String [ ] args ) throws Exception {",
            "python_code": "n = int ( input ( ) ) num = input ( ) s = [ ] for ch in num : s . append ( int ( ch ) ) s . sort ( ) total = sum ( s ) if total >= n : print ( 0 ) exit ( ) total = n - totali , count = 0 , 1  while i < len ( s ) : if ( 9 - s [ i ] ) < total : total -= 9 - s [ i ] count += 1 i += 1 else : print ( count ) exit ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2537_A_688",
            "java_code": "class GFG { static long productAscii ( String str ) { long prod = 1 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { prod *= str . charAt ( i ) ; } return prod ; } public static void main ( String [ ] args ) { String str = \"GfG\" ; System . out . println ( productAscii ( str ) ) ; } }",
            "python_code": "def productAscii ( str ) : NEWLINE INDENT prod = 1 NEWLINE for i in range ( 0 , len ( str ) ) : NEWLINE INDENTINDENT prod = prod * ord ( str [ i ] ) NEWLINE DEDENT return prod NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT str = \"GfG\" NEWLINE print ( productAscii ( str ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_334_A_689",
            "java_code": "import java . util . Scanner ; public class Cf { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int totalbags = n * n ; for ( int i = 1 ; i <= totalbags / 2 ; i ++ ) { System . out . println ( i + \" \" + ( ( totalbags - i ) + 1 ) ) ; } } }",
            "python_code": "n = int ( input ( ) ) sq = n * nfor i in range ( 0 , int ( sq / 2 ) ) : print ( i + 1 , sq - i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_570_B_690",
            "java_code": "import java . util . Scanner ;  public class P570B { public static void main ( String [ ] args ) {  Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int m = s . nextInt ( ) ; if ( n == 1 ) { System . out . println ( 1 ) ; } else { if ( n - m > m - 1 ) { System . out . println ( m + 1 ) ; } else { System . out . println ( m - 1 ) ; } }  }  }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) if n == 1 : print ( 1 ) elif m - 1 < n - m : print ( m + 1 ) else : print ( m - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_215_A_691",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) m = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) l = [ 0 ] * ( m + n ) w = 0 for i in range ( m ) : for j in range ( n ) : z = b [ i ] / a [ j ] if ( z . is_integer ( ) ) : l [ j ] = z w += 1 for k in range ( l . count ( 0 ) ) : l . remove ( 0 ) t = max ( l ) print ( l . count ( t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_938_B_692",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n , i , m , ans = 0 , mint ; n = in . nextInt ( ) ; for ( i = 1 ; i <= n ; i ++ ) { m = in . nextInt ( ) ; mint = Math . min ( m - 1 , 1000000 - m ) ; ans = Math . max ( ans , mint ) ; } System . out . println ( ans ) ; in . close ( ) ; } }",
            "python_code": "import mathimport collectionsimport bisect  def solve ( n , a ) : ans = 0 for i in range ( n ) : ans = max ( ans , min ( a [ i ] - 1 , 10 ** 6 - a [ i ] ) ) return ans  n = int ( input ( ) ) a = [ int ( s ) for s in input ( ) . split ( ) ] result = solve ( n , a ) print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4276_A_693",
            "java_code": "import java . io . * ; public class GFG { static void vowelOrConsonant ( char x ) { if ( x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' || x == 'A' || x == 'E' || x == 'I' || x == 'O' || x == 'U' ) System . out . println ( \"Vowel\" ) ; else System . out . println ( \"Consonant\" ) ; } static public void main ( String [ ] args ) { vowelOrConsonant ( 'c' ) ; vowelOrConsonant ( 'E' ) ; } }",
            "python_code": "def vowelOrConsonant ( x ) : NEWLINE INDENT if ( x == 'a' or x == 'e' or x == 'i' or x == 'o' or x == 'u' or x == 'A' or x == 'E' or x == 'I' or x == 'O' or x == 'U' ) : NEWLINE INDENTINDENT print ( \"Vowel\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"Consonant\" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT vowelOrConsonant ( 'c' ) NEWLINE vowelOrConsonant ( 'E' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_767_B_694",
            "java_code": "import java . io . * ; import java . util . * ;  public class a { public static void main ( String [ ] args ) throws IOException { FastReader scan = new FastReader ( ) ;",
            "python_code": "import syst1 , t2 , t = map ( int , input ( ) . split ( ) ) u = 1 n = int ( input ( ) ) if n == 0 : print ( t1 ) sys . exit ( ) a = [ int ( i ) for i in input ( ) . split ( ) ] mini = 10 ** 20 ans = 0 time = t1for x in a : if x <= t2 - t : if time - x + 1 < mini and x > 0 : mini = time - x + 1 if x - 1 > time : ans = time else : ans = x - 1 time = t + max ( time , x ) if time > t2 - t : print ( ans ) else : print ( time ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_731_B_695",
            "java_code": "import java . util . * ; ",
            "python_code": "for _ in range ( 1 ) : n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) g = 1 for i in range ( n ) : if arr [ i ] < 0 : g = 0 break  if arr [ i ] % 2 == 0 : pass else : if i < n - 1 : arr [ i + 1 ] -= 1 else : g = 0  if g == 0 : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_865_B_696",
            "java_code": "import java . io . * ; import java . math . BigInteger ; import java . util . * ; public class Main { static InputReader in = new InputReader ( System . in ) ; static PrintWriter out = new PrintWriter ( System . out ) ; static int oo = ( int ) 1e9 ;",
            "python_code": "from sys import stdinfrom collections import deque  n , S = [ int ( x ) for x in stdin . readline ( ) . split ( ) ]  ppl = [ ]  base = 0  tSlices = 0  for dude in range ( n ) : s , a , b = [ int ( x ) for x in stdin . readline ( ) . split ( ) ] base += s * a tSlices += s ppl . append ( [ b - a , s ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3837_A_697",
            "java_code": "import java . io . * ; class GFG { static long findF_N ( long n ) { long ans = 0 ; for ( long i = 0 ; i < n ; ++ i ) ans += ( i + 1 ) * ( n - i - 1 ) ; return ans ; } public static void main ( String [ ] args ) { long n = 3 ; System . out . println ( findF_N ( n ) ) ; } }",
            "python_code": "def findF_N ( n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT ans = ans + ( i + 1 ) * ( n - i - 1 ) NEWLINE DEDENT return ans NEWLINE DEDENT n = 3 NEWLINE print ( findF_N ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_670_A_698",
            "java_code": "import java . util . Scanner ;  public class Holidays { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int n = scanner . nextInt ( ) ;  int min = 0 ; int max = 0 ;  for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 7 == 0 || ( i + 1 ) % 7 == 0 ) { min ++ ; } if ( i % 7 == 1 || i % 7 == 2 ) { max ++ ; } }  System . out . println ( min ) ; System . out . println ( max ) ;  } }",
            "python_code": "T_ON = 0 DEBUG_ON = 0 MOD = 998244353   def solve ( ) : n = read_int ( ) q , r = divmod ( n , 7 ) MIN = q * 2 + max ( r - 5 , 0 ) MAX = q * 2 + min ( r , 2 ) print ( MIN , MAX )   def main ( ) : T = read_int ( ) if T_ON else 1 for i in range ( T ) : solve ( )   def debug ( * xargs ) : if DEBUG_ON : print ( * xargs )   from collections import * import math   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_732_B_699",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 for i in range ( 1 , n ) : if l [ i ] + l [ i - 1 ] < k : ans = ans + k - l [ i ] - l [ i - 1 ] l [ i ] = l [ i ] + k - ( l [ i ] + l [ i - 1 ] ) print ( ans ) print ( * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_667_B_700",
            "java_code": "import java . util . * ; ",
            "python_code": "import mathimport collections def solve ( n , l ) : return max ( l ) - ( sum ( l ) - max ( l ) ) + 1  n = int ( input ( ) ) l = [ int ( s ) for s in input ( ) . split ( ) ] result = solve ( n , l ) print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5015_A_701",
            "java_code": "public class GFG { static int nthTerm ( int n ) { return 3 * ( int ) Math . pow ( n , 2 ) - 4 * n + 2 ; } public static void main ( String args [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 3 * pow ( n , 2 ) - 4 * n + 2 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2162_A_702",
            "java_code": "import java . io . * ; class GFG { static float heightCalculate ( int H , int n , int m ) { float N = ( float ) ( n * 1.0 ) ; float M = ( float ) ( m * 1.0 ) ; float h = H * ( float ) Math . sqrt ( N / ( N + M ) ) ; return h ; } public static void main ( String [ ] args ) { int H = 10 , n = 3 , m = 4 ; System . out . print ( heightCalculate ( H , n , m ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def heightCalculate ( H , n , m ) : NEWLINE INDENT N = n * 1.0 NEWLINE M = m * 1.0 NEWLINE h = H * sqrt ( N / ( N + M ) ) NEWLINE return h NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT H = 10 NEWLINE n = 3 NEWLINE m = 4 NEWLINE print ( \"{0:.6}\" . format ( heightCalculate ( H , n , m ) ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1182_A_703",
            "java_code": "import java . util . * ;  public class Absolutezero {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t1 = sc . nextInt ( ) ; if ( t1 % 2 != 0 ) { System . out . println ( 0 ) ; } else { System . out . println ( ( int ) Math . pow ( 2 , t1 / 2 ) ) ; }    }  }",
            "python_code": "import sys  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_344_B_704",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class B344 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) flag = 0 if b >= c : x = b - c a -= x if a >= 0 and a % 2 == 0 : z = a // 2 if c - z >= 0 : print ( x + z , c - z , z ) else : flag = 1 else : flag = 1 else : x = c - b a -= x if a >= 0 and a % 2 == 0 : z = a // 2 if b - z >= 0 : print ( z , b - z , x + z ) else : flag = 1 else : flag = 1 if flag : print ( \"Impossible\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_924_B_705",
            "java_code": "import java . io . * ; import java . util . * ; public class Lvl3Taser {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) c = 0 ans = - 1 for i in range ( n - 1 ) : while c < n - 1 and a [ c + 1 ] - a [ i ] <= m : c += 1 if i < c - 1 : ans = max ( ans , ( a [ c ] - a [ i + 1 ] ) / ( a [ c ] - a [ i ] ) ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1008_B_706",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; List < int [ ] > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int [ ] ar = new int [ 2 ] ; ar [ 0 ] = sc . nextInt ( ) ; ar [ 1 ] = sc . nextInt ( ) ; list . add ( ar ) ; } boolean check = true ;",
            "python_code": "n = int ( input ( ) ) ans = \"YES\" num = 0 for i in range ( n ) : w , h = map ( int , input ( ) . split ( ) ) if i == 0 : num = max ( w , h ) else : if max ( w , h ) <= num : num = max ( w , h ) elif min ( w , h ) <= num : num = min ( w , h ) else : ans = \"NO\" print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_835_A_707",
            "java_code": "import java . io . * ; class GFG { static void anglechordtang ( int z ) { System . out . print ( \"The angle between tangent\" + \" and the chord is \" + z + \" degrees\" ) ; } public static void main ( String [ ] args ) { int z = 48 ; anglechordtang ( z ) ; } }",
            "python_code": "def anglechordtang ( z ) : NEWLINE INDENT print ( \"The angle between tangent\" , \"and the chord is\" , z , \"degrees\" ) ; NEWLINE DEDENT z = 48 ; NEWLINE anglechordtang ( z ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p040_A_708",
            "java_code": "public final class p040 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p040 ( ) . run ( ) ) ; } public String run ( ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i < 1000000 ; i ++ ) sb . append ( i ) ; int prod = 1 ; for ( int i = 0 ; i <= 6 ; i ++ ) prod *= sb . charAt ( Library . pow ( 10 , i ) - 1 ) - '0' ; return Integer . toString ( prod ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT s = \"\" . join ( str ( i ) for i in range ( 1 , 1000000 ) ) NEWLINE ans = 1 NEWLINE for i in range ( 7 ) : NEWLINE INDENTINDENT ans *= int ( s [ 10 ** i - 1 ] ) NEWLINE DEDENT return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_97_A_709",
            "java_code": "class GFG { static boolean isEven ( int n ) { if ( ( n ^ 1 ) == n + 1 ) return true ; else return false ; } public static void main ( String [ ] args ) { int n = 100 ; System . out . print ( isEven ( n ) == true ? \"Even\" : \"Odd\" ) ; } }",
            "python_code": "def isEven ( n ) : NEWLINE INDENT if ( n ^ 1 == n + 1 ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return False ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 100 ; NEWLINE print ( \"Even\" ) if isEven ( n ) else print ( \"Odd\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_710_A_710",
            "java_code": "import java . util . Arrays ; class GFG { static void maxSum ( int [ ] a , int n ) { int maxAnd = Arrays . stream ( a ) . max ( ) . getAsInt ( ) ; int maxOR = 0 ; for ( int i = 0 ; i < n ; i ++ ) { maxOR |= a [ i ] ; } System . out . println ( ( maxAnd + maxOR ) ) ; } public static void main ( String [ ] args ) { int n = 4 ; int [ ] a = { 3 , 5 , 6 , 1 } ; maxSum ( a , n ) ; } }",
            "python_code": "def maxSum ( a , n ) : NEWLINE INDENT maxAnd = max ( a ) NEWLINE maxOR = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT maxOR |= a [ i ] NEWLINE DEDENT print ( maxAnd + maxOR ) NEWLINE DEDENT n = 4 NEWLINE a = [ 3 , 5 , 6 , 1 ] NEWLINE maxSum ( a , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3843_A_711",
            "java_code": "class GFG { static int countSC ( int N ) { int res = ( int ) Math . sqrt ( N ) + ( int ) Math . cbrt ( N ) - ( int ) ( Math . sqrt ( Math . cbrt ( N ) ) ) ; return res ; } public static void main ( String [ ] args ) { int N = 20 ; System . out . println ( \"Number of squares \" + \"and cubes is \" + countSC ( N ) ) ; } }",
            "python_code": "import math NEWLINE def countSC ( N ) : NEWLINE INDENT res = ( int ( math . sqrt ( N ) ) + int ( N ** ( 1 / 3 ) ) - int ( math . sqrt ( N ** ( 1 / 3 ) ) ) ) NEWLINE return res NEWLINE DEDENT N = 20 NEWLINE print ( \"Number of squares and cubes is\" , countSC ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_612_B_712",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int a [ ] = new int [ n ] ; long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ input . nextInt ( ) - 1 ] = i ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { sum += Math . abs ( a [ i ] - a [ i + 1 ] ) ; } System . out . println ( sum ) ; } }",
            "python_code": "n = int ( input ( ) ) f = [ int ( x ) for x in input ( ) . split ( ) ]  main = [ ] for i in range ( n ) : main . append ( ( f [ i ] , i ) ) main . sort ( )  ans = 0 for i in range ( n - 1 ) : ans += abs ( main [ i ] [ 1 ] - main [ i + 1 ] [ 1 ] )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_708_A_713",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . IOException ; import java . util . StringTokenizer ; import java . util . Arrays ; public class Solution { public static void main ( String [ ] args ) { try ( BufferedReader in = new BufferedReader ( new InputStreamReader ( System . in ) ) ) { char [ ] word = in . readLine ( ) . toCharArray ( ) ; boolean flag = false ;",
            "python_code": "s = input ( ) if len ( set ( s ) ) == 1 and s [ 0 ] == 'a' : print ( s [ : - 1 ] + 'z' ) exit ( ) j = 0 for i in range ( len ( s ) ) : if s [ i ] == 'a' and j != 0 : print ( s [ i : ] ) break else : if s [ i ] == 'a' : print ( s [ i ] , end = '' ) else : j += 1 print ( chr ( ord ( s [ i ] ) - 1 ) , end = '' ) print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1056_A_714",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ 101 ] ; for ( int i = 0 ; i < n ; i ++ ) { int s = sc . nextInt ( ) ; for ( int j = 0 ; j < s ; j ++ ) { int p = sc . nextInt ( ) ; a [ p ] ++ ; if ( a [ p ] == n ) System . out . print ( p + \" \" ) ; } } } }",
            "python_code": "t = int ( input ( ) ) l = [ ] for i in range ( t ) : h = list ( map ( int , input ( ) . split ( ) ) ) l . append ( [ ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1921_A_715",
            "java_code": "class GFG { static int Remainder ( String str , int R ) { int len = str . length ( ) ; int Num , Rem = 0 ; for ( int i = 0 ; i < len ; i ++ ) { Num = Rem * 10 + ( str . charAt ( i ) - '0' ) ; Rem = Num % R ; } return Rem ; } public static void main ( String [ ] args ) { String str = \"13589234356546756\" ; int R = 13 ; System . out . println ( Remainder ( str , R ) ) ; } }",
            "python_code": "def Remainder ( str , R ) : NEWLINE INDENT l = len ( str ) NEWLINE Rem = 0 NEWLINE for i in range ( l ) : NEWLINE INDENTINDENT Num = Rem * 10 + ( ord ( str [ i ] ) - ord ( '0' ) ) NEWLINE Rem = Num % R NEWLINE DEDENT return Rem NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str = \"13589234356546756\" NEWLINE R = 13 NEWLINE print ( Remainder ( str , R ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_220_A_716",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr2 = sorted ( arr ) count = 0 a = 0 for i in range ( n ) : if arr [ i ] != arr2 [ i ] : count += 1 k = arr [ i ] arr [ i ] = arr2 [ i ] z = arr . index ( arr2 [ i ] ) arr [ z ] = k  if count > 2 : a = 1 breakif a == 0 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_915_A_717",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import math   def func ( num_buckets , length , buckets ) : lista = [ ] for i in range ( num_buckets ) : if ( length % buckets [ i ] == 0 ) : lista . append ( buckets [ i ] ) return int ( length / max ( lista ) )  num_buckets , length = list ( map ( int , input ( ) . split ( ) ) ) buckets = list ( map ( int , input ( ) . split ( ) ) )  hours = func ( num_buckets , length , buckets )  print ( hours )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_68_A_718",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; import java . util . StringTokenizer ;  public class Gym { ",
            "python_code": "p1 , p2 , p3 , p4 , a , b = map ( int , input ( ) . split ( ) )  m = min ( p1 , p2 , p3 , p4 )  if m - a <= 0 : NEWLINE INDENT print ( 0 ) elif m > b : NEWLINE print ( b - a + 1 ) else : NEWLINE print ( m - a ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1242_A_719",
            "java_code": "import java . util . Scanner ;  public class TilePainting {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) count = 1 divisor = nfor i in range ( 2 , n + 1 ) : if i * i > n : break if n % i == 0 : while n % i == 0 : n //= i if n == 1 : print ( i ) else : print ( 1 ) exit ( 0 ) print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1187_A_720",
            "java_code": "import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ;  public class a { static int [ ] count , count1 ; static long [ ] arr ; static char [ ] ch , ch1 ; static long [ ] darr ; static long [ ] [ ] mat , mat1 ; static long x ; static long maxl ; static double dec ; static String s ;",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n , s , t = map ( int , input ( ) . split ( ) ) if s + t > n : print ( max ( s , t ) - ( ( s + t ) - n ) + 1 ) else : print ( max ( s , t ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4710_A_721",
            "java_code": "import java . io . * ; class GFG { static void findsolution ( long n , long x , long y ) { if ( ( y - n + 1 ) * ( y - n + 1 ) + n - 1 < x || y < n ) { System . out . println ( \"No solution\" ) ; return ; } System . out . println ( y - n + 1 ) ; while ( n -- > 1 ) System . out . println ( \"1\" ) ; } public static void main ( String [ ] args ) { long n , x , y ; n = 5 ; x = 15 ; y = 15 ; findsolution ( n , x , y ) ; } }",
            "python_code": "def findsolution ( n , x , y ) : NEWLINE INDENT if ( ( y - n + 1 ) * ( y - n + 1 ) + n - 1 < x or y < n ) : NEWLINE INDENTINDENT print ( \"No solution\" ) ; NEWLINE return ; NEWLINE DEDENT print ( y - n + 1 ) ; NEWLINE while ( n > 1 ) : NEWLINE INDENTINDENT print ( 1 ) ; NEWLINE n -= 1 ; NEWLINE DEDENT DEDENT n = 5 ; NEWLINE x = 15 ; NEWLINE y = 15 ; NEWLINE findsolution ( n , x , y ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4513_A_722",
            "java_code": "class GFG { static int toggle ( int n ) { int temp = 1 ; while ( temp <= n ) { n = n ^ temp ; temp = temp << 1 ; } return n ; } public static void main ( String arg [ ] ) { int n = 10 ; n = toggle ( n ) ; System . out . print ( n ) ; } }",
            "python_code": "def toggle ( n ) : NEWLINE INDENT temp = 1 NEWLINE while ( temp <= n ) : NEWLINE INDENTINDENT n = n ^ temp NEWLINE temp = temp << 1 NEWLINE DEDENT return n NEWLINE DEDENT n = 10 NEWLINE n = toggle ( n ) NEWLINE print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_675_A_723",
            "java_code": "import java . util . * ; public class f {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextInt ( ) ; long b = sc . nextInt ( ) ; long c = sc . nextInt ( ) ; if ( c == 0 ) System . out . println ( ( a == b ) ? \"YES\" : \"NO\" ) ; else System . out . println ( ( ( b - a ) % c == 0 && ( b - a ) / c >= 0 ) ? \"YES\" : \"NO\" ) ;  }  }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) )  if a == b : print ( 'YES' ) elif c == 0 or b > a and c < 0 or b < a and c > 0 : print ( 'NO' ) else : c = abs ( c )  if ( b - a ) % c == 0 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4514_A_724",
            "java_code": "class GFG { static int setAllBitsAfterMSB ( int n ) { n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; return n ; } static int toggle ( int n ) { n = n ^ setAllBitsAfterMSB ( n ) ; return n ; } public static void main ( String arg [ ] ) { int n = 10 ; n = toggle ( n ) ; System . out . print ( n ) ; } }",
            "python_code": "def setAllBitsAfterMSB ( n ) : NEWLINE INDENT n |= n >> 1 NEWLINE n |= n >> 2 NEWLINE n |= n >> 4 NEWLINE n |= n >> 8 NEWLINE n |= n >> 16 NEWLINE return n NEWLINE DEDENT def toggle ( n ) : NEWLINE INDENT n = n ^ setAllBitsAfterMSB ( n ) NEWLINE return n NEWLINE DEDENT n = 10 NEWLINE n = toggle ( n ) NEWLINE print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_404_A_725",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "import sys , os NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3592_A_726",
            "java_code": "class GFG { public static int countPairs ( int n ) { int num = ( ( n / 2 ) + 1 ) ; int max = n % num ; int count = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n ; j ++ ) { int val = ( ( n % i ) % j ) % n ; if ( val == max ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( countPairs ( n ) ) ; } }",
            "python_code": "def countPairs ( n ) : NEWLINE INDENT num = ( ( n // 2 ) + 1 ) NEWLINE Max = n % num NEWLINE count = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , n + 1 ) : NEWLINE INDENTINDENTINDENT val = ( ( n % i ) % j ) % n NEWLINE if ( val == Max ) : NEWLINE INDENTINDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT DEDENT return count NEWLINE DEDENT n = 5 NEWLINE print ( countPairs ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3513_A_727",
            "java_code": "import java . io . * ; class GFG { static int fib ( int n ) { if ( n <= 1 ) return n ; return fib ( n - 1 ) + fib ( n - 2 ) ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( fib ( n ) ) ; } }",
            "python_code": "def fib ( n ) : NEWLINE INDENT if ( n <= 1 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT return fib ( n - 1 ) + fib ( n - 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 6 NEWLINE print ( fib ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4812_A_728",
            "java_code": "class GFG { static void printPermutation ( int n , int k ) { for ( int i = 1 ; i <= n ; i ++ ) { int x = 2 * i - 1 ; int y = 2 * i ; if ( i <= k ) System . out . print ( y + \" \" + x + \" \" ) ; else System . out . print ( x + \" \" + y + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 2 , k = 1 ; printPermutation ( n , k ) ; } }",
            "python_code": "def printPermutation ( n , k ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT x = 2 * i - 1 ; NEWLINE y = 2 * i ; NEWLINE if ( i <= k ) : NEWLINE INDENTINDENTINDENT print ( y , x , end = \" \" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT print ( x , y , end = \" \" ) ; NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; k = 1 ; NEWLINE printPermutation ( n , k ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_999_B_729",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( n % i == 0 ) { String s1 = s . substring ( 0 , i ) ; String s2 = s . substring ( i ) ; StringBuilder stringBuilder = new StringBuilder ( s1 ) ; s = stringBuilder . reverse ( ) + s2 ;",
            "python_code": "import sysinput = sys . stdin . readline  n = int ( input ( ) ) s = input ( ) for i in range ( 1 , n + 1 ) : if n % i : continue s = s [ : i ] [ : : - 1 ] + s [ i : ] print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1095_B_730",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static FileWriter fw ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = Integer . MAX_VALUE ;",
            "python_code": "n = int ( input ( ) ) a = [ int ( x ) for x in input ( ) . split ( ) ] a . sort ( ) print ( min ( a [ - 2 ] - a [ 0 ] , a [ - 1 ] - a [ 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3211_A_731",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static void findgcd ( int n , int x , int y ) { int g = gcd ( x , y ) ; for ( int i = 0 ; i < g ; i ++ ) System . out . print ( n ) ; } public static void main ( String [ ] args ) { int n = 123 , x = 5 , y = 2 ; findgcd ( n , x , y ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( a == 0 ) : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def findgcd ( n , x , y ) : NEWLINE INDENT g = gcd ( x , y ) NEWLINE for i in range ( g ) : NEWLINE INDENTINDENT print ( n ) NEWLINE DEDENT DEDENT n = 123 NEWLINE x = 5 NEWLINE y = 2 NEWLINE findgcd ( n , x , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_246_A_732",
            "java_code": "import java . util . * ; public class BuggySorting {  public static void main ( String [ ] args ) {",
            "python_code": "import mathdef solve ( n ) : if n <= 2 : return [ - 1 ] return [ i for i in range ( n , 0 , - 1 ) ] def main ( ) : n = int ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5018_A_733",
            "java_code": "public class GFG { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 2 ) + 3 * n - 5 ; } public static void main ( String args [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 2 * pow ( n , 2 ) + 3 * n - 5 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_205_A_734",
            "java_code": "import java . util . Scanner ;  public class problem91 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) min_idx = - 1 min_dist = float ( \"inf\" )  for idx , d in enumerate ( map ( int , input ( ) . split ( ) ) ) : if d == min_dist : min_idx = - 1 elif d < min_dist : min_idx = idx + 1 min_dist = min ( min_dist , d )  if min_idx >= 0 : print ( min_idx ) else : print ( \"Still Rozdil\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2755_A_735",
            "java_code": "class GFG { static boolean check ( String s ) { for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ ) if ( s . charAt ( i ) == s . charAt ( i + 1 ) ) return true ; return false ; } public static void main ( String [ ] args ) { String s = \"xzyyz\" ; if ( check ( s ) ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "def check ( s ) : NEWLINE INDENT for i in range ( 0 , len ( s ) ) : NEWLINE INDENTINDENT if ( s [ i ] == s [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT return False NEWLINE DEDENT s = \"xzyyz\" NEWLINE if ( check ( s ) ) : NEWLINE INDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_446_A_736",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1371_A_737",
            "java_code": "import java . util . Scanner ;  public class A1371 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; System . out . println ( n % 2 == 0 ? n / 2 : ( n + 1 ) / 2 ) ; } } }",
            "python_code": "for x in range ( int ( input ( ) ) ) : n = int ( input ( ) ) if n % 2 == 0 : print ( n // 2 ) else : print ( n // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1091_B_738",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public final class new_year { public static void main ( String [ ] args ) throws java . lang . Exception { Reader r = new Reader ( ) ; r . init ( System . in ) ; int n = r . nextInt ( ) ; int [ ] x = new int [ n ] ; int [ ] y = new int [ n ] ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ;",
            "python_code": "n = int ( input ( ) ) l1 = [ ] for i in range ( n ) : l1 . append ( [ int ( j ) for j in input ( ) . split ( ) ] ) l2 = [ ] for i in range ( n ) : l2 . append ( [ int ( j ) for j in input ( ) . split ( ) ] ) l1 . sort ( ) l2 . sort ( ) x = l1 [ 0 ] [ 0 ] + l2 [ - 1 ] [ 0 ] y = l1 [ 0 ] [ 1 ] + l2 [ - 1 ] [ 1 ] print ( x , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_180_A_739",
            "java_code": "import java . io . BufferedInputStream ; import java . io . IOException ; import java . util . * ;  public class Main { static int f [ ] [ ] = new int [ 201 ] [ 201 ] ;",
            "python_code": "import sysn , m , * inp = map ( int , sys . stdin . read ( ) . split ( ) )  inp . reverse ( ) f = [ [ 0 for x in range ( 201 ) ] for y in range ( 201 ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_610_A_740",
            "java_code": "import java . util . Scanner ;  public class _0669PashaandStick {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n % 2 != 0 ) { System . out . println ( 0 ) ; } else { int val = n / 2 ; val -- ; System . out . println ( val / 2 ) ; } }  }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 1 : print ( 0 ) else : target = n // 2 ans = ( target - 1 ) // 2 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4460_A_741",
            "java_code": "class GFG { static int assignValue ( int a , int b , int x ) { int arr [ ] = { a , b } ; return ( arr [ x ] ) ; } public static void main ( String [ ] args ) { int y = assignValue ( 3 , 7 , 0 ) ; System . out . println ( y ) ; } }",
            "python_code": "def assignValue ( a , b , x ) : NEWLINE INDENT arr = [ a , b ] NEWLINE return ( arr [ x ] ) NEWLINE DEDENT y = assignValue ( 3 , 7 , 0 ) NEWLINE print ( y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4845_A_742",
            "java_code": "class GFG { static void print ( int n ) { System . out . println ( n + n / 2 ) ; for ( int i = 2 ; i <= n ; i += 2 ) System . out . print ( i + \" \" ) ; for ( int i = 1 ; i <= n ; i += 2 ) System . out . print ( i + \" \" ) ; for ( int i = 2 ; i <= n ; i += 2 ) System . out . print ( i + \" \" ) ; } public static void main ( String [ ] args ) { int n = 3 ; print ( n ) ; } }",
            "python_code": "def bomb_required ( n ) : NEWLINE INDENT print ( n + n // 2 ) NEWLINE for i in range ( 2 , n + 1 , 2 ) : NEWLINE INDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT for i in range ( 1 , n + 1 , 2 ) : NEWLINE INDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT for i in range ( 2 , n , 2 ) : NEWLINE INDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT DEDENT bomb_required ( 3 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1776_A_743",
            "java_code": "import java . io . * ; class GFG { static int nthTerm ( int n ) { return ( int ) Math . pow ( n , 2 ) + 4 * n ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return n ** 2 + 4 * n ; NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_361_A_744",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) System . out . print ( k + \" \" ) ; else System . out . print ( 0 + \" \" ) ; } System . out . println ( ) ; } } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = k - n + 1 for i in range ( n ) : for j in range ( n ) : if i == j : print ( a , end = \" \" ) else : print ( 1 , end = \" \" ) print ( \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_44_A_745",
            "java_code": "import java . util . * ;  public class P3 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; Map < String , Integer > map = new HashMap ( ) ; int c = 0 ; while ( t -- > 0 ) { String breed = sc . next ( ) ; String color = sc . next ( ) ; String m = breed + '.' + color ; if ( ! map . containsKey ( m ) ) { map . put ( m , 1 ) ; c ++ ; } } System . out . println ( c ) ; } }",
            "python_code": "n = int ( input ( ) ) leaves = [ ] for i in range ( n ) : leaves . append ( input ( ) ) ; print ( len ( set ( leaves ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_489_B_746",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) ) nn = list ( map ( int , input ( ) . split ( ) ) ) m = int ( input ( ) ) mm = list ( map ( int , input ( ) . split ( ) ) ) nn . sort ( ) mm . sort ( ) i = 0j = 0 count = 0  while i < n and j < m : if abs ( nn [ i ] - mm [ j ] ) <= 1 : count += 1 i += 1 j += 1 elif nn [ i ] < mm [ j ] : i += 1 else : j += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2316_A_747",
            "java_code": "import java . util . * ; class solution { static long minimumMoves ( int a [ ] , int n ) { long operations = 0 ; Arrays . sort ( a ) ; for ( int i = 0 ; i < n ; i ++ ) operations += ( long ) Math . abs ( a [ i ] - ( i + 1 ) ) ; return operations ; } public static void main ( String args [ ] ) { int arr [ ] = { 5 , 3 , 2 } ; int n = arr . length ; System . out . print ( minimumMoves ( arr , n ) ) ; } }",
            "python_code": "def minimumMoves ( a , n ) : NEWLINE INDENT operations = 0 NEWLINE a . sort ( reverse = False ) NEWLINE for i in range ( 0 , n , 1 ) : NEWLINE INDENTINDENT operations = operations + abs ( a [ i ] - ( i + 1 ) ) NEWLINE DEDENT return operations NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 5 , 3 , 2 ] NEWLINE n = len ( arr ) NEWLINE print ( minimumMoves ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1406_A_748",
            "java_code": "import java . util . * ; public class SubsetMex {  public static void main ( String [ ] args ) {",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE s = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE a = [ 0 ] * 102 NEWLINE b = [ 0 ] * 102 NEWLINE s . sort ( ) NEWLINE for i in s : if NEWLINE a [ i ] == 0 : a [ i ] += 1 else : b [ i ] += 1 NEWLINE print ( a . index ( 0 ) + b . index ( 0 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1351_A_749",
            "java_code": "import java . util . Scanner ;  public class Task { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; while ( t -- > 0 ) { System . out . println ( in . nextInt ( ) + in . nextInt ( ) ) ; } } }",
            "python_code": "t = int ( input ( ) )  while t > 0 : t -= 1 a , b = map ( int , input ( ) . split ( \" \" ) ) print ( a + b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3680_A_750",
            "java_code": "import java . io . * ; class GFG { static int minJumps ( int a , int b , int d ) { int temp = a ; a = Math . min ( a , b ) ; b = Math . max ( temp , b ) ; if ( d >= b ) return ( d + b - 1 ) / b ; if ( d == 0 ) return 0 ; if ( d == a ) return 1 ; return 2 ; } public static void main ( String [ ] args ) { int a = 3 , b = 4 , d = 11 ; System . out . println ( minJumps ( a , b , d ) ) ; } }",
            "python_code": "def minJumps ( a , b , d ) : NEWLINE INDENT temp = a NEWLINE a = min ( a , b ) NEWLINE b = max ( temp , b ) NEWLINE if ( d >= b ) : NEWLINE INDENTINDENT return ( d + b - 1 ) / b NEWLINE DEDENT if ( d == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT if ( d == a ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return 2 NEWLINE DEDENT a , b , d = 3 , 4 , 11 NEWLINE print ( int ( minJumps ( a , b , d ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_205_B_751",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) x = list ( map ( int , input ( ) . split ( ) ) ) c = 0 s = 0 for i in range ( 1 , n ) : x [ i ] += c if x [ i ] < x [ i - 1 ] : c += x [ i - 1 ] - x [ i ] x [ i ] = x [ i - 1 ] print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1141_B_752",
            "java_code": "import java . util . * ;  public class Maximal_Continuous_Rest { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long [ ] arr = new long [ ( int ) ( 2 * n ) ] ; List < Long > l = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) p = [ ] ; c = 0 for i in range ( len ( a ) ) : a . append ( a [ i ] ) i = 0 while i < len ( a ) : if a [ i ] == 1 : c += 1 else : p . append ( c ) c = 0 i += 1 print ( max ( p ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_794_A_753",
            "java_code": "import java . util . Scanner ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int result = 0 , a , b , c ; a = sc . nextInt ( ) ; b = sc . nextInt ( ) ; c = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc . nextInt ( ) ; if ( x > b && x < c ) { result ++ ; } } System . out . println ( result ) ;  } }",
            "python_code": "s , l , r = [ int ( i ) for i in input ( ) . split ( \" \" ) ] input ( )  temp = [ 1 for i in input ( ) . split ( \" \" ) if l < int ( i ) < r ] print ( sum ( temp ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3803_A_754",
            "java_code": "class GFG { static int Max_Sum ( int n ) { return ( n * ( n - 1 ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 8 ; System . out . println ( Max_Sum ( n ) ) ; } }",
            "python_code": "def Max_Sum ( n ) : NEWLINE INDENT return ( n * ( n - 1 ) ) // 2 ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 8 ; NEWLINE print ( Max_Sum ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1245_A_755",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { int g = gcd ( s . nextInt ( ) , s . nextInt ( ) ) ; if ( g > 1 ) { System . out . println ( \"Infinite\" ) ; } else { System . out . println ( \"Finite\" ) ; } } } public static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } return gcd ( b , a % b ) ; } }",
            "python_code": "import mathfor _ in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) if math . gcd ( a , b ) != 1 : print ( \"INFINITE\" ) else : print ( \"FINITE\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_867_A_756",
            "java_code": "class Solution { public int [ ] [ ] transpose ( int [ ] [ ] A ) { int R = A . length , C = A [ 0 ] . length ; int [ ] [ ] ans = new int [ C ] [ R ] ; for ( int r = 0 ; r < R ; ++ r ) for ( int c = 0 ; c < C ; ++ c ) { ans [ c ] [ r ] = A [ r ] [ c ] ; } return ans ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def transpose ( self , A ) : NEWLINE INDENTINDENT R , C = len ( A ) , len ( A [ 0 ] ) NEWLINE ans = [ [ None ] * R for _ in xrange ( C ) ] NEWLINE for r , row in enumerate ( A ) : NEWLINE INDENTINDENTINDENT for c , val in enumerate ( row ) : NEWLINE INDENTINDENTINDENTINDENT ans [ c ] [ r ] = val NEWLINE DEDENT DEDENT return ans NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1469_B_757",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "import osimport NEWLINE sysfrom NEWLINE io NEWLINE import BytesIO , IOBase   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_194_B_758",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Ideone { static long gcd ( long a , long b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; }",
            "python_code": "n = int ( input ( ) ) c = list ( map ( int , input ( ) . split ( ) ) ) import mathfor i in c : print ( int ( i * 4 / math . gcd ( i * 4 , i + 1 ) ) + 1 )        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1887_A_759",
            "java_code": "class GFG { static int setBitNumber ( int n ) { int k = ( int ) ( Math . log ( n ) / Math . log ( 2 ) ) ; return ( int ) ( Math . pow ( 2 , k ) ) ; } public static void main ( String arg [ ] ) { int n = 273 ; System . out . print ( setBitNumber ( n ) ) ; } }",
            "python_code": "import math NEWLINE def setBitNumber ( n ) : NEWLINE INDENT k = int ( math . log ( n , 2 ) ) NEWLINE return 2 ** k NEWLINE DEDENT n = 273 NEWLINE print ( setBitNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4615_A_760",
            "java_code": "class GFG { static void findEquation ( int a , int b ) { int sum = ( a + b ) ; int product = ( a * b ) ; System . out . println ( \"x^2 - (\" + sum + \"x) + (\" + product + \") = 0\" ) ; } public static void main ( String args [ ] ) { int a = 2 , b = 3 ; findEquation ( a , b ) ; } }",
            "python_code": "def findEquation ( a , b ) : NEWLINE INDENT summ = ( a + b ) NEWLINE product = ( a * b ) NEWLINE print ( \"x^2 - (\" , summ , \"x) + (\" , product , \") = 0\" ) NEWLINE DEDENT a = 2 NEWLINE b = 3 NEWLINE findEquation ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_946_B_761",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;   public class Problem_Solving1 { public static void main ( String [ ] args ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) while a != 0 and b != 0 : if a >= 2 * b : a = a % ( 2 * b ) elif b >= 2 * a : b = b % ( 2 * a ) else : print ( a , b ) exit ( 0 ) print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5166_A_762",
            "java_code": "class GFG { static void powerSet ( String str , int index , String curr ) { int n = str . length ( ) ; if ( index == n ) { System . out . println ( curr ) ; return ; } powerSet ( str , index + 1 , curr + str . charAt ( index ) ) ; powerSet ( str , index + 1 , curr ) ; } public static void main ( String [ ] args ) { String str = \"abc\" ; int index = 0 ; String curr = \"\" ; powerSet ( str , index , curr ) ; } }",
            "python_code": "def powerSet ( string , index , curr ) : NEWLINE INDENT if index == len ( string ) : NEWLINE INDENTINDENT print ( curr ) NEWLINE return NEWLINE DEDENT powerSet ( string , index + 1 , curr + string [ index ] ) NEWLINE powerSet ( string , index + 1 , curr ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s1 = \"abc\" NEWLINE index = 0 NEWLINE curr = \"\" NEWLINE powerSet ( s1 , index , curr ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1100_B_763",
            "java_code": "import java . io . * ; import java . util . * ;",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_344_B_764",
            "java_code": " import java . io . BufferedReader ; import java . io . BufferedWriter ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . OutputStreamWriter ; import java . io . PrintWriter ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ;  import static java . lang . System . out ; public class c693a {",
            "python_code": "a , b , c = input ( ) . split ( ) a = int ( a ) b = int ( b ) c = int ( c ) sum = a + b + cif sum % 2 == 0 : sum /= 2 x = int ( sum - c ) y = int ( sum - a ) z = int ( sum - b ) if x >= 0 and y >= 0 and z >= 0 : print ( x , y , z ) else : print ( 'Impossible\\n' ) else : print ( 'Impossible\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3117_A_765",
            "java_code": "class GFG { static int countIntersections ( int n ) { return n * ( n - 1 ) / 2 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countIntersections ( n ) ) ; } }",
            "python_code": "def countIntersections ( n ) : NEWLINE INDENT return n * ( n - 1 ) // 2 NEWLINE DEDENT n = 3 NEWLINE print ( countIntersections ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1130_B_766",
            "java_code": "import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;   public class scratch_25 {",
            "python_code": "l2 = [ ] n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( 2 * n ) : l2 . append ( [ l [ i ] , i ] ) l2 . sort ( ) sd , dd = l2 [ 0 ] [ 1 ] , l2 [ 1 ] [ 1 ] for i in range ( 2 , 2 * n ) : if i % 2 : dd += abs ( l2 [ i ] [ 1 ] - l2 [ i - 2 ] [ 1 ] ) else : sd += abs ( l2 [ i ] [ 1 ] - l2 [ i - 2 ] [ 1 ] ) print ( sd + dd ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1042_A_767",
            "java_code": "import java . io . * ;  import java . util . * ; public class Solution {",
            "python_code": "n = int ( input ( ) ) m = int ( input ( ) ) a = [ ] for i in range ( n ) : a . append ( int ( input ( ) ) ) k1 = max ( a ) kmax = k1 + m   aa = m / nk2 = sum ( a ) + m + n - 1 kmin = k2 // n   print ( max ( kmin , k1 ) , kmax ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_117_A_768",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . StringTokenizer ;  public class Main {  public static void main ( String [ ] args ) { InputReader in = new InputReader ( ) ; PrintWriter out = new PrintWriter ( System . out ) ; ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) k = 2 * ( m - 1 ) p = [ 0 ] * nfor i in range ( n ) : s , f , t = map ( int , input ( ) . split ( ) ) d = t % k if s < f : p [ i ] = ( k if s <= d else 0 ) + f - 1 + t - d elif f < s : p [ i ] = ( k if d + s > k + 1 else 0 ) + k + 1 - f + t - d else : p [ i ] = tprint ( '\\n' . join ( map ( str , p ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_447_B_769",
            "java_code": "import java . util . * ; public class DZYLovesStrings {  public static void main ( String [ ] args ) {",
            "python_code": "str1 = input ( '' ) k = int ( input ( '' ) ) w = list ( map ( int , input ( ) . split ( ) ) ) p = max ( w ) pidx = w . index ( p ) + 97 q = chr ( pidx ) str2 = k * qstr3 = str1 + str2f = 0 for i in range ( 0 , len ( str3 ) ) : a = ord ( str3 [ i ] ) - 97 f = f + ( i + 1 ) * w [ a ] print ( f ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_914_B_770",
            "java_code": "import java . util . * ;  public class CodeForces914B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int [ ] a = new int [ 100000 + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ input . nextInt ( ) ] ++ ; } String ans = \"Agasa\" ; for ( int i = 1 ; i < a . length ; i ++ ) { if ( a [ i ] % 2 != 0 ) { ans = \"Conan\" ; break ; } }  System . out . println ( ans ) ;  } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) )  a . sort ( reverse = True ) ai = [ 1 ] * n  j = 0 for i in range ( 1 , n ) : if a [ i ] == a [ i - 1 ] : ai [ j ] += 1 else : j += 1  ai = ai [ : j + 1 ]  conan = Falsefor i in ai : if i % 2 : conan = True break  print ( \"Conan\" if conan else \"Agasa\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_80_B_771",
            "java_code": "import java . util . * ; public class Depression {  public static void main ( String [ ] args ) {",
            "python_code": "time = input ( ) NEWLINE if int ( time [ 0 ] + time [ 1 ] ) >= 12 : newtime = str ( int ( time [ 0 ] + time [ 1 ] ) - 12 ) . zfill ( 2 ) + time [ 2 : ]  else : newtime = time  hour = int ( newtime [ 0 ] + newtime [ 1 ] ) NEWLINE min = int ( newtime [ 3 ] + newtime [ 4 ] )  hourhand = 360 * ( hour / 12 ) + ( min / 60 ) * 30 NEWLINE minhand = 360 * ( min / 60 )  print ( hourhand , minhand )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_639_B_772",
            "java_code": "import java . util . * ; import java . io . * ;   public class Forces {  public static PrintWriter cout ; public static void main ( String ... arg ) {",
            "python_code": "n , d , h = list ( map ( int , input ( ) . split ( ) ) ) if 2 * h < d or ( h == d == 1 and n > 2 ) : print ( - 1 ) else : ans = [ ] z = 1 for i in range ( h ) : ans . append ( ( i + 1 , i + 2 ) ) z = i + 2 k = d - h if k > 0 : ans . append ( ( 1 , z + 1 ) ) z += 1 k -= 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4575_A_773",
            "java_code": "import java . io . * ; public class GFG { static int getTotalXorOfSubarrayXors ( int arr [ ] , int N ) { int res = 0 ; for ( int i = 0 ; i < N ; i ++ ) { int freq = ( i + 1 ) * ( N - i ) ; if ( freq % 2 == 1 ) res = res ^ arr [ i ] ; } return res ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 5 , 2 , 4 , 6 } ; int N = arr . length ; System . out . println ( getTotalXorOfSubarrayXors ( arr , N ) ) ; } }",
            "python_code": "def getTotalXorOfSubarrayXors ( arr , N ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT freq = ( i + 1 ) * ( N - i ) NEWLINE if ( freq % 2 == 1 ) : NEWLINE INDENTINDENTINDENT res = res ^ arr [ i ] NEWLINE DEDENT DEDENT return res NEWLINE DEDENT arr = [ 3 , 5 , 2 , 4 , 6 ] NEWLINE N = len ( arr ) NEWLINE print ( getTotalXorOfSubarrayXors ( arr , N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4693_A_774",
            "java_code": "import java . util . * ; class GFG { public static long rectCount ( int n , int m ) { return ( m * n * ( n + 1 ) * ( m + 1 ) ) / 4 ; } public static void main ( String [ ] args ) { int n = 5 , m = 4 ; System . out . println ( rectCount ( n , m ) ) ; } }",
            "python_code": "def rectCount ( n , m ) : NEWLINE INDENT return ( m * n * ( n + 1 ) * ( m + 1 ) ) // 4 NEWLINE DEDENT n , m = 5 , 4 NEWLINE print ( rectCount ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_697_A_775",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t , s , x ; boolean f = false ; t = sc . nextInt ( ) ; s = sc . nextInt ( ) ; x = sc . nextInt ( ) ; while ( t <= x ) { if ( t == x || t + s == x || t + s + 1 == x ) { System . out . println ( \"YES\" ) ; f = true ; break ; } t += s ; } if ( ! f ) System . out . println ( \"NO\" ) ; } }",
            "python_code": "import mathdef solve ( t , s , x ) : if x < t : return 'NO' if x == t : return 'YES' if x < t + s : return 'NO' if ( x - t ) % s == 0 or ( x - t - 1 ) % s == 0 : return 'YES' return 'NO'                    def main ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3445_A_776",
            "java_code": "class GFG { static void check ( int n ) { if ( n % 2 == 1 && n > 5 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } public static void main ( String [ ] args ) { int a = 3 ; int b = 7 ; check ( a ) ; check ( b ) ; } }",
            "python_code": "def check ( n ) : NEWLINE INDENT if n % 2 == 1 and n > 5 : NEWLINE INDENTINDENT print ( 'YES' ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( 'NO' ) NEWLINE DEDENT DEDENT def main ( ) : NEWLINE INDENT a = 3 NEWLINE b = 7 NEWLINE check ( a ) NEWLINE check ( b ) NEWLINE DEDENT main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1085_A_777",
            "java_code": "import java . util . * ; class GFG { static int maxSelectionCount ( int a [ ] , int n ) { int res = 0 ; Arrays . sort ( a ) ; int select = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] >= select ) { res ++ ; select ++ ; } } return res ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 2 , 1 , 3 , 5 , 1 , 4 } ; int N = arr . length ; System . out . println ( maxSelectionCount ( arr , N ) ) ; } }",
            "python_code": "def maxSelectionCount ( a , n ) : NEWLINE INDENT res = 0 ; NEWLINE a . sort ( ) ; NEWLINE select = 1 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( a [ i ] >= select ) : NEWLINE INDENTINDENTINDENT res += 1 ; NEWLINE select += 1 ; NEWLINE DEDENT DEDENT return res ; NEWLINE DEDENT arr = [ 4 , 2 , 1 , 3 , 5 , 1 , 4 ] ; NEWLINE N = len ( arr ) ; NEWLINE print ( maxSelectionCount ( arr , N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_A_778",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) l = 0 tmp = nwhile n > 0 : r = n % 10 n = n // 10 l += 1 if tmp < 10 : print ( 1 ) else : print ( ( r + 1 ) * ( 10 ** ( l - 1 ) ) - tmp ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_633_B_779",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ;",
            "python_code": "m = int ( input ( ) ) count = 0 i = n = 5 arr = [ ] while count <= m : while n % 5 == 0 : count += 1 n //= 5 if count == m : arr . append ( i ) i += 1 n = iif arr == [ ] : print ( 0 ) else : print ( 5 ) print ( * arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_961_A_780",
            "java_code": "import java . util . * ;   public class Practise { ",
            "python_code": "if __name__ == \"__main__\" : dic = { } n , m = map ( int , input ( ) . split ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) c = 0 for i in range ( n ) : dic . setdefault ( i + 1 , 0 ) for i in li : if 0 not in dic . values ( ) : c = c + 1 for j in range ( 1 , n + 1 ) : dic [ j ] = dic [ j ] - 1  dic [ i ] = dic [ i ] + 1 if 0 not in dic . values ( ) : c = c + 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4761_A_781",
            "java_code": "import java . io . * ; class GFG { static int MaximumHeight ( int [ ] a , int n ) { int result = 1 ; for ( int i = 1 ; i <= n ; ++ i ) { int y = ( i * ( i + 1 ) ) / 2 ; if ( y < n ) result = i ; else break ; } return result ; } public static void main ( String [ ] args ) { int [ ] arr = { 40 , 100 , 20 , 30 } ; int n = arr . length ; System . out . println ( MaximumHeight ( arr , n ) ) ; } }",
            "python_code": "def MaximumHeight ( a , n ) : NEWLINE INDENT result = 1 NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT y = ( i * ( i + 1 ) ) / 2 NEWLINE if ( y < n ) : NEWLINE INDENTINDENTINDENT result = i NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT DEDENT return result NEWLINE DEDENT arr = [ 40 , 100 , 20 , 30 ] NEWLINE n = len ( arr ) NEWLINE print ( MaximumHeight ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_524_A_782",
            "java_code": "import java . io . * ; import java . util . * ;  public class A { private BufferedReader reader ; private StreamTokenizer tokenizer ;",
            "python_code": "f = lambda : map ( int , input ( ) . split ( ) ) g = lambda x , y : d . setdefault ( x , set ( ) ) . add ( y ) d = { } m , k = f ( ) for i in range ( m ) : a , b = f ( ) g ( a , b ) g ( b , a ) t = sorted ( d ) for a in t : s = [ str ( b ) for b in t if a != b and b not in d [ a ] and len ( d [ a ] & d [ b ] ) * 100 >= k * len ( d [ a ] ) ] print ( str ( a ) + ':' , len ( s ) , ' ' . join ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2462_A_783",
            "java_code": "class GFG { static float Area ( float a ) { if ( a < 0 ) return - 1 ; float x = 0.464f * a ; float A = 0.70477f * ( float ) Math . pow ( x , 2 ) ; return A ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( String . format ( \"%.5f\" , Area ( a ) ) ) ; } }",
            "python_code": "import math as mt NEWLINE def Area ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = 0.464 * a NEWLINE A = 0.70477 * pow ( x , 2 ) NEWLINE return A NEWLINE DEDENT a = 5 NEWLINE print ( Area ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4054_A_784",
            "java_code": "class GFG { static int sumOfTheSeries ( int n ) { int sum_n = ( n * ( n + 1 ) / 2 ) ; int sum_sq_n = ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ; return ( sum_n + sum_sq_n ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . printf ( \"Sum = %d\" , sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT sum_n = int ( ( n * ( n + 1 ) / 2 ) ) ; NEWLINE sum_sq_n = int ( ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ) NEWLINE return ( sum_n + sum_sq_n ) ; NEWLINE DEDENT n = 5 NEWLINE ans = sumOfTheSeries ( n ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_605_A_785",
            "java_code": " import java . io . * ; import java . util . * ;  public class C335A { static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Kioken sc = new Kioken ( ) ;  public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "import math , sys , bisect , heapq , osfrom collections import defaultdict , Counter , dequefrom itertools import groupby , accumulatefrom functools import lru_cache NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1413_A_786",
            "java_code": "import java . util . Arrays ; class GFG { static int minXOR ( int arr [ ] , int n ) { Arrays . parallelSort ( arr ) ; int minXor = Integer . MAX_VALUE ; int val = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { val = arr [ i ] ^ arr [ i + 1 ] ; minXor = Math . min ( minXor , val ) ; } return minXor ; } public static void main ( String args [ ] ) { int arr [ ] = { 9 , 5 , 3 } ; int n = arr . length ; System . out . println ( minXOR ( arr , n ) ) ; } }",
            "python_code": "import sys NEWLINE def minXOR ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE minXor = int ( sys . float_info . max ) NEWLINE val = 0 NEWLINE for i in range ( 0 , n - 1 ) : NEWLINE INDENTINDENT val = arr [ i ] ^ arr [ i + 1 ] ; NEWLINE minXor = min ( minXor , val ) ; NEWLINE DEDENT return minXor NEWLINE DEDENT arr = [ 9 , 5 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( minXOR ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_A_787",
            "java_code": "import java . util . Scanner ; public class Test45 { public static void main ( String [ ] args ) { Scanner Input = new Scanner ( System . in ) ; int n = Input . nextInt ( ) ; int inches = ( n + 1 ) / 3 ; int feet = inches / 12 ; System . out . println ( feet + \" \" + ( inches - 12 * feet ) ) ; } }",
            "python_code": "s = int ( input ( ) ) f = 0 i = 0 while s >= 36 : s -= 36 f += 1 while s >= 3 : s -= 3 i += 1 if s == 2 : i += 1  while i >= 12 : f += 1 i -= 12   print ( f , end = ' ' ) print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3256_A_788",
            "java_code": "import java . util . * ; import static java . lang . Math . pow ; class Triangle { public static double numberOfTriangles ( int n ) { double ans = 2 * ( pow ( 3 , n ) ) - 1 ; return ans ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( numberOfTriangles ( n ) ) ; } }",
            "python_code": "def numberOfTriangles ( n ) : NEWLINE INDENT ans = 2 * ( pow ( 3 , n ) ) - 1 ; NEWLINE return ans ; NEWLINE DEDENT n = 2 NEWLINE print ( numberOfTriangles ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_34_A_789",
            "java_code": "import java . util . * ;",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) m = abs ( l [ 0 ] - l [ - 1 ] ) a , b = 1 , nfor i in range ( n - 1 ) : if m > abs ( l [ i ] - l [ i + 1 ] ) : m = abs ( l [ i ] - l [ i + 1 ] ) a , b = i + 1 , i + 2 print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_841_B_790",
            "java_code": "import java . util . * ; public class contest17 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) oddeven = [ ] s = sum ( a ) odd = 0 even = 0  for i in a : if ( i % 2 == 0 ) : even += 1 oddeven . append ( 0 ) else : odd += 1 oddeven . append ( 1 ) if ( s % 2 != 0 ) : print ( \"First\" ) else : if ( odd == 0 ) : print ( \"Second\" ) else : print ( \"First\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_580_B_791",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;",
            "python_code": "n , d = map ( int , input ( ) . split ( ) ) m = [ ] f = [ ] for _ in range ( n ) : mm , ff = map ( int , input ( ) . split ( ) ) m . append ( mm ) f . append ( ff ) z = sorted ( zip ( m , f ) ) i , j , maxi , cnt = 0 , 0 , 0 , 0 while j < n : if z [ j ] [ 0 ] - z [ i ] [ 0 ] < d : cnt += z [ j ] [ 1 ] maxi = max ( maxi , cnt ) j += 1 else : cnt -= z [ i ] [ 1 ] i += 1 print ( maxi ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1492_A_792",
            "java_code": "import java . util . * ; public class Swim3 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { long p = sc . nextLong ( ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long c = sc . nextLong ( ) ; System . out . println ( Math . min ( ( a - p % a ) % a , Math . min ( ( b - p % b ) % b , ( c - p % c ) % c ) ) ) ; } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : p , a , b , c = [ * map ( int , s . split ( ) ) ] ; print ( min ( - p % a , - p % b , - p % c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1371_A_793",
            "java_code": "class GFG { public static int countDyckPaths ( int n ) { int res = 1 ; for ( int i = 0 ; i < n ; ++ i ) { res *= ( 2 * n - i ) ; res /= ( i + 1 ) ; } return res / ( n + 1 ) ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( \"Number of Dyck Paths is \" + countDyckPaths ( n ) ) ; } }",
            "python_code": "def countDyckPaths ( n ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT res *= ( 2 * n - i ) NEWLINE res /= ( i + 1 ) NEWLINE DEDENT return res / ( n + 1 ) NEWLINE DEDENT n = 4 NEWLINE print ( \"Number of Dyck Paths is \" , str ( int ( countDyckPaths ( n ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1450_A_794",
            "java_code": "import java . util . * ;  public class M_Round_4 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ",
            "python_code": "import mathdef NEWLINE getint ( ) : NEWLINE return [ int ( i ) for i in input ( ) . split ( ) ] NEWLINE def getstr ( ) : return [ str ( i ) for i in input ( ) . split ( ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2545_A_795",
            "java_code": "import java . io . * ; class GFG { static int MAX = 100 ; static int summation ( int n ) { return n << ( n - 1 ) ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( summation ( n ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT return n << ( n - 1 ) ; NEWLINE DEDENT n = 2 ; NEWLINE print ( summation ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_488_A_796",
            "java_code": "import java . util . Scanner ; public class Solution { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; if ( n > - 2 ) { long div = n + 1 ; int z1 ; int rem ; for ( int i1 = 0 ; i1 < 10 ; i1 ++ ) { z1 = 0 ; div = n + i1 + 1 ; while ( div > 0 ) { rem = ( int ) div % 10 ; div = div / 10 ; if ( rem == 8 ) { z1 ++ ; }",
            "python_code": "n = int ( input ( ) ) c = 1 for i in range ( n + 1 , n + 100 ) : x = list ( str ( i ) ) if '8' in x : break c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_251_A_797",
            "java_code": "import java . util . * ; import java . lang . * ;",
            "python_code": "n , d = list ( map ( int , input ( ) . split ( ) ) ) array = list ( map ( int , input ( ) . split ( ) ) ) start = 0 end = 0 ans = 0  while end < n : while array [ end ] - array [ start ] > d : start += 1 k = end - start ans += k * ( k - 1 ) // 2 end += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1257_B_798",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "import sysinput = sys . stdin . readline  for test in range ( int ( input ( ) ) ) : x , y = [ int ( i ) for i in input ( ) . split ( ) ] if x == 1 : print ( \"YES\" if y == 1 else \"NO\" ) elif x <= 3 : print ( \"YES\" if 1 <= y <= 3 else \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_467_A_799",
            "java_code": "import java . util . * ; public class george { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int p = sc . nextInt ( ) ; int q = sc . nextInt ( ) ; if ( ( q - p ) >= 2 ) c ++ ; } System . out . println ( c ) ; } }",
            "python_code": "n = int ( input ( ) ) b = 0 for i in range ( n ) : a = list ( map ( int , input ( ) . split ( ) ) ) if ( a [ 1 ] - a [ 0 ] >= 2 ) : b += 1 print ( b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_534_B_800",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "start , end = map ( int , input ( ) . split ( ) ) t , d = map ( int , input ( ) . split ( ) ) ans = 0 for i in range ( t ) : if start > end : start , end = end , start ans += start start += dprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3072_A_801",
            "java_code": "class GFG { static void removeChar ( String s , char c ) { int j , count = 0 , n = s . length ( ) ; char [ ] t = s . toCharArray ( ) ; for ( int i = j = 0 ; i < n ; i ++ ) { if ( t [ i ] != c ) t [ j ++ ] = t [ i ] ; else count ++ ; } while ( count > 0 ) { t [ j ++ ] = '\\0' ; count -- ; } System . out . println ( t ) ; } public static void main ( String [ ] args ) { String s = \"geeksforgeeks\" ; removeChar ( s , 'g' ) ; } }",
            "python_code": "def removeChar ( s , c ) : NEWLINE INDENT counts = s . count ( c ) NEWLINE s = list ( s ) NEWLINE while counts : NEWLINE INDENTINDENT s . remove ( c ) NEWLINE counts -= 1 NEWLINE DEDENT s = '' . join ( s ) NEWLINE print ( s ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT s = \"geeksforgeeks\" NEWLINE removeChar ( s , 'g' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_580_A_802",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "n = int ( input ( ) ) subs = list ( map ( int , input ( ) . split ( ) ) ) memo = [ 0 , 1 ] + [ 0 ] * ( n - 1 ) max_subs = 1  for i in range ( 2 , n + 1 ) : current = subs [ i - 1 ] if current >= subs [ i - 2 ] : memo [ i ] = memo [ i - 1 ] + 1 max_subs = memo [ i ] if memo [ i ] > max_subs else max_subs else : if memo [ i - 1 ] > max_subs : max_subs = memo [ i - 1 ] memo [ i ] = 1 print ( max_subs ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_70_A_803",
            "java_code": "import java . io . * ; import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) NEWLINE if ( n == 0 ) : NEWLINE INDENT print ( \"1\" ) else : NEWLINE ans = int ( 3 ** ( n - 1 ) ) NEWLINE DEDENT ans = ans % ( 1000003 ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_294_A_804",
            "java_code": "import java . util . * ;",
            "python_code": "n = int ( input ( ) ) wires = [ * map ( int , input ( ) . split ( \" \" ) ) ] m = int ( input ( ) ) for i in range ( m ) : x , y = map ( int , input ( ) . split ( \" \" ) ) if x > 1 : wires [ x - 2 ] += y - 1 if x < n : wires [ x ] += wires [ x - 1 ] - y wires [ x - 1 ] = 0 for n in wires : print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1038_B_805",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "try : n = int ( input ( ) ) if n <= 2 : print ( \"No\" ) else : e = [ ] o = [ ] for i in range ( 1 , n + 1 ) : if i % 2 == 0 : e . append ( i ) else : o . append ( i ) print ( \"Yes\" ) print ( len ( e ) , * e ) print ( len ( o ) , * o ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_504_A_806",
            "java_code": "import java . io . * ; class GFG { static int findNumber ( int n ) { int x = ( int ) Math . floor ( ( - 1 + Math . sqrt ( 1 + 8 * n - 8 ) ) / 2 ) ; int base = ( x * ( x + 1 ) ) / 2 + 1 ; return n - base + 1 ; } public static void main ( String [ ] args ) { int n = 55 ; System . out . println ( findNumber ( n ) ) ; } }",
            "python_code": "import math NEWLINE def findNumber ( n ) : NEWLINE INDENT x = int ( math . floor ( ( - 1 + math . sqrt ( 1 + 8 * n - 8 ) ) / 2 ) ) NEWLINE base = ( x * ( x + 1 ) ) / 2 + 1 NEWLINE return n - base + 1 NEWLINE DEDENT n = 55 NEWLINE print ( findNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3993_A_807",
            "java_code": "class Test { static int factorial ( int n ) { if ( n == 0 ) return 1 ; return n * factorial ( n - 1 ) ; } public static void main ( String [ ] args ) { int num = 5 ; System . out . println ( \"Factorial of \" + num + \" is \" + factorial ( 5 ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return n * factorial ( n - 1 ) NEWLINE DEDENT num = 5 ; NEWLINE print ( \"Factorial of\" , num , \"is\" , factorial ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1408_B_808",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; int k = scanner . nextInt ( ) ; int [ ] visit = new int [ 200 ] ; int count = 0 ;",
            "python_code": "import sys , os , ioimport NEWLINE math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_989_B_809",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , p = map ( int , input ( ) . split ( ) ) s = str ( input ( ) ) t = [ 0 ] * nfor i in range ( n ) : if s [ i ] != '.' : t [ i ] = s [ i ] else : if i - p >= 0 : t [ i ] = str ( 1 - int ( t [ i - p ] ) ) else : if i + p <= n - 1 : if s [ i + p ] != '.' : t [ i ] = str ( 1 - int ( s [ i + p ] ) ) else : t [ i ] = '0' else : t [ i ] = '0' NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2893_A_810",
            "java_code": "class GFG { static double numberOfDigits ( double n ) { if ( n == 1 ) return 1 ; double d = ( n * Math . log10 ( 1.6180339887498948 ) ) - ( ( Math . log10 ( 5 ) ) / 2 ) ; return Math . ceil ( d ) ; } public static void main ( String [ ] args ) { double i ; for ( i = 1 ; i <= 10 ; i ++ ) System . out . println ( \"Number of Digits in F(\" + i + \") - \" + numberOfDigits ( i ) ) ; } }",
            "python_code": "import math NEWLINE phi = ( 1 + 5 ** .5 ) / 2 NEWLINE def numberOfDig ( n ) : NEWLINE INDENT if n == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return math . ceil ( ( n * math . log10 ( phi ) - .5 * math . log10 ( 5 ) ) ) NEWLINE DEDENT // Driver Code NEWLINE for i in range ( 1 , 11 ) : NEWLINE INDENT print ( \"Number of Digits in F(\" + str ( i ) + \") - \" + str ( numberOfDig ( i ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_715_A_811",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i == 1 ) { System . out . println ( \"2\" ) ; } else { System . out . println ( ( long ) i * ( i + 1 ) * ( i + 1 ) - ( i - 1 ) ) ; } } } } ",
            "python_code": "from sys import stdoutn = int ( input ( ) ) stdout . write ( \"2\\n\" ) for lv in range ( 2 , n + 1 ) : stdout . write ( str ( lv * ( lv + 1 ) * ( lv + 1 ) - ( lv - 1 ) ) + '\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3686_A_812",
            "java_code": "import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_leaf ( double a ) { return ( a * a * ( PI / 2 - 1 ) ) ; } public static void main ( String [ ] args ) { double a = 7 ; System . out . println ( area_leaf ( a ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def area_leaf ( a ) : NEWLINE INDENT return ( a * a * ( PI / 2 - 1 ) ) NEWLINE DEDENT a = 7 NEWLINE print ( area_leaf ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1349_A_813",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from math import gcddef lcm ( a , b ) : return a * b // gcd ( a , b ) input ( ) a = list ( map ( int , input ( ) . split ( ) ) ) t = gcd ( a [ 0 ] , a [ 1 ] ) q = lcm ( a [ 0 ] , a [ 1 ] ) for i in range ( 2 , len ( a ) ) : q = gcd ( q , lcm ( a [ i ] , t ) ) t = gcd ( t , a [ i ] ) print ( q ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_120_A_814",
            "java_code": "import java . util . * ; import java . io . * ;  public class A_Elevator {  public static void main ( String [ ] args ) throws Exception { Scanner in = new Scanner ( new File ( \"input.txt\" ) ) ; PrintWriter pw = new PrintWriter ( new File ( \"output.txt\" ) ) ;",
            "python_code": "f = open ( 'input.txt' , 'r' ) n1 = f . readline ( ) n2 = f . readline ( ) n2 = int ( n2 ) n1 = n1 [ : n1 . index ( '\\n' ) ] g = open ( 'output.txt' , 'w' ) if n1 == 'front' and n2 == 1 : g . write ( 'L' ) elif n1 == 'back' and n2 == 1 : g . write ( 'R' ) elif n1 == 'back' and n2 == 2 : g . write ( 'L' ) elif n1 == 'front' and n2 == 2 : g . write ( 'R' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_78_A_815",
            "java_code": "class Test { static boolean canBeSumofConsec ( int n ) { return ( ( ( n & ( n - 1 ) ) != 0 ) && n != 0 ) ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( canBeSumofConsec ( n ) ? \"true\" : \"false\" ) ; } }",
            "python_code": "def canBeSumofConsec ( n ) : NEWLINE INDENT return ( ( n & ( n - 1 ) ) and n ) NEWLINE DEDENT n = 15 NEWLINE if ( canBeSumofConsec ( n ) ) : NEWLINE INDENT print ( \"true\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"false\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1262_A_816",
            "java_code": "class GFG { static int countSteps ( int n ) { int steps = 0 ; while ( n > 0 ) { int largest = ( int ) Math . cbrt ( n ) ; n -= ( largest * largest * largest ) ; steps ++ ; } return steps ; } public static void main ( String [ ] args ) { int n = 150 ; System . out . print ( countSteps ( n ) ) ; } }",
            "python_code": "from math import floor NEWLINE def countSteps ( n ) : NEWLINE INDENT steps = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT largest = floor ( n ** ( 1 / 3 ) ) NEWLINE n -= ( largest * largest * largest ) NEWLINE steps += 1 NEWLINE DEDENT return steps NEWLINE DEDENT n = 150 NEWLINE print ( countSteps ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_607_B_817",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main {  static int n ; static int [ ] arr ; static int [ ] [ ] dp ;  static int recur ( int L , int R ) { if ( L > R ) return 0 ; if ( L == R ) return 1 ; if ( dp [ L ] [ R ] != - 1 ) return dp [ L ] [ R ] ; int res = Integer . MAX_VALUE ; if ( arr [ L ] == arr [ R ] )",
            "python_code": "INF = int ( 1e9 )  n = int ( input ( ) ) s = list ( map ( int , input ( ) . split ( ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2304_A_818",
            "java_code": "import java . io . * ; class GFG { static int maxProd ( int N ) { if ( N == 0 ) return 1 ; if ( N < 10 ) return N ; return Math . max ( maxProd ( N / 10 ) * ( N % 10 ) , maxProd ( N / 10 - 1 ) * 9 ) ; } public static void main ( String [ ] args ) { int N = 390 ; System . out . println ( maxProd ( N ) ) ; } }",
            "python_code": "def maxProd ( N ) : NEWLINE INDENT if ( N == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if ( N < 10 ) : NEWLINE INDENTINDENT return N NEWLINE DEDENT return max ( maxProd ( N // 10 ) * ( N % 10 ) , maxProd ( N // 10 - 1 ) * 9 ) NEWLINE DEDENT N = 390 NEWLINE print ( maxProd ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_990_A_819",
            "java_code": "import com . sun . security . jgss . GSSUtil ;  import javax . swing . table . AbstractTableModel ; import java . io . * ; import java . util . * ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; ",
            "python_code": "n , m , a , b = map ( int , input ( ) . split ( ) ) print ( min ( ( m - n % m ) * a , n % m * b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_368_B_820",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ;  public class cp { static BufferedReader br ; static StringTokenizer st ;  public static void main ( String [ ] args ) throws IOException {  br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "n , m = [ int ( num ) for num in input ( ) . split ( ' ' ) ] a = [ int ( num ) for num in input ( ) . split ( ' ' ) ] c = [ 1 ] * ncheck_c = [ 0 ] * ( 10 ** 5 ) check_c [ a [ - 1 ] - 1 ] = 1 i = k = n - 2 while i >= 0 : flag = 0 if check_c [ a [ i ] - 1 ] : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5065_A_821",
            "java_code": "import java . util . Arrays ; class GFG { static int maxSum ( int a [ ] , int n ) { Arrays . sort ( a ) ; int sum = 0 ; for ( int i = 0 ; i < n - 1 ; i += 2 ) { sum += a [ i ] ; } return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 3 , 2 , 1 , 4 , 5 } ; int n = arr . length ; System . out . println ( maxSum ( arr , n ) ) ; } }",
            "python_code": "def maxSum ( a , n ) : NEWLINE INDENT a . sort ( ) ; NEWLINE sum = 0 ; NEWLINE for i in range ( 0 , n - 1 , 2 ) : NEWLINE INDENTINDENT sum += a [ i ] ; NEWLINE DEDENT return sum ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 3 , 2 , 1 , 4 , 5 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( maxSum ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2588_A_822",
            "java_code": "import java . io . * ; class GFG { static void alternateFib ( int n ) { if ( n < 0 ) return ; int f1 = 0 ; int f2 = 1 ; System . out . print ( f1 + \" \" ) ; for ( int i = 2 ; i <= n ; i ++ ) { int f3 = f2 + f1 ; if ( i % 2 == 0 ) System . out . print ( f3 + \" \" ) ; f1 = f2 ; f2 = f3 ; } } public static void main ( String [ ] args ) { int N = 15 ; alternateFib ( N ) ; } }",
            "python_code": "def alternateFib ( n ) : NEWLINE INDENT if ( n < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT f1 = 0 ; NEWLINE f2 = 1 ; NEWLINE print ( f1 , end = \" \" ) ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT f3 = f2 + f1 ; NEWLINE if ( i % 2 == 0 ) : NEWLINE INDENTINDENTINDENT print ( f3 , end = \" \" ) ; NEWLINE DEDENT f1 = f2 ; NEWLINE f2 = f3 ; NEWLINE DEDENT DEDENT N = 15 ; NEWLINE alternateFib ( N ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_887_A_823",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "from collections import Counterc = Counter ( str ( int ( input ( ) ) ) ) if c [ '1' ] >= 1 and c [ '0' ] >= 6 : print ( \"yes\" ) else : print ( \"no\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_591_A_824",
            "java_code": "import java . util . * ; public class WizardsDuel {  public static void main ( String [ ] args ) {",
            "python_code": "l , p , q = [ int ( input ( ) ) for _ in [ 1 , 2 , 3 ] ] print ( l * p / ( p + q ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_189_B_825",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class counting {  public static void main ( String [ ] args ) {",
            "python_code": "n , w = map ( int , input ( ) . split ( ) ) ans = 0 for x in range ( 1 , n ) : for y in range ( w - 1 ) : ans += ( ( w - y ) // 2 ) * min ( x , n - x ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1278_B_826",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static FileWriter fw ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static long oo = Long . MAX_VALUE ;",
            "python_code": "import math as m  t = int ( input ( ) )  for i in range ( t ) : a , b = map ( int , input ( ) . split ( ) ) mx , mn = max ( a , b ) , min ( a , b ) c = 2 * ( mx - mn ) d = 1 ** 2 + 4 * c ds = m . sqrt ( d ) n = ( ds - 1 ) / 2 n = int ( n ) if int ( n ) == n else int ( n ) + 1 n += ( n * ( n + 1 ) // 2 ) % 2 != ( mx - mn ) % 2 n += ( n * ( n + 1 ) // 2 ) % 2 != ( mx - mn ) % 2 print ( n )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1679_A_827",
            "java_code": "import java . io . * ; class GFG { static int findevenPair ( int A [ ] , int N ) { int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) if ( A [ i ] % 2 != 0 ) count ++ ; int oddCount = count * ( count - 1 ) / 2 ; return ( N * ( N - 1 ) / 2 ) - oddCount ; } public static void main ( String [ ] args ) { int a [ ] = { 5 , 1 , 3 , 2 } ; int n = a . length ; System . out . print ( findevenPair ( a , n ) ) ; } }",
            "python_code": "def findevenPair ( A , N ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT if ( A [ i ] % 2 != 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT oddCount = count * ( count - 1 ) / 2 NEWLINE return ( int ) ( ( N * ( N - 1 ) / 2 ) - oddCount ) NEWLINE DEDENT a = [ 5 , 1 , 3 , 2 ] NEWLINE n = len ( a ) NEWLINE print ( findevenPair ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_630_A_828",
            "java_code": "import java . util . * ; public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; String num = input . next ( ) ; System . out . println ( \"25\" ) ; } }",
            "python_code": "int ( input ( ) ) print ( 25 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1739_A_829",
            "java_code": "import java . io . * ; class GFG { static int findDelta ( int a , int b , int c , int d ) { return ( b * c - a * d ) / ( d - c ) ; } public static void main ( String args [ ] ) { int a = 3 , b = 9 , c = 3 , d = 5 ; System . out . print ( \"X = \" + findDelta ( a , b , c , d ) ) ; } }",
            "python_code": "def findDelta ( a , b , c , d ) : NEWLINE INDENT return int ( ( b * c - a * d ) / ( d - c ) ) ; NEWLINE DEDENT a = 3 ; b = 9 ; NEWLINE c = 3 ; d = 5 ; NEWLINE print ( \"X = {}\" . format ( findDelta ( a , b , c , d ) ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1183_A_830",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; while ( ! check ( a ) ) { a ++ ; } System . out . println ( a ) ; } public static boolean check ( int a ) { int sum = 0 ; while ( a > 0 ) { sum += a % 10 ; a = a / 10 ; } return sum % 4 == 0 ;  } }",
            "python_code": "m = int ( input ( ) ) while sum ( [ int ( m ) for m in str ( m ) ] ) % 4 != 0 : m = m + 1 print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_200_B_831",
            "java_code": "import java . util . Scanner ;  public class Drinks { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; double answear = 0 ; for ( int i = 0 ; i < n ; i ++ ) { answear += sc . nextInt ( ) ; } System . out . println ( answear / n ) ; } }",
            "python_code": "a = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) print ( sum ( l ) / a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_847_B_832",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans = [ ] for i in range ( n ) : l = 0 r = len ( ans ) while l < r : mid = l + ( r - l ) // 2 if ans [ mid ] [ - 1 ] < a [ i ] : r = mid else : l = mid + 1 if l == len ( ans ) : ans . append ( [ a [ i ] ] ) else : ans [ l ] . append ( a [ i ] ) for x in ans : print ( * x )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_412_B_833",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } Arrays . sort ( arr ) ; System . out . println ( arr [ n - k ] ) ; } } ",
            "python_code": "if __name__ == \"__main__\" : n , k = list ( map ( int , input ( ) . split ( ) ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr . sort ( ) arr = arr [ : : - 1 ] for i in range ( n ) : if i + 1 == k : print ( arr [ i ] ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_454_A_834",
            "java_code": "import java . util . * ; public class LittlePonyandCrystalMine {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) c = \"*\" * nx = 1 mid = Falsefor i in range ( n ) : if i == ( n - 1 ) / 2 : mid = True a = c [ : int ( ( n - x ) / 2 ) ] b = \"D\" * x print ( a + b + a ) if mid == True : x -= 2 else : x += 2 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_47_A_835",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double a = ( Math . sqrt ( 8 * sc . nextInt ( ) + 1 ) - 1 ) / 2 ; if ( a == ( int ) a ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) list = [ 0 , 1 , 3 , 6 , 10 , 15 , 21 , 28 , 36 , 45 , 55 , 66 , 78 , 91 , 105 , 120 , 136 , 153 , 171 , 190 , 210 , 231 , 253 , 276 , 300 , 325 , 351 , 378 , 406 , 435 , 465 , 496 ] if n in list : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1178_A_836",
            "java_code": "import java . util . ArrayList ; import java . util . Scanner ;  public class problem53 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) lst = list ( map ( int , input ( ) . split ( ) ) ) ans = [ 1 ] summ2 = lst [ 0 ] for i in range ( 1 , n ) : if lst [ 0 ] >= ( 2 * lst [ i ] ) : ans . append ( i + 1 ) summ2 += lst [ i ] summ = sum ( lst ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_556_A_837",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class NewClass {  public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int len = Integer . parseInt ( reader . readLine ( ) ) ; String str = reader . readLine ( ) ; int conuterOnces = 0 ; ",
            "python_code": "num = int ( input ( ) ) s = input ( ) s1 = s . count ( '1' ) s0 = s . count ( '0' ) output = abs ( s1 - s0 ) print ( output ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_602_B_838",
            "java_code": "import java . util . Scanner ;  public class ApproximatingaConstantRange {  static Scanner sc ;  public static void main ( String [ ] args ) {  sc = new Scanner ( System . in ) ;  int n = sc . nextInt ( ) ; ",
            "python_code": "from sys import stdin , stdoutnmbr = lambda : int ( stdin . readline ( ) ) lst = lambda : list ( map ( int , stdin . readline ( ) . split ( ) ) ) for _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4781_A_839",
            "java_code": "class GFG { static int grayCode ( int n ) { return n ^ ( n > > 1 ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( grayCode ( n ) ) ; } }",
            "python_code": "def grayCode ( n ) : NEWLINE INDENT return n ^ ( n >> 1 ) NEWLINE DEDENT n = 10 NEWLINE print ( grayCode ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3545_A_840",
            "java_code": "class GFG { static int Divisible ( int arr [ ] , int n ) { int count_even = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] % 2 == 0 ) count_even ++ ; return count_even + ( n - count_even ) / 2 ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 4 , 5 } ; int n = arr . length ; System . out . println ( Divisible ( arr , n ) ) ; } }",
            "python_code": "def Divisible ( arr , n ) : NEWLINE INDENT count_even = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 == 0 ) : NEWLINE INDENTINDENTINDENT count_even += 1 NEWLINE DEDENT DEDENT return count_even + ( n - count_even ) // 2 NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( Divisible ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_686_B_841",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class robber {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )   for i in reversed ( range ( len ( arr ) ) ) : for j in range ( 1 , i + 1 ) : if arr [ j - 1 ] > arr [ j ] : print ( j , j + 1 ) arr [ j - 1 ] , arr [ j ] = arr [ j ] , arr [ j - 1 ]    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_58_A_842",
            "java_code": "import java . util . Scanner ;  public class Codeforces {  public static void main ( String [ ] args ) {  Scanner input = new Scanner ( System . in ) ; ",
            "python_code": "dat = \"\" . join ( [ i for i in input ( ) if i in \"hello\" ] ) + \" \" NEWLINE def check ( inp ) : now = \"hello\" NEWLINE INDENT pass NEWLINE DEDENT for step in now : if NEWLINE step in inp : inp = inp [ inp . index ( step ) + 1 : ] else : return \"NO\" NEWLINE return \"YES\" NEWLINE print ( check ( dat ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_676_A_843",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; int f [ ] = new int [ n + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; f [ a [ i ] ] = i ; } if ( f [ 1 ] < f [ n ] ) { System . out . println ( f [ n ] - f [ 1 ] + Math . abs ( Math . max ( f [ 1 ] , n - f [ n ] - 1 ) ) ) ;",
            "python_code": "import sys  def main ( ) : n , * l = map ( int , sys . stdin . read ( ) . strip ( ) . split ( ) ) x , y = ( i for i , j in enumerate ( l , 1 ) if j in { 1 , n } ) return max ( y - 1 , n - x )  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4209_A_844",
            "java_code": "import java . io . * ; class GFG { static int findCountOfPairs ( int a , int b , int n ) { int ans = 0 ; ans += n * ( a / n ) * ( b / n ) ; ans += ( a / n ) * ( b % n ) ; ans += ( a % n ) * ( b / n ) ; ans += ( ( a % n ) + ( b % n ) ) / n ; return ans ; } public static void main ( String [ ] args ) { int a = 5 , b = 13 , n = 3 ; System . out . println ( findCountOfPairs ( a , b , n ) ) ; } }",
            "python_code": "def findCountOfPairs ( a , b , n ) : NEWLINE INDENT ans = 0 NEWLINE ans += n * int ( a / n ) * int ( b / n ) NEWLINE ans += int ( a / n ) * ( b % n ) NEWLINE ans += ( a % n ) * int ( b / n ) NEWLINE ans += int ( ( ( a % n ) + ( b % n ) ) / n ) ; NEWLINE return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 5 NEWLINE b = 13 NEWLINE n = 3 NEWLINE print ( findCountOfPairs ( a , b , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1209_A_845",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class PaintNumbers { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) c = 0 q = [ ] while l : m = min ( l ) for i in list ( l ) : if i % m == 0 : c += 1 l . remove ( i ) q . append ( c ) c = 0 print ( len ( q ) )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2222_A_846",
            "java_code": "public class GFG { static float trianglearea ( float a , float b ) { if ( a < 0 || b < 0 ) return - 1 ; float area = ( float ) ( 3 * Math . sqrt ( 3 ) * Math . pow ( a , 2 ) ) / ( 4 * b ) ; return area ; } public static void main ( String [ ] args ) { float a = 4 , b = 2 ; System . out . println ( trianglearea ( a , b ) ) ; } }",
            "python_code": "from math import * NEWLINE def trianglearea ( a , b ) : NEWLINE INDENT if a < 0 or b < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = ( 3 * sqrt ( 3 ) * pow ( a , 2 ) ) / ( 4 * b ) NEWLINE return area NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b = 4 , 2 NEWLINE print ( round ( trianglearea ( a , b ) , 4 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4081_A_847",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { static int numberOfSolutions ( int n ) { int c = 0 ; for ( int x = 0 ; x <= n ; ++ x ) if ( n == x + ( n ^ x ) ) ++ c ; return c ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . print ( numberOfSolutions ( n ) ) ; } }",
            "python_code": "def numberOfSolutions ( n ) : NEWLINE INDENT c = 0 NEWLINE for x in range ( n + 1 ) : NEWLINE INDENTINDENT if ( n == ( x + ( n ^ x ) ) ) : NEWLINE INDENTINDENTINDENT c += 1 NEWLINE DEDENT DEDENT return c NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( numberOfSolutions ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_B_848",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = i ; j <= n ; j ++ ) { int k = i ^ j ; if ( k >= i && k >= j && i + j > k && k <= n ) { res ++ ; }",
            "python_code": "n = int ( input ( ) ) t = 0 for a in range ( 1 , n + 1 ) : for b in range ( a , n + 1 ) : c = a ^ b if ( a + b <= c or c > n or a > c or b > c ) : continue else : t += 1 print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1348_A_849",
            "java_code": "import java . util . * ;  public class balance { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int c1 = 1 << n ; int c2 = 0 ; for ( int i = 1 ; i < n ; ++ i ) { if ( i < n / 2 ) c1 += 1 << i ; else c2 += 1 << i ; }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) l = [ 2 ** i for i in range ( 1 , n + 1 ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3639_A_850",
            "java_code": "class GFG { static double pie = 3.1415926535897 ; static double findsolution ( double d , double h , double m , double n ) { double k = ( 4 * m ) / ( pie * d * d ) ; if ( n > k ) return - 1 ; double ans = ( h / ( k - n ) ) ; return ans ; } public static void main ( String [ ] args ) { double d = 1 , h = 1 , m = 1 , n = 1 ; System . out . printf ( \"%.5f\" , findsolution ( d , h , m , n ) ) ; } }",
            "python_code": "pie = 3.1415926535897 NEWLINE def findsolution ( d , h , m , n ) : NEWLINE INDENT k = ( 4 * m ) / ( pie * d * d ) NEWLINE if ( n > k ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT ans = ( h / ( k - n ) ) NEWLINE return round ( ans , 5 ) NEWLINE DEDENT d = 1 NEWLINE h = 1 NEWLINE m = 1 NEWLINE n = 1 NEWLINE print ( findsolution ( d , h , m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_195_A_851",
            "java_code": "import java . util . * ;  public class ICPC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) print ( ( a * c + b - 1 ) // b - c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1233_A_852",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static double surface_area_octahedron ( double side ) { return ( 2 * ( Math . sqrt ( 3 ) ) * ( side * side ) ) ; } public static void main ( String [ ] args ) { double side = 7 ; System . out . println ( \"Surface area of octahedron =\" + surface_area_octahedron ( side ) ) ; } }",
            "python_code": "import math NEWLINE def surface_area_octahedron ( side ) : NEWLINE INDENT return ( 2 * ( math . sqrt ( 3 ) ) * ( side * side ) ) NEWLINE DEDENT side = 7 NEWLINE print ( \"Surface area of octahedron =\" , surface_area_octahedron ( side ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p173_A_853",
            "java_code": "public final class p173 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p173 ( ) . run ( ) ) ; } private static final int TILES = 1000000 ; public String run ( ) { int count = 0 ; for ( int n = 3 ; n <= TILES / 4 + 1 ; n ++ ) { for ( int k = n - 2 ; k >= 1 ; k -= 2 ) { if ( ( long ) n * n - ( long ) k * k > TILES ) break ; count ++ ; } } return Integer . toString ( count ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT TILES = 10 ** 6 NEWLINE ans = 0 NEWLINE for n in range ( 3 , TILES // 4 + 2 ) : NEWLINE INDENTINDENT for k in range ( n - 2 , 0 , - 2 ) : NEWLINE INDENTINDENTINDENT if n * n - k * k > TILES : NEWLINE INDENTINDENTINDENTINDENT break NEWLINE DEDENT ans += 1 NEWLINE DEDENT DEDENT return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_137_B_854",
            "java_code": "import java . util . * ;  public class cPermutation { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) ) arr = [ int ( x ) for x in input ( ) . split ( ) ] s = 0 for i in range ( 1 , n + 1 ) : if i not in arr : s += 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4777_A_855",
            "java_code": "import java . math . * ; class GFG { static float geometricMean ( int arr [ ] , int n ) { float product = 1 ; for ( int i = 0 ; i < n ; i ++ ) product = product * arr [ i ] ; float gm = ( float ) Math . pow ( product , ( float ) 1 / n ) ; return gm ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ; int n = arr . length ; System . out . println ( geometricMean ( arr , n ) ) ; } }",
            "python_code": "import math NEWLINE def geometricMean ( arr , n ) : NEWLINE INDENT product = 1 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT product = product * arr [ i ] NEWLINE DEDENT gm = ( float ) ( math . pow ( product , ( 1 / n ) ) ) NEWLINE return ( float ) ( gm ) NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] NEWLINE n = len ( arr ) NEWLINE print ( '{0:.6f}' . format ( geometricMean ( arr , n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3002_A_856",
            "java_code": "import java . io . * ; class GFG { static long calculateSum ( int n ) { long sum = 0 ; sum = 1 << n ; return ( sum - 1 ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( \"Sum of all elements:\" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE sum = 1 << n ; NEWLINE return ( sum - 1 ) NEWLINE DEDENT n = 10 NEWLINE print ( \"Sum of all elements:\" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1295_A_857",
            "java_code": "import com . sun . security . jgss . GSSUtil ; import org . w3c . dom . Node ;  import javax . print . DocFlavor ; import javax . swing . table . AbstractTableModel ; import java . io . * ; import java . util . * ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; ",
            "python_code": "import sysfrom os import pathif ( path . exists ( 'input.txt' ) and path . exists ( 'output.txt' ) ) : sys . stdout = open ( 'output.txt' , 'w' ) sys . stdin = open ( 'input.txt' , 'r' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2919_A_858",
            "java_code": "class GFG { static int nthTerm ( int N ) { int nth = 0 , first_term = 4 ; int pi = 1 , po = 1 ; int n = N ; while ( n > 1 ) { pi *= n - 1 ; n -- ; po *= 2 ; } nth = ( first_term * pi ) / po ; return nth ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . print ( nthTerm ( N ) + \"\\n\" ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT nth = 0 ; first_term = 4 ; NEWLINE pi = 1 ; po = 1 ; NEWLINE n = N ; NEWLINE while ( n > 1 ) : NEWLINE INDENTINDENT pi *= n - 1 ; NEWLINE n -= 1 ; NEWLINE po *= 2 ; NEWLINE DEDENT nth = ( first_term * pi ) // po ; NEWLINE return nth ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE print ( nthTerm ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1684_A_859",
            "java_code": "import java . io . * ; class GFG { static int ways ( int n ) { if ( n == 1 ) { return 1 ; } if ( n == 2 ) { return 2 ; } else { return ways ( n - 1 ) + ways ( n - 2 ) ; } } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( \"Number of ways = \" + ways ( n ) ) ; } }",
            "python_code": "def ways ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT if ( n == 2 ) : NEWLINE INDENTINDENT return 2 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return ways ( n - 1 ) + ways ( n - 2 ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE print ( \"Number of ways = \" , ways ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2865_A_860",
            "java_code": "import java . io . * ; class GFG { static int cost ( String str ) { int len = str . length ( ) ; int res = 0 ; for ( int i = 0 , j = len - 1 ; i < j ; i ++ , j -- ) if ( str . charAt ( i ) != str . charAt ( j ) ) res += Math . min ( str . charAt ( i ) , str . charAt ( j ) ) - 'a' + 1 ; return res ; } public static void main ( String [ ] args ) { String str = \"abcdef\" ; System . out . println ( cost ( str ) ) ; } }",
            "python_code": "def cost ( st ) : NEWLINE INDENT l = len ( st ) NEWLINE res = 0 NEWLINE j = l - 1 NEWLINE i = 0 NEWLINE while ( i < j ) : NEWLINE INDENTINDENT if ( st [ i ] != st [ j ] ) : NEWLINE INDENTINDENTINDENT res += ( min ( ord ( st [ i ] ) , ord ( st [ j ] ) ) - ord ( 'a' ) + 1 ) NEWLINE DEDENT i = i + 1 NEWLINE j = j - 1 NEWLINE DEDENT return res NEWLINE DEDENT st = \"abcdef\" ; NEWLINE print ( cost ( st ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_544_A_861",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;",
            "python_code": "n = int ( input ( ) ) s = input ( ) s = list ( s ) s1 = list ( dict . fromkeys ( s ) ) if len ( s1 ) < n : print ( 'NO' ) else : print ( 'YES' ) i = 0 j = 0 while ( j < n ) : ind = s . index ( s1 [ i ] ) j += 1 if j < n : ind2 = s . index ( s1 [ i + 1 ] ) for o in range ( ind , ind2 ) : print ( str ( s [ o ] ) , end = \"\" ) print ( ) else : for o in range ( ind , len ( s ) ) : print ( s [ o ] , end = \"\" ) print ( ) i += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1337_A_862",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; System . out . println ( b + \" \" + c + \" \" + c ) ; } } }",
            "python_code": "from typing import Iterator   def get_num_input ( ) -> Iterator [ int ] : return map ( int , input ( ) . split ( ) )   def main ( ) -> None : first : int second : int _ , first , second , _ = get_num_input ( )  print ( first , second , second )   if __name__ == \"__main__\" : ONLY_ONCE : bool = False for _ in range ( 1 if ONLY_ONCE else int ( input ( ) ) ) : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1844_A_863",
            "java_code": "class GFG { static long computeXOR ( int n ) { int x = n & 3 ; switch ( x ) { case 0 : return n ; case 1 : return 1 ; case 2 : return n + 1 ; case 3 : return 0 ; } return 0 ; } public static void main ( String args [ ] ) { int l = 1 , r = 4 ; System . out . println ( computeXOR ( r ) ^ computeXOR ( l - 1 ) ) ; } }",
            "python_code": "def computeXOR ( n ) : NEWLINE INDENT switch = { 0 : n , 1 : 1 , 2 : n + 1 , 3 : 0 , } NEWLINE return switch . get ( n & 3 , \"\" ) NEWLINE DEDENT l = 1 NEWLINE r = 4 NEWLINE print ( computeXOR ( r ) ^ computeXOR ( l - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2827_A_864",
            "java_code": "class GFG { static void count ( String str1 , String str2 ) { int c = 0 , j = 0 ; for ( int i = 0 ; i < str1 . length ( ) ; i ++ ) { if ( str2 . indexOf ( str1 . charAt ( i ) ) >= 0 ) { c += 1 ; } } System . out . println ( \"No. of matching characters are: \" + c ) ; } public static void main ( String [ ] args ) { String str1 = \"aabcddekll12@\" ; String str2 = \"bb2211@55k\" ; count ( str1 , str2 ) ; } }",
            "python_code": "def count ( str1 , str2 ) : NEWLINE INDENT c = 0 ; j = 0 ; NEWLINE for i in range ( len ( str1 ) ) : NEWLINE INDENTINDENT if str1 [ i ] in str2 : NEWLINE INDENTINDENTINDENT c += 1 ; NEWLINE DEDENT j += 1 ; NEWLINE DEDENT print ( \"No. of matching characters are: \" , c ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str1 = \"aabcddekll12@\" ; NEWLINE str2 = \"bb2211@55k\" ; NEWLINE count ( str1 , str2 ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1257_B_865",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ;  while ( t -- > 0 ) {  int x = input . nextInt ( ) ; int y = input . nextInt ( ) ; boolean result = true ;  if ( ( x < 4 && y > 3 ) || ( x == 1 && y > x ) ) { result = false ; } System . out . println ( result ? \"YES\" : \"NO\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : x , y = map ( int , input ( ) . split ( ) ) if x >= y : print ( 'YES' ) else : if x == 2 and y == 3 or x >= 4 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1163_A_866",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int m = s . nextInt ( ) ; int count = 0 ; if ( m == 0 ) count = 1 ; else { count = Math . min ( m , n - m ) ; } System . out . println ( count ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) if n == m : print ( 0 ) elif m == 0 : print ( 1 ) elif n / m < 2 : print ( n - m ) else : print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_198_A_867",
            "java_code": "import java . util . * ;  public class practice { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; long k = scn . nextLong ( ) , b = scn . nextLong ( ) , n = scn . nextLong ( ) , t = scn . nextLong ( ) ; long z = 1 , time = 0 ; ; while ( z <= t ) { z = z * k + b ; time ++ ; } long ans = n - time + 1 ; if ( ans < 0 ) { ans = 0 ; } System . out . println ( ans ) ; } } ",
            "python_code": "import mathk , b , n , t = list ( map ( int , input ( ) . split ( ) ) ) if k > 1 : ans = math . ceil ( n - math . log ( ( t + b / ( k - 1 ) ) / ( 1 + b / ( k - 1 ) ) ) / math . log ( k ) ) print ( max ( 0 , ans ) ) else : z = 1 + n * b f = 1 ans = 0 while f : if t + ans * b >= z : f = 0 break else : ans = ans + 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4500_A_868",
            "java_code": "class GFG { static int sizeofInt = 8 ; static int toggleLastMBits ( int n , int m ) { int num = ( 1 << m ) - 1 ; return ( n ^ num ) ; } static int unsetLastMBits ( int n , int m ) { int num = ( 1 << ( sizeofInt * 8 - 1 ) ) - 1 ; num = toggleLastMBits ( num , m ) ; return ( n & num ) ; } public static void main ( String [ ] args ) { int n = 150 , m = 4 ; System . out . println ( unsetLastMBits ( n , m ) ) ; } }",
            "python_code": "import sys NEWLINE def toggleLastMBits ( n , m ) : NEWLINE INDENT num = ( 1 << m ) - 1 NEWLINE return ( n ^ num ) NEWLINE DEDENT def unsetLastMBits ( n , m ) : NEWLINE INDENT num = ( 1 << ( sys . getsizeof ( int ) * 8 - 1 ) ) - 1 NEWLINE num = toggleLastMBits ( num , m ) NEWLINE return ( n & num ) NEWLINE DEDENT n = 150 NEWLINE m = 4 NEWLINE print ( unsetLastMBits ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_946_B_869",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long a = in . nextLong ( ) ; long b = in . nextLong ( ) ; in . close ( ) ; while ( true ) { if ( a == 0 || b == 0 ) break ; if ( a >= 2 * b ) a %= 2 * b ; else if ( b >= 2 * a ) b %= 2 * a ; else break ; } System . out . println ( a + \" \" + b ) ; } } ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = nb = mwhile a * b > 0 : if a >= 2 * b : a = a % ( 2 * b ) elif b >= 2 * a : b = b % ( 2 * a ) else : breakprint ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1372_A_870",
            "java_code": "import java . util . Scanner ;  public class DigestThread {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = in . nextInt ( ) ; for ( int j = 0 ; j < n ; j ++ ) { System . out . print ( \"1 \" ) ; } System . out . println ( \"\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) for j in range ( n ) : print ( '1' , end = \" \" ) print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2374_A_871",
            "java_code": "class GFG { static long sumAP ( long n , long d ) { n /= d ; return ( n ) * ( 1 + n ) * d / 2 ; } static long sumMultiples ( long n ) { n -- ; return sumAP ( n , 2 ) + sumAP ( n , 5 ) - sumAP ( n , 10 ) ; } public static void main ( String [ ] args ) { long n = 20 ; System . out . println ( sumMultiples ( n ) ) ; } }",
            "python_code": "def sumAP ( n , d ) : NEWLINE INDENT n = int ( n / d ) ; NEWLINE return ( n ) * ( 1 + n ) * ( d / 2 ) ; NEWLINE DEDENT def sumMultiples ( n ) : NEWLINE INDENT n -= 1 ; NEWLINE return ( int ( sumAP ( n , 2 ) + sumAP ( n , 5 ) - sumAP ( n , 10 ) ) ) ; NEWLINE DEDENT n = 20 ; NEWLINE print ( sumMultiples ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_959_A_872",
            "java_code": "import java . util . Scanner ;  public class Vsa {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ; System . out . println ( ( n % 2 == 0 ) ? \"Mahmoud\" : \"Ehab\" ) ;  } }",
            "python_code": "n = int ( input ( ) ) if ( n % 2 == 0 ) : print ( \"Mahmoud\" ) else : print ( \"Ehab\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_A_873",
            "java_code": "import java . util . Scanner ;  public class A1438 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; StringBuilder output = new StringBuilder ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int N = in . nextInt ( ) ; for ( int n = 0 ; n < N ; n ++ ) { output . append ( \"1 \" ) ; } output . append ( '\\n' ) ; } System . out . print ( output ) ; }  }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : N = int ( input ( ) ) NEWLINE A = [ 4 ] * N NEWLINE print ( * A ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1075_A_874",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Exam { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) x , y = map ( int , input ( ) . split ( ) ) min = x if x < y else ymax = x if x > y else yif min - 1 <= n - max : print ( \"White\" ) else : print ( \"Black\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_572_A_875",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class NewMain5 {  public static void main ( String [ ] args ) {",
            "python_code": "x = input ( ) k , m = map ( int , input ( ) . split ( ) ) daf1 = list ( map ( int , input ( ) . split ( ) ) ) daf2 = list ( map ( int , input ( ) . split ( ) ) ) if daf1 [ k - 1 ] < daf2 [ - m ] : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_761_A_876",
            "java_code": "import java . util . Scanner ;   public class Dasha_Stairs_761A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ;  if ( a == 0 && b == 0 ) { System . out . println ( \"NO\" ) ; } else { int diff = Math . abs ( a - b ) ; if ( diff == 1 || a == b ) { System . out . println ( \"YES\" ) ; } else System . out . println ( \"NO\" ) ;  } } }",
            "python_code": "import mathdef solve ( a , b ) : if a == 0 and b == 0 : return 'NO' if abs ( a - b ) <= 1 : return 'YES' return 'NO'  def main ( ) : arr = list ( map ( int , input ( ) . split ( ' ' ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1174_B_877",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) c = 0 for i in range ( n ) : c += l [ i ] % 2 if ( c != 0 and c != n ) : l . sort ( ) print ( * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1368_A_878",
            "java_code": "import java . io . * ; class GFG { static int countMultiples ( int n ) { int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) if ( i % 3 == 0 || i % 7 == 0 ) res ++ ; return res ; } public static void main ( String [ ] args ) { System . out . print ( \"Count = \" ) ; System . out . println ( countMultiples ( 25 ) ) ; } }",
            "python_code": "def countMultiples ( n ) : NEWLINE INDENT res = 0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if ( i % 3 == 0 or i % 7 == 0 ) : NEWLINE INDENTINDENTINDENT res += 1 ; NEWLINE DEDENT DEDENT return res ; NEWLINE DEDENT print ( \"Count =\" , countMultiples ( 25 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1360_A_879",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int l = 0 , h = 0 ; if ( a < b ) { l = a ; h = b ; } else { l = b ; h = a ; } long ans = 0 ; if ( 2 * l >= h ) { ans = 2 * l ; } else { ans = h ; } System . out . println ( ans * ans ) ; } } }",
            "python_code": "t = int ( input ( ) )  for tc in range ( t ) :  a , b = map ( int , input ( ) . split ( ) )  twow = a * 2 twol = b * 2  twowsq = max ( twow , b ) twolsq = max ( twol , a )  print ( min ( twolsq , twowsq ) ** 2 )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2019_A_880",
            "java_code": "class Solution { static int sum ( int n ) { if ( n == 1 ) { return 2 ; } else { return ( n * ( n + 1 ) + sum ( n - 1 ) ) ; } } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( sum ( n ) ) ; } }",
            "python_code": "def sum ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 2 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( n * ( n + 1 ) + sum ( n - 1 ) ) ; NEWLINE DEDENT DEDENT n = 2 ; NEWLINE print ( sum ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_486_A_881",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  long n = in . nextLong ( ) ;  if ( n == 1 ) { System . out . println ( - 1 ) ; return ; }  long even ; long odd ; if ( n % 2 == 0 ) { even = n * ( 2 + n ) / 4 ; odd = n * n / 4 ; } else { even = n / 2 * ( 2 + n - 1 ) / 2 ; odd = ( n / 2 + 1 ) * ( 1 + n ) / 2 ; } System . out . println ( even - odd ) ; } }",
            "python_code": "t = int ( input ( ) ) sum = 0 nume = t // 2 sume = nume * ( nume + 1 ) sum = sume - ( ( t * ( t + 1 ) ) // 2 - sume ) print ( sum ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_453_A_882",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; class Solution { public int minMoves ( int [ ] nums ) { if ( nums . length == 0 ) return 0 ; Arrays . sort ( nums ) ; int min_num = nums [ 0 ] ; int ans = 0 ; for ( int num : nums ) { ans += num - min_num ; } return ans ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def minMoves ( self , nums ) : NEWLINE INDENTINDENT if nums is None or len ( nums ) == 0 : NEWLINE INDENTINDENTINDENT return 0 NEWLINE DEDENT min_num = min ( nums ) NEWLINE return sum ( [ i - min_num for i in nums ] ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2028_A_883",
            "java_code": "import java . io . * ; class GFG { static int countDigits ( int n ) { double ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) ans += Math . log10 ( i ) ; ans = ans * n ; return 1 + ( int ) Math . floor ( ans ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( countDigits ( n ) + \"\\n\" ) ; } }",
            "python_code": "import math NEWLINE def countDigits ( n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT ans += math . log10 ( i ) NEWLINE DEDENT ans = ans * n NEWLINE return 1 + math . floor ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE print ( countDigits ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_697_B_884",
            "java_code": "import java . math . BigDecimal ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; String str = input . nextLine ( ) ; System . out . println ( new BigDecimal ( str ) . stripTrailingZeros ( ) . toPlainString ( ) + \"\" ) ; } }",
            "python_code": "from decimal import *  a = input ( ) b = Decimal ( a )  if ( int ( b ) == b ) : print ( \"%d\" % b ) else : print ( b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_77_B_885",
            "java_code": "for i in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) print ( 0.5 + a / ( b << 4 ) if 4 * b > a else 1 - b / a if a else 1 )",
            "python_code": "def li ( ) : return list ( map ( int , input ( ) . split ( \" \" ) ) ) NEWLINE INDENT pass NEWLINE DEDENT for _ in range ( int ( input ( ) ) ) : a , b = li ( ) NEWLINE if b != 0 and a != 0 : s = ( max ( 0 , a - 4 * b ) + a ) / 2 NEWLINE s *= min ( ( a / 4 ) , b ) NEWLINE ans = 1 / 2 + s / ( 2 * a * b ) NEWLINE print ( \"{:.8f}\" . format ( ans ) ) elif b == 0 : print ( 1 ) else : print ( 0.5 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_957_A_886",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sys , mathfrom collections import deque , defaultdictimport operator as opfrom functools import reducefrom itertools import permutations  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4517_A_887",
            "java_code": "import java . io . * ; class GFG { static int nextPowerOf2 ( int n ) { int count = 0 ; if ( n > 0 && ( n & ( n - 1 ) ) == 0 ) return n ; while ( n != 0 ) { n >>= 1 ; count += 1 ; } return 1 << count ; } public static void main ( String args [ ] ) { int n = 0 ; System . out . println ( nextPowerOf2 ( n ) ) ; } }",
            "python_code": "def nextPowerOf2 ( n ) : NEWLINE INDENT count = 0 ; NEWLINE if ( n and not ( n & ( n - 1 ) ) ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT while ( n != 0 ) : NEWLINE INDENTINDENT n >>= 1 NEWLINE count += 1 NEWLINE DEDENT return 1 << count ; NEWLINE DEDENT n = 0 NEWLINE print ( nextPowerOf2 ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1131_A_888",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001131A { static public void main ( final String [ ] args ) throws IOException { p001131A . _main ( args ) ; }",
            "python_code": "w1 , h1 , w2 , h2 = map ( int , input ( ) . split ( ) ) print ( ( h1 + h2 ) * 2 + w1 * 2 + 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2025_A_889",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int unitnumber ( int x , int y ) { x = x % 10 ; if ( y != 0 ) y = y % 4 + 4 ; return ( ( ( int ) ( Math . pow ( x , y ) ) ) % 10 ) ; } public static void main ( String [ ] args ) { int x = 133 , y = 5 ; System . out . println ( unitnumber ( x , y ) ) ; } }",
            "python_code": "import math NEWLINE def unitnumber ( x , y ) : NEWLINE INDENT x = x % 10 NEWLINE if y != 0 : NEWLINE INDENTINDENT y = y % 4 + 4 NEWLINE DEDENT return ( ( ( int ) ( math . pow ( x , y ) ) ) % 10 ) NEWLINE DEDENT x = 133 ; y = 5 NEWLINE print ( unitnumber ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_412_A_890",
            "java_code": "import java . util . ArrayList ; import java . util . List ; class Solution { public List < String > fizzBuzz ( int n ) { List < String > res = new ArrayList < > ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { String tmp = \"\" ; if ( i % 3 == 0 ) tmp += \"Fizz\" ; if ( i % 5 == 0 ) tmp += \"Buzz\" ; if ( tmp . length ( ) == 0 ) tmp += String . valueOf ( i ) ; res . add ( tmp ) ; } return res ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def fizzBuzz ( self , n ) : NEWLINE INDENTINDENT return [ str ( i ) * ( i % 3 != 0 and i % 5 != 0 ) + \"Fizz\" * ( i % 3 == 0 ) + \"Buzz\" * ( i % 5 == 0 ) for i in range ( 1 , n + 1 ) ] NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_797_B_891",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) A = list ( map ( int , input ( ) . split ( ) ) )  p = [ ] m = [ ] for a in A : if a > 0 : p . append ( a ) elif a < 0 and a % 2 : m . append ( a )  if p : p . sort ( ) sm = sum ( p ) else : sm = 0 if sm % 2 : print ( sm ) exit ( )  pcand = float ( 'inf' ) if m : mcand = max ( m ) else : mcand = - float ( 'inf' ) for pp in p : if pp % 2 : pcand = pp break  print ( max ( sm - pcand , sm + mcand ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4690_A_892",
            "java_code": "import java . io . * ; public class GFG { static float AvgofSquareN ( int n ) { return ( float ) ( ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } static public void main ( String [ ] args ) { int n = 2 ; System . out . println ( AvgofSquareN ( n ) ) ; } }",
            "python_code": "def AvgofSquareN ( n ) : NEWLINE INDENT return ( ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; NEWLINE DEDENT n = 2 ; NEWLINE print ( AvgofSquareN ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_987_B_893",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import mathx , y = map ( int , input ( ) . split ( ) ) if y * math . log ( x ) > x * math . log ( y ) : print ( \">\" ) elif y * math . log ( x ) < x * math . log ( y ) : print ( '<' ) else : print ( '=' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_109_A_894",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c705a {",
            "python_code": "n = int ( input ( ) ) base = ( n // 4 + 1 ) * '9' ans = basei = j = 1 f = Truefor i in range ( 0 , n + 1 ) : j = 0 while i * 4 + j * 7 < n : j += 1 if i * 4 + j * 7 == n : x = ( '4' * i + '7' * j ) print ( x ) f = False break   if f : print ( - 1 )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_772_A_895",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Random ; import java . util . StringTokenizer ; ",
            "python_code": "f = lambda : map ( int , input ( ) . split ( ) ) n , p = f ( ) s = [ 0 ] * nx , y = - p , 0 for i in range ( n ) : a , b = f ( ) x += a y += b s [ i ] = ( a , b ) s . sort ( key = lambda q : q [ 0 ] / q [ 1 ] ) for a , b in s : if b * x > a * y : x -= a y -= b  print ( y / x if x > 0 else - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1688_A_896",
            "java_code": "class GFG { static int geometricMean ( int n ) { return ( int ) Math . sqrt ( n ) ; } public static void main ( String [ ] args ) { int n = 16 ; System . out . println ( geometricMean ( n ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def geometricMean ( n ) : NEWLINE INDENT return int ( sqrt ( n ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 16 ; NEWLINE print ( geometricMean ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1343_A_897",
            "java_code": "import java . util . Scanner ;  public class Candies {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  int t = in . nextInt ( ) ; int n , sum ;  while ( t -- != 0 ) { n = in . nextInt ( ) ; sum = 1 ;  for ( int i = 2 ; ; i *= 2 ) { sum += i ; if ( n % sum == 0 ) { System . out . println ( n / sum ) ; break ; }  } } }  }",
            "python_code": "from math import ceil , log2  for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) x = n for k in range ( 2 , ceil ( log2 ( n ) ) + 1 ) : if n % ( 2 ** k - 1 ) == 0 : x = n // ( 2 ** k - 1 ) break print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_705_A_898",
            "java_code": "import java . util . * ; public class Hulk { public static void main ( String args [ ] ) { int n = 0 ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; String res = \"\" ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 != 0 ) res = res + \"I hate \" ; else res = res + \"I love \" ; if ( i != n ) res = res + \"that \" ; } res = res + \"it\" ; System . out . println ( res ) ; } }",
            "python_code": "n = int ( input ( ) ) for i in range ( 1 , n ) : if i % 2 == 1 : print ( 'I hate that' , end = ' ' ) else : print ( 'I love that' , end = ' ' ) if n % 2 == 1 : print ( 'I hate it' , end = ' ' ) else : print ( 'I love it' , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1159_A_899",
            "java_code": "import java . util . Scanner ; import java . util . Stack ;  public class problem49 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = 0 m = 0 i = n - 1 s = str ( input ( ) ) while ( i >= 0 ) : if s [ i ] == '+' : m += 1 else : m -= 1 a = max ( a , m ) i -= 1 print ( a )      NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_222_A_900",
            "java_code": "import java . util . Scanner ;  public class P222A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } int j = n - 1 ; while ( j > 0 && a [ j ] == a [ j - 1 ] ) j -- ; System . out . println ( j < k ? j : - 1 ) ; } }",
            "python_code": "n , k = [ int ( x ) for x in input ( ) . split ( ) ] last = 0 cnt = 1 ai = [ int ( x ) for x in input ( ) . split ( ) ] for i in range ( n ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_152_A_901",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class problem94 {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) x = [ ] d = { } for i in range ( n ) : a = list ( input ( ) ) x . append ( a ) for i in x : for j , k in enumerate ( i ) : d [ j ] = 0 for i in x : for j , k in enumerate ( i ) : d [ j ] = max ( d [ j ] , int ( k ) ) c = 0 for i in x : for j , k in enumerate ( i ) : if int ( k ) == d [ j ] : c += 1 breakprint ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1180_A_902",
            "java_code": "import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; System . out . println ( n * n + ( n - 1 ) * ( n - 1 ) ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( 1 + ( n - 1 ) * n * 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_838_A_903",
            "java_code": "import java . io . * ; class GFG { static void angleequichord ( int z ) { System . out . println ( \"The angle subtended at the center is \" + z + \" degrees\" ) ; } public static void main ( String [ ] args ) { int z = 48 ; angleequichord ( z ) ; } }",
            "python_code": "def angleequichord ( z ) : NEWLINE INDENT print ( \"The angle subtended at\" , \"the center is\" , z , \"degrees\" ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT z = 48 ; NEWLINE angleequichord ( z ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3298_A_904",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { int ax = 5 , ay = 0 ; int bx = 1 , by = 1 ; int cx = 2 , cy = 5 ; System . out . println ( ax + ( cx - bx ) + \", \" + ay + ( cy - by ) ) ; } }",
            "python_code": "if __name__ == \"__main__\" : NEWLINE INDENT ax , ay = 5 , 0 NEWLINE bx , by = 1 , 1 NEWLINE cx , cy = 2 , 5 NEWLINE print ( ax + cx - bx , \",\" , ay + cy - by ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_939_B_905",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "k , n = map ( int , input ( ) . split ( ) ) r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = r ( ) x = float ( 'inf' )  for pos , i in enumerate ( arr ) : if ( k % i ) < x : x = k % i ans = pos    print ( ans + 1 , k // arr [ ans ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_262_A_906",
            "java_code": "import java . util . * ; public class RomaandLuckyNumbers {  public static void main ( String [ ] args ) {",
            "python_code": "import sys  def main ( ) : _ , k , * l = sys . stdin . read ( ) . strip ( ) . split ( ) return sum ( sum ( i in '47' for i in s ) <= int ( k ) for s in l ) print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_979_A_907",
            "java_code": "import java . util . Scanner ;  public class SolutionA { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; if ( n == 0 ) { System . out . println ( 0 ) ; } else if ( n % 2 == 0 ) { System . out . println ( n + 1 ) ; } else { System . out . println ( ( n + 1 ) / 2 ) ; }  } }",
            "python_code": "n = int ( input ( ) ) + 1  if n == 1 : print ( 0 ) else : if n % 2 : print ( n ) else : print ( n // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_712_A_908",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; if ( i > 0 ) System . out . print ( ( a [ i - 1 ] + a [ i ] ) + \" \" ) ; } System . out . print ( a [ n - 1 ] ) ; } }",
            "python_code": "n = int ( input ( ) ) lst = [ int ( i ) for i in input ( ) . split ( ) ]  for i in range ( n - 1 ) : print ( lst [ i ] + lst [ i + 1 ] , end = ' ' ) print ( lst [ n - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4409_A_909",
            "java_code": "public class GFG { static float sumOfSeries ( int x , int k ) { float y = ( float ) ( ( ( float ) ( x ) / 81 ) * ( 9 * k - 1 + Math . pow ( 10 , ( - 1 ) * k ) ) ) ; return y ; } public static void main ( String args [ ] ) { int x = 9 ; int k = 20 ; System . out . println ( sumOfSeries ( x , k ) ) ; } }",
            "python_code": "def sumOfSeries ( x , k ) : NEWLINE INDENT return ( float ( x ) / 81 ) * ( 9 * k - 1 + 10 ** ( ( - 1 ) * k ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 9 NEWLINE k = 20 NEWLINE print ( sumOfSeries ( x , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4024_A_910",
            "java_code": "class GFG { static int solve ( int n , int base ) { int result = 0 ; while ( n > 0 ) { int remainder = n % base ; result = result + remainder ; n = n / base ; } return result ; } static void printSumsOfDigits ( int n ) { for ( int base = 2 ; base < n ; ++ base ) System . out . print ( solve ( n , base ) + \" \" ) ; } public static void main ( String [ ] args ) { int n = 8 ; printSumsOfDigits ( n ) ; } }",
            "python_code": "def solve ( n , base ) : NEWLINE INDENT result = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT remainder = n % base NEWLINE result = result + remainder NEWLINE n = int ( n / base ) NEWLINE DEDENT return result NEWLINE DEDENT def printSumsOfDigits ( n ) : NEWLINE INDENT for base in range ( 2 , n ) : NEWLINE INDENTINDENT print ( solve ( n , base ) , end = \" \" ) NEWLINE DEDENT DEDENT n = 8 NEWLINE printSumsOfDigits ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1436_A_911",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ;  public class main {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import sys  input = sys . stdin . buffer . readline  t = int ( input ( ) ) NEWLINE for _ in range ( t ) : n , m = map ( int , input ( ) . split ( ) ) NEWLINE S = sum ( list ( map ( int , input ( ) . split ( ) ) ) ) NEWLINE print ( \"YES\" if S == m else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_999_B_912",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import sysinput = sys . stdin . readline  n = int ( input ( ) ) s = input ( ) for i in range ( 1 , n + 1 ) : if n % i == 0 : s = s [ : i ] [ : : - 1 ] + s [ i : ] print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1139_A_913",
            "java_code": "class GFG { static int get ( int x , int y , int z ) { if ( x > z ) return - 1 ; int val = z - x ; int div = ( z - x ) / y ; int ans = div * y + x ; return ans ; } public static void main ( String [ ] args ) { int x = 1 , y = 5 , z = 8 ; System . out . print ( get ( x , y , z ) + \"\\n\" ) ; } }",
            "python_code": "def get ( x , y , z ) : NEWLINE INDENT if ( x > z ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT val = z - x NEWLINE div = ( z - x ) // y NEWLINE ans = div * y + x NEWLINE return ans NEWLINE DEDENT x = 1 NEWLINE y = 5 NEWLINE z = 8 NEWLINE print ( get ( x , y , z ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4056_A_914",
            "java_code": "class GFG { static double sum ( int x , int n ) { double i , total = 1.0 , multi = x ; for ( i = 1 ; i <= n ; i ++ ) { total = total + multi / i ; multi = multi * x ; } return total ; } public static void main ( String [ ] args ) { int x = 2 ; int n = 5 ; System . out . printf ( \"%.2f\" , sum ( x , n ) ) ; } }",
            "python_code": "def sum ( x , n ) : NEWLINE INDENT total = 1.0 NEWLINE multi = x NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT total = total + multi / i NEWLINE multi = multi * x NEWLINE DEDENT return total NEWLINE DEDENT x = 2 NEWLINE n = 5 NEWLINE print ( round ( sum ( x , n ) , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_644_A_915",
            "java_code": "class GFG { static long evenFib ( int n ) { if ( n < 1 ) return n ; if ( n == 1 ) return 2 ; return ( ( 4 * evenFib ( n - 1 ) ) + evenFib ( n - 2 ) ) ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . println ( evenFib ( n ) ) ; } }",
            "python_code": "def evenFib ( n ) : NEWLINE INDENT if ( n < 1 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 2 NEWLINE DEDENT return ( ( 4 * evenFib ( n - 1 ) ) + evenFib ( n - 2 ) ) NEWLINE DEDENT n = 7 NEWLINE print ( evenFib ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1467_A_916",
            "java_code": "import java . util . * ; public class sol { public static void main ( String ar [ ] ) { Scanner scan = new Scanner ( System . in ) ; int test = scan . nextInt ( ) ; while ( test -- > 0 ) { int n = scan . nextInt ( ) ; System . out . print ( 9 ) ; int i = 8 ; n -- ; while ( n -- > 0 ) { System . out . print ( i ) ; i = ( i + 1 ) % 10 ; } System . out . println ( ) ; } } }",
            "python_code": "import sysinput = sys . stdin . readlinefor NEWLINE _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE res = [ ] NEWLINE for i in range ( min ( n , 2 ) ) : res . append ( str ( 9 - ( i % 10 ) ) ) NEWLINE for i in range ( 2 , n ) : res . append ( str ( ( 9 + i - 2 ) % 10 ) )  print ( \"\" . join ( res ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_341_A_917",
            "java_code": "import java . text . * ; class GFG { static double p = 1 , f = 1 ; static double e ( int x , int n ) { double r ; if ( n == 0 ) return 1 ; r = e ( x , n - 1 ) ; p = p * x ; f = f * n ; return ( r + p / f ) ; } public static void main ( String [ ] args ) { int x = 4 , n = 15 ; DecimalFormat df = new DecimalFormat ( \"0.######\" ) ; System . out . println ( df . format ( e ( x , n ) ) ) ; } }",
            "python_code": "p = 1.0 NEWLINE f = 1.0 NEWLINE def e ( x , n ) : NEWLINE INDENT global p , f NEWLINE if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT r = e ( x , n - 1 ) NEWLINE p = p * x NEWLINE f = f * n NEWLINE return ( r + p / f ) NEWLINE DEDENT x = 4 NEWLINE n = 15 NEWLINE print ( e ( x , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1130_A_918",
            "java_code": "import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;   public class scratch_25 {",
            "python_code": "import mathn = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) )  least = math . ceil ( n / 2 )  newlist = [ i for i in l if i != 0 ] p = 0 n = 0  if len ( newlist ) >= least : for i in newlist : if i / 1 > 0 : p += 1 else : n += 1 if p >= n : if p >= least : print ( 1 ) else : print ( 0 ) else : if n >= least : print ( - 1 ) else : print ( 0 ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4647_A_919",
            "java_code": "import java . util . * ; class GfG { static void pattern ( int n ) { int p , k = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { p = k ; for ( int j = 1 ; j <= i ; j ++ ) { System . out . print ( p ) ; System . out . print ( \" \" ) ; p = p - ( n + j - i ) ; } System . out . println ( ) ; k = k + 1 + n - i ; } } public static void main ( String [ ] args ) { int n = 5 ; pattern ( n ) ; } }",
            "python_code": "def pattern ( n ) : NEWLINE INDENT k = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT p = k NEWLINE for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT print ( p , end = \" \" ) NEWLINE p = p - ( n + j - i ) NEWLINE DEDENT print ( \"\" ) NEWLINE k = k + 1 + n - i NEWLINE DEDENT DEDENT n = 5 NEWLINE pattern ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1779_A_920",
            "java_code": "import java . io . * ; class GFG { static void printGreater ( int x , int y ) { double X = y * Math . log ( x ) ; double Y = x * Math . log ( y ) ; if ( Math . abs ( X - Y ) < 1e-9 ) { System . out . println ( \"Equal\" ) ; } else if ( X > Y ) { System . out . println ( x + \"^\" + y ) ; } else { System . out . println ( y + \"^\" + x ) ; } } public static void main ( String [ ] args ) { int x = 5 , y = 8 ; printGreater ( x , y ) ; } }",
            "python_code": "import math NEWLINE def printGreater ( x , y ) : NEWLINE INDENT X = y * math . log ( x ) ; NEWLINE Y = x * math . log ( y ) ; NEWLINE if ( abs ( X - Y ) < 1e-9 ) : NEWLINE INDENTINDENT print ( \"Equal\" ) ; NEWLINE DEDENT elif ( X > Y ) : NEWLINE INDENTINDENT print ( x , \"^\" , y ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( y , \"^\" , x ) ; NEWLINE DEDENT DEDENT x = 5 ; NEWLINE y = 8 ; NEWLINE printGreater ( x , y ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_839_A_921",
            "java_code": "import java . sql . ClientInfoStatus ; import java . util . * ;   public class Practise { ",
            "python_code": "n , k = [ int ( i ) for i in input ( ) . split ( ) ] a = [ int ( i ) for i in input ( ) . split ( ) ] b = 0 c = 0 for i in range ( n ) : b += a [ i ] if b >= 8 : b -= 8 c += 8 else : c += b b = 0 if c >= k : print ( i + 1 ) breakelse : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_186_A_922",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "a = input ( ) b = input ( ) coun = 0 leta = [ ] letb = [ ] n = len ( a ) if len ( a ) == len ( b ) : for i in range ( len ( a ) ) : if a [ i ] == b [ i ] : coun += 1 else : leta . append ( a [ i ] ) letb . append ( b [ i ] ) if coun >= n - 2 : leta . sort ( ) ; letb . sort ( ) if leta == letb : print ( \"YES\" ) else : print ( \"NO\" ) else : print ( \"NO\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_352_B_923",
            "java_code": "import java . util . * ;  public class Problem_352B {",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time , math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_787_A_924",
            "java_code": "import java . util . * ;  public class Monster { public static void main ( String [ ] args ) { int a = 2 ;",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) c , d = map ( int , input ( ) . split ( ) ) ans = \"-1\" while b < 100000 : if b == d : ans = b break elif b > d : d += c else : b += aprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_815_A_925",
            "java_code": "public class GFG { static float squareArea ( float l , float b , float h ) { if ( l < 0 || b < 0 || h < 0 ) return - 1 ; float a = ( l * b ) / ( l + b ) ; return a * a ; } public static void main ( String [ ] args ) { float l = 5 , b = 12 , h = 13 ; System . out . println ( squareArea ( l , b , h ) ) ; } }",
            "python_code": "def squareArea ( l , b , h ) : NEWLINE INDENT if l < 0 or b < 0 or h < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = ( l * b ) / ( l + b ) NEWLINE return a * a NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l , b , h = 5 , 12 , 13 NEWLINE print ( round ( squareArea ( l , b , h ) , 4 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_719_B_926",
            "java_code": "import java . util . * ; import java . io . * ; public class a {  public static void main ( final String [ ] args ) throws IOException { BufferInput sc = new BufferInput ( ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ;",
            "python_code": "n = int ( input ( ) ) m = input ( ) rb = { 'r' : 0 , 'b' : 0 } br = { 'r' : 0 , 'b' : 0 } for i in range ( n ) : if i % 2 == 0 : if m [ i ] == 'b' : br [ 'b' ] += 1 else : rb [ 'r' ] += 1 else : if m [ i ] == 'r' : br [ 'r' ] += 1 else : rb [ 'b' ] += 1 rbs = min ( rb [ 'b' ] , rb [ 'r' ] ) + abs ( rb [ 'b' ] - rb [ 'r' ] ) brs = min ( br [ 'b' ] , br [ 'r' ] ) + abs ( br [ 'b' ] - br [ 'r' ] ) print ( min ( rbs , brs ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4491_A_927",
            "java_code": "import java . io . * ; class GFG { static String allBitsSetInTheGivenRange ( int n , int l , int r ) { int num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) ; int new_num = n & num ; if ( new_num == 0 ) return \"Yes\" ; return \"No\" ; } public static void main ( String [ ] args ) { int n = 17 ; int l = 2 ; int r = 4 ; System . out . println ( allBitsSetInTheGivenRange ( n , l , r ) ) ; } }",
            "python_code": "def allBitsSetInTheGivenRange ( n , l , r ) : NEWLINE INDENT num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) NEWLINE new_num = n & num NEWLINE if ( new_num == 0 ) : NEWLINE INDENTINDENT return \"Yes\" NEWLINE DEDENT return \"No\" NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 17 NEWLINE l = 2 NEWLINE r = 4 NEWLINE print ( allBitsSetInTheGivenRange ( n , l , r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1373_A_928",
            "java_code": " import java . util . * ; import java . io . * ;  public class Main { private static final int N = ( int ) 1e3 + 10 ; public static void main ( String [ ] args ) throws IOException { int t ; StreamTokenizer cin = new StreamTokenizer ( new BufferedReader ( new InputStreamReader ( System . in ) ) ) ;",
            "python_code": "if __name__ == \"__main__\" : T = int ( input ( ) ) solution = 0 for t in range ( T ) : a , b , c = map ( int , input ( ) . split ( ) ) if b * a < c : print ( '1' , ' ' , '-1' ) elif b * a == c : print ( b - 1 , ' ' , '-1' ) else : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1285_A_929",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String n = sc . nextLine ( ) ; String s = sc . nextLine ( ) ; int Lout = 0 , Rout = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == 76 ) { Lout ++ ; } else { Rout ++ ; } } System . out . println ( Rout + Lout + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) x = s . count ( \"L\" ) y = s . count ( \"R\" ) print ( y + x + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1452_B_930",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class B1452 { public static void main ( String [ ] args ) throws IOException { FastScanner fs = new FastScanner ( ) ; PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "import sys , functools , collections , bisect , math , NEWLINE INDENT heapqinput = sys . stdin . readline NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2497_A_931",
            "java_code": "import java . io . * ; class GFG { static int mod ( String num , int a ) { int res = 0 ; for ( int i = 0 ; i < num . length ( ) ; i ++ ) res = ( res * 10 + ( int ) num . charAt ( i ) - '0' ) % a ; return res ; } public static void main ( String [ ] args ) { String num = \"12316767678678\" ; System . out . println ( mod ( num , 10 ) ) ; } }",
            "python_code": "def mod ( num , a ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( 0 , len ( num ) ) : NEWLINE INDENTINDENT res = ( res * 10 + int ( num [ i ] ) ) % a ; NEWLINE DEDENT return res NEWLINE DEDENT num = \"12316767678678\" ; NEWLINE print ( mod ( num , 10 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_337_A_932",
            "java_code": "class GFG { static void ifPossible ( int X , int Y ) { if ( X > Y ) swap ( X , Y ) ; if ( ( X + Y ) % 5 == 0 && 3 * X >= 2 * Y ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } static void swap ( int x , int y ) { int temp = x ; x = y ; y = temp ; } public static void main ( String [ ] args ) { int X = 33 , Y = 27 ; ifPossible ( X , Y ) ; } }",
            "python_code": "def ifPossible ( X , Y ) : NEWLINE INDENT if ( X > Y ) : NEWLINE INDENTINDENT X , Y = Y , X NEWLINE DEDENT if ( ( X + Y ) % 5 == 0 and 3 * X >= 2 * Y ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE DEDENT DEDENT X = 33 NEWLINE Y = 27 NEWLINE ifPossible ( X , Y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_408_A_933",
            "java_code": "import java . util . * ; import java . util . Arrays ; import java . util . Collections ; public class LineToCashier {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) fodac = input ( ) val = 100000 for i in range ( n ) : val = min ( val , sum ( int ( x ) * 5 + 15 for x in input ( ) . split ( ) ) ) print ( val ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3071_A_934",
            "java_code": "import java . util . * ; class GFG { static String FirstAndLast ( String str ) { String [ ] arrOfStr = str . split ( \" \" ) ; String res = \"\" ; for ( String a : arrOfStr ) { res += a . substring ( 1 , a . length ( ) - 1 ) + \" \" ; } return res ; } public static void main ( String args [ ] ) { String str = \"Geeks for Geeks\" ; System . out . println ( str ) ; System . out . println ( FirstAndLast ( str ) ) ; } }",
            "python_code": "def FirstAndLast ( string ) : NEWLINE INDENT arrOfStr = string . split ( ) ; NEWLINE res = \"\" ; NEWLINE for a in arrOfStr : NEWLINE INDENTINDENT res += a [ 1 : len ( a ) - 1 ] + \" \" ; NEWLINE DEDENT return res ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT string = \"Geeks for Geeks\" ; NEWLINE print ( string ) ; NEWLINE print ( FirstAndLast ( string ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_933_B_935",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ; public class B { public static void main ( String [ ] args ) throws Exception { BufferedReader bf = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "s = input ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_798_A_936",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class _0646Mikeandpalindrome {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; char [ ] arr = s . toCharArray ( ) ; int count = 0 ; for ( int i = 0 ; i < s . length ( ) / 2 ; i ++ ) {",
            "python_code": "s = input ( ) s1 = s [ : len ( s ) // 2 ] if len ( s ) % 2 == 0 : s2 = s [ len ( s ) // 2 : ] else : s2 = s [ len ( s ) // 2 + 1 : ]  s2 = s2 [ - 1 : : - 1 ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_560_A_937",
            "java_code": "import java . util . * ;  public class Practise {  static int [ ] [ ] dp ;   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; boolean tt = false ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc . nextInt ( ) ; if ( a == 1 ) { tt = true ; } } if ( tt ) System . out . println ( - 1 ) ; else System . out . println ( 1 ) ;    } } ",
            "python_code": "n = int ( input ( ) ) notes = list ( map ( int , input ( ) . split ( ) ) ) print ( ( 1 , - 1 ) [ min ( notes ) == 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_851_A_938",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int t = sc . nextInt ( ) ; if ( t < k ) { System . out . print ( t ) ; } else if ( t >= k && t <= n ) { System . out . print ( k ) ; } else { System . out . print ( k - ( t - n ) ) ; } } }",
            "python_code": "n , k , t = map ( int , input ( ) . split ( \" \" ) ) v = min ( t , k , n + k - t ) print ( v ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1391_A_939",
            "java_code": "import java . util . Scanner ; public class Codeforces { public static Scanner scanner = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; for ( int j = 1 ; j <= n ; j ++ ) { System . out . print ( j + \" \" ) ; } System . out . println ( ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : NEWLINE INDENT n = int ( input ( ) ) NEWLINE print ( * list ( range ( 1 , n + 1 ) ) , sep = \" \" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_456_A_940",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "'''* Author : Ayushman Chahar #* About  : IT Sophomore    #* Insti  : VIT, Vellore    #'''  import osimport sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1175_A_941",
            "java_code": "import java . io . * ; class GFG { static int russianPeasant ( int a , int b ) { int res = 0 ; while ( b > 0 ) { if ( ( b & 1 ) != 0 ) res = res + a ; a = a << 1 ; b = b > > 1 ; } return res ; } public static void main ( String [ ] args ) { System . out . println ( russianPeasant ( 18 , 1 ) ) ; System . out . println ( russianPeasant ( 20 , 12 ) ) ; } }",
            "python_code": "def russianPeasant ( a , b ) : NEWLINE INDENT res = 0 NEWLINE while ( b > 0 ) : NEWLINE INDENTINDENT if ( b & 1 ) : NEWLINE INDENTINDENTINDENT res = res + a NEWLINE DEDENT a = a << 1 NEWLINE b = b >> 1 NEWLINE DEDENT return res NEWLINE DEDENT print ( russianPeasant ( 18 , 1 ) ) NEWLINE print ( russianPeasant ( 20 , 12 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3393_A_942",
            "java_code": "class GFG { static int OR ( int a [ ] , int n ) { int ans = a [ 0 ] ; int i ; for ( i = 1 ; i < n ; i ++ ) { ans |= a [ i ] ; } return ans ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 4 , 6 } ; int n = a . length ; System . out . println ( OR ( a , n ) ) ; } }",
            "python_code": "def OR ( a , n ) : NEWLINE INDENT ans = a [ 0 ] NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT ans |= a [ i ] NEWLINE DEDENT return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = [ 1 , 4 , 6 ] NEWLINE n = len ( a ) NEWLINE print ( OR ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1407_A_943",
            "java_code": "class GFG { static void printPairs ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { System . out . print ( \"(\" + arr [ i ] + \", \" + arr [ j ] + \")\" + \", \" ) ; } } } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 } ; int n = arr . length ; printPairs ( arr , n ) ; } }",
            "python_code": "def printPairs ( arr , n ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( n ) : NEWLINE INDENTINDENTINDENT print ( \"(\" , arr [ i ] , \",\" , arr [ j ] , \")\" , end = \", \" ) NEWLINE DEDENT DEDENT DEDENT arr = [ 1 , 2 ] NEWLINE n = len ( arr ) NEWLINE printPairs ( arr , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1477_B_944",
            "java_code": "import java . util . * ; import java . util . Map . Entry ;  import java . math . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws FileNotFoundException { InputReader in = new InputReader ( System . in ) ;",
            "python_code": "import osimport NEWLINE sysfrom NEWLINE io NEWLINE import BytesIO , IOBase NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_11_A_945",
            "java_code": "class GFG { static int sumOfDivisblePowers ( int L , int R , int P ) { int res = 0 ; for ( int i = L ; i <= R ; i ++ ) { int x = i ; while ( x % P == 0 ) { res ++ ; x /= P ; } } return res ; } public static void main ( String [ ] args ) { int L = 1 , R = 10 , P = 2 ; System . out . println ( sumOfDivisblePowers ( L , R , P ) ) ; } }",
            "python_code": "def sumOfDivisblePowers ( L , R , P ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( L , R + 1 ) : NEWLINE INDENTINDENT x = i NEWLINE while ( x % P == 0 ) : NEWLINE INDENTINDENTINDENT res += 1 NEWLINE x /= P NEWLINE DEDENT DEDENT return res NEWLINE DEDENT L = 1 NEWLINE R = 10 NEWLINE P = 2 NEWLINE print ( sumOfDivisblePowers ( L , R , P ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1370_A_946",
            "java_code": " import java . util . * ; public class f { public static void main ( String [ ] a ) { Scanner sc = new Scanner ( System . in ) ; if ( sc . hasNext ( ) ) { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; System . out . println ( n / 2 ) ;   }  } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : print ( int ( input ( ) ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2400_A_947",
            "java_code": "import java . io . * ; class GFG { static float circleradius ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; float r = ( float ) ( ( l * b ) / ( 2 * Math . sqrt ( ( Math . pow ( l , 2 ) + Math . pow ( b , 2 ) ) ) ) ) ; return r ; } public static void main ( String [ ] args ) { float l = 5 , b = 3 ; System . out . print ( circleradius ( l , b ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def circleradius ( l , b ) : NEWLINE INDENT if ( l < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT r = ( l * b ) / ( 2 * sqrt ( ( pow ( l , 2 ) + pow ( b , 2 ) ) ) ) ; NEWLINE return r NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT l = 5 NEWLINE b = 3 NEWLINE print ( \"{0:.5}\" . format ( circleradius ( l , b ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_197_A_948",
            "java_code": "import java . util . Scanner ;  public class TestBetter { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int a , b , r ; a = input . nextInt ( ) ; b = input . nextInt ( ) ; r = input . nextInt ( ) ;  System . out . println ( ( ( ( 2 * r ) <= a ) && ( ( 2 * r ) <= b ) ) ? \"First\" : \"Second\" ) ; } }",
            "python_code": "a , b , r = map ( int , input ( ) . split ( ) ) if ( 2 * r > min ( a , b ) ) : print ( \"Second\" ) else : print ( \"First\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4519_A_949",
            "java_code": "import java . io . * ; class GFG { static int nextPowerOf2 ( int n ) { n -- ; n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; n ++ ; return n ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( nextPowerOf2 ( n ) ) ; } }",
            "python_code": "def nextPowerOf2 ( n ) : NEWLINE INDENT n -= 1 NEWLINE n |= n >> 1 NEWLINE n |= n >> 2 NEWLINE n |= n >> 4 NEWLINE n |= n >> 8 NEWLINE n |= n >> 16 NEWLINE n += 1 NEWLINE return n NEWLINE DEDENT n = 5 NEWLINE print ( nextPowerOf2 ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1473_A_950",
            "java_code": "import java . util . * ; public class ReplacingElements {  public static void main ( String [ ] args ) {",
            "python_code": "tests = int ( input ( ) )  for test in range ( tests ) : n , d = map ( int , input ( ) . split ( ) ) NEWLINE a = [ int ( x ) for x in input ( ) . split ( ) ] NEWLINE a . sort ( )  if max ( a ) <= d : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE b = [ a [ 0 ] + a [ 1 ] if x >= d else x for x in a ] NEWLINE DEDENT if max ( b ) <= d : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_817_A_951",
            "java_code": "import java . util . * ; ",
            "python_code": "a , b , c , d = map ( int , input ( ) . split ( ) ) x , y = map ( int , input ( ) . split ( ) ) m = abs ( c - a ) n = abs ( d - b ) if m % x != 0 or n % y != 0 : print ( 'NO' ) elif ( m // x ) % 2 != ( n // y ) % 2 : print ( 'NO' ) else : print ( 'YES' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1040_B_952",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class pblm3 { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int N = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int st = 1 , i = st ; int c = 0 ; List < Integer > al = new ArrayList < Integer > ( ) ; while ( i <= N ) { al . add ( i ) ; c ++ ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) c = k + 1 if n % ( 2 * k + 1 ) >= k + 1 or n % ( 2 * k + 1 ) == 0 else 1 ans = [ ] while c <= n : ans . append ( c ) c += 2 * k + 1 if ans [ - 1 ] + k < n : ans . append ( min ( n , ans [ - 1 ] + k * 2 + 1 ) ) print ( len ( ans ) ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2085_A_953",
            "java_code": "class GFG { static int digSum ( int n ) { if ( n == 0 ) return 0 ; return ( n % 9 == 0 ) ? 9 : ( n % 9 ) ; } static int repeatedNumberSum ( int n , int x ) { int sum = x * digSum ( n ) ; return digSum ( sum ) ; } public static void main ( String [ ] args ) { int n = 24 , x = 3 ; System . out . println ( repeatedNumberSum ( n , x ) ) ; } }",
            "python_code": "def digSum ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return ( n % 9 == 0 ) and 9 or ( n % 9 ) NEWLINE DEDENT def repeatedNumberSum ( n , x ) : NEWLINE INDENT sum = x * digSum ( n ) NEWLINE return digSum ( sum ) NEWLINE DEDENT n = 24 ; x = 3 NEWLINE print ( repeatedNumberSum ( n , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1333_A_954",
            "java_code": "import java . util . * ;  public class LittleArtern {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { String s = \"B\" ; for ( int j = 0 ; j < m - 1 ; j ++ ) { if ( i == n - 1 ) { s += 'B' ; } else s += 'W' ; } System . out . println ( s ) ; } }  }  }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : c , r = map ( int , input ( ) . split ( ) ) grid = [ [ ] for _ in range ( c ) ] grid [ 0 ] . append ( 'W' ) for i in grid : for _ in range ( r ) : i . append ( 'B' ) grid [ 0 ] . remove ( grid [ 0 ] [ - 1 ] ) for i in grid : print ( '' . join ( i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1017_A_955",
            "java_code": "import java . util . Arrays ; import java . util . Collections ;  import java . util . Scanner ;  public class Problem36 {  public static void main ( String [ ] args ) {",
            "python_code": "l = [ ] for i in range ( int ( input ( ) ) ) : l . append ( sum ( list ( map ( int , input ( ) . split ( ) ) ) ) ) print ( sum ( 1 for i in l if i > l [ 0 ] ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3622_A_956",
            "java_code": "import java . io . * ; class GFG { static int breakSum ( int n ) { if ( n == 0 || n == 1 ) return n ; return Math . max ( ( breakSum ( n / 2 ) + breakSum ( n / 3 ) + breakSum ( n / 4 ) ) , n ) ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( breakSum ( n ) ) ; } }",
            "python_code": "def breakSum ( n ) : NEWLINE INDENT if ( n == 0 or n == 1 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT return max ( ( breakSum ( n // 2 ) + breakSum ( n // 3 ) + breakSum ( n // 4 ) ) , n ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 12 NEWLINE print ( breakSum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_897_A_957",
            "java_code": "import java . util . * ;   public class l700 {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) s = list ( input ( ) ) for i in range ( m ) : a , b , c , d = map ( str , input ( ) . split ( ) ) a = int ( a ) b = int ( b ) if a == b : if s [ a - 1 ] == c : s [ a - 1 ] = d else : for j in range ( a - 1 , b ) : if s [ j ] == c : s [ j ] = dfor i in s : print ( i , end = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_35_B_958",
            "java_code": "import javax . annotation . processing . SupportedSourceVersion ; import java . io . * ; import java . util . * ; import java . util . regex . Matcher ;  public class Main {  public static void main ( String [ ] args ) throws IOException { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; InputReader in = new InputReader ( new FileReader ( \"input.txt\" ) ) ;",
            "python_code": "import sysdef add ( x , y , id_t , shelves , track ) : element = ( ( x - 1 ) % n ) * m + y - 1 ; if shelves [ element ] : element += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_793_A_959",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  min = min ( arr ) sum = 0 for a in arr : if ( a - min ) % k != 0 : sum = 1 k = 2 break sum += a - min  print ( - 1 ) if sum % k != 0 and n > 1 else print ( int ( ( sum / k ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_467_A_960",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; int cnt = 0 ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; if ( a < b - 1 ) { cnt ++ ; } } System . out . println ( cnt ) ; } }",
            "python_code": "rooms = int ( input ( '' ) ) count = 0 for room in range ( rooms ) : x = input ( '' ) . split ( ) if int ( x [ 1 ] ) - int ( x [ 0 ] ) >= 2 : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_340_A_961",
            "java_code": "class GFG { static int nCr ( int n , int r ) { return fact ( n ) / ( fact ( r ) * fact ( n - r ) ) ; } static int fact ( int n ) { int res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) res = res * i ; return res ; } public static void main ( String [ ] args ) { int n = 5 , r = 3 ; System . out . println ( nCr ( n , r ) ) ; } }",
            "python_code": "def nCr ( n , r ) : NEWLINE INDENT return ( fact ( n ) / ( fact ( r ) * fact ( n - r ) ) ) NEWLINE DEDENT def fact ( n ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT res = res * i NEWLINE DEDENT return res NEWLINE DEDENT n = 5 NEWLINE r = 3 NEWLINE print ( int ( nCr ( n , r ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_246_A_962",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "n = int ( input ( ) ) if n == 1 or n == 2 : print ( - 1 ) else : arr = [ int ( i ) for i in range ( n , 0 , - 1 ) ] print ( * arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_588_A_963",
            "java_code": "import java . io . IOException ; import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) throws IOException { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int ans = 0 ; int p = 110 ; for ( int i = 0 ; i < n ; i ++ ) { int a = in . nextInt ( ) ; p = Math . min ( p , in . nextInt ( ) ) ; ans += p * a ; } System . out . println ( ans ) ; } }",
            "python_code": "days = int ( input ( ) ) dailyReq = [ ] dailyPrice = [ ] totalCost = 0 for day in range ( days ) : a , p = input ( ) . split ( ) dailyReq . append ( int ( a ) ) dailyPrice . append ( int ( p ) )  minPrice = dailyPrice [ 0 ] for day in range ( days ) : if ( dailyPrice [ day ] < minPrice ) : minPrice = dailyPrice [ day ] totalCost += dailyReq [ day ] * minPrice  print ( totalCost )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4852_A_964",
            "java_code": "import java . io . * ; class GFG { static int centeredoctagonalNumber ( int n ) { return 4 * n * ( n - 1 ) + 1 ; } public static void main ( String args [ ] ) { int n = 6 ; System . out . print ( n + \"th centered \" + \"octagonal number: \" ) ; System . out . println ( centeredoctagonalNumber ( n ) ) ; n = 11 ; System . out . print ( n + \"th centered \" + \"octagonal number: \" ) ; System . out . println ( centeredoctagonalNumber ( n ) ) ; } }",
            "python_code": "def cen_octagonalnum ( n ) : NEWLINE INDENT return ( 4 * n * n - 4 * n + 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 6 NEWLINE print ( n , \"th Centered\" , \"octagonal number: \" , cen_octagonalnum ( n ) ) NEWLINE n = 11 NEWLINE print ( n , \"th Centered\" , \"octagonal number: \" , cen_octagonalnum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_133_A_965",
            "java_code": "import java . util . Scanner ;",
            "python_code": "s = input ( ) if 'H' in s or 'Q' in s or '9' in s : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_580_A_966",
            "java_code": "import java . util . * ; class GFG { static void solve ( int n ) { int n_2 = n / 2 ; String den ; den = \"1\" ; while ( n_2 -- > 0 ) den += '0' ; System . out . println ( 1 + \"/\" + den ) ; } public static void main ( String [ ] args ) { int N = 5 ; solve ( N ) ; } }",
            "python_code": "def solve ( n ) : NEWLINE INDENT n_2 = n // 2 ; NEWLINE den = \"1\" ; NEWLINE while ( n_2 ) : NEWLINE INDENTINDENT den += '0' ; NEWLINE n_2 -= 1 NEWLINE DEDENT print ( str ( 1 ) + \"/\" + str ( den ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE solve ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_523_A_967",
            "java_code": "import java . io . BufferedReader ;",
            "python_code": "w , h = map ( int , input ( ) . split ( ) ) l = [ ] for i in range ( h ) : s = input ( ) l . append ( s ) for i in range ( w ) : s = '' for j in range ( h - 1 , - 1 , - 1 ) : s += l [ j ] [ i ] * 2 s = s [ : : - 1 ] print ( s ) print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1220_A_968",
            "java_code": "import java . util . * ; import java . lang . * ; public class x { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) string = input ( )  ones = string . count ( 'n' ) length = nlength -= ones * 3  print ( ( '1 ' * ones ) + '0 ' * ( int ( length / 4 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1944_A_969",
            "java_code": "class GFG { static int product ( int a [ ] , int n ) { int ans = 1 ; int val = ( int ) Math . pow ( 2 , n - 1 ) ; for ( int i = 0 ; i < n ; i ++ ) { ans *= ( int ) Math . pow ( a [ i ] , val ) ; } return ans ; } public static void main ( String [ ] args ) { int n = 2 ; int a [ ] = { 3 , 7 } ; System . out . println ( product ( a , n ) ) ; } }",
            "python_code": "def product ( a , n ) : NEWLINE INDENT ans = 1 NEWLINE val = pow ( 2 , n - 1 ) NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT ans *= pow ( a [ i ] , val ) NEWLINE DEDENT return ans NEWLINE DEDENT n = 2 NEWLINE a = [ 3 , 7 ] NEWLINE print ( product ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_39_B_970",
            "java_code": "import java . util . * ;",
            "python_code": "n = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) s = [ 0 ] x = 0 g = [ ] for i in b : x += 1 if i >= 1 and i - max ( s ) == 1 : g . append ( 2000 + x ) s . append ( i ) else : continues . remove ( 0 ) k = list ( zip ( g , s ) ) h = [ ] for p in range ( len ( k ) ) : h . append ( k [ p ] [ 0 ] ) if len ( s ) == 0 : print ( 0 ) else : print ( len ( h ) ) print ( * h ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_51_A_971",
            "java_code": "import java . util . * ;",
            "python_code": "def rotate ( item : str ) -> str : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1425_A_972",
            "java_code": "import java . io . * ; class GFG { static int centered_pentagonal_Num ( int n ) { return ( 5 * n * n - 5 * n + 2 ) / 2 ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . print ( n + \"th Centered \" + \"pentagonal number: \" ) ; System . out . println ( centered_pentagonal_Num ( n ) ) ; } }",
            "python_code": "def centered_pentagonal_Num ( n ) : NEWLINE INDENT return ( 5 * n * n - 5 * n + 2 ) // 2 NEWLINE DEDENT n = 7 NEWLINE print ( \"%sth Centered pentagonal number : \" % n , centered_pentagonal_Num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4091_A_973",
            "java_code": "class Test { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int lcm ( int a , int b ) { return ( a * b ) / gcd ( a , b ) ; } public static void main ( String [ ] args ) { int a = 15 , b = 20 ; System . out . println ( \"LCM of \" + a + \" and \" + b + \" is \" + lcm ( a , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if a == 0 : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def lcm ( a , b ) : NEWLINE INDENT return ( a * b ) / gcd ( a , b ) NEWLINE DEDENT a = 15 NEWLINE b = 20 NEWLINE print ( 'LCM of' , a , 'and' , b , 'is' , lcm ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2514_A_974",
            "java_code": "import java . io . * ; import java . math . * ; class GFG { static int sumofseries ( int n ) { int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) res += ( i ) * ( i + 1 ) * ( i + 2 ) ; return res ; } public static void main ( String [ ] args ) { System . out . println ( sumofseries ( 3 ) ) ; } }",
            "python_code": "def sumofseries ( n ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT res += ( i ) * ( i + 1 ) * ( i + 2 ) NEWLINE DEDENT return res NEWLINE DEDENT print ( sumofseries ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_4_A_975",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; if ( w % 2 == 0 && w != 2 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 0 and n != 2 : print ( \"YES\" ) else : print ( \"NO\" )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3046_A_976",
            "java_code": "import java . io . * ; class GFG { static int seriesSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += i * ( i + 1 ) / 2 ; return sum ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( seriesSum ( n ) ) ; } }",
            "python_code": "def seriessum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += i * ( i + 1 ) / 2 NEWLINE DEDENT return sum NEWLINE DEDENT n = 4 NEWLINE print ( seriessum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1422_A_977",
            "java_code": "import java . util . * ; public class fence { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long c = sc . nextLong ( ) ; long d = a + b + c - 1 ; System . out . println ( d ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b , c = sorted ( [ int ( x ) for x in input ( ) . split ( ) ] ) NEWLINE print ( a + b + c - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4518_A_978",
            "java_code": "import java . io . * ; class GFG { static int nextPowerOf2 ( int n ) { int p = 1 ; if ( n > 0 && ( n & ( n - 1 ) ) == 0 ) return n ; while ( p < n ) p <<= 1 ; return p ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( nextPowerOf2 ( n ) ) ; } }",
            "python_code": "def nextPowerOf2 ( n ) : NEWLINE INDENT p = 1 NEWLINE if ( n and not ( n & ( n - 1 ) ) ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT while ( p < n ) : NEWLINE INDENTINDENT p <<= 1 NEWLINE DEDENT return p ; NEWLINE DEDENT n = 5 NEWLINE print ( nextPowerOf2 ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_637_A_979",
            "java_code": "import java . util . * ; public class M_Round_5 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) k = 0 pas = 0 a = a [ : : - 1 ] for i in set ( a ) : s = a . count ( i ) if s > k : pas = i k = s elif s == k : if a . index ( i ) > a . index ( pas ) : pas = i k = a . count ( i ) print ( pas ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1041_B_980",
            "java_code": "import java . util . Scanner ;  public class _0705BuyingaTVSet { static long gcd ( long a , long b ) {",
            "python_code": "import math  a , b , x , y = map ( int , input ( ) . split ( ) ) c = math . gcd ( x , y ) x //= cy //= cans = min ( a // x , b // y ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_896_B_981",
            "java_code": "import sys n , m , c = map ( int , input ( ) . split ( ) ) a = [ ] for i in range ( n + 1 ) : a . append ( 0 ) cnt = 0 while cnt < n : i = 0 x = int ( input ( ) ) if x * 2 <= c : i = 1 while a [ i ] and a [ i ] <= x : i += 1 else : i = n while a [ i ] and a [ i ] >= x : i -= 1 if a [ i ] == 0 : cnt += 1 a [ i ] = x print ( i ) sys . stdout . flush ( )",
            "python_code": "import sys  n , m , c = map ( int , input ( ) . split ( ) ) a = [ ] for i in range ( n + 1 ) : a . append ( 0 ) cnt = 0 while cnt < n : i = 0 x = int ( input ( ) ) if x * 2 <= c : i = 1 while a [ i ] and a [ i ] <= x : i += 1 else : i = n while a [ i ] and a [ i ] >= x : i -= 1 if a [ i ] == 0 : cnt += 1 a [ i ] = x print ( i ) sys . stdout . flush ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1277_A_982",
            "java_code": "import java . util . Scanner ;  public class _0717HappyBirthdayPolycarp { static long gen ( int n ) { String s = \"\" ; for ( int i = 0 ; i < n && s . length ( ) < n ; i ++ ) { s += s + \"1\" ; }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) tmp = 0 for i in range ( 1 , 10 ) : k = i while k <= n : tmp += 1 k = k * 10 + i print ( tmp ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_372_A_983",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ; public class Main { static InputReader sc ; static PrintWriter pw ; public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; sc = new InputReader ( inputStream ) ; pw = new PrintWriter ( outputStream ) ; solve ( ) ; pw . close ( ) ; }",
            "python_code": "import sysn = int ( input ( ) ) ls = [ ] for _ in range ( n ) : s = sys . stdin . readline ( ) ls . append ( int ( s ) ) ls . sort ( )  cnt = 0 mid = n // 2 - 1 right = n - 1 mated = 0 for _ in range ( n // 2 ) : if ls [ right ] >= 2 * ls [ mid ] and mid >= 0 : cnt += 1 mid -= 1 right -= 1 mated += 2 else : mid -= 1 print ( cnt + n - mated ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2198_A_984",
            "java_code": "class GFG { static int smallestMultiple ( int n ) { if ( n == 1 ) return 5 ; return ( int ) ( Math . pow ( 10 , n - 1 ) ) ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( smallestMultiple ( n ) ) ; } }",
            "python_code": "def smallestMultiple ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 5 NEWLINE DEDENT return pow ( 10 , n - 1 ) NEWLINE DEDENT n = 4 NEWLINE print ( smallestMultiple ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1411_B_985",
            "java_code": "import java . util . * ; public class FairNumber { public static int check ( long n ) { long x = n ; while ( x != 0 ) { if ( x % 10 != 0 && n % ( x % 10 ) != 0 ) return - 1 ; x /= 10 ; } return 1 ; }  public static void main ( String [ ] args ) {",
            "python_code": "def is_just ( num ) : newnum = num NEWLINE INDENT pass NEWLINE DEDENT while newnum > 0 : if NEWLINE newnum % 10 != 0 : NEWLINE if num % ( newnum % 10 ) != 0 : return False NEWLINE newnum //= 10 NEWLINE return True                  t = int ( input ( ) ) NEWLINE for ti in range ( t ) : n = int ( input ( ) ) NEWLINE x = n NEWLINE while not is_just ( x ) : x += 1 NEWLINE print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_591_A_986",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; double n = input . nextDouble ( ) ; double p = input . nextDouble ( ) ; double q = input . nextDouble ( ) ; double res = p * n / ( p + q ) ; if ( res % 1 != 0 ) System . out . printf ( Locale . UK , \"%.4f\\n\" , res ) ; else System . out . printf ( \"%d\\n\" , ( int ) res ) ; } }",
            "python_code": "l = int ( input ( ) ) p = int ( input ( ) ) q = int ( input ( ) )  time = l / ( p + q ) print ( p * time ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3823_A_987",
            "java_code": "import java . io . * ; class Sums { static void printXYZ ( int n ) { if ( n == 1 ) System . out . println ( - 1 ) ; else { System . out . println ( \"x is \" + n ) ; System . out . println ( \"y is \" + ( n + 1 ) ) ; System . out . println ( \"z is \" + ( n * ( n + 1 ) ) ) ; } } public static void main ( String [ ] args ) { int n = 7 ; printXYZ ( n ) ; } }",
            "python_code": "def printXYZ ( n ) : NEWLINE INDENT if n == 1 : NEWLINE INDENTINDENT print ( - 1 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"x is \" , n ) NEWLINE print ( \"y is \" , n + 1 ) NEWLINE print ( \"z is \" , n * ( n + 1 ) ) NEWLINE DEDENT DEDENT n = 7 NEWLINE printXYZ ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1354_A_988",
            "java_code": "import java . util . Scanner ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; sc . nextLine ( ) ; for ( int i = 0 ; i < t ; i ++ ) { long a = sc . nextLong ( ) ;",
            "python_code": "pp = printli = listtp = tuplebg = 1e9 sg = - 1e9 rd = roundss = sortedsj = \"\" . joinnl = \"\\n\"   def solve ( ) : a , b , c , d = map ( int , input ( ) . split ( ) ) if b >= a : print ( b ) elif d >= c : print ( - 1 ) else : print ( b + ( 0 - - ( a - b ) // ( c - d ) ) * c )                def main ( ) : for i in range ( int ( input ( ) ) ) : solve ( )  main ( )                            NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1360_A_989",
            "java_code": "import java . util . Scanner ;  public class A1360 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; if ( a > b ) { System . out . println ( 2 * b > a ? 2 * b * 2 * b : a * a ) ; } else { System . out . println ( 2 * a > b ? 2 * a * 2 * a : b * b ) ; } } } }",
            "python_code": "n = int ( input ( ) )  for _ in range ( n ) : side_length = list ( map ( int , input ( ) . split ( ) ) ) print ( max ( min ( side_length ) * 2 , max ( side_length ) ) ** 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1173_A_990",
            "java_code": "class GFG { static int index ( int i ) { return 1 + ( i > > 31 ) - ( - i > > 31 ) ; } static void check ( int n ) { String s [ ] = { \"negative\" , \"zero\" , \"positive\" } ; int val = index ( n ) ; System . out . println ( n + \" is \" + s [ val ] ) ; } public static void main ( String [ ] args ) { check ( 30 ) ; check ( - 20 ) ; check ( 0 ) ; } }",
            "python_code": "def index ( i ) : NEWLINE INDENT return 1 + ( i >> 31 ) - ( - i >> 31 ) NEWLINE DEDENT def check ( n ) : NEWLINE INDENT s = \"negative\" , \"zero\" , \"positive\" NEWLINE val = index ( n ) NEWLINE print ( n , \"is\" , s [ val ] ) NEWLINE DEDENT check ( 30 ) NEWLINE check ( - 20 ) NEWLINE check ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4064_A_991",
            "java_code": "import java . io . * ; class GFG { static int fnMod ( int n ) { int rem = n % 4 ; if ( rem == 0 || rem == 3 ) return 0 ; else if ( rem == 1 || rem == 2 ) return 1 ; return 0 ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . print ( fnMod ( n ) ) ; } }",
            "python_code": "def fnMod ( n ) : NEWLINE INDENT rem = n % 4 NEWLINE if ( rem == 0 or rem == 3 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT elif ( rem == 1 or rem == 2 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 6 NEWLINE print ( fnMod ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1812_A_992",
            "java_code": "import java . util . * ; class GFG { static int nthDigit ( int a , int n , int b ) { for ( int i = 1 ; i < n ; i ++ ) a = a / b ; return a % b ; } public static void main ( String [ ] args ) { int a = 100 ; int n = 3 ; int b = 4 ; System . out . print ( nthDigit ( a , n , b ) ) ; } }",
            "python_code": "def nthDigit ( a , n , b ) : NEWLINE INDENT for i in range ( 1 , n ) : NEWLINE INDENTINDENT a = a // b NEWLINE DEDENT return a % b NEWLINE DEDENT a = 100 NEWLINE n = 3 NEWLINE b = 4 NEWLINE print ( nthDigit ( a , n , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1285_A_993",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = Integer . valueOf ( scanner . nextLine ( ) ) ; scanner . nextLine ( ) ; System . out . println ( n + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) print ( n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_791_A_994",
            "java_code": "class Solution { static long getSum ( int n , int d ) { long sum = 0 ; while ( d <= n ) { sum += d ; d += 10 ; } return sum ; } public static void main ( String args [ ] ) { int n = 30 , d = 3 ; System . out . print ( getSum ( n , d ) ) ; } }",
            "python_code": "def getSum ( n , d ) : NEWLINE INDENT sum = 0 NEWLINE while ( d <= n ) : NEWLINE INDENTINDENT sum += d NEWLINE d += 10 NEWLINE DEDENT return sum NEWLINE DEDENT n = 30 NEWLINE d = 3 NEWLINE print ( getSum ( n , d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1093_B_995",
            "java_code": "import java . util . * ; import java . io . * ; public class MainClass { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "r = lambda : list ( map ( int , input ( ) . split ( ) ) ) t = int ( input ( ) ) for _ in range ( t ) : s = list ( input ( ) ) if ( len ( set ( s ) ) == 1 ) : print ( - 1 ) else : print ( '' . join ( sorted ( s ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1076_A_996",
            "java_code": "import javax . swing . plaf . IconUIResource ; import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) st = input ( ) for i in range ( n - 1 ) : if st [ i ] > st [ i + 1 ] : st = st [ : i ] + st [ i + 1 : ] breakif len ( st ) != n : print ( st ) else : print ( st [ : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1191_A_997",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sys  def main ( ) : n = int ( sys . stdin . read ( ) . strip ( ) ) d = { 1 : '0 A' , 3 : '2 A' , 2 : '1 B' , 0 : '1 A' } return d [ n % 4 ]  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1198_B_998",
            "java_code": "import java . io . OutputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . UncheckedIOException ; import java . io . Closeable ; import java . io . Writer ; import java . io . OutputStreamWriter ;  public class water { public static void main ( String [ ] args ) {  InputStream inputStream = System . in ;",
            "python_code": "from sys import stdin , stdoutfor _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1420_A_999",
            "java_code": "import java . io . * ; class GFG { static float cube ( float h , float r ) { if ( h < 0 && r < 0 ) return - 1 ; float a = ( h * r * ( float ) Math . sqrt ( 2 ) ) / ( h + ( float ) Math . sqrt ( 2 ) * r ) ; return a ; } public static void main ( String [ ] args ) { float h = 5 , r = 6 ; System . out . println ( cube ( h , r ) ) ; } }",
            "python_code": "import math NEWLINE def cubeSide ( h , r ) : NEWLINE INDENT if ( h < 0 and r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = ( ( h * r * math . sqrt ( 2 ) ) / ( h + math . sqrt ( 2 ) * r ) ) NEWLINE return a NEWLINE DEDENT h = 5 ; r = 6 ; NEWLINE print ( cubeSide ( h , r ) , \"\\n\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1182_A_1000",
            "java_code": "import java . util . * ;  public class Absolutezero {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t1 = sc . nextInt ( ) ; if ( t1 % 2 != 0 ) { System . out . println ( 0 ) ; } else { System . out . println ( ( int ) Math . pow ( 2 , t1 / 2 ) ) ; }    }  }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 1 : print ( 0 ) else : print ( 2 ** ( n // 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1200_B_1001",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class absolute { public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_489_A_1002",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main { static class Pair { int a ; int b ; Pair ( int a , int b ) { this . a = a ; this . b = b ; } }  private static int MAX = Integer . MAX_VALUE ; private static int MIN = Integer . MIN_VALUE ; private static int MOD = 1000000007 ; static FastScanner sc = new FastScanner ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) p = l . copy ( ) p . sort ( ) print ( n )  for i in range ( n ) : j = l [ i : ] . index ( p [ i ] ) + i print ( i , j ) l [ i ] , l [ j ] = l [ j ] , l [ i ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_492_A_1003",
            "java_code": "import java . util . Scanner ;  public class VanyaCubes {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) sum = 0 i = 0 for i in range ( 1 , n + 1 , 1 ) : for j in range ( 1 , i + 1 , 1 ) : sum += j if ( sum > n ) : breakif ( n < 4 ) : print ( 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_503_A_1004",
            "java_code": "import java . io . * ; class GFG { static int findNumber ( int n ) { n -- ; int i = 1 ; while ( n >= 0 ) { n -= i ; ++ i ; } return ( n + i ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( findNumber ( n ) ) ; } }",
            "python_code": "def findNumber ( n ) : NEWLINE INDENT n -= 1 NEWLINE i = 1 NEWLINE while n >= 0 : NEWLINE INDENTINDENT n -= i NEWLINE i += 1 NEWLINE DEDENT return ( n + i ) NEWLINE DEDENT n = 3 NEWLINE print ( findNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2886_A_1005",
            "java_code": "import java . io . * ; class GFG { static int fnMod ( int n ) { if ( n % 5 == 1 ) return 4 ; else return 0 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( fnMod ( n ) ) ; n = 11 ; System . out . println ( fnMod ( n ) ) ; } }",
            "python_code": "def fnMod ( n ) : NEWLINE INDENT if ( n % 5 == 1 ) : NEWLINE INDENTINDENT return 4 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT DEDENT n = 10 NEWLINE print ( fnMod ( n ) ) NEWLINE n = 11 NEWLINE print ( fnMod ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2159_A_1006",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ; class GFG { public static int countOddSquares ( int n , int m ) { return ( int ) Math . pow ( ( double ) m , 0.5 ) - ( int ) Math . pow ( ( double ) n - 1 , 0.5 ) ; } public static void main ( String [ ] args ) { int n = 5 , m = 100 ; System . out . print ( \"Count is \" + countOddSquares ( n , m ) ) ; } }",
            "python_code": "def countOddSquares ( n , m ) : NEWLINE INDENT return int ( m ** 0.5 ) - int ( ( n - 1 ) ** 0.5 ) NEWLINE DEDENT n = 5 NEWLINE m = 100 NEWLINE print ( \"Count is\" , countOddSquares ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_851_B_1007",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ;  public class Main {  static class Segment { long x1 , y1 , x2 , y2 ; long a , b , c ;",
            "python_code": "from math import sqrtdef distance ( x1 , y1 , x2 , y2 ) : return ( x1 - x2 ) ** 2 + ( y1 - y2 ) ** 2  a , b , x , y , c , d = [ int ( element ) for element in input ( ) . split ( \" \" ) ]  if distance ( x , y , a , b ) == distance ( x , y , c , d ) and ( ( b - y ) * ( x - c ) - ( y - d ) * ( a - x ) ) != 0 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5210_A_1008",
            "java_code": "class Main { static int getMissingNo ( int a [ ] , int n ) { int x1 = a [ 0 ] ; int x2 = 1 ; for ( int i = 1 ; i < n ; i ++ ) x1 = x1 ^ a [ i ] ; for ( int i = 2 ; i <= n + 1 ; i ++ ) x2 = x2 ^ i ; return ( x1 ^ x2 ) ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 2 , 4 , 5 , 6 } ; int miss = getMissingNo ( a , 5 ) ; System . out . println ( miss ) ; } }",
            "python_code": "def getMissingNo ( a , n ) : NEWLINE INDENT x1 = a [ 0 ] NEWLINE x2 = 1 NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT x1 = x1 ^ a [ i ] NEWLINE DEDENT for i in range ( 2 , n + 2 ) : NEWLINE INDENTINDENT x2 = x2 ^ i NEWLINE DEDENT return x1 ^ x2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = [ 1 , 2 , 4 , 5 , 6 ] NEWLINE n = len ( a ) NEWLINE miss = getMissingNo ( a , n ) NEWLINE print ( miss ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_A_1009",
            "java_code": "import java . util . Scanner ; public class test45 { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int inches = ( n + 1 ) / 3 ; int feet = inches / 12 ; System . out . println ( feet + \" \" + ( inches - 12 * feet ) ) ; } }",
            "python_code": "n = int ( input ( ) ) a = n // 36 rema = n % 36 if ( rema == 35 ) : a += 1 if ( a >= n ) : b = 0 else : b = ( n - a * 36 ) // 3 rem = ( n - a * 36 ) % 3 if ( rem == 2 ) : b += 1 print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2985_A_1010",
            "java_code": "import java . util . * ; class GFG { double polyapothem ( double n , double a ) { if ( a < 0 && n < 0 ) return - 1 ; return ( a / ( 2 * java . lang . Math . tan ( ( 180 / n ) * 3.14159 / 180 ) ) ) ; } public static void main ( String args [ ] ) { double a = 9 , n = 6 ; GFG g = new GFG ( ) ; System . out . println ( g . polyapothem ( n , a ) ) ; } }",
            "python_code": "from math import tan NEWLINE def polyapothem ( n , a ) : NEWLINE INDENT if ( a < 0 and n < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return a / ( 2 * tan ( ( 180 / n ) * 3.14159 / 180 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 9 NEWLINE n = 6 NEWLINE print ( '{0:.6}' . format ( polyapothem ( n , a ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_729_A_1011",
            "java_code": "import java . util . * ; import java . io . * ;  public class interwoleg { public static int conv ( String s ) { return Integer . parseInt ( s ) ; }  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from math import ceiln = int ( input ( ) ) x = input ( ) p = [ 'ogo' ] + [ 'ogo' + 'go' * i for i in range ( 1 , 50 ) ] j = ceil ( ( n - 3 ) / 2 ) if n < 3 : print ( x ) else : while j >= 0 : if p [ j ] in x : x = x . replace ( p [ j ] , '***' ) else : j = j - 1 print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2313_A_1012",
            "java_code": "import java . io . * ; class GFG { static float Area ( float a ) { if ( a < 0 ) return - 1 ; float h = ( float ) 1.268 * a ; float A = ( float ) ( 0.70477 * Math . pow ( h , 2 ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( Area ( a ) ) ; } }",
            "python_code": "import math NEWLINE def Area ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT h = 1.268 * a NEWLINE A = 0.70477 * math . pow ( h , 2 ) NEWLINE return A NEWLINE DEDENT a = 5 NEWLINE print ( Area ( a ) , end = \"\\n\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4022_A_1013",
            "java_code": "import java . util . * ; class GFG { static int sumOfTheSeries ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int k = 1 ; for ( int j = 1 ; j <= i ; j ++ ) { sum += k ; k += 2 ; } } return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( \"Sum = \" + sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT k = 1 NEWLINE for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT sum += k NEWLINE k += 2 NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT n = 5 NEWLINE print ( \"Sum =\" , sumOfTheSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4100_A_1014",
            "java_code": "import java . io . * ; class GFG { static void printGroups ( int n ) { int x = 1 ; int y = n * n ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 1 ; j <= n / 2 ; j ++ ) { System . out . print ( \"{ \" + x + \", \" + y + \"} \" ) ; x ++ ; y -- ; } System . out . println ( ) ; } } public static void main ( String [ ] args ) { int n = 4 ; printGroups ( n ) ; } }",
            "python_code": "def printGroups ( n ) : NEWLINE INDENT x = 1 NEWLINE y = n * n NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , n // 2 + 1 ) : NEWLINE INDENTINDENTINDENT print ( \"{\" , x , \",\" , y , \"}\" , end = \" \" ) NEWLINE x += 1 NEWLINE y -= 1 NEWLINE DEDENT print ( ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE printGroups ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3959_A_1015",
            "java_code": "import java . io . * ; class GFG { static int heptagonalNumber ( int n ) { return ( ( 5 * n * n ) - ( 3 * n ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( heptagonalNumber ( n ) ) ; n = 15 ; System . out . println ( heptagonalNumber ( n ) ) ; } }",
            "python_code": "def heptagonalNumber ( n ) : NEWLINE INDENT return ( ( 5 * n * n ) - ( 3 * n ) ) // 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 2 NEWLINE print ( heptagonalNumber ( n ) ) NEWLINE n = 15 NEWLINE print ( heptagonalNumber ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4051_A_1016",
            "java_code": "class demo { public static double sumOfTheSeries ( int n ) { return ( double ) n / ( n + 1 ) ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT return ( float ( n ) / ( n + 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE ans = sumOfTheSeries ( n ) NEWLINE print ( round ( ans , 6 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2585_A_1017",
            "java_code": "import java . io . * ; class GFG { static boolean findGreater ( int x , int y ) { if ( x > y ) { return false ; } else { return true ; } } public static void main ( String [ ] args ) { int x = 4 ; int y = 9 ; if ( findGreater ( x , y ) ) System . out . println ( \"1\" ) ; else System . out . println ( \"2\" ) ; } }",
            "python_code": "def findGreater ( x , y ) : NEWLINE INDENT if ( x > y ) : NEWLINE INDENTINDENT return False ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT DEDENT x = 4 ; NEWLINE y = 9 ; NEWLINE if ( findGreater ( x , y ) ) : NEWLINE INDENT print ( \"1\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"2\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3601_A_1018",
            "java_code": "import java . util . * ; class solution { static int countPieces ( int N ) { return 2 * N ; } public static void main ( String args [ ] ) { int N = 100 ; System . out . println ( countPieces ( N ) ) ; } }",
            "python_code": "def countPieces ( N ) : NEWLINE INDENT return 2 * N NEWLINE DEDENT N = 100 NEWLINE print ( countPieces ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2647_A_1019",
            "java_code": "class GFG { static int fib ( int n ) { double phi = ( 1 + Math . sqrt ( 5 ) ) / 2 ; return ( int ) Math . round ( Math . pow ( phi , n ) / Math . sqrt ( 5 ) ) ; } static int calculateSum ( int l , int r ) { int sum = fib ( r + 2 ) - fib ( l + 1 ) ; return sum ; } public static void main ( String [ ] args ) { int l = 4 , r = 8 ; System . out . println ( calculateSum ( l , r ) ) ; } }",
            "python_code": "import math NEWLINE def fib ( n ) : NEWLINE INDENT phi = ( 1 + math . sqrt ( 5 ) ) / 2 ; NEWLINE return int ( round ( pow ( phi , n ) / math . sqrt ( 5 ) ) ) ; NEWLINE DEDENT def calculateSum ( l , r ) : NEWLINE INDENT sum = fib ( r + 2 ) - fib ( l + 1 ) ; NEWLINE return sum ; NEWLINE DEDENT l = 4 ; NEWLINE r = 8 ; NEWLINE print ( calculateSum ( l , r ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_756_A_1020",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . OutputStreamWriter ; import java . io . PrintWriter ;  import java . util . * ;  public class A_GENERAL {",
            "python_code": "n = int ( input ( ) ) p = [ int ( i ) for i in input ( ) . split ( ) ] zeros = [ int ( i ) for i in input ( ) . split ( ) ]  ans = 0  if not sum ( zeros ) % 2 : ans += 1  visited = [ False for i in range ( n ) ]  ciclos = 0 for i in range ( n ) : if not visited [ i ] : ciclos += 1 j = i while not visited [ j ] : visited [ j ] = True j = p [ j ] - 1  if ciclos == 1 : ans += 0 else : ans += ciclos  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2632_A_1021",
            "java_code": "import java . lang . * ; import java . lang . Math ; import java . io . * ; class GFG { static double getValue ( double n ) { double result = ( Math . floor ( Math . log ( n + 1 ) / Math . log ( 2 ) ) ) ; return Math . pow ( 2 , result ) ; } public static void main ( String [ ] args ) { double n = 9 ; System . out . println ( getValue ( n ) ) ; n = 1025 ; System . out . println ( getValue ( n ) ) ; } }",
            "python_code": "import math NEWLINE def getValue ( n ) : NEWLINE INDENT result = int ( math . floor ( math . log ( n + 1 ) / math . log ( 2 ) ) ) NEWLINE return int ( math . pow ( 2 , result ) ) NEWLINE DEDENT n = 9 NEWLINE print ( getValue ( n ) ) NEWLINE n = 1025 NEWLINE print ( getValue ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_888_A_1022",
            "java_code": "import java . util . * ; ",
            "python_code": "   n = int ( input ( ) )   t = list ( map ( int , input ( ) . split ( ) ) )   if n <= 2 : print ( 0 ) else : p = 0 for k in range ( 1 , n - 1 ) :  if t [ k - 1 ] > t [ k ] < t [ k + 1 ] or t [ k - 1 ] < t [ k ] > t [ k + 1 ] : p += 1  print ( p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_399_B_1023",
            "java_code": "import java . util . * ; public class Main { static long count = 0 ; public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s . charAt ( i ) == 'B' ) { count += ( long ) Math . pow ( 2 , i ) ; } } System . out . println ( count ) ; } }",
            "python_code": "size = int ( input ( ) ) stack = list ( input ( ) )  print ( sum ( [ 2 ** i for i in range ( size ) if stack [ i ] == 'B' ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_29_B_1024",
            "java_code": "import java . util . Scanner ;  public class TrafficLights {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int l = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int g = sc . nextInt ( ) ; int r = sc . nextInt ( ) ;  double ans = l * 1.0 / v ; double v1 = ( d * 1.0 / v ) % ( g + r ) ; if ( v1 >= g ) ans += g + r - v1 ;  System . out . println ( ans ) ; } }",
            "python_code": "l , d , v , g , r = list ( map ( int , input ( ) . split ( ) ) ) t1 = ( d / v ) % ( g + r ) - gif t1 < 0 : print ( l / v ) else : print ( l / v + r - t1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_16_B_1025",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) lst = [ ] for i in range ( m ) : lst . append ( list ( map ( int , input ( ) . split ( ) ) ) ) lst . sort ( key = lambda x : x [ 1 ] ) lst . reverse ( ) count = 0 for i in lst : if n <= i [ 0 ] : count += ( n * i [ 1 ] ) break else : count += ( i [ 0 ] * i [ 1 ] ) n -= i [ 0 ] if n == 0 : break print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_46_B_1026",
            "java_code": "import java . util . * ; import java . io . * ; ",
            "python_code": "n = list ( map ( int , input ( ) . split ( ) ) ) a = { 'S' : 0 , 'M' : 1 , 'L' : 2 , 'XL' : 3 , 'XXL' : 4 } b = [ 'S' , 'M' , 'L' , 'XL' , 'XXL' ] for i in range ( int ( input ( ) ) ) : c = a [ input ( ) ] for i in range ( 5 ) : if c + i < 5 and n [ c + i ] > 0 : print ( b [ c + i ] ) n [ c + i ] -= 1 break elif c - i >= 0 and n [ c - i ] > 0 : print ( b [ c - i ] ) n [ c - i ] -= 1 break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_18_A_1027",
            "java_code": "import java . util . * ; class GFG { static boolean isDivisible ( int n ) { int d ; while ( ( n / 100 ) <= 0 ) { d = n % 10 ; n /= 10 ; n = Math . abs ( n - ( d * 7 ) ) ; } return ( n % 71 == 0 ) ; } public static void main ( String args [ ] ) { int N = 5041 ; if ( isDivisible ( N ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n = abs ( n - ( d * 7 ) ) NEWLINE DEDENT return ( n % 71 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5041 NEWLINE if ( isDivisible ( N ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3664_A_1028",
            "java_code": "class GFG { static int countLattice ( int r ) { if ( r <= 0 ) return 0 ; int result = 4 ; for ( int x = 1 ; x < r ; x ++ ) { int ySquare = r * r - x * x ; int y = ( int ) Math . sqrt ( ySquare ) ; if ( y * y == ySquare ) result += 4 ; } return result ; } public static void main ( String arg [ ] ) { int r = 5 ; System . out . println ( countLattice ( r ) ) ; } }",
            "python_code": "import math NEWLINE def countLattice ( r ) : NEWLINE INDENT if ( r <= 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT result = 4 NEWLINE for x in range ( 1 , r ) : NEWLINE INDENTINDENT ySquare = r * r - x * x NEWLINE y = int ( math . sqrt ( ySquare ) ) NEWLINE if ( y * y == ySquare ) : NEWLINE INDENTINDENTINDENT result += 4 NEWLINE DEDENT DEDENT return result NEWLINE DEDENT r = 5 NEWLINE print ( countLattice ( r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_A_1029",
            "java_code": "import java . util . * ; public class MeasuringLengthsInBaden { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int inches = ( n + 1 ) / 3 ; int feets = inches / 12 ; System . out . println ( feets + \" \" + ( inches - 12 * feets ) ) ; } }",
            "python_code": "n = int ( input ( ) ) + 1 print ( n // 36 , int ( n / 3 % 12 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_670_B_1030",
            "java_code": "import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ;  public class Letter { ",
            "python_code": "import sysinput = sys . stdin . readline  n , k = [ int ( i ) for i in input ( ) . split ( ) ] a = [ int ( i ) for i in input ( ) . split ( ) ] count = 1 while k - count > 0 : k -= count count += 1 print ( a [ k - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1588_A_1031",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int N , int K ) { int ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) ans += ( i % K ) ; return ans ; } static public void main ( String [ ] args ) { int N = 10 , K = 2 ; System . out . println ( findSum ( N , K ) ) ; } }",
            "python_code": "def findSum ( N , K ) : NEWLINE INDENT ans = 0 ; NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT ans += ( i % K ) ; NEWLINE DEDENT return ans ; NEWLINE DEDENT N = 10 ; NEWLINE K = 2 ; NEWLINE print ( findSum ( N , K ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_268_A_1032",
            "java_code": "import java . util . * ; class GFG { static boolean isPerfectCubeString ( String str ) { int sum = 0 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) sum += ( int ) str . charAt ( i ) ; double cr = Math . round ( Math . cbrt ( sum ) ) ; return ( cr * cr * cr == sum ) ; } public static void main ( String [ ] args ) { String str = \"ll\" ; if ( isPerfectCubeString ( str ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "from math import ceil NEWLINE def isPerfectCubeString ( str1 ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( len ( str1 ) ) : NEWLINE INDENTINDENT sum += ord ( str1 [ i ] ) NEWLINE DEDENT cr = ceil ( ( sum ) ** ( 1 / 3 ) ) NEWLINE return ( cr * cr * cr == sum ) NEWLINE DEDENT str1 = \"ll\" NEWLINE if ( isPerfectCubeString ( str1 ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1829_A_1033",
            "java_code": "import java . util . * ; class solution { static long getNthTerm ( long N ) { return ( ( int ) Math . pow ( N , 2 ) + N + 1 ) ; } public static void main ( String arr [ ] ) { long N = 11 ; System . out . println ( getNthTerm ( N ) ) ; } }",
            "python_code": "def getNthTerm ( N ) : NEWLINE INDENT return ( pow ( N , 2 ) + N + 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 11 NEWLINE print ( getNthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_384_A_1034",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) if n % 2 == 0 : print ( n ** 2 // 2 ) for i in range ( n ) : if i % 2 == 0 : print ( 'C.' * ( n // 2 ) ) else : print ( '.C' * ( n // 2 ) ) else : print ( n ** 2 // 2 + 1 ) for i in range ( n ) : if i % 2 == 0 : print ( 'C.' * ( n // 2 ) + 'C' ) else : print ( '.C' * ( n // 2 ) + '.' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5087_A_1035",
            "java_code": "class GFG { static int maximum ( int x , int y ) { return ( ( x + y + Math . abs ( x - y ) ) / 2 ) ; } static int minimum ( int x , int y ) { return ( ( x + y - Math . abs ( x - y ) ) / 2 ) ; } public static void main ( String [ ] args ) { int x = 99 , y = 18 ; System . out . println ( \"Maximum: \" + maximum ( x , y ) ) ; System . out . println ( \"Minimum: \" + minimum ( x , y ) ) ; } }",
            "python_code": "def maximum ( x , y ) : NEWLINE INDENT return ( ( x + y + abs ( x - y ) ) // 2 ) NEWLINE DEDENT def minimum ( x , y ) : NEWLINE INDENT return ( ( x + y - abs ( x - y ) ) // 2 ) NEWLINE DEDENT x = 99 NEWLINE y = 18 NEWLINE print ( \"Maximum:\" , maximum ( x , y ) ) NEWLINE print ( \"Minimum:\" , minimum ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1121_A_1036",
            "java_code": "import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;   public class scratch_25 {",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) c = list ( map ( int , input ( ) . split ( ) ) ) d = { } for i in range ( n ) : if d . get ( b [ i ] ) : if d [ b [ i ] ] < a [ i ] : d [ b [ i ] ] = a [ i ] else : d [ b [ i ] ] = a [ i ] ans = 0 for i in c : if a [ i - 1 ] < d [ b [ i - 1 ] ] : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1175_A_1037",
            "java_code": "import java . util . * ;  public class CodeForces1175A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { long n = input . nextLong ( ) ; long k = input . nextLong ( ) ; long count = 0 ; while ( n >= 1 ) { if ( n >= k ) { count += n % k + 1 ; n /= k ; } else { count += n ; n = 0 ; } } System . out . println ( count ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n , k = [ int ( x ) for x in input ( ) . split ( ) ] count = 0 while n != 0 : if n % k == 0 : n = n // k count = count + 1 else : count = count + n % k n = n - n % k print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1251_B_1038",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . Comparator ; import java . util . List ;  public class BinaryPalindromes {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) odd , evenGood , evenBad = 0 , 0 , 0 for i in range ( n ) : a = input ( ) if len ( a ) % 2 == 1 : odd += 1 if a . count ( '0' ) % 2 == 0 : evenGood += 1 else : evenBad += 1 print ( n - 1 if ( odd == 0 and evenBad % 2 == 1 ) else n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2510_A_1039",
            "java_code": "class Arraysum { static void pairwiseSum ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i + 1 < n ; i ++ ) { sum = arr [ i ] + arr [ i + 1 ] ; System . out . print ( sum + \" \" ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 10 , 15 , 5 , 6 } ; int n = arr . length ; pairwiseSum ( arr , n ) ; } }",
            "python_code": "def pairwiseSum ( lst , n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( len ( lst ) - 1 ) : NEWLINE INDENTINDENT sum = lst [ i ] + lst [ i + 1 ] NEWLINE print ( sum , end = \" \" ) NEWLINE DEDENT DEDENT arr = [ 4 , 10 , 15 , 5 , 6 ] NEWLINE size = len ( arr ) NEWLINE pairwiseSum ( arr , size ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4961_A_1040",
            "java_code": "import java . util . * ; class GFG { static int distinctCount ( int arr [ ] , int n ) { Set < Integer > s = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) s . add ( Math . abs ( arr [ i ] ) ) ; return s . size ( ) ; } public static void main ( String [ ] args ) { int arr [ ] = { - 2 , - 1 , 0 , 1 , 1 } ; int n = arr . length ; System . out . println ( \"Count of absolute distinct values : \" + distinctCount ( arr , n ) ) ; } }",
            "python_code": "def distinctCount ( arr , n ) : NEWLINE INDENT s = set ( ) NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT s . add ( abs ( arr [ i ] ) ) NEWLINE DEDENT return len ( s ) NEWLINE DEDENT arr = [ - 2 , - 1 , 0 , 1 , 1 ] NEWLINE n = len ( arr ) NEWLINE print ( \"Count of absolute distinct values:\" , distinctCount ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3306_A_1041",
            "java_code": "class GFG { static long countWays ( int n , int k ) { long total = k ; int mod = 1000000007 ; int same = 0 , diff = k ; for ( int i = 2 ; i <= n ; i ++ ) { same = diff ; diff = ( int ) total * ( k - 1 ) ; diff = diff % mod ; total = ( same + diff ) % mod ; } return total ; } public static void main ( String [ ] args ) { int n = 3 , k = 2 ; System . out . println ( countWays ( n , k ) ) ; } }",
            "python_code": "def countWays ( n , k ) : NEWLINE INDENT total = k NEWLINE mod = 1000000007 NEWLINE same , diff = 0 , k NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT same = diff NEWLINE diff = total * ( k - 1 ) NEWLINE diff = diff % mod NEWLINE total = ( same + diff ) % mod NEWLINE DEDENT return total NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , k = 3 , 2 NEWLINE print ( countWays ( n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1327_A_1042",
            "java_code": "import java . io . * ; import java . util . * ;    public class A {",
            "python_code": "for i in range ( int ( input ( ) ) ) : n , k = map ( int , input ( ) . split ( ) ) if k % 2 == n % 2 and n >= k * k : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1096_A_1043",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ;    int n = input . nextInt ( ) ;  for ( int i = 0 ; i < n ; i ++ ) { long l = input . nextInt ( ) , r = input . nextInt ( ) ;  System . out . println ( l + \" \" + l * 2 ) ; } } }",
            "python_code": "t = int ( input ( ) ) for z in range ( t ) : n , x = input ( ) . split ( ) n = int ( n ) x = int ( x ) print ( n , 2 * n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_870_A_1044",
            "java_code": "import java . io . * ; class GFG { static void checksum ( int n ) { if ( n % 5 == 0 ) System . out . println ( ( n / 5 - 2 ) + \" \" + ( n / 5 - 1 ) + \" \" + ( n / 5 ) + \" \" + ( n / 5 + 1 ) + \" \" + ( n / 5 + 2 ) ) ; else System . out . println ( \"-1\" ) ; } public static void main ( String [ ] args ) { int n = 15 ; checksum ( n ) ; } }",
            "python_code": "def checksum ( n ) : NEWLINE INDENT n = int ( n ) NEWLINE if n % 5 == 0 : NEWLINE INDENTINDENT print ( int ( n / 5 - 2 ) , \" \" , int ( n / 5 - 1 ) , \" \" , int ( n / 5 ) , \" \" , int ( n / 5 + 1 ) , \" \" , int ( n / 5 + 2 ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"-1\" ) NEWLINE DEDENT DEDENT n = 15 NEWLINE checksum ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3435_A_1045",
            "java_code": "class GFG { static void printGP ( int a , int r , int n ) { int curr_term ; for ( int i = 0 ; i < n ; i ++ ) { curr_term = a * ( int ) Math . pow ( r , i ) ; System . out . print ( curr_term + \" \" ) ; } } public static void main ( String [ ] args ) { int a = 2 ; int r = 3 ; int n = 5 ; printGP ( a , r , n ) ; } }",
            "python_code": "def printGP ( a , r , n ) : NEWLINE INDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT curr_term = a * pow ( r , i ) NEWLINE print ( curr_term , end = \" \" ) NEWLINE DEDENT DEDENT a = 2 NEWLINE r = 3 NEWLINE n = 5 NEWLINE printGP ( a , r , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4602_A_1046",
            "java_code": "import java . io . * ; class GFG { static void reverseFibonacci ( int n ) { int a [ ] = new int [ n ] ; a [ 0 ] = 0 ; a [ 1 ] = 1 ; for ( int i = 2 ; i < n ; i ++ ) { a [ i ] = a [ i - 2 ] + a [ i - 1 ] ; } for ( int i = n - 1 ; i >= 0 ; i -- ) { System . out . print ( a [ i ] + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 5 ; reverseFibonacci ( n ) ; } }",
            "python_code": "def reverseFibonacci ( n ) : NEWLINE INDENT a = [ 0 ] * n NEWLINE a [ 0 ] = 0 NEWLINE a [ 1 ] = 1 NEWLINE for i in range ( 2 , n ) : NEWLINE INDENTINDENT a [ i ] = a [ i - 2 ] + a [ i - 1 ] NEWLINE DEDENT for i in range ( n - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT print ( a [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT n = 5 NEWLINE reverseFibonacci ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_183_A_1047",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . StringTokenizer ;  public class Main { public static void main ( String [ ] args )",
            "python_code": "import math , sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3623_A_1048",
            "java_code": "import java . io . * ; class GFG { final int MAX = 1000000 ; static int breakSum ( int n ) { int dp [ ] = new int [ n + 1 ] ; dp [ 0 ] = 0 ; dp [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) dp [ i ] = Math . max ( dp [ i / 2 ] + dp [ i / 3 ] + dp [ i / 4 ] , i ) ; return dp [ n ] ; } public static void main ( String [ ] args ) { int n = 24 ; System . out . println ( breakSum ( n ) ) ; } }",
            "python_code": "MAX = 1000000 NEWLINE def breakSum ( n ) : NEWLINE INDENT dp = [ 0 ] * ( n + 1 ) NEWLINE dp [ 0 ] = 0 NEWLINE dp [ 1 ] = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT dp [ i ] = max ( dp [ int ( i / 2 ) ] + dp [ int ( i / 3 ) ] + dp [ int ( i / 4 ) ] , i ) ; NEWLINE DEDENT return dp [ n ] NEWLINE DEDENT n = 24 NEWLINE print ( breakSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3661_A_1049",
            "java_code": "class GFG { static double minRevolutions ( double r , int x1 , int y1 , int x2 , int y2 ) { double d = Math . sqrt ( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) ) ; return Math . ceil ( d / ( 2 * r ) ) ; } public static void main ( String arg [ ] ) { int r = 2 , x1 = 0 , y1 = 0 ; int x2 = 0 , y2 = 4 ; System . out . print ( ( int ) minRevolutions ( r , x1 , y1 , x2 , y2 ) ) ; } }",
            "python_code": "import math NEWLINE def minRevolutions ( r , x1 , y1 , x2 , y2 ) : NEWLINE INDENT d = math . sqrt ( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) ) NEWLINE return math . ceil ( d // ( 2 * r ) ) NEWLINE DEDENT r = 2 NEWLINE x1 = 0 NEWLINE y1 = 0 NEWLINE x2 = 0 NEWLINE y2 = 4 NEWLINE print ( minRevolutions ( r , x1 , y1 , x2 , y2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1370_A_1050",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class CF1370A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int t = Integer . parseInt ( br . readLine ( ) ) ; while ( t -- > 0 ) { System . out . println ( Integer . parseInt ( br . readLine ( ) ) / 2 ) ; } } }",
            "python_code": "import math   def main ( ) : t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) print ( n // 2 )   if __name__ == '__main__' : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_428_A_1051",
            "java_code": "class GFG { static int getPairs ( int a [ ] ) { int count = 0 ; for ( int i = 0 ; i < a . length ; i ++ ) { for ( int j = 0 ; j < a . length ; j ++ ) { if ( a [ i ] < a [ j ] ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int a [ ] = { 2 , 4 , 3 , 1 } ; System . out . println ( getPairs ( a ) ) ; } }",
            "python_code": "def getPairs ( a ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( len ( a ) ) : NEWLINE INDENTINDENT for j in range ( len ( a ) ) : NEWLINE INDENTINDENTINDENT if ( a [ i ] < a [ j ] ) : NEWLINE INDENTINDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 2 , 4 , 3 , 1 ] NEWLINE print ( getPairs ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1136_A_1052",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Natasha { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) d = [ ] while ( n > 0 ) : l , r = map ( int , input ( ) . split ( ) ) n -= 1 z = [ l , r ] d . append ( z ) m = int ( input ( ) ) a = 0 for i in range ( len ( d ) ) : d1 = d [ i ] [ 0 ] d2 = d [ i ] [ 1 ] if ( m >= d1 or m <= d2 ) and m <= d2 : a += 1  print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_17_B_1053",
            "java_code": "import java . lang . * ; import java . util . * ; import java . io . * ; public class Codechef {  public void solve ( ) throws IOException { FastScanner fs = new FastScanner ( ) ; StringBuilder ans = new StringBuilder ( \"\" ) ;",
            "python_code": "MAX = 1000001  e = int ( input ( ) ) q = input ( ) . split ( ) m = int ( input ( ) ) arr1 = [ MAX ] * e  for i in range ( m ) : [ a , b , c ] = list ( map ( int , input ( ) . split ( ) ) ) arr1 [ b - 1 ] = min ( arr1 [ b - 1 ] , c )  count = 0 for x in arr1 : if x == MAX : count += 1 if count > 1 : print ( - 1 ) else : res = 0 for k in arr1 : if k != MAX : res += k print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1108_B_1054",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int [ ] c = new int [ n ] ; int topb = - 1 , topc = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; }",
            "python_code": "n = int ( input ( ) ) s = list ( map ( int , input ( ) . split ( ) ) ) b = max ( s ) for i in range ( 1 , b + 1 ) : if ( b % i == 0 ) : s . pop ( s . index ( i ) ) a = max ( s ) print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3378_A_1055",
            "java_code": "import java . util . * ; class GFG { static int cntWays ( String str , int n ) { int x = n + 1 ; int ways = x * x * ( x * x - 1 ) / 12 ; return ways ; } public static void main ( String [ ] args ) { String str = \"ab\" ; int n = str . length ( ) ; System . out . println ( cntWays ( str , n ) ) ; } }",
            "python_code": "def cntWays ( string , n ) : NEWLINE INDENT x = n + 1 ; NEWLINE ways = x * x * ( x * x - 1 ) // 12 ; NEWLINE return ways ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT string = \"ab\" ; NEWLINE n = len ( string ) ; NEWLINE print ( cntWays ( string , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_960_A_1056",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "s = str ( input ( ) ) a = s . find ( 'a' ) b = s . find ( 'b' ) c = s . find ( 'c' ) if ( 'a' in s ) and ( 'b' in s ) and ( 'b' in s ) and ( a < b < c ) and ( 'ba' not in s ) and ( 'ca' not in s ) and ( 'cb' not in s ) : if s . count ( 'a' ) == s . count ( 'c' ) or s . count ( 'b' ) == s . count ( 'c' ) : print ( \"YES\" ) else : print ( \"NO\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1459_B_1057",
            "java_code": "import java . util . * ; public class Solution { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String args [ ] ) { int n = sc . nextInt ( ) ; int a = n / 2 ; int b = n / 2 + ( n % 2 ) ; int ans = ( a + 1 ) * ( b + 1 ) ; if ( n % 2 != 0 ) ans *= 2 ; System . out . println ( ans ) ; } }",
            "python_code": "n = int ( input ( ) )  if n % 2 == 0 : NEWLINE INDENT print ( int ( ( ( n / 2 ) + 1 ) * ( ( n / 2 ) + 1 ) ) ) else : NEWLINE print ( int ( ( 2 + ( n - 1 ) / 2 ) * ( 2 * ( ( n - 1 ) / 2 + 1 ) ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3603_A_1058",
            "java_code": "import java . io . * ; class GFG { static void halfsquare ( int n , int x , int y ) { int half = n / 2 ; if ( ( half == x || half == x - 1 ) && ( half == y || half == y - 1 ) ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } public static void main ( String [ ] args ) { int n = 100 ; int x = 51 , y = 100 ; halfsquare ( n , x , y ) ; } }",
            "python_code": "def halfsquare ( n , x , y ) : NEWLINE INDENT half = n // 2 NEWLINE if ( ( half == x or half == x - 1 ) and ( half == y or half == y - 1 ) ) : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 100 NEWLINE x , y = 51 , 100 NEWLINE halfsquare ( n , x , y ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_B_1059",
            "java_code": "import java . util . Scanner ; public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int tc = sc . nextInt ( ) ; while ( tc -- > 0 ) { int n = sc . nextInt ( ) ; if ( n % 2020 <= n / 2020 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } sc . close ( ) ; } }",
            "python_code": "def func1 ( n , ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3258_A_1060",
            "java_code": "import java . io . * ; class GFG { static int countNumberOfTriangles ( int n ) { return n * ( n - 1 ) * ( n - 2 ) / 6 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( countNumberOfTriangles ( n ) ) ; } }",
            "python_code": "def countNumberOfTriangles ( n ) : NEWLINE INDENT return ( n * ( n - 1 ) * ( n - 2 ) // 6 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 4 NEWLINE print ( countNumberOfTriangles ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_852_A_1061",
            "java_code": "class Solution { public int peakIndexInMountainArray ( int [ ] A ) { int lo = 0 , hi = A . length - 1 ; while ( lo < hi ) { int mid = ( lo + hi ) / 2 ; if ( A [ mid ] < A [ mid + 1 ] ) lo = mid + 1 ; else hi = mid ; } return lo ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def peakIndexInMountainArray ( self , A ) : NEWLINE INDENTINDENT lo , hi = 0 , len ( A ) - 1 NEWLINE while lo < hi : NEWLINE INDENTINDENTINDENT mid = ( lo + hi ) / 2 NEWLINE if A [ mid ] < A [ mid + 1 ] : NEWLINE INDENTINDENTINDENTINDENT lo = mid + 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENTINDENT hi = mid NEWLINE DEDENT DEDENT return lo NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_461_A_1062",
            "java_code": "class Solution { public int hammingDistance ( int x , int y ) { return Integer . bitCount ( x ^ y ) ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def hammingDistance ( self , x , y ) : NEWLINE INDENTINDENT return bin ( x ^ y ) . count ( '1' ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1007_A_1063",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) map = { } for i in arr : if i not in map : map [ i ] = 1 else : map [ i ] += 1 max = 0 for i in map : if map [ i ] > max : max = map [ i ] print ( n - max ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1088_A_1064",
            "java_code": "import java . util . Scanner ;  public class Race3 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int x = in . nextInt ( ) ; for ( int i = 1 ; i <= x ; i ++ ) { for ( int j = 1 ; j <= x ; j ++ ) { if ( i % j == 0 && i * j > x && i / j < x ) { System . out . println ( i + \" \" + j ) ; System . exit ( 0 ) ; } } } System . out . println ( - 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) l = [ ] for a in range ( 1 , n + 1 ) : for b in range ( 1 , n + 1 ) : if a % b == 0 and a * b > n and a / b < n : l . append ( a ) l . append ( b ) if len ( l ) > 0 : print ( l [ 0 ] , l [ 1 ] ) else : print ( - 1 )                        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_572_B_1065",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; import java . util . Comparator ; import java . util . HashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . TreeMap ;  public class orderBook {  public static void main ( String [ ] args ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) bs , s = { } , { } for _ in \" \" * a : x , y , z = input ( ) . split ( ) y , z = int ( y ) , int ( z ) if x == 'B' : if y in bs : bs [ y ] += z else : bs [ y ] = z else : if y in s : s [ y ] += z else : s [ y ] = z NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_104_A_1066",
            "java_code": "import java . util . * ; import java . util . Scanner ; public class Blackjack { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) - 10 ; if ( n < 1 || n > 11 ) System . out . print ( 0 ) ; else if ( n == 10 ) System . out . print ( 15 ) ; else System . out . print ( 4 ) ; } }",
            "python_code": "n = int ( input ( ) ) if 0 <= n <= 10 : print ( 0 ) elif n == 11 : print ( 4 ) elif 12 <= n <= 19 : print ( 4 ) elif n == 20 : print ( 15 ) elif n == 21 : print ( 4 ) elif 22 <= n <= 25 : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_832_A_1067",
            "java_code": "import java . io . * ; class GFG { static void findAngle ( int n ) { int interiorAngle , exteriorAngle ; interiorAngle = ( n - 2 ) * 180 / n ; exteriorAngle = 360 / n ; System . out . println ( \"Interior angle: \" + interiorAngle ) ; System . out . println ( \"Exterior angle: \" + exteriorAngle ) ; } public static void main ( String [ ] args ) { int n = 10 ; findAngle ( n ) ; } }",
            "python_code": "def findAngle ( n ) : NEWLINE INDENT interiorAngle = int ( ( n - 2 ) * 180 / n ) NEWLINE exteriorAngle = int ( 360 / n ) NEWLINE print ( \"Interior angle: \" , interiorAngle ) NEWLINE print ( \"Exterior angle: \" , exteriorAngle ) NEWLINE DEDENT n = 10 NEWLINE findAngle ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2020_A_1068",
            "java_code": "class GFG { static int sum ( int n ) { return n * ( n + 1 ) * ( n + 2 ) / 3 ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( sum ( n ) ) ; } }",
            "python_code": "def Sum ( n ) : NEWLINE INDENT return n * ( n + 1 ) * ( n + 2 ) // 3 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE print ( Sum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1131_A_1069",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Practice  { static FastReader sc = new FastReader ( ) ; public static void main ( String [ ] args ) { int ttt = 1 ;",
            "python_code": "w , h , v , g = map ( int , input ( ) . split ( ) ) print ( 2 * ( w + h + g + 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_571_B_1070",
            "java_code": "import java . util . * ; import java . io . * ; public class Solution { static void merge ( long arr [ ] , int l , int m , int r ) {",
            "python_code": "f = lambda : map ( int , input ( ) . split ( ) ) n , k = f ( ) p = sorted ( f ( ) )  m , d = n // k , n % ku , v = d + 1 , k - d + 1 g = [ 0 ] * u * v  i = 0 for a in range ( u ) : j = a * m + a - 1 for b in range ( v ) : x = g [ i - 1 ] + p [ j ] - p [ j - m + 1 ] if b else 9e9 y = g [ i - v ] + p [ j ] - p [ j - m ] if a else 9e9 if i : g [ i ] = min ( x , y ) i += 1 j += mprint ( g [ - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4347_A_1071",
            "java_code": "public class GFG { static double sum ( int x , int n ) { double total = 1.0 ; double previous = 1.0 ; for ( int i = 1 ; i <= n ; i ++ ) { previous = ( previous * x ) / ( i + 1 ) ; total = total + previous ; } return total ; } public static void main ( String [ ] args ) { int x = 5 , n = 4 ; System . out . print ( \"Sum is: \" + sum ( x , n ) ) ; } }",
            "python_code": "def sum ( x , n ) : NEWLINE INDENT total = 1.0 ; NEWLINE previous = 1.0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT previous = ( previous * x ) / ( i + 1 ) ; NEWLINE total = total + previous ; NEWLINE DEDENT return total ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 5 ; NEWLINE n = 4 ; NEWLINE print ( \"Sum is: \" , sum ( x , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_844_A_1072",
            "java_code": "import java . util . * ;  public class dDiversity { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String s = scan . next ( ) ; int k = scan . nextInt ( ) ; int counter = 0 ; if ( s . length ( ) < k ) { System . out . println ( \"impossible\" ) ; } else { int [ ] AtoZcount = new int [ 26 ] ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { AtoZcount [ s . charAt ( i ) - 'a' ] ++ ; }",
            "python_code": "string = list ( input ( ) ) differnt_words = int ( input ( ) ) difset = set ( string )  if ( differnt_words > len ( string ) ) : print ( \"impossible\" ) else : val = differnt_words - len ( difset ) if ( val < 0 ) : print ( 0 ) else : print ( val ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_148_A_1073",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int k = scan . nextInt ( ) ; int l = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; int n = scan . nextInt ( ) ; int d = scan . nextInt ( ) ; int t = 0 ; for ( int i = 1 ; i <= d ; i ++ ) { if ( i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0 ) ; else t ++ ; } System . out . print ( ( d - t ) ) ; } }",
            "python_code": "from math import gcdfrom functools import reduce NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_595_A_1074",
            "java_code": "import java . util . Scanner ;  public class LightOnNight { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  int n = scan . nextInt ( ) * scan . nextInt ( ) ; int count = 0 ;  for ( int i = 0 ; i < n ; i ++ ) { int sum = scan . nextInt ( ) + scan . nextInt ( ) ;  if ( sum > 0 ) count ++ ; } System . out . println ( count ) ; } }",
            "python_code": "import sys  def main ( ) : inp = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) c = 0 for s in inp [ 1 : ] : t = s . split ( ) for i in range ( 0 , len ( t ) , 2 ) : c += '1' in t [ i : i + 2 ] return c  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1093_A_1075",
            "java_code": "import java . io . * ; class GFG { static void perfectSquares ( int l , int r ) { for ( int i = l ; i <= r ; i ++ ) { if ( Math . sqrt ( i ) == ( int ) Math . sqrt ( i ) ) System . out . print ( i + \" \" ) ; } } public static void main ( String [ ] args ) { int l = 2 , r = 24 ; perfectSquares ( l , r ) ; } }",
            "python_code": "def perfectSquares ( l , r ) : NEWLINE INDENT for i in range ( l , r + 1 ) : NEWLINE INDENTINDENT if ( i ** ( .5 ) == int ( i ** ( .5 ) ) ) : NEWLINE INDENTINDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT DEDENT DEDENT l = 2 NEWLINE r = 24 NEWLINE perfectSquares ( l , r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_839_A_1076",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , k = input ( ) . split ( ' ' ) a = input ( ) . split ( ' ' ) k = int ( k ) count = 0 storage = 0 total = 0 for ai in a : total += int ( ai )  df = min ( 8 , total ) k -= df total -= df count += 1 if k <= 0 : break  if k > 0 : print ( - 1 ) else : print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1175_A_1077",
            "java_code": "import java . util . * ;  public class ICPC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;  for ( int i = 1 ; i <= t ; i ++ ) { long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long c = 0 ;",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n , k = [ int ( x ) for x in input ( ) . split ( ) ] ind = 0 while n != 0 : if n % k == 0 : n = n // k ind += 1 else : ind = ind + ( n % k ) n = n - ( n % k ) print ( ind ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1201_B_1078",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main {  private static int MAX = Integer . MAX_VALUE ; private static int MIN = Integer . MIN_VALUE ; private static int MOD = 1000000007 ; static FastScanner sc = new FastScanner ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) maxi = max ( a ) s = sum ( a ) if maxi * 2 > s or s % 2 == 1 : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_723_A_1079",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int x1 = in . nextInt ( ) ; int x2 = in . nextInt ( ) ; int x3 = in . nextInt ( ) ; int max = Math . max ( x1 , Math . max ( x2 , x3 ) ) ; int min = Math . min ( x1 , Math . min ( x2 , x3 ) ) ;  System . out . println ( max - min ) ;   }  }  ",
            "python_code": "x1 , x2 , x3 = input ( ) . split ( ) x11 = int ( x1 ) x22 = int ( x2 ) x33 = int ( x3 ) l = [ x11 , x22 , x33 ] l . sort ( ) x44 = min ( x11 , x22 , x33 ) x55 = max ( x11 , x22 , x33 )  x66 = x55 - l [ 1 ] x77 = l [ 1 ] - x44print ( x66 + x77 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1081_A_1080",
            "java_code": " import java . util . Scanner ; import java . util . Arrays ; public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception { try { Scanner sc = new Scanner ( System . in ) ; int t , n ; t = sc . nextInt ( ) ; if ( t < 3 ) System . out . println ( t ) ; else System . out . println ( 1 ) ; } catch ( Exception e ) { } } }",
            "python_code": "num = int ( input ( ) ) if num == 2 : print ( \"2\" ) else : print ( \"1\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_638_A_1081",
            "java_code": "import java . util . Scanner ;  public class A638 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int A = in . nextInt ( ) ; int answer ; if ( A % 2 == 0 ) { answer = ( ( N + 2 ) - A ) / 2 ; } else { answer = ( A + 1 ) / 2 ; } System . out . println ( answer ) ; }  }",
            "python_code": "import sysn , a = map ( int , input ( ) . split ( ) ) up = [ i for i in range ( 1 , n , 2 ) ] down = [ i for i in range ( n , 1 , - 2 ) ] if a in up : print ( up . index ( a ) + 1 ) else : print ( down . index ( a ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1047_A_1082",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; if ( n % 3 == 0 ) System . out . println ( \"1 1 \" + ( n - 2 ) ) ; else System . out . println ( \"1 2 \" + ( n - 3 ) ) ; } }",
            "python_code": "n = int ( input ( ) ) if ( ( n - 2 ) % 3 == 0 ) : a = 1 b = 2 c = n - 3 else : a = 1 b = 1 c = n - 2 print ( a , b , c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2725_A_1083",
            "java_code": "class GFG { static int longestPrefixSuffix ( String s ) { int n = s . length ( ) ; if ( n < 2 ) { return 0 ; } int len = 0 ; int i = n / 2 ; while ( i < n ) { if ( s . charAt ( i ) == s . charAt ( len ) ) { ++ len ; ++ i ; } else { if ( len == 0 ) { ++ i ; } else { -- len ; } } } return len ; } public static void main ( String [ ] args ) { String s = \"blablabla\" ; System . out . println ( longestPrefixSuffix ( s ) ) ; } }",
            "python_code": "def longestPrefixSuffix ( s ) : NEWLINE INDENT n = len ( s ) NEWLINE for res in range ( n // 2 , 0 , - 1 ) : NEWLINE INDENTINDENT prefix = s [ 0 : res ] NEWLINE suffix = s [ n - res : n ] NEWLINE if ( prefix == suffix ) : NEWLINE INDENTINDENTINDENT return res NEWLINE DEDENT DEDENT return 0 NEWLINE DEDENT s = \"blablabla\" NEWLINE print ( longestPrefixSuffix ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3702_A_1084",
            "java_code": "import java . io . * ; class GFG { static int numberOfWays ( int x ) { if ( x == 0 || x == 1 ) return 1 ; else return numberOfWays ( x - 1 ) + ( x - 1 ) * numberOfWays ( x - 2 ) ; } public static void main ( String [ ] args ) { int x = 3 ; System . out . println ( numberOfWays ( x ) ) ; } }",
            "python_code": "def numberOfWays ( x ) : NEWLINE INDENT if x == 0 or x == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( numberOfWays ( x - 1 ) + ( x - 1 ) * numberOfWays ( x - 2 ) ) NEWLINE DEDENT DEDENT x = 3 NEWLINE print ( numberOfWays ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_876_A_1085",
            "java_code": "class Solution { public ListNode middleNode ( ListNode head ) { ListNode fast , slow ; fast = slow = head ; while ( fast != null && fast . next != null ) { slow = slow . next ; fast = fast . next . next ; } return slow ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def middleNode ( self , head ) : NEWLINE INDENTINDENT fast = slow = head NEWLINE while fast and fast . next : NEWLINE INDENTINDENTINDENT slow = slow . next NEWLINE fast = fast . next . next NEWLINE DEDENT return slow NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_46_A_1086",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int total = n - 1 ; int ans = 1 ; for ( int i = 1 ; i <= total ; i ++ ) { ans += i ; if ( ans > n ) { ans = ans % n ; } if ( i == total ) { System . out . print ( ans ) ; } else { System . out . print ( ans + \" \" ) ; } } System . out . println ( ) ; scan . close ( ) ; }  }",
            "python_code": "n = int ( input ( ) ) s = 1 result = [ ] t = 1 for i in range ( 1 , n ) : t += s if t > n : t -= n result . append ( t ) s += 1 print ( * result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_13_A_1087",
            "java_code": "class GFG { static boolean isDivisible ( int n ) { int d ; while ( ( n / 100 ) > 0 ) { d = n % 10 ; n /= 10 ; n = Math . abs ( n + ( d * 13 ) ) ; } return ( n % 43 == 0 ) ; } public static void main ( String [ ] args ) { int N = 2795 ; if ( isDivisible ( N ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n = abs ( n + ( d * 13 ) ) NEWLINE DEDENT return ( n % 43 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 2795 NEWLINE if ( isDivisible ( N ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_69_A_1088",
            "java_code": "import java . util . Scanner ;  public class Codeforces {  public static void main ( String [ ] args ) {  Scanner input = new Scanner ( System . in ) ; ",
            "python_code": "n = int ( input ( ) ) NEWLINE x = 0 NEWLINE y = 0 NEWLINE z = 0 NEWLINE for i in range ( n ) : inp = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE x += inp [ 0 ] NEWLINE y += inp [ 1 ] NEWLINE z += inp [ 2 ] NEWLINE if ( x == 0 and y == 0 and z == 0 ) : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_873_B_1089",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "input ( ) instring = input ( ) balance = [ 0 ]  num0 = 0 num1 = 0  for c in instring : if c == \"0\" : num0 += 1 else : num1 += 1  balance . append ( num0 - num1 )  d = { }  for i in range ( len ( balance ) ) : if balance [ i ] not in d : d [ balance [ i ] ] = i  ans = 0 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_263_A_1090",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int a = 0 , b = 0 ; for ( int i = 0 ; i < 25 ; i ++ ) { if ( scan . nextInt ( ) == 1 ) { a = i % 5 ; b = i / 5 ; } } System . out . println ( Math . abs ( a - 2 ) + Math . abs ( b - 2 ) ) ; } }   ",
            "python_code": "lst = [ ]  x = y = 0  for i in range ( 5 ) :  matrix = input ( ) . split ( )  lst . append ( matrix )  for j in range ( 0 , 5 ) :  if ( lst [ i ] [ j ] == \"1\" ) :  x = i - 2  y = j - 2  print ( abs ( x ) + abs ( y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1109_B_1091",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ;",
            "python_code": "import osimport sysfrom io import BytesIO , IOBase NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4365_A_1092",
            "java_code": "import java . io . * ; class GFG { static void printReverseFloyd ( int n ) { int curr_val = n * ( n + 1 ) / 2 ; for ( int i = n ; i >= 1 ; i -- ) { for ( int j = i ; j >= 1 ; j -- ) { System . out . printf ( \"%2d  \" , curr_val -- ) ; } System . out . println ( \"\" ) ; } } public static void main ( String [ ] args ) { int n = 7 ; printReverseFloyd ( n ) ; } }",
            "python_code": "def printReverseFloyd ( n ) : NEWLINE INDENT curr_val = int ( n * ( n + 1 ) / 2 ) NEWLINE for i in range ( n + 1 , 1 , - 1 ) : NEWLINE INDENTINDENT for j in range ( i , 1 , - 1 ) : NEWLINE INDENTINDENTINDENT print ( curr_val , end = \"  \" ) NEWLINE curr_val -= 1 NEWLINE DEDENT print ( \"\" ) NEWLINE DEDENT DEDENT n = 7 NEWLINE printReverseFloyd ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_855_A_1093",
            "java_code": "import java . io . * ; import java . util . * ;  public class Diary {",
            "python_code": "n = int ( input ( ) ) names = { } for i in range ( n ) : name = input ( ) if name in names : print ( 'YES' ) else : print ( 'NO' ) names [ name ] = 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4776_A_1094",
            "java_code": "class GFG { static void shuffle ( int N , int key ) { int NO_OF_BITS = N ; int reverse_num = 0 , temp ; for ( int i = 0 ; i < NO_OF_BITS ; i ++ ) { temp = ( key & ( 1 << i ) ) ; if ( temp > 0 ) reverse_num |= ( 1 << ( ( NO_OF_BITS - 1 ) - i ) ) ; } System . out . print ( reverse_num ) ; } public static void main ( String [ ] args ) { int N = 3 ; int key = 3 ; shuffle ( N , key ) ; } }",
            "python_code": "def shuffle ( N , key ) : NEWLINE INDENT NO_OF_BITS = N NEWLINE reverse_num = 0 NEWLINE for i in range ( NO_OF_BITS ) : NEWLINE INDENTINDENT temp = ( key & ( 1 << i ) ) NEWLINE if ( temp ) : NEWLINE INDENTINDENTINDENT reverse_num |= ( 1 << ( ( NO_OF_BITS - 1 ) - i ) ) NEWLINE DEDENT DEDENT print ( reverse_num ) NEWLINE DEDENT N = 3 NEWLINE key = 3 NEWLINE shuffle ( N , key ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_702_B_1095",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;",
            "python_code": "from math import logfrom collections import defaultdictn = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) dic = defaultdict ( lambda : 0 ) ans = 0 for el in a : i = int ( log ( el * 2 , 2 ) ) temp = 2 ** i while temp > 0 : if dic [ temp - el ] != 0 : ans += dic [ temp - el ] temp //= 2 dic [ el ] += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_454_A_1096",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {  int n ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ;  int l = n / 2 + 1 , r = n / 2 - 1 ;",
            "python_code": "if __name__ == '__main__' : n = int ( input ( ) ) for i in range ( n ) : for j in range ( n ) : if min ( i , n - i - 1 ) + min ( j , n - j - 1 ) < n // 2 : print ( '*' , end = '' ) else : print ( 'D' , end = '' ) print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4320_A_1097",
            "java_code": "class GFG { static int arr [ ] = { 1 , 2 , 3 , 4 , 5 , 6 } ; static int multiply ( int a [ ] , int n ) { if ( n == 0 ) return ( a [ n ] ) ; else return ( a [ n ] * multiply ( a , n - 1 ) ) ; } public static void main ( String [ ] args ) { System . out . println ( multiply ( arr , arr . length - 1 ) ) ; } }",
            "python_code": "def multiply ( a , n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return ( a [ n ] ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( a [ n ] * multiply ( a , n - 1 ) ) NEWLINE DEDENT DEDENT array = [ 1 , 2 , 3 , 4 , 5 , 6 ] NEWLINE n = len ( array ) NEWLINE print ( multiply ( array , n - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2383_A_1098",
            "java_code": "class Test { static boolean isTidy ( int num ) { int prev = 10 ; while ( num != 0 ) { int rem = num % 10 ; num /= 10 ; if ( rem > prev ) return false ; prev = rem ; } return true ; } public static void main ( String [ ] args ) { int num = 1556 ; System . out . println ( isTidy ( num ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "def isTidy ( num ) : NEWLINE INDENT prev = 10 NEWLINE while ( num ) : NEWLINE INDENTINDENT rem = num % 10 NEWLINE num /= 10 NEWLINE if rem > prev : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT prev = rem NEWLINE DEDENT return True NEWLINE DEDENT num = 1556 NEWLINE if isTidy ( num ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_84_A_1099",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int n = scn . nextInt ( ) ; int ans = ( n / 2 ) * 3 ; System . out . println ( ans ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE print ( n // 2 * 3 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2769_A_1100",
            "java_code": "class GFG { static boolean isWordPresent ( String sentence , String word ) { String [ ] s = sentence . split ( \" \" ) ; for ( String temp : s ) { if ( temp . compareTo ( word ) == 0 ) { return true ; } } return false ; } public static void main ( String [ ] args ) { String s = \"Geeks for Geeks\" ; String word = \"Geeks\" ; if ( isWordPresent ( s , word ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isWordPresent ( sentence , word ) : NEWLINE INDENT s = sentence . split ( \" \" ) NEWLINE for i in s : NEWLINE INDENTINDENT if ( i == word ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT return False NEWLINE DEDENT s = \"Geeks for Geeks\" NEWLINE word = \"Geeks\" NEWLINE if ( isWordPresent ( s , word ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1111_B_1101",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n , p , t = map ( int , input ( ) . split ( ) ) arr = sorted ( map ( int , input ( ) . split ( ) ) ) arr = [ 0 ] + arr [ : : - 1 ] for i in range ( 1 , n + 1 ) : arr [ i ] += arr [ i - 1 ] maxi = 0 count = 0 for i in range ( n , 0 , - 1 ) : if ( t == - 1 ) : break maxi = max ( maxi , ( arr [ i ] + max ( 0 , min ( i * p , t ) ) ) / i ) t -= 1 print ( maxi ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2236_A_1102",
            "java_code": "class GFG { static int countNumbers ( int x , int n ) { if ( x > n ) return 0 ; return 1 + countNumbers ( x * 10 , n ) + countNumbers ( x * 10 + 1 , n ) ; } public static void main ( String [ ] args ) { int n = 120 ; System . out . println ( countNumbers ( 1 , n ) ) ; } }",
            "python_code": "def countNumbers ( x , n ) : NEWLINE INDENT if x > n : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return ( 1 + countNumbers ( x * 10 , n ) + countNumbers ( x * 10 + 1 , n ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 120 ; NEWLINE print ( countNumbers ( 1 , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2067_A_1103",
            "java_code": "import java . io . * ; class GFG { static int minimumMoves ( int k , int l , int r ) { int count = r - l + 1 ; if ( count % k == 0 ) return 0 ; return ( k - ( count % k ) ) ; } public static void main ( String [ ] args ) { int k = 3 , l = 10 , r = 10 ; System . out . print ( minimumMoves ( k , l , r ) ) ; } }",
            "python_code": "def minimumMoves ( k , l , r ) : NEWLINE INDENT count = r - l + 1 NEWLINE if ( count % k == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return ( k - ( count % k ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT k = 3 NEWLINE l = 10 NEWLINE r = 10 NEWLINE print ( minimumMoves ( k , l , r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1157_A_1104",
            "java_code": "import java . util . * ; import java . math . * ; public class ReachableNumbers { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; ArrayList < Long > arr = new ArrayList < > ( ) ; long n = sc . nextLong ( ) ; while ( ! arr . contains ( n ) ) { arr . add ( n ) ; n = f ( n ) ; } System . out . println ( arr . size ( ) ) ; } static long f ( long x ) { x += 1 ; while ( x % 10 == 0 ) x /= 10 ; return x ; }  }",
            "python_code": "n = int ( input ( ) ) ans = 0 i = 1 while n > 0 : if i == 1 : if n < 10 : ans += 9 n = 0 else : temp = n % 10 ans += 10 - temp n = n // 10 i += 1 else : if n < 10 : ans += 9 n = 0 else : temp = ( n % 10 ) + 1 ans += 10 - temp n = n // 10 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_35_A_1105",
            "java_code": "import java . io . File ; import java . io . FileNotFoundException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . Scanner ; import java . util . Stack ;  public class test {  public static void main ( String [ ] args ) throws FileNotFoundException {",
            "python_code": "rfile = open ( 'input.txt' , 'r' ) maintxt = rfile . read ( ) . split ( '\\n' ) rfile . close ( ) pos = int ( maintxt [ 0 ] ) for i in range ( 1 , 4 ) : temp = maintxt [ i ] . split ( ' ' ) cup1 , cup2 = int ( temp [ 0 ] ) , int ( temp [ 1 ] ) if pos == cup1 : pos = cup2 elif pos == cup2 : pos = cup1wfile = open ( 'output.txt' , 'w' ) wfile . write ( str ( pos ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_426_A_1106",
            "java_code": "import java . util . * ; public class test { public static void main ( String args [ ] ) { int x = 0 , mx = 0 ; Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , s = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; x += a [ i ] ; if ( mx < a [ i ] ) mx = a [ i ] ; } if ( s >= x - mx ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "n , s = map ( int , input ( ) . split ( ) ) A = list ( map ( int , input ( ) . split ( ) ) ) A . sort ( ) if sum ( A [ : n - 1 ] ) <= s : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_740_A_1107",
            "java_code": "import java . util . * ;",
            "python_code": "n , a , b , c = map ( int , input ( ) . split ( ) ) if ( n % 4 == 0 ) : print ( 0 ) else : hf = ( ( n // 4 ) * 4 ) + 4 diff = hf - n if ( diff == 1 ) : print ( min ( a , b + c , 3 * c ) ) elif ( diff == 2 ) : print ( min ( 2 * a , 2 * c , b ) ) else : print ( min ( c , 3 * a , a + b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_337_A_1108",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "nums = input ( ) . split ( ) puzzles = input ( ) . split ( ) for i in range ( len ( puzzles ) ) : puzzles [ i ] = int ( puzzles [ i ] ) puzzles . sort ( ) min = 1000 for i in range ( int ( nums [ 1 ] ) - int ( nums [ 0 ] ) + 1 ) : if puzzles [ i + int ( nums [ 0 ] ) - 1 ] - puzzles [ i ] < min : min = puzzles [ i + int ( nums [ 0 ] ) - 1 ] - puzzles [ i ] print ( min ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_946_A_1109",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = 0 ; for ( int i = 0 ; i < a ; i ++ ) { b += Math . abs ( in . nextInt ( ) ) ; } System . out . println ( b ) ; } }",
            "python_code": "import sys  def main ( ) : return sum ( abs ( int ( i ) ) for i in sys . stdin . read ( ) . strip ( ) . split ( ) [ 1 : ] )  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4724_A_1110",
            "java_code": "import java . io . * ; class GFG { static void solve ( int A , int B ) { int count = 0 ; for ( int i = 0 ; i < 32 ; i ++ ) { if ( ( ( A > > i ) & 1 ) != ( ( B > > i ) & 1 ) ) { count ++ ; } } System . out . println ( \"Number of different bits : \" + count ) ; } public static void main ( String [ ] args ) { int A = 12 , B = 15 ; solve ( A , B ) ; } }",
            "python_code": "def solve ( A , B ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , 32 ) : NEWLINE INDENTINDENT if ( ( ( A >> i ) & 1 ) != ( ( B >> i ) & 1 ) ) : NEWLINE INDENTINDENTINDENT count = count + 1 NEWLINE DEDENT DEDENT print ( \"Number of different bits :\" , count ) NEWLINE DEDENT A = 12 NEWLINE B = 15 NEWLINE solve ( A , B ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3454_A_1111",
            "java_code": "class GFG { static double longestRodInCuboid ( int length , int breadth , int height ) { double result ; int temp ; temp = length * length + breadth * breadth + height * height ; result = Math . sqrt ( temp ) ; return result ; } public static void main ( String [ ] args ) { int length = 12 , breadth = 9 , height = 8 ; System . out . println ( ( int ) longestRodInCuboid ( length , breadth , height ) ) ; } }",
            "python_code": "from math import * NEWLINE def longestRodInCuboid ( length , breadth , height ) : NEWLINE INDENT temp = length * length + breadth * breadth + height * height NEWLINE result = sqrt ( temp ) NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT length , breadth , height = 12 , 9 , 8 NEWLINE print ( longestRodInCuboid ( length , breadth , height ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1330_A_1112",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "import sysfrom os import pathif ( path . exists ( 'input.txt' ) and path . exists ( 'output.txt' ) ) : sys . stdout = open ( 'output.txt' , 'w' ) sys . stdin = open ( 'input.txt' , 'r' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4_A_1113",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { static boolean func ( int a [ ] , int k ) { for ( int i = 0 ; i < a . length ; i ++ ) if ( a [ i ] % k == 0 ) return true ; return false ; } public static void main ( String args [ ] ) { int [ ] a = { 14 , 27 , 38 , 76 , 84 } ; int k = 19 ; boolean res = func ( a , k ) ; System . out . println ( res ) ; } }",
            "python_code": "def func ( a , k , n ) : NEWLINE INDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( a [ i ] % k == 0 ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT DEDENT a = [ 14 , 27 , 38 , 76 , 84 ] NEWLINE k = 19 NEWLINE res = func ( a , k , 5 ) NEWLINE if ( res ) : NEWLINE INDENT print ( \"true\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"false\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_804_A_1114",
            "java_code": " import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; while ( input . hasNext ( ) ) { int n = input . nextInt ( ) ; System . out . println ( ( n + 1 ) / 2 - 1 ) ; } } } ",
            "python_code": "n = int ( input ( ) ) print ( ( n - 1 ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1204_B_1115",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) throws Exception { int [ ] nlr = in . readA ( ) ; int n = nlr [ 0 ] , l = nlr [ 1 ] , r = nlr [ 2 ] ;",
            "python_code": "import sysdef input ( ) : return sys . stdin . readline ( ) . strip ( ) def iinput ( ) : return int ( input ( ) ) def minput ( ) : return map ( int , input ( ) . split ( ) ) def listinput ( ) : return list ( map ( int , input ( ) . split ( ) ) ) n , l , r = minput ( ) mi = 2 ** l - 1 + n - lma = 2 ** r - 1 + 2 ** ( r - 1 ) * ( n - r ) print ( mi , ma ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_52_B_1116",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ; public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) c , r = [ 0 ] * n , [ 0 ] * mvals = [ ] for i in range ( n ) : s = input ( ) vals . append ( s ) for j in range ( m ) : if ( s [ j ] == '*' ) : c [ i ] += 1 r [ j ] += 1 ans = 0 for i in range ( n ) : for j in range ( m ) : if ( vals [ i ] [ j ] == '*' ) : ans += ( c [ i ] - 1 ) * ( r [ j ] - 1 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_667_B_1117",
            "java_code": "import java . lang . reflect . Array ; import java . util . * ;  public class Main { private static Scanner in = new Scanner ( System . in ) ; ",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) s = sum ( a [ : - 1 ] ) print ( a [ - 1 ] - s + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1885_A_1118",
            "java_code": "import java . io . * ; class GFG { static int setBitNumber ( int n ) { if ( n == 0 ) return 0 ; int msb = 0 ; while ( n != 0 ) { n = n / 2 ; msb ++ ; } return ( 1 << msb ) ; } public static void main ( String [ ] args ) { int n = 0 ; System . out . println ( setBitNumber ( n ) ) ; } }",
            "python_code": "def setBitNumber ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT msb = 0 ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT n = int ( n / 2 ) ; NEWLINE msb += 1 ; NEWLINE DEDENT return ( 1 << msb ) ; NEWLINE DEDENT n = 0 ; NEWLINE print ( setBitNumber ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4680_A_1119",
            "java_code": "import java . util . * ; class GFG { static int minAbsDiff ( int n ) { int left = ( int ) Math . pow ( 2 , ( int ) ( Math . log ( n ) / Math . log ( 2 ) ) ) ; int right = left * 2 ; return Math . min ( ( n - left ) , ( right - n ) ) ; } public static void main ( String args [ ] ) { int n = 15 ; System . out . println ( minAbsDiff ( n ) ) ; } }",
            "python_code": "from math import floor , log2 NEWLINE def minAbsDiff ( n ) : NEWLINE INDENT left = pow ( 2 , floor ( log2 ( n ) ) ) NEWLINE right = left * 2 NEWLINE return min ( ( n - left ) , ( right - n ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 15 NEWLINE print ( minAbsDiff ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_435_A_1120",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int sum = m ; int r = 0 ; while ( n != 0 ) { n -- ; int a = in . nextInt ( ) ; if ( sum + a > m ) { r ++ ; sum = a ; } else sum = sum + a ; } System . out . println ( r ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) res = 1 pep = 0 for i in range ( 0 , n ) : if ( pep + a [ i ] <= m ) : pep += a [ i ] else : res += 1 pep = a [ i ] print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_259_A_1121",
            "java_code": "public class GFG { static int SquareCube ( long N ) { int cnt = 0 , i = 1 ; while ( ( int ) ( Math . pow ( i , 6 ) ) <= N ) { ++ cnt ; ++ i ; } return cnt ; } public static void main ( String [ ] args ) { long N = 100000 ; System . out . println ( SquareCube ( N ) ) ; } }",
            "python_code": "def SquareCube ( N ) : NEWLINE INDENT cnt , i = 0 , 1 NEWLINE while ( i ** 6 <= N ) : NEWLINE INDENTINDENT cnt += 1 NEWLINE i += 1 NEWLINE DEDENT return cnt NEWLINE DEDENT N = 100000 NEWLINE print ( SquareCube ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_699_B_1122",
            "java_code": "import java . util . Scanner ;   public class Main { static final int M = 1010 ;  public static void main ( String [ ] args ) {",
            "python_code": "import math , sys , bisect , heapqfrom collections import defaultdict , Counter , dequefrom itertools import groupby , accumulate NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_785_B_1123",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  ",
            "python_code": "n = int ( input ( ) ) maxln = 0 minrn = 10 ** 9 + 1 for i in range ( n ) : l , r = map ( int , input ( ) . split ( ) ) maxln = max ( l , maxln ) minrn = min ( r , minrn ) m = int ( input ( ) ) ans = - 1 for i in range ( m ) : l , r = map ( int , input ( ) . split ( ) ) if l > minrn : ans = max ( ans , l - minrn ) if r < maxln : ans = max ( ans , maxln - r ) ans = max ( 0 , ans ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_742_B_1124",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ;  public class Main {  public static void main ( String [ ] args ) { FastReader in = new FastReader ( ) ; PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "n , x = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) dp = [ 0 ] * ( 10 ** 6 + 1 ) for i in arr : dp [ i ] += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_363_A_1125",
            "java_code": "import java . util . * ; public class Soroban {  public static void main ( String [ ] args ) {",
            "python_code": "chot = { 0 : \"O-|-OOOO\" , 1 : \"O-|O-OOO\" , 2 : \"O-|OO-OO\" , 3 : \"O-|OOO-O\" , 4 : \"O-|OOOO-\" , 5 : \"-O|-OOOO\" , 6 : \"-O|O-OOO\" , 7 : \"-O|OO-OO\" , 8 : \"-O|OOO-O\" , 9 : \"-O|OOOO-\" }  num = int ( input ( ) )  divs = [ ]  if num == 0 : print ( chot [ 0 ] ) exit ( )  while num > 0 : divs . append ( ( num % 10 ) ) num //= 10  for i in divs : print ( chot [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4476_A_1126",
            "java_code": "import java . io . * ; class GFG { static int previousFibonacci ( int n ) { double a = n / ( ( 1 + Math . sqrt ( 5 ) ) / 2.0 ) ; return ( int ) Math . round ( a ) ; } public static void main ( String [ ] args ) { int n = 8 ; System . out . println ( previousFibonacci ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def previousFibonacci ( n ) : NEWLINE INDENT a = n / ( ( 1 + sqrt ( 5 ) ) / 2.0 ) NEWLINE return round ( a ) NEWLINE DEDENT n = 8 NEWLINE print ( previousFibonacci ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_978_B_1127",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s ; int x = 0 , n , flag ; n = scanner . nextInt ( ) ; s = scanner . next ( ) ; while ( s . contains ( \"xxx\" ) ) { s = s . replaceFirst ( \"xxx\" , \"xx\" ) ; x ++ ; } System . out . println ( x ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) count = 0 for i in range ( n ) : s1 = s [ i : i + 3 ] if ( s1 == 'xxx' ) : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_898_B_1128",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) a = int ( input ( ) ) b = int ( input ( ) ) import mathdef extgcd ( a , b ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4681_A_1129",
            "java_code": "class GFG { static int minAbsDiff ( int n ) { int left = 1 << ( ( int ) Math . floor ( Math . log ( n ) / Math . log ( 2 ) ) ) ; int right = left * 2 ; return Math . min ( ( n - left ) , ( right - n ) ) ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( minAbsDiff ( n ) ) ; } }",
            "python_code": "import math NEWLINE def minAbsDiff ( n ) : NEWLINE INDENT left = 1 << ( int ) ( math . floor ( math . log2 ( n ) ) ) NEWLINE right = left * 2 NEWLINE return min ( ( n - left ) , ( right - n ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 15 NEWLINE print ( minAbsDiff ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_932_A_1130",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String str = scan . nextLine ( ) ;  StringBuilder sb = new StringBuilder ( str ) ; String rev = sb . reverse ( ) . toString ( ) ;  System . out . println ( str + rev ) ; } }",
            "python_code": "s = input ( ) print ( s + s [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1458_A_1131",
            "java_code": "from math import gcdn , m = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) d = 0f or i in range ( 1 , n ) : d = gcd ( d , abs ( a [ i ] - a [ i - 1 ] ) ) ans = [ gcd ( d , a [ 0 ] + elm ) for elm in b ] print ( * ans )",
            "python_code": "import sys , os , ioimport NEWLINE math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_700_A_1132",
            "java_code": "class Solution { public TreeNode searchBST ( TreeNode root , int val ) { while ( root != null && root . val != val ) { root = val < root . val ? root . left : root . right ; } return root ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def searchBST ( self , root , val ) : NEWLINE INDENTINDENT while root : NEWLINE INDENTINDENTINDENT if root . val == val : NEWLINE INDENTINDENTINDENTINDENT return root NEWLINE DEDENT elif root . val > val : NEWLINE INDENTINDENTINDENTINDENT root = root . left NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENTINDENT root = root . right NEWLINE DEDENT DEDENT return root NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1370_A_1133",
            "java_code": "import java . util . Scanner ; import java . lang . Math ; import java . util . Arrays ;  public class pa { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String args [ ] ) { int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = sc . nextInt ( ) ; System . out . println ( n / 2 ) ; } } }",
            "python_code": "for ti in range ( int ( input ( ) ) ) : print ( int ( input ( ) ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_791_A_1134",
            "java_code": "import java . util . * ;  public class test { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; short a = scanner . nextShort ( ) ; short b = scanner . nextShort ( ) ; short counter = 0 ;  while ( a <= b ) { a = ( short ) ( a * 3 ) ; b = ( short ) ( b * 2 ) ; counter ++ ; } System . out . println ( counter ) ;  }  }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) Limak_age = aBob_age = bn_years = 0 while Limak_age <= Bob_age : Limak_age *= 3 Bob_age *= 2 n_years += 1 print ( n_years ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_769_A_1135",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; System . out . println ( a [ n / 2 ] ) ; } }",
            "python_code": "n = int ( input ( ) ) arr = sorted ( map ( int , input ( ) . split ( ) ) )  print ( arr [ n // 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_513_A_1136",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { int jugador1 , jugador2 , lanzamientos1 , lanzamientos2 ; Scanner teclado = new Scanner ( System . in ) ; jugador1 = teclado . nextInt ( ) ; jugador2 = teclado . nextInt ( ) ; if ( jugador1 > jugador2 ) { System . out . println ( \"First\" ) ; } else { System . out . println ( \"Second\" ) ; } }  } ",
            "python_code": "n1 , n2 , k1 , k2 = map ( int , input ( ) . split ( ) ) flag1 = 0 flag2 = 0 i = 1 while True : if i % 2 != 0 : if n1 < 1 : flag1 = 1 break else : n1 -= 1 if n1 < 1 : flag1 = 1 break else : if n2 < 1 : flag2 = 1 break else : n2 -= 1 if n2 < 1 : flag2 = 1 break i += 1 if flag1 == 1 : print ( \"Second\" ) else : print ( \"First\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_985_A_1137",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) chess = list ( map ( int , input ( ) . split ( ) ) )  move1 = 0 move2 = 0  chess . sort ( )  for i in range ( len ( chess ) ) : move1 += abs ( chess [ i ] - ( i * 2 + 1 ) ) move2 += abs ( chess [ i ] - ( i * 2 + 2 ) )  print ( min ( move1 , move2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_579_A_1138",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class CF579A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int x = Integer . parseInt ( br . readLine ( ) ) ; int set_bits = 0 ; while ( x != 0 ) { set_bits += x & 1 ; x >>= 1 ; } System . out . print ( set_bits ) ; } }",
            "python_code": "import mathn = int ( input ( ) ) res = 0 while n >= 2 : n -= math . pow ( 2 , math . floor ( math . log2 ( n ) ) ) res += 1 print ( int ( res + n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_350_A_1139",
            "java_code": "import java . io . * ; class GFG { static double areaOctagon ( double side ) { return ( float ) ( 2 * ( 1 + Math . sqrt ( 2 ) ) * side * side ) ; } public static void main ( String arg [ ] ) { double side = 4 ; System . out . print ( \"Area of Regular Octagon = \" + areaOctagon ( side ) ) ; } }",
            "python_code": "import math NEWLINE def areaOctagon ( side ) : NEWLINE INDENT return ( 2 * ( 1 + ( math . sqrt ( 2 ) ) ) * side * side ) NEWLINE DEDENT side = 4 NEWLINE print ( \"Area of Regular Octagon =\" , round ( areaOctagon ( side ) , 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2093_A_1140",
            "java_code": "import java . io . * ; class GFG { static long sumAP ( long n , long d ) { n = ( int ) n / d ; return ( n ) * ( 1 + n ) * d / 2 ; } static long sumMultiples ( long n , long a , long b ) { n -- ; return sumAP ( n , a ) + sumAP ( n , b ) - sumAP ( n , a * b ) ; } public static void main ( String [ ] args ) { long n = 10 , a = 3 , b = 5 ; System . out . println ( sumMultiples ( n , a , b ) ) ; } }",
            "python_code": "def sumAP ( n , d ) : NEWLINE INDENT n = n // d NEWLINE return ( n ) * ( 1 + n ) * d // 2 NEWLINE DEDENT def sumMultiples ( n , a , b ) : NEWLINE INDENT n = n - 1 NEWLINE return sumAP ( n , a ) + sumAP ( n , b ) - \\ NEWLINE INDENTINDENT sumAP ( n , a * b ) NEWLINE DEDENT DEDENT n = 10 NEWLINE a = 3 NEWLINE b = 5 NEWLINE print ( sumMultiples ( n , a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_A_1141",
            "java_code": "import java . util . Scanner ;  public class A1455 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { String n = scanner . next ( ) ; System . out . println ( n . length ( ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = input ( ) NEWLINE fx = n [ : : - 1 ] NEWLINE ffx = fx [ : : - 1 ] NEWLINE if int ( ffx ) == int ( n ) : NEWLINE INDENT print ( len ( n ) ) else : NEWLINE print ( len ( fx ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3000_A_1142",
            "java_code": "import java . io . * ; class GFG { public static void printPascal ( int n ) { for ( int line = 1 ; line <= n ; line ++ ) { int C = 1 ; for ( int i = 1 ; i <= line ; i ++ ) { System . out . print ( C + \" \" ) ; C = C * ( line - i ) / i ; } System . out . println ( ) ; } } public static void main ( String [ ] args ) { int n = 5 ; printPascal ( n ) ; } }",
            "python_code": "def printPascal ( n ) : NEWLINE INDENT for line in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT C = 1 ; NEWLINE for i in range ( 1 , line + 1 ) : NEWLINE INDENTINDENTINDENT print ( C , end = \" \" ) ; NEWLINE C = int ( C * ( line - i ) / i ) ; NEWLINE DEDENT print ( \"\" ) ; NEWLINE DEDENT DEDENT n = 5 ; NEWLINE printPascal ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_965_B_1143",
            "java_code": "import java . io . * ; import java . util . * ;  public class B_Battleship { public static void main ( String [ ] args ) throws Exception { int [ ] nk = in . readA ( ) ; int n = nk [ 0 ] , k = nk [ 1 ] ; int [ ] [ ] mat = new int [ n ] [ n ] ; char [ ] [ ] inpMat = new char [ n ] [ ] ; for ( int i = 0 ; i < n ; i ++ ) { inpMat [ i ] = in . readLine ( ) . toCharArray ( ) ; }",
            "python_code": "import sys   def read_input ( input_path = None ) : if input_path is None : f = sys . stdin else : f = open ( input_path , 'r' )  n , k = map ( int , f . readline ( ) . split ( ) ) field = list ( ) for _ in range ( n ) : field . append ( f . readline ( ) . rstrip ( ) )  return n , k , field   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2266_A_1144",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { static int evenSum ( int n ) { int curr = 2 , sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum += curr ; curr += 2 ; } return sum ; } public static void main ( String argc [ ] ) { int n = 20 ; System . out . println ( \"Sum of first \" + n + \" Even numbers is: \" + evenSum ( n ) ) ; } }",
            "python_code": "def evensum ( n ) : NEWLINE INDENT curr = 2 NEWLINE sum = 0 NEWLINE i = 1 NEWLINE while i <= n : NEWLINE INDENTINDENT sum += curr NEWLINE curr += 2 NEWLINE i = i + 1 NEWLINE DEDENT return sum NEWLINE DEDENT n = 20 NEWLINE print ( \"sum of first \" , n , \"even number is: \" , evensum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2011_A_1145",
            "java_code": "import java . io . * ; class GFG { static void findSeries ( int num , int first , int sec ) { System . out . print ( first + \" \" + sec + \" \" ) ; int counter = 0 , sum ; while ( counter < num - 2 ) { sum = first + sec ; System . out . print ( sum + \" \" ) ; first = sec ; sec = sum ; counter ++ ; } } public static void main ( String [ ] args ) { int n = 5 , first = 2 , sec = 4 ; findSeries ( n , first , sec ) ; } }",
            "python_code": "def findSeries ( num , first , sec ) : NEWLINE INDENT print ( \"{} {} \" . format ( first , sec ) , end = \"\" ) NEWLINE counter = 0 NEWLINE while ( counter < num - 2 ) : NEWLINE INDENTINDENT sum = first + sec NEWLINE print ( \"{} \" . format ( sum ) , end = \"\" ) NEWLINE first = sec NEWLINE sec = sum NEWLINE counter = counter + 1 NEWLINE DEDENT DEDENT n = 5 NEWLINE first = 2 NEWLINE sec = 4 NEWLINE findSeries ( n , first , sec ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1350_A_1146",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "for t in range ( int ( input ( ) ) ) : n , k = map ( int , input ( ) . split ( ) ) if n % 2 == 0 : print ( n + k * 2 ) else : for i in range ( 2 , n + 1 ) : if n % i == 0 : print ( n + i + ( k - 1 ) * 2 ) ; break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_371_A_1147",
            "java_code": "import java . io . * ; import java . math . BigInteger ; import java . util . * ; public class Codeforces { public static void main ( String [ ] args ) throws UnsupportedEncodingException , IOException , Exception { StringBuilder out = new StringBuilder ( ) ; StringTokenizer tk ; Reader . init ( System . in ) ; Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) A = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 for i in range ( k ) : s1 , s2 = 0 , 0 for j in range ( i , n , k ) : if A [ j ] == 1 : s1 += 1 else : s2 += 1 ans = ans + min ( s1 , s2 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_257_B_1148",
            "java_code": "import java . util . * ; import java . math . * ; import java . lang . * ; import javafx . util . Pair ;  public class gfg { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int max = Math . max ( n , m ) ; int min = Math . min ( n , m ) ; System . out . println ( max - 1 + \" \" + min ) ; } }",
            "python_code": "red , blue = map ( int , input ( ) . split ( ) ) total_point = red + blue - 1 vasya = min ( red , blue ) petya = total_point - vasyaprint ( petya , vasya ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2623_A_1149",
            "java_code": "class GFG { static void findNthTerm ( int N ) { int ans ; if ( N % 2 == 0 ) { ans = ( N / 2 ) * 6 + ( N / 2 ) * 2 ; } else { ans = ( N / 2 + 1 ) * 6 + ( N / 2 ) * 2 ; } System . out . print ( ans + \"\\n\" ) ; } public static void main ( String [ ] args ) { int N = 3 ; findNthTerm ( N ) ; } }",
            "python_code": "def findNthTerm ( N ) : NEWLINE INDENT ans = 0 ; NEWLINE if ( N % 2 == 0 ) : NEWLINE INDENTINDENT ans = ( N // 2 ) * 6 + ( N // 2 ) * 2 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT ans = ( N // 2 + 1 ) * 6 + ( N // 2 ) * 2 ; NEWLINE DEDENT print ( ans ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 3 ; NEWLINE findNthTerm ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1373_A_1150",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { private static final int N = ( int ) 1e3 + 10 ; public static void main ( String [ ] args ) throws IOException { int t ;",
            "python_code": "import mathtry : t = int ( input ( ) ) for i in range ( t ) : a , b , c = map ( int , input ( ) . split ( ) ) if ( c / b ) > a : print ( 1 , - 1 ) elif ( c / b ) < a : if b * a > c : if a < c : print ( 1 , b ) else : print ( - 1 , b ) else : print ( - 1 , b ) else : if b * a > c : print ( 1 , b ) else : print ( 1 , - 1 ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1862_A_1151",
            "java_code": "import java . io . * ; class GFG { static int pairORSum ( int arr [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) ans += arr [ i ] | arr [ j ] ; return ans ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 3 , 4 } ; int n = arr . length ; System . out . println ( pairORSum ( arr , n ) ) ; } }",
            "python_code": "def pairORSum ( arr , n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT for j in range ( ( i + 1 ) , n ) : NEWLINE INDENTINDENTINDENT ans = ans + arr [ i ] | arr [ j ] NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 ] NEWLINE n = len ( arr ) NEWLINE print ( pairORSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3569_A_1152",
            "java_code": "class GFG { static int XorAscii ( String str , int len ) { int ans = ( str . charAt ( 0 ) ) ; for ( int i = 1 ; i < len ; i ++ ) { ans = ( ans ^ ( ( str . charAt ( i ) ) ) ) ; } return ans ; } public static void main ( String [ ] args ) { String str = \"geeksforgeeks\" ; int len = str . length ( ) ; System . out . print ( XorAscii ( str , len ) + \"\\n\" ) ; str = \"GfG\" ; len = str . length ( ) ; System . out . print ( XorAscii ( str , len ) ) ; } }",
            "python_code": "def XorAscii ( str1 , len1 ) : NEWLINE INDENT ans = ord ( str1 [ 0 ] ) NEWLINE for i in range ( 1 , len1 ) : NEWLINE INDENTINDENT ans = ( ans ^ ( ord ( str1 [ i ] ) ) ) NEWLINE DEDENT return ans NEWLINE DEDENT str1 = \"geeksforgeeks\" NEWLINE len1 = len ( str1 ) NEWLINE print ( XorAscii ( str1 , len1 ) ) NEWLINE str1 = \"GfG\" NEWLINE len1 = len ( str1 ) NEWLINE print ( XorAscii ( str1 , len1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1020_A_1153",
            "java_code": "import java . util . Collections ;    import java . util . * ; import java . lang . * ; import java . io . * ; import java . util . Arrays ;  public class CodeChef { public static void merge ( int arr [ ] , int l , int m , int r ) {",
            "python_code": "import functoolsimport timefrom collections import Counter  def timer ( func ) : @ functools . wraps ( func ) def wrapper ( * args , ** kwargs ) : stime = time . perf_counter ( ) res = func ( * args , ** kwargs ) elapsed = time . perf_counter ( ) - stime print ( f\"{func.__name__} in {elapsed:.4f} secs\" ) return res return wrapper  class solver : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3531_A_1154",
            "java_code": "class GFG { static float noOfYears ( int t1 , int n1 , int t2 ) { float years = ( ( t2 - 1 ) * n1 / ( float ) ( t1 - 1 ) ) ; return years ; } public static void main ( String [ ] args ) { int T1 = 3 , N1 = 5 , T2 = 6 ; System . out . println ( noOfYears ( T1 , N1 , T2 ) ) ; } }",
            "python_code": "def noOfYears ( t1 , n1 , t2 ) : NEWLINE INDENT years = ( t2 - 1 ) * n1 / ( t1 - 1 ) NEWLINE return years NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT T1 , N1 , T2 = 3 , 5 , 6 NEWLINE print ( noOfYears ( T1 , N1 , T2 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_585_B_1155",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ;",
            "python_code": "t = int ( input ( ) ) for test in range ( t ) : n , k = [ int ( i ) for i in input ( ) . split ( ) ] grid = [ [ True for i in range ( 3 ) ] for i in range ( n ) ] ok = [ [ False for i in range ( 3 ) ] for i in range ( n ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2436_A_1156",
            "java_code": "import java . io . * ; class GFG { static int totalSumDivisibleByNum ( int n , int number ) { int firstnum = ( int ) Math . pow ( 10 , n - 1 ) ; int lastnum = ( int ) Math . pow ( 10 , n ) ; int sum = 0 ; for ( int i = firstnum ; i < lastnum ; i ++ ) if ( i % number == 0 ) sum += i ; return sum ; } public static void main ( String [ ] args ) { int n = 3 , num = 7 ; System . out . println ( totalSumDivisibleByNum ( n , num ) ) ; } }",
            "python_code": "def totalSumDivisibleByNum ( n , number ) : NEWLINE INDENT firstnum = pow ( 10 , n - 1 ) NEWLINE lastnum = pow ( 10 , n ) NEWLINE sum = 0 NEWLINE for i in range ( firstnum , lastnum ) : NEWLINE INDENTINDENT if ( i % number == 0 ) : NEWLINE INDENTINDENTINDENT sum += i NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT n = 3 ; num = 7 NEWLINE print ( totalSumDivisibleByNum ( n , num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1430_A_1157",
            "java_code": "import java . io . * ; class GFG { static int sumOdd ( int n ) { int terms = ( n + 1 ) / 2 ; int sum = terms * terms ; return sum ; } static int suminRange ( int l , int r ) { return sumOdd ( r ) - sumOdd ( l - 1 ) ; } public static void main ( String [ ] args ) { int l = 2 , r = 5 ; System . out . print ( \"Sum of odd natural numbers from L to R is \" + suminRange ( l , r ) ) ; } }",
            "python_code": "def sumOdd ( n ) : NEWLINE INDENT terms = ( n + 1 ) // 2 NEWLINE sum1 = terms * terms NEWLINE return sum1 NEWLINE DEDENT def suminRange ( l , r ) : NEWLINE INDENT return sumOdd ( r ) - sumOdd ( l - 1 ) NEWLINE DEDENT l = 2 ; r = 5 NEWLINE print ( \"Sum of odd natural number\" , \"from L to R is\" , suminRange ( l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1059_A_1158",
            "java_code": "import java . io . BufferedReader ;  import java . io . IOException ; import java . io . InputStreamReader ; import java . math . BigInteger ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; import java . util . Scanner ;  public class test { ",
            "python_code": "n , L , a = map ( int , input ( ) . split ( ) ) prev , ans = 0 , 0 for _ in range ( n ) : t , l = map ( int , input ( ) . split ( ) ) ans += ( t - prev ) // a prev = t + lans += ( L - prev ) // aprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5017_A_1159",
            "java_code": "import java . io . * ; class GFG { static int nthTerm ( int n ) { return 3 * ( int ) Math . pow ( n , 2 ) + 2 * n - 5 ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 3 * pow ( n , 2 ) + 2 * n - 5 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_412_B_1160",
            "java_code": "import java . util . * ;  public class questionCF { public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ;  int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ;  int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; Arrays . sort ( a ) ; ; System . out . println ( a [ n - k ] ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l . sort ( ) print ( l [ ( - 1 ) * m ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_940_B_1161",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Zad940B {  public static void main ( String [ ] args ) {",
            "python_code": "import sysinput = sys . stdin . readlinen = int ( input ( ) ) k = int ( input ( ) ) a = int ( input ( ) ) b = int ( input ( ) ) ans = 0 if k == 1 : print ( ( n - 1 ) * a ) exit ( ) while n > 1 : if n < k : ans += ( n - 1 ) * a break if n % k != 0 : ans += ( n % k ) * a n -= ( n % k ) else : while n % k == 0 and n > 1 : temp = n // k if ( n - temp ) * a >= b : ans += b else : ans += ( ( n - temp ) * a ) n //= kprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p120_A_1162",
            "java_code": "public final class p120 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p120 ( ) . run ( ) ) ; } public String run ( ) { int sum = 0 ; for ( int a = 3 ; a <= 1000 ; a ++ ) sum += a * ( a - ( a % 2 == 0 ? 2 : 1 ) ) ; return Integer . toString ( sum ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT ans = sum ( i * ( i - ( 2 if i % 2 == 0 else 1 ) ) for i in range ( 3 , 1001 ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_628_B_1163",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "import sysimport os . pathif os . path . exists ( 'input.txt' ) : sys . stdin = open ( 'input.txt' , 'r' ) sys . stdout = open ( 'output.txt' , 'w' ) s = input ( ) n = len ( s ) ans = 0 for i in range ( n - 2 , - 1 , - 1 ) : if int ( s [ i ] + s [ i + 1 ] ) % 4 == 0 : ans += i + 1 for i in range ( n ) : if int ( s [ i ] ) % 4 == 0 : ans = ans + 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_965_A_1164",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import mathk , n , s , p = map ( int , input ( ) . split ( ) ) sheets = math . ceil ( n / s ) * kprint ( math . ceil ( sheets / p ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_405_A_1165",
            "java_code": "import com . sun . corba . se . spi . orbutil . fsm . Guard . Result ; class Solution { public String toHex ( int num ) { String hex_map = \"0123456789abcdef\" ; if ( num == 0 ) return \"0\" ; String res = \"\" ; while ( num != 0 && res . length ( ) < 8 ) { res = hex_map . charAt ( num & 15 ) + res ; num = num > > 4 ; } return res ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def toHex ( self , num ) : NEWLINE INDENTINDENT if num == 0 : NEWLINE INDENTINDENTINDENT return '0' NEWLINE DEDENT mp = '0123456789abcdef' NEWLINE ans = '' NEWLINE for _ in range ( 8 ) : NEWLINE INDENTINDENTINDENT n = num & 15 NEWLINE c = mp [ n ] NEWLINE ans = c + ans NEWLINE num = num >> 4 NEWLINE DEDENT return ans . lstrip ( '0' ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4177_A_1166",
            "java_code": "public class GFG { public static void SubString ( String str , int n ) { for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j <= n ; j ++ ) System . out . println ( str . substring ( i , j ) ) ; } public static void main ( String [ ] args ) { String str = \"abcd\" ; SubString ( str , str . length ( ) ) ; } }",
            "python_code": "def subString ( s , n ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT for len in range ( i + 1 , n + 1 ) : NEWLINE INDENTINDENTINDENT print ( s [ i : len ] ) ; NEWLINE DEDENT DEDENT DEDENT s = \"abcd\" ; NEWLINE subString ( s , len ( s ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_756_B_1167",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from bisect import bisect_rightfrom math import inf  n = int ( input ( ) ) dp = [ inf ] * ndp [ 0 ] = 20   a = [ int ( input ( ) ) ] for i in range ( n - 1 ) : a . append ( int ( input ( ) ) ) print ( dp [ 0 ] ) for i in range ( 1 , n ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1299_A_1168",
            "java_code": "class GFG { static void find_numbers ( int N ) { if ( N == 1 ) { System . out . print ( - 1 ) ; } else { System . out . print ( N + \" \" + ( N + 1 ) + \" \" + ( N * ( N + 1 ) ) ) ; } } public static void main ( String [ ] args ) { int N = 5 ; find_numbers ( N ) ; } }",
            "python_code": "def find_numbers ( N ) : NEWLINE INDENT if ( N == 1 ) : NEWLINE INDENTINDENT print ( - 1 , end = \"\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( N , N + 1 , N * ( N + 1 ) ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE find_numbers ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1371_B_1169",
            "java_code": "import java . math . * ; import java . util . * ; public class MagicalCalender { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int runs = sc . nextInt ( ) ; while ( runs -- > 0 ) { long n = sc . nextLong ( ) ; long r = sc . nextLong ( ) ; long out = 1 ; if ( r < n ) out = r * ( r + 1 ) / 2 ; else { out = n * ( n - 1 ) / 2 + 1 ; } System . out . println ( out ) ; } } }",
            "python_code": "import sys  def sum1toN ( n ) : if n % 2 == 0 : return ( n + 1 ) * ( n // 2 ) else : return ( n // 2 ) * ( n + 1 ) + ( n // 2 + 1 )   def answer ( n , r ) : if n == 1 : return 1 if r == 1 : return 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1389_A_1170",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNextInt ( ) ) { int n = sc . nextInt ( ) ; while ( n -- > 0 ) { int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; if ( 2 * l <= r ) { System . out . printf ( \"%d %d\\n\" , l , 2 * l ) ; } else { System . out . print ( \"-1 -1\\n\" ) ; } } } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : NEWLINE INDENT l , r = map ( int , input ( ) . split ( ) ) NEWLINE if 2 * l <= r : NEWLINE INDENTINDENT print ( l , 2 * l ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( - 1 , - 1 ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1989_A_1171",
            "java_code": "class GFG { static long getMinNum ( int N ) { int lcm = 1 ; for ( int i = 2 ; i <= N ; i ++ ) lcm = ( ( i * lcm ) / ( __gcd ( i , lcm ) ) ) ; return ( lcm + 1 ) ; } static int __gcd ( int a , int b ) { if ( b == 0 ) return a ; return __gcd ( b , a % b ) ; } public static void main ( String args [ ] ) { int N = 5 ; System . out . println ( getMinNum ( N ) ) ; } }",
            "python_code": "from math import gcd NEWLINE def getMinNum ( N ) : NEWLINE INDENT lcm = 1 ; NEWLINE for i in range ( 2 , N + 1 ) : NEWLINE INDENTINDENT lcm = ( ( i * lcm ) // ( gcd ( i , lcm ) ) ) ; NEWLINE DEDENT return ( lcm + 1 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE print ( getMinNum ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4594_A_1172",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } static void flip ( int a , int b ) { int lcm = ( a * b ) / gcd ( a , b ) ; a = lcm / a ; b = lcm / b ; System . out . print ( ( a - 1 ) + \" \" + ( b - 1 ) ) ; } public static void main ( String [ ] args ) { int a = 10 ; int b = 5 ; flip ( a , b ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( b == 0 ) : NEWLINE INDENTINDENT return a NEWLINE DEDENT return gcd ( b , a % b ) NEWLINE DEDENT def flip ( a , b ) : NEWLINE INDENT lcm = ( a * b ) // gcd ( a , b ) NEWLINE a = lcm // a NEWLINE b = lcm // b NEWLINE print ( a - 1 , b - 1 ) NEWLINE DEDENT a = 10 NEWLINE b = 5 NEWLINE flip ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_552_B_1173",
            "java_code": "import java . util . Scanner ;  public class DigitCounter { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  long n = scanner . nextLong ( ) ; long count = 0 ;  for ( int i = 1 ; i <= n ; i *= 10 ) { count += n - i + 1 ; }  System . out . println ( count ) ; } }",
            "python_code": "n = int ( input ( ) ) a = len ( str ( n ) ) b = 0 for i in range ( 1 , a ) : b += i * ( 10 ** i - 10 ** ( i - 1 ) ) b += a * ( n + 1 - 10 ** ( a - 1 ) ) print ( b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1222_A_1174",
            "java_code": "import java . util . * ; class solution { static float surfaceArea ( float a , float b , float h ) { return 5 * a * b + 5 * b * h ; } static float volume ( float b , float h ) { return ( 5 * b * h ) / 2 ; } public static void main ( String arr [ ] ) { float a = 5 ; float b = 3 ; float h = 7 ; System . out . println ( \"surface area= \" + surfaceArea ( a , b , h ) + \", \" ) ; System . out . println ( \"volume= \" + volume ( b , h ) ) ; } }",
            "python_code": "def surfaceArea ( a , b , h ) : NEWLINE INDENT return 5 * a * b + 5 * b * h NEWLINE DEDENT def volume ( b , h ) : NEWLINE INDENT return ( 5 * b * h ) / 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 5 NEWLINE b = 3 NEWLINE h = 7 NEWLINE print ( \"surface area =\" , surfaceArea ( a , b , h ) , \",\" , \"volume =\" , volume ( b , h ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_964_A_1175",
            "java_code": "import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int result = 2 + ( ( n / 2 ) - 1 ) ; System . out . println ( result ) ; } }",
            "python_code": "num = int ( input ( ) ) print ( ( num // 2 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1146_A_1176",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String str = s . next ( ) ; int n = str . length ( ) , ca = 0 , co = 0 ; char [ ] a = str . toCharArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == 'a' ) ca ++ ; else co ++ ; while ( co >= ca ) co -- ; System . out . println ( co + ca ) ; } }",
            "python_code": "s = input ( ) print ( min ( 2 * s . count ( 'a' ) - 1 , len ( s ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_842_A_1177",
            "java_code": "import java . io . * ; class GFG { static float Time ( float arr [ ] , int n , float Emptypipe ) { float fill = 0 ; for ( int i = 0 ; i < n ; i ++ ) fill += 1 / arr [ i ] ; fill = fill - ( 1 / ( float ) Emptypipe ) ; return 1 / fill ; } public static void main ( String [ ] args ) { float arr [ ] = { 12 , 14 } ; float Emptypipe = 30 ; int n = arr . length ; System . out . println ( ( int ) ( Time ( arr , n , Emptypipe ) ) + \" Hours\" ) ; } }",
            "python_code": "def Time ( arr , n , Emptypipe ) : NEWLINE INDENT fill = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT fill += ( 1 / arr [ i ] ) NEWLINE DEDENT fill = fill - ( 1 / float ( Emptypipe ) ) NEWLINE return int ( 1 / fill ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 12 , 14 ] NEWLINE Emptypipe = 30 NEWLINE n = len ( arr ) NEWLINE print ( ( Time ( arr , n , Emptypipe ) ) , \"Hours\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_743_B_1178",
            "java_code": "import java . util . * ;   public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long k = sc . nextLong ( ) ; long sz = 1 ;",
            "python_code": "import mathn , k = map ( int , input ( ) . split ( ) ) ans = 1 while ( k % 2 == 0 ) : k = k // 2 ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1238_A_1179",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { long x = s . nextLong ( ) ; long y = s . nextLong ( ) ; String ans = \"YES\" ; if ( x - y == 1 ) { ans = \"NO\" ; } System . out . println ( ans ) ; } } }",
            "python_code": "in_tests = int ( input ( ) )  for i in range ( in_tests ) : [ x , y ] = input ( ) . split ( ) if int ( x ) - int ( y ) == 1 : print ( 'NO' ) else : print ( 'YES' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2149_A_1180",
            "java_code": "import java . io . * ; class GFG { static String decToBin ( int n ) { if ( n == 0 ) return \"0\" ; String bin = \"\" ; while ( n > 0 ) { bin = ( ( n & 1 ) == 0 ? '0' : '1' ) + bin ; n >>= 1 ; } return bin ; } public static void main ( String [ ] args ) { int n = 38 ; System . out . println ( decToBin ( n ) ) ; } }",
            "python_code": "def decToBin ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return \"0\" ; NEWLINE DEDENT bin = \"\" ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT if ( n & 1 == 0 ) : NEWLINE INDENTINDENTINDENT bin = '0' + bin ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT bin = '1' + bin ; NEWLINE DEDENT n = n >> 1 ; NEWLINE DEDENT return bin ; NEWLINE DEDENT n = 38 ; NEWLINE print ( decToBin ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_940_B_1181",
            "java_code": " import java . io . * ; import java . util . * ; import java . util . ArrayList ;   public class CryOut {   public static void main ( String [ ] args ) { InputStream stream = System . in ; PrintWriter out = new PrintWriter ( System . out ) ; FastReader sc = new FastReader ( stream ) ;",
            "python_code": "n , k , a , b , s = int ( input ( ) ) , int ( input ( ) ) , int ( input ( ) ) , int ( input ( ) ) , 0 if ( k > 1 ) : while ( ( ( n // k ) * ( k - 1 ) * a ) > b ) : s += ( n % k ) * a + b n //= kprint ( int ( s + ( n - 1 ) * a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1183_A_1182",
            "java_code": "import java . util . Scanner ;  public class NearestInterestingNumber {  public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; for ( int i = n ; i <= 10000 ; i ++ ) { String s = String . valueOf ( i ) ; int sum = 0 ; for ( int j = 0 ; j < s . length ( ) ; j ++ ) { sum += s . charAt ( j ) - '0' ; } if ( sum % 4 == 0 ) { System . out . println ( i ) ; break ; } } }  }",
            "python_code": "n = int ( input ( ) ) s = str ( n ) sum = 1 while ( sum % 4 != 0 ) : s = str ( n ) sum = 0 for i in s : sum += int ( i ) n += 1 print ( n - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_A_1183",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . awt . Point ; public class Main { static final long MOD = 1000000007L ;",
            "python_code": "t = input ( ) NEWLINE t = int ( t ) NEWLINE while t > 0 : n = input ( ) NEWLINE n = int ( n ) NEWLINE if ( n & ( n - 1 ) == 0 ) : NEWLINE INDENT print ( \"NO\" ) else : NEWLINE print ( \"YES\" ) NEWLINE DEDENT t -= 1  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4617_A_1184",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } static void FindRatio ( int a , int b , int c ) { int up = Math . abs ( b - c ) ; int down = Math . abs ( c - a ) ; int g = gcd ( up , down ) ; up /= g ; down /= g ; System . out . println ( up + \":\" + down ) ; } public static void main ( String [ ] args ) { int a = 4 , b = 10 , c = 6 ; FindRatio ( a , b , c ) ; } }",
            "python_code": "from math import gcd NEWLINE def FindRatio ( a , b , c ) : NEWLINE INDENT up = abs ( b - c ) NEWLINE down = abs ( c - a ) NEWLINE g = gcd ( up , down ) NEWLINE up //= g NEWLINE down //= g NEWLINE print ( up , \":\" , down ) NEWLINE DEDENT a = 4 NEWLINE b = 10 NEWLINE c = 6 NEWLINE FindRatio ( a , b , c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3527_A_1185",
            "java_code": "import java . lang . Math ; class GFG { static float Area ( float r ) { if ( r < 0 ) return - 1 ; float x = ( 2 * r ) / ( float ) ( Math . sqrt ( 5 ) ) ; float A = 0.70477f * ( float ) ( Math . pow ( x , 2 ) ) ; return A ; } public static void main ( String [ ] args ) { float r = 5 ; System . out . println ( Area ( r ) ) ; } }",
            "python_code": "import math as mt NEWLINE def Area ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = ( 2 * r ) / mt . sqrt ( 5 ) NEWLINE A = 0.70477 * pow ( x , 2 ) NEWLINE return A NEWLINE DEDENT r = 5 NEWLINE print ( Area ( r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1031_A_1186",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001031A { static public void main ( final String [ ] args ) throws IOException { p001031A . _main ( args ) ; }",
            "python_code": "w , h , k = map ( int , input ( ) . split ( ) ) print ( 2 * ( w + h ) * k - 8 * k * k + 4 * k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_770_A_1187",
            "java_code": "import java . util . Scanner ; public class sol { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; String letters = \"abcdefghijklmnopqrstuvwxyz\" ; String password = \"\" ; int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { password += letters . charAt ( t ) ; t ++ ; if ( t >= k ) { t = 0 ; } } System . out . println ( password ) ; } }",
            "python_code": "import sysfrom string import ascii_lowercase as az  def main ( ) : n , k = map ( int , sys . stdin . read ( ) . strip ( ) . split ( ) ) return n // k * az [ : k ] + az [ : n % k ]  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3644_A_1188",
            "java_code": "import java . lang . Math ; import java . io . * ; class GFG { static double calculateSide ( double n , double r ) { double theta , theta_in_radians ; theta = 360 / n ; theta_in_radians = theta * 3.14 / 180 ; return 2 * r * Math . sin ( theta_in_radians / 2 ) ; } public static void main ( String [ ] args ) { double n = 3 ; double r = 5 ; System . out . println ( calculateSide ( n , r ) ) ; } }",
            "python_code": "from math import sin NEWLINE def calculateSide ( n , r ) : NEWLINE INDENT theta = 360 / n NEWLINE theta_in_radians = theta * 3.14 / 180 NEWLINE return 2 * r * sin ( theta_in_radians / 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE r = 5 NEWLINE print ( '{0:.5}' . format ( calculateSide ( n , r ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2371_A_1189",
            "java_code": "import java . io . * ; class GFG { static void newvol ( double x ) { System . out . print ( \"percentage increase \" + \"in the volume of the cube is \" + ( Math . pow ( x , 3 ) / 10000 + 3 * x + ( 3 * Math . pow ( x , 2 ) ) / 100 ) ) ; System . out . print ( \"%\" ) ; } public static void main ( String [ ] args ) { double x = 10 ; newvol ( x ) ; } }",
            "python_code": "def newvol ( x ) : NEWLINE INDENT print ( \"percentage increase\" \"in the volume of the cube is \" , ( ( x ** ( 3 ) ) / 10000 + 3 * x + ( 3 * ( x ** ( 2 ) ) ) / 100 ) , \"%\" ) ; NEWLINE DEDENT x = 10 ; NEWLINE newvol ( x ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1157_A_1190",
            "java_code": "import java . util . LinkedHashSet ; import java . util . Scanner ; public class A { public static int sol ( int x ) { x += 1 ; while ( x % 10 == 0 ) { x /= 10 ; } return x ; } public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; LinkedHashSet < Integer > h = new LinkedHashSet < > ( ) ; while ( ! h . contains ( n ) ) { h . add ( n ) ; n = sol ( n ) ; }",
            "python_code": "a = input ( ) ; b = len ( a ) ; print ( 9 * b - sum ( map ( int , a [ 1 : ] ) ) + ( b > 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_869_B_1191",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long a = s . nextLong ( ) ; long b = s . nextLong ( ) ; long ans = 1L ; if ( b - a >= 10 ) { System . out . println ( \"0\" ) ; } else { for ( long i = a + 1 ; i <= b ; i ++ ) { ans = ans * ( i % 10 ) ; } ans = ans % 10 ; System . out . println ( ans ) ; } } }",
            "python_code": "'''http://codeforces.com/contest/869/problem/B''' a , b = map ( int , input ( ) . split ( ) )  if a > b or b - a > 10 : print ( 0 ) elif a == b : print ( 1 ) else : fact = 1 for i in range ( a + 1 , b + 1 ) : fact = ( fact * ( i % 10 ) ) % 10 print ( fact )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_740_B_1192",
            "java_code": "import java . util . * ; import java . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; int m = sc . nextInt ( ) ;",
            "python_code": "n , q = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = [ a [ 0 ] ] for i in range ( 1 , n ) : b . append ( b [ i - 1 ] + a [ i ] )  ans = 0 for i in range ( q ) : x , y = map ( int , input ( ) . split ( ) ) temp = b [ y - 1 ] if x != 1 : temp -= b [ x - 2 ] ans = max ( ans , ans + temp ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1217_A_1193",
            "java_code": "import java . io . * ; class GFG { static double PI = 3.14 ; static double areaOfInscribedCircle ( float a ) { return ( PI / 4 ) * a * a ; } public static void main ( String [ ] args ) { float a = 8 ; System . out . println ( \"Area of an inscribed\" + \" circle: \" + areaOfInscribedCircle ( a ) ) ; } }",
            "python_code": "PI = 3.14 NEWLINE def areaOfInscribedCircle ( a ) : NEWLINE INDENT return ( PI / 4 ) * a * a NEWLINE DEDENT a = 8 NEWLINE print ( \"Area of an inscribed circle:\" , round ( areaOfInscribedCircle ( a ) , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1068_A_1194",
            "java_code": "import java . io . * ; import java . lang . * ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . BufferedReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . io . IOException ; import java . util . Arrays ; import java . util . Random ; import java . util . StringTokenizer ; import java . math . BigInteger ;  public class Birthday {",
            "python_code": "n , m , k , l = map ( int , input ( ) . split ( ) ) x = 0 x = ( l + k + m - 1 ) // mif x * m > n : print ( - 1 ) else : print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_914_B_1195",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) f = [ 0 ] * ( max ( a ) + 1 ) for i in a : f [ i ] += 1 c = 0 for i in f : if ( i % 2 != 0 ) : c = 1 breakif ( c == 0 ) : print ( 'Agasa' ) else : print ( 'Conan' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1068_B_1196",
            "java_code": "import java . util . * ; public class contest14 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "b = int ( input ( ) ) c = int ( b ** .5 ) print ( 2 * sum ( b % i == 0 for i in range ( 1 , c + 1 ) ) - ( c * c == b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1041_B_1197",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long x = sc . nextLong ( ) ; long y = sc . nextLong ( ) ; long c = 0 ; long gcd = gcd ( x , y ) ; x = x / gcd ; y = y / gcd ; long a1 = a / x ; long a2 = b / y ; System . out . println ( Math . min ( a1 , a2 ) ) ;",
            "python_code": "max_width , max_height , x , y = map ( int , input ( ) . split ( ) )   def hcf ( num1 , num2 ) : if ( num2 == 0 ) : return num1 return hcf ( num2 , num1 % num2 )  ratio = 0 ratio = hcf ( x , y ) if ( ratio != 0 ) : x = x // ratio y = y // ratio posible_width = max_width // x possible_height = max_height // y      print ( min ( possible_height , posible_width ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2971_A_1198",
            "java_code": "import java . util . * ; class GFG { public static int findMinRec ( int A [ ] , int n ) { if ( n == 1 ) return A [ 0 ] ; return Math . min ( A [ n - 1 ] , findMinRec ( A , n - 1 ) ) ; } public static void main ( String args [ ] ) { int A [ ] = { 1 , 4 , 45 , 6 , - 50 , 10 , 2 } ; int n = A . length ; System . out . println ( findMinRec ( A , n ) ) ; } }",
            "python_code": "def findMinRec ( A , n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return A [ 0 ] NEWLINE DEDENT return min ( A [ n - 1 ] , findMinRec ( A , n - 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT A = [ 1 , 4 , 45 , 6 , - 50 , 10 , 2 ] NEWLINE n = len ( A ) NEWLINE print ( findMinRec ( A , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_7_A_1199",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "count = 0 columns = [ \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" , \"\" ] for _ in range ( 8 ) : line = input ( ) if \"W\" not in line : count += 1 for index , character in enumerate ( line ) : columns [ index ] += characterfor column in columns : if \"W\" not in column : count += 1 print ( 8 if count == 16 else count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1190_B_1200",
            "java_code": "import java . util . * ; import java . io . * ;  public class TokitsukazeCSLandStoneGame {",
            "python_code": "n = int ( input ( ) ) a = [ - 1 ] + list ( map ( int , input ( ) . split ( ) ) ) s = set ( ) s . add ( - 1 ) a . sort ( ) count , add = 0 , 0 flag = 0 for i in range ( 1 , n + 1 ) : if a [ i ] in s and a [ i ] - 1 in s : flag = 1 break if a [ i ] in s : add += 1 if ( add == 2 ) : flag = 1 break s . add ( a [ i ] ) count += a [ i ] - ( i - 1 ) if ( flag == 0 and count % 2 == 1 ) : print ( \"sjfnb\" ) else : print ( \"cslnb\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4779_A_1201",
            "java_code": "class GFG { static int swapNibbles ( int x ) { return ( ( x & 0x0F ) << 4 | ( x & 0xF0 ) > > 4 ) ; } public static void main ( String arg [ ] ) { int x = 100 ; System . out . print ( swapNibbles ( x ) ) ; } }",
            "python_code": "def swapNibbles ( x ) : NEWLINE INDENT return ( ( x & 0x0F ) << 4 | ( x & 0xF0 ) >> 4 ) NEWLINE DEDENT x = 100 NEWLINE print ( swapNibbles ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_803_B_1202",
            "java_code": "import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . util . * ;   public class CodeForce { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringBuilder sb = new StringBuilder ( ) ;",
            "python_code": "import math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1916_A_1203",
            "java_code": "import java . io . * ; class GFG { static void decToBinary ( int n ) { int [ ] binaryNum = new int [ 32 ] ; int i = 0 ; while ( n > 0 ) { binaryNum [ i ] = n % 2 ; n = n / 2 ; i ++ ; } for ( int j = i - 1 ; j >= 0 ; j -- ) System . out . print ( binaryNum [ j ] ) ; } public static void main ( String [ ] args ) { int n = 17 ; decToBinary ( n ) ; } }",
            "python_code": "def decToBinary ( n ) : NEWLINE INDENT binaryNum = [ 0 ] * n ; NEWLINE i = 0 ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT binaryNum [ i ] = n % 2 ; NEWLINE n = int ( n / 2 ) ; NEWLINE i += 1 ; NEWLINE DEDENT for j in range ( i - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT print ( binaryNum [ j ] , end = \"\" ) ; NEWLINE DEDENT DEDENT n = 17 ; NEWLINE decToBinary ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_103_A_1204",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ; public class A { public static void main ( String [ ] agrs ) { FastScanner sc = new FastScanner ( ) ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) s = 0 for i in range ( 1 , n + 1 ) : s += ( a [ i - 1 ] - 1 ) * i + 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5127_A_1205",
            "java_code": "import java . util . * ; class GFG { static void triangular_series ( int n ) { int i , j = 1 , k = 1 ; for ( i = 1 ; i <= n ; i ++ ) { System . out . printf ( \"%d \" , k ) ; j = j + 1 ; k = k + j ; } } public static void main ( String [ ] args ) { int n = 5 ; triangular_series ( n ) ; } }",
            "python_code": "def triangular_series ( n ) : NEWLINE INDENT j = 1 NEWLINE k = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( k , end = ' ' ) NEWLINE j = j + 1 NEWLINE k = k + j NEWLINE DEDENT DEDENT n = 5 NEWLINE triangular_series ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_500_A_1206",
            "java_code": "import java . util . * ;  public class Solve {  static Scanner scan = new Scanner ( System . in ) ;   public static void solve ( int n , int t , int [ ] a ) {   int i = 1 ;  while ( i < t ) { i += a [ i ] ;",
            "python_code": "n , k = [ int ( i ) for i in input ( ) . split ( ) ] a = [ int ( i ) for i in input ( ) . split ( ) ] i = 0 while i < n : if i == k - 1 : print ( \"YES\" ) break else : if i == n - 1 : i = i + 1 else : i = i + a [ i ] else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1139_A_1207",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String str = sc . next ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( Integer . parseInt ( \"\" + str . charAt ( i ) ) % 2 == 0 ) sum += ( i + 1 ) ; } System . out . println ( sum ) ; } } ",
            "python_code": "n = int ( input ( ) ) s = str ( input ( ) ) ans = 0 for i in range ( n ) : if int ( s [ i ] ) % 2 == 0 : ans += ( i + 1 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2901_A_1208",
            "java_code": "import java . io . * ; class GFG { static void find_set ( int n ) { if ( n <= 2 ) { System . out . println ( \"-1\" ) ; return ; } int sum1 = ( n * ( n - 1 ) ) / 2 ; int sum2 = n ; System . out . println ( sum1 + \" \" + sum2 ) ; } public static void main ( String [ ] args ) { int n = 8 ; find_set ( n ) ; } }",
            "python_code": "def find_set ( n ) : NEWLINE INDENT if ( n <= 2 ) : NEWLINE INDENTINDENT print ( \"-1\" ) ; NEWLINE return ; NEWLINE DEDENT sum1 = ( n * ( n - 1 ) ) / 2 ; NEWLINE sum2 = n ; NEWLINE print ( sum1 , \" \" , sum2 ) ; NEWLINE DEDENT n = 8 ; NEWLINE find_set ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_884_A_1209",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int t = sc . nextInt ( ) , rem = 0 , res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int num = sc . nextInt ( ) ; rem += ( 86400 - num ) ; if ( rem >= t && res == 0 ) res = i ; } System . out . println ( res ) ; sc . close ( ) ; } }",
            "python_code": "n , t = map ( int , input ( ) . split ( ) ) A = list ( map ( int , input ( ) . split ( ) ) ) D = 86400 for i in range ( n ) : if D - A [ i ] >= t : print ( i + 1 ) break else : t -= ( D - A [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3775_A_1210",
            "java_code": "import java . util . * ; class GFG { public static void removeDuplicates ( int [ ] arr ) { LinkedHashSet < Integer > set = new LinkedHashSet < Integer > ( ) ; for ( int i = 0 ; i < arr . length ; i ++ ) set . add ( arr [ i ] ) ; System . out . print ( set ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 5 , 1 , 7 , 2 , 4 , 2 } ; removeDuplicates ( arr ) ; } }",
            "python_code": "def removeDulipcates ( arr ) : NEWLINE INDENT s = dict ( ) NEWLINE d = [ ] NEWLINE for i in arr : NEWLINE INDENTINDENT if i not in s . keys ( ) : NEWLINE INDENTINDENTINDENT d . append ( i ) NEWLINE s [ i ] = 1 NEWLINE DEDENT DEDENT print ( d ) NEWLINE DEDENT arr = [ 1 , 2 , 5 , 1 , 7 , 2 , 4 , 2 ] NEWLINE removeDulipcates ( arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_581_A_1211",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; if ( n > m ) { System . out . print ( m + \" \" + ( n - m ) / 2 ) ; } else { System . out . print ( n + \" \" + ( m - n ) / 2 ) ; }  } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) if a < b : c = b - a print ( a , end = \" \" ) else : c = a - b print ( b , end = \" \" ) if c == 1 : print ( 0 ) else : print ( c // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_21_A_1212",
            "java_code": "import java . io . * ; class GFG { static int leonardo ( int n ) { if ( n == 0 || n == 1 ) return 1 ; return ( leonardo ( n - 1 ) + leonardo ( n - 2 ) + 1 ) ; } public static void main ( String args [ ] ) { System . out . println ( leonardo ( 3 ) ) ; } }",
            "python_code": "def leonardo ( n ) : NEWLINE INDENT if ( n == 0 or n == 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return ( leonardo ( n - 1 ) + leonardo ( n - 2 ) + 1 ) ; NEWLINE DEDENT print ( leonardo ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_443_A_1213",
            "java_code": "import java . util . Scanner ; public class Problem443A {  public static void main ( String [ ] args ) {",
            "python_code": "a = set ( list ( input ( ) [ 1 : - 1 ] . split ( ', ' ) ) ) if '' not in a : print ( len ( a ) ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_7_A_1214",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "a = [ '' ] * 8 for i in range ( 8 ) : a [ i ] = input ( ) a = list ( map ( lambda a : a . count ( 'B' ) , a ) ) b = set ( a ) c = 0 for i in b : if i == 8 : c += a . count ( 8 ) else : c += iprint ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_810_A_1215",
            "java_code": "import java . util . * ;  public class Absolutezero {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int sum = 0 ; List < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int n1 = sc . nextInt ( ) ; list . add ( n1 ) ; sum += n1 ; } int u1 = ( int ) Math . round ( ( double ) sum / n ) ;",
            "python_code": "n , k = list ( map ( int , input ( ) . split ( ) ) ) a = list ( map ( int , input ( ) . split ( ) ) ) temp = max ( a ) ans = 0 while sum ( a ) / len ( a ) < ( k - 0.5 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_122_B_1216",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "s = input ( )  if '4' not in s and '7' not in s : print ( - 1 ) else : if s . count ( '4' ) >= s . count ( '7' ) : print ( 4 ) else : print ( 7 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_772_B_1217",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { static InputReader in = new InputReader ( System . in ) ; static PrintWriter out = new PrintWriter ( System . out ) ; static int oo = ( int ) 1e9 ;",
            "python_code": "from math import * n = int ( input ( ) ) r = [ list ( map ( int , input ( ) . split ( ) ) ) for _ in range ( n ) ] ans = 10 ** 20 for i in range ( n ) : x0 , y0 = r [ ( i + n - 1 ) % n ] x1 , y1 = r [ ( i + 1 ) % n ] x , y = r [ i ] ans = min ( ans , abs ( ( y1 - y0 ) * x - ( x1 - x0 ) * y - ( x0 * y1 - x1 * y0 ) ) / sqrt ( ( x1 - x0 ) ** 2 + ( y1 - y0 ) ** 2 ) ) print ( ans / 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_903_A_1218",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( \"\" ) ) A = [ ] for i in range ( n ) : x = int ( input ( \"\" ) ) A . append ( x ) for i in A : if ( i % 3 == 0 or i % 7 == 0 or i % 10 == 0 ) : print ( 'YES' ) else : if ( i > 12 ) : print ( 'YES' ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_914_A_1219",
            "java_code": "import java . util . * ;   public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "import mathdef check ( x ) : y = int ( math . sqrt ( x ) ) if ( x == y * y ) : return False return Truen = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) for i in range ( n - 1 , - 1 , - 1 ) : if ( a [ i ] < 0 or check ( a [ i ] ) ) : print ( a [ i ] ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4621_A_1220",
            "java_code": "import java . io . * ; class GFG { static void fib ( int n ) { int a = 0 , b = 1 , c ; if ( n >= 0 ) System . out . print ( a + \" \" ) ; if ( n >= 1 ) System . out . print ( b + \" \" ) ; for ( int i = 2 ; i <= n ; i ++ ) { c = a + b ; System . out . print ( c + \" \" ) ; a = b ; b = c ; } } public static void main ( String [ ] args ) { fib ( 9 ) ; } }",
            "python_code": "def fib ( n ) : NEWLINE INDENT a = 0 NEWLINE b = 1 NEWLINE if ( n >= 0 ) : NEWLINE INDENTINDENT print ( a , end = ' ' ) NEWLINE DEDENT if ( n >= 1 ) : NEWLINE INDENTINDENT print ( b , end = ' ' ) NEWLINE DEDENT for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT c = a + b NEWLINE print ( c , end = ' ' ) NEWLINE a = b NEWLINE b = c NEWLINE DEDENT DEDENT fib ( 9 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_467_B_1221",
            "java_code": "import java . io . * ; import java . util . * ;     public class B {",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) army = [ ] for i in range ( m ) : x = int ( input ( ) ) army . append ( x ) m = int ( input ( ) ) ans = 0   for i in army : uniq = bin ( m ^ i ) count = 0 for j in uniq : if j == '1' : count += 1 if count <= k : continue else : count = k + 1 break if count <= k : ans += 1 print ( ans )        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_168_A_1222",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long x = sc . nextLong ( ) ; long y = sc . nextLong ( ) ; long p = ( long ) Math . ceil ( ( double ) n * ( double ) ( y ) / ( double ) 100 ) ; if ( p - x <= 0 ) System . out . print ( 0 ) ; else System . out . print ( p - x ) ; } }",
            "python_code": "import mathn , x , y = map ( int , input ( ) . split ( ) ) a = ( n * y - x * 100 ) / 100 print ( max ( 0 , math . ceil ( a ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1081_A_1223",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "T_ON = 0 DEBUG_ON = 1 MOD = 998244353   def solve ( ) : n = read_int ( ) if n <= 2 : print ( n ) else : print ( 1 )   def main ( ) : T = read_int ( ) if T_ON else 1 for i in range ( T ) : solve ( )   def debug ( * xargs ) : if DEBUG_ON : print ( * xargs )   from collections import * import math   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4208_A_1224",
            "java_code": "class GFG { static int findCountOfPairs ( int a , int b , int n ) { int ans = 0 ; for ( int i = 1 ; i <= a ; i ++ ) { ans += b / n ; ans += ( i % n + b % n ) >= n ? 1 : 0 ; } return ans ; } public static void main ( String [ ] args ) { int a = 5 , b = 13 , n = 3 ; System . out . println ( findCountOfPairs ( a , b , n ) ) ; } }",
            "python_code": "def findCountOfPairs ( a , b , n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 1 , a + 1 ) : NEWLINE INDENTINDENT ans += b // n NEWLINE ans += 1 if ( i % n + b % n ) >= n else 0 NEWLINE DEDENT return ans NEWLINE DEDENT a = 5 ; b = 13 ; n = 3 NEWLINE print ( findCountOfPairs ( a , b , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2628_A_1225",
            "java_code": "import java . io . * ; class GFG { static int sumOfSeries ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) ans += i * i * i * i ; return ans ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT ans = ans + i * i * i * i NEWLINE DEDENT return ans NEWLINE DEDENT n = 4 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1482_A_1226",
            "java_code": "class GFG { static void findAndPrintOriginalArray ( int arr [ ] , int n ) { int arr_sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) arr_sum += arr [ i ] ; arr_sum = arr_sum / ( n - 1 ) ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( arr_sum - arr [ i ] + \" \" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 10 , 14 , 12 , 13 , 11 } ; int n = arr . length ; findAndPrintOriginalArray ( arr , n ) ; } }",
            "python_code": "def findAndPrintOriginalArray ( arr , n ) : NEWLINE INDENT arr_sum = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT arr_sum += arr [ i ] NEWLINE DEDENT arr_sum = int ( arr_sum / ( n - 1 ) ) NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT print ( ( arr_sum - arr [ i ] ) , end = \" \" ) NEWLINE DEDENT DEDENT arr = [ 10 , 14 , 12 , 13 , 11 ] NEWLINE n = len ( arr ) NEWLINE findAndPrintOriginalArray ( arr , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1765_A_1227",
            "java_code": "class GfG { public static void main ( String [ ] args ) { int a = 10 , b = 5 ; if ( b > 0 ) { while ( b > 0 ) { a ++ ; b -- ; } } if ( b < 0 ) { while ( b < 0 ) { a -- ; b ++ ; } } System . out . println ( \"Sum is: \" + a ) ; } }",
            "python_code": "if __name__ == '__main__' : NEWLINE INDENT a = 10 NEWLINE b = 5 NEWLINE if b > 0 : NEWLINE INDENTINDENT while b > 0 : NEWLINE INDENTINDENTINDENT a = a + 1 NEWLINE b = b - 1 NEWLINE DEDENT DEDENT if b < 0 : NEWLINE INDENTINDENT while b < 0 : NEWLINE INDENTINDENTINDENT a = a - 1 NEWLINE b = b + 1 NEWLINE DEDENT DEDENT print ( \"Sum is: \" , a ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_B_1228",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class er103b {",
            "python_code": "n = int ( input ( ) )  def triangle_check ( a , b , c ) : return ( c < a + b )  count = 0 for a in range ( 1 , n + 1 ) : for b in range ( a + 1 , ( n + 1 ) ) : c = a ^ b if ( c <= n and c > b ) : if ( triangle_check ( a , b , c ) ) : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1426_B_1229",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int t = scn . nextInt ( ) ; for ( int c = 1 ; c <= t ; c ++ ) { int n = scn . nextInt ( ) ;",
            "python_code": "import sysfrom NEWLINE os NEWLINE import pathif NEWLINE ( path . exists ( 'input.txt' ) and path . exists ( 'output.txt' ) ) : sys . stdout = open ( 'output.txt' , 'w' ) NEWLINE sys . stdin = open ( 'input.txt' , 'r' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_259_A_1230",
            "java_code": " import java . io . DataInputStream ; import java . io . FileInputStream ; import java . io . IOException ;  import static java . lang . System . in ;  public class Chess { private static final int MOD = ( int ) ( 1E9 + 7 ) ; static FastReader scanner = new FastReader ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "x = [ ] for i in range ( 8 ) : s = str ( input ( ) ) x . append ( s ) d = Falsefor i in range ( 8 ) : s = x [ i ] if ( s == \"BWBWBWBW\" or s == \"WBWBWBWB\" ) : continue else : d = True print ( \"NO\" ) breakif ( d == False ) : print ( \"YES\" )              NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_909_B_1231",
            "java_code": "import java . math . BigInteger ; import java . util . * ;  public class Main {  static Scanner input = new Scanner ( System . in ) ;  public static void main ( String [ ] args ) { int n = input . nextInt ( ) ; System . out . println ( ( int ) Math . pow ( n + 1 , 2 ) / 4 ) ; } }",
            "python_code": "print ( sum ( i for i in range ( int ( input ( ) ) , - 1 , - 2 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_548_A_1232",
            "java_code": "public class GEE { static void printPFsInPairs ( int n ) { for ( int i = 1 ; i * i <= n ; i ++ ) if ( n % i == 0 ) System . out . println ( i + \"*\" + n / i ) ; } public static void main ( String [ ] args ) { int n = 24 ; printPFsInPairs ( n ) ; } }",
            "python_code": "def printPFsInPairs ( n ) : NEWLINE INDENT for i in range ( 1 , int ( pow ( n , 1 / 2 ) ) + 1 ) : NEWLINE INDENTINDENT if n % i == 0 : NEWLINE INDENTINDENTINDENT print ( str ( i ) + \"*\" + str ( int ( n / i ) ) ) NEWLINE DEDENT DEDENT DEDENT n = 24 NEWLINE printPFsInPairs ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_612_B_1233",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class B612 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "n = int ( input ( ) ) L = [ int ( x ) for x in input ( ) . split ( ) ] pos = [ 0 ] * nfor i in range ( n ) : pos [ L [ i ] - 1 ] = ians = 0 for i in range ( n - 1 ) : ans += abs ( pos [ i ] - pos [ i + 1 ] ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4006_A_1234",
            "java_code": "import java . * ; public class GFG { public static void main ( String a [ ] ) { int x = 10 ; int y = 5 ; x = x ^ y ; y = x ^ y ; x = x ^ y ; System . out . println ( \"After swap: x = \" + x + \", y = \" + y ) ; } }",
            "python_code": "x = 10 NEWLINE y = 5 NEWLINE x = x ^ y ; NEWLINE y = x ^ y ; NEWLINE x = x ^ y ; NEWLINE print ( \"After Swapping: x = \" , x , \" y =\" , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_59_A_1235",
            "java_code": "import java . util . Scanner ;",
            "python_code": "word = input ( '' ) NEWLINE upper = 0 l NEWLINE ower = 0 NEWLINE for x in word : if NEWLINE x >= \"A\" and x <= \"Z\" : upper += 1 elif x >= \"a\" and x <= \"z\" : lower += 1 NEWLINE if lower >= upper : NEWLINE INDENT print ( word . lower ( ) ) else : NEWLINE print ( word . upper ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5021_A_1236",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return ( int ) Math . pow ( n , 2 ) - 2 * n + 2 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "from math import * NEWLINE def nthTerm ( n ) : NEWLINE INDENT return pow ( n , 2 ) - 2 * n + 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2278_A_1237",
            "java_code": "import java . util . * ; class GFG { static int findK ( int n , int k ) { ArrayList < Integer > a = new ArrayList < Integer > ( n ) ; for ( int i = 1 ; i < n ; i ++ ) if ( i % 2 == 1 ) a . add ( i ) ; for ( int i = 1 ; i < n ; i ++ ) if ( i % 2 == 0 ) a . add ( i ) ; return ( a . get ( k - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 10 , k = 3 ; System . out . println ( findK ( n , k ) ) ; } }",
            "python_code": "def findK ( n , k ) : NEWLINE INDENT a = list ( ) NEWLINE i = 1 NEWLINE while i < n : NEWLINE INDENTINDENT a . append ( i ) NEWLINE i = i + 2 NEWLINE DEDENT i = 2 NEWLINE while i < n : NEWLINE INDENTINDENT a . append ( i ) NEWLINE i = i + 2 NEWLINE DEDENT return ( a [ k - 1 ] ) NEWLINE DEDENT n = 10 NEWLINE k = 3 NEWLINE print ( findK ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_A_1238",
            "java_code": "import java . util . Scanner ;  public class cForces546A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int k = scan . nextInt ( ) ; int n = scan . nextInt ( ) ; int w = scan . nextInt ( ) ; int total = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { total += i * k ; } if ( ( total - n ) < 0 ) { System . out . println ( 0 ) ; } else System . out . println ( total - n ) ; } }",
            "python_code": "k , n , w = map ( int , input ( ) . split ( ) ) print ( max ( 0 , w * ( w + 1 ) * k // 2 - n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2282_A_1239",
            "java_code": "import java . util . * ; class GFG { static int Alcuin ( int n ) { double _n = n , ans ; ans = Math . round ( ( _n * _n ) / 12 ) - Math . floor ( _n / 4 ) * Math . floor ( ( _n + 2 ) / 4 ) ; return ( int ) ans ; } static void solve ( int n ) { int i = 0 ; for ( i = 1 ; i <= n ; i ++ ) { System . out . print ( Alcuin ( i ) + \", \" ) ; } } public static void main ( String [ ] args ) { int n = 15 ; solve ( n ) ; } }",
            "python_code": "from math import ceil , floor NEWLINE def Alcuin ( n ) : NEWLINE INDENT _n = n NEWLINE ans = 0 NEWLINE ans = ( round ( ( _n * _n ) / 12 ) - floor ( _n / 4 ) * floor ( ( _n + 2 ) / 4 ) ) NEWLINE return ans NEWLINE DEDENT def solve ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( Alcuin ( i ) , end = \", \" ) NEWLINE DEDENT DEDENT n = 15 NEWLINE solve ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_704_A_1240",
            "java_code": "import java . io . * ; class GFG { static boolean Move ( int a , int x , int b ) { if ( ( ( ( b - a ) % x == 0 ) || ( ( b - a - 1 ) % x == 0 ) && a + 1 != b ) && b >= a ) return true ; return false ; } public static void main ( String [ ] args ) { int a = 3 , x = 2 , b = 7 ; if ( Move ( a , x , b ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def Move ( a , x , b ) : NEWLINE INDENT if ( ( ( ( b - a ) % x == 0 ) or ( ( b - a - 1 ) % x == 0 ) and a + 1 != b ) and b >= a ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 3 NEWLINE x = 2 NEWLINE b = 7 NEWLINE if ( Move ( a , x , b ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1173_B_1241",
            "java_code": "import java . io . * ; import java . util . * ; public class Mohammad { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , c = n / 2 ; System . out . println ( ++ c ) ; for ( int i = 1 ; i <= c ; i ++ ) System . out . println ( 1 + \" \" + i ) ; for ( int i = 2 ; i <= n - c + 1 ; i ++ ) System . out . println ( c + \" \" + i ) ; } }",
            "python_code": "import matha = int ( input ( ) ) m = math . ceil ( ( a + 1 ) / 2 ) print ( m ) for i in range ( 1 , min ( a + 1 , m + 1 ) ) : print ( 1 , i ) a = a - 1 for i in range ( m - a + 1 , m + 1 ) : if ( a <= 0 ) : break print ( m , i ) a = a - 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1731_A_1242",
            "java_code": "class GFG { static int findNthDigit ( int p , int q , int N ) { int res = 0 ; while ( N > 0 ) { N -- ; p *= 10 ; res = p / q ; p %= q ; } return res ; } public static void main ( String args [ ] ) { int p = 1 , q = 2 , N = 1 ; System . out . println ( findNthDigit ( p , q , N ) ) ; } }",
            "python_code": "def findNthDigit ( p , q , N ) : NEWLINE INDENT while ( N > 0 ) : NEWLINE INDENTINDENT N -= 1 ; NEWLINE p *= 10 ; NEWLINE res = p // q ; NEWLINE p %= q ; NEWLINE DEDENT return res ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT p = 1 ; q = 2 ; N = 1 ; NEWLINE print ( findNthDigit ( p , q , N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_502_A_1243",
            "java_code": "import java . util . * ; class solution { static int calculateSum ( int n ) { return n * ( int ) ( Math . pow ( n , 2 ) + 3 * n + 5 ) / 3 ; } public static void main ( String arr [ ] ) { int n = 3 ; System . out . println ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "from math import pow NEWLINE def calculateSum ( n ) : NEWLINE INDENT return n * ( pow ( n , 2 ) + 3 * n + 5 ) / 3 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( \"Sum =\" , int ( calculateSum ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_219_B_1244",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) a = a + 1 n = ak = 10 while ( True ) : if ( ( a % k ) > b ) : break n = a - ( a % k ) k *= 10 print ( n - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_688_A_1245",
            "java_code": "import java . util . Arrays ; import java . io . * ; class GFG { static int CalculateMax ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int min_sum = arr [ 0 ] + arr [ 1 ] ; int max_sum = arr [ n - 1 ] + arr [ n - 2 ] ; return ( Math . abs ( max_sum - min_sum ) ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 6 , 7 , 1 , 11 } ; int n = arr . length ; System . out . println ( CalculateMax ( arr , n ) ) ; } }",
            "python_code": "def CalculateMax ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE min_sum = arr [ 0 ] + arr [ 1 ] NEWLINE max_sum = arr [ n - 1 ] + arr [ n - 2 ] NEWLINE return abs ( max_sum - min_sum ) NEWLINE DEDENT arr = [ 6 , 7 , 1 , 11 ] NEWLINE n = len ( arr ) NEWLINE print ( CalculateMax ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_758_A_1246",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; ArrayList < Integer > ar = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { ar . add ( sc . nextInt ( ) ) ; } int max = Collections . max ( ar ) ; int ans = 0 ; for ( int j = 0 ; j < n ; j ++ ) { ans = ans + max - ar . get ( j ) ; } System . out . println ( ans ) ; } }",
            "python_code": "a = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) k = max ( l ) l = sorted ( l ) p = 0 for i in range ( len ( l ) - 1 ) : p += ( k - l [ i ] ) print ( p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_982_A_1247",
            "java_code": "import java . util . * ; import java . io . * ;  public class Div688A {",
            "python_code": "n = int ( input ( ) ) s = input ( ) if ( n == 1 ) : if ( s == \"0\" ) : print ( \"No\" ) else : print ( \"Yes\" ) exit ( 0 ) if ( \"11\" in s ) or ( \"000\" in s ) or ( s [ - 2 : ] == \"00\" ) or ( s [ : 2 ] == \"00\" ) : print ( \"No\" ) else : print ( \"Yes\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4583_A_1248",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class GFG { static double heptdiagonal ( double a ) { if ( a < 0 ) return - 1 ; double d = 1.802 * a ; return d ; } public static void main ( String [ ] args ) { int a = 6 ; System . out . println ( heptdiagonal ( a ) ) ; } }",
            "python_code": "def heptdiagonal ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT d = 1.802 * a NEWLINE return round ( d , 3 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 6 NEWLINE print ( heptdiagonal ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1316_A_1249",
            "java_code": " import java . util . * ; import java . io . * ; import java . math . * ;  public class Main { static FastReader sc = new FastReader ( ) ; public static void main ( String [ ] args ) { StringBuffer sb = new StringBuffer ( \"\" ) ; int ttt = 1 ; ttt = i ( ) ; outer : while ( ttt -- > 0 ) { int n = i ( ) ; int k = i ( ) ; int A [ ] = input ( n ) ; int s = 0 ; for ( int i : A ) s += i ; System . out . println ( Math . min ( k , s ) ) ; }",
            "python_code": "t = int ( input ( ) ) for u in range ( t ) : n , m = map ( int , input ( ) . split ( ) ) a = [ int ( i ) for i in input ( ) . split ( ) ] add = 0 for i in range ( 1 , n ) : add += a [ i ] print ( min ( m , a [ 0 ] + add ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_887_A_1250",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; char [ ] s1 = s . toCharArray ( ) ; long sum = 0 ; boolean check = false ;",
            "python_code": "b = str ( input ( ) ) c = 0 if '1' not in b : print ( 'no' ) else : for i in range ( len ( b ) ) : if b [ i ] == '1' : idx = i break  for i in range ( idx , len ( b ) ) : if b [ i ] == '0' : c += 1  if c >= 6 : print ( 'yes' ) else : print ( 'no' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_611_A_1251",
            "java_code": "import java . io . * ; class GFG { static void printTrib ( int n ) { int dp [ ] = new int [ n ] ; dp [ 0 ] = dp [ 1 ] = 0 ; dp [ 2 ] = 1 ; for ( int i = 3 ; i < n ; i ++ ) dp [ i ] = dp [ i - 1 ] + dp [ i - 2 ] + dp [ i - 3 ] ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( dp [ i ] + \" \" ) ; } public static void main ( String args [ ] ) { int n = 10 ; printTrib ( n ) ; } }",
            "python_code": "def printTrib ( n ) : NEWLINE INDENT dp = [ 0 ] * n NEWLINE dp [ 0 ] = dp [ 1 ] = 0 ; NEWLINE dp [ 2 ] = 1 ; NEWLINE for i in range ( 3 , n ) : NEWLINE INDENTINDENT dp [ i ] = dp [ i - 1 ] + dp [ i - 2 ] + dp [ i - 3 ] ; NEWLINE DEDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT print ( dp [ i ] , \" \" , end = \"\" ) NEWLINE DEDENT DEDENT n = 10 NEWLINE printTrib ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_681_B_1252",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) for i in range ( 0 , n + 1 , 1234567 ) : for j in range ( 0 , n + 1 , 123456 ) : if ( n - ( i + j ) ) % 1234 == 0 and i + j <= n : print ( 'YES' ) exit ( ) print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_483_A_1253",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "from math import gcdl , r = map ( int , input ( ) . split ( ) ) if ( r - l < 2 ) : print ( - 1 ) exit ( ) for a in range ( l , r + 1 ) : for b in range ( a + 1 , r + 1 ) : for c in range ( b + 1 , r + 1 ) : if ( gcd ( a , b ) == 1 and gcd ( b , c ) == 1 and gcd ( a , c ) != 1 ) : print ( a , b , c ) exit ( ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_362_A_1254",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { static boolean isPrime ( int n ) { if ( n % 2 == 0 ) return false ; for ( int i = 3 ; i <= Math . sqrt ( n ) ; i += 2 ) { if ( n % i == 0 ) return false ; } return true ; } public static void main ( String [ ] args ) { if ( isPrime ( 19 ) ) System . out . println ( \" true\" ) ; else System . out . println ( \" false\" ) ; } }",
            "python_code": "def isPrime ( n ) : NEWLINE INDENT if ( n <= 1 ) : NEWLINE INDENTINDENT return False NEWLINE DEDENT for i in range ( 2 , n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT DEDENT return True NEWLINE DEDENT if isPrime ( 11 ) : NEWLINE INDENT print ( \"true\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"false\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_732_A_1255",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int k = in . nextInt ( ) % 10 ; int r = in . nextInt ( ) ; int res = 1 ; int s = k ; while ( s % 10 != 0 && s % 10 != r ) { s = k * ++ res ; } System . out . println ( res ) ; }  }  ",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) n = 0 b = Truewhile b : n += 1 if ( n * x - y ) % 10 == 0 or n * x % 10 == 0 : b = Falseprint ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1487_B_1256",
            "java_code": "import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; k -- ; if ( n % 2 == 0 ) { long ans = k % n ; System . out . println ( ans + 1 ) ; } else { long mid = n / 2 ; long ans = ( ( k / mid ) + k ) % n ; System . out . println ( ans + 1 ) ; } } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : NEWLINE INDENT n , k = [ int ( e ) for e in input ( ) . split ( ) ] NEWLINE k -= 1 NEWLINE print ( ( k + n % 2 * k // ( n // 2 ) ) % n + 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_699_B_1257",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { static class Point { int x , y ; Point ( int x , int y ) { this . x = x ; this . y = y ; } } public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = [ ] for i in range ( n ) : s = input ( ) a . append ( s ) r = [ 0 ] * nc = [ 0 ] * mf = 0 cnt = 0 for i in range ( n ) : for j in range ( m ) : if a [ i ] [ j ] == '*' : r [ i ] += 1 c [ j ] += 1 cnt += 1 r1 = 0 c1 = 0 for i in range ( n ) : if ( f ) : break for j in range ( m ) : d = r [ i ] + c [ j ] if a [ i ] [ j ] == \"*\" : d -= 1 if d == cnt : f = 1 r1 = i c1 = j break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1454_A_1258",
            "java_code": "import java . util . * ; public class permutation { public static void main ( String [ ] args ) { int t , n , i ;  Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . nextInt ( ) ;  for ( i = 0 ; i < n ; i ++ ) { System . out . println ( ( i + 1 ) % n + 1 ) ; } } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : n = int ( s ) ; print ( n , * range ( 1 , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1424_A_1259",
            "java_code": "import java . io . * ; class GFG { static int dodecahedral_num ( int n ) { return n * ( 3 * n - 1 ) * ( 3 * n - 2 ) / 2 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( n + \"the Dodecahedral\" + \" number:\" ) ; System . out . println ( dodecahedral_num ( n ) ) ; } }",
            "python_code": "def dodecahedral_num ( n ) : NEWLINE INDENT return n * ( 3 * n - 1 ) * ( 3 * n - 2 ) // 2 NEWLINE DEDENT n = 5 NEWLINE print ( \"%sth Dodecahedral number :\" % n , dodecahedral_num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1223_A_1260",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Test {",
            "python_code": "q = int ( input ( ) ) answer = 0 ch = [ ] for i in range ( q ) : n = int ( input ( ) ) if n == 2 : ch . append ( 2 ) if n % 2 == 0 and n != 2 : ch . append ( 0 ) if n % 2 != 0 : ch . append ( 1 ) for j in ch : print ( j , end = \"\\n\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1253_A_1261",
            "java_code": "class GFG { public static boolean isEven ( int n ) { return ( n % 2 == 0 ) ; } public static void main ( String [ ] args ) { int n = 101 ; if ( isEven ( n ) == true ) System . out . print ( \"Even\" ) ; else System . out . print ( \"Odd\" ) ; } }",
            "python_code": "def isEven ( n ) : NEWLINE INDENT return ( n % 2 == 0 ) NEWLINE DEDENT n = 101 NEWLINE print ( \"Even\" if isEven ( n ) else \"Odd\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3208_A_1262",
            "java_code": "import java . * ; import java . util . Arrays ; class GFG { static int findMaxNum ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int num = arr [ 0 ] ; for ( int i = n - 1 ; i >= 0 ; i -- ) { num = num * 10 + arr [ i ] ; } return num ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 4 , 5 , 0 } ; int n = arr . length ; System . out . println ( findMaxNum ( arr , n ) ) ; } }",
            "python_code": "def findMaxNum ( arr , n ) : NEWLINE INDENT arr . sort ( reverse = True ) NEWLINE num = arr [ 0 ] NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT num = num * 10 + arr [ i ] NEWLINE DEDENT return num NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 3 , 4 , 5 , 0 ] NEWLINE n = len ( arr ) NEWLINE print ( findMaxNum ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3176_A_1263",
            "java_code": "import java . io . * ; class GFG { static int countNumbers ( int N ) { return ( int ) ( Math . pow ( 10 , N ) - Math . pow ( 8 , N ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumbers ( N ) : NEWLINE INDENT return ( pow ( 10 , N ) - pow ( 8 , N ) ) // 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 NEWLINE print ( countNumbers ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_588_B_1264",
            "java_code": "import java . io . * ; import java . util . * ;  import static java . lang . Integer . * ;  public class Main { static ArrayList < Long > power = new ArrayList < > ( ) ; static ArrayList < Long > divisors = new ArrayList < > ( ) ; public static void main ( String [ ] args ) throws IOException { FastReader in = new FastReader ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; dp ( ) ; long n = in . nextLong ( ) ; divisor ( n ) ;",
            "python_code": "n = int ( input ( ) ) i = 2 ; ans = 1 while i * i <= n : cnt = 0 while n % i == 0 : n = n // i cnt += 1 if cnt : ans *= i i += 1 if n > 1 : ans *= nprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_834_B_1265",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int k = s . nextInt ( ) ; s . nextLine ( ) ; String s1 = s . nextLine ( ) ; int [ ] last = new int [ 26 ] ; boolean c [ ] = new boolean [ 26 ] ;",
            "python_code": "from collections import Countern , k = map ( int , input ( ) . split ( ) ) s = input ( ) d = Counter ( s ) ans , opened = 0 , set ( ) for i in s : if i not in opened : opened . add ( i ) ans += 1 if ans > k : print ( \"YES\" ) ; break d [ i ] -= 1 if not d [ i ] : ans -= 1 else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3691_A_1266",
            "java_code": "class GFG { static int product ( int N ) { int ans = 1 ; int val = ( int ) Math . pow ( 2 , N - 1 ) ; for ( int i = 1 ; i <= N ; i ++ ) { ans *= ( int ) Math . pow ( i , val ) ; } return ans ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( product ( N ) ) ; } }",
            "python_code": "def product ( N ) : NEWLINE INDENT ans = 1 ; NEWLINE val = 2 ** ( N - 1 ) ; NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT ans *= ( i ** val ) ; NEWLINE DEDENT return ans ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 2 ; NEWLINE print ( product ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1110_A_1267",
            "java_code": "import java . util . * ; import java . util . Map . Entry ;   import java . io . * ; import java . math . * ; import static java . util . stream . Collectors . * ; import static java . util . Map . Entry . * ;  public class Main { static int k ; public static void main ( String [ ] args ) throws IOException { final long mod = ( long ) ( 1e9 + 7 ) ; Reader s = new Reader ( ) ; PrintWriter pt = new PrintWriter ( System . out ) ;",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) a = a % 2 ans = 0 i = 1 for n in arr : x = n * a ** ( b - i ) ans += x i += 1   if ans % 2 == 1 : print ( \"odd\" ) else : print ( \"even\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_709_A_1268",
            "java_code": "import java . util . Scanner ; public class sol { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int b = in . nextInt ( ) ; int d = in . nextInt ( ) ; int a , size = 0 , count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a = in . nextInt ( ) ; if ( a > b ) continue ; size += a ; if ( size > d ) { count ++ ; size = 0 ; } } System . out . println ( count ) ; } }",
            "python_code": "n , b , d = map ( int , input ( ) . split ( ) ) summa = 0 ans = 0 a = [ int ( i ) for i in input ( ) . split ( ) ] for i in a : if i <= b : summa += i if summa > d : summa = 0 ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2941_A_1269",
            "java_code": "import java . io . * ; class GFG { static int binomialCoeffSum ( int n ) { return ( 1 << n ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( binomialCoeffSum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def binomialCoeffSum ( n ) : NEWLINE INDENT return ( 1 << n ) ; NEWLINE DEDENT n = 4 NEWLINE print ( binomialCoeffSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1043_A_1270",
            "java_code": "import java . util . Scanner ; public class Solution { public static void main ( String [ ] args ) {  Scanner ss = new Scanner ( System . in ) ; int n = ss . nextInt ( ) ; int sum = 0 ; int max = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { int x = ss . nextInt ( ) ; if ( x > max ) max = x ; sum += x ; } int k = max ; while ( k * n - sum <= sum ) { k ++ ; } System . out . println ( k ) ; } }",
            "python_code": "x = int ( input ( ) ) votes1 = list ( map ( int , input ( ) . split ( ) ) ) votes2 = [ ] pivot = max ( votes1 ) for i in range ( pivot , 202 ) : for j in range ( len ( votes1 ) ) : vote = i - votes1 [ j ] votes2 . append ( vote ) if sum ( votes2 ) > sum ( votes1 ) : print ( i ) break else : votes2 = [ ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2426_A_1271",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { static long findSum ( int n ) { long sum2 , sum5 , sum10 ; sum2 = ( ( n / 2 ) * ( 4 + ( n / 2 - 1 ) * 2 ) ) / 2 ; sum5 = ( ( n / 5 ) * ( 10 + ( n / 5 - 1 ) * 5 ) ) / 2 ; sum10 = ( ( n / 10 ) * ( 20 + ( n / 10 - 1 ) * 10 ) ) / 2 ; return sum2 + sum5 - sum10 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT sum2 = ( ( n // 2 ) * ( 4 + ( n // 2 - 1 ) * 2 ) ) // 2 NEWLINE sum5 = ( ( n // 5 ) * ( 10 + ( n // 5 - 1 ) * 5 ) ) // 2 NEWLINE sum10 = ( ( n // 10 ) * ( 20 + ( n // 10 - 1 ) * 10 ) ) // 2 NEWLINE return sum2 + sum5 - sum10 ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE print ( int ( findSum ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1040_A_1272",
            "java_code": "import java . util . * ;    public class geek {  public static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } return gcd ( b , a % b ) ; }   public static void main ( String [ ] args ) { try { Scanner s = new Scanner ( System . in ) ;  int n = s . nextInt ( ) ; int x = s . nextInt ( ) ; int y = s . nextInt ( ) ; int min = Math . min ( x , y ) ; int a [ ] = new int [ n ] ;",
            "python_code": "n , a , b = list ( map ( int , input ( ) . split ( ) ) ) s = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 for i in range ( n ) : if s [ i ] == 2 : if s [ n - 1 - i ] == 2 : ans = ans + min ( a , b ) elif s [ n - 1 - i ] == 0 : ans = ans + a else : ans = ans + b else : if s [ n - 1 - i ] != 2 and s [ n - 1 - i ] != s [ i ] : print ( \"-1\" ) exit ( ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4547_A_1273",
            "java_code": "import java . io . * ; class GFG { static void printPattern ( int n ) { if ( n == 0 || n < 0 ) { System . out . print ( n + \" \" ) ; return ; } System . out . print ( n + \" \" ) ; printPattern ( n - 5 ) ; System . out . print ( n + \" \" ) ; } public static void main ( String [ ] args ) { int n = 16 ; printPattern ( n ) ; } }",
            "python_code": "def printPattern ( n ) : NEWLINE INDENT if ( n == 0 or n < 0 ) : NEWLINE INDENTINDENT print ( n , end = \", \" ) NEWLINE return NEWLINE DEDENT print ( n , end = \", \" ) NEWLINE printPattern ( n - 5 ) NEWLINE print ( n , end = \", \" ) NEWLINE DEDENT n = 16 NEWLINE printPattern ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_625_B_1274",
            "java_code": "import java . util . * ;  public class WarOfTheCorporations { public static void main ( String [ ] args ) { int i , j , k ; String g , a ; Scanner sc = new Scanner ( System . in ) ; g = sc . nextLine ( ) ; a = sc . nextLine ( ) ; int index = g . indexOf ( a ) ; int count = 0 ; int len = g . length ( ) ; while ( index < len && index > - 1 ) { index = g . indexOf ( a , index + a . length ( ) ) ; count ++ ; } System . out . print ( count ) ; } }",
            "python_code": "s = input ( ) a = input ( ) m = len ( a ) n = len ( s ) c = 0 i = 0 while ( i <= n - m ) : if ( s [ i : i + m ] == a ) : c += 1 i = i + m else : i += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_766_A_1275",
            "java_code": "class Solution { public boolean isToeplitzMatrix ( int [ ] [ ] matrix ) { for ( int r = 1 ; r < matrix . length ; ++ r ) for ( int c = 1 ; c < matrix [ 0 ] . length ; ++ c ) if ( matrix [ r - 1 ] [ c - 1 ] != matrix [ r ] [ c ] ) return false ; return true ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def isToeplitzMatrix ( self , matrix ) : NEWLINE INDENTINDENT for r in range ( len ( matrix ) - 1 ) : NEWLINE INDENTINDENTINDENT for c in range ( len ( matrix [ 0 ] ) - 1 ) : NEWLINE INDENTINDENTINDENTINDENT if matrix [ r ] [ c ] != matrix [ r + 1 ] [ c + 1 ] : NEWLINE INDENTINDENTINDENTINDENTINDENT return False NEWLINE DEDENT DEDENT DEDENT return True NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1724_A_1276",
            "java_code": "import java . io . * ; class GFG { static int center_octadecagon_num ( int n ) { return 9 * n * n - 9 * n + 1 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( n + \"th centered \" + \"octadecagonal number : \" ) ; System . out . println ( center_octadecagon_num ( n ) ) ; n = 13 ; System . out . print ( n + \"th centered \" + \"octadecagonal number : \" ) ; System . out . println ( center_octadecagon_num ( n ) ) ; } }",
            "python_code": "def center_octadecagon_num ( n ) : NEWLINE INDENT return ( 9 * n * n - 9 * n + 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( n , \"rd centered octadecagonal \" + \"number : \" , center_octadecagon_num ( n ) ) NEWLINE n = 13 NEWLINE print ( n , \"th centered octadecagonal \" + \"number : \" , center_octadecagon_num ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_712_B_1277",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "s = input ( ) r = l = d = u = 0 for i in s : if i == 'R' : r += 1 if i == 'L' : l += 1 if i == 'D' : d += 1 if i == 'U' : u += 1 if ( u + d + r + l ) % 2 == 0 : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_365_B_1278",
            "java_code": "import java . util . * ;  public class TheFibonacciSegment_B {  public static void main ( String [ ] args ) {",
            "python_code": "a = int ( input ( ) ) I = lambda : list ( map ( int , input ( ) . split ( ) ) ) b = I ( ) if a >= 2 : ma = 2 current = 2 for i in range ( 2 , len ( b ) ) : if b [ i - 2 ] + b [ i - 1 ] == b [ i ] : current += 1 else : current = 2 if current > ma : ma = current print ( ma ) elif a == 1 : print ( 1 ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_78_B_1279",
            "java_code": "import java . util . * ; public class EasterEggs {  public static void main ( String [ ] args ) {",
            "python_code": "if __name__ == \"__main__\" : s = \"ROYGBIV\" NEWLINE cases = [ '' , 'G' , 'GB' , 'YGB' , 'YGBI' , 'OYGBI' , 'OYGBIV' ] NEWLINE n = int ( input ( ) ) NEWLINE to_print = n // 7 NEWLINE cases_print = n % 7 NEWLINE print ( s * to_print , end = \"\" ) NEWLINE print ( cases [ cases_print ] , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_571_A_1280",
            "java_code": "import java . util . Scanner ;   public class Main { public static Scanner in = new Scanner ( System . in ) ; public static int a , b , c , L ; public static long cal ( int l ) { int ti [ ] = new int [ 3 ] ; ti [ 0 ] = ( l + a + b - c + 1 ) / 2 ; ti [ 1 ] = ( l + a + c - b + 1 ) / 2 ; ti [ 2 ] = ( l + c + b - a + 1 ) / 2 ; for ( int i = 0 ; i < 3 ; i ++ ) if ( ti [ i ] <= 0 ) return 0 ;",
            "python_code": "a , b , c , l = map ( int , input ( ) . split ( ) ) ans = ( l + 3 ) * ( l + 2 ) // 2 * ( l + 1 ) // 3 for z in ( a , b , c ) : s = 2 * z - a - b - c for x in range ( l + 1 ) : m = min ( s + x , l - x ) if m >= 0 : ans -= ( m + 1 ) * ( m + 2 ) >> 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_501_A_1281",
            "java_code": "import java . util . * ;  public class Absolutezero { public static void main ( String [ ] args ) {",
            "python_code": "a , b , c , d = input ( ) . split ( ) a , b , c , d = int ( a ) , int ( b ) , int ( c ) , int ( d ) def score ( p , t ) : sco = 0 sco1 = 3 * p / 10 sco2 = p - ( p * t / 250 ) if sco1 > sco2 : sco = sco1 return sco else : sco = sco2 return scosco_misha = score ( a , c ) sco_vasya = score ( b , d ) if sco_misha > sco_vasya : print ( \"Misha\" ) elif sco_misha < sco_vasya : print ( \"Vasya\" ) else : print ( \"Tie\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_112_B_1282",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n , x , y , r ; int i , j ; n = in . nextInt ( ) ; x = in . nextInt ( ) ; y = in . nextInt ( ) ; r = n / 2 ; if ( ( x == r || x == r + 1 ) && ( y == r || y == r + 1 ) ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } }",
            "python_code": "import mathn , x , y = map ( int , input ( ) . strip ( ) . split ( ' ' ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4996_A_1283",
            "java_code": "class GFG { static String replaceSpace ( String str ) { String s = \"\" ; for ( int i = 0 ; i < str . length ( ) ; ++ i ) { if ( str . charAt ( i ) == ' ' ) s += '-' ; else s += str . charAt ( i ) ; } return s ; } public static void main ( String [ ] args ) { String str = \"A computer science portal for geeks\" ; System . out . println ( replaceSpace ( str ) ) ; } }",
            "python_code": "if __name__ == '__main__' : NEWLINE INDENT str = \"A computer science portal for geeks\" NEWLINE for i in range ( 0 , len ( str ) , 1 ) : NEWLINE INDENTINDENT if ( str [ i ] == ' ' ) : NEWLINE INDENTINDENTINDENT str = str . replace ( str [ i ] , '-' ) NEWLINE DEDENT DEDENT print ( str ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2882_A_1284",
            "java_code": "class GFG { static int subsetCount ( int arr [ ] , int n ) { return 1 << n ; } public static void main ( String [ ] args ) { int A [ ] = { 1 , 2 , 3 } ; int n = A . length ; System . out . println ( subsetCount ( A , n ) ) ; } }",
            "python_code": "import math NEWLINE def subsetCount ( arr , n ) : NEWLINE INDENT return 1 << n NEWLINE DEDENT A = [ 1 , 2 , 3 ] NEWLINE n = len ( A ) NEWLINE print ( subsetCount ( A , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3019_A_1285",
            "java_code": "import java . io . * ; class GFG { static int factorial ( int n ) { if ( n == 0 ) return 1 ; return n * factorial ( n - 1 ) ; } static int LCMOfNeighbourFact ( int n ) { return factorial ( n + 1 ) ; } public static void main ( String args [ ] ) { int N = 5 ; System . out . println ( LCMOfNeighbourFact ( N ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return n * factorial ( n - 1 ) NEWLINE DEDENT def LCMOfNeighbourFact ( n ) : NEWLINE INDENT return factorial ( n + 1 ) NEWLINE DEDENT N = 5 NEWLINE print ( LCMOfNeighbourFact ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_1108_A_1286",
            "java_code": "class Solution { public String defangIPaddr ( String address ) { return address . replace ( \".\" , \"[.]\" ) ; } }",
            "python_code": "class Solution : NEWLINE INDENT def defangIPaddr ( self , address : str ) -> str : NEWLINE INDENTINDENT return address . replace ( '.' , '[.]' ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2713_A_1287",
            "java_code": "import java . util . Arrays ; class GFG { static void sortString ( String str ) { char [ ] arr = str . toCharArray ( ) ; Arrays . sort ( arr ) ; System . out . print ( String . valueOf ( arr ) ) ; } public static void main ( String [ ] args ) { String s = \"geeksforgeeks\" ; sortString ( s ) ; } }",
            "python_code": "def sortString ( str ) : NEWLINE INDENT str = '' . join ( sorted ( str ) ) NEWLINE print ( str ) NEWLINE DEDENT s = \"geeksforgeeks\" NEWLINE sortString ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3048_A_1288",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int firstDigit ( int n ) { while ( n >= 10 ) n /= 10 ; return n ; } public static int lastDigit ( int n ) { return ( n % 10 ) ; } public static void main ( String argc [ ] ) { int n = 98562 ; System . out . println ( firstDigit ( n ) + \" \" + lastDigit ( n ) ) ; } }",
            "python_code": "def firstDigit ( n ) : NEWLINE INDENT while n >= 10 : NEWLINE INDENTINDENT n = n / 10 ; NEWLINE DEDENT return int ( n ) NEWLINE DEDENT def lastDigit ( n ) : NEWLINE INDENT return ( n % 10 ) NEWLINE DEDENT n = 98562 ; NEWLINE print ( firstDigit ( n ) , end = \" \" ) NEWLINE print ( lastDigit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1201_B_1289",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static FileWriter fw ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static long oo = Long . MAX_VALUE ;",
            "python_code": "import sysinput = sys . stdin . readline  ''''''  n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) pf_sum = [ a [ 0 ] ] for i in range ( 1 , n ) : pf_sum . append ( pf_sum [ - 1 ] + a [ i ] )  if pf_sum [ - 1 ] % 2 : print ( \"NO\" ) sys . exit ( ) elif pf_sum [ - 1 ] > 2 * pf_sum [ - 2 ] : print ( \"NO\" ) sys . exit ( ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_17_A_1290",
            "java_code": "class GFG { static boolean isDivisible ( long n ) { while ( n / 100 != 0 ) { long d = n % 10 ; n /= 10 ; n += d * 7 ; } return ( n % 23 == 0 ) ; } public static void main ( String [ ] args ) { long n = 1191216 ; if ( isDivisible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n += d * 7 NEWLINE DEDENT return ( n % 23 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 1191216 NEWLINE if ( isDivisible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2796_A_1291",
            "java_code": "class GFG { static int countDigit ( long n ) { int count = 0 ; while ( n != 0 ) { n = n / 10 ; ++ count ; } return count ; } public static void main ( String [ ] args ) { long n = 345289467 ; System . out . print ( \"Number of digits : \" + countDigit ( n ) ) ; } }",
            "python_code": "def countDigit ( n ) : NEWLINE INDENT count = 0 NEWLINE while n != 0 : NEWLINE INDENTINDENT n //= 10 NEWLINE count += 1 NEWLINE DEDENT return count NEWLINE DEDENT n = 345289467 NEWLINE print ( \"Number of digits : % d\" % ( countDigit ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_190_A_1292",
            "java_code": "class GFG { static int findNumbers ( int n , int w ) { int x = 0 , sum = 0 ; if ( w >= 0 && w <= 8 ) { x = 9 - w ; } else if ( w >= - 9 && w <= - 1 ) { x = 10 + w ; } sum = ( int ) Math . pow ( 10 , n - 2 ) ; sum = ( x * sum ) ; return sum ; } public static void main ( String args [ ] ) { int n , w ; n = 3 ; w = 4 ; System . out . println ( findNumbers ( n , w ) ) ; } }",
            "python_code": "def findNumbers ( n , w ) : NEWLINE INDENT x = 0 ; NEWLINE sum = 0 ; NEWLINE if ( w >= 0 and w <= 8 ) : NEWLINE INDENTINDENT x = 9 - w ; NEWLINE DEDENT elif ( w >= - 9 and w <= - 1 ) : NEWLINE INDENTINDENT x = 10 + w ; NEWLINE DEDENT sum = pow ( 10 , n - 2 ) ; NEWLINE sum = ( x * sum ) ; NEWLINE return sum ; NEWLINE DEDENT n = 3 ; NEWLINE w = 4 ; NEWLINE print ( findNumbers ( n , w ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_977_A_1293",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; int t = sc . nextInt ( ) ; while ( t != 0 ) { if ( n % 10 == 0 ) n = n / 10 ; else n = n - 1 ; t -- ; } System . out . println ( n ) ; } }",
            "python_code": "n , k = input ( ) . split ( ) n = int ( n ) k = int ( k ) for i in range ( k ) : if ( n % 10 == 0 ) : n = int ( n / 10 ) else : n = n - 1 print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1084_A_1294",
            "java_code": "import java . io . * ; class GFG { static int findProduct ( int arr [ ] , int n , int k ) { int prod = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k == 0 ) { prod *= arr [ i ] ; } } return prod ; } public static void main ( String [ ] args ) { int arr [ ] = { 15 , 16 , 10 , 9 , 6 , 7 , 17 } ; int n = arr . length ; int k = 3 ; System . out . println ( findProduct ( arr , n , k ) ) ; } }",
            "python_code": "def findProduct ( arr , n , k ) : NEWLINE INDENT prod = 1 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % k == 0 ) : NEWLINE INDENTINDENTINDENT prod *= arr [ i ] NEWLINE DEDENT DEDENT return prod NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 15 , 16 , 10 , 9 , 6 , 7 , 17 ] NEWLINE n = len ( arr ) NEWLINE k = 3 NEWLINE print ( findProduct ( arr , n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1833_A_1295",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ; class GFG { static void findNthTerm ( int n ) { if ( n % 2 == 0 ) { n = n / 2 ; System . out . print ( Math . pow ( 3 , n - 1 ) + \"\\n\" ) ; } else { n = ( n / 2 ) + 1 ; System . out . print ( Math . pow ( 2 , n - 1 ) + \"\\n\" ) ; } } public static void main ( String [ ] args ) { int N = 4 ; findNthTerm ( N ) ; N = 11 ; findNthTerm ( N ) ; } }",
            "python_code": "def findNthTerm ( n ) : NEWLINE INDENT if n % 2 == 0 : NEWLINE INDENTINDENT n //= 2 NEWLINE print ( 3 ** ( n - 1 ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT n = ( n // 2 ) + 1 NEWLINE print ( 2 ** ( n - 1 ) ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 4 NEWLINE findNthTerm ( N ) NEWLINE N = 11 NEWLINE findNthTerm ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_601_A_1296",
            "java_code": "public class Fibonacci { static int findIndex ( int n ) { float fibo = 2.078087F * ( float ) Math . log ( n ) + 1.672276F ; return Math . round ( fibo ) ; } public static void main ( String [ ] args ) { int result = findIndex ( 55 ) ; System . out . println ( result ) ; } }",
            "python_code": "import math NEWLINE def findIndex ( n ) : NEWLINE INDENT fibo = 2.078087 * math . log ( n ) + 1.672276 NEWLINE return round ( fibo ) NEWLINE DEDENT n = 21 NEWLINE print ( findIndex ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1339_A_1297",
            "java_code": "import java . util . * ; public class FillingDiamond { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; System . out . println ( n ) ; } } }",
            "python_code": "from sys import stdin , stdout NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_427_A_1298",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ; int unrated = 0 ; int police = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = in . nextInt ( ) ; if ( x != - 1 ) { police += x ; continue ; } if ( police == 0 ) unrated ++ ; else police -- ;  } System . out . println ( unrated ) ;  }  }  ",
            "python_code": "x = int ( input ( ) ) n = list ( map ( int , input ( ) . split ( ) ) ) prest = 0 cop = 0 for i in range ( x ) : cop += n [ i ] if cop < 0 : prest += 1 cop = 0 print ( prest ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2016_A_1299",
            "java_code": "import java . io . * ; class GFG { static int calculateSum ( int n ) { return 2 * ( n * ( n + 1 ) * ( 2 * n + 1 ) / 6 ) + n * ( n + 1 ) / 2 + 2 * ( n ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT return ( 2 * ( n * ( n + 1 ) * ( 2 * n + 1 ) // 6 ) + n * ( n + 1 ) // 2 + 2 * ( n ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( \"Sum =\" , calculateSum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4475_A_1300",
            "java_code": "class GFG { static int oddFib ( int n ) { n = ( 3 * n + 1 ) / 2 ; int a = - 1 , b = 1 , c = 0 , i ; for ( i = 1 ; i <= n ; i ++ ) { c = a + b ; a = b ; b = c ; } return c ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( oddFib ( n ) ) ; } }",
            "python_code": "def oddFib ( n ) : NEWLINE INDENT n = ( 3 * n + 1 ) // 2 NEWLINE a = - 1 NEWLINE b = 1 NEWLINE c = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT c = a + b NEWLINE a = b NEWLINE b = c NEWLINE DEDENT return c NEWLINE DEDENT n = 4 NEWLINE print ( oddFib ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_764_B_1301",
            "java_code": "import java . util . Scanner ;  public class problem97 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( input ( ) . split ( ) ) k = n // 2 for i in range ( 0 , k , 2 ) : a [ i ] , a [ n - i - 1 ] = a [ n - i - 1 ] , a [ i ] print ( * a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1676_A_1302",
            "java_code": "class GFG { static boolean isSumOfPowersOfTwo ( int n ) { if ( n % 2 == 1 ) return false ; else return true ; } public static void main ( String args [ ] ) { int n = 10 ; if ( isSumOfPowersOfTwo ( n ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isSumOfPowersOfTwo ( n ) : NEWLINE INDENT if n % 2 == 1 : NEWLINE INDENTINDENT return False NEWLINE DEDENT else : NEWLINE INDENTINDENT return True NEWLINE DEDENT DEDENT n = 10 NEWLINE if isSumOfPowersOfTwo ( n ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_912_B_1303",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; static HashSet < Long > list = new HashSet < > ( ) ; public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) l = len ( bin ( n ) ) - 2 if k == 1 : print ( n ) else : print ( 2 ** l - 1 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4348_A_1304",
            "java_code": "class GFG { static int nthOdd ( int n ) { return ( 2 * n - 1 ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( nthOdd ( n ) ) ; } }",
            "python_code": "def nthOdd ( n ) : NEWLINE INDENT return ( 2 * n - 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( nthOdd ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1462_B_1305",
            "java_code": "import java . util . * ; import java . util . regex . * ; import java . io . * ;  public class Solution { ",
            "python_code": "t = int ( input ( ) ) NEWLINE for x in range ( t ) : n = int ( input ( ) ) NEWLINE s = input ( )  if ( s [ : 1 ] == \"2\" and s [ n - 3 : ] == \"020\" ) : print ( \"YES\" )  elif ( s [ : 2 ] == \"20\" and s [ n - 2 : ] == \"20\" ) : print ( \"YES\" ) elif ( s [ : 3 ] == \"202\" and s [ n - 1 : ] == \"0\" ) : print ( \"YES\" )  elif ( s [ : 4 ] == \"2020\" or s [ n - 4 : ] == \"2020\" ) : print ( \"YES\" )  else : print ( \"NO\" )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2915_A_1306",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { static double Nth_Term ( int n ) { return ( 2 * Math . pow ( n , 3 ) - 3 * Math . pow ( n , 2 ) + n + 6 ) / 6 ; } static public void main ( String args [ ] ) { int N = 8 ; System . out . println ( Nth_Term ( N ) ) ; } }",
            "python_code": "def Nth_Term ( n ) : NEWLINE INDENT return ( 2 * pow ( n , 3 ) - 3 * pow ( n , 2 ) + n + 6 ) // 6 NEWLINE DEDENT N = 8 NEWLINE print ( Nth_Term ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p006_A_1307",
            "java_code": "public final class p006 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p006 ( ) . run ( ) ) ; } private static final int N = 100 ; public String run ( ) { int sum = 0 ; int sum2 = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += i ; sum2 += i * i ; } return Integer . toString ( sum * sum - sum2 ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT N = 100 NEWLINE s = sum ( i for i in range ( 1 , N + 1 ) ) NEWLINE s2 = sum ( i ** 2 for i in range ( 1 , N + 1 ) ) NEWLINE return str ( s ** 2 - s2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_863_A_1308",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long num = in . nextLong ( ) ; while ( num % 10 == 0 ) { num /= 10 ; } String str = String . valueOf ( num ) ; for ( int i = 0 ; i < str . length ( ) / 2 ; i ++ ) {",
            "python_code": "import sysx = input ( ) for i in range ( len ( x ) - 1 , - 1 , - 1 ) : if x [ i ] != '0' : new = ( i + 1 ) for j in range ( new // 2 ) : if ( x [ j ] != x [ new - j - 1 ] ) : print ( \"NO\" ) sys . exit ( 0 ) breakprint ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_750_A_1309",
            "java_code": " import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; int time_remaining = ( 4 * 60 ) - k ;  int sum = 0 ; int i = 0 ; while ( sum <= time_remaining && ( i ) <= n ) { i ++ ; sum += i * 5 ; } System . out . println ( i - 1 ) ; }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = 240 b = 240 - ks = 0 c = 0 for i in range ( 1 , n + 1 ) : s += 5 * i if ( s <= b ) : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1330_A_1310",
            "java_code": "class Test { static boolean isPowerOfTwo ( int x ) { return x != 0 && ( ( x & ( x - 1 ) ) == 0 ) ; } public static void main ( String [ ] args ) { System . out . println ( isPowerOfTwo ( 31 ) ? \"Yes\" : \"No\" ) ; System . out . println ( isPowerOfTwo ( 64 ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "def isPowerOfTwo ( x ) : NEWLINE INDENT return ( x and ( not ( x & ( x - 1 ) ) ) ) NEWLINE DEDENT if ( isPowerOfTwo ( 31 ) ) : NEWLINE INDENT print ( 'Yes' ) NEWLINE DEDENT else : NEWLINE INDENT print ( 'No' ) NEWLINE DEDENT if ( isPowerOfTwo ( 64 ) ) : NEWLINE INDENT print ( 'Yes' ) NEWLINE DEDENT else : NEWLINE INDENT print ( 'No' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3245_A_1311",
            "java_code": "import java . util . * ; class GFG { public static double Min_glass ( int n , int k , int [ ] a ) { int sum = 0 ; for ( int i = 0 ; i < k ; i ++ ) sum += a [ i ] ; double ans = Math . ceil ( ( double ) sum / ( double ) 100 ) ; return ans ; } public static void main ( String [ ] args ) { int n = 4 ; int k = 3 ; int [ ] a = { 200 , 150 , 140 , 300 } ; Arrays . sort ( a ) ; System . out . println ( Min_glass ( n , k , a ) ) ; } }",
            "python_code": "from math import ceil NEWLINE def Min_glass ( n , k , a ) : NEWLINE INDENT a . sort ( ) NEWLINE return ceil ( sum ( a [ : k ] ) / 100 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , k = 4 , 3 NEWLINE a = [ 200 , 150 , 140 , 300 ] NEWLINE print ( Min_glass ( n , k , a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4636_A_1312",
            "java_code": "import java . io . * ; class GFG { static float focal_length ( float image_distance , float object_distance ) { return 1 / ( ( 1 / image_distance ) + ( 1 / object_distance ) ) ; } public static void main ( String [ ] args ) { float image_distance = 2 ; float object_distance = 50 ; System . out . println ( \"Focal length of a lens is \" + focal_length ( image_distance , object_distance ) + \" units.\" ) ; } }",
            "python_code": "def focal_length ( image_distance , object_distance ) NEWLINE INDENT : return 1 / ( ( 1 / image_distance ) + ( 1 / object_distance ) ) NEWLINE DEDENT image_distance = 2 NEWLINE object_distance = 50 NEWLINE result = focal_length ( image_distance , object_distance ) NEWLINE print ( \"Focal length of a lens is \" , result , \" units.\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5140_A_1313",
            "java_code": "class GFG { static void dist ( double x1 , double y1 , double x2 , double y2 , double r ) { System . out . println ( \"The shortest distance \" + \"between a point and a circle is \" + ( Math . sqrt ( ( Math . pow ( ( x2 - x1 ) , 2 ) ) + ( Math . pow ( ( y2 - y1 ) , 2 ) ) ) - r ) ) ; } public static void main ( String [ ] args ) { double x1 = 4 , y1 = 6 , x2 = 35 , y2 = 42 , r = 5 ; dist ( x1 , y1 , x2 , y2 , r ) ; } }",
            "python_code": "def dist ( x1 , y1 , x2 , y2 , r ) : NEWLINE INDENT print ( \"The shortest distance between a point and a circle is \" , ( ( ( ( x2 - x1 ) ** 2 ) + ( ( y2 - y1 ) ** 2 ) ) ** ( 1 / 2 ) ) - r ) ; NEWLINE DEDENT x1 = 4 ; NEWLINE y1 = 6 ; NEWLINE x2 = 35 ; NEWLINE y2 = 42 ; NEWLINE r = 5 ; NEWLINE dist ( x1 , y1 , x2 , y2 , r ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3596_A_1314",
            "java_code": "public class GFG { static int minimumMoves ( int n , int a [ ] , int s , int t ) { int i , x ; x = s ; for ( i = 1 ; i <= n ; i ++ ) { if ( x == t ) break ; x = a [ x ] ; } if ( x == t ) return i - 1 ; else return - 1 ; } public static void main ( String [ ] args ) { int s = 2 , t = 1 , i ; int a [ ] = { - 1 , 2 , 3 , 4 , 1 } ; int n = a . length ; System . out . println ( minimumMoves ( n , a , s , t ) ) ; } }",
            "python_code": "def minimumMoves ( n , a , s , t ) : NEWLINE INDENT x = s NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if x == t : NEWLINE INDENTINDENTINDENT return i - 1 NEWLINE DEDENT x = a [ x ] NEWLINE DEDENT return - 1 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s , t = 2 , 1 NEWLINE a = [ - 1 , 2 , 3 , 4 , 1 ] NEWLINE n = len ( a ) NEWLINE print ( minimumMoves ( n , a , s , t ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3147_A_1315",
            "java_code": "import java . io . * ; class GFG { static int sumDigits ( int no ) { return no == 0 ? 0 : no % 10 + sumDigits ( no / 10 ) ; } public static void main ( String [ ] args ) { System . out . println ( sumDigits ( 687 ) ) ; } }",
            "python_code": "def sumDigits ( no ) : NEWLINE INDENT return 0 if no == 0 else int ( no % 10 ) + sumDigits ( int ( no / 10 ) ) NEWLINE DEDENT print ( sumDigits ( 687 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1300_B_1316",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "import sys  input = sys . stdin . buffer . readline  t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) A = sorted ( map ( int , input ( ) . split ( ) ) ) print ( A [ n ] - A [ n - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_B_1317",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) throws Exception { int n = in . readInt ( ) ; int count = 0 ; for ( int a = 1 ; a <= n ; a ++ ) { for ( int b = a + 1 ; b <= n ; b ++ ) { int c = a ^ b ; if ( a + b > c && b + c > a && a + c > b && c <= n ) {",
            "python_code": "n = int ( input ( ) ) count = 0 for i in range ( 1 , n + 1 ) : for j in range ( i , n + 1 ) : temp = i ^ j if temp < j or temp > n or i + j <= temp : continue count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1155_A_1318",
            "java_code": "import java . util . Scanner ;  public class ReverseSubS { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i ; String s = in . next ( ) , o = \"\" ; in . close ( ) ;  boolean b = false ;  for ( i = 1 ; i < n ; i ++ ) { if ( s . charAt ( i ) < s . charAt ( i - 1 ) ) { o = i + \" \" + ( i + 1 ) ; b = true ; } } System . out . println ( b ? \"YES\\n\" + o : \"NO\" ) ; } }",
            "python_code": "from sys import stdinn = int ( stdin . readline ( ) ) s = stdin . readline ( ) [ : - 1 ] for i in range ( 1 , n ) : if s [ i ] < s [ i - 1 ] : print ( 'YES' ) print ( i , i + 1 ) breakelse : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_A_1319",
            "java_code": "import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; if ( l == r ) { System . out . println ( l ) ; } else { System . out . println ( \"2\" ) ; } } }",
            "python_code": "a , b = input ( ) . split ( ) print ( a if a == b else 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_401_A_1320",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n , x ; n = sc . nextInt ( ) ; x = sc . nextInt ( ) ; int sum = 0 ;  for ( int i = 0 ; i < n ; i ++ ) { sum += sc . nextInt ( ) ; }  sum = Math . abs ( sum ) ;  int cards = 0 ;  while ( sum > 0 ) { cards ++ ; sum -= x ; }  System . out . println ( cards ) ; } }",
            "python_code": "import math   def main_function ( ) : n , x = [ int ( i ) for i in input ( ) . split ( \" \" ) ] cards = [ int ( i ) for i in input ( ) . split ( \" \" ) ] sum_negative = 0 sum_positive = 0 for i in cards : if i > 0 : sum_positive += i else : sum_negative += abs ( i ) dif = abs ( sum_negative - sum_positive ) cards = int ( math . ceil ( dif / x ) ) return cards       print ( main_function ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1187_B_1321",
            "java_code": "import java . util . * ;  public class bs { static int [ ] [ ] psum ; public static void precal ( String str ) {  for ( int i = 0 ; i < str . length ( ) ; i ++ ) { char ch = str . charAt ( i ) ; psum [ i + 1 ] [ ch - 'a' ] ++ ;  for ( int j = 0 ; j < 26 ; j ++ ) { psum [ i + 1 ] [ j ] += psum [ i ] [ j ] ; } } } public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ;",
            "python_code": "from collections import defaultdict , Countern = int ( input ( ) ) s = input ( ) d = defaultdict ( list ) for i in range ( n ) : d [ s [ i ] ] . append ( i ) m = int ( input ( ) ) for i in range ( m ) : s1 = input ( ) d1 = Counter ( s1 ) ans = 0 for p in d1 . keys ( ) : ans = max ( ans , d [ p ] [ d1 [ p ] - 1 ] ) print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_270_A_1322",
            "java_code": "import java . util . Scanner ;  public class FancyFence { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scan . nextInt ( ) ; if ( 360 % ( 180 - n ) == 0 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } scan . close ( ) ; } }",
            "python_code": "import mathvalidangles = set ( ) i = 3 while ( angle := ( 180 * ( i - 2 ) ) / i ) <= 179 : if math . floor ( angle ) == angle : validangles . add ( angle ) i += 1   n = int ( input ( ) ) for i in range ( n ) : a = int ( input ( ) ) if a in validangles : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_430_A_1323",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n ) : arr [ i ] = ( arr [ i ] , i ) arr . sort ( ) res = [ 0 ] * nfor i in range ( n ) : res [ arr [ i ] [ 1 ] ] = i % 2 print ( * res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2099_A_1324",
            "java_code": "import java . io . * ; class GFG { static int numberofterm ( int n , int number ) { int firstnum = ( int ) Math . pow ( 10 , n - 1 ) ; int lastnum = ( int ) Math . pow ( 10 , n ) ; int count = 0 ; for ( int i = firstnum ; i < lastnum ; i ++ ) if ( i % number == 0 ) count ++ ; return count ; } public static void main ( String [ ] args ) { int n = 3 , num = 7 ; System . out . println ( numberofterm ( n , num ) ) ; } }",
            "python_code": "import math NEWLINE def numberofterm ( n , number ) : NEWLINE INDENT firstnum = math . pow ( 10 , n - 1 ) NEWLINE lastnum = math . pow ( 10 , n ) NEWLINE count = 0 NEWLINE for i in range ( int ( firstnum ) , int ( lastnum ) ) : NEWLINE INDENTINDENT if ( i % number == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT n = 3 NEWLINE num = 7 NEWLINE print ( numberofterm ( n , num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1770_A_1325",
            "java_code": "import java . io . * ; class GFG { static double maxDistance ( int n , int fuel ) { double dist_covered = 0 ; while ( n > 0 ) { dist_covered += ( double ) fuel / n ; n -= 1 ; } return dist_covered ; } public static void main ( String [ ] args ) { int n = 3 ; int fuel = 100 ; System . out . println ( \"Maximum distance possible with \" + n + \" bikes is \" + maxDistance ( n , fuel ) ) ; } }",
            "python_code": "def maxDistance ( n , fuel ) : NEWLINE INDENT dist_covered = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT dist_covered = dist_covered + ( fuel / n ) NEWLINE n = n - 1 NEWLINE DEDENT return dist_covered NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE fuel = 100 NEWLINE print ( \"Maximum distance possible with\" , n , \"bikes is\" , maxDistance ( n , fuel ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1041_A_1326",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ;  Arrays . sort ( a ) ; int sum = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) sum += a [ i + 1 ] - a [ i ] - 1 ; System . out . println ( sum ) ; } }",
            "python_code": "a = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) print ( max ( b ) - min ( b ) + 1 - a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_500_A_1327",
            "java_code": "class GFG { static void lowerWythoff ( int n ) { double phi = ( 1 + Math . sqrt ( 5 ) ) / 2.0 ; for ( int i = 1 ; i <= n ; i ++ ) { double ans = Math . floor ( i * phi ) ; System . out . print ( ( int ) ans ) ; if ( i != n ) System . out . print ( \" , \" ) ; } } public static void main ( String [ ] args ) { int n = 5 ; lowerWythoff ( n ) ; } }",
            "python_code": "from math import sqrt , floor NEWLINE def lowerWythoff ( n ) : NEWLINE INDENT phi = ( 1 + sqrt ( 5 ) ) / 2 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT ans = floor ( i * phi ) ; NEWLINE print ( ans , end = \"\" ) ; NEWLINE if ( i != n ) : NEWLINE INDENTINDENTINDENT print ( \", \" , end = \"\" ) ; NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE lowerWythoff ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1194_A_1328",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "for _ in [ 0 ] * int ( input ( ) ) : print ( 2 * int ( input ( ) . split ( ) [ 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4066_A_1329",
            "java_code": "import java . util . * ; class Odd { public static int oddSum ( int n ) { return ( n * n ) ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( \" Sum of first \" + n + \" Odd Numbers is: \" + oddSum ( n ) ) ; } }",
            "python_code": "def oddSum ( n ) : NEWLINE INDENT return ( n * n ) ; NEWLINE DEDENT n = 20 NEWLINE print ( \" Sum of first\" , n , \"Odd Numbers is: \" , oddSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2214_A_1330",
            "java_code": "class GFG { static int possibleways ( int n ) { if ( n % 2 == 1 ) return 0 ; else if ( n % 4 == 0 ) return n / 4 - 1 ; else return n / 4 ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( possibleways ( n ) ) ; } }",
            "python_code": "def possibleways ( n ) : NEWLINE INDENT if ( n % 2 == 1 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT elif ( n % 4 == 0 ) : NEWLINE INDENTINDENT return n // 4 - 1 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return n // 4 ; NEWLINE DEDENT DEDENT n = 20 ; NEWLINE print ( possibleways ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1371_B_1331",
            "java_code": "import java . io . * ; import java . util . * ;  public class B {  public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; FastOutput fo = new FastOutput ( ) ; int testcases = fs . nextInt ( ) ; for ( int tt = 0 ; tt < testcases ; tt ++ ) {",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n , r = map ( int , input ( ) . split ( ) ) ans = 0 if ( n > r ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1068_B_1332",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ;  public class atcoderbg { static class Node { int key ; Node left ; Node right ; Node ( int k ) { key = k ; } }",
            "python_code": "b = int ( input ( ) ) def make_divisors ( n ) : divisors = [ ] for i in range ( 1 , int ( n ** 0.5 ) + 1 ) : if n % i == 0 : divisors . append ( i ) if i != n // i : divisors . append ( n // i )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4055_A_1333",
            "java_code": "import static java . lang . Math . pow ; class GFG { static double sum ( int x , int n ) { double i , total = 1.0 ; for ( i = 1 ; i <= n ; i ++ ) total = total + ( Math . pow ( x , i ) / i ) ; return total ; } public static void main ( String [ ] args ) { int x = 2 ; int n = 5 ; System . out . printf ( \"%.2f\" , sum ( x , n ) ) ; } }",
            "python_code": "def SUM ( x , n ) : NEWLINE INDENT total = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT total = total + ( ( x ** i ) / i ) NEWLINE DEDENT return total NEWLINE DEDENT x = 2 NEWLINE n = 5 NEWLINE s = SUM ( x , n ) NEWLINE print ( round ( s , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1351_A_1334",
            "java_code": "import java . util . * ; import java . lang . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; for ( int i = 0 ; i < a ; i ++ ) { int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; System . out . println ( x + y ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) print ( a + b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_581_A_1335",
            "java_code": "import java . util . * ; import java . lang . * ; public class Socks { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; int pairs = Math . min ( l , r ) ; int days = Math . abs ( l - r ) / 2 ; System . out . println ( pairs + \" \" + days ) ; } }",
            "python_code": "a , b = sorted ( [ int ( x ) for x in input ( ) . split ( ) ] ) print ( a , ( ( b - a ) // 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1927_A_1336",
            "java_code": "class GFG { static int multiplyWith4 ( int n ) { return ( n << 2 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . print ( multiplyWith4 ( n ) ) ; } }",
            "python_code": "def multiplyWith4 ( n ) : NEWLINE INDENT return ( n << 2 ) NEWLINE DEDENT n = 4 NEWLINE print ( multiplyWith4 ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1324_A_1337",
            "java_code": "import java . util . * ;  public class CodeForces { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ;  while ( t -- > 0 ) { int n = scan . nextInt ( ) ; int sum = 0 ;  for ( int i = 0 ; i < n ; i ++ ) sum += ( scan . nextInt ( ) % 2 ) ;  if ( sum == 0 || sum == n ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ;  } } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : n = int ( input ( ) ) cnto = sum ( list ( map ( lambda x : int ( x ) % 2 , input ( ) . split ( ) ) ) ) print ( 'YES' if cnto == 0 or cnto == n else 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3221_A_1338",
            "java_code": "public class GFG { public static int cubesum ( int n ) { return ( n ) * ( n ) * ( 2 * n * n - 1 ) ; } public static void main ( String args [ ] ) { int a = 4 ; System . out . println ( cubesum ( a ) ) ; } }",
            "python_code": "def cubeSum ( n ) : NEWLINE INDENT return ( n * n * ( 2 * n * n - 1 ) ) NEWLINE DEDENT print ( cubeSum ( 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1153_B_1339",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ;  public class c1 { public static MyScanner scan ; public static PrintWriter out ; public static void main ( String [ ] args ) { scan = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ;  int t = 1 ;",
            "python_code": "n , m , h = list ( map ( int , input ( ) . split ( ) ) )   a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) c = [ list ( map ( int , input ( ) . split ( ) ) ) for _ in range ( n ) ]  for i in range ( n ) : for j in range ( m ) : if c [ i ] [ j ] == 1 : c [ i ] [ j ] = min ( a [ j ] , b [ i ] ) \t  for i in range ( n ) : print ( * c [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1208_B_1340",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static FileWriter fw ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static long oo = Long . MAX_VALUE ;",
            "python_code": "import ioimport osimport mathinput = io . BytesIO ( os . read ( 0 , os . fstat ( 0 ) . st_size ) ) . readline NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_330_B_1341",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int [ ] [ ] path = new int [ n + 1 ] [ n + 1 ] ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) g = [ 0 ] * ( n + 1 ) for k in range ( m ) : a , b = map ( int , input ( ) . split ( ) ) g [ a ] = 1 g [ b ] = 1  c = 0 for k in range ( 1 , len ( g ) ) : if g [ k ] == 0 : c = k break  print ( n - 1 ) for k in range ( 1 , len ( g ) ) : if k == c : continue print ( c , k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_764_B_1342",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "if __name__ == \"__main__\" : n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l = l [ : : - 1 ] if n <= 2 : print ( * l ) else : i = 1 till = n // 2 - 1 while i < n // 2 : l [ i ] , l [ n - i - 1 ] = l [ n - i - 1 ] , l [ i ] i = i + 2 print ( * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_27_A_1343",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class er10a {",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr = sorted ( arr ) for i in range ( 1 , n + 1 ) : if i != arr [ i - 1 ] : print ( i ) breakelse : print ( n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_169_B_1344",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Main {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "a = [ int ( x ) for x in input ( ) ] b = sorted ( [ int ( y ) for y in input ( ) ] , reverse = True ) y = 0  for i in range ( 0 , len ( a ) ) : if y < len ( b ) and a [ i ] < b [ y ] : a [ i ] = b [ y ] y = y + 1    print ( \"\" . join ( [ str ( c ) for c in a ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_A_1345",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ; int c [ ] = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { c [ i ] = sc . nextInt ( ) ; } int sum = 0 ; for ( int x : c ) { sum += x ; } if ( sum % 5 != 0 || sum == 0 ) { System . out . println ( - 1 ) ; } else { System . out . println ( sum / 5 ) ; } }  }",
            "python_code": "L = [ int ( X ) for X in input ( ) . split ( ) ] S = sum ( L ) if S == 0 : print ( - 1 ) else : if S % 5 == 0 : print ( S // 5 ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4745_A_1346",
            "java_code": "class GFG { static int CHAR_BIT = 8 ; static int min ( int x , int y ) { return y + ( ( x - y ) & ( ( x - y ) > > ( ( Integer . SIZE / 8 ) * CHAR_BIT - 1 ) ) ) ; } static int smallest ( int x , int y , int z ) { return Math . min ( x , Math . min ( y , z ) ) ; } public static void main ( String [ ] args ) { int x = 12 , y = 15 , z = 5 ; System . out . println ( \"Minimum of 3 numbers is \" + smallest ( x , y , z ) ) ; } }",
            "python_code": "CHAR_BIT = 8 NEWLINE def min ( x , y ) : NEWLINE INDENT return y + ( ( x - y ) & \\ ( ( x - y ) >> ( 32 * CHAR_BIT - 1 ) ) ) NEWLINE DEDENT def smallest ( x , y , z ) : NEWLINE INDENT return min ( x , min ( y , z ) ) NEWLINE DEDENT x = 12 NEWLINE y = 15 NEWLINE z = 5 NEWLINE print ( \"Minimum of 3 numbers is \" , smallest ( x , y , z ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4059_A_1347",
            "java_code": "class GFG { static int sum ( int k , int n ) { int sum = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { int p = 1 ; for ( int j = 0 ; j < n - i ; j ++ ) { p = p * k ; } for ( int j = 0 ; j < i ; j ++ ) { p = p * ( k - 1 ) ; } sum = sum + p ; } return sum ; } public static void main ( String [ ] args ) { int n = 3 ; int K = 3 ; System . out . println ( sum ( K , n ) ) ; } }",
            "python_code": "def Sum ( k , n ) : NEWLINE INDENT Summ = 0 NEWLINE for i in range ( n + 1 ) : NEWLINE INDENTINDENT p = 1 NEWLINE for j in range ( n - i ) : NEWLINE INDENTINDENTINDENT p = p * k NEWLINE DEDENT for j in range ( i ) : NEWLINE INDENTINDENTINDENT p = p * ( k - 1 ) NEWLINE DEDENT Summ = Summ + p NEWLINE DEDENT return Summ NEWLINE DEDENT n = 3 NEWLINE K = 3 NEWLINE print ( Sum ( K , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1201_A_1348",
            "java_code": "import java . util . * ;  public class ICPC { public static void main ( String [ ] args ) {",
            "python_code": "students , question = map ( int , input ( ) . split ( ) ) final_list = [ ] for each in range ( 0 , students ) : final_list . append ( input ( ) ) value = list ( map ( int , input ( ) . split ( ) ) )  i = 0 score = 0 for each in range ( 0 , question ) : count_list = [ 0 ] * 5 for ans_student in final_list : count_list [ ord ( ans_student [ i ] ) - 65 ] += value [ i ] score = score + max ( count_list ) i += 1 print ( score )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2501_A_1349",
            "java_code": "class GFG { static void result ( int N ) { for ( int num = 0 ; num < N ; num ++ ) { if ( num % 3 == 0 && num % 5 == 0 ) System . out . print ( num + \" \" ) ; } } public static void main ( String [ ] args ) { int N = 100 ; result ( N ) ; } }",
            "python_code": "def result ( N ) : NEWLINE INDENT for num in range ( N ) : NEWLINE INDENTINDENT if num % 3 == 0 and num % 5 == 0 : NEWLINE INDENTINDENTINDENT print ( str ( num ) + \" \" , end = \"\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT pass NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 100 NEWLINE result ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1402_A_1350",
            "java_code": "class GFG { static int minSum ( int n ) { int sum = 0 ; while ( n > 0 ) { sum += ( n % 10 ) ; n /= 10 ; } if ( sum == 1 ) return 10 ; return sum ; } public static void main ( String [ ] args ) { int n = 1884 ; System . out . print ( minSum ( n ) ) ; } }",
            "python_code": "def minSum ( n ) : NEWLINE INDENT sum = 0 ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT sum += ( n % 10 ) ; NEWLINE n //= 10 ; NEWLINE DEDENT if ( sum == 1 ) : NEWLINE INDENTINDENT return 10 ; NEWLINE DEDENT return sum ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 1884 ; NEWLINE print ( minSum ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3562_A_1351",
            "java_code": "class GFG { static int findThirdDigit ( int n ) { if ( n < 3 ) return 0 ; return ( n & 1 ) > 0 ? 1 : 6 ; } public static void main ( String args [ ] ) { int n = 7 ; System . out . println ( findThirdDigit ( n ) ) ; } }",
            "python_code": "def findThirdDigit ( n ) : NEWLINE INDENT if n < 3 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return 1 if n and 1 else 6 NEWLINE DEDENT n = 7 NEWLINE print ( findThirdDigit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_651_A_1352",
            "java_code": "import java . util . Scanner ;  public class _0855Joysticks {  static int letsgame ( int x , int y , int count ) {",
            "python_code": "a1 , a2 = map ( int , input ( ) . split ( ) )  minute = 0 while True : if a1 < a2 : a1 += 1 a2 -= 2 minute += 1 elif a2 < a1 : a2 += 1 a1 -= 2 minute += 1 else : if a1 == 1 : a1 -= 1 else : a1 += 1 a2 -= 2 minute += 1 if a1 <= 0 or a2 <= 0 : break  print ( minute ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_B_1353",
            "java_code": "import java . util . Scanner ;  public class _0692three_palindrome {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = \"\" ; while ( s . length ( ) < n ) { s += s + \"aabb\" ; } System . out . println ( s . substring ( 0 , n ) ) ; }  }",
            "python_code": "from __future__ import division , print_functionfrom collections import * from math import * from itertools import * import osimport sysfrom io import BytesIO , IOBaseimport math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1000_A_1354",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "from collections import Counter  n = int ( input ( ) ) a = Counter ( ) b = Counter ( ) for _ in range ( n ) : a [ input ( ) . strip ( ) ] += 1 for _ in range ( n ) : b [ input ( ) . strip ( ) ] += 1 ans = 0 for key in b : ans += max ( b [ key ] - a [ key ] , 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2060_A_1355",
            "java_code": "import java . util . * ; class GFG { static int numberOfMinutes ( int S , int S1 ) { int Min = 0 ; Min = ( int ) ( ( ( S - S1 ) / Math . floor ( S ) ) * 60 ) ; return Min ; } public static void main ( String [ ] args ) { int S = 30 , S1 = 10 ; System . out . println ( numberOfMinutes ( S , S1 ) + \" min\" ) ; } }",
            "python_code": "import math NEWLINE def numberOfMinutes ( S , S1 ) : NEWLINE INDENT Min = 0 ; NEWLINE Min = ( ( S - S1 ) / math . floor ( S ) ) * 60 ; NEWLINE return int ( Min ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT S , S1 = 30 , 10 ; NEWLINE print ( numberOfMinutes ( S , S1 ) , \"min\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_895_A_1356",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) p = list ( map ( int , input ( ) . split ( ) ) ) r = [ 0 ] * nmn = 360 for i in range ( n ) : q = [ ] q . extend ( p [ i : ] ) if i > 0 : q . extend ( p [ 0 : i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4512_A_1357",
            "java_code": "class GFG { static int swapBits ( int x ) { int even_bits = x & 0xAAAAAAAA ; int odd_bits = x & 0x55555555 ; even_bits >>= 1 ; odd_bits <<= 1 ; return ( even_bits | odd_bits ) ; } public static void main ( String [ ] args ) { int x = 23 ; System . out . println ( swapBits ( x ) ) ; } }",
            "python_code": "def swapBits ( x ) : NEWLINE INDENT even_bits = x & 0xAAAAAAAA NEWLINE odd_bits = x & 0x55555555 NEWLINE even_bits >>= 1 NEWLINE odd_bits <<= 1 NEWLINE return ( even_bits | odd_bits ) NEWLINE DEDENT x = 23 NEWLINE print ( swapBits ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1365_A_1358",
            "java_code": "class GFG { static int countFact ( int low , int high ) { int fact = 1 , x = 1 ; while ( fact < low ) { fact = fact * x ; x ++ ; } int res = 0 ; while ( fact <= high ) { res ++ ; fact = fact * x ; x ++ ; } return res ; } public static void main ( String [ ] args ) { System . out . print ( \"Count is \" + countFact ( 2 , 720 ) ) ; } }",
            "python_code": "def countFact ( low , high ) : NEWLINE INDENT fact = 1 NEWLINE x = 1 NEWLINE while ( fact < low ) : NEWLINE INDENTINDENT fact = fact * x NEWLINE x += 1 NEWLINE DEDENT res = 0 NEWLINE while ( fact <= high ) : NEWLINE INDENTINDENT res += 1 NEWLINE fact = fact * x NEWLINE x += 1 NEWLINE DEDENT return res NEWLINE DEDENT print ( \"Count is \" , countFact ( 2 , 720 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4711_A_1359",
            "java_code": "import java . io . * ; class GFG { static double cyl ( double r , double h ) { if ( r < 0 && h < 0 ) return - 1 ; double R = ( 2 * r ) / 3 ; double H = ( 2 * h ) / 3 ; double V = 3.14 * Math . pow ( R , 2 ) * H ; return V ; } public static void main ( String [ ] args ) { double r = 4 , h = 8 ; System . out . println ( cyl ( r , h ) ) ; } }",
            "python_code": "import math NEWLINE def cyl ( r , h ) : NEWLINE INDENT if ( r < 0 and h < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT R = ( 2 * r ) / 3 NEWLINE H = ( 2 * h ) / 3 NEWLINE V = 3.14 * math . pow ( R , 2 ) * H NEWLINE return V NEWLINE DEDENT r = 4 ; h = 8 ; NEWLINE print ( cyl ( r , h ) , \"\\n\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_899_A_1360",
            "java_code": "import java . util . * ; class solution { static void divide ( int a , int b ) { for ( int i = 2 ; i <= Math . min ( a , b ) ; i ++ ) { while ( a % i == 0 && b % i == 0 ) { a = a / i ; b = b / i ; } } System . out . println ( \"A = \" + a + \", B = \" + b ) ; } public static void main ( String args [ ] ) { int A = 10 , B = 15 ; divide ( A , B ) ; } }",
            "python_code": "def divide ( a , b ) : NEWLINE INDENT for i in range ( 2 , min ( a , b ) + 1 ) : NEWLINE INDENTINDENT while ( a % i == 0 and b % i == 0 ) : NEWLINE INDENTINDENTINDENT a = a // i NEWLINE b = b // i NEWLINE DEDENT DEDENT print ( \"A =\" , a , \", B =\" , b ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT A , B = 10 , 15 NEWLINE divide ( A , B ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1107_A_1361",
            "java_code": "import java . io . * ; class GFG { static void checkEVENodd ( int arr [ ] , int n , int l , int r ) { if ( arr [ r ] == 1 ) System . out . println ( \"odd\" ) ; else System . out . println ( \"even\" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 1 , 0 , 1 } ; int n = arr . length ; checkEVENodd ( arr , n , 1 , 3 ) ; } }",
            "python_code": "def checkEVENodd ( arr , n , l , r ) : NEWLINE INDENT if ( arr [ r ] == 1 ) : NEWLINE INDENTINDENT print ( \"odd\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"even\" ) NEWLINE DEDENT DEDENT arr = [ 1 , 1 , 0 , 1 ] NEWLINE n = len ( arr ) NEWLINE checkEVENodd ( arr , n , 1 , 3 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_104_A_1362",
            "java_code": "import javax . swing . plaf . IconUIResource ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class codeforces { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "a = int ( input ( ) ) print ( ( 10 < a < 22 ) * 4 + ( a == 20 ) * 11 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_723_A_1363",
            "java_code": "import java . util . * ; public class TheNewYearMeetingFriends { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int arr [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) arr [ i ] = in . nextInt ( ) ; Arrays . sort ( arr ) ; int result = ( arr [ 1 ] - arr [ 0 ] ) + ( arr [ 2 ] - arr [ 1 ] ) ; System . out . println ( result ) ; } }",
            "python_code": "l = list ( map ( int , input ( ) . split ( ) ) ) l . sort ( ) mi , mm , md = l [ 0 ] , l [ 1 ] , l [ 2 ] print ( abs ( mi - mm ) + abs ( md - mm ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4793_A_1364",
            "java_code": "import java . io . * ; class GFG { static int avg_of_even_num ( int n ) { return n + 1 ; } public static void main ( String [ ] args ) { int n = 8 ; System . out . println ( avg_of_even_num ( n ) ) ; } }",
            "python_code": "def avg_of_even_num ( n ) : NEWLINE INDENT return n + 1 NEWLINE DEDENT n = 8 NEWLINE print ( avg_of_even_num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_344_B_1365",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; public static void main ( String [ ] args ) { int t = 1 ;",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) s = ( a + b + c ) // 2 if ( a + b + c ) % 2 or s - a < 0 or s - b < 0 or s - c < 0 : print ( \"Impossible\" ) else : print ( s - c , s - a , s - b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1436_A_1366",
            "java_code": "import java . io . * ; class GFG { static int getTotalXorOfSubarrayXors ( int arr [ ] , int N ) { if ( N % 2 == 0 ) return 0 ; int res = 0 ; for ( int i = 0 ; i < N ; i += 2 ) res ^= arr [ i ] ; return res ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 5 , 2 , 4 , 6 } ; int N = arr . length ; System . out . println ( getTotalXorOfSubarrayXors ( arr , N ) ) ; } }",
            "python_code": "def getTotalXorOfSubarrayXors ( arr , N ) : NEWLINE INDENT if ( N % 2 == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT res = 0 NEWLINE for i in range ( 0 , N , 2 ) : NEWLINE INDENTINDENT res ^= arr [ i ] NEWLINE DEDENT return res NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 3 , 5 , 2 , 4 , 6 ] NEWLINE N = len ( arr ) NEWLINE print ( getTotalXorOfSubarrayXors ( arr , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4608_A_1367",
            "java_code": "class GFG { static int max_xor ( int arr [ ] , int n ) { int maxXor = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { maxXor = Math . max ( maxXor , arr [ i ] ^ arr [ j ] ) ; } } return maxXor ; } public static void main ( String [ ] args ) { int arr [ ] = { 25 , 10 , 2 , 8 , 5 , 3 } ; int n = arr . length ; System . out . println ( max_xor ( arr , n ) ) ; } }",
            "python_code": "def max_xor ( arr , n ) : NEWLINE INDENT maxXor = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT maxXor = max ( maxXor , \\ arr [ i ] ^ arr [ j ] ) ; NEWLINE DEDENT DEDENT return maxXor ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 25 , 10 , 2 , 8 , 5 , 3 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( max_xor ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3447_A_1368",
            "java_code": "import java . io . * ; class GFG { static float harmonicMean ( float arr [ ] , int n ) { float sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum = sum + ( float ) 1 / arr [ i ] ; return ( float ) n / sum ; } public static void main ( String args [ ] ) { float arr [ ] = { 13.5f , 14.5f , 14.8f , 15.2f , 16.1f } ; int n = arr . length ; System . out . println ( harmonicMean ( arr , n ) ) ; } }",
            "python_code": "def harmonicMean ( arr , n ) : NEWLINE INDENT sm = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT sm = sm + ( 1 ) / arr [ i ] ; NEWLINE DEDENT return n / sm NEWLINE DEDENT arr = [ 13.5 , 14.5 , 14.8 , 15.2 , 16.1 ] ; NEWLINE n = len ( arr ) NEWLINE print ( harmonicMean ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_760_B_1369",
            "java_code": "import java . util . * ; import java . io . * ;  public class B760 { public static void main ( String [ ] args ) throws Exception { in . init ( System . in ) ; long n = in . nextLong ( ) ;",
            "python_code": "import sysinput = sys . stdin . readlinedef f ( x ) : z = m - n if ( x > k ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4272_A_1370",
            "java_code": "class Test { static int arr [ ] = { 12 , 3 , 4 , 15 } ; static int sum ( ) { int sum = 0 ; int i ; for ( i = 0 ; i < arr . length ; i ++ ) sum += arr [ i ] ; return sum ; } public static void main ( String [ ] args ) { System . out . println ( \"Sum of given array is \" + sum ( ) ) ; } }",
            "python_code": "def _sum ( arr , n ) : NEWLINE INDENT return ( sum ( arr ) ) NEWLINE DEDENT arr = [ ] NEWLINE arr = [ 12 , 3 , 4 , 15 ] NEWLINE n = len ( arr ) NEWLINE ans = _sum ( arr , n ) NEWLINE print ( 'Sum of the array is ' , ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1065_A_1371",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Test {",
            "python_code": "import sys  def main ( ) : inp = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) out = [ ] for s in inp [ 1 : ] : s , a , b , c = map ( int , s . split ( ) ) out . append ( s // c + s // c // a * b ) return out print ( * main ( ) , sep = '\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1461_A_1372",
            "java_code": "import java . util . * ; public class stringgeneration { public static void main ( String [ ] args ) { int t , n , k , i ;  Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . nextInt ( ) ; k = sc . nextInt ( ) ;  for ( i = 0 ; i < n ; i ++ ) { System . out . print ( ( char ) ( 'a' + ( i % 3 ) ) ) ; }  System . out . println ( ) ;  } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : n = int ( s . split ( ) [ 0 ] ) ; print ( ( 'abc' * n ) [ : n ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_909_B_1373",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution { public static void main ( String [ ] args ) throws Exception { int N = in . readInt ( ) ; int ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { int layer = f ( i , N ) ; ans += layer ;",
            "python_code": "n = int ( input ( ) ) dp = [ 0 ] * 101 dp [ 1 ] = 1 dp [ 2 ] = 2 for i in range ( 3 , 101 ) : dp [ i ] = dp [ i - 2 ] + iprint ( dp [ n ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4762_A_1374",
            "java_code": "import java . lang . * ; class GFG { static int MaximumHeight ( int a [ ] , int n ) { return ( int ) Math . floor ( ( - 1 + Math . sqrt ( 1 + ( 8 * n ) ) ) / 2 ) ; } public static void main ( String [ ] args ) { int arr [ ] = new int [ ] { 40 , 100 , 20 , 30 } ; int n = arr . length ; System . out . println ( MaximumHeight ( arr , n ) ) ; } }",
            "python_code": "import math NEWLINE def MaximumHeight ( a , n ) : NEWLINE INDENT return ( - 1 + int ( math . sqrt ( 1 + ( 8 * n ) ) ) ) // 2 NEWLINE DEDENT arr = [ 40 , 100 , 20 , 30 ] NEWLINE n = len ( arr ) NEWLINE print ( MaximumHeight ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2441_A_1375",
            "java_code": "class GFG { static void bin ( int n ) { if ( n > 1 ) bin ( n / 2 ) ; System . out . print ( n % 2 ) ; } public static void main ( String [ ] args ) { bin ( 7 ) ; System . out . println ( ) ; bin ( 4 ) ; } }",
            "python_code": "def bin ( n ) : NEWLINE INDENT if n > 1 : NEWLINE INDENTINDENT bin ( n // 2 ) NEWLINE DEDENT print ( n % 2 , end = \"\" ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT bin ( 7 ) NEWLINE print ( ) NEWLINE bin ( 4 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_705_A_1376",
            "java_code": "import java . io . * ; public class GFG { static boolean Arrive ( int a , int b , int n ) { if ( n >= Math . abs ( a ) + Math . abs ( b ) && ( n - ( Math . abs ( a ) + Math . abs ( b ) ) ) % 2 == 0 ) return true ; return false ; } int main ( ) { return 0 ; } public static void main ( String [ ] args ) { int a = 5 , b = 5 , n = 11 ; if ( Arrive ( a , b , n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def Arrive ( a , b , n ) : NEWLINE INDENT if ( n >= abs ( a ) + abs ( b ) and ( n - ( abs ( a ) + abs ( b ) ) ) % 2 == 0 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT a = 5 NEWLINE b = 5 NEWLINE n = 11 NEWLINE if ( Arrive ( a , b , n ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_651_B_1377",
            "java_code": "import java . util . Scanner ;  public class BeautifulPaintings651 {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int count [ ] = new int [ 1001 ] ; int max = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { max = Math . max ( max , ++ count [ scan . nextInt ( ) ] ) ; } System . out . println ( n - max ) ; } }",
            "python_code": "n = int ( input ( ) ) A = [ int ( a ) for a in input ( ) . split ( ) ] A . sort ( ) last = A [ 0 ] c = 0 aux = 0 for i in range ( n ) : a = A [ i ] if a == last : aux += 1 else : aux = 1 last = A [ i ] c = max ( c , aux ) print ( n - c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4792_A_1378",
            "java_code": "import java . io . * ; class GFG { static int avg_of_even_num ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += 2 * i ; return ( sum / n ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . print ( avg_of_even_num ( n ) ) ; } }",
            "python_code": "def avg_of_even_num ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum = sum + 2 * i NEWLINE DEDENT return sum / n NEWLINE DEDENT n = 9 NEWLINE print ( avg_of_even_num ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1382_A_1379",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = [ int ( x ) for x in input ( ) . split ( ) ] arr = set ( [ int ( x ) for x in input ( ) . split ( ) ] ) brr = set ( [ int ( x ) for x in input ( ) . split ( ) ] ) x = arr . intersection ( brr ) if ( len ( x ) == 0 ) : print ( \"NO\" ) else : print ( \"YES\\n{} {}\" . format ( 1 , list ( x ) [ 0 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_882_A_1380",
            "java_code": "class Main { public static void main ( String [ ] args ) { int N = 43 ; int ans = findRemainder ( N ) ; System . out . println ( ans ) ; } public static int findRemainder ( int n ) { int x = n & 3 ; return x ; } }",
            "python_code": "def findRemainder ( n ) : NEWLINE INDENT x = n & 3 NEWLINE return x NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 43 NEWLINE ans = findRemainder ( N ) NEWLINE print ( ans ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_169_A_1381",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , a = sc . nextInt ( ) , b = sc . nextInt ( ) ; int h [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h [ i ] = sc . nextInt ( ) ; } Arrays . sort ( h ) ; System . out . println ( h [ b ] - h [ b - 1 ] ) ; } }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) arr = sorted ( map ( int , input ( ) . split ( ) ) )  ans = arr [ - b ] - arr [ c - 1 ]  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_854_A_1382",
            "java_code": "class GFG { static void findNthNum ( int N ) { int bit_L = 1 , last_num = 0 ; while ( bit_L * ( bit_L + 1 ) / 2 < N ) { last_num = last_num + bit_L ; bit_L ++ ; } int bit_R = N - last_num - 1 ; System . out . print ( ( 1 << bit_L ) + ( 1 << bit_R ) + \"\\n\" ) ; } public static void main ( String [ ] args ) { int N = 13 ; findNthNum ( N ) ; } }",
            "python_code": "def findNthNum ( N ) : NEWLINE INDENT bit_L = 1 ; NEWLINE last_num = 0 ; NEWLINE while ( bit_L * ( bit_L + 1 ) / 2 < N ) : NEWLINE INDENTINDENT last_num = last_num + bit_L ; NEWLINE bit_L += 1 ; NEWLINE DEDENT bit_R = N - last_num - 1 ; NEWLINE print ( ( 1 << bit_L ) + ( 1 << bit_R ) ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 13 ; NEWLINE findNthNum ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1210_A_1383",
            "java_code": "import java . io . * ; class GFG { static float area ( float a ) { if ( a < 0 ) return - 1 ; float area = ( float ) Math . sqrt ( a ) / 6 ; return area ; } public static void main ( String [ ] args ) { float a = 10 ; System . out . println ( area ( a ) ) ; } }",
            "python_code": "from math import * NEWLINE def area ( a ) : NEWLINE INDENT if a < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = sqrt ( a ) / 6 NEWLINE return area NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 10 NEWLINE print ( round ( area ( a ) , 6 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_981_A_1384",
            "java_code": "import java . util . * ; public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "s = input ( ) c = len ( s ) for i in range ( len ( s ) - 1 , 0 , - 1 ) : k = s [ 0 : i + 1 ] if ( k != k [ : : - 1 ] ) : print ( c ) exit ( ) c -= 1 if ( c == 1 ) : print ( \"0\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_443_A_1385",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;   String s = in . nextLine ( ) ;  s = s . replace ( \"{\" , \"\" ) . replace ( \"}\" , \"\" ) . replace ( \" \" , \"\" ) ; long a = Arrays . stream ( s . split ( \",\" ) ) . distinct ( ) . filter ( c -> ! c . isEmpty ( ) ) . count ( ) ; System . out . println ( a ) ; } }",
            "python_code": "letters = list ( map ( str , input ( ) ) ) c = set ( ) for letter in letters : if letter . isalpha ( ) : c . add ( letter ) print ( len ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1985_A_1386",
            "java_code": "import java . io . * ; class GFG { static void print ( int n , int k ) { int rem = 1 ; for ( int i = 0 ; i < k ; i ++ ) { System . out . print ( ( 10 * rem ) / n ) ; rem = ( 10 * rem ) % n ; } } public static void main ( String [ ] args ) { int n = 7 , k = 3 ; print ( n , k ) ; System . out . println ( ) ; n = 21 ; k = 4 ; print ( n , k ) ; } }",
            "python_code": "import math NEWLINE def Print ( n , k ) : NEWLINE INDENT rem = 1 NEWLINE for i in range ( 0 , k ) : NEWLINE INDENTINDENT print ( math . floor ( ( ( 10 * rem ) / n ) ) , end = \"\" ) NEWLINE rem = ( 10 * rem ) % n NEWLINE DEDENT DEDENT n = 7 NEWLINE k = 3 NEWLINE Print ( n , k ) ; NEWLINE print ( \" \" ) NEWLINE n = 21 NEWLINE k = 4 NEWLINE Print ( n , k ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2747_A_1387",
            "java_code": "class GFG { static void printValueOfPi ( int N ) { double pi = 2 * Math . acos ( 0.0 ) ; System . out . println ( pi ) ; } public static void main ( String [ ] args ) { int N = 4 ; printValueOfPi ( N ) ; } }",
            "python_code": "from math import acos NEWLINE def printValueOfPi ( N ) : NEWLINE INDENT pi = round ( 2 * acos ( 0.0 ) , N ) ; NEWLINE print ( pi ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 ; NEWLINE printValueOfPi ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4490_A_1388",
            "java_code": "class GFG { static int countUnsetBits ( int n ) { int x = n ; n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; return Integer . bitCount ( x ^ n ) ; } public static void main ( String [ ] args ) { int n = 17 ; System . out . println ( countUnsetBits ( n ) ) ; } }",
            "python_code": "import math NEWLINE def countUnsetBits ( n ) : NEWLINE INDENT x = n NEWLINE n |= n >> 1 NEWLINE n |= n >> 2 NEWLINE n |= n >> 4 NEWLINE n |= n >> 8 NEWLINE n |= n >> 16 NEWLINE t = math . log ( x ^ n , 2 ) NEWLINE return math . floor ( t ) NEWLINE DEDENT n = 17 NEWLINE print ( countUnsetBits ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3712_A_1389",
            "java_code": "class GFG { static int findExtra ( int arr1 [ ] , int arr2 [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( arr1 [ i ] != arr2 [ i ] ) return i ; return n ; } public static void main ( String [ ] args ) { int arr1 [ ] = { 2 , 4 , 6 , 8 , 10 , 12 , 13 } ; int arr2 [ ] = { 2 , 4 , 6 , 8 , 10 , 12 } ; int n = arr2 . length ; System . out . println ( findExtra ( arr1 , arr2 , n ) ) ; } }",
            "python_code": "def findExtra ( arr1 , arr2 , n ) : NEWLINE INDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( arr1 [ i ] != arr2 [ i ] ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return n NEWLINE DEDENT arr1 = [ 2 , 4 , 6 , 8 , 10 , 12 , 13 ] NEWLINE arr2 = [ 2 , 4 , 6 , 8 , 10 , 12 ] NEWLINE n = len ( arr2 ) NEWLINE print ( findExtra ( arr1 , arr2 , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1216_A_1390",
            "java_code": "class GFG { static double areaCircle ( double b ) { double area = ( double ) 3.1415926 * b * b ; return area ; } public static void main ( String args [ ] ) { float a = 10 , b = 8 ; System . out . println ( areaCircle ( b ) ) ; } }",
            "python_code": "import math NEWLINE def areaCircle ( b ) : NEWLINE INDENT area = math . pi * b * b NEWLINE return area NEWLINE DEDENT a = 10 NEWLINE b = 8 NEWLINE print ( areaCircle ( b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_105_A_1391",
            "java_code": "import java . io . * ; import java . util . * ;  public class practice105a { public static void main ( String [ ] args ) throws Exception {",
            "python_code": "from collections import Counter  n , m , k = input ( ) . split ( )  k , c = int ( k . split ( '.' ) [ 1 ] ) , Counter ( )  for i in range ( int ( n ) ) :  s , e = input ( ) . split ( )  e = int ( e ) * k // 100  if e >= 100 :  c [ s ] = e  for i in range ( int ( m ) ) :  c [ input ( ) ] += 0  print ( len ( c ) )  print ( '\\n' . join ( sorted ( x + ' ' + str ( c [ x ] ) for x in c ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3132_A_1392",
            "java_code": "class GFG { static int reversDigits ( int num ) { int rev_num = 0 ; while ( num > 0 ) { rev_num = rev_num * 10 + num % 10 ; num = num / 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( \"Reverse of no. is \" + reversDigits ( num ) ) ; } }",
            "python_code": "n = 4562 ; NEWLINE rev = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENT a = n % 10 NEWLINE rev = rev * 10 + a NEWLINE n = n // 10 NEWLINE DEDENT print ( rev ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4278_A_1393",
            "java_code": "import java . util . * ; class GFG { public static int repUnitValue ( int n ) { if ( n % 2 == 0 || n % 5 == 0 ) return 0 ; int rem = 1 ; int power = 1 ; int k = 1 ; while ( rem % n != 0 ) { k ++ ; power = power * 10 % n ; rem = ( rem + power ) % n ; } return k ; } public static void main ( String [ ] args ) { int n = 13 ; System . out . println ( repUnitValue ( n ) ) ; } }",
            "python_code": "def repUnitValue ( n ) : NEWLINE INDENT if ( n % 2 == 0 or n % 5 == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT rem = 1 NEWLINE power = 1 NEWLINE k = 1 NEWLINE while ( rem % n != 0 ) : NEWLINE INDENTINDENT k += 1 NEWLINE power = power * 10 % n NEWLINE rem = ( rem + power ) % n NEWLINE DEDENT return k NEWLINE DEDENT n = 13 NEWLINE print ( repUnitValue ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3994_A_1394",
            "java_code": "class Test { static int factorial ( int n ) { int res = 1 , i ; for ( i = 2 ; i <= n ; i ++ ) res *= i ; return res ; } public static void main ( String [ ] args ) { int num = 5 ; System . out . println ( \"Factorial of \" + num + \" is \" + factorial ( 5 ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT res *= i NEWLINE DEDENT return res NEWLINE DEDENT num = 5 ; NEWLINE print ( \"Factorial of\" , num , \"is\" , factorial ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_236_A_1395",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ;  String s1 = sc . next ( ) ; char [ ] a = s1 . toCharArray ( ) ; int len = a . length ;  HashSet < Character > set = new HashSet < Character > ( ) ; int count = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( ! set . contains ( a [ i ] ) ) { set . add ( a [ i ] ) ; count ++ ; } }",
            "python_code": "s = input ( ) n = len ( set ( list ( s ) ) )  if ( n % 2 == 0 ) : print ( \"CHAT WITH HER!\" ) else : print ( \"IGNORE HIM!\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_574_A_1396",
            "java_code": "public static int count ( int S [ ] , int m , int n ) { int table [ ] = new int [ n + 1 ] ; table [ 0 ] = 1 ; for ( int i = 0 ; i < m ; i ++ ) for ( int j = S [ i ] ; j <= n ; j ++ ) table [ j ] += table [ j - S [ i ] ] ; return table [ n ] ; }",
            "python_code": "def count ( S , m , n ) : NEWLINE INDENT table = [ 0 for k in range ( n + 1 ) ] NEWLINE table [ 0 ] = 1 NEWLINE for i in range ( 0 , m ) : NEWLINE INDENTINDENT for j in range ( S [ i ] , n + 1 ) : NEWLINE INDENTINDENTINDENT table [ j ] += table [ j - S [ i ] ] NEWLINE DEDENT DEDENT return table [ n ] NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE m = len ( arr ) NEWLINE n = 4 NEWLINE x = count ( arr , m , n ) NEWLINE print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1816_A_1397",
            "java_code": "class GFG { static int onesComplement ( int n ) { int number_of_bits = ( int ) ( Math . floor ( Math . log ( n ) / Math . log ( 2 ) ) ) + 1 ; return ( ( 1 << number_of_bits ) - 1 ) ^ n ; } public static void main ( String [ ] args ) { int n = 22 ; System . out . print ( onesComplement ( n ) ) ; } }",
            "python_code": "import math NEWLINE def onesComplement ( n ) : NEWLINE INDENT number_of_bits = ( int ) ( math . floor ( math . log ( n ) / math . log ( 2 ) ) ) + 1 ; NEWLINE return ( ( 1 << number_of_bits ) - 1 ) ^ n ; NEWLINE DEDENT n = 22 NEWLINE print ( onesComplement ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4578_A_1398",
            "java_code": "import java . io . * ; class GFG { static int maxSum ( int arr [ ] , int n ) { if ( n < 2 ) return - 1 ; int ans = arr [ 0 ] + arr [ 1 ] ; for ( int i = 1 ; i + 1 < n ; i ++ ) ans = Math . min ( ans , ( arr [ i ] + arr [ i + 1 ] ) ) ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 12 , 2 , 2 } ; int n = arr . length ; System . out . println ( maxSum ( arr , n ) ) ; } }",
            "python_code": "def maxSum ( arr , n ) : NEWLINE INDENT if ( n < 2 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT ans = arr [ 0 ] + arr [ 1 ] NEWLINE for i in range ( 1 , n - 1 , 1 ) : NEWLINE INDENTINDENT ans = min ( ans , ( arr [ i ] + arr [ i + 1 ] ) ) NEWLINE DEDENT return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 1 , 12 , 2 , 2 ] NEWLINE n = len ( arr ) NEWLINE print ( maxSum ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_268_B_1399",
            "java_code": "import java . util . Scanner ;  public class _0609Buttons {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = n ; int y = 1 ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += x * y ; x -- ; y ++ ; } n -- ; sum -= ( n * ( n + 1 ) ) / 2 ; System . out . println ( sum ) ; }  }",
            "python_code": "n = int ( input ( ) ) P = 0  for i in range ( n - 1 ) : P += ( n - i - 1 ) * ( i + 1 )   print ( P + n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1194_A_1400",
            "java_code": "import java . util . Scanner ;  public class RemoveaProgression { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ; while ( t -- > 0 ) { int n = scan . nextInt ( ) ; int k = scan . nextInt ( ) ; System . out . println ( k * 2 ) ; } } }",
            "python_code": "n = int ( input ( ) ) while n > 0 : n = n - 1 a , b = map ( int , input ( ) . split ( ) ) print ( b * 2 )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4016_A_1401",
            "java_code": "import java . io . * ; class GFG { static int factorial ( int f ) { int fact = 1 ; for ( int i = 2 ; i <= f ; i ++ ) fact *= ( int ) i ; return fact ; } static int findPermutation ( int N , int M ) { int permutation = factorial ( N + M - 1 ) / ( factorial ( N ) * factorial ( M - 1 ) ) ; return permutation ; } public static void main ( String [ ] args ) { int N = 3 , M = 3 ; System . out . println ( findPermutation ( N , M ) ) ; } }",
            "python_code": "def factorial ( f ) : NEWLINE INDENT fact = 1 NEWLINE for i in range ( 2 , f + 1 ) : NEWLINE INDENTINDENT fact *= i NEWLINE DEDENT return fact NEWLINE DEDENT def findPermuatation ( N , M ) : NEWLINE INDENT permutation = ( factorial ( N + M - 1 ) // ( factorial ( N ) * factorial ( M - 1 ) ) ) NEWLINE return permutation NEWLINE DEDENT N = 3 ; M = 3 NEWLINE print ( findPermuatation ( N , M ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1291_A_1402",
            "java_code": "class Test { static int countDigit ( int n ) { int temp = n , count = 0 ; while ( temp != 0 ) { int d = temp % 10 ; temp /= 10 ; if ( d > 0 && n % d == 0 ) count ++ ; } return count ; } public static void main ( String args [ ] ) { int n = 1012 ; System . out . println ( countDigit ( n ) ) ; } }",
            "python_code": "def countDigit ( n ) : NEWLINE INDENT temp = n NEWLINE count = 0 NEWLINE while temp != 0 : NEWLINE INDENTINDENT d = temp % 10 NEWLINE temp /= 10 NEWLINE if d > 0 and n % d == 0 : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT n = 1012 NEWLINE print ( countDigit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_189_B_1403",
            "java_code": "import java . util . * ;   public class Main { private static Scanner in = new Scanner ( System . in ) ;  public static void main ( String [ ] args ) {",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) x = x ** 2 y = y ** 2 ans = ( x // 4 ) * ( y // 4 )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2636_A_1404",
            "java_code": "import java . io . * ; class GFG { static int seriesFunc ( int n ) { int sumSquare = ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; int sumNatural = ( n * ( n + 1 ) / 2 ) ; return ( sumSquare + sumNatural + 1 ) ; } public static void main ( String args [ ] ) { int n = 8 ; System . out . println ( seriesFunc ( n ) ) ; n = 13 ; System . out . println ( seriesFunc ( 13 ) ) ; } }",
            "python_code": "def seriesFunc ( n ) : NEWLINE INDENT sumSquare = ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 NEWLINE sumNatural = ( n * ( n + 1 ) / 2 ) NEWLINE return ( sumSquare + sumNatural + 1 ) NEWLINE DEDENT n = 8 NEWLINE print ( int ( seriesFunc ( n ) ) ) NEWLINE n = 13 NEWLINE print ( int ( seriesFunc ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_122_B_1405",
            "java_code": "import java . util . Scanner ;  public class LuckySubstring { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; int a4 = 0 , a7 = 0 , i ; in . close ( ) ;  for ( i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) == '4' ) a4 ++ ; if ( s . charAt ( i ) == '7' ) a7 ++ ; } System . out . println ( a4 + a7 > 0 ? a4 >= a7 ? 4 : 7 : - 1 ) ; } }",
            "python_code": "n = ( input ( ) ) a = b = 0 a = n . count ( '4' ) b = n . count ( '7' ) if a == 0 and b == 0 : print ( - 1 ) elif a == b : print ( 4 ) elif a == 0 and b == 0 : print ( - 1 ) else : if a > b : print ( 4 ) else : print ( 7 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_379_A_1406",
            "java_code": "import java . io . * ; ",
            "python_code": "c = 0 n , a = map ( int , input ( ) . split ( ) ) p = nwhile ( n >= a ) : b = n % a n = n // a c = c + n n = n + bprint ( p + c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1047_B_1407",
            "java_code": "import java . util . * ;  public class coverpoints { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int sum = scan . nextInt ( ) + scan . nextInt ( ) ; if ( sum > max ) max = sum ; } System . out . println ( max ) ; } }",
            "python_code": "m = 0 n = int ( input ( ) ) for _ in range ( n ) : m = max ( m , sum ( map ( int , input ( ) . split ( ) ) ) ) print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_454_B_1408",
            "java_code": "import java . util . * ;  public class LittlePonyAndSortByShift_B {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( '' ) ) x = list ( map ( int , input ( ) . split ( ) ) ) if ( x == sorted ( x ) ) : print ( '0' ) else : for i in range ( 0 , len ( x ) ) : if ( x [ i ] > x [ i + 1 ] ) : c = i break b = x [ c + 1 : ] c = b + x [ : c + 1 ] if ( c == sorted ( x ) ) : print ( len ( b ) ) else : print ( '-1' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_509_A_1409",
            "java_code": "import java . util . Scanner ;  public class Codeforces {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int size = sc . nextInt ( ) ; int [ ] ans = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { for ( int j = 0 ; j < size ; j ++ ) { if ( j == 0 ) { ans [ j ] = 1 ; } else { ans [ j ] += ans [ j - 1 ] ; } } } System . out . println ( ans [ size - 1 ] ) ; } }",
            "python_code": "size_of_table = int ( input ( ) ) mat = [ [ 1 for x in range ( size_of_table ) ] for y in range ( size_of_table ) ] for i in range ( 1 , size_of_table ) : for j in range ( 1 , size_of_table ) : mat [ i ] [ j ] = mat [ i - 1 ] [ j ] + mat [ i ] [ j - 1 ] print ( mat [ size_of_table - 1 ] [ size_of_table - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_670_A_1410",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int x1 = ( n / 7 ) * 2 ; int x2 = ( n / 7 ) * 2 ; x1 += Math . min ( 2 , n % 7 ) ; x2 += Math . max ( 0 , ( n % 7 ) - 5 ) ; System . out . println ( x2 + \" \" + x1 ) ; }  }",
            "python_code": "n = int ( input ( ) ) mx = n // 7 * 2 + min ( n % 7 , 2 ) mn = n // 7 * 2 + max ( n % 7 - 5 , 0 )  print ( mn , mx )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_617_B_1411",
            "java_code": "import java . util . Scanner ; import java . util . Stack ;  public class Chocolate {  static Scanner scanner = new Scanner ( System . in ) ; static int n , testCases ; static void solve ( ) { n = scanner . nextInt ( ) ; int total = 0 ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = scanner . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 1 ) { total ++ ; } } if ( total == 0 ) {",
            "python_code": "n = int ( input ( ) ) a = [ int ( x ) for x in input ( ) . split ( ) ] first = Falseans , cur = 1 , 0 for e in a : if first : if not e : cur += 1 else : ans *= cur + 1 cur = 0 elif e : first = Trueif ans == 1 and not first : ans = 0 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_71_A_1412",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; sc . nextLine ( ) ; for ( int i = 2 ; i <= k + 1 ; i ++ ) { String na = sc . nextLine ( ) ; int l = na . length ( ) ; if ( na . length ( ) > 10 ) { na = na . charAt ( 0 ) + String . valueOf ( l - 2 ) + na . charAt ( na . length ( ) - 1 ) ; } System . out . println ( na ) ; } } }",
            "python_code": "l = [ ] NEWLINE n = int ( input ( \"\" ) ) NEWLINE for i in range ( n ) : x = input ( \"\" ) NEWLINE l . append ( x ) NEWLINE for i in l : if NEWLINE len ( i ) <= 10 : print ( i ) else : s = \"\" NEWLINE s = s + i [ 0 ] NEWLINE s = s + str ( len ( i ) - 2 ) NEWLINE s = s + i [ len ( i ) - 1 ] NEWLINE print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2055_A_1413",
            "java_code": "import java . io . * ; class ring { public static boolean checkcircle ( int r , int R , int r1 , int x1 , int y1 ) { int dis = ( int ) Math . sqrt ( x1 * x1 + y1 * y1 ) ; return ( dis - r1 >= R && dis + r1 <= r ) ; } public static void main ( String args [ ] ) { int r = 8 , R = 4 , r1 = 2 , x1 = 6 , y1 = 0 ; if ( checkcircle ( r , R , r1 , x1 , y1 ) ) System . out . println ( \"yes\" ) ; else System . out . println ( \"no\" ) ; } }",
            "python_code": "import math NEWLINE def checkcircle ( r , R , r1 , x1 , y1 ) : NEWLINE INDENT dis = int ( math . sqrt ( x1 * x1 + y1 * y1 ) ) NEWLINE return ( dis - r1 >= R and dis + r1 <= r ) NEWLINE DEDENT r = 8 ; R = 4 ; r1 = 2 ; x1 = 6 ; y1 = 0 NEWLINE if ( checkcircle ( r , R , r1 , x1 , y1 ) ) : NEWLINE INDENT print ( \"yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"no\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_158_B_1414",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "a = [ * open ( 0 ) ] [ 1 ] . count ; print ( a ( '4' ) + a ( '3' ) + ( a ( '2' ) * 2 + max ( 0 , a ( '1' ) - a ( '3' ) ) + 3 ) // 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4488_A_1415",
            "java_code": "import java . io . * ; class GFG { static void pairwiseProduct ( int [ ] arr , int n ) { int prod = 1 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { prod = arr [ i ] * arr [ i + 1 ] ; System . out . print ( prod + \" \" ) ; } } public static void main ( String [ ] args ) { int [ ] arr = { 4 , 10 , 15 , 5 , 6 } ; int n = arr . length ; pairwiseProduct ( arr , n ) ; } }",
            "python_code": "def pairwiseProduct ( arr , n ) : NEWLINE INDENT prod = 1 NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENT prod = arr [ i ] * arr [ i + 1 ] NEWLINE print ( prod , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 4 , 10 , 15 , 5 , 6 ] NEWLINE n = len ( arr ) NEWLINE pairwiseProduct ( arr , n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2935_A_1416",
            "java_code": "import java . math . * ; class GFG { public static int findGCD ( int a , int b ) { if ( b == 0 ) return a ; else return findGCD ( b , a % b ) ; } static void findNumbers ( int a , int b ) { int gcd = findGCD ( a , b ) ; System . out . println ( ( a / gcd ) + \" \" + ( b / gcd ) ) ; } public static void main ( String [ ] args ) { int a = 12 , b = 16 ; findNumbers ( a , b ) ; } }",
            "python_code": "from math import gcd NEWLINE def findNumbers ( a , b ) : NEWLINE INDENT __gcd = gcd ( a , b ) ; NEWLINE print ( ( a // __gcd ) , ( b // __gcd ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 12 ; b = 16 ; NEWLINE findNumbers ( a , b ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1487_B_1417",
            "java_code": "import java . util . * ; public class CodeForces1487B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = input . nextInt ( ) ; int k = input . nextInt ( ) - 1 ; if ( n % 2 == 0 ) { System . out . println ( ( k % n ) + 1 ) ; } else { int m = k / ( n / 2 ) ; System . out . println ( ( k + m ) % n + 1 ) ; } } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : n , t , = [ * map ( int , s . split ( ) ) ] ; t -= 1 ; print ( ( t + ( n & 1 ) * t // ( n // 2 ) ) % n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_172_B_1418",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . List ; import java . util . Map ; import java . util . StringTokenizer ;  public class Gym { ",
            "python_code": "a , b , m , r = map ( int , input ( ) . split ( ) ) d = { } i = 1 while 1 : r = ( a * r + b ) % m ; t = d . get ( r , 0 ) if t : i -= t ; break d [ r ] = i ; i += 1 print ( ) print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4082_A_1419",
            "java_code": "import java . io . * ; class GFG { static int numberOfSolutions ( int n ) { int c = 0 ; while ( n > 0 ) { c += n % 2 ; n /= 2 ; } return ( int ) Math . pow ( 2 , c ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( numberOfSolutions ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def numberOfSolutions ( n ) : NEWLINE INDENT c = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT c += n % 2 NEWLINE n //= 2 NEWLINE DEDENT return int ( pow ( 2 , c ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( numberOfSolutions ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_507_A_1420",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ;  public class cp { static BufferedReader br ; static StringTokenizer st ;  public static void main ( String [ ] args ) throws IOException {  br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; List < Integer > answer = new ArrayList < Integer > ( ) ; ",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) arr = sorted ( list ( zip ( range ( n ) , ( map ( int , input ( ) . split ( ) ) ) ) ) , key = lambda x : x [ 1 ] ) ans = [ ] i = 0 while k - arr [ i ] [ 1 ] >= 0 : k -= arr [ i ] [ 1 ] ans . append ( arr [ i ] [ 0 ] + 1 ) i += 1 if i == n : breakprint ( len ( ans ) ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1321_A_1421",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main {   public static void main ( String [ ] args ) throws IOException { int n = sc . nextInt ( ) ; int [ ] r = sc . nextIntArr ( n ) ; int [ ] b = sc . nextIntArr ( n ) ; int R = 0 , B = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( r [ i ] != b [ i ] ) { if ( r [ i ] == 1 ) R ++ ; else B ++ ; } }",
            "python_code": "n = int ( input ( ) ) X = list ( map ( int , input ( ) . split ( ) ) ) Y = list ( map ( int , input ( ) . split ( ) ) ) a = 0 b = 0 for i in range ( n ) : a += X [ i ] > Y [ i ] b += X [ i ] < Y [ i ] if a == 0 : print ( - 1 ) else : print ( b // a + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1179_A_1422",
            "java_code": "   import java . io . * ; import java . util . * ; import java . math . BigInteger ; import java . lang . Object ;   public class Main { static class sort implements Comparator < int [ ] > { public int compare ( int [ ] a , int [ ] b ) {",
            "python_code": "from collections import dequeif __name__ == '__main__' : n , q = map ( int , input ( ) . split ( ' ' ) ) arr = list ( map ( int , input ( ) . split ( ' ' ) ) ) dq = deque ( arr ) m = max ( arr ) lst = [ ] while dq [ 0 ] != m : a = dq . popleft ( ) b = dq . popleft ( ) lst . append ( [ a , b ] ) dq . append ( min ( a , b ) ) dq . appendleft ( max ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_151_A_1423",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n , k , l , c , d , p , nl , np = map ( int , input ( ) . split ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3452_A_1424",
            "java_code": "import java . io . * ; class GFG { static float trianglearea ( float r ) { if ( r < 0 ) return - 1 ; return r * r ; } public static void main ( String [ ] args ) { float r = 5 ; System . out . println ( trianglearea ( r ) ) ; } }",
            "python_code": "def trianglearea ( r ) : NEWLINE INDENT if r < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return r * r NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r = 5 NEWLINE print ( trianglearea ( r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4063_A_1425",
            "java_code": "import java . io . * ; class GFG { static int factorial ( int n ) { int res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) res = res * i ; return res ; } static int calculateSeries ( int n ) { return factorial ( n + 1 ) - 1 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( calculateSeries ( n ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT res = res * i NEWLINE DEDENT return res NEWLINE DEDENT def calculateSeries ( n ) : NEWLINE INDENT return factorial ( n + 1 ) - 1 NEWLINE DEDENT n = 3 NEWLINE print ( calculateSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_614_A_1426",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = true ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 2e9 ;",
            "python_code": "l , r , k = map ( int , input ( ) . split ( ) ) p = 1 while p < l : p = p * klis = [ ] while p >= l and p <= r : lis . append ( p ) p = p * kif not lis : print ( - 1 ) else : for i in lis : print ( i , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1238_A_1427",
            "java_code": "import java . util . * ; public class Training { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; for ( int q = 0 ; q < t ; q ++ ) { long x = in . nextLong ( ) ; long y = in . nextLong ( ) ; long diff = x - y ; if ( diff == 1 ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : x , y = map ( int , input ( ) . split ( ) ) if ( x - y > 1 ) : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1260_B_1428",
            "java_code": "import java . util . * ;  public class CodeForces1260B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = input . nextInt ( ) ; int b = input . nextInt ( ) ;  if ( Math . min ( a , b ) * 2 >= Math . max ( a , b ) && ( a + b ) % 3 == 0 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } } }",
            "python_code": "import sysimport mathfrom collections import defaultdict , Counter , deque  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1691_A_1429",
            "java_code": "class GFG { static int reversDigits ( int num ) { int rev_num = 0 ; while ( num > 0 ) { rev_num = rev_num * 10 + num % 10 ; num = num / 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( \"Reverse of no. is \" + reversDigits ( num ) ) ; } }",
            "python_code": "n = 4562 ; NEWLINE rev = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENT a = n % 10 NEWLINE rev = rev * 10 + a NEWLINE n = n // 10 NEWLINE DEDENT print ( rev ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_630_B_1430",
            "java_code": " import java . util . Scanner ;  public class b { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; System . out . println ( scan . nextDouble ( ) * Math . pow ( 1.000000011 , scan . nextDouble ( ) ) ) ; } }",
            "python_code": "n , t = map ( int , input ( ) . split ( ) ) print ( n * ( 1.000000011 ** t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_706_A_1431",
            "java_code": "import java . util . Scanner ;   public class Main { public static void main ( String [ ] args ) {",
            "python_code": "import mathc = input ( ) . split ( ) x1 , y1 = int ( c [ 0 ] ) , int ( c [ 1 ] ) n = int ( input ( ) ) d = [ ] for i in range ( n ) : c = [ int ( i ) for i in input ( ) . split ( ) ] distance = math . sqrt ( ( c [ 0 ] - x1 ) ** 2 + ( c [ 1 ] - y1 ) ** 2 ) / c [ 2 ] d . append ( distance ) print ( min ( d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_755_B_1432",
            "java_code": " import java . util . * ; import java . io . * ; import java . math . * ;  public class Practice { static FastReader sc = new FastReader ( ) ; static int mod = ( int ) Math . pow ( 10 , 9 ) + 7 ; public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = { input ( ) for x in range ( n ) } b = { input ( ) for y in range ( m ) } t = n + m - len ( a | b ) print ( 'YES' if n + t % 2 > m else 'NO' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_876_B_1433",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_898_A_1434",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) {  Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; System . out . println ( ( n % 10 < 5 ) ? n / 10 * 10 : ( n / 10 + 1 ) * 10 ) ; } }",
            "python_code": "try : n = int ( input ( ) ) if ( n % 10 < 6 ) : print ( n - n % 10 ) else : print ( n + ( 10 - n % 10 ) ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_677_A_1435",
            "java_code": "import java . util . * ; public class Vanya { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int f = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; int count , sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= f ) count = 1 ; else count = 2 ; sum += count ; } System . out . println ( sum ) ; } }",
            "python_code": "h = int ( input ( ) . split ( ) [ 1 ] ) h_s = input ( ) . split ( ) print ( sum ( [ ( int ( int ( i ) > h ) + 1 ) for i in h_s ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2335_A_1436",
            "java_code": "import java . util . * ; class GFG { static String find_number ( int N , int K ) { String r ; if ( N % 100 == 0 ) { N += 1 ; r = String . valueOf ( N ) ; } else { r = String . valueOf ( N ) ; } for ( int i = 1 ; i <= K ; i ++ ) r += \"00\" ; return r ; } public static void main ( String [ ] args ) { int N = 1000 , K = 2 ; String ans = find_number ( N , K ) ; System . out . println ( ans ) ; } }",
            "python_code": "def find_number ( N , K ) : NEWLINE INDENT r = \"\" NEWLINE if ( N % 100 == 0 ) : NEWLINE INDENTINDENT N += 1 ; NEWLINE r = str ( N ) NEWLINE DEDENT else : NEWLINE INDENTINDENT r = str ( N ) NEWLINE DEDENT for i in range ( 1 , K + 1 ) : NEWLINE INDENTINDENT r += \"00\" NEWLINE DEDENT return r NEWLINE DEDENT N = 1000 NEWLINE K = 2 ; NEWLINE ans = find_number ( N , K ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5027_A_1437",
            "java_code": "import java . io . * ; class GFG { static double PI = ( 3.14159 / 180 ) ; static float areaOfKite ( int a , int b , double angle ) { angle = angle * PI ; double area = a * b * Math . sin ( angle ) ; return ( float ) area ; } public static void main ( String [ ] args ) { int a = 4 , b = 7 , angle = 78 ; System . out . println ( \"Area of Kite = \" + areaOfKite ( a , b , angle ) ) ; } }",
            "python_code": "import math NEWLINE PI = 3.14159 / 180 ; NEWLINE def areaOfKite ( a , b , angle ) : NEWLINE INDENT angle = angle * PI ; NEWLINE area = a * b * math . sin ( angle ) ; NEWLINE return area ; NEWLINE DEDENT a = 4 ; b = 7 ; angle = 78 ; NEWLINE print ( \"Area of Kite = \" , areaOfKite ( a , b , angle ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_214_A_1438",
            "java_code": "import java . util . Scanner ;  public class SystemofEquations { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int m = scanner . nextInt ( ) ; int a = ( int ) Math . max ( Math . sqrt ( n ) , Math . sqrt ( m ) ) ; int b = Math . max ( m , n ) - ( int ) Math . pow ( a , 2 ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) count = 0 a = 0 while a ** 2 <= n : b = n - a ** 2 if b >= 0 and a + b ** 2 == m : count += 1 a += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1140_B_1439",
            "java_code": "import java . util . * ; import java . io . * ; public class EdE { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) s = input ( ) ind1 = - 1 ind2 = - 1 g = l = 0 for i in range ( n ) : if s [ i ] == '>' : if ind1 == - 1 : ind1 = i + 1 g += 1 else : ind2 = i l += 1 if ind1 == - 1 : ind1 = n if ind2 == - 1 : ind2 = n ans = min ( s [ : ind1 ] . count ( '<' ) , s [ ind2 : ] . count ( '>' ) , g , l ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1106_A_1440",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sys  def main ( ) : n , * s = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) c , t = 0 , [ ( - 1 , 1 ) , ( - 1 , - 1 ) , ( 1 , 1 ) , ( 1 , - 1 ) , ( 0 , 0 ) ] for i in range ( 1 , int ( n ) - 1 ) : for j in range ( 1 , int ( n ) - 1 ) : c += all ( s [ i + m ] [ j + n ] == 'X' for m , n in t ) return c print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1678_A_1441",
            "java_code": "import java . io . * ; class GFG { static int findevenPair ( int [ ] A , int N ) { int i , j ; int evenPair = 0 ; for ( i = 0 ; i < N ; i ++ ) { for ( j = i + 1 ; j < N ; j ++ ) { if ( ( A [ i ] & A [ j ] ) % 2 == 0 ) evenPair ++ ; } } return evenPair ; } public static void main ( String [ ] args ) { int [ ] a = { 5 , 1 , 3 , 2 } ; int n = a . length ; System . out . println ( findevenPair ( a , n ) ) ; } }",
            "python_code": "def findevenPair ( A , N ) : NEWLINE INDENT evenPair = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT for j in range ( i + 1 , N ) : NEWLINE INDENTINDENTINDENT if ( ( A [ i ] & A [ j ] ) % 2 == 0 ) : NEWLINE INDENTINDENTINDENTINDENT evenPair += 1 NEWLINE DEDENT DEDENT DEDENT return evenPair NEWLINE DEDENT a = [ 5 , 1 , 3 , 2 ] NEWLINE n = len ( a ) NEWLINE print ( findevenPair ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_841_A_1442",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import string  a , b = map ( int , input ( ) . split ( ) ) s = input ( )  f = Truefor i in string . ascii_lowercase : if s . count ( i ) > b : f = False break   if f : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1745_A_1443",
            "java_code": "import java . io . * ; public class GFG { static int totalNumber ( int n ) { return 8 * ( int ) Math . pow ( 9 , n - 1 ) ; } static public void main ( String [ ] args ) { int n = 3 ; System . out . println ( totalNumber ( n ) ) ; } }",
            "python_code": "def totalNumber ( n ) : NEWLINE INDENT return 8 * pow ( 9 , n - 1 ) ; NEWLINE DEDENT n = 3 NEWLINE print ( totalNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3255_A_1444",
            "java_code": "import java . util . * ; class Triangle { public static int numberOfTriangles ( int n ) { int [ ] answer = new int [ n + 1 ] ; answer [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) answer [ i ] = answer [ i - 1 ] * 3 + 2 ; return answer [ n ] ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( numberOfTriangles ( n ) ) ; } }",
            "python_code": "def numberOfTriangles ( n ) : NEWLINE INDENT answer = [ None ] * ( n + 1 ) ; NEWLINE answer [ 0 ] = 1 ; NEWLINE i = 1 NEWLINE while i <= n : NEWLINE INDENTINDENT answer [ i ] = answer [ i - 1 ] * 3 + 2 ; NEWLINE i = i + 1 NEWLINE DEDENT return answer [ n ] ; NEWLINE DEDENT n = 2 NEWLINE print ( numberOfTriangles ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_709_A_1445",
            "java_code": "import java . util . Scanner ;  public class juicer {  public static void main ( String [ ] args ) {",
            "python_code": "a , b , d = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  ans = 0 bin = 0 for n in arr : if n <= b : bin += n if bin > d : ans += 1 bin = 0  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2446_A_1446",
            "java_code": "public class GFG { static long answer ( long n ) { long m = 2 ; long ans = 1 ; long r = 1 ; while ( r < n ) { r = ( ( long ) Math . pow ( 2 , m ) - 1 ) * ( ( long ) Math . pow ( 2 , m - 1 ) ) ; if ( r < n ) ans = r ; m ++ ; } return ans ; } public static void main ( String args [ ] ) { long n = 7 ; System . out . println ( answer ( n ) ) ; } }",
            "python_code": "import math NEWLINE def answer ( n ) : NEWLINE INDENT m = 2 ; NEWLINE ans = 1 ; NEWLINE r = 1 ; NEWLINE while r < n : NEWLINE INDENTINDENT r = ( int ) ( ( pow ( 2 , m ) - 1 ) * ( pow ( 2 , m - 1 ) ) ) ; NEWLINE if r < n : NEWLINE INDENTINDENTINDENT ans = r ; NEWLINE DEDENT m = m + 1 ; NEWLINE DEDENT return ans ; NEWLINE DEDENT print ( answer ( 7 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3326_A_1447",
            "java_code": "import java . io . * ; class GFG { static int maxPartitions ( int arr [ ] , int n ) { int ans = 0 , max_so_far = 0 ; for ( int i = 0 ; i < n ; ++ i ) { max_so_far = Math . max ( max_so_far , arr [ i ] ) ; if ( max_so_far == i ) ans ++ ; } return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 0 , 2 , 3 , 4 } ; int n = arr . length ; System . out . println ( maxPartitions ( arr , n ) ) ; } }",
            "python_code": "def maxPartitions ( arr , n ) : NEWLINE INDENT ans = 0 ; max_so_far = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT max_so_far = max ( max_so_far , arr [ i ] ) NEWLINE if ( max_so_far == i ) : NEWLINE INDENTINDENTINDENT ans += 1 NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 1 , 0 , 2 , 3 , 4 ] NEWLINE n = len ( arr ) NEWLINE print ( maxPartitions ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_453_A_1448",
            "java_code": "class GFG { static int count ( int n , int x ) { int count = 0 ; for ( int i = 1 ; i <= n && i <= x ; i ++ ) { if ( x / i <= n && x % i == 0 ) count ++ ; } return count ; } public static void main ( String args [ ] ) { int n = 8 ; int x = 24 ; System . out . println ( count ( n , x ) ) ; } }",
            "python_code": "def count ( n , x ) : NEWLINE INDENT cnt = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if i <= x : NEWLINE INDENTINDENTINDENT if x // i <= n and x % i == 0 : NEWLINE INDENTINDENTINDENTINDENT cnt += 1 NEWLINE DEDENT DEDENT DEDENT return cnt NEWLINE DEDENT n = 8 NEWLINE x = 24 NEWLINE print ( count ( n , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_952_A_1449",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) print ( n % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_879_A_1450",
            "java_code": "import java . util . Scanner ;  public class BoryaDiagnosis { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i , l = 0 , o = 0 ;  for ( i = 0 ; i < n ; i ++ ) { int s = in . nextInt ( ) , d = in . nextInt ( ) ; while ( s <= l ) s += d ; o += s - l ; l = s ; } in . close ( ) ; System . out . println ( o ) ; } }",
            "python_code": "n = int ( input ( ) ) now = 0 for i in range ( n ) : s , d = map ( int , input ( ) . split ( ) ) now = max ( now + 1 , s ) now = ( now + d - 1 - s ) // d * d + sprint ( now ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_242_B_1451",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n = int ( input ( ) ) l = [ ] r = [ ] for i in range ( n ) : s , e = map ( int , input ( ) . split ( ) ) l . append ( s ) r . append ( e ) mn = l [ 0 ] mx = r [ 0 ]  for i in range ( n ) : if ( l [ i ] < mn ) : mn = l [ i ] if r [ i ] > mx : mx = r [ i ] flag = 1 p = 0 for i in range ( n ) : if l [ i ] <= mn and r [ i ] >= mx : p = i + 1 flag = 0 if flag == 0 : print ( p ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2337_A_1452",
            "java_code": "import java . io . * ; class GFG { static int squareSum ( int n ) { return 2 * n * ( n + 1 ) * ( 2 * n + 1 ) / 3 ; } public static void main ( String args [ ] ) throws IOException { System . out . println ( squareSum ( 8 ) ) ; } }",
            "python_code": "def squareSum ( n ) : NEWLINE INDENT return int ( 2 * n * ( n + 1 ) * ( 2 * n + 1 ) / 3 ) NEWLINE DEDENT ans = squareSum ( 8 ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_B_1453",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "from collections import defaultdict  for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE b = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE d = defaultdict ( int ) NEWLINE for x in b : d [ x ] += 1 NEWLINE ok = False NEWLINE for v in d . values ( ) : if NEWLINE v > 1 : ok = True NEWLINE break NEWLINE print ( \"YES\" if ok else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1214_A_1454",
            "java_code": "import java . io . * ; class GFG { static double PI = 3.14 ; static double circle_inscribed ( int a ) { return PI * ( a * a ) / 12 ; } public static void main ( String [ ] args ) { int a = 4 ; System . out . println ( circle_inscribed ( a ) ) ; } }",
            "python_code": "from math import pi NEWLINE def circle_inscribed ( a ) : NEWLINE INDENT return pi * ( a * a ) / 12 NEWLINE DEDENT a = 4 NEWLINE print ( circle_inscribed ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_705_A_1455",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ;  for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 0 ) System . out . print ( \"I love \" ) ; else System . out . print ( \"I hate \" ) ; if ( i == n ) System . out . print ( \"it\" ) ; else System . out . print ( \"that \" ) ; } } }",
            "python_code": "print ( * ( [ 'I hate' , 'I love' ] * 50 ) [ : int ( input ( ) ) ] , sep = ' that ' , end = ' it' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1427_A_1456",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ;  public class problem82 {  public static void main ( String [ ] args ) {",
            "python_code": "cases = int ( input ( ) ) NEWLINE while cases : cases -= 1 NEWLINE num = int ( input ( ) ) NEWLINE arr = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE summ = sum ( arr ) NEWLINE if summ == 0 : NEWLINE INDENT print ( \"NO\" ) elif summ < 0 : NEWLINE ans = sorted ( arr ) NEWLINE DEDENT print ( \"YES\" ) NEWLINE print ( * ans ) else : ans = sorted ( arr , reverse = True ) NEWLINE print ( \"YES\" ) NEWLINE print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_263_A_1457",
            "java_code": "class GFG { static void perfectCube ( int N ) { int cube ; for ( int i = 0 ; i <= N ; i ++ ) { cube = i * i * i ; if ( cube == N ) { System . out . println ( \"Yes\" ) ; return ; } else if ( cube > N ) { System . out . println ( \"NO\" ) ; return ; } } } public static void main ( String [ ] args ) { int N = 216 ; perfectCube ( N ) ; } }",
            "python_code": "def perfectCube ( N ) : NEWLINE INDENT cube = 0 ; NEWLINE for i in range ( N + 1 ) : NEWLINE INDENTINDENT cube = i * i * i ; NEWLINE if ( cube == N ) : NEWLINE INDENTINDENTINDENT print ( \"Yes\" ) ; NEWLINE return ; NEWLINE DEDENT elif ( cube > N ) : NEWLINE INDENTINDENTINDENT print ( \"NO\" ) ; NEWLINE return ; NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 216 ; NEWLINE perfectCube ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1133_A_1458",
            "java_code": "class GFG { static int lagDuration ( int h1 , int m1 , int h2 , int m2 , int k ) { int lag , t1 , t2 ; t1 = ( h1 + k ) * 60 + m1 ; t2 = h2 * 60 + m2 ; lag = t1 - t2 ; return lag ; } public static void main ( String args [ ] ) { int h1 = 12 , m1 = 0 ; int h2 = 12 , m2 = 58 ; int k = 1 ; int lag = lagDuration ( h1 , m1 , h2 , m2 , k ) ; System . out . println ( \"Lag = \" + lag + \" minutes\" ) ; } }",
            "python_code": "def lagDuration ( h1 , m1 , h2 , m2 , k ) : NEWLINE INDENT lag , t1 , t2 = 0 , 0 , 0 NEWLINE t1 = ( h1 + k ) * 60 + m1 NEWLINE t2 = h2 * 60 + m2 NEWLINE lag = t1 - t2 NEWLINE return lag NEWLINE DEDENT h1 , m1 = 12 , 0 NEWLINE h2 , m2 = 12 , 58 NEWLINE k = 1 NEWLINE lag = lagDuration ( h1 , m1 , h2 , m2 , k ) NEWLINE print ( \"Lag =\" , lag , \"minutes\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_717_A_1459",
            "java_code": "class GFG { static void findpair ( int l , int r ) { int ans1 = l ; int ans2 = 2 * l ; System . out . println ( ans1 + \", \" + ans2 ) ; } public static void main ( String args [ ] ) { int l = 1 , r = 10 ; findpair ( l , r ) ; } }",
            "python_code": "def findpair ( l , r ) : NEWLINE INDENT ans1 = l NEWLINE ans2 = 2 * l NEWLINE print ( ans1 , \", \" , ans2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT l , r = 1 , 10 NEWLINE findpair ( l , r ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1369_A_1460",
            "java_code": "import java . util . Scanner ;  public class A1369 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; if ( n % 4 == 0 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } } } ",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : a = int ( input ( ) ) if a % 4 == 0 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_282_B_1461",
            "java_code": "import java . util . * ;  public class PaintingEggs_B {  public static void main ( String [ ] args ) {",
            "python_code": "import sysinput = sys . stdin . readlinea , g = 0 , 0 for _ in range ( int ( input ( ) ) ) : r = input ( ) . split ( ) r [ 0 ] = int ( r [ 0 ] ) r [ 1 ] = int ( r [ 1 ] ) if abs ( a + r [ 0 ] - g ) <= 500 : a += r [ 0 ] sys . stdout . write ( \"A\" ) else : g += r [ 1 ] sys . stdout . write ( \"G\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_847_A_1462",
            "java_code": "import java . util . * ; import java . io . * ; public class EdB {  public static void main ( String [ ] args ) throws Exception { int num = 998244353 ; ",
            "python_code": "if __name__ == '__main__' : n = int ( input ( ) ) arr = [ [ 0 , 0 ] ] for i in range ( n ) : arr . append ( list ( map ( int , input ( ) . split ( ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2591_A_1463",
            "java_code": "class GFG { static int Subtract ( int a , int b ) { int c ; c = a + ( ~ b + 1 ) ; return c ; } public static void main ( String [ ] args ) { int a = 2 , b = 3 ; System . out . println ( Subtract ( a , b ) ) ; a = 9 ; b = 7 ; System . out . println ( Subtract ( a , b ) ) ; } }",
            "python_code": "def Subtract ( a , b ) : NEWLINE INDENT c = a + ( ~ b + 1 ) NEWLINE return c NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b = 2 , 3 NEWLINE print ( Subtract ( a , b ) ) NEWLINE a , b = 9 , 7 NEWLINE print ( Subtract ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1237_B_1464",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class Main { PrintWriter out ; FastReader sc ; long mod = ( long ) ( 1e9 + 7 ) ; long maxlong = Long . MAX_VALUE ; long minlong = Long . MIN_VALUE ; public void sol ( ) { int n = ni ( ) ; int [ ] c = new int [ n ] , d = new int [ n ] ;",
            "python_code": "n = int ( input ( ) ) first = list ( input ( ) . strip ( ) . split ( ) ) second = list ( input ( ) . strip ( ) . split ( ) ) toDict = dict ( zip ( second , range ( n ) ) ) bef , aft = 0 , 0 for item in first : if toDict . get ( item ) >= aft : aft = toDict . get ( item ) continue bef += 1  print ( bef ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1343_A_1465",
            "java_code": "import java . util . Scanner ;  public class Candies {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t > 0 ) { System . out . println ( solve ( sc ) ) ; t -- ; }  }  private static int solve ( Scanner sc ) { int n = sc . nextInt ( ) ; int a = 3 ; for ( int i = 2 ; ; i ++ ) { int x = n / a ; if ( x * a == n ) return x ; a = a + ( int ) Math . pow ( 2 , i ) ; } }  }",
            "python_code": "cs = int ( input ( ) ) while cs : cs -= 1 cx = int ( input ( ) ) for iv in range ( 2 , 36 ) : one = 2 ** iv - 1 if cx % one == 0 : rt = cx // one break print ( rt ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4312_A_1466",
            "java_code": "class GFG { static void printPattern ( int n ) { int t ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = i ; j < n ; j ++ ) System . out . print ( \"\\t\" ) ; t = i ; for ( int k = 1 ; k <= i ; k ++ ) { System . out . print ( t + \"\\t\\t\" ) ; t = t + n - k ; } System . out . println ( ) ; } } public static void main ( String [ ] args ) { int n = 6 ; printPattern ( n ) ; } }",
            "python_code": "def printPattern ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT for j in range ( i , n ) : NEWLINE INDENTINDENTINDENT print ( \"\\t\" , end = \"\" ) NEWLINE DEDENT t = i NEWLINE for k in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT print ( t , \"\\t\" , \"\\t\" , end = \"\" ) NEWLINE t = t + n - k NEWLINE DEDENT print ( ) NEWLINE DEDENT DEDENT n = 6 NEWLINE printPattern ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1348_B_1467",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from sys import stdin , stdoutinput = stdin . readline def main ( ) : t = int ( input ( ) ) for i in range ( t ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3637_A_1468",
            "java_code": "public class GFG { static long countMaxIntersect ( long n ) { return ( n ) * ( n - 1 ) / 2 ; } public static void main ( String args [ ] ) { long n = 8 ; System . out . println ( countMaxIntersect ( n ) ) ; } }",
            "python_code": "def countMaxIntersect ( n ) : NEWLINE INDENT return int ( n * ( n - 1 ) / 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 8 NEWLINE print ( countMaxIntersect ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1258_A_1469",
            "java_code": "class GFG { static void findTriangles ( int n ) { int num ; num = n * ( n - 4 ) ; System . out . println ( num ) ; } public static void main ( String [ ] args ) { int n ; n = 6 ; findTriangles ( n ) ; } }",
            "python_code": "def findTriangles ( n ) : NEWLINE INDENT num = n * ( n - 4 ) NEWLINE print ( num ) NEWLINE DEDENT n = 6 NEWLINE findTriangles ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2657_A_1470",
            "java_code": "class GFG { static int __gcd ( int a , int b ) { return b == 0 ? a : __gcd ( b , a % b ) ; } static int digitGCD ( int n ) { int gcd = 0 ; while ( n > 0 ) { gcd = __gcd ( n % 10 , gcd ) ; if ( gcd == 1 ) return 1 ; n = n / 10 ; } return gcd ; } public static void main ( String [ ] args ) { int n = 2448 ; System . out . print ( digitGCD ( n ) ) ; } }",
            "python_code": "def __gcd ( a , b ) : NEWLINE INDENT return a if ( b == 0 ) else __gcd ( b , a % b ) NEWLINE DEDENT def digitGCD ( n ) : NEWLINE INDENT gcd = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT gcd = __gcd ( n % 10 , gcd ) NEWLINE if ( gcd == 1 ) : NEWLINE INDENTINDENTINDENT return 1 NEWLINE DEDENT n = n // 10 NEWLINE DEDENT return gcd NEWLINE DEDENT n = 2448 NEWLINE print ( digitGCD ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_22_A_1471",
            "java_code": "import java . io . * ; class GFG { static int leonardo ( int n ) { int dp [ ] = new int [ n + 1 ] ; dp [ 0 ] = dp [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) dp [ i ] = dp [ i - 1 ] + dp [ i - 2 ] + 1 ; return dp [ n ] ; } public static void main ( String [ ] args ) { System . out . println ( leonardo ( 3 ) ) ; } }",
            "python_code": "def leonardo ( n ) : NEWLINE INDENT dp = [ ] ; NEWLINE dp . append ( 1 ) ; NEWLINE dp . append ( 1 ) ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT dp . append ( dp [ i - 1 ] + dp [ i - 2 ] + 1 ) ; NEWLINE DEDENT return dp [ n ] ; NEWLINE DEDENT print ( leonardo ( 3 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4275_A_1472",
            "java_code": "import java . io . * ; public class GFG { static void vowelOrConsonant ( char x ) { if ( x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u' ) System . out . println ( \"Vowel\" ) ; else System . out . println ( \"Consonant\" ) ; } static public void main ( String [ ] args ) { vowelOrConsonant ( 'c' ) ; vowelOrConsonant ( 'e' ) ; } }",
            "python_code": "def vowelOrConsonant ( x ) : NEWLINE INDENT if ( x == 'a' or x == 'e' or x == 'i' or x == 'o' or x == 'u' ) : NEWLINE INDENTINDENT print ( \"Vowel\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"Consonant\" ) NEWLINE DEDENT DEDENT vowelOrConsonant ( 'c' ) NEWLINE vowelOrConsonant ( 'e' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_794_A_1473",
            "java_code": "import java . util . Scanner ;  public class BankRobbery { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; long a = in . nextLong ( ) , b = in . nextLong ( ) , c = in . nextLong ( ) , t = 0 ; int n = in . nextInt ( ) , i ;  for ( i = 0 ; i < n ; i ++ ) { long x = in . nextLong ( ) ; if ( x > b && x < c ) { t ++ ; } } in . close ( ) ; System . out . println ( t ) ; } }",
            "python_code": "s = input ( ) p = s . split ( ) a = int ( p [ 0 ] ) b = int ( p [ 1 ] ) c = int ( p [ 2 ] ) f = input ( ) ans = [ ] notes = [ int ( i ) for i in input ( ) . split ( ) ] for i in notes : i = int ( i ) if i > b and i < c : ans . append ( i ) print ( len ( ans ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_456_A_1474",
            "java_code": "import java . util . ArrayList ; import java . util . Collection ; import java . util . Collections ; import java . util . Comparator ; import java . util . Scanner ;  public class laptop { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "import sys , functools , collections , bisect , math , heapqinput = sys . stdin . readline NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_175_A_1475",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String input = sc . nextLine ( ) ; sc . close ( ) ;",
            "python_code": "s = input ( ) n = len ( s ) maxi = - 1 for i in range ( n - 2 ) : for j in range ( i + 1 , n - 1 ) : a , b , c = s [ : i + 1 ] , s [ i + 1 : j + 1 ] , s [ j + 1 : ] if len ( a ) == len ( str ( int ( a ) ) ) and len ( b ) == len ( str ( int ( b ) ) ) and len ( c ) == len ( str ( int ( c ) ) ) : if int ( a ) <= 1e6 and int ( b ) <= 1e6 and int ( c ) <= 1e6 : maxi = max ( maxi , int ( a ) + int ( b ) + int ( c ) ) print ( maxi ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_591_A_1476",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner S = new Scanner ( System . in ) ; int i = S . nextInt ( ) ; int v1 = S . nextInt ( ) ; int v2 = S . nextInt ( ) ;  System . out . println ( i / ( Float . parseFloat ( String . valueOf ( v2 ) ) / v1 + 1 ) ) ; } }",
            "python_code": "l = int ( input ( ) ) p = int ( input ( ) ) q = int ( input ( ) ) c = p / ( p + q ) print ( c * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2414_A_1477",
            "java_code": "import java . io . * ; class GFG { static int rev ( int n , int temp ) { if ( n == 0 ) return temp ; temp = ( temp * 10 ) + ( n % 10 ) ; return rev ( n / 10 , temp ) ; } public static void main ( String [ ] args ) { int n = 121 ; int temp = rev ( n , 0 ) ; if ( temp == n ) System . out . println ( \"yes\" ) ; else System . out . println ( \"no\" ) ; } }",
            "python_code": "def rev ( n , temp ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return temp ; NEWLINE DEDENT temp = ( temp * 10 ) + ( n % 10 ) ; NEWLINE return rev ( n / 10 , temp ) ; NEWLINE DEDENT n = 121 ; NEWLINE temp = rev ( n , 0 ) ; NEWLINE if ( temp != n ) : NEWLINE INDENT print ( \"yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"no\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_617_A_1478",
            "java_code": "import java . util . Scanner ;  public class Elephant { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ;  int res = 0 ; for ( int i = 5 ; i >= 1 ; i -- ) { res += n / i ; n = n % i ; }  System . out . println ( res ) ; } }",
            "python_code": "a = int ( input ( \"\" ) ) if a % 5 == 0 : print ( a // 5 ) else : print ( a // 5 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2259_A_1479",
            "java_code": "class Solution { static int smallestOdd ( int n ) { if ( n == 1 ) return 0 ; return Math . pow ( 10 , n - 1 ) + 1 ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( smallestOdd ( n ) ) ; } }",
            "python_code": "def smallestOdd ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return pow ( 10 , n - 1 ) + 1 NEWLINE DEDENT n = 4 NEWLINE print ( smallestOdd ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1287_A_1480",
            "java_code": "import java . util . * ;  public class Practice {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) for q in range ( t ) : n = int ( input ( ) ) s = input ( ) c = 0 while \"AP\" in s : s = s . replace ( \"AP\" , \"AA\" ) c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_233_A_1481",
            "java_code": "import java . io . * ; import java . util . * ; public class MyClass { public static void main ( String args [ ] ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ;",
            "python_code": "import sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2551_A_1482",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { int side = 4 ; System . out . print ( \"Volume of dodecahedron = \" ) ; System . out . println ( vol_of_dodecahedron ( side ) ) ; } static double vol_of_dodecahedron ( int side ) { return ( ( ( 15 + ( 7 * ( Math . sqrt ( 5 ) ) ) ) / 4 ) * ( Math . pow ( side , 3 ) ) ) ; } }",
            "python_code": "import math NEWLINE def vol_of_dodecahedron ( side ) : NEWLINE INDENT return ( ( ( 15 + ( 7 * ( math . sqrt ( 5 ) ) ) ) / 4 ) * ( math . pow ( side , 3 ) ) ) NEWLINE DEDENT side = 4 NEWLINE print ( \"Volume of dodecahedron =\" , round ( vol_of_dodecahedron ( side ) , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_748_A_1483",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) )  total = n * m * 2   per_lane = m * 2  lane = ( k + per_lane - 1 ) // per_lane  new_k = k % per_laneif new_k == 0 : new_k = per_lane  side = Noneif new_k % 2 == 0 : side = \"R\" row = new_k // 2 else : side = \"L\" row = new_k // 2 + 1  print ( lane , row , side )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4243_A_1484",
            "java_code": "class GFG { static int triplets ( int N ) { return ( ( N + 1 ) * ( N + 2 ) ) / 2 ; } public static void main ( String [ ] args ) { int N = 50 ; System . out . println ( triplets ( N ) ) ; } }",
            "python_code": "def triplets ( N ) : NEWLINE INDENT return ( ( N + 1 ) * ( N + 2 ) ) // 2 ; NEWLINE DEDENT N = 50 ; NEWLINE print ( triplets ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4567_A_1485",
            "java_code": "import java . io . * ; class GFG { static int factorial ( int n ) { return ( n == 1 || n == 0 ) ? 1 : n * factorial ( n - 1 ) ; } public static void main ( String [ ] args ) { int num = 5 ; System . out . println ( \"Factorial of \" + num + \" is \" + factorial ( num ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT return 1 if ( n == 1 or n == 0 ) else n * factorial ( n - 1 ) ; NEWLINE DEDENT num = 5 ; NEWLINE print ( \"Factorial of\" , num , \"is\" , factorial ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_176_A_1486",
            "java_code": "class GFG { static double area_of_circle ( int m , int n ) { int square_of_radius = ( m * n ) / 4 ; double area = ( 3.141 * square_of_radius ) ; return area ; } public static void main ( String [ ] args ) { int n = 10 ; int m = 30 ; System . out . println ( area_of_circle ( m , n ) ) ; } }",
            "python_code": "def area_of_circle ( m , n ) : NEWLINE INDENT square_of_radius = ( m * n ) / 4 NEWLINE area = ( 3.141 * square_of_radius ) NEWLINE return area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE m = 30 NEWLINE print ( area_of_circle ( m , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2264_A_1487",
            "java_code": "class MaxSum { static int maxSumLCM ( int n ) { int max_sum = 0 ; for ( int i = 1 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) { max_sum += i ; if ( n / i != i ) max_sum += ( n / i ) ; } } return max_sum ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( maxSumLCM ( n ) ) ; } }",
            "python_code": "def maxSumLCM ( n ) : NEWLINE INDENT max_sum = 0 NEWLINE i = 1 NEWLINE while ( i * i <= n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT max_sum = max_sum + i NEWLINE if ( n // i != i ) : NEWLINE INDENTINDENTINDENTINDENT max_sum = max_sum + ( n // i ) NEWLINE DEDENT DEDENT i = i + 1 NEWLINE DEDENT return max_sum NEWLINE DEDENT n = 2 NEWLINE print ( maxSumLCM ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_281_A_1488",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . next ( ) ; String ans = str . substring ( 0 , 1 ) . toUpperCase ( ) + str . substring ( 1 ) ; System . out . println ( ans ) ; } }",
            "python_code": "s = input ( ) print ( '' + s [ 0 ] . upper ( ) + s [ 1 : ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3997_A_1489",
            "java_code": "class CatalnNumber { int catalan ( int n ) { int res = 0 ; if ( n <= 1 ) { return 1 ; } for ( int i = 0 ; i < n ; i ++ ) { res += catalan ( i ) * catalan ( n - i - 1 ) ; } return res ; } public static void main ( String [ ] args ) { CatalnNumber cn = new CatalnNumber ( ) ; for ( int i = 0 ; i < 10 ; i ++ ) { System . out . print ( cn . catalan ( i ) + \" \" ) ; } } }",
            "python_code": "def catalan ( n ) : NEWLINE INDENT if n <= 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT res = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT res += catalan ( i ) * catalan ( n - i - 1 ) NEWLINE DEDENT return res NEWLINE DEDENT for i in range ( 10 ) : NEWLINE INDENT print catalan ( i ) , NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_270_B_1490",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Reader pm = new Reader ( ) ;",
            "python_code": "n = int ( input ( ) ) old_pos = list ( map ( int , input ( ) . split ( ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_732_A_1491",
            "java_code": "import java . util . Scanner ;  public class A732 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int k = scanner . nextInt ( ) , r = scanner . nextInt ( ) ;  for ( int i = 1 ; ; i ++ ) { if ( i * k % 10 == 0 || i * k % 10 == r ) { System . out . println ( i ) ; break ; } } } }",
            "python_code": "a , b = ( int ( i ) for i in input ( ) . split ( ) ) k = 1 c = awhile a % 10 != 0 and a % 10 != b : k += 1 a = c * kprint ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3317_A_1492",
            "java_code": "import java . util . * ; class GFG { static int minimumflip ( int mat [ ] [ ] , int n ) { int flip = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = 0 ; j < i ; j ++ ) if ( mat [ i ] [ j ] != mat [ j ] [ i ] ) flip ++ ; return flip ; } public static void main ( String [ ] args ) { int n = 3 ; int mat [ ] [ ] = { { 0 , 0 , 1 } , { 1 , 1 , 1 } , { 1 , 0 , 0 } } ; System . out . println ( minimumflip ( mat , n ) ) ; } }",
            "python_code": "N = 3 NEWLINE def minimumflip ( mat , n ) : NEWLINE INDENT flip = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i ) : NEWLINE INDENTINDENTINDENT if mat [ i ] [ j ] != mat [ j ] [ i ] : NEWLINE INDENTINDENTINDENTINDENT flip += 1 NEWLINE DEDENT DEDENT DEDENT return flip NEWLINE DEDENT n = 3 NEWLINE mat = [ [ 0 , 0 , 1 ] , [ 1 , 1 , 1 ] , [ 1 , 0 , 0 ] ] NEWLINE print ( minimumflip ( mat , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2429_A_1493",
            "java_code": "import java . io . * ; class GFG { public static int sum ( int N ) { int S1 , S2 , S3 ; S1 = ( ( N / 2 ) ) * ( 2 * 2 + ( N / 2 - 1 ) * 2 ) / 2 ; S2 = ( ( N / 7 ) ) * ( 2 * 7 + ( N / 7 - 1 ) * 7 ) / 2 ; S3 = ( ( N / 14 ) ) * ( 2 * 14 + ( N / 14 - 1 ) * 14 ) / 2 ; return S1 + S2 - S3 ; } public static void main ( String [ ] args ) { int N = 20 ; System . out . println ( sum ( N ) ) ; } }",
            "python_code": "def sum ( N ) : NEWLINE INDENT S1 = ( ( N // 2 ) ) * ( 2 * 2 + ( N // 2 - 1 ) * 2 ) // 2 NEWLINE S2 = ( ( N // 7 ) ) * ( 2 * 7 + ( N // 7 - 1 ) * 7 ) // 2 NEWLINE S3 = ( ( N // 14 ) ) * ( 2 * 14 + ( N // 14 - 1 ) * 14 ) // 2 NEWLINE return S1 + S2 - S3 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 20 NEWLINE print ( sum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4072_A_1494",
            "java_code": "import java . io . * ; class GFG { static void midpoint ( int x1 , int x2 , int y1 , int y2 ) { System . out . print ( ( x1 + x2 ) / 2 + \" , \" + ( y1 + y2 ) / 2 ) ; } public static void main ( String [ ] args ) { int x1 = - 1 , y1 = 2 ; int x2 = 3 , y2 = - 6 ; midpoint ( x1 , x2 , y1 , y2 ) ; } }",
            "python_code": "def midpoint ( x1 , x2 , y1 , y2 ) : NEWLINE INDENT print ( ( x1 + x2 ) // 2 , \" , \" , ( y1 + y2 ) // 2 ) NEWLINE DEDENT x1 , y1 , x2 , y2 = - 1 , 2 , 3 , - 6 NEWLINE midpoint ( x1 , x2 , y1 , y2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1186_A_1495",
            "java_code": "  import java . util . Scanner ;  public class VusTheCossackAndContest {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int z = sc . nextInt ( ) ; if ( x > y || x > z ) { System . out . println ( \"NO\" ) ; } else { System . out . println ( \"YES\" ) ; } } }",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) if m >= n and k >= n : print ( 'Yes' ) else : print ( 'No' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_766_A_1496",
            "java_code": "import java . util . Scanner ;  public class JavaApplication1 {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; String a = input . next ( ) ; String b = input . next ( ) ; if ( a . equals ( b ) ) System . out . println ( - 1 ) ; else System . out . println ( Math . max ( a . length ( ) , b . length ( ) ) ) ; input . close ( ) ; }  }",
            "python_code": "\"\"\" Created by Henrikh Kantuni on 2/7/17 \"\"\"  a = input ( ) b = input ( ) ans = - 1 if a == b else max ( len ( a ) , len ( b ) ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4008_A_1497",
            "java_code": "class GFG { static void swap ( int xp , int yp ) { if ( xp == yp ) return ; xp = xp + yp ; yp = xp - yp ; xp = xp - yp ; } public static void main ( String [ ] args ) { int x = 10 ; swap ( x , x ) ; System . out . println ( \"After swap(&x, &x): x = \" + x ) ; } }",
            "python_code": "def swap ( xp , yp ) : NEWLINE INDENT if ( xp [ 0 ] == yp [ 0 ] ) : NEWLINE INDENTINDENT return NEWLINE DEDENT xp [ 0 ] = xp [ 0 ] + yp [ 0 ] NEWLINE yp [ 0 ] = xp [ 0 ] - yp [ 0 ] NEWLINE xp [ 0 ] = xp [ 0 ] - yp [ 0 ] NEWLINE DEDENT x = [ 10 ] NEWLINE swap ( x , x ) NEWLINE print ( \"After swap(&x, &x): x = \" , x [ 0 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_584_B_1498",
            "java_code": "import java . util . Scanner ;  public class CF584_D2_B { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) * 3 ; long ans = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { ans *= 3 ; ans = ans % 1000000007 ; } long m = 1 ; for ( int i = 0 ; i < n / 3 ; i ++ ) { m *= 7 ; m = m % 1000000007 ; } System . out . println ( ( ans - m + 1000000007 ) % 1000000007 ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( ( ( 3 ** ( 3 * n ) ) - 7 ** n ) % 1000000007 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_625_B_1499",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) t = input ( ) print ( s . count ( t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_821_A_1500",
            "java_code": "class GFG { static double solve ( int s ) { double area = ( 1.732 * Math . pow ( s , 2 ) ) / 8 ; return area ; } public static void main ( String [ ] args ) { int n = 14 ; System . out . println ( solve ( n ) ) ; } }",
            "python_code": "def solve ( s ) : NEWLINE INDENT area = ( 1.732 * s ** 2 ) / 8 NEWLINE return area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 14 NEWLINE print ( solve ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_701_A_1501",
            "java_code": "class GfG { static long getTrailingZeroes ( long n ) { long count = 0 ; long val , powerTwo = 2 ; do { val = n / powerTwo ; count += val ; powerTwo *= 2 ; } while ( val != 0 ) ; return ( count / 4 ) ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( getTrailingZeroes ( n ) ) ; } }",
            "python_code": "def getTrailingZeroes ( n ) : NEWLINE INDENT count = 0 NEWLINE val , powerTwo = 1 , 2 NEWLINE while ( val != 0 ) : NEWLINE INDENTINDENT val = n // powerTwo NEWLINE count += val NEWLINE powerTwo *= 2 NEWLINE DEDENT return ( count // 4 ) NEWLINE DEDENT n = 6 NEWLINE print ( getTrailingZeroes ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1751_A_1502",
            "java_code": "import java . io . * ; class GFG { static int countUnmarked ( int N ) { if ( N % 2 == 0 ) return N / 2 ; else return N / 2 + 1 ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( \"Number of unmarked \" + \"elements: \" + countUnmarked ( N ) ) ; } }",
            "python_code": "def countUnmarked ( N ) : NEWLINE INDENT if ( N % 2 == 0 ) : NEWLINE INDENTINDENT return N / 2 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return N / 2 + 1 ; NEWLINE DEDENT DEDENT N = 4 ; NEWLINE print ( \"Number of unmarked elements:\" , int ( countUnmarked ( N ) ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_16_A_1503",
            "java_code": "import java . util . * ; class GFG { static boolean isDivisible ( int n ) { int d ; while ( ( n / 100 ) > 0 ) { d = n % 10 ; n /= 10 ; n = Math . abs ( n - ( d * 3 ) ) ; } return ( n % 31 == 0 ) ; } public static void main ( String [ ] args ) { int N = 1922 ; if ( isDivisible ( N ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while n // 100 : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n = abs ( n - ( d * 3 ) ) NEWLINE DEDENT return ( n % 31 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 1922 NEWLINE if ( isDivisible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_913_A_1504",
            "java_code": "import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ;  public class Solution { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( br . readLine ( ) ) ; int m = Integer . parseInt ( br . readLine ( ) ) ; System . out . println ( m % ( int ) Math . pow ( 2 , n ) ) ; } }",
            "python_code": "n = int ( input ( ) ) m = int ( input ( ) )  if n > 30 : print ( m ) else : ans = m % 2 ** n print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_962_B_1505",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) str = input ( ) ;  ans = 0 if a < b : c = a a = b b = c  tim = 1 for i in range ( n ) : if str [ i ] == '*' : if a < b : c = a a = b b = c tim = 1 else : if tim % 2 == 1 : if a > 0 : ans += 1 a -= 1 else : if b > 0 : ans += 1 b -= 1  tim += 1  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5007_A_1506",
            "java_code": "import java . io . * ; class GFG { static void MinimumValue ( int x , int y ) { if ( x > y ) { int temp = x ; x = y ; y = temp ; } int a = 1 ; int b = x - 1 ; int c = y - b ; System . out . print ( a + \" \" + b + \" \" + c ) ; } public static void main ( String [ ] args ) { int x = 123 , y = 13 ; MinimumValue ( x , y ) ; } }",
            "python_code": "def MinimumValue ( x , y ) : NEWLINE INDENT if ( x > y ) : NEWLINE INDENTINDENT x , y = y , x NEWLINE DEDENT a = 1 NEWLINE b = x - 1 NEWLINE c = y - b NEWLINE print ( a , b , c ) NEWLINE DEDENT x = 123 NEWLINE y = 13 NEWLINE MinimumValue ( x , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3392_A_1507",
            "java_code": "import java . util . * ; public class GFG { static void findWeights ( int X ) { int sum = 0 ; int power = 0 ; int number = 3 ; while ( sum < X ) { sum = number - 1 ; sum /= 2 ; power ++ ; number *= 3 ; } int ans = 1 ; for ( int i = 1 ; i <= power ; i ++ ) { System . out . print ( ans + \" \" ) ; ans = ans * 3 ; } } public static void main ( String [ ] args ) { int X = 2 ; findWeights ( X ) ; } }",
            "python_code": "def findWeights ( X ) : NEWLINE INDENT sum = 0 NEWLINE power = 0 NEWLINE while ( sum < X ) : NEWLINE INDENTINDENT sum = pow ( 3 , power + 1 ) - 1 NEWLINE sum //= 2 NEWLINE power += 1 NEWLINE DEDENT ans = 1 NEWLINE for i in range ( 1 , power + 1 ) : NEWLINE INDENTINDENT print ( ans , end = \" \" ) NEWLINE ans = ans * 3 NEWLINE DEDENT DEDENT X = 2 NEWLINE findWeights ( X ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_508_B_1508",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = list ( input ( ) ) m = - 1 for i , d in enumerate ( n ) : if int ( d ) % 2 == 0 : m = i if int ( d ) < int ( n [ - 1 ] ) : breakif m < 0 : print ( - 1 ) else : n [ - 1 ] , n [ m ] = n [ m ] , n [ - 1 ] print ( '' . join ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3433_A_1509",
            "java_code": "public static int count ( int S [ ] , int m , int n ) { int table [ ] = new int [ n + 1 ] ; table [ 0 ] = 1 ; for ( int i = 0 ; i < m ; i ++ ) for ( int j = S [ i ] ; j <= n ; j ++ ) table [ j ] += table [ j - S [ i ] ] ; return table [ n ] ; }",
            "python_code": "def count ( S , m , n ) : NEWLINE INDENT table = [ 0 for k in range ( n + 1 ) ] NEWLINE table [ 0 ] = 1 NEWLINE for i in range ( 0 , m ) : NEWLINE INDENTINDENT for j in range ( S [ i ] , n + 1 ) : NEWLINE INDENTINDENTINDENT table [ j ] += table [ j - S [ i ] ] NEWLINE DEDENT DEDENT return table [ n ] NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE m = len ( arr ) NEWLINE n = 4 NEWLINE x = count ( arr , m , n ) NEWLINE print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1401_B_1510",
            "java_code": "import java . util . * ; public class _1401B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) {  int x1 = sc . nextInt ( ) ; int y1 = sc . nextInt ( ) ; int z1 = sc . nextInt ( ) ;  int x2 = sc . nextInt ( ) ; int y2 = sc . nextInt ( ) ; int z2 = sc . nextInt ( ) ;  int res = 0 , score = 0 ;  score = Math . min ( z1 , y2 ) ;",
            "python_code": "cases = int ( input ( ) ) while cases : cases -= 1 zero , one , two = map ( int , input ( ) . split ( ) ) zero2 , one2 , two2 = map ( int , input ( ) . split ( ) )  ans = 0 two_mn = min ( two , one2 ) ans += ( two_mn * 2 )  one2 -= two_mn two -= two_mn  rem = two2 - ( two + zero )  ans -= max ( rem , 0 ) * 2  print ( ans )         NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_11_B_1511",
            "java_code": "import java . io . * ; import java . util . * ; public class Ishu { static Scanner scan = new Scanner ( System . in ) ; static void tc ( ) { long x = scan . nextLong ( ) ; long [ ] a = new long [ 100001 ] ; int i ; for ( i = 1 ; i <= 100000 ; ++ i ) a [ i ] = ( ( ( long ) ( i ) ) * ( i + 1 ) ) / 2 ; if ( x < 0 ) x *= ( - 1 ) ; int ans = 0 ; for ( i = 0 ; i < 100001 ; ++ i ) { if ( a [ i ] >= x ) { ans = i ; break ; } }",
            "python_code": "from math import sqrtx = abs ( int ( input ( ) ) ) a = int ( ( sqrt ( 1 + 8 * x ) - 1 ) / 2 ) print ( a + min ( 2 * x - a * ( a + 1 ) , ( ( a + 2 ) * ( a + 1 ) // 2 - x ) % 2 * 2 + 1 , ( ( a + 3 ) * ( a + 2 ) // 2 - x ) % 2 + 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1358_A_1512",
            "java_code": "import java . util . Scanner ;  public class A1358 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; int m = scanner . nextInt ( ) ; int exp = n * m ; if ( exp % 2 == 0 ) { System . out . println ( exp / 2 ) ; } else { System . out . println ( ( exp + 1 ) / 2 ) ; } } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) if ( n * m % 2 == 0 ) : print ( n * m // 2 ) else : print ( ( n * m - 1 ) // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1206_A_1513",
            "java_code": "import java . util . * ;  public class game2 { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) )  m = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) )  a . sort ( ) b . sort ( )  print ( str ( a [ len ( a ) - 1 ] ) + \" \" + str ( b [ len ( b ) - 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2148_A_1514",
            "java_code": "public class GFG { public static void main ( String args [ ] ) { String binaryNumber = \"1001\" ; System . out . println ( Integer . parseInt ( binaryNumber , 2 ) ) ; } }",
            "python_code": "n = input ( ) NEWLINE s = int ( n , 2 ) NEWLINE print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4818_A_1515",
            "java_code": "import java . io . * ; public class GFG { static int weightedMean ( int n ) { return ( 2 * n + 1 ) / 3 ; } static public void main ( String [ ] args ) { int n = 10 ; System . out . println ( weightedMean ( n ) ) ; } }",
            "python_code": "def weightedMean ( n ) : NEWLINE INDENT return ( 2 * n + 1 ) / 3 NEWLINE DEDENT n = 10 NEWLINE print ( int ( weightedMean ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_A_1516",
            "java_code": " import java . io . * ; import java . util . * ;     public class A {",
            "python_code": "inp = input ( ) nums = [ int ( i ) for i in inp . split ( ) ] temp = sum ( nums ) if temp == 0 : print ( '-1' ) elif temp % len ( nums ) == 0 : print ( int ( temp / len ( nums ) ) ) else : print ( '-1' )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_600_A_1517",
            "java_code": "import java . io . * ; import java . util . * ;   public class Main { public static Scanner in = new Scanner ( new BufferedReader ( new InputStreamReader ( System . in ) , 640000 ) ) ; public static PrintWriter out = new PrintWriter ( System . out ) ;   public static void solve ( ) { String s = in . next ( ) ; s += ';' ;   boolean isNumber = true ; boolean first = true ; boolean leadingZero = false ; StringBuilder part = new StringBuilder ( ) ;",
            "python_code": "a , b = [ ] , [ ] for s in input ( ) . replace ( ';' , ',' ) . split ( ',' ) : try : n = int ( s ) if ( n > 0 and s [ 0 ] != '0' ) or ( n == 0 and len ( s ) == 1 ) : a . append ( s ) else : b . append ( s ) except Exception : b . append ( s )  if a : print ( '\"' + ',' . join ( a ) + '\"' ) else : print ( '-' )  if b : print ( '\"' + ',' . join ( b ) + '\"' ) else : print ( '-' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1104_A_1518",
            "java_code": "import java . util . * ; import java . lang . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int s = 0 ; System . out . println ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) { System . out . print ( 1 + \" \" ) ;   } System . out . println ( ) ; } }",
            "python_code": "import sys  def main ( ) : n = int ( sys . stdin . read ( ) . strip ( ) ) for i in range ( 9 , 0 , - 1 ) : if not n % i : return n // i , ( n // i * f'{i} ' ) . strip ( )  print ( * main ( ) , sep = '\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4648_A_1519",
            "java_code": "import java . io . * ; class FibZero { static int findMinZero ( int p ) { int first = 1 , second = 1 , number = 2 , next = 1 ; while ( next > 0 ) { next = ( first + second ) % p ; first = second ; second = next ; number ++ ; } return number ; } public static void main ( String [ ] args ) { int p = 7 ; System . out . println ( \"Minimal zero is \" + findMinZero ( p ) ) ; } }",
            "python_code": "def findMinZero ( p ) : NEWLINE INDENT first = 1 NEWLINE second = 1 NEWLINE number = 2 NEWLINE next = 1 NEWLINE while ( next ) : NEWLINE INDENTINDENT next = ( first + second ) % p NEWLINE first = second NEWLINE second = next NEWLINE number = number + 1 NEWLINE DEDENT return number NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT p = 7 NEWLINE print ( \"Minimal zero is:\" , findMinZero ( p ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_261_A_1520",
            "java_code": "import java . io . * ; import java . util . * ; public class GFG { static int powerNumbers ( int n ) { HashSet < Integer > v = new HashSet < Integer > ( ) ; v . add ( 1 ) ; for ( int i = 2 ; i * i <= n ; i ++ ) { int j = i * i ; v . add ( j ) ; while ( j * i <= n ) { v . add ( j * i ) ; j = j * i ; } } return v . size ( ) ; } public static void main ( String args [ ] ) { System . out . print ( powerNumbers ( 50 ) ) ; } }",
            "python_code": "def powerNumbers ( n ) : NEWLINE INDENT v = set ( ) ; NEWLINE v . add ( 1 ) ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT if ( i * i <= n ) : NEWLINE INDENTINDENTINDENT j = i * i ; NEWLINE v . add ( j ) ; NEWLINE while ( j * i <= n ) : NEWLINE INDENTINDENTINDENTINDENT v . add ( j * i ) ; NEWLINE j = j * i ; NEWLINE DEDENT DEDENT DEDENT return len ( v ) ; NEWLINE DEDENT print ( powerNumbers ( 50 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1576_A_1521",
            "java_code": "class GFG { static int percent ( int a , int b ) { float result = 0 ; result = ( ( b - a ) * 100 ) / a ; return ( int ) result ; } public static void main ( String [ ] args ) { int a = 20 , b = 25 ; System . out . println ( percent ( a , b ) + \"%\" ) ; } }",
            "python_code": "def percent ( a , b ) : NEWLINE INDENT result = int ( ( ( b - a ) * 100 ) / a ) NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b = 20 , 25 NEWLINE print ( percent ( a , b ) , \"%\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1875_A_1522",
            "java_code": "import java . io . * ; class countSetBits { static int countSetBits ( int n ) { int count = 0 ; while ( n > 0 ) { n &= ( n - 1 ) ; count ++ ; } return count ; } public static void main ( String args [ ] ) { int i = 9 ; System . out . println ( countSetBits ( i ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT n &= ( n - 1 ) NEWLINE count += 1 NEWLINE DEDENT return count NEWLINE DEDENT i = 9 NEWLINE print ( countSetBits ( i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_977_A_1523",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long n = scanner . nextLong ( ) ; int k = scanner . nextInt ( ) ; long l = 0 ; while ( k -- != 0 ) { l = n % 10 ; if ( l == 0 ) { n = n / 10 ; } else { n = n - 1 ; } } System . out . println ( n ) ; } }",
            "python_code": "nums = list ( map ( int , input ( ) . split ( ) ) )  n = nums [ 0 ] k = nums [ 1 ] for i in range ( k ) : if n % 10 == 0 : n = n / 10 else : n = n - 1  print ( int ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_295_B_1524",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashSet ; import java . util . Scanner ; import java . util . StringTokenizer ;",
            "python_code": "import sysfrom functools import lru_cache , cmp_to_keyfrom heapq import merge , heapify , heappop , heappush NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_112_A_1525",
            "java_code": "import java . util . Scanner ;  public class T112A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String first = sc . next ( ) ; String second = sc . next ( ) ; if ( first . compareToIgnoreCase ( second ) == 0 ) { System . out . println ( \"0\" ) ; } else if ( first . compareToIgnoreCase ( second ) > 0 ) { System . out . println ( \"1\" ) ; } else { System . out . println ( \"-1\" ) ; }  } }",
            "python_code": "a = input ( ) . lower ( ) b = input ( ) . lower ( ) z = len ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_631_A_1526",
            "java_code": "import java . util . * ; import java . util . stream . * ; public class Solution { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int next ; int aSum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { next = scan . nextInt ( ) ; aSum |= next ; } int bSum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { next = scan . nextInt ( ) ; bSum |= next ; } System . out . println ( aSum + bSum ) ; } }",
            "python_code": "import sys   n = int ( sys . stdin . readline ( ) ) a = [ int ( x ) for x in sys . stdin . readline ( ) . strip ( ) . split ( ) ] b = [ int ( x ) for x in sys . stdin . readline ( ) . strip ( ) . split ( ) ] A = a [ 0 ] for x in a : A |= xB = b [ 0 ] for x in b : B |= x  print ( A + B ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_79_B_1527",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . lang . reflect . Array ; import java . nio . Buffer ; import java . util . Arrays ; import java . util . HashSet ; import java . util . Set ; import java . util . StringTokenizer ;  public class ColoredFields {  public static int floorSearch ( int arr [ ] , int low , int high , int x ) {  if ( low > high ) return - 1 ; ",
            "python_code": "n , m , k , t = map ( int , input ( ) . split ( \" \" ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_A_1528",
            "java_code": "import java . util . Scanner ; public class Test45 { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int inches = ( n + 1 ) / 3 ; int feet = inches / 12 ; System . out . println ( feet + \" \" + ( inches - 12 * feet ) ) ; } }",
            "python_code": "n = int ( input ( ) ) a = ( n + 1 ) // 36 n -= 36 * ab = ( n + 1 ) // 3 print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_401_A_1529",
            "java_code": "class Solution { public List < String > readBinaryWatch ( int num ) { List < String > times = new ArrayList < > ( ) ; for ( int h = 0 ; h < 12 ; h ++ ) for ( int m = 0 ; m < 60 ; m ++ ) if ( Integer . bitCount ( h * 64 + m ) == num ) times . add ( String . format ( \"%d:%02d\" , h , m ) ) ; return times ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def readBinaryWatch ( self , num ) : NEWLINE INDENTINDENT return [ '%d:%02d' % ( h , m ) for h in range ( 12 ) for m in range ( 60 ) if ( bin ( h ) + bin ( m ) ) . count ( '1' ) == num ] NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2572_A_1530",
            "java_code": "public class GFG { static int bridge_length ( int trainLength , int Speed , int Time ) { return ( ( Time * Speed ) - trainLength ) ; } public static void main ( String [ ] args ) { int trainLength = 120 ; int Speed = 30 ; int Time = 18 ; System . out . print ( \"Length of bridge = \" + bridge_length ( trainLength , Speed , Time ) + \" meters\" ) ; } }",
            "python_code": "def bridge_length ( trainLength , Speed , Time ) : NEWLINE INDENT return ( ( Time * Speed ) - trainLength ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT trainLength = 120 NEWLINE Speed = 30 NEWLINE Time = 18 NEWLINE print ( \"Length of bridge = \" , bridge_length ( trainLength , Speed , Time ) , \"meters\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1719_A_1531",
            "java_code": "import java . io . * ; class GFG { static long center_pentadecagonal_num ( long n ) { return ( 15 * n * n - 15 * n + 2 ) / 2 ; } public static void main ( String [ ] args ) { long n = 3 ; System . out . print ( n + \"th number : \" ) ; System . out . println ( center_pentadecagonal_num ( n ) ) ; n = 10 ; System . out . print ( n + \"th number : \" ) ; System . out . println ( center_pentadecagonal_num ( n ) ) ; } }",
            "python_code": "def center_pentadecagonal_num ( n ) : NEWLINE INDENT return ( 15 * n * n - 15 * n + 2 ) // 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( n , \"rd number : \" , center_pentadecagonal_num ( n ) ) NEWLINE n = 10 NEWLINE print ( n , \"th number : \" , center_pentadecagonal_num ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1780_A_1532",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { double n = 5 , a = 2 ; System . out . println ( sumOfSeries ( a , n ) ) ; } static double sumOfSeries ( double a , double n ) { double res = 0 , prev = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { prev *= ( a / i ) ; res = res + prev ; } return ( res ) ; } }",
            "python_code": "from __future__ import division NEWLINE def sumOfSeries ( a , num ) : NEWLINE INDENT res = 0 NEWLINE prev = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT prev *= ( a / i ) NEWLINE res = res + prev NEWLINE DEDENT return res NEWLINE DEDENT n = 5 NEWLINE a = 2 NEWLINE print ( round ( sumOfSeries ( a , n ) , 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1339_A_1533",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2367_A_1534",
            "java_code": "class GFG { static void Loss ( int SP , int P ) { float loss = 0 ; loss = ( float ) ( 2 * P * P * SP ) / ( 100 * 100 - P * P ) ; System . out . println ( \"Loss = \" + loss ) ; } public static void main ( String [ ] args ) { int SP = 2400 , P = 30 ; Loss ( SP , P ) ; } }",
            "python_code": "def Loss ( SP , P ) : NEWLINE INDENT loss = 0 NEWLINE loss = ( ( 2 * P * P * SP ) / ( 100 * 100 - P * P ) ) NEWLINE print ( \"Loss =\" , round ( loss , 3 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT SP , P = 2400 , 30 NEWLINE Loss ( SP , P ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4732_A_1535",
            "java_code": "class GFG { static int MinOfCubed ( int k ) { if ( k < 8 ) return k ; int res = k ; for ( int i = 1 ; i <= k ; i ++ ) { if ( ( i * i * i ) > k ) return res ; res = Math . min ( res , MinOfCubed ( k - ( i * i * i ) ) + 1 ) ; } return res ; } public static void main ( String [ ] args ) { int num = 15 ; System . out . println ( MinOfCubed ( num ) ) ; } }",
            "python_code": "def MinOfCubed ( k ) : NEWLINE INDENT if ( k < 8 ) : NEWLINE INDENTINDENT return k ; NEWLINE DEDENT res = k ; NEWLINE for i in range ( 1 , k + 1 ) : NEWLINE INDENTINDENT if ( ( i * i * i ) > k ) : NEWLINE INDENTINDENTINDENT return res ; NEWLINE DEDENT res = min ( res , MinOfCubed ( k - ( i * i * i ) ) + 1 ) ; NEWLINE DEDENT return res ; NEWLINE DEDENT num = 15 ; NEWLINE print ( MinOfCubed ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1215_A_1536",
            "java_code": "import java . util . * ; class solution { static double circlearea ( double a ) { if ( a < 0 ) return - 1 ; double A = ( 3.14 * 3 * Math . pow ( a , 2 ) ) / 4 ; return A ; } public static void main ( String arr [ ] ) { double a = 4 ; System . out . println ( circlearea ( a ) ) ; } }",
            "python_code": "def circlearea ( a ) : NEWLINE INDENT if a < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = ( 3.14 * 3 * pow ( a , 2 ) ) / 4 NEWLINE return A NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 4 NEWLINE print ( circlearea ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_B_1537",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class alpha1b {",
            "python_code": "n , k = list ( map ( int , input ( ) . split ( \" \" ) ) )  li = list ( map ( int , input ( ) . split ( \" \" ) ) ) sum = 0 for x in range ( k ) : sum = sum + li [ x ]  i = 0j = kres = sumfor x in range ( n - k ) : sum = sum - li [ i ] + li [ j ] res = res + sum  i += 1 j += 1   print ( res / ( n - k + 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_842_A_1538",
            "java_code": "import sun . text . resources . fr . FormatData_fr ;  import java . io . * ; import java . math . BigInteger ; import java . util . * ;  public class Main { static class FastScanner {",
            "python_code": "l , r , x , y , k = map ( int , input ( ) . split ( ) ) for i in range ( x , y + 1 ) : if i * k <= r and i * k >= l : print ( \"YES\" ) breakelse : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1925_A_1539",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int sameRemainder ( int a , int b , int c ) { int a1 = ( b - a ) , b1 = ( c - b ) , c1 = ( c - a ) ; return gcd ( a1 , gcd ( b1 , c1 ) ) ; } public static void main ( String [ ] args ) { int a = 62 , b = 132 , c = 237 ; System . out . println ( sameRemainder ( a , b , c ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( a == 0 ) : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def sameRemainder ( a , b , c ) : NEWLINE INDENT a1 = ( b - a ) NEWLINE b1 = ( c - b ) NEWLINE c1 = ( c - a ) NEWLINE return gcd ( a1 , gcd ( b1 , c1 ) ) NEWLINE DEDENT a = 62 NEWLINE b = 132 NEWLINE c = 237 NEWLINE print ( sameRemainder ( a , b , c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_915_B_1540",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , pos , l , r = map ( int , input ( ) . split ( ) ) if l == 1 and r == n : print ( 0 ) elif l == 1 and r != n : print ( abs ( pos - r ) + 1 ) elif l != 1 and r == n : print ( abs ( pos - l ) + 1 ) else : print ( r - l + 2 + min ( abs ( pos - l ) , abs ( pos - r ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2601_A_1541",
            "java_code": "import java . io . * ; class GFG { static int nCr ( int n , int r ) { int ans = 1 ; for ( int i = 1 ; i <= r ; i += 1 ) { ans *= ( n - r + i ) ; ans /= i ; } return ans ; } static int total_ways ( int N , int X ) { return ( nCr ( N - 1 , X - 1 ) + nCr ( N - 1 , X ) ) ; } public static void main ( String [ ] args ) { int N = 5 , X = 3 ; System . out . println ( total_ways ( N , X ) ) ; } }",
            "python_code": "def nCr ( n , r ) : NEWLINE INDENT ans = 1 ; NEWLINE for i in range ( 1 , r + 1 ) : NEWLINE INDENTINDENT ans *= ( n - r + i ) ; NEWLINE ans //= i ; NEWLINE DEDENT return ans ; NEWLINE DEDENT def total_ways ( N , X ) : NEWLINE INDENT return ( nCr ( N - 1 , X - 1 ) + nCr ( N - 1 , X ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; X = 3 ; NEWLINE print ( total_ways ( N , X ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_336_A_1542",
            "java_code": "import java . util . * ; public class VasilytheBearandTriangle {  public static void main ( String [ ] args ) {",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) ans = abs ( x ) + abs ( y )  if x > 0 and y > 0 : print ( 0 , ans , ans , 0 ) if x < 0 and y > 0 : print ( - ans , 0 , 0 , ans ) if x < 0 and y < 0 : print ( - ans , 0 , 0 , - ans ) if x > 0 and y < 0 : print ( 0 , - ans , ans , 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_235_B_1543",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { static FastReader sc = new FastReader ( ) ; static PrintWriter out = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = input ( ) lst = list ( map ( float , input ( ) . split ( ) ) ) ds = [ ] ds . append ( 0 ) for i , elem in enumerate ( lst [ 1 : ] ) : ds . append ( ds [ i ] * elem + lst [ i ] * elem ) ans = 2 * sum ( ds ) + sum ( lst ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_959_A_1544",
            "java_code": "import java . util . Scanner ;  public class Singleton_Pattern { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int i = sc . nextInt ( ) ; if ( i % 2 == 0 ) System . out . println ( \"Mahmoud\" ) ; else System . out . println ( \"Ehab\" ) ; } }",
            "python_code": "n = int ( input ( ) )  if n == 1 : print ( 'Ehab' ) elif n % 2 == 0 : print ( 'Mahmoud' ) else : print ( 'Ehab' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2123_A_1545",
            "java_code": "class GFG { static int countNumbers ( int n ) { if ( n % 2 == 1 ) return 0 ; return ( 9 * ( int ) Math . pow ( 10 , n / 2 - 1 ) ) ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . print ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumbers ( n ) : NEWLINE INDENT if n % 2 == 1 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return ( 9 * pow ( 10 , n // 2 - 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 NEWLINE print ( countNumbers ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2633_A_1546",
            "java_code": "import java . io . * ; class GFG { static int term ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) ans += i ; return ans ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( term ( n ) ) ; } }",
            "python_code": "def term ( n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT ans = ans + i NEWLINE DEDENT return ans NEWLINE DEDENT n = 4 NEWLINE print ( term ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_905_A_1547",
            "java_code": "class Solution { public int [ ] sortArrayByParity ( int [ ] A ) { int lo = 0 , hi = A . length - 1 ; while ( lo < hi ) { if ( A [ lo ] % 2 > A [ hi ] % 2 ) { int tmp = A [ hi ] ; A [ hi ] = A [ lo ] ; A [ lo ] = tmp ; } if ( A [ lo ] % 2 == 0 ) lo ++ ; if ( A [ hi ] % 2 == 1 ) hi -- ; } return A ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def sortArrayByParity ( self , A ) : NEWLINE INDENTINDENT lo , hi = 0 , len ( A ) - 1 NEWLINE while lo < hi : NEWLINE INDENTINDENTINDENT if A [ lo ] % 2 > A [ hi ] % 2 : NEWLINE INDENTINDENTINDENTINDENT A [ lo ] , A [ hi ] = A [ hi ] , A [ lo ] NEWLINE DEDENT if A [ lo ] % 2 == 0 : lo += 1 NEWLINE if A [ hi ] % 2 == 1 : hi -= 1 NEWLINE DEDENT return A NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_645_B_1548",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , s = map ( int , input ( ) . rstrip ( ) . split ( \" \" ) ) if s == 0 or n == 1 : print ( 0 ) elif s >= n // 2 : print ( ( n - 1 ) * ( n ) // 2 ) else : t = 0 for i in range ( s ) : t += ( n - 1 - i ) for i in range ( s , n - s ) : t += s for i in range ( s ) : t += i print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_802_A_1549",
            "java_code": "class GFG { public static void main ( String [ ] args ) { int a = 2 ; float b = 2.0f ; double c = 2.0003 ; char d = 'D' ; System . out . printf ( \"Integer value is = %d\" , a ) ; System . out . printf ( \"\\nFloat value is = %f\" , b ) ; System . out . printf ( \"\\nDouble value is = %f\" , c ) ; System . out . printf ( \"\\nChar value is = %c\" , d ) ; } }",
            "python_code": "a = 2 NEWLINE b = 2.0 NEWLINE c = 2.0003 NEWLINE d = 'D' NEWLINE print ( \"Integer value is = \" , a ) ; NEWLINE print ( \"\\nFloat value is = \" , b ) ; NEWLINE print ( \"\\nDouble value is = \" , c ) ; NEWLINE print ( \"\\nChar value is = \" , d ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2982_A_1550",
            "java_code": "import java . io . * ; class GFG { static int smallestDivisor ( int n ) { if ( n % 2 == 0 ) return 2 ; for ( int i = 3 ; i * i <= n ; i += 2 ) { if ( n % i == 0 ) return i ; } return n ; } public static void main ( String [ ] args ) { int n = 31 ; System . out . println ( smallestDivisor ( n ) ) ; } }",
            "python_code": "def smallestDivisor ( n ) : NEWLINE INDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT return 2 ; NEWLINE DEDENT i = 3 ; NEWLINE while ( i * i <= n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT return i ; NEWLINE DEDENT i += 2 ; NEWLINE DEDENT return n ; NEWLINE DEDENT n = 31 ; NEWLINE print ( smallestDivisor ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_991_B_1551",
            "java_code": "import java . util . * ;  public class Practise {  static int [ ] [ ] dp ;   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "if __name__ == \"__main__\" : n = int ( input ( ) ) grades = list ( map ( int , input ( ) . split ( ) ) ) grades . sort ( ) required = 4.5 redo = 0 i = 0 while round ( sum ( grades ) / n , 2 ) < required : redo = redo + 1 grades [ i ] = 5 i = i + 1 print ( redo ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5231_A_1552",
            "java_code": "class GFG { public static int CntDivbyX ( int arr [ ] , int n , int x ) { int number = 0 ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { number = ( number * 2 + arr [ i ] ) % x ; if ( number == 0 ) count += 1 ; } return count ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 0 , 1 , 0 , 1 , 1 , 0 } ; int n = 7 ; int x = 2 ; System . out . print ( CntDivbyX ( arr , n , x ) ) ; } }",
            "python_code": "def CntDivbyX ( arr , n , x ) : NEWLINE INDENT number = 0 NEWLINE count = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT number = ( number * 2 + arr [ i ] ) % x NEWLINE if number == 0 : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT arr = [ 1 , 0 , 1 , 0 , 1 , 1 , 0 ] NEWLINE n = 7 NEWLINE x = 2 NEWLINE print ( CntDivbyX ( arr , n , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1175_A_1553",
            "java_code": "import java . util . Scanner ;  public class problem83 {  public static void main ( String [ ] args ) {",
            "python_code": "cases = int ( input ( ) ) while cases : cases -= 1 n , k = map ( int , input ( ) . split ( ) )  ans = 0  while n : ans += n % k n //= k if n > 0 : ans += 1  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_900_A_1554",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static void commDiv ( int a , int b ) { int n = gcd ( a , b ) ; a = a / n ; b = b / n ; System . out . println ( \"A = \" + a + \", B = \" + b ) ; } public static void main ( String [ ] args ) { int a = 10 , b = 15 ; commDiv ( a , b ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( a == 0 ) : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def commDiv ( a , b ) : NEWLINE INDENT n = gcd ( a , b ) NEWLINE a = a // n NEWLINE b = b // n NEWLINE print ( \"A =\" , a , \", B =\" , b ) NEWLINE DEDENT a , b = 10 , 15 NEWLINE commDiv ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1663_A_1555",
            "java_code": "class gfg { static int getMinCost ( int n , int m ) { int cost = ( n - 1 ) * m + ( m - 1 ) * n ; return cost ; } public static void main ( String [ ] args ) { int n = 4 , m = 5 ; System . out . println ( getMinCost ( n , m ) ) ; } }",
            "python_code": "def getMinCost ( n , m ) : NEWLINE INDENT cost = ( n - 1 ) * m + ( m - 1 ) * n NEWLINE return cost NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , m = 4 , 5 NEWLINE print ( getMinCost ( n , m ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4484_A_1556",
            "java_code": "class GFG { static int area_fun ( int side ) { int area = side * side ; return area ; } public static void main ( String arg [ ] ) { int side = 4 ; int area = area_fun ( side ) ; System . out . println ( area ) ; } }",
            "python_code": "def area_fun ( side ) : NEWLINE INDENT area = side * side NEWLINE return area NEWLINE DEDENT side = 4 NEWLINE area = area_fun ( side ) NEWLINE print ( area ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1930_A_1557",
            "java_code": "class GFG { static void printModulus ( int X , int Y ) { int n = Math . max ( X , Y ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( X % i == Y % i ) System . out . print ( i + \" \" ) ; } } public static void main ( String [ ] args ) { int X , Y ; X = 10 ; Y = 20 ; printModulus ( X , Y ) ; } }",
            "python_code": "def printModulus ( X , Y ) : NEWLINE INDENT n = max ( X , Y ) NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if ( X % i == Y % i ) : NEWLINE INDENTINDENTINDENT print ( i , end = \" \" ) NEWLINE DEDENT DEDENT DEDENT X = 10 NEWLINE Y = 20 NEWLINE printModulus ( X , Y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_A_1558",
            "java_code": "import java . util . * ; import java . math . * ; public class FakeNP { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ; if ( l == r ) { System . out . println ( l ) ; return ; } System . out . println ( 2 ) ; } }",
            "python_code": "l , r = map ( int , input ( ) . split ( ) ) if l != r : print ( 2 ) else : print ( l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_196_A_1559",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "si = input ( ) ans = \"\" while 1 : co = si . count ( max ( si ) ) ans = ans + max ( si ) * co NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_651_A_1560",
            "java_code": "import java . util . * ; public class Joysticks { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a1 = in . nextInt ( ) , a2 = in . nextInt ( ) ; System . out . println ( a1 + a2 - ( ( Math . abs ( a1 - a2 ) % 3 == 0 && a1 * a2 != 1 ) ? 3 : 2 ) ) ; } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) ans = 0 if a < 2 and b < 2 : print ( 0 ) exit ( ) while a > 0 and b > 0 : ans += 1 if a < b : a += 1 b -= 2 else : a -= 2 b += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2789_A_1561",
            "java_code": "import java . io . * ; class GFG { static void printNumberWithDR ( int k , int d ) { if ( d == 0 && k != 1 ) System . out . print ( \"-1\" ) ; else { System . out . print ( d ) ; k -- ; while ( k -- > 0 ) System . out . print ( \"0\" ) ; } } public static void main ( String [ ] args ) { int k = 4 , d = 4 ; printNumberWithDR ( k , d ) ; } }",
            "python_code": "def printNumberWithDR ( k , d ) : NEWLINE INDENT if d == 0 and k != 1 : NEWLINE INDENTINDENT print ( - 1 , end = \"\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( d , end = \"\" ) NEWLINE k -= 1 NEWLINE while k : NEWLINE INDENTINDENTINDENT print ( 0 , end = \"\" ) NEWLINE k -= 1 NEWLINE DEDENT DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT k , d = 4 , 4 NEWLINE printNumberWithDR ( k , d ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1473_B_1562",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { String a = s . next ( ) ; String b = s . next ( ) ; int num = lcm ( a . length ( ) , b . length ( ) ) ;",
            "python_code": "import math  testCases = int ( input ( ) )  for i in range ( testCases ) : stringA = input ( ) NEWLINE stringB = input ( ) NEWLINE a = len ( stringA ) NEWLINE b = len ( stringB ) NEWLINE LCM = a * b // math . gcd ( a , b ) NEWLINE stringAlcm = stringA * ( LCM // a ) NEWLINE stringBlcm = stringB * ( LCM // b ) NEWLINE if stringAlcm == stringBlcm : NEWLINE INDENT print ( stringAlcm ) else : NEWLINE print ( - 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_858_A_1563",
            "java_code": "  import java . math . BigInteger ; import java . util . * ;   public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; long n = input . nextLong ( ) ; long k = input . nextLong ( ) ; k = ( long ) Math . pow ( 10 , k ) ; for ( int i = 1 ; i <= k ; i ++ ) { if ( k % i == 0 && n * i % k == 0 ) { System . out . println ( n * i ) ; break ; } } }  } ",
            "python_code": "from math import gcd   def lcm ( a , b ) : return ( a / gcd ( a , b ) ) * b   num = \"1\"  n , k = map ( int , input ( ) . split ( ) ) for i in range ( k ) : num += \"0\" num = int ( num ) print ( int ( lcm ( num , n ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_672_A_1564",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sys  def main ( ) : n = int ( sys . stdin . read ( ) . strip ( ) ) return '' . join ( map ( str , range ( 1 , 400 ) ) ) [ n - 1 ]  print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4479_A_1565",
            "java_code": "import java . io . * ; class GFG { static int findStarNum ( int n ) { return ( 6 * n * ( n - 1 ) + 1 ) ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . println ( findStarNum ( n ) ) ; } }",
            "python_code": "def findStarNum ( n ) : NEWLINE INDENT return ( 6 * n * ( n - 1 ) + 1 ) NEWLINE DEDENT n = 3 NEWLINE print ( findStarNum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1264_A_1566",
            "java_code": "import java . io . * ; class GFG { static void findTriangles ( int n ) { int num = n ; System . out . print ( num + \" \" ) ; System . out . print ( num * ( num - 4 ) * ( num - 5 ) / 6 ) ; } public static void main ( String [ ] args ) { int n ; n = 6 ; findTriangles ( n ) ; } }",
            "python_code": "def findTriangles ( n ) : NEWLINE INDENT num = n NEWLINE print ( num , end = \" \" ) NEWLINE print ( num * ( num - 4 ) * ( num - 5 ) // 6 ) NEWLINE DEDENT n = 6 ; NEWLINE findTriangles ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1288_A_1567",
            "java_code": "class GFG { static int countDigit ( int n ) { int temp = n , count = 0 ; while ( temp != 0 ) { int d = temp % 10 ; temp /= 10 ; if ( d == 2 || d == 3 || d == 5 || d == 7 ) count ++ ; } return count ; } public static void main ( String [ ] args ) { int n = 1234567890 ; System . out . println ( countDigit ( n ) ) ; } }",
            "python_code": "def countDigit ( n ) : NEWLINE INDENT temp = n NEWLINE count = 0 NEWLINE while ( temp != 0 ) : NEWLINE INDENTINDENT d = temp % 10 NEWLINE temp //= 10 NEWLINE if ( d == 2 or d == 3 or d == 5 or d == 7 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 1234567890 NEWLINE print ( countDigit ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_750_B_1568",
            "java_code": " import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  public class Solution implements Runnable {  public void run ( ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int i = 0 , j = 0 , k = 0 , t = 0 ;",
            "python_code": "s , a = 0 , 0 for _ in \" \" * int ( input ( ) ) : t , d = map ( str , input ( ) . split ( ) ) ; t = int ( t ) if not a and d [ 0 ] != \"S\" or a == 20000 and d [ 0 ] != \"N\" or d [ 0 ] == \"N\" and a - t < 0 or d [ 0 ] == \"S\" and a + t > 20000 : s = 1 a += 0 if d not in \"NorthSouth\" else t if d [ 0 ] == \"S\" else - tprint ( \"YES\" if not ( s or a ) else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_791_A_1569",
            "java_code": "import java . util . Scanner ;  public class main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int a = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ; int k = 0 ; while ( ! ( a > b ) ) { a *= 3 ; b *= 2 ; k ++ ; } System . out . println ( k ) ;  } }",
            "python_code": "small , big = map ( int , input ( ) . split ( ) ) count = 0 while small <= big : small *= 3 big *= 2 count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1043_A_1570",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) x = max ( a ) s = 0 while ( sum ( a ) >= s ) : c = 0 for i in a : c = c + ( x - i ) s = c x = x + 1 print ( x - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1965_A_1571",
            "java_code": "class Main { public static int nth_term ( int n ) { int a = 1 , b = 1 , c = 1 ; for ( int i = 0 ; i < n ; i ++ ) { c = a + b ; a = b ; b = c ; } return c ; } public static void main ( String [ ] args ) { int n = 10 ; int c = nth_term ( n ) ; System . out . println ( c ) ; } }",
            "python_code": "def nth_term ( n ) : NEWLINE INDENT a = 1 NEWLINE b = 1 NEWLINE c = 1 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT c = a + b NEWLINE a = b NEWLINE b = c NEWLINE DEDENT return c NEWLINE DEDENT n = 10 NEWLINE c = nth_term ( n ) NEWLINE print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_407_B_1572",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) values = [ 0 for k in range ( n ) ] for k in range ( n ) : back = a [ k ] if a [ k ] == k + 1 : values [ k ] = 2 else : values [ k ] += 2 for t in range ( a [ k ] - 1 , k ) : values [ k ] += values [ t ] values [ k ] %= int ( 1e9 + 7 ) print ( int ( sum ( values ) % ( 1e9 + 7 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1746_A_1573",
            "java_code": "class GFG { static int minsteps ( int n , int m ) { if ( m > n ) { return - 1 ; } else { return ( ( n + 1 ) / 2 + m - 1 ) / m * m ; } } public static void main ( String [ ] args ) { int n = 17 , m = 4 ; int ans = minsteps ( n , m ) ; System . out . println ( ans ) ; } }",
            "python_code": "def minsteps ( n , m ) : NEWLINE INDENT if ( m > n ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( ( n + 1 ) // 2 + m - 1 ) // m * m ; NEWLINE DEDENT DEDENT n = 17 NEWLINE m = 4 NEWLINE ans = minsteps ( n , m ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_357_A_1574",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class NewMain49 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) arr = [ int ( z ) for z in input ( ) . split ( ) ] x , y = map ( int , input ( ) . split ( ) ) for i in range ( 1 , n ) : b = sum ( arr [ : i ] ) a = sum ( arr [ i : ] ) if b >= x and b <= y and a >= x and a <= y : print ( i + 1 ) exit ( ) print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3733_A_1575",
            "java_code": "import java . io . * ; public class GFG { static int intersection ( int n ) { return n * ( n - 1 ) ; } public static void main ( String [ ] args ) throws IOException { System . out . println ( intersection ( 3 ) ) ; } }",
            "python_code": "def intersection ( n ) : NEWLINE INDENT return n * ( n - 1 ) ; NEWLINE DEDENT print ( intersection ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4773_A_1576",
            "java_code": "public class Test { public static int findMajority ( int arr [ ] , int n ) { return arr [ n / 2 ] ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 2 , 3 } ; int n = arr . length ; System . out . println ( findMajority ( arr , n ) ) ; } }",
            "python_code": "def findMajority ( arr , n ) : NEWLINE INDENT return arr [ int ( n / 2 ) ] NEWLINE DEDENT arr = [ 1 , 2 , 2 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( findMajority ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3406_A_1577",
            "java_code": "import java . io . * ; class GFG { static int per ( int n ) { if ( n == 0 ) return 3 ; if ( n == 1 ) return 0 ; if ( n == 2 ) return 2 ; return per ( n - 2 ) + per ( n - 3 ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( per ( n ) ) ; } }",
            "python_code": "def per ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 3 ; NEWLINE DEDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT if ( n == 2 ) : NEWLINE INDENTINDENT return 2 ; NEWLINE DEDENT return per ( n - 2 ) + per ( n - 3 ) ; NEWLINE DEDENT n = 9 ; NEWLINE print ( per ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1324_B_1578",
            "java_code": "import javax . xml . crypto . dsig . spec . XSLTTransformParameterSpec ; import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int t = sc . nextInt ( ) ; while ( t > 0 ) { t -- ; int n = sc . nextInt ( ) ;",
            "python_code": "for i in range ( int ( input ( ) ) ) : n = int ( input ( ) ) ok = False arr = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n ) : for j in range ( i + 2 , n ) : if ( arr [ i ] == arr [ j ] ) : ok = True if ( ok ) : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1366_A_1579",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int sum = ( a + b ) / 3 ; int nas = Math . min ( a , Math . min ( b , sum ) ) ; System . out . println ( nas ) ; } } }",
            "python_code": "t = int ( input ( ) ) while t > 0 : t -= 1 s , d = [ int ( x ) for x in input ( ) . split ( ) ] print ( min ( s , d , ( s + d ) // 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1180_A_1580",
            "java_code": "import java . util . Scanner ;  public class A1180 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) , s ; s = n * n + ( n - 1 ) * ( n - 1 ) ; System . out . print ( s ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( 2 * n * ( n - 1 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_485_A_1581",
            "java_code": "import java . util . * ;  public class Testing { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int m = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int sum = m ; int iteration = 0 ; boolean flag = false ; while ( iteration <= 20 ) { if ( sum % n == 0 ) { System . out . println ( \"Yes\" ) ; flag = true ; break ; } iteration ++ ; sum *= 2 ; } if ( ! flag ) System . out . println ( \"No\" ) ; } }  ",
            "python_code": "a , m = map ( int , input ( ) . split ( ) )  t = Truefor i in range ( m ) : if a % m == 0 : t = False print ( \"Yes\" ) break else : x = int ( a % m ) a += xif t == True : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_385_A_1582",
            "java_code": "import java . util . * ; public class CleaverBear {  public static void main ( String [ ] args ) {",
            "python_code": "'''* Author : Ayushman Chahar #* About  : IT Sophomore    #* Insti  : VIT, Vellore    #'''  import osimport sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_124_A_1583",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) ans = 0 while n - a - 1 > b : a += 1 print ( n - a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1426_A_1584",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t , n , x , m ; t = in . nextInt ( ) ; while ( t -- != 0 ) { m = 1 ; n = in . nextInt ( ) ; x = in . nextInt ( ) ; n -= 2 ; if ( n <= 0 ) { System . out . println ( m ) ; continue ; } if ( n % x == 0 ) m += n / x ; else m += ( 1 + n / x ) ; System . out . println ( m ) ; } in . close ( ) ; } } ",
            "python_code": "from math import ceilt = int ( input ( ) ) NEWLINE for x in range ( t ) : a , b = map ( int , input ( ) . split ( ) ) NEWLINE if a == 1 or a == 2 : print ( 1 ) NEWLINE continue NEWLINE a -= 2 NEWLINE print ( ceil ( a / b ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4418_A_1585",
            "java_code": "class GFG { public static void main ( String args [ ] ) { int n = 5 ; int a [ ] [ ] = { { 1 , 2 , 3 , 4 , 5 } , { 5 , 6 , 7 , 8 , 6 } , { 9 , 5 , 6 , 8 , 7 } , { 2 , 3 , 5 , 6 , 8 } , { 1 , 2 , 3 , 4 , 5 } } ; int convergingele , mid ; int i , j ; if ( n % 2 == 0 ) { System . out . printf ( \"NULL\\n\" ) ; } else { mid = n / 2 ; convergingele = a [ mid ] [ mid ] ; System . out . printf ( \"%d\\n\" , convergingele ) ; } } }",
            "python_code": "n = 5 NEWLINE a = [ [ 1 , 2 , 3 , 4 , 5 ] , [ 5 , 6 , 7 , 8 , 6 ] , [ 9 , 5 , 6 , 8 , 7 ] , [ 2 , 3 , 5 , 6 , 8 ] , [ 1 , 2 , 3 , 4 , 5 ] ] NEWLINE if ( n % 2 == 0 ) : NEWLINE INDENT print ( \"NULL\" ) NEWLINE DEDENT else : NEWLINE INDENT mid = n // 2 NEWLINE convergingele = a [ mid ] [ mid ] NEWLINE print ( convergingele ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1374_B_1586",
            "java_code": "import java . util . * ;   public class Main {  public static void main ( String [ ] args ) { Scanner reader = new Scanner ( System . in ) ; int t = reader . nextInt ( ) ; while ( t -- != 0 ) { int n = reader . nextInt ( ) ; int cnt = 0 ; while ( n > 1 ) { if ( n % 6 != 0 && n % 2 == 0 ) { cnt = - 1 ; break ; } if ( n % 6 != 0 ) n *= 2 ; else n /= 6 ; cnt ++ ; } System . out . println ( cnt ) ; } } }",
            "python_code": "from sys import stdininput = stdin . readline  t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) ans = 0 while n % 3 == 0 : if n % 6 == 0 : n //= 6 else : n *= 2 ans += 1 if n == 1 : print ( ans ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3153_A_1587",
            "java_code": "import java . util . * ; class solution { static int Squares ( int n , int m , int a ) { return ( ( m + a - 1 ) / a ) * ( ( n + a - 1 ) / a ) ; } public static void main ( String arr [ ] ) { int n = 6 , m = 6 , a = 4 ; System . out . println ( Squares ( n , m , a ) ) ; } }",
            "python_code": "def Squares ( n , m , a ) : NEWLINE INDENT return ( ( ( m + a - 1 ) // a ) * ( ( n + a - 1 ) // a ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 6 NEWLINE m = 6 NEWLINE a = 4 NEWLINE print ( Squares ( n , m , a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3441_A_1588",
            "java_code": "class GFG { static double extrapolate ( double [ ] [ ] d , double x ) { double y = d [ 0 ] [ 1 ] + ( x - d [ 0 ] [ 0 ] ) / ( d [ 1 ] [ 0 ] - d [ 0 ] [ 0 ] ) * ( d [ 1 ] [ 1 ] - d [ 0 ] [ 1 ] ) ; return y ; } public static void main ( String [ ] args ) { double [ ] [ ] d = { { 1.2 , 2.7 } , { 1.4 , 3.1 } } ; double x = 2.1 ; System . out . println ( \"Value of y at x = 2.1 : \" + extrapolate ( d , x ) ) ; } }",
            "python_code": "def extrapolate ( d , x ) : NEWLINE INDENT y = ( d [ 0 ] [ 1 ] + ( x - d [ 0 ] [ 0 ] ) / ( d [ 1 ] [ 0 ] - d [ 0 ] [ 0 ] ) * ( d [ 1 ] [ 1 ] - d [ 0 ] [ 1 ] ) ) ; NEWLINE return y ; NEWLINE DEDENT d = [ [ 1.2 , 2.7 ] , [ 1.4 , 3.1 ] ] ; NEWLINE x = 2.1 ; NEWLINE print ( \"Value of y at x = 2.1 :\" , extrapolate ( d , x ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_833_A_1589",
            "java_code": "class GFG { static int solve ( int ang , int n ) { if ( ( ang * n ) > ( 180 * ( n - 2 ) ) ) { return 0 ; } else if ( ( ang * n ) % 180 != 0 ) { return 0 ; } int ans = 1 ; int freq = ( ang * n ) / 180 ; ans = ans * ( n - 1 - freq ) ; ans = ans * n ; return ans ; } public static void main ( String [ ] args ) { int ang = 90 , n = 4 ; System . out . println ( solve ( ang , n ) ) ; } }",
            "python_code": "def solve ( ang , n ) : NEWLINE INDENT if ( ( ang * n ) > ( 180 * ( n - 2 ) ) ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT elif ( ( ang * n ) % 180 != 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT ans = 1 NEWLINE freq = ( ang * n ) // 180 NEWLINE ans = ans * ( n - 1 - freq ) NEWLINE ans = ans * n NEWLINE return ans NEWLINE DEDENT ang = 90 NEWLINE n = 4 NEWLINE print ( solve ( ang , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4179_A_1590",
            "java_code": "import java . io . * ; import java . lang . * ; class GFG { public static int breakEvenPoint ( int exp1 , int S , int M ) { double earn = S - M ; double exp = exp1 ; double res = Math . ceil ( exp / earn ) ; int res1 = ( int ) res ; return res1 ; } public static void main ( String [ ] args ) { int exp = 3550 , S = 90 , M = 65 ; System . out . println ( breakEvenPoint ( exp , S , M ) ) ; } }",
            "python_code": "import math NEWLINE def breakEvenPoint ( exp , S , M ) : NEWLINE INDENT earn = S - M NEWLINE res = math . ceil ( exp / earn ) NEWLINE return res NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT exp = 3550 NEWLINE S = 90 NEWLINE M = 65 NEWLINE print ( int ( breakEvenPoint ( exp , S , M ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4069_A_1591",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { public static int squaresum ( int n ) { return ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( squaresum ( n ) ) ; } }",
            "python_code": "def squaresum ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) / 2 ) * ( 2 * n + 1 ) / 3 NEWLINE DEDENT n = 4 NEWLINE print ( squaresum ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2583_A_1592",
            "java_code": "import java . lang . Math ; class GFG { public static int findNth ( int n ) { int nthElement = 19 + ( n - 1 ) * 9 ; int outliersCount = ( int ) Math . log10 ( nthElement ) - 1 ; nthElement += 9 * outliersCount ; return nthElement ; } public static void main ( String [ ] args ) { System . out . println ( findNth ( 5 ) ) ; } }",
            "python_code": "import math NEWLINE def findNth ( n ) : NEWLINE INDENT nthElement = 19 + ( n - 1 ) * 9 NEWLINE outliersCount = int ( math . log10 ( nthElement ) ) - 1 NEWLINE nthElement += 9 * outliersCount NEWLINE return nthElement NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( findNth ( 5 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3021_A_1593",
            "java_code": "import java . io . * ; class GFG { static int doublefactorial ( int n ) { int res = 1 ; for ( int i = n ; i >= 0 ; i = i - 2 ) { if ( i == 0 || i == 1 ) return res ; else res *= i ; } return res ; } public static void main ( String [ ] args ) { System . out . println ( \"Double factorial\" + \" is \" + doublefactorial ( 5 ) ) ; } }",
            "python_code": "def doublefactorial ( n ) : NEWLINE INDENT res = 1 ; NEWLINE for i in range ( n , - 1 , - 2 ) : NEWLINE INDENTINDENT if ( i == 0 or i == 1 ) : NEWLINE INDENTINDENTINDENT return res ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT res *= i ; NEWLINE DEDENT DEDENT DEDENT print ( \"Double factorial is\" , doublefactorial ( 5 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1028_A_1594",
            "java_code": "import java . util . * ; public class contest13 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) v = Falsefor i in range ( n ) : row = input ( ) if not v and 'B' in row : s , e = row . find ( 'B' ) , row . rfind ( 'B' ) c = ( s + e ) // 2 r = i + c - s v = True print ( r + 1 , c + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_809_A_1595",
            "java_code": "import java . io . BufferedReader ; import java . io . File ; import java . io . FileInputStream ; import java . io . IOException ; import java . io . InputStreamReader ; import java . nio . file . Paths ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Map ; import java . util . StringTokenizer ;  public class FindingBorders {  public static void main ( String [ ] args ) throws Exception { ",
            "python_code": "MOD = int ( 1e9 + 7 ) n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr . sort ( ) l = 1 ; r = 0 for i in range ( n ) : r = ( r + l * arr [ i ] ) % MOD l = l * 2 % MODl = 1 for i in range ( n - 1 , - 1 , - 1 ) : r = ( r - l * arr [ i ] ) % MOD l = l * 2 % MODprint ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_543_A_1596",
            "java_code": "class Solution { int ans ; public int diameterOfBinaryTree ( TreeNode root ) { ans = 1 ; depth ( root ) ; return ans - 1 ; } public int depth ( TreeNode node ) { if ( node == null ) return 0 ; int L = depth ( node . left ) ; int R = depth ( node . right ) ; ans = Math . max ( ans , L + R + 1 ) ; return Math . max ( L , R ) + 1 ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def diameterOfBinaryTree ( self , root ) : NEWLINE INDENTINDENT self . ans = 1 NEWLINE def depth ( node ) : NEWLINE INDENTINDENTINDENT if not node : return 0 NEWLINE L = depth ( node . left ) NEWLINE R = depth ( node . right ) NEWLINE self . ans = max ( self . ans , L + R + 1 ) NEWLINE return max ( L , R ) + 1 NEWLINE DEDENT depth ( root ) NEWLINE return self . ans - 1 NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_412_A_1597",
            "java_code": "import java . util . * ; public class M_Round_5 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) s = input ( ) x = 0 a -= 1 b -= 1  if ( b < a - b ) : for i in range ( b ) : print ( \"LEFT\" ) x = 1 else : for i in range ( a - b ) : print ( \"RIGHT\" ) x = - 1 s = s [ : : - 1 ]   for i in s [ : - 1 ] : print ( f\"PRINT {i}\" ) if x == - 1 : print ( \"LEFT\" ) else : print ( \"RIGHT\" )   print ( f\"PRINT {s[-1]}\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_621_B_1598",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; public static void main ( String [ ] args ) { int t = 1 ;",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1316_B_1599",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "import sysinput = sys . stdin . readlinet = int ( input ( ) ) for you in range ( t ) : n = int ( input ( ) ) s = input ( ) s = s [ : - 1 ] ans = 0 mina = s for i in range ( n ) : pref = s [ : i ] suff = s [ i : ] swaps = ( n - i ) if ( swaps % 2 ) : z = suff + pref [ : : - 1 ] else : z = suff + pref if ( z < mina ) : mina = z ans = i print ( mina ) print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_200_B_1600",
            "java_code": "import java . util . Scanner ; public class year { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int n = sc . nextInt ( ) ; double x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { x = x + sc . nextInt ( ) ; } System . out . println ( String . format ( \"%.12f\" , ( x / n ) ) ) ; } }",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  total = norange_content = 0 for i in range ( n ) : orange_content += arr [ i ] / 100 print ( float ( orange_content / total ) * 100 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2959_A_1601",
            "java_code": "class GFG { static boolean checkPowerof8 ( int n ) { double i = Math . log ( n ) / Math . log ( 8 ) ; return ( i - Math . floor ( i ) < 0.000001 ) ; } public static void main ( String args [ ] ) { int n = 65 ; if ( checkPowerof8 ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "from math import log , trunc NEWLINE def checkPowerof8 ( n ) : NEWLINE INDENT i = log ( n , 8 ) NEWLINE return ( i - trunc ( i ) < 0.000001 ) ; NEWLINE DEDENT n = 65 NEWLINE if checkPowerof8 ( n ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_268_A_1602",
            "java_code": "class Solution { public int missingNumber ( int [ ] nums ) { int res = nums . length ; for ( int i = 0 ; i < nums . length ; i ++ ) { res ^= i ; res ^= nums [ i ] ; } return res ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def missingNumber ( self , nums ) : NEWLINE INDENTINDENT res = len ( nums ) NEWLINE for i , v in enumerate ( nums ) : NEWLINE INDENTINDENTINDENT res ^= i NEWLINE res ^= v NEWLINE DEDENT return res NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_629_A_1603",
            "java_code": "class GFG { static int ack ( int m , int n ) { if ( m == 0 ) { return n + 1 ; } else if ( ( m > 0 ) && ( n == 0 ) ) { return ack ( m - 1 , 1 ) ; } else if ( ( m > 0 ) && ( n > 0 ) ) { return ack ( m - 1 , ack ( m , n - 1 ) ) ; } else return n + 1 ; } public static void main ( String args [ ] ) { System . out . println ( ack ( 1 , 2 ) ) ; } }",
            "python_code": "def A ( m , n , s = \"% s\" ) : NEWLINE INDENT print ( s % ( \"A(% d, % d)\" % ( m , n ) ) ) NEWLINE if m == 0 : NEWLINE INDENTINDENT return n + 1 NEWLINE DEDENT if n == 0 : NEWLINE INDENTINDENT return A ( m - 1 , 1 , s ) NEWLINE DEDENT n2 = A ( m , n - 1 , s % ( \"A(% d, %% s)\" % ( m - 1 ) ) ) NEWLINE return A ( m - 1 , n2 , s ) NEWLINE DEDENT print ( A ( 1 , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2376_A_1604",
            "java_code": "class GFG { static int calculate_sum ( int a , int N ) { int m = N / a ; int sum = m * ( m + 1 ) / 2 ; int ans = a * sum ; return ans ; } public static void main ( String [ ] args ) { int a = 7 , N = 49 ; System . out . println ( \"Sum of multiples of \" + a + \" up to \" + N + \" = \" + calculate_sum ( a , N ) ) ; } }",
            "python_code": "def calculate_sum ( a , N ) : NEWLINE INDENT m = N / a NEWLINE sum = m * ( m + 1 ) / 2 NEWLINE ans = a * sum NEWLINE print ( \"Sum of multiples of \" , a , \" up to \" , N , \" = \" , ans ) NEWLINE DEDENT calculate_sum ( 7 , 49 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1466_A_1605",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ;  public class Problem22 {  public static void main ( String [ ] args ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE l = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE a = [ ] NEWLINE for i in l : a . append ( i / 2 ) NEWLINE s = set ( ) NEWLINE for i in range ( n - 1 ) : for NEWLINE j in range ( i + 1 , n ) : s . add ( a [ j ] - a [ i ] ) NEWLINE print ( len ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1454_A_1606",
            "java_code": "import java . io . * ; class GFG { static int twoEggDrop ( int k ) { return ( int ) Math . ceil ( ( - 1.0 + Math . sqrt ( 1 + 8 * k ) ) / 2.0 ) ; } public static void main ( String [ ] args ) { int k = 100 ; System . out . println ( twoEggDrop ( k ) ) ; } }",
            "python_code": "import math as mt NEWLINE def twoEggDrop ( k ) : NEWLINE INDENT return mt . ceil ( ( - 1.0 + mt . sqrt ( 1 + 8 * k ) ) / 2 ) NEWLINE DEDENT k = 100 NEWLINE print ( twoEggDrop ( k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_155_B_1607",
            "java_code": "import java . util . * ;  public class Combination_B {  public static void main ( String [ ] args ) {",
            "python_code": "cards = [ ] value = 0 count = 1 for i in range ( int ( input ( ) ) ) : ai , bi = map ( int , input ( ) . split ( ) ) if bi == 0 : cards . append ( ai ) else : value += ai count += bi - 1 print ( value + sum ( sorted ( cards , reverse = True ) [ : count ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_859_B_1608",
            "java_code": "import java . util . Scanner ;  public class B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; System . out . println ( 2 * ( ( int ) Math . ceil ( 2 * Math . sqrt ( sc . nextInt ( ) ) ) ) ) ; } }",
            "python_code": "n = int ( input ( ) ) x = 1 while x ** 2 < n : x += 1 if x ** 2 > n : x -= 1 t = n - x ** 2 ans = 4 * xif ( t != 0 ) : b = t // x z = t % x ans += ( 2 * b ) if z > 0 : ans += 2 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_334_A_1609",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class er10a {",
            "python_code": "n = int ( input ( ) ) li = [ [ ] for _ in range ( n ) ] for i in range ( 1 , n * n // 2 + 1 ) : li [ ( i - 1 ) % n ] += [ i , n * n - i + 1 ] for line in li : print ( * line ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_858_A_1610",
            "java_code": "import java . util . * ; public class GfG { static int digSum ( int n ) { int sum = 0 ; while ( n > 0 || sum > 9 ) { if ( n == 0 ) { n = sum ; sum = 0 ; } sum += n % 10 ; n /= 10 ; } return sum ; } public static void main ( String argc [ ] ) { int n = 1234 ; System . out . println ( digSum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def digSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE while ( n > 0 or sum > 9 ) : NEWLINE INDENTINDENT if ( n == 0 ) : NEWLINE INDENTINDENTINDENT n = sum NEWLINE sum = 0 NEWLINE DEDENT sum += n % 10 NEWLINE n /= 10 NEWLINE DEDENT return sum NEWLINE DEDENT n = 1234 NEWLINE print ( digSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1312_B_1611",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"YES\" ; private static final String no = \"NO\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) v = list ( map ( int , input ( ) . split ( ) ) ) v . sort ( ) print ( * v [ : : - 1 ] , sep = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1879_A_1612",
            "java_code": "class GFG { static int [ ] num_to_bits = new int [ ] { 0 , 1 , 1 , 2 , 1 , 2 , 2 , 3 , 1 , 2 , 2 , 3 , 2 , 3 , 3 , 4 } ; static int countSetBitsRec ( int num ) { int nibble = 0 ; if ( 0 == num ) return num_to_bits [ 0 ] ; nibble = num & 0xf ; return num_to_bits [ nibble ] + countSetBitsRec ( num > > 4 ) ; } public static void main ( String [ ] args ) { int num = 31 ; System . out . println ( countSetBitsRec ( num ) ) ; } }",
            "python_code": "num_to_bits = [ 0 , 1 , 1 , 2 , 1 , 2 , 2 , 3 , 1 , 2 , 2 , 3 , 2 , 3 , 3 , 4 ] ; NEWLINE def countSetBitsRec ( num ) : NEWLINE INDENT nibble = 0 ; NEWLINE if ( 0 == num ) : NEWLINE INDENTINDENT return num_to_bits [ 0 ] ; NEWLINE DEDENT nibble = num & 0xf ; NEWLINE return num_to_bits [ nibble ] + countSetBitsRec ( num >> 4 ) ; NEWLINE DEDENT num = 31 ; NEWLINE print ( countSetBitsRec ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4498_A_1613",
            "java_code": "class Test { static boolean findPattern ( int n ) { int prev = n % 2 ; n = n / 2 ; while ( n > 0 ) { int curr = n % 2 ; if ( curr == prev ) return false ; prev = curr ; n = n / 2 ; } return true ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( findPattern ( n ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "def findPattern ( n ) : NEWLINE INDENT prev = n % 2 NEWLINE n = n // 2 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT curr = n % 2 NEWLINE if ( curr == prev ) : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT prev = curr NEWLINE n = n // 2 NEWLINE DEDENT return True NEWLINE DEDENT n = 10 NEWLINE print ( \"Yes\" ) if ( findPattern ( n ) ) else print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_440_A_1614",
            "java_code": "import java . util . Scanner ;  public class ForgotEp { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , a [ ] = new int [ n ] , i ; for ( i = 0 ; i < n - 1 ; i ++ ) { a [ in . nextInt ( ) - 1 ] ++ ; } in . close ( ) ; for ( i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 0 ) System . out . println ( i + 1 ) ; } } }",
            "python_code": "n = int ( input ( ) ) print ( ( n * ( n + 1 ) ) // 2 - sum ( sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_486_A_1615",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; if ( n % 2 == 0 ) { System . out . println ( n / 2 ) ; } else { System . out . println ( - ( ( n / 2 ) + 1 ) ) ; } } }",
            "python_code": "n = int ( input ( ) ) print ( n // 2 - ( n % 2 ) * n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1212_A_1616",
            "java_code": "import java . io . * ; class GFG { static float area ( float r ) { if ( r < 0 ) return - 1 ; float area = ( float ) ( 3.14 * Math . pow ( r / ( 2 * Math . sqrt ( 2 ) ) , 2 ) ) ; return area ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( area ( a ) ) ; } }",
            "python_code": "from math import pow , sqrt NEWLINE def area ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = 3.14 * pow ( r / ( 2 * sqrt ( 2 ) ) , 2 ) ; NEWLINE return area ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 5 NEWLINE print ( \"{0:.6}\" . format ( area ( a ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_A_1617",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int tc = sc . nextInt ( ) ; while ( tc -- > 0 ) { long n = sc . nextLong ( ) ; while ( n % 2 == 0 ) { n /= 2 ; } if ( n == 1 ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } sc . close ( ) ; } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) :  NEWLINE n = bin ( int ( input ( ) ) ) [ 1 : ]  if n != \"1\" and n . count ( \"1\" ) == 1 : NEWLINE INDENT print ( 'NO' ) else : NEWLINE print ( 'YES' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_63_A_1618",
            "java_code": "class GFG { static int maxOR ( int L , int R ) { int maximum = Integer . MIN_VALUE ; for ( int i = L ; i < R ; i ++ ) for ( int j = i + 1 ; j <= R ; j ++ ) maximum = Math . max ( maximum , ( i | j ) ) ; return maximum ; } public static void main ( String [ ] args ) { int L = 4 , R = 5 ; System . out . println ( maxOR ( L , R ) ) ; } }",
            "python_code": "def maxOR ( L , R ) : NEWLINE INDENT maximum = - 10 ** 9 NEWLINE for i in range ( L , R ) : NEWLINE INDENTINDENT for j in range ( i + 1 , R + 1 ) : NEWLINE INDENTINDENTINDENT maximum = max ( maximum , ( i | j ) ) NEWLINE DEDENT DEDENT return maximum NEWLINE DEDENT L = 4 NEWLINE R = 5 NEWLINE print ( maxOR ( L , R ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1422_A_1619",
            "java_code": "import java . io . * ; class GFG { static int countSteps ( int x , int y ) { if ( x % y == 0 ) return x / y ; return x / y + countSteps ( y , x % y ) ; } public static void main ( String [ ] args ) { int x = 100 , y = 19 ; System . out . println ( countSteps ( x , y ) ) ; } }",
            "python_code": "import math NEWLINE def countSteps ( x , y ) : NEWLINE INDENT if ( x % y == 0 ) : NEWLINE INDENTINDENT return math . floor ( x / y ) ; NEWLINE DEDENT return math . floor ( ( x / y ) + countSteps ( y , x % y ) ) ; NEWLINE DEDENT x = 100 ; NEWLINE y = 19 ; NEWLINE print ( countSteps ( x , y ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_832_A_1620",
            "java_code": "class Solution { public int [ ] [ ] flipAndInvertImage ( int [ ] [ ] A ) { int C = A [ 0 ] . length ; for ( int [ ] row : A ) for ( int i = 0 ; i < ( C + 1 ) / 2 ; ++ i ) { int tmp = row [ i ] ^ 1 ; row [ i ] = row [ C - 1 - i ] ^ 1 ; row [ C - 1 - i ] = tmp ; } return A ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def flipAndInvertImage ( self , A ) : NEWLINE INDENTINDENT for row in A : NEWLINE INDENTINDENTINDENT for i in xrange ( ( len ( row ) + 1 ) / 2 ) : NEWLINE INDENTINDENTINDENTINDENT row [ i ] , row [ ~ i ] = row [ ~ i ] ^ 1 , row [ i ] ^ 1 NEWLINE DEDENT DEDENT return A NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_330_B_1621",
            "java_code": "import java . util . * ;  public class RoadConstruction_B {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) L = [ 0 ] * nfor i in range ( m ) : a , b = map ( int , input ( ) . split ( ) ) L [ a - 1 ] = - 1 L [ b - 1 ] = - 1 central = 0 for i in range ( n ) : if L [ i ] == 0 : central = i + 1 breakprint ( n - 1 ) for i in range ( 1 , n + 1 ) : if i != central : print ( central , i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_922_A_1622",
            "java_code": "class Solution { public int [ ] sortArrayByParityII ( int [ ] A ) { int j = 1 ; for ( int i = 0 ; i < A . length ; i += 2 ) if ( A [ i ] % 2 == 1 ) { while ( A [ j ] % 2 == 1 ) j += 2 ; int tmp = A [ i ] ; A [ i ] = A [ j ] ; A [ j ] = tmp ; } return A ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def sortArrayByParityII ( self , A ) : NEWLINE INDENTINDENT odd = 1 NEWLINE for i in xrange ( 0 , len ( A ) , 2 ) : NEWLINE INDENTINDENTINDENT if A [ i ] % 2 : NEWLINE INDENTINDENTINDENTINDENT while A [ odd ] % 2 : NEWLINE INDENTINDENTINDENTINDENTINDENT odd += 2 NEWLINE DEDENT A [ i ] , A [ odd ] = A [ odd ] , A [ i ] NEWLINE DEDENT DEDENT return A NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1730_A_1623",
            "java_code": "import java . io . * ; class GFG { static int centeredOctahedral ( int n ) { return ( 2 * n + 1 ) * ( 2 * n * n + 2 * n + 3 ) / 3 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( centeredOctahedral ( n ) ) ; System . out . println ( ) ; n = 9 ; System . out . print ( centeredOctahedral ( n ) ) ; } }",
            "python_code": "def centeredOctahedral ( n ) : NEWLINE INDENT return ( 2 * n + 1 ) * ( 2 * n * n + 2 * n + 3 ) // 3 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( centeredOctahedral ( n ) ) NEWLINE n = 9 NEWLINE print ( centeredOctahedral ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4487_A_1624",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { long n = 5 ; long fac1 = 1 ; for ( int i = 2 ; i <= n - 1 ; i ++ ) fac1 = fac1 * i ; long fac2 = fac1 * n ; long totalWays = fac1 * fac2 ; System . out . println ( totalWays ) ; } }",
            "python_code": "n = 5 NEWLINE fac1 = 1 NEWLINE for i in range ( 2 , n ) : NEWLINE INDENT fac1 = fac1 * i NEWLINE DEDENT fac2 = fac1 * n NEWLINE totalWays = fac1 * fac2 NEWLINE print ( totalWays ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1093_A_1625",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc . nextInt ( ) ; System . out . println ( x / 2 ) ; }  } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : n = int ( input ( ) ) if n % 7 == 0 : print ( n // 7 ) elif n % 7 == 1 : print ( n // 7 + 2 ) else : print ( n // 7 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_910_A_1626",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , d = ( int ( x ) for x in input ( ) . strip ( ) . split ( ' ' ) ) s = input ( )  flag = Trueres = 0 weizhi = 0  if n - 1 <= d : print ( \"1\" ) else : while flag : weizhi = weizhi + d  if weizhi >= n - 1 : res = res + 1 flag = False else : for i in range ( d ) : if s [ weizhi ] == \"1\" : break else : weizhi = weizhi - 1 if i == d - 1 : res = - 2 flag = False res = res + 1 print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_15_A_1627",
            "java_code": "import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ;  int n = s . nextInt ( ) ; int t = s . nextInt ( ) ;  int [ ] [ ] intv = new int [ n ] [ 2 ] ;  for ( int i = 0 ; i < n ; i ++ ) { intv [ i ] [ 0 ] = s . nextInt ( ) ; intv [ i ] [ 1 ] = s . nextInt ( ) ; }  Arrays . sort ( intv , ( a , b ) -> a [ 0 ] - b [ 0 ] ) ;  int res = 2 ;",
            "python_code": "n , t = list ( map ( int , input ( ) . split ( ) ) ) a = sorted ( [ list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n ) ] ) b = [ a [ i ] [ 0 ] - a [ i ] [ 1 ] / 2 - a [ i - 1 ] [ 0 ] - a [ i - 1 ] [ 1 ] / 2 for i in range ( 1 , n ) ] c = 2 for i in range ( n - 1 ) : c += int ( b [ i ] > t ) * 2 + int ( b [ i ] == t ) print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_595_A_1628",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Random ; import java . util . StringTokenizer ; public class Main { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) count = 0 for i in range ( n ) : arr = list ( map ( int , input ( ) . split ( ) ) ) for j in range ( 0 , 2 * m , 2 ) : if arr [ j ] == 1 or arr [ j + 1 ] == 1 : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_23_A_1629",
            "java_code": "import java . util . * ; public class LongestRepeatingSequence {",
            "python_code": "s = input ( ) n = len ( s ) m = 0  for i in range ( n - 1 ) : for j in range ( 1 , n - i ) : if s [ i : i + j ] in s [ i + 1 : ] : if j > m : m = j  print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1335_A_1630",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t > 0 ) { int n = sc . nextInt ( ) ; if ( n % 2 == 0 ) System . out . println ( ( n / 2 ) - 1 ) ; else System . out . println ( ( n / 2 ) ) ; t -- ; } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) if n == 1 : print ( \"0\" ) else : if n % 2 == 0 : c = ( n // 2 ) - 1 else : c = ( n // 2 ) print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_639_B_1631",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class B639 { public static void main ( String [ ] args ) throws IOException { FastScanner fs = new FastScanner ( ) ; PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "import math , sys , bisect , heapq , osfrom collections import defaultdict , Counter , dequefrom itertools import groupby , accumulatefrom functools import lru_cache NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3946_A_1632",
            "java_code": "import java . io . * ; class GFG { static int countStr ( int n ) { return 1 + ( n * 2 ) + ( n * ( ( n * n ) - 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countStr ( n ) ) ; } }",
            "python_code": "def countStr ( n ) : NEWLINE INDENT return ( 1 + ( n * 2 ) + ( n * ( ( n * n ) - 1 ) // 2 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( countStr ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_195_A_1633",
            "java_code": "import java . util . Scanner ;  public class NewMain1 {  public static void main ( String [ ] args ) {",
            "python_code": "import matha , b , c = map ( int , input ( ) . split ( ) ) print ( math . ceil ( a * c / b - c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_201_A_1634",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; if ( x == 3 ) { System . out . println ( 5 ) ;",
            "python_code": "import sysfrom math import gcd , sqrt , ceil , log2from collections import defaultdict , Counter , dequefrom bisect import bisect_left , bisect_rightimport mathsys . setrecursionlimit ( 2 * 10 ** 5 + 10 ) import heapqfrom itertools import permutations  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_465_A_1635",
            "java_code": "import java . util . Scanner ;  public class incARG { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; String s = in . next ( ) ;  in . close ( ) ; System . out . println ( s . indexOf ( '0' ) >= 0 ? s . indexOf ( '0' ) + 1 : n ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) c = 1 changes = 0 if ( n >= 1 and n <= 100 ) : for i in range ( n ) : if ( s [ i ] == '1' and c == 1 ) : c = 1 changes += 1 elif ( s [ i ] == '0' and c == 1 ) : c = 0 changes += 1 elif ( s [ i ] == '1' and c == 0 ) : c = 0 else : c = 0 print ( changes ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2197_A_1636",
            "java_code": "class GFG { static void nDigitPerfectCubes ( int n ) { int smallest = ( int ) Math . pow ( Math . ceil ( Math . cbrt ( Math . pow ( 10 , ( n - 1 ) ) ) ) , 3 ) ; System . out . print ( smallest + \" \" ) ; int largest = ( int ) Math . pow ( Math . ceil ( Math . cbrt ( Math . pow ( 10 , ( n ) ) ) ) - 1 , 3 ) ; System . out . print ( largest ) ; } public static void main ( String args [ ] ) { int n = 3 ; nDigitPerfectCubes ( n ) ; } }",
            "python_code": "from math import ceil NEWLINE def nDigitPerfectCubes ( n ) : NEWLINE INDENT print ( pow ( ceil ( ( pow ( 10 , ( n - 1 ) ) ) ** ( 1 / 3 ) ) , 3 ) , end = \" \" ) NEWLINE print ( pow ( ceil ( ( pow ( 10 , ( n ) ) ) ** ( 1 / 3 ) ) - 1 , 3 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE nDigitPerfectCubes ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1204_A_1637",
            "java_code": "import java . nio . file . FileAlreadyExistsException ; import java . sql . SQLOutput ; import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import math  s = input ( ) if len ( s ) == 1 : print ( 0 ) elif len ( s ) == 2 : print ( 1 ) else : ans = math . ceil ( len ( s ) / 2 ) if s [ 1 : ] . count ( '1' ) == 0 and len ( s ) % 2 == 1 : ans -= 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4499_A_1638",
            "java_code": "class AlternateSetBits { static boolean allBitsAreSet ( int n ) { if ( ( ( n + 1 ) & n ) == 0 ) return true ; return false ; } static boolean bitsAreInAltOrder ( int n ) { int num = n ^ ( n > > > 1 ) ; return allBitsAreSet ( num ) ; } public static void main ( String args [ ] ) { int n = 10 ; if ( bitsAreInAltOrder ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def allBitsAreSet ( n ) : NEWLINE INDENT if ( ( ( n + 1 ) & n ) == 0 ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT def bitsAreInAltOrder ( n ) : NEWLINE INDENT num = n ^ ( n >> 1 ) ; NEWLINE return allBitsAreSet ( num ) ; NEWLINE DEDENT n = 10 ; NEWLINE if ( bitsAreInAltOrder ( n ) ) : NEWLINE INDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1177_A_1639",
            "java_code": "import java . io . * ; class GFG { static void checkEvenOdd ( int [ ] arr , int n ) { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 0 ) { System . out . print ( \"Even\" ) ; return ; } } System . out . println ( \"Odd\" ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 2 , 12 , 20 , 36 , 38 } ; int n = arr . length ; checkEvenOdd ( arr , n ) ; } }",
            "python_code": "def checkEvenOdd ( arr , n ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 == 0 ) : NEWLINE INDENTINDENTINDENT print ( \"Even\" , end = \"\" ) ; NEWLINE return ; NEWLINE DEDENT DEDENT print ( \"Odd\" , end = \"\" ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 2 , 12 , 20 , 36 , 38 ] ; NEWLINE n = len ( arr ) ; NEWLINE checkEvenOdd ( arr , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2015_A_1640",
            "java_code": "import java . io . * ; class GFG { static int calculateSum ( int n ) { int a1 = 1 , a2 = 2 ; int r = 2 ; int d = 1 ; return ( n ) * ( 2 * a1 + ( n - 1 ) * d ) / 2 + a2 * ( int ) ( Math . pow ( r , n ) - 1 ) / ( r - 1 ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( \"Sum = \" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT a1 = 1 ; NEWLINE a2 = 2 ; NEWLINE r = 2 ; NEWLINE d = 1 ; NEWLINE return ( ( n ) * ( 2 * a1 + ( n - 1 ) * d ) / 2 + a2 * ( pow ( r , n ) - 1 ) / ( r - 1 ) ) ; NEWLINE DEDENT n = 5 ; NEWLINE print ( \"Sum =\" , int ( calculateSum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3017_A_1641",
            "java_code": "class GFG { static int firstDigit ( int n ) { int fact = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { fact = fact * i ; while ( fact % 10 == 0 ) fact = fact / 10 ; } while ( fact >= 10 ) fact = fact / 10 ; return fact ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( firstDigit ( n ) ) ; } }",
            "python_code": "import math NEWLINE def firstDigit ( n ) : NEWLINE INDENT fact = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE while ( fact % 10 == 0 ) : NEWLINE INDENTINDENTINDENT fact = int ( fact / 10 ) NEWLINE DEDENT DEDENT while ( fact >= 10 ) : NEWLINE INDENTINDENT fact = int ( fact / 10 ) NEWLINE DEDENT return math . floor ( fact ) NEWLINE DEDENT n = 5 NEWLINE print ( firstDigit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4646_A_1642",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { double cm , meter , kilometer ; cm = 1000 ; meter = cm / 100.0 ; kilometer = cm / 100000.0 ; System . out . println ( \"Length in meter = \" + meter + \"m\" ) ; System . out . println ( \"Length in Kilometer = \" + kilometer + \"km\" ) ; } }",
            "python_code": "cm = 1000 ; NEWLINE meter = cm / 100.0 ; NEWLINE kilometer = cm / 100000.0 ; NEWLINE print ( \"Length in meter = \" , meter , \"m\" ) ; NEWLINE print ( \"Length in Kilometer = \" , kilometer , \"km\" ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1189_B_1643",
            "java_code": "import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ;  public class a { static int [ ] count , count1 ; static long [ ] arr ; static char [ ] ch , ch1 ; static long [ ] darr ; static long [ ] [ ] mat , mat1 ; static int x ; static long maxl ; static double dec ; static String s ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) if a [ n - 1 ] >= a [ n - 2 ] + a [ n - 3 ] : print ( \"NO\" ) else : print ( \"YES\" ) for i in range ( n - 1 , - 1 , - 2 ) : print ( a [ i ] , end = \" \" ) for i in range ( n % 2 , n , 2 ) : print ( a [ i ] , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3244_A_1644",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ; class GFG { static double MinimumMail ( int n , int k , int x ) { double m = ( n - 1 ) + Math . ceil ( ( n - 1 ) * 1.0 / x ) * ( n - 1 ) + Math . ceil ( n * 1.0 / x ) * ( k - n ) ; return m ; } public static void main ( String [ ] args ) { int N = 4 ; int K = 9 ; int X = 2 ; System . out . print ( ( int ) MinimumMail ( N , K , X ) + \"\\n\" ) ; } }",
            "python_code": "import math NEWLINE def MinimumMail ( n , k , x ) : NEWLINE INDENT m = ( ( n - 1 ) + int ( math . ceil ( ( n - 1 ) * 1.0 / x ) * ( n - 1 ) + math . ceil ( n * 1.0 / x ) * ( k - n ) ) ) ; NEWLINE return m ; NEWLINE DEDENT N = 4 ; NEWLINE K = 9 ; NEWLINE X = 2 ; NEWLINE print ( MinimumMail ( N , K , X ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1476_A_1645",
            "java_code": "import java . util . Scanner ;  public class A1476 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int N = in . nextInt ( ) ; int K = in . nextInt ( ) ; int reminder = Math . floorMod ( K - N , K ) ; int answer = 1 + ( reminder + N - 1 ) / N ; System . out . println ( answer ) ; } }  }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , k = map ( int , input ( ) . split ( ) ) NEWLINE if k % n == 0 : NEWLINE INDENT print ( k // n ) else : NEWLINE if NEWLINE DEDENT k > n : print ( k // n + 1 ) else : t = n // k NEWLINE if n % k != 0 : t = t + 1 NEWLINE if ( t * k ) % n == 0 : NEWLINE INDENT print ( ( t * k ) // n ) else : NEWLINE print ( ( t * k ) // n + 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_312_B_1646",
            "java_code": "import java . util . Scanner ;  public class Archer { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  double a = sc . nextInt ( ) ; double b = sc . nextInt ( ) ; double c = sc . nextInt ( ) ; double d = sc . nextInt ( ) ; double r = ( 1 - c / d ) * ( 1 - a / b ) ; System . out . println ( ( a / b ) / ( 1 - r ) ) ; } }",
            "python_code": "a , b , c , d = map ( int , input ( ) . split ( ) ) result = ( a * d ) / ( b * c + a * d - a * c ) print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1084_B_1647",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  ",
            "python_code": "import os , sys , bisectfrom collections import defaultdict , Counter , deque ; from functools import lru_cache NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_525_B_1648",
            "java_code": "import java . util . Scanner ; import java . lang . StringBuffer ;  public class birthday {  public static void main ( String [ ] args ) {",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_19_A_1649",
            "java_code": "import java . io . * ; class GFG { static boolean isDivisible ( long n ) { while ( n / 100 > 0 ) { long d = n % 10 ; n /= 10 ; n -= d * 5 ; } return ( n % 17 == 0 ) ; } public static void main ( String [ ] args ) { long n = 19877658 ; if ( isDivisible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT while ( n // 100 ) : NEWLINE INDENTINDENT d = n % 10 NEWLINE n //= 10 NEWLINE n -= d * 5 NEWLINE DEDENT return ( n % 17 == 0 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 19877658 NEWLINE if isDivisible ( n ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_22_B_1650",
            "java_code": "import java . io . * ; import java . util . * ;  public class ProbB { public static void main ( String [ ] args ) { InputStream inputStream = System . in ; OutputStream outputStream = System . out ; InputReader in = new InputReader ( inputStream ) ; PrintWriter out = new PrintWriter ( outputStream ) ; Task solver = new Task ( ) ; solver . solve ( in , out ) ; out . close ( ) ; }",
            "python_code": "import sysfrom array import array NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_818_A_1651",
            "java_code": "import java . util . * ;  public class P1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; if ( n <= k ) { System . out . println ( 0 + \" \" + 0 + \" \" + n ) ;  } else { long a = ( n / 2 ) / ( k + 1 ) ;  long b = k * a ; long N = n - ( a + a * k ) ; System . out . println ( a + \" \" + b + \" \" + N ) ; }  } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  certificate = n // 2 // ( k + 1 ) * kdiplomas = n // 2 // ( k + 1 ) non_winners = n - diplomas - certificate  print ( diplomas , certificate , non_winners ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1260_B_1652",
            "java_code": "import java . util . * ; public class math { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; int i , j ; while ( t -- > 0 ) { int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int x = Math . max ( a , b ) ; int y = Math . min ( a , b ) ; if ( ( 2 * x - y ) % 3 == 0 && y >= ( 2 * x - y ) / 3 ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } } }",
            "python_code": "x = int ( input ( ) ) for i in range ( x ) : n , m = [ int ( a ) for a in input ( ) . split ( ) ] if ( 2 * min ( n , m ) < max ( m , n ) or ( n + m ) % 3 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1311_B_1653",
            "java_code": "import java . io . * ; public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import sys  def answer ( n , m , a , p ) : p . sort ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_617_A_1654",
            "java_code": "public class Solution { public TreeNode mergeTrees ( TreeNode t1 , TreeNode t2 ) { if ( t1 == null ) return t2 ; if ( t2 == null ) return t1 ; t1 . val += t2 . val ; t1 . left = mergeTrees ( t1 . left , t2 . left ) ; t1 . right = mergeTrees ( t1 . right , t2 . right ) ; return t1 ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def mergeTrees ( self , t1 , t2 ) : NEWLINE INDENTINDENT if t1 is None : NEWLINE INDENTINDENTINDENT return t2 NEWLINE DEDENT if t2 is None : NEWLINE INDENTINDENTINDENT return t1 NEWLINE DEDENT t1 . val += t2 . val NEWLINE t1 . left = self . mergeTrees ( t1 . left , t2 . left ) NEWLINE t1 . right = self . mergeTrees ( t1 . right , t2 . right ) NEWLINE return t1 NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_369_A_1655",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  import java . util . Scanner ;  public class Main { private static FastReader scanner = new FastReader ( ) ; public static void main ( String [ ] args ) { int n = scanner . nextInt ( ) ; int m = scanner . nextInt ( ) ; int k = scanner . nextInt ( ) ; int [ ] array = new int [ n ] ; readArray ( array ) ;",
            "python_code": "n , b , p = map ( int , input ( ) . split ( ) ) l = [ int ( i ) for i in input ( ) . split ( ) ] w = 0 for i in l : if ( i == 1 ) : if ( b > 0 ) : b = b - 1 else : w = w + 1 else : if ( p > 0 ) : p = p - 1 elif ( b > 0 ) : b = b - 1 else : w = w + 1 print ( w ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_A_1656",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) a = 1 b = 0  if ( y == 0 or ( y == 1 and x > 0 ) ) : print ( \"No\" ) exit ( )  else : a = a + a * ( y - 1 ) b = b + y - 1  x = x - b  if ( x % 2 == 0 and x >= 0 ) : print ( \"Yes\" )                else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1699_A_1657",
            "java_code": "import java . io . * ; class GFG { static boolean isPowerOfFour ( int n ) { return n != 0 && ( ( n & ( n - 1 ) ) == 0 ) && ( n & 0xAAAAAAAA ) == 0 ; } public static void main ( String [ ] args ) { int test_no = 64 ; if ( isPowerOfFour ( test_no ) ) System . out . println ( test_no + \" is a power of 4\" ) ; else System . out . println ( test_no + \" is not a power of 4\" ) ; } }",
            "python_code": "def isPowerOfFour ( n ) : NEWLINE INDENT return ( n != 0 and ( ( n & ( n - 1 ) ) == 0 ) and not ( n & 0xAAAAAAAA ) ) ; NEWLINE DEDENT test_no = 64 ; NEWLINE if ( isPowerOfFour ( test_no ) ) : NEWLINE INDENT print ( test_no , \"is a power of 4\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( test_no , \"is not a power of 4\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3836_A_1658",
            "java_code": "class Solution { static int minimumX ( int n , int k ) { int ans = Integer . MAX_VALUE ; for ( int rem = k - 1 ; rem > 0 ; rem -- ) { if ( n % rem == 0 ) ans = Math . min ( ans , rem + ( n / rem ) * k ) ; } return ans ; } public static void main ( String args [ ] ) { int n = 4 , k = 6 ; System . out . println ( minimumX ( n , k ) ) ; n = 5 ; k = 5 ; System . out . println ( minimumX ( n , k ) ) ; } }",
            "python_code": "def minimumX ( n , k ) : NEWLINE INDENT ans = 10 ** 18 NEWLINE for i in range ( k - 1 , 0 , - 1 ) : NEWLINE INDENTINDENT if n % i == 0 : NEWLINE INDENTINDENTINDENT ans = min ( ans , i + ( n / i ) * k ) NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT n , k = 4 , 6 NEWLINE print ( minimumX ( n , k ) ) NEWLINE n , k = 5 , 5 NEWLINE print ( minimumX ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p218_A_1659",
            "java_code": "public final class p218 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p218 ( ) . run ( ) ) ; } public String run ( ) { return \"0\" ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT return \"0\" NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1199_B_1660",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "h , l = map ( int , input ( ) . split ( ) ) c = ( h * h + l * l ) ** 0.5 a = ( c * c ) / ( 2 * h ) print ( a - h ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_344_A_1661",
            "java_code": "import java . util . * ; public class magnets { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int c = 0 , d = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int m = sc . nextInt ( ) ; if ( m != c ) { c = m ; d ++ ; } } System . out . println ( d ) ; } }",
            "python_code": "n = int ( input ( ) ) poles = [ ] for _ in range ( n ) : poles . append ( input ( ) ) num_groups = 1 for i in range ( n - 1 ) : if not int ( poles [ i ] [ 1 ] ) ^ int ( poles [ i + 1 ] [ 0 ] ) : num_groups += 1 print ( num_groups ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1389_A_1662",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNext ( ) ) { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; System . out . println ( 2 * x > y ? ( ( - 1 ) + \" \" + ( - 1 ) ) : ( x + \" \" + x * 2 ) ) ; } } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE for i in range ( t ) : NEWLINE INDENT l , r = map ( int , input ( ) . split ( ) ) NEWLINE if l * 2 > r : NEWLINE INDENTINDENT print ( - 1 , - 1 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( l , l * 2 ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_648_A_1663",
            "java_code": "import java . util . * ; class solution { static int findMinDifference ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int diff1 = arr [ n - 1 ] - arr [ 1 ] ; int diff2 = arr [ n - 2 ] - arr [ 0 ] ; return Math . min ( diff1 , diff2 ) ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 4 , 3 , 4 } ; int n = arr . length ; System . out . print ( findMinDifference ( arr , n ) ) ; } }",
            "python_code": "def findMinDifference ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE diff1 = arr [ n - 1 ] - arr [ 1 ] NEWLINE diff2 = arr [ n - 2 ] - arr [ 0 ] NEWLINE return min ( diff1 , diff2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 4 , 3 , 4 ] NEWLINE n = len ( arr ) NEWLINE print ( findMinDifference ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_963_A_1664",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int minimumCost ( int cost [ ] , int n ) { int dp1 = 0 , dp2 = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int dp0 = cost [ i ] + Math . min ( dp1 , dp2 ) ; dp2 = dp1 ; dp1 = dp0 ; } return Math . min ( dp1 , dp2 ) ; } public static void main ( String args [ ] ) { int a [ ] = { 2 , 5 , 3 , 1 , 7 , 3 , 4 } ; int n = a . length ; System . out . print ( minimumCost ( a , n ) ) ; } }",
            "python_code": "def minimumCost ( cost , n ) : NEWLINE INDENT dp1 = 0 NEWLINE dp2 = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT dp0 = cost [ i ] + min ( dp1 , dp2 ) NEWLINE dp2 = dp1 NEWLINE dp1 = dp0 NEWLINE DEDENT return min ( dp1 , dp2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 2 , 5 , 3 , 1 , 7 , 3 , 4 ] NEWLINE n = len ( a ) NEWLINE print ( minimumCost ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3057_A_1665",
            "java_code": "class GFG { static int sum ( int n ) { int sum = ( n * ( n + 1 ) ) / 2 ; return sum ; } static int repeatedSum ( int n , int k ) { for ( int i = 0 ; i < k ; i ++ ) { n = sum ( n ) ; } return n ; } public static void main ( String [ ] args ) { int n = 2 , k = 2 ; System . out . println ( repeatedSum ( n , k ) ) ; } }",
            "python_code": "def summ ( n ) : NEWLINE INDENT suum = ( n * ( n + 1 ) ) // 2 NEWLINE return suum NEWLINE DEDENT def repeatedSum ( n , k ) : NEWLINE INDENT for i in range ( k ) : NEWLINE INDENTINDENT n = summ ( n ) NEWLINE DEDENT return n NEWLINE DEDENT n = 2 NEWLINE k = 2 NEWLINE print ( repeatedSum ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1786_A_1666",
            "java_code": "import java . util . * ; class Main { static void printDistinct ( int arr [ ] ) { HashSet < Integer > set = new HashSet < > ( ) ; for ( int i = 0 ; i < arr . length ; i ++ ) { if ( ! set . contains ( arr [ i ] ) ) { set . add ( arr [ i ] ) ; System . out . print ( arr [ i ] + \" \" ) ; } } } public static void main ( String [ ] args ) { int arr [ ] = { 10 , 5 , 3 , 4 , 3 , 5 , 6 } ; printDistinct ( arr ) ; } }",
            "python_code": "def printDistinct ( arr , n ) : NEWLINE INDENT s = dict ( ) ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] not in s . keys ( ) ) : NEWLINE INDENTINDENTINDENT s [ arr [ i ] ] = arr [ i ] ; NEWLINE print ( arr [ i ] , end = \" \" ) ; NEWLINE DEDENT DEDENT DEDENT arr = [ 10 , 5 , 3 , 4 , 3 , 5 , 6 ] ; NEWLINE n = 7 ; NEWLINE printDistinct ( arr , n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2918_A_1667",
            "java_code": "import java . io . * ; class Nth { public int nthTerm ( int N ) { if ( N <= 1 ) return 1 ; int i , fact = 1 ; for ( i = 1 ; i < N ; i ++ ) fact = fact * i ; return fact ; } } class GFG { public static void main ( String [ ] args ) { int N = 3 ; Nth a = new Nth ( ) ; System . out . println ( a . nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT if n <= 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT fact = 1 NEWLINE for i in range ( 1 , N ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE DEDENT return fact NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 3 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4565_A_1668",
            "java_code": "import java . io . * ; class GFG { public static int fact ( int N ) { int i , product = 1 ; for ( i = 1 ; i <= N ; i ++ ) product = product * i ; return product ; } public static int nthTerm ( int N ) { return ( N * N ) * fact ( N ) ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def fact ( N ) : NEWLINE INDENT product = 1 NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT product = product * i NEWLINE DEDENT return product NEWLINE DEDENT def nthTerm ( N ) : NEWLINE INDENT return ( N * N ) * fact ( N ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_937_A_1669",
            "java_code": "import java . io . * ; import java . util . * ;  public class Olympiad { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; HashSet < Integer > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc . nextInt ( ) ; if ( ! set . contains ( a ) && a != 0 ) { set . add ( a ) ; } } System . out . println ( set . size ( ) ) ; } }",
            "python_code": "import sysinput = sys . stdin . readline  n = int ( input ( ) ) a = [ int ( i ) for i in input ( ) . split ( ) ] res = [ int ( i ) for i in a if i > 0 ] print ( len ( set ( res ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1194_A_1670",
            "java_code": "import java . util . * ; public class CodeForces { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ; while ( t -- > 0 ) { int n = scan . nextInt ( ) ; int x = scan . nextInt ( ) ; System . out . println ( x * 2 ) ; } scan . close ( ) ; } }",
            "python_code": "t = int ( input ( ) ) for z in range ( t ) : n , x = input ( ) . split ( ) n = int ( n ) x = int ( x ) print ( 2 * x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3874_A_1671",
            "java_code": "class GFG { static void updateArray ( int arr [ ] , int n ) { for ( int i = 0 ; i <= n - 2 ; i ++ ) arr [ i ] = arr [ i + 1 ] ; arr [ n - 1 ] = - 1 ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( arr [ i ] + \" \" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 1 , 3 , 2 , 4 } ; int N = arr . length ; updateArray ( arr , N ) ; } }",
            "python_code": "def updateArray ( arr , n ) : NEWLINE INDENT for i in range ( n - 1 ) : NEWLINE INDENTINDENT arr [ i ] = arr [ i + 1 ] NEWLINE DEDENT arr [ n - 1 ] = - 1 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT print ( arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 5 , 1 , 3 , 2 , 4 ] NEWLINE N = len ( arr ) NEWLINE updateArray ( arr , N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1163_A_1672",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; if ( m == 0 ) { System . out . println ( 1 ) ; } else { System . out . println ( Math . min ( m , n - m ) ) ; } } } ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) print ( min ( max ( m , 1 ) , n - m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1677_A_1673",
            "java_code": "class GFG { static float polydiagonal ( float n , float a ) { if ( a < 0 && n < 0 ) { return - 1 ; } return ( float ) ( 2 * a * Math . sin ( ( ( ( n - 2 ) * 180 ) / ( 2 * n ) ) * 3.14159 / 180 ) ) ; } public static void main ( String [ ] args ) { float a = 9 , n = 10 ; System . out . printf ( \"%.3f\" , polydiagonal ( n , a ) ) ; } }",
            "python_code": "import math as mt NEWLINE def polydiagonal ( n , a ) : NEWLINE INDENT if ( a < 0 and n < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return ( 2 * a * mt . sin ( ( ( ( n - 2 ) * 180 ) / ( 2 * n ) ) * 3.14159 / 180 ) ) NEWLINE DEDENT a , n = 9 , 10 NEWLINE print ( polydiagonal ( n , a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3456_A_1674",
            "java_code": "import java . io . * ; class GFG { public static void main ( String [ ] args ) { int a = 5 , b = 7 , c = 10 ; if ( a <= b && a <= c ) System . out . println ( a + \" is the smallest\" ) ; else if ( b <= a && b <= c ) System . out . println ( b + \" is the smallest\" ) ; else System . out . println ( c + \" is the smallest\" ) ; } }",
            "python_code": "a , b , c = 5 , 7 , 10 NEWLINE if ( a <= b and a <= c ) : NEWLINE INDENT print ( a , \"is the smallest\" ) NEWLINE DEDENT elif ( b <= a and b <= c ) : NEWLINE INDENT print ( b , \"is the smallest\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( c , \"is the smallest\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_898_A_1675",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; System . out . println ( ( scan . nextLong ( ) + 5 ) / 10 * 10 ) ; } }",
            "python_code": "n = input ( ) num = int ( n ) x = list ( map ( int , n . strip ( ) ) ) y = list ( n . strip ( ) )   if len ( x ) == 1 and x != \"5\" : if x [ 0 ] > 5 : print ( 10 ) else : print ( 0 ) else : if int ( x [ - 1 ] ) < 5 : y [ - 1 ] = \"0\" print ( '' . join ( y ) )  else :  while ( n [ - 1 ] != \"0\" ) : num = num + 1 n = str ( num ) if n [ - 1 ] == \"0\" : print ( num ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_669_A_1676",
            "java_code": "import java . util . Scanner ;  public class covidSpread2 { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { solvex ( ) ; } public static void solvex ( ) { int n = sc . nextInt ( ) ; int fac = n / 3 ; int ans = 2 * fac ; if ( n % 3 != 0 ) ans ++ ; System . out . println ( ans ) ; } }",
            "python_code": "print ( ( int ( input ( ) ) * 2 + 1 ) // 3 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1131_A_1677",
            "java_code": "import java . io . * ; class GFG { static int countIntegralSolutions ( int n ) { return ( ( n + 1 ) * ( n + 2 ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countIntegralSolutions ( n ) ) ; } }",
            "python_code": "def countIntegralSolutions ( n ) : NEWLINE INDENT return int ( ( ( n + 1 ) * ( n + 2 ) ) / 2 ) NEWLINE DEDENT n = 3 NEWLINE print ( countIntegralSolutions ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4528_A_1678",
            "java_code": "class GFG { static int claculate sum ( int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum = sum + ( 1 << i ) ; } return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( \"Sum of the series : \" + calculateSum ( n ) ) ; } } ;",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT sum = sum + ( 1 << i ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 10 NEWLINE print ( \"Sum of series \" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_327_B_1679",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : print ( 3 * n + i )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_770_A_1680",
            "java_code": "import java . util . Scanner ; public class sol { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; String letters = \"abcdefghijklmnopqrstuvwxyz\" ; String password = \"\" ; int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( t < k ) password += letters . charAt ( t ) ; t ++ ; if ( t >= k ) { t = 0 ; } } System . out . println ( password ) ; } }",
            "python_code": "from itertools import cyclest = 'abcdefghijklmnopqrstuvwxyz' ls = list ( map ( int , input ( ) . split ( ) ) ) l , k = ls [ 0 ] , ls [ 1 ] os = '' ls = list ( st [ 0 : k ] ) pool = cycle ( ls ) while len ( os ) < l : os += next ( pool ) print ( os ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_A_1681",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; String s = String . valueOf ( n ) ; long copy1 = n ; if ( n >= 10 ) { long y1 = ( long ) ( n / ( Math . pow ( 10 , s . length ( ) - 1 ) ) ) + 1 ;",
            "python_code": "n = input ( )  l = len ( n ) f = int ( n [ 0 ] ) f = f + 1  n = int ( n )  x = 1 for i in range ( l - 1 ) : x = x * 10  print ( f * x - n )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1186_A_1682",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int m = s . nextInt ( ) ; int k = s . nextInt ( ) ; String ans = Math . min ( m , k ) >= n ? \"YES\" : \"NO\" ; System . out . println ( ans ) ; } } ",
            "python_code": "n = input ( ) l = n . split ( ) l [ 0 ] = int ( l [ 0 ] ) l [ 1 ] = int ( l [ 1 ] ) l [ 2 ] = int ( l [ 2 ] ) if l [ 1 ] // l [ 0 ] < 1 or l [ 2 ] // l [ 0 ] < 1 : print ( 'No' ) else : print ( 'Yes' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1809_A_1683",
            "java_code": "class GFG { static String isDivisible ( long n ) { long temp = n ; int sum = 0 ; while ( n != 0 ) { int k = ( int ) n % 10 ; sum += k ; n /= 10 ; } if ( temp % sum == 0 ) return \"YES\" ; return \"NO\" ; } public static void main ( String [ ] args ) { long n = 123 ; System . out . println ( isDivisible ( n ) ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT temp = n NEWLINE sum = 0 ; NEWLINE while ( n ) : NEWLINE INDENTINDENT k = n % 10 ; NEWLINE sum += k ; NEWLINE n /= 10 ; NEWLINE DEDENT if ( temp % sum == 0 ) : NEWLINE INDENTINDENT return \"YES\" ; NEWLINE DEDENT return \"NO\" ; NEWLINE DEDENT n = 123 ; NEWLINE print ( isDivisible ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2291_A_1684",
            "java_code": "class GFG { static String isDivisible ( int n ) { int temp = n ; while ( n > 0 ) { int k = n % 10 ; if ( temp % k == 0 ) { return \"YES\" ; } n /= 10 ; } return \"NO\" ; } public static void main ( String [ ] args ) { int n = 9876543 ; System . out . println ( isDivisible ( n ) ) ; } }",
            "python_code": "def isDivisible ( n ) : NEWLINE INDENT temp = n NEWLINE while ( n ) : NEWLINE INDENTINDENT k = n % 10 NEWLINE if ( temp % k == 0 ) : NEWLINE INDENTINDENTINDENT return \"YES\" NEWLINE DEDENT n /= 10 ; NEWLINE DEDENT return \"NO\" NEWLINE DEDENT n = 9876543 NEWLINE print ( isDivisible ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1331_A_1685",
            "java_code": "import java . io . * ; class GFG { static void printAsMaximalPrimeSum ( int n ) { if ( n % 2 == 1 ) { System . out . print ( \"3 \" ) ; n -= 3 ; } while ( n > 0 ) { System . out . print ( \"2 \" ) ; n -= 2 ; } } public static void main ( String [ ] args ) { int n = 5 ; printAsMaximalPrimeSum ( n ) ; } }",
            "python_code": "def printAsMaximalPrimeSum ( n ) : NEWLINE INDENT if ( n % 2 == 1 ) : NEWLINE INDENTINDENT print ( \"3 \" , end = \"\" ) NEWLINE n -= 3 NEWLINE DEDENT while ( n > 0 ) : NEWLINE INDENTINDENT print ( \"2 \" , end = \"\" ) NEWLINE n -= 2 NEWLINE DEDENT DEDENT n = 5 NEWLINE printAsMaximalPrimeSum ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1280_A_1686",
            "java_code": "import java . io . ByteArrayInputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . PrintWriter ; import java . util . * ; import java . io . * ; import java . math . * ; public class Main { InputStream is ; PrintWriter out ; String INPUT = \"\" ;",
            "python_code": "t = int ( input ( ) ) mod = 10 ** 9 + 7 for _ in range ( t ) : x = int ( input ( ) ) s = input ( ) i = 1 while len ( s ) < x : s += s [ i : ] * ( ord ( s [ i - 1 ] ) - 49 ) i += 1 l = len ( s ) while i <= x : l = ( l + ( l - i ) * ( ord ( s [ i - 1 ] ) - 49 ) ) % mod i += 1 print ( l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_158_B_1687",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "input ( ) ; a , b , c , d = map ( input ( ) . count , ( '1' , '2' , '3' , '4' ) ) ; print ( d + c + ( b * 2 + max ( 0 , a - c ) + 3 ) // 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1572_A_1688",
            "java_code": "class Test { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int lcm ( int a , int b ) { return ( a * b ) / gcd ( a , b ) ; } public static void main ( String [ ] args ) { int a = 15 , b = 20 ; System . out . println ( \"LCM of \" + a + \" and \" + b + \" is \" + lcm ( a , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if a == 0 : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def lcm ( a , b ) : NEWLINE INDENT return ( a * b ) / gcd ( a , b ) NEWLINE DEDENT a = 15 NEWLINE b = 20 NEWLINE print ( 'LCM of' , a , 'and' , b , 'is' , lcm ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4561_A_1689",
            "java_code": "import java . io . * ; class GFG { static void printPossible ( int a , int b , int c ) { if ( ( a + b + c ) % 2 != 0 || a + b < c ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } public static void main ( String [ ] args ) { int a = 2 , b = 4 , c = 2 ; printPossible ( a , b , c ) ; } }",
            "python_code": "def printPossible ( a , b , c ) : NEWLINE INDENT if ( ( a + b + c ) % 2 != 0 or a + b < c ) : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 2 NEWLINE b = 4 NEWLINE c = 2 NEWLINE printPossible ( a , b , c ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1099_B_1690",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int sqrt = ( int ) ( Math . floor ( Math . sqrt ( n ) ) ) ; if ( n == sqrt * sqrt ) System . out . println ( 2 * sqrt ) ; else if ( n - ( sqrt * sqrt ) <= sqrt ) System . out . println ( 2 * sqrt + 1 ) ; else System . out . println ( 2 * sqrt + 2 ) ; } }",
            "python_code": "import math  n = int ( input ( ) )  res = [ ] sqrt = int ( math . sqrt ( n ) ) if sqrt * sqrt >= n : print ( sqrt * 2 ) elif ( sqrt + 1 ) * sqrt >= n : print ( sqrt * 2 + 1 ) elif ( sqrt + 1 ) * ( sqrt + 1 ) >= n : print ( sqrt * 2 + 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_755_A_1691",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class PolandBall { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "import math  def is_prime ( n ) : for i in range ( 2 , n ) : if not n % i : return False return True   def main_function ( ) : n = int ( input ( ) ) m = 1 while is_prime ( n * m + 1 ) : m += 1 return m        print ( main_function ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_12_B_1692",
            "java_code": "import java . util . * ; import java . io . * ; public class parakh { public static void swap ( char a [ ] , int i , int j ) { char c = a [ j ] ; a [ j ] = a [ i ] ; a [ i ] = c ; } public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;",
            "python_code": "n = sorted ( list ( input ( ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_722_A_1693",
            "java_code": "class GFG { static int maxOR ( int arr [ ] , int n ) { int maxVal = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) { maxVal = Math . max ( maxVal , arr [ i ] | arr [ j ] ) ; } return maxVal ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 8 , 12 , 16 } ; int n = arr . length ; System . out . println ( maxOR ( arr , n ) ) ; } }",
            "python_code": "def maxOR ( arr , n ) : NEWLINE INDENT maxVal = 0 ; NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT maxVal = max ( maxVal , arr [ i ] | arr [ j ] ) ; NEWLINE DEDENT DEDENT return maxVal ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 4 , 8 , 12 , 16 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( maxOR ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_635_A_1694",
            "java_code": "import java . io . * ; class GFG { static void check ( int n , int m ) { if ( n == 2 || m == 2 || n % m == 0 ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } public static void main ( String [ ] args ) { int m = 3 , n = 9 ; check ( n , m ) ; } }",
            "python_code": "def check ( n , m ) : NEWLINE INDENT if ( n == 2 or m == 2 or n % m == 0 ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE DEDENT DEDENT m = 3 NEWLINE n = 9 NEWLINE check ( n , m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2372_A_1695",
            "java_code": "class GFG { static int Rate ( int N1 , int N2 ) { float rate = ( N2 - N1 ) * 100 / N1 ; return ( int ) rate ; } public static void main ( String [ ] args ) { int N1 = 100 , N2 = 120 ; System . out . println ( Rate ( N1 , N2 ) + \" %\" ) ; } }",
            "python_code": "def Rate ( N1 , N2 ) : NEWLINE INDENT rate = ( N2 - N1 ) * 100 // ( N1 ) ; NEWLINE return rate NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N1 = 100 NEWLINE N2 = 120 NEWLINE print ( Rate ( N1 , N2 ) , \" %\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_680_B_1696",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "n , a = map ( int , input ( ) . split ( ) ) criminals = [ int ( i ) for i in input ( ) . split ( ) ] if ( n == 1 or n == 2 ) : print ( criminals . count ( 1 ) ) else : if ( a - 1 < n - a ) : x = a - 1 c1 = criminals [ : 2 * a - 1 ] c2 = criminals [ 2 * a - 1 : ] else : x = n - a c2 = criminals [ : n - 2 * ( n - a ) - 1 ] c1 = criminals [ n - 2 * ( n - a ) - 1 : ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_946_A_1697",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = 0 ; for ( int i = 0 ; i < a ; i ++ ) { b += Math . abs ( in . nextInt ( ) ) ; } System . out . println ( b ) ; } }",
            "python_code": "n = int ( input ( ) ) a = [ int ( i ) for i in input ( ) . split ( ' ' ) ] output = 0 for i in range ( n ) : if ( a [ i ] >= 0 ) : output += a [ i ] else : output -= a [ i ] print ( output ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1422_A_1698",
            "java_code": "import java . util . Scanner ;  public class A1422 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int A = in . nextInt ( ) ; int B = in . nextInt ( ) ; int C = in . nextInt ( ) ; int D = Math . max ( A , Math . max ( B , C ) ) ; System . out . println ( D ) ; } }  }",
            "python_code": "for i in range ( int ( input ( ) ) ) : L = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE L . sort ( ) NEWLINE a = L [ 0 ] NEWLINE b = L [ 1 ] NEWLINE c = L [ 2 ] NEWLINE print ( int ( ( ( c - a ) ** 2 + b ** 2 ) ** 0.5 + 0.5 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_778_A_1699",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . BigInteger ;  public class test1 { static class sort implements Comparator < int [ ] > { public int compare ( int [ ] a , int [ ] b ) {",
            "python_code": "t = input ( ) p = input ( ) n = len ( t ) m = len ( p ) a = [ int ( i ) for i in input ( ) . split ( ) ] l = 0 r = n - 1 while ( l < r ) : mid = ( r + l ) // 2 f = [ 0 ] * n for i in range ( mid + 1 ) : f [ a [ i ] - 1 ] = 1 c = 0 for i in range ( n ) : if ( f [ i ] == 0 and t [ i ] == p [ c ] ) : c += 1 if ( c == m ) : break if ( c == m ) : l = mid + 1 else : r = midprint ( l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_220_A_1700",
            "java_code": "class GFG { static int findLargest ( int [ ] arr , int n ) { int gcd = 0 ; for ( int i = 0 ; i < n ; i ++ ) gcd = __gcd ( arr [ i ] , gcd ) ; return gcd ; } static int __gcd ( int a , int b ) { return b == 0 ? a : __gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 6 , 9 } ; int n = arr . length ; System . out . print ( findLargest ( arr , n ) ) ; } }",
            "python_code": "from math import gcd as __gcd NEWLINE def findLargest ( arr , n ) : NEWLINE INDENT gcd = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT gcd = __gcd ( arr [ i ] , gcd ) NEWLINE DEDENT return gcd NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 3 , 6 , 9 ] NEWLINE n = len ( arr ) NEWLINE print ( findLargest ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5003_A_1701",
            "java_code": "public class GFG { static int countX ( int n ) { String binary = Integer . toBinaryString ( n ) ; int count = 0 ; for ( int i = 0 ; i < binary . length ( ) ; i ++ ) { if ( binary . charAt ( i ) == '1' ) count ++ ; } int answer = ( int ) Math . pow ( 2 , count ) ; return answer ; } public static void main ( String args [ ] ) { int n = 5 ; int answer = countX ( n ) ; System . out . println ( answer ) ; } }",
            "python_code": "def countX ( n ) : NEWLINE INDENT binary = \"{0:b}\" . format ( n ) NEWLINE count = 0 NEWLINE for i in range ( len ( binary ) ) : NEWLINE INDENTINDENT if ( binary [ i ] == '1' ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT answer = int ( pow ( 2 , count ) ) NEWLINE return answer NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 NEWLINE answer = countX ( n ) NEWLINE print ( answer ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_271_A_1702",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class BeautifulYear271A { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "l = int ( input ( ) ) def split ( num ) : return list ( num ) for i in range ( l + 1 , 9013 ) : u = str ( i ) v = split ( u ) o = set ( v ) if len ( o ) == 4 : v = i breakprint ( v ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_839_B_1703",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) fours , twos , ones = n , 2 * n , 0 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1401_A_1704",
            "java_code": "import java . util . Scanner ;  public class A1401 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int N = in . nextInt ( ) ; int K = in . nextInt ( ) ; int answer = 0 ; if ( ( N % 2 == 0 ) != ( K % 2 == 0 ) ) { N ++ ; answer ++ ; } answer += Math . max ( 0 , K - N ) ; System . out . println ( answer ) ; } }  }",
            "python_code": "from sys import stdin , stdout  def main ( ) : for _ in range ( int ( stdin . readline ( ) ) ) : n , k = map ( int , stdin . readline ( ) . split ( ' ' ) ) if n <= k : stdout . write ( str ( k - n ) + '\\n' ) else : stdout . write ( str ( ( n - k ) % 2 ) + '\\n' )  if __name__ == \"__main__\" : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_596_B_1705",
            "java_code": "import java . io . PrintWriter ; import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; int n = in . nextInt ( ) ; int pre = 0 ; long sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int input = in . nextInt ( ) ; sum += Math . abs ( input - pre ) ; pre = input ; } pw . println ( sum ) ;  pw . close ( ) ; }  } ",
            "python_code": "n = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) st = Falseres = 0 for i in range ( n - 1 ) : if i == 0 : res += abs ( li [ i ] ) res += abs ( li [ i ] - li [ i + 1 ] ) print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2625_A_1706",
            "java_code": "class GFG { static long calculateSum ( int n , int k ) { long res = 1 ; long MOD = 1000000007 ; for ( int i = 0 ; i < k ; i ++ ) { res = ( res * n ) % MOD ; } return res ; } public static void main ( String [ ] args ) { int n = 4 ; int k = 3 ; System . out . print ( calculateSum ( n , k ) ) ; } } ;",
            "python_code": "def calculateSum ( n , k ) : NEWLINE INDENT res = 1 NEWLINE MOD = 1000000007 NEWLINE for i in range ( 0 , k ) : NEWLINE INDENTINDENT res = ( res * n ) % MOD NEWLINE DEDENT return res NEWLINE DEDENT n = 4 NEWLINE k = 3 NEWLINE print ( calculateSum ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1715_A_1707",
            "java_code": "import java . io . * ; class GFG { static int pentagon_pyramidal ( int n ) { return n * n * ( n + 1 ) / 2 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( pentagon_pyramidal ( n ) ) ; } }",
            "python_code": "def pentagon_pyramidal ( n ) : NEWLINE INDENT return n * n * ( n + 1 ) / 2 NEWLINE DEDENT n = 4 NEWLINE print ( int ( pentagon_pyramidal ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1146_A_1708",
            "java_code": "class GFG { static void printSumSeries ( int N ) { float sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += 1.0 / ( 2 * i - 1 ) ; } System . out . println ( sum ) ; } public static void main ( String [ ] args ) { int N = 6 ; printSumSeries ( N ) ; } }",
            "python_code": "def printSumSeries ( N ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT sum += 1.0 / ( 2 * i - 1 ) ; NEWLINE DEDENT print ( sum ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 6 ; NEWLINE printSumSeries ( N ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3181_A_1709",
            "java_code": "import java . io . * ; class GFG { static int seriesSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += i * ( i + 1 ) / 2 ; return sum ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( seriesSum ( n ) ) ; } }",
            "python_code": "def seriessum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += i * ( i + 1 ) / 2 NEWLINE DEDENT return sum NEWLINE DEDENT n = 4 NEWLINE print ( seriessum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1298_A_1710",
            "java_code": "import java . util . * ; class GFG { static int sticks [ ] = { 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 } ; static int countSticks ( String str , int n ) { int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cnt += ( sticks [ str . charAt ( i ) - '0' ] ) ; } return cnt ; } public static void main ( String [ ] args ) { String str = \"56\" ; int n = str . length ( ) ; System . out . println ( countSticks ( str , n ) ) ; } }",
            "python_code": "sticks = [ 6 , 2 , 5 , 5 , 4 , 5 , 6 , 3 , 7 , 6 ] ; NEWLINE def countSticks ( string , n ) : NEWLINE INDENT cnt = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT cnt += ( sticks [ ord ( string [ i ] ) - ord ( '0' ) ] ) ; NEWLINE DEDENT return cnt ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT string = \"56\" ; NEWLINE n = len ( string ) ; NEWLINE print ( countSticks ( string , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_107_B_1711",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Task {",
            "python_code": "from math import combif __name__ == '__main__' : n , m , h = map ( int , input ( ) . split ( ) ) h -= 1  arr = [ int ( i ) for i in input ( ) . split ( ) ] arr [ h ] -= 1 n -= 1  total = sum ( arr ) if total < n : print ( - 1 ) exit ( 0 ) ans = comb ( total - arr [ h ] , n ) / comb ( total , n ) print ( 1 - ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1331_B_1712",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = \"\" ; int c = 0 ; int k = n ; for ( int i = 2 ; i < n ; i ++ ) { if ( k % i == 0 ) { s = s + i ; s = s + ( k / i ) ; break ;",
            "python_code": "x = int ( input ( ) ) y = 2 while x % y != 0 : y += 1 print ( y , x // y , sep = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_581_A_1713",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int max = Math . max ( a , b ) ; int min = Math . min ( a , b ) ; System . out . print ( min + \" \" + ( max - min ) / 2 ) ; }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) print ( min ( a , b ) , abs ( a - b ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1832_A_1714",
            "java_code": "import java . io . * ; class Nth { public int nthTerm ( int N ) { return ( N * ( ( N / 2 ) + ( ( N % 2 ) * 2 ) + N ) ) ; } } class GFG { public static void main ( String [ ] args ) { int N = 5 ; Nth a = new Nth ( ) ; System . out . println ( \"Nth term for N = \" + N + \" : \" + a . nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT return ( N * ( ( N // 2 ) + ( ( N % 2 ) * 2 ) + N ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 5 NEWLINE print ( \"Nth term for N = \" , N , \" : \" , nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2279_A_1715",
            "java_code": "class GFG { static void generateSequence ( int n , int g ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( i * g + \" \" ) ; ; } public static void main ( String [ ] args ) { int n = 6 , g = 5 ; generateSequence ( n , g ) ; } }",
            "python_code": "def generateSequence ( n , g ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( i * g , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , g = 6 , 5 NEWLINE generateSequence ( n , g ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_926_A_1716",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "l , r = [ int ( j ) for j in input ( ) . split ( ) ] count = 0 for j in range ( 32 ) : for k in range ( 32 ) : res = ( 2 ** j ) * ( 3 ** k ) if res >= l and res <= r : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_520_B_1717",
            "java_code": "import java . util . Scanner ;  public class code { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; int count = 0 ; while ( m > n ) { if ( m % 2 != 0 ) { m ++ ; count ++ ; } m /= 2 ; count ++ ; }  System . out . println ( count + n - m ) ; }   }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) q = 0 while n != m : m = [ m // 2 , m + 1 ] [ m & 1 or m < n ] q += 1 print ( q ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1088_B_1718",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {   public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = sorted ( list ( set ( map ( int , input ( ) . split ( ) ) ) ) ) for i in range ( k ) : if i == 0 : print ( a [ i ] ) elif i < len ( a ) : print ( a [ i ] - a [ i - 1 ] ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2193_A_1719",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class Gfg { static void Digits ( int n ) { int largest = 0 ; int smallest = 9 ; while ( n != 0 ) { int r = n % 10 ; largest = Math . max ( r , largest ) ; smallest = Math . min ( r , smallest ) ; n = n / 10 ; } System . out . println ( largest + \" \" + smallest ) ; } public static void main ( String [ ] args ) throws java . lang . Exception { int n = 2346 ; Digits ( n ) ; } }",
            "python_code": "def Digits ( n ) : NEWLINE INDENT largest = 0 NEWLINE smallest = 9 NEWLINE while ( n ) : NEWLINE INDENTINDENT r = n % 10 NEWLINE largest = max ( r , largest ) NEWLINE smallest = min ( r , smallest ) NEWLINE n = n // 10 NEWLINE DEDENT print ( largest , smallest ) NEWLINE DEDENT n = 2346 NEWLINE Digits ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_828_A_1720",
            "java_code": "class GFG { static float find_Area ( float a ) { float R = a * ( float ) ( 2.0 - Math . sqrt ( 2 ) ) ; float area = ( float ) ( ( 3.14 * R * R ) / 2.0 ) ; return area ; } public static void main ( String [ ] args ) { float a = 4 ; System . out . println ( \" Area of semicircle = \" + find_Area ( a ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def find_Area ( a ) : NEWLINE INDENT R = a * ( 2.0 - sqrt ( 2 ) ) ; NEWLINE area = 3.14 * R * R / 2.0 ; NEWLINE return area ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 4 ; NEWLINE print ( \"Area of semicircle =\" , find_Area ( a ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_47_A_1721",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; check ( n ) ; } public static void check ( int n ) { int t = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { t += i ; if ( t == n ) { System . out . println ( \"YES\" ) ; return ; } } System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) f = False  for i in range ( 32 ) : if i * ( i + 1 ) / 2 == n : f = True break print ( 'YES' if f else 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4847_A_1722",
            "java_code": "import java . io . * ; class GFG { int Circumference ( int a ) { return 4 * a ; } public static void main ( String args [ ] ) { GFG obj = new GFG ( ) ; int a = 5 ; System . out . println ( \"Circumference of \" + \"a square is \" + obj . Circumference ( a ) ) ; } }",
            "python_code": "def Circumference ( a ) : NEWLINE INDENT return ( 4 * a ) NEWLINE DEDENT a = 5 NEWLINE c = Circumference ( a ) NEWLINE print ( \"Circumference of a \" + \"square is % d\" % ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4493_A_1723",
            "java_code": "class GFG { static boolean onlyFirstAndLastAreSet ( int n ) { if ( n == 1 ) return true ; if ( n == 2 ) return false ; return ( ( ( n - 1 ) & ( n - 2 ) ) == 0 ) ; } public static void main ( String [ ] args ) { int n = 9 ; if ( onlyFirstAndLastAreSet ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def onlyFirstAndLastAreSet ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT if ( n == 2 ) : NEWLINE INDENTINDENT return False NEWLINE DEDENT return ( ( ( n - 1 ) & ( n - 2 ) ) == 0 ) NEWLINE DEDENT n = 9 NEWLINE if ( onlyFirstAndLastAreSet ( n ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4584_A_1724",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class GFG { static double decdiagonal ( double a ) { if ( a < 0 ) return - 1 ; double d = 1.902 * a ; return d ; } public static void main ( String [ ] args ) { int a = 9 ; System . out . println ( decdiagonal ( a ) ) ; } }",
            "python_code": "def decdiagonal ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT d = 1.902 * a NEWLINE return d NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 9 NEWLINE print ( decdiagonal ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_946_B_1725",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) while n > 0 and m > 0 : if n >= 2 * m : n = n % ( 2 * m ) elif m >= 2 * n : m = m % ( 2 * n ) else : breakprint ( n , m , sep = \" \" )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_630_A_1726",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; System . out . println ( \"25\" ) ; } }",
            "python_code": "print ( 25 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_405_A_1727",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Solution {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; for ( int i = 0 ; i < n ; i ++ ) { System . out . print ( a [ i ] + \" \" ) ; } } }",
            "python_code": "n = int ( input ( ) ) i = 0 a = [ ] a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) while i < len ( a ) : print ( a [ i ] ) i = i + 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3187_A_1728",
            "java_code": "import java . io . * ; class GFG { static int minimum_cost ( int a [ ] , int n ) { int mn = Integer . MAX_VALUE ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { mn = Math . min ( a [ i ] , mn ) ; sum += a [ i ] ; } return mn * ( sum - mn ) ; } public static void main ( String [ ] args ) { int a [ ] = { 4 , 3 , 2 , 5 } ; int n = a . length ; System . out . println ( minimum_cost ( a , n ) ) ; } }",
            "python_code": "import sys NEWLINE def minimum_cost ( a , n ) : NEWLINE INDENT mn = sys . maxsize NEWLINE sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT mn = min ( a [ i ] , mn ) NEWLINE sum += a [ i ] NEWLINE DEDENT return mn * ( sum - mn ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 4 , 3 , 2 , 5 ] NEWLINE n = len ( a ) NEWLINE print ( minimum_cost ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_41_B_1729",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "  n , b = map ( int , input ( ) . split ( ) )  t = list ( map ( int , input ( ) . split ( ) ) )  ans = 0  ma = 999999999 mi = 0 for i in range ( n ) :  if t [ i ] < ma : ma = t [ i ] elif t [ i ] > ma : temp = b // ma  rest = b - ( b // ma ) * ma rest += ( temp ) * t [ i ]  ans = max ( rest , ans )  print ( max ( ans , b ) )                         NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_616_A_1730",
            "java_code": "class GFG { public static long SubArraySum ( int arr [ ] , int n ) { long result = 0 , temp = 0 ; for ( int i = 0 ; i < n ; i ++ ) { temp = 0 ; for ( int j = i ; j < n ; j ++ ) { temp += arr [ j ] ; result += temp ; } } return result ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( \"Sum of SubArray : \" + SubArraySum ( arr , n ) ) ; } }",
            "python_code": "def SubArraySum ( arr , n ) : NEWLINE INDENT temp , result = 0 , 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT temp = 0 ; NEWLINE for j in range ( i , n ) : NEWLINE INDENTINDENTINDENT temp += arr [ j ] NEWLINE result += temp NEWLINE DEDENT DEDENT return result NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( \"Sum of SubArray :\" , SubArraySum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_409_A_1731",
            "java_code": "import java . io . FileInputStream ; import java . util . Scanner ;  public class Project_01 {  public static void main ( String [ ] args ) { try {",
            "python_code": "s1 = input ( ) s2 = input ( ) t1 = 0 t2 = 0  for i in range ( 0 , len ( s1 ) , 2 ) : if s1 [ i ] == '[' : if s2 [ i ] == '(' : t1 += 1 if s2 [ i ] == '8' : t2 += 1 if s1 [ i ] == '(' : if s2 [ i ] == '[' : t2 += 1 if s2 [ i ] == '8' : t1 += 1 if s1 [ i ] == '8' : if s2 [ i ] == '(' : t2 += 1 if s2 [ i ] == '[' : t1 += 1 if ( t1 > t2 ) : print ( \"TEAM 1 WINS\" ) elif ( t1 < t2 ) : print ( \"TEAM 2 WINS\" ) else : print ( \"TIE\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5260_A_1732",
            "java_code": "class GFG { static int largestNum ( int a , int b ) { return a * ( ( a / b ) > 0 ? 1 : 0 ) + b * ( ( b / a ) > 0 ? 1 : 0 ) ; } public static void main ( String [ ] args ) { int a = 22 , b = 1231 ; System . out . print ( largestNum ( a , b ) ) ; } }",
            "python_code": "def largestNum ( a , b ) : NEWLINE INDENT return a * ( bool ) ( a // b ) + \\ NEWLINE INDENTINDENT b * ( bool ) ( b // a ) ; NEWLINE DEDENT DEDENT a = 22 ; NEWLINE b = 1231 ; NEWLINE print ( largestNum ( a , b ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1426_A_1733",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; int t = scn . nextInt ( ) ; for ( int c = 1 ; c <= t ; c ++ ) { int n = scn . nextInt ( ) ;",
            "python_code": "t = int ( input ( ) ) NEWLINE for i in range ( t ) : n , x = map ( int , input ( ) . split ( ) ) NEWLINE count = 1 NEWLINE t = 3 NEWLINE while t <= n : t += x NEWLINE count += 1 NEWLINE print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3346_A_1734",
            "java_code": "import java . io . * ; class GFG { static int divisorSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; ++ i ) sum += ( n / i ) * i ; return sum ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( divisorSum ( n ) ) ; n = 5 ; System . out . println ( divisorSum ( n ) ) ; } }",
            "python_code": "def divisorSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += int ( n / i ) * i NEWLINE DEDENT return int ( sum ) NEWLINE DEDENT n = 4 NEWLINE print ( divisorSum ( n ) ) NEWLINE n = 5 NEWLINE print ( divisorSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2430_A_1735",
            "java_code": "import java . util . * ; class GFG { static int sumDivisibles ( int A , int B , int M ) { int sum = 0 ; for ( int i = A ; i <= B ; i ++ ) if ( i % M == 0 ) sum += i ; return sum ; } public static void main ( String [ ] args ) { int A = 6 , B = 15 , M = 3 ; System . out . print ( sumDivisibles ( A , B , M ) + \"\\n\" ) ; } }",
            "python_code": "def sumDivisibles ( A , B , M ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( A , B + 1 ) : NEWLINE INDENTINDENT if ( i % M == 0 ) : NEWLINE INDENTINDENTINDENT sum += i NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT A = 6 NEWLINE B = 15 NEWLINE M = 3 NEWLINE print ( sumDivisibles ( A , B , M ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_37_A_1736",
            "java_code": "import java . io . * ; import java . util . * ;  public class MAIN {  private static BufferedReader reader = null ; private static BufferedWriter writer = null ;  public static void main ( String [ ] args ) throws Exception { ",
            "python_code": "t = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1943_A_1737",
            "java_code": "class GFG { static int sum ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += arr [ i ] ; } sum = sum * ( int ) Math . pow ( 2 , n - 1 ) ; return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 2 , 1 , 5 , 6 } ; int n = arr . length ; System . out . println ( sum ( arr , n ) ) ; } }",
            "python_code": "def sum ( arr , n ) : NEWLINE INDENT sum = 0 NEWLINE for i in arr : NEWLINE INDENTINDENT sum += i NEWLINE DEDENT sum = sum * pow ( 2 , n - 1 ) NEWLINE return sum NEWLINE DEDENT arr = [ 2 , 1 , 5 , 6 ] NEWLINE n = len ( arr ) NEWLINE print ( sum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1450_A_1738",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; String s = in . next ( ) ; char c [ ] = s . toCharArray ( ) ; Arrays . sort ( c ) ; System . out . println ( String . valueOf ( c ) ) ; } } }",
            "python_code": "for nt in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE a = list ( input ( ) ) NEWLINE print ( \"\" . join ( sorted ( a ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_791_A_1739",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int l = scanner . nextInt ( ) ; int b = scanner . nextInt ( ) ;  int L = l ; int B = b ;  int counter = 0 ; while ( B >= L ) { L *= 3 ; B *= 2 ;  counter ++ ; }  System . out . println ( counter ) ; } }",
            "python_code": "l , b = map ( int , input ( ) . split ( ) ) years = 0 while l <= b : l *= 3 b *= 2 years += 1 print ( years ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1778_A_1740",
            "java_code": "class GFG { static int multiply ( int x , int y ) { if ( y == 0 ) return 0 ; if ( y > 0 ) return ( x + multiply ( x , y - 1 ) ) ; if ( y < 0 ) return - multiply ( x , - y ) ; return - 1 ; } public static void main ( String [ ] args ) { System . out . print ( \"\\n\" + multiply ( 5 , - 11 ) ) ; } }",
            "python_code": "def multiply ( x , y ) : NEWLINE INDENT if ( y == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT if ( y > 0 ) : NEWLINE INDENTINDENT return ( x + multiply ( x , y - 1 ) ) NEWLINE DEDENT if ( y < 0 ) : NEWLINE INDENTINDENT return - multiply ( x , - y ) NEWLINE DEDENT DEDENT print ( multiply ( 5 , - 11 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_371_A_1741",
            "java_code": "import java . util . * ; class solution { static float SellingPrice ( float CP , float PP ) { float P_decimal = 1 + ( PP / 100 ) ; float res = P_decimal * CP ; return res ; } public static void main ( String args [ ] ) { float C = 720 , P = 13 ; System . out . println ( SellingPrice ( C , P ) ) ; } }",
            "python_code": "def SellingPrice ( CP , PP ) : NEWLINE INDENT Pdecimal = 1 + ( PP / 100 ) NEWLINE res = Pdecimal * CP NEWLINE return res NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT C = 720 NEWLINE P = 13 NEWLINE print ( SellingPrice ( C , P ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_561_A_1742",
            "java_code": "public class GFG { static boolean bit_check ( int n ) { if ( ( n & ( n - 1 ) ) == 0 ) return true ; return false ; } public static void main ( String args [ ] ) { int n = 14 ; if ( bit_check ( n ) ) System . out . println ( '1' ) ; else System . out . println ( '0' ) ; } }",
            "python_code": "def bit_check ( n ) : NEWLINE INDENT if ( ( n & ( n - 1 ) ) == 0 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 14 NEWLINE if ( bit_check ( n ) ) : NEWLINE INDENTINDENT print ( '1' ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( '0' ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_112_B_1743",
            "java_code": "import java . util . * ; public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; if ( ( x == n / 2 || x == n / 2 + 1 ) && ( y == n / 2 || y == n / 2 + 1 ) ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; }  }",
            "python_code": "x , y , z = [ int ( x ) for x in input ( \"\" ) . split ( ) ]  n = x / 2  if ( ( y == n or y == n + 1 ) and ( z == n or z == n + 1 ) ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1083_A_1744",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int arr [ ] , int n , int k ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k == 0 ) { sum += arr [ i ] ; } } return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 15 , 16 , 10 , 9 , 6 , 7 , 17 } ; int n = arr . length ; int k = 3 ; System . out . println ( findSum ( arr , n , k ) ) ; } }",
            "python_code": "def findSum ( arr , n , k ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if arr [ i ] % k == 0 : NEWLINE INDENTINDENTINDENT sum += arr [ i ] NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 15 , 16 , 10 , 9 , 6 , 7 , 17 ] NEWLINE n = len ( arr ) NEWLINE k = 3 NEWLINE print ( findSum ( arr , n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1984_A_1745",
            "java_code": "import java . io . * ; import java . math . * ; public class GFG { int getMinNum ( int a , int b , int c ) { if ( c < a || c > b ) { return c ; } int x = ( ( b / c ) * c ) + c ; return x ; } public static void main ( String args [ ] ) { int a = 2 ; int b = 4 ; int c = 4 ; GFG g = new GFG ( ) ; System . out . println ( g . getMinNum ( a , b , c ) ) ; } }",
            "python_code": "def getMinNum ( a , b , c ) : NEWLINE INDENT if ( c < a or c > b ) : NEWLINE INDENTINDENT return c NEWLINE DEDENT x = ( ( b // c ) * c ) + c NEWLINE return x NEWLINE DEDENT a , b , c = 2 , 4 , 4 NEWLINE print ( getMinNum ( a , b , c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1204_A_1746",
            "java_code": "import java . nio . file . FileAlreadyExistsException ; import java . sql . SQLOutput ; import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "import mathn = input ( ) if n == '0' : print ( 0 ) else : k = int ( n , 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_701_B_1747",
            "java_code": "import java . util . * ; public class test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long rook = sc . nextLong ( ) ; Set < Long > rows = new HashSet < Long > ( ) ; Set < Long > cols = new HashSet < Long > ( ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) res = [ ] v = [ 0 ] * ( 10 ** 5 + 1 ) k1 = k2 = 0 h = [ 0 ] * ( 10 ** 5 + 1 ) for i in range ( m ) : x , y = map ( int , input ( ) . split ( ) ) if not v [ x ] or not h [ y ] : if not v [ x ] : v [ x ] = 1 k1 += 1 if not h [ y ] : h [ y ] = 1 k2 += 1 res += [ ( n - k1 ) * ( n - k2 ) ] else : res += [ res [ - 1 ] ] print ( * res , sep = '\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4058_A_1748",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int sumOfSeries ( int n ) { return ( n * ( 2 * n - 1 ) * ( 2 * n + 1 ) ) / 3 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def sumOfSeries ( n ) : NEWLINE INDENT return int ( ( n * ( 2 * n - 1 ) * ( 2 * n + 1 ) ) / 3 ) NEWLINE DEDENT n = 10 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_415_A_1749",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) x = list ( map ( int , input ( ) . split ( ) ) ) y = [ 0 ] * nfor i in range ( m ) : c = x [ i ] while x [ i ] <= n : b = x [ i ] - 1 if y [ b ] != 0 : break else : y [ b ] = c b += 1 x [ i ] += 1  for j in range ( n ) : print ( y [ j ] , end = ' ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1792_A_1750",
            "java_code": "import java . util . * ; class GFG { static int nth_group ( int n ) { return n * ( 2 * ( int ) Math . pow ( n , 2 ) + 1 ) ; } public static void main ( String arr [ ] ) { int N = 5 ; System . out . println ( nth_group ( N ) ) ; } }",
            "python_code": "def nth_group ( n ) : NEWLINE INDENT return n * ( 2 * pow ( n , 2 ) + 1 ) NEWLINE DEDENT N = 5 NEWLINE print ( nth_group ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1113_A_1751",
            "java_code": "import java . util . * ; import java . io . * ; public class horses { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; if ( n - 1 <= v ) { System . out . println ( n - 1 ) ; return ; } long cost = v - 1 ; for ( int i = 1 ; i <= n - v ; i ++ ) cost += i ; System . out . println ( cost ) ; } }",
            "python_code": "cities , tank = map ( int , input ( ) . split ( ) )  fuel_cost = 0  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_596_B_1752",
            "java_code": "import java . util . Scanner ;  public class WilburAndArray {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long prev , curr ; prev = sc . nextInt ( ) ; long count = Math . abs ( prev ) ; for ( int i = 1 ; i < n ; i ++ ) { curr = sc . nextInt ( ) ; count += Math . abs ( prev - curr ) ; prev = curr ; } System . out . println ( count ) ; sc . close ( ) ; } }",
            "python_code": "n = int ( input ( ) ) b = list ( map ( int , input ( ) . split ( ) ) ) a = [ 0 ] * ncount = abs ( b [ 0 ] ) for i in range ( 1 , n ) : count += abs ( b [ i ] - b [ i - 1 ] ) print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_359_B_1753",
            "java_code": "  import java . io . * ; import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;   public class Main1 {  static class pair implements Comparable < pair > { int a ; int b ; public pair ( int a , int b ) { this . a = a ; this . b = b ; } @ Override public int compareTo ( pair o ) {",
            "python_code": "import math  ans = [ ] n , m = map ( int , input ( ) . split ( ) ) for i in range ( 1 , n + 1 ) : ans . append ( [ 2 * i - 1 , 2 * i ] )  current = 0 i = 0 while current != 2 * m and i < n : if current < m and i < n : ans [ i ] [ 0 ] , ans [ i ] [ 1 ] = ans [ i ] [ 1 ] , ans [ i ] [ 0 ] current += 1 i += 1 for i in ans : print ( * i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2314_A_1754",
            "java_code": "import java . io . * ; class GFG { static float cone ( float a ) { if ( a < 0 ) return - 1 ; float r = ( float ) ( a * Math . sqrt ( 2 ) ) / 3 ; float h = ( 2 * a ) / 3 ; float V = ( float ) ( 3.14 * Math . pow ( r , 2 ) * h ) ; return V ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( cone ( a ) ) ; } }",
            "python_code": "import math NEWLINE def cone ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT r = ( a * math . sqrt ( 2 ) ) / 3 ; NEWLINE h = ( 2 * a ) / 3 ; NEWLINE V = 3.14 * math . pow ( r , 2 ) * h ; NEWLINE return V ; NEWLINE DEDENT a = 5 ; NEWLINE print ( cone ( a ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2468_A_1755",
            "java_code": "public class GFG { static int nthTerm ( int n ) { return 4 * ( int ) Math . pow ( n , 2 ) - 3 * n + 2 ; } public static void main ( String args [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 4 * pow ( n , 2 ) - 3 * n + 2 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2458_A_1756",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static float rectanglearea ( float a , float b ) { if ( a < 0 || b < 0 ) return - 1 ; return 2 * a * b ; } public static void main ( String args [ ] ) { float a = 10 , b = 8 ; System . out . println ( rectanglearea ( a , b ) ) ; } }",
            "python_code": "def rectanglearea ( a , b ) : NEWLINE INDENT if a < 0 or b < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return 2 * a * b NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a , b = 10 , 8 NEWLINE print ( rectanglearea ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_219_A_1757",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; scan . nextLine ( ) ; String s = scan . nextLine ( ) ; char [ ] temp = s . toCharArray ( ) ; Arrays . sort ( temp ) ; String l = String . valueOf ( temp ) ;",
            "python_code": "k = int ( input ( ) ) s = str ( input ( ) ) s = list ( s ) d = { } for i in s : d [ i ] = s . count ( i ) cnt = 0 s1 = '' for j in d : if d [ j ] % k == 0 : cnt += 1 s1 += ( j * int ( d [ j ] / k ) ) if cnt != len ( d ) : print ( - 1 ) else : print ( s1 * k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1031_A_1758",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001031A { static public void main ( final String [ ] args ) throws IOException { p001031A . _main ( args ) ; }",
            "python_code": "a , b , c = ( int ( x ) for x in input ( ) . split ( ) ) r = 0 for x in range ( c ) : r += ( ( ( a - x * 4 ) + ( b - x * 4 ) - 2 ) * 2 ) print ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2638_A_1759",
            "java_code": "import java . lang . Math ; class GFG { public static int nthTerm ( int N ) { int nth = 0 , i ; for ( i = N ; i > 0 ; i -- ) { nth += Math . pow ( i , i ) ; } return nth ; } public static void main ( String [ ] args ) { int N = 3 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT nth = 0 NEWLINE for i in range ( N , 0 , - 1 ) : NEWLINE INDENTINDENT nth += pow ( i , i ) NEWLINE DEDENT return nth NEWLINE DEDENT N = 3 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_A_1760",
            "java_code": "import java . util . Scanner ;   public class submission { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int d = in . nextInt ( ) ; int l = in . nextInt ( ) ; int v1 = in . nextInt ( ) ; int v2 = in . nextInt ( ) ; double distance = l - d ; double v = v1 + v2 ; double t = distance / v ; System . out . println ( t ) ; } }",
            "python_code": "d , l , v1 , v2 = map ( int , input ( ) . split ( ) ) print ( ( l - d ) / ( v1 + v2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_365_B_1761",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long [ ] arr = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextLong ( ) ; }",
            "python_code": "n = int ( input ( ) ) x = list ( map ( int , input ( ) . split ( ) ) ) a , m = 2 , 2 if n <= 1 : m = 1 for i in range ( 2 , n ) : if x [ i ] == x [ i - 1 ] + x [ i - 2 ] : a += 1 else : a = 2 m = max ( m , a ) print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_122_A_1762",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) lucky = [ 4 , 7 , 47 , 74 , 447 , 474 , 477 , 774 , 747 , 744 ] count = 0 for i in range ( len ( lucky ) ) : if ( ( n == lucky [ i ] ) or ( n % lucky [ i ] == 0 ) ) : print ( 'YES' ) break else : count += 1 if count == 10 : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3252_A_1763",
            "java_code": "class GFG { public static int arraySum ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum = sum + arr [ i ] ; return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 10 , 11 , 12 , 13 , 12 , 11 , 10 } ; int n = arr . length ; System . out . print ( arraySum ( arr , n ) ) ; } }",
            "python_code": "def arraySum ( arr , n ) : NEWLINE INDENT _sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT _sum = _sum + arr [ i ] NEWLINE DEDENT return _sum NEWLINE DEDENT arr = [ 10 , 11 , 12 , 13 , 12 , 11 , 10 ] NEWLINE n = len ( arr ) NEWLINE print ( arraySum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3703_A_1764",
            "java_code": "import java . io . * ; class GFG { static int numberOfWays ( int x ) { int dp [ ] = new int [ x + 1 ] ; dp [ 0 ] = dp [ 1 ] = 1 ; for ( int i = 2 ; i <= x ; i ++ ) dp [ i ] = dp [ i - 1 ] + ( i - 1 ) * dp [ i - 2 ] ; return dp [ x ] ; } public static void main ( String [ ] args ) { int x = 3 ; System . out . println ( numberOfWays ( x ) ) ; } }",
            "python_code": "def numberOfWays ( x ) : NEWLINE INDENT if x == 0 or x == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( numberOfWays ( x - 1 ) + ( x - 1 ) * numberOfWays ( x - 2 ) ) NEWLINE DEDENT DEDENT x = 3 NEWLINE print ( numberOfWays ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1461_A_1765",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 3 == 0 ) System . out . print ( 'a' ) ; else if ( i % 3 == 1 ) System . out . print ( 'b' ) ; else System . out . print ( 'c' ) ; }  System . out . println ( ) ; } } }",
            "python_code": "for t in range ( int ( input ( ) ) ) : n , k = map ( int , input ( ) . split ( \" \" ) ) NEWLINE print ( ( \"abc\" * n ) [ : n ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_776_B_1766",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; if ( n == 1 ) { System . out . println ( 1 ) ; System . out . println ( 1 ) ; } else if ( n == 2 ) { System . out . println ( 1 ) ; System . out . println ( 1 + \" \" + 1 ) ; } else { long [ ] prices = new long [ ( int ) n + 2 ] ;",
            "python_code": "import math  n = int ( input ( ) ) answer = \"\" if n < 3 : print ( 1 ) else : print ( 2 )  m = n + 2 numbers = [ True ] * mnumbers [ 0 ] = Falsenumbers [ 1 ] = False  for i in range ( 2 , int ( math . sqrt ( m ) ) + 1 ) : j = 0 while i ** 2 + j * i < m : numbers [ i ** 2 + j * i ] = False j += 1  for i in range ( 2 , m ) : if numbers [ i ] : answer += \"1 \" else : answer += \"2 \"  answer = answer [ : - 1 ] print ( answer ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2932_A_1767",
            "java_code": "import java . io . * ; class GFG { static int frequency ( int a [ ] , int n , int x ) { int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == x ) count ++ ; return count ; } public static void main ( String [ ] args ) { int a [ ] = { 0 , 5 , 5 , 5 , 4 } ; int x = 5 ; int n = a . length ; System . out . println ( frequency ( a , n , x ) ) ; } }",
            "python_code": "def frequency ( a , x ) : NEWLINE INDENT count = 0 NEWLINE for i in a : NEWLINE INDENTINDENT if i == x : count += 1 NEWLINE DEDENT return count NEWLINE DEDENT a = [ 0 , 5 , 5 , 5 , 4 ] NEWLINE x = 5 NEWLINE print ( frequency ( a , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_A_1768",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "print ( len ( bin ( int ( input ( ) ) ) [ 2 : ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1939_A_1769",
            "java_code": "class GFG { static boolean check ( String s ) { int n = s . length ( ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( s . charAt ( i ) > s . charAt ( i + 1 ) ) return true ; } return false ; } public static void main ( String args [ ] ) { String s = \"geeksforgeeks\" ; if ( check ( s ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def check ( s ) : NEWLINE INDENT n = len ( s ) NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENT if ( s [ i ] > s [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT return False NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT s = \"geeksforgeeks\" NEWLINE if ( check ( s ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4624_A_1770",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static void main ( String args [ ] ) { float x1 = 2 , x2 = 1 , x3 = 3 ; float y1 = 2 , y2 = 1 , y3 = 1 ; float a = 2 , b = 1 , c = 1 ; float x = ( a * x1 + b * x2 + c * x3 ) / ( a + b + c ) ; float y = ( a * y1 + b * y2 + c * y3 ) / ( a + b + c ) ; System . out . println ( \"Incenter= \" + \"(\" + x + \", \" + y + \")\" ) ; } }",
            "python_code": "x1 = 2 ; x2 = 1 ; x3 = 3 ; NEWLINE y1 = 2 ; y2 = 1 ; y3 = 1 ; NEWLINE a = 2 ; b = 1 ; c = 1 ; NEWLINE x = ( a * x1 + b * x2 + c * x3 ) / ( a + b + c ) ; NEWLINE y = ( a * y1 + b * y2 + c * y3 ) / ( a + b + c ) ; NEWLINE print ( \"Incenter = (\" , x , \",\" , y , \")\" ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_804_A_1771",
            "java_code": "import java . util . Scanner ;  public class Comp11HW3 { static int m ( int i1 ) { return i1 % 2 == 0 ? i1 / 2 - 1 : i1 / 2 ; }  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int i1 = input . nextInt ( ) ; ",
            "python_code": "import math  n = int ( input ( ) ) print ( math . ceil ( n / 2 ) - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_389_A_1772",
            "java_code": "class Solution { public char findTheDifference ( String s , String t ) { int total = t . charAt ( s . length ( ) ) ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) total += ( t . charAt ( i ) - s . charAt ( i ) ) ; return ( char ) total ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def findTheDifference ( self , s , t ) : NEWLINE INDENTINDENT res = ord ( t [ - 1 ] ) NEWLINE for i in range ( len ( s ) ) : NEWLINE INDENTINDENTINDENT res += ord ( t [ i ] ) NEWLINE res -= ord ( s [ i ] ) NEWLINE DEDENT return chr ( res ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_849_A_1773",
            "java_code": "import java . util . Scanner ;  public class P849A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } System . out . println ( a [ 0 ] % 2 != 0 && a [ n - 1 ] % 2 != 0 && n % 2 != 0 ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) if n % 2 == 0 : print ( 'No' ) else : if a [ 0 ] % 2 == 0 or a [ - 1 ] % 2 == 0 : print ( 'No' ) else : print ( 'Yes' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1426_A_1774",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; if ( n == 1 ) { System . out . println ( 1 ) ; } else { System . out . println ( ( int ) Math . ceil ( ( double ) ( n - 2 ) / ( double ) x ) + 1 ) ; } } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE for i in range ( t ) : n , x = map ( int , input ( ) . split ( ) ) NEWLINE if n == 1 or n == 2 : NEWLINE INDENT print ( 1 ) else : NEWLINE print ( ( n - 3 ) // x + 2 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_239_A_1775",
            "java_code": "import java . util . * ; public class TwoBagsOfPotatoes { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int y = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; sc . close ( ) ; boolean falg = false ; int start = y / k + 1 ; for ( int i = start ; i <= n / k ; i ++ ) { falg = true ; System . out . print ( ( k * i - y ) + \" \" ) ; } if ( ! falg ) System . out . println ( - 1 ) ; } }",
            "python_code": "y , k , n = map ( int , input ( ) . split ( ) ) c = int ( y // k ) + 1 if y >= n or c * k not in range ( y , n + 1 ) : print ( - 1 ) else : c = int ( y // k ) + 1 arr = [ x - y for x in range ( c * k , n + 1 , k ) ] print ( * arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3663_A_1776",
            "java_code": "class GFG { static double innerCirclearea ( double radius ) { if ( radius < 0 ) { return - 1 ; } double r = radius / 2 ; double Area = ( 3.14 * Math . pow ( r , 2 ) ) ; return Area ; } public static void main ( String arr [ ] ) { double radius = 4 ; System . out . println ( \"Area of circle c2 = \" + innerCirclearea ( radius ) ) ; } }",
            "python_code": "def innerCirclearea ( radius ) : NEWLINE INDENT if ( radius < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT r = radius / 2 ; NEWLINE Area = ( 3.14 * pow ( r , 2 ) ) ; NEWLINE return Area ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT radius = 4 ; NEWLINE print ( \"Area of circle c2 =\" , innerCirclearea ( radius ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_591_A_1777",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; double n = input . nextDouble ( ) ; double p = input . nextDouble ( ) ; double q = input . nextDouble ( ) ; System . out . printf ( Locale . UK , \"%.4f\\n\" , p * n / ( p + q ) ) ; } }",
            "python_code": "s = int ( input ( ) ) p = int ( input ( ) ) q = int ( input ( ) ) print ( s * p / ( p + q ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_262_B_1778",
            "java_code": "import java . util . * ; import java . io . * ; public class Asd { static Scanner s = new Scanner ( System . in ) ; static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String args [ ] ) { int t = 1 ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) i = 0 while i < n and k > 0 and a [ i ] < 0 : a [ i ] = - 1 * a [ i ] i += 1 k -= 1 a = sorted ( a ) if k % 2 == 1 : a [ 0 ] = - 1 * a [ 0 ] print ( sum ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1330_B_1779",
            "java_code": "import java . math . BigInteger ; import java . util . * ; import java . io . * ;  public class CFB { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ;",
            "python_code": "from sys import stdin , stdoutinput = stdin . readline def main ( ) : t = int ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_832_B_1780",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ; import java . util . Set ;  public class ExamA3 { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String s1 = in . next ( ) ; Set < Character > setS1 = new HashSet < > ( ) ; for ( char c : s1 . toCharArray ( ) ) { setS1 . add ( c ) ; } String s2 = in . next ( ) ;  int flag = - 1 ;",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_387_A_1781",
            "java_code": "class Solution { public int firstUniqChar ( String s ) { int freq [ ] = new int [ 26 ] ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) freq [ s . charAt ( i ) - 'a' ] ++ ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( freq [ s . charAt ( i ) - 'a' ] == 1 ) return i ; return - 1 ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def firstUniqChar ( self , s ) : NEWLINE INDENTINDENT count_map = { } NEWLINE for c in s : NEWLINE INDENTINDENTINDENT count_map [ c ] = count_map . get ( c , 0 ) + 1 NEWLINE DEDENT for i , c in enumerate ( s ) : NEWLINE INDENTINDENTINDENT if count_map [ c ] == 1 : NEWLINE INDENTINDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return - 1 NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2346_A_1782",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int nextPerfectSquare ( int N ) { int nextN = ( int ) Math . floor ( Math . sqrt ( N ) ) + 1 ; return nextN * nextN ; } public static void main ( String args [ ] ) { int n = 35 ; System . out . println ( nextPerfectSquare ( n ) ) ; } }",
            "python_code": "import math NEWLINE def nextPerfectSquare ( N ) : NEWLINE INDENT nextN = math . floor ( math . sqrt ( N ) ) + 1 NEWLINE return nextN * nextN NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 35 NEWLINE print ( nextPerfectSquare ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1857_A_1783",
            "java_code": "class GFG { static boolean check ( int a [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( a [ i ] == 1 ) return true ; return false ; } public static void main ( String [ ] args ) { int a [ ] = { 0 , 1 , 0 , 1 } ; int n = a . length ; if ( check ( a , n ) == true ) System . out . println ( \"YES\\n\" ) ; else System . out . println ( \"NO\\n\" ) ; } }",
            "python_code": "def check ( a , n ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if ( a [ i ] ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT return False NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = [ 0 , 1 , 0 , 1 ] NEWLINE n = len ( a ) NEWLINE if ( check ( a , n ) ) : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1013_A_1784",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001013A { static public void main ( final String [ ] args ) throws IOException { p001013A . _main ( args ) ; }",
            "python_code": "x = int ( input ( ) ) ar = list ( map ( int , input ( ) . split ( ) ) ) [ : x ] b = list ( map ( int , input ( ) . split ( ) ) ) [ : x ] ars = sum ( ar ) brs = sum ( b ) if ( brs <= ars ) : print ( \"Yes\" ) else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1754_A_1785",
            "java_code": "class GFG { static int dayofweek ( int d , int m , int y ) { int t [ ] = { 0 , 3 , 2 , 5 , 0 , 3 , 5 , 1 , 4 , 6 , 2 , 4 } ; y -= ( m < 3 ) ? 1 : 0 ; return ( y + y / 4 - y / 100 + y / 400 + t [ m - 1 ] + d ) % 7 ; } public static void main ( String arg [ ] ) { int day = dayofweek ( 30 , 8 , 2010 ) ; System . out . print ( day ) ; } }",
            "python_code": "def dayofweek ( d , m , y ) : NEWLINE INDENT t = [ 0 , 3 , 2 , 5 , 0 , 3 , 5 , 1 , 4 , 6 , 2 , 4 ] NEWLINE y -= m < 3 NEWLINE return ( ( y + int ( y / 4 ) - int ( y / 100 ) + int ( y / 400 ) + t [ m - 1 ] + d ) % 7 ) NEWLINE DEDENT day = dayofweek ( 30 , 8 , 2010 ) NEWLINE print ( day ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p001_A_1786",
            "java_code": "public final class p001 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p001 ( ) . run ( ) ) ; } public String run ( ) { int sum = 0 ; for ( int i = 0 ; i < 1000 ; i ++ ) { if ( i % 3 == 0 || i % 5 == 0 ) sum += i ; } return Integer . toString ( sum ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT ans = sum ( x for x in range ( 1000 ) if ( x % 3 == 0 or x % 5 == 0 ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1772_A_1787",
            "java_code": "class GFG { static int sum ( int N ) { int S1 , S2 , S3 ; S1 = ( ( N / 3 ) ) * ( 2 * 3 + ( N / 3 - 1 ) * 3 ) / 2 ; S2 = ( ( N / 4 ) ) * ( 2 * 4 + ( N / 4 - 1 ) * 4 ) / 2 ; S3 = ( ( N / 12 ) ) * ( 2 * 12 + ( N / 12 - 1 ) * 12 ) / 2 ; return S1 + S2 - S3 ; } public static void main ( String [ ] args ) { int N = 20 ; System . out . print ( sum ( 12 ) ) ; } }",
            "python_code": "def sum ( N ) : NEWLINE INDENT global S1 , S2 , S3 NEWLINE S1 = ( ( ( N // 3 ) ) * ( 2 * 3 + ( N // 3 - 1 ) * 3 ) // 2 ) NEWLINE S2 = ( ( ( N // 4 ) ) * ( 2 * 4 + ( N // 4 - 1 ) * 4 ) // 2 ) NEWLINE S3 = ( ( ( N // 12 ) ) * ( 2 * 12 + ( N // 12 - 1 ) * 12 ) // 2 ) NEWLINE return int ( S1 + S2 - S3 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 12 NEWLINE print ( sum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5150_A_1788",
            "java_code": "class GFG { public static void main ( String [ ] args ) { char i ; System . out . printf ( \"The Alphabets from A to Z are: \\n\" ) ; for ( i = 'A' ; i <= 'Z' ; i ++ ) { System . out . printf ( \"%c \" , i ) ; } } }",
            "python_code": "if __name__ == '__main__' : NEWLINE INDENT i = chr ; NEWLINE print ( \"The Alphabets from A to Z are: \" ) ; NEWLINE for i in range ( ord ( 'A' ) , ord ( 'Z' ) + 1 ) : NEWLINE INDENTINDENT print ( chr ( i ) , end = \" \" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4620_A_1789",
            "java_code": "class GFG { static void result ( long n , long k , long t ) { if ( t <= k ) System . out . println ( t ) ; else if ( t <= n ) System . out . println ( k ) ; else { long temp = t - n ; temp = k - temp ; System . out . println ( temp ) ; } } public static void main ( String args [ ] ) { long n , k , t ; n = 10 ; k = 5 ; t = 12 ; result ( n , k , t ) ; } }",
            "python_code": "def result ( n , k , t ) : NEWLINE INDENT if ( t <= k ) : NEWLINE INDENTINDENT print ( t ) NEWLINE DEDENT elif ( t <= n ) : NEWLINE INDENTINDENT print ( k ) NEWLINE DEDENT else : NEWLINE INDENTINDENT temp = t - n NEWLINE temp = k - temp NEWLINE print ( temp ) NEWLINE DEDENT DEDENT n = 10 NEWLINE k = 5 NEWLINE t = 12 NEWLINE result ( n , k , t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_384_A_1790",
            "java_code": "import java . io . * ; class GfG { static void solution ( int a , int b , int n ) { for ( int i = 0 ; i * a <= n ; i ++ ) { if ( ( n - ( i * a ) ) % b == 0 ) { System . out . println ( \"x = \" + i + \", y = \" + ( n - ( i * a ) ) / b ) ; return ; } } System . out . println ( \"No solution\" ) ; } public static void main ( String [ ] args ) { int a = 2 , b = 3 , n = 7 ; solution ( a , b , n ) ; } }",
            "python_code": "def solution ( a , b , n ) : NEWLINE INDENT i = 0 NEWLINE while i * a <= n : NEWLINE INDENTINDENT if ( n - ( i * a ) ) % b == 0 : NEWLINE INDENTINDENTINDENT print ( \"x = \" , i , \", y = \" , int ( ( n - ( i * a ) ) / b ) ) NEWLINE return 0 NEWLINE DEDENT i = i + 1 NEWLINE DEDENT print ( \"No solution\" ) NEWLINE DEDENT a = 2 NEWLINE b = 3 NEWLINE n = 7 NEWLINE solution ( a , b , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1458_A_1791",
            "java_code": "import java . io . BufferedOutputStream ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;",
            "python_code": "from math import gcdn , m = map ( int , input ( ) . split ( ) ) NEWLINE a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE b = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE d = 0 NEWLINE for i in range ( 1 , n ) : d = gcd ( d , abs ( a [ i ] - a [ i - 1 ] ) ) NEWLINE ans = [ gcd ( d , a [ 0 ] + elm ) for elm in b ] NEWLINE print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_50_A_1792",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ;  int m = sc . nextInt ( ) ; int n = sc . nextInt ( ) ;  int size = m * n ; int max = size / 2 ; System . out . print ( max ) ;  } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) k = 0 k += ( m // 2 ) * nk += ( m % 2 ) * ( n // 2 ) print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3940_A_1793",
            "java_code": "class GFG { static int maxTeams ( int N1 , int N2 ) { int count = 0 ; while ( N1 > 0 && N2 > 0 && N1 + N2 >= 3 ) { if ( N1 > N2 ) { N1 -= 2 ; N2 -= 1 ; } else { N1 -= 1 ; N2 -= 2 ; } count ++ ; } return count ; } public static void main ( String [ ] args ) { int N1 = 4 , N2 = 5 ; System . out . println ( maxTeams ( N1 , N2 ) ) ; } }",
            "python_code": "def maxTeams ( N1 , N2 ) : NEWLINE INDENT count = 0 NEWLINE while ( N1 > 0 and N2 > 0 and N1 + N2 >= 3 ) : NEWLINE INDENTINDENT if ( N1 > N2 ) : NEWLINE INDENTINDENTINDENT N1 -= 2 NEWLINE N2 -= 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT N1 -= 1 NEWLINE N2 -= 2 NEWLINE DEDENT count = count + 1 NEWLINE DEDENT return count NEWLINE DEDENT N1 = 4 NEWLINE N2 = 5 NEWLINE print ( maxTeams ( N1 , N2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3047_A_1794",
            "java_code": "import java . io . * ; class GFG { static int seriesSum ( int n ) { return ( n * ( n + 1 ) * ( n + 2 ) ) / 6 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( seriesSum ( n ) ) ; } }",
            "python_code": "def seriesSum ( n ) : NEWLINE INDENT return int ( ( n * ( n + 1 ) * ( n + 2 ) ) / 6 ) NEWLINE DEDENT n = 4 NEWLINE print ( seriesSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4855_A_1795",
            "java_code": "import java . io . * ; class GFG { public static void main ( String args [ ] ) { float P = 1 , R = 1 , T = 1 ; float SI = ( P * T * R ) / 100 ; System . out . println ( \"Simple interest = \" + SI ) ; } }",
            "python_code": "P = 1 NEWLINE R = 1 NEWLINE T = 1 NEWLINE SI = ( P * R * T ) / 100 NEWLINE print ( \"simple interest is\" , SI ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3035_A_1796",
            "java_code": "class GFG { static int power ( int n , int r ) { int count = 0 ; for ( int i = r ; ( n / i ) >= 1 ; i = i * r ) count += n / i ; return count ; } public static void main ( String [ ] args ) { int n = 6 , r = 3 ; System . out . print ( power ( n , r ) ) ; } }",
            "python_code": "def power ( n , r ) : NEWLINE INDENT count = 0 ; i = r NEWLINE while ( ( n / i ) >= 1 ) : NEWLINE INDENTINDENT count += n / i NEWLINE i = i * r NEWLINE DEDENT return int ( count ) NEWLINE DEDENT n = 6 ; r = 3 NEWLINE print ( power ( n , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1093_B_1797",
            "java_code": "import com . sun . security . jgss . GSSUtil ;  import javax . swing . table . AbstractTableModel ; import java . io . * ; import java . util . * ; import java . util . concurrent . atomic . AtomicReferenceFieldUpdater ; ",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : s = input ( ) if s != s [ : : - 1 ] : print ( s ) else : t = s [ 1 : ] + s [ 0 ] if s == t : print ( \"-1\" ) else : print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1868_A_1798",
            "java_code": "import java . io . * ; class GFG { static int findNumber ( int n ) { int num = n - 1 ; num = 2 * ( int ) Math . pow ( 4 , num ) ; num = ( int ) Math . floor ( num / 3.0 ) ; return num ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( findNumber ( n ) ) ; } }",
            "python_code": "def findNumber ( n ) : NEWLINE INDENT num = n - 1 ; NEWLINE num = 2 * ( 4 ** num ) ; NEWLINE num = num // 3 ; NEWLINE return num ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE print ( findNumber ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1401_A_1799",
            "java_code": "class GFG { static int factorial ( int n ) { int fact = 1 ; for ( int i = 2 ; i <= n ; i ++ ) fact = fact * i ; return ( fact ) ; } static int result ( int n , int m ) { return ( factorial ( n ) - factorial ( n - m + 1 ) * factorial ( m ) ) ; } public static void main ( String args [ ] ) { System . out . println ( result ( 5 , 3 ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT fact = 1 ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE DEDENT return ( fact ) NEWLINE DEDENT def result ( n , m ) : NEWLINE INDENT return ( factorial ( n ) - factorial ( n - m + 1 ) * factorial ( m ) ) NEWLINE DEDENT print ( result ( 5 , 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5168_A_1800",
            "java_code": "class GFG { static void myCopy ( char s1 [ ] , char s2 [ ] ) { int i = 0 ; for ( i = 0 ; i < s1 . length ; i ++ ) s2 [ i ] = s1 [ i ] ; } public static void main ( String [ ] args ) { char s1 [ ] = \"GEEKSFORGEEKS\" . toCharArray ( ) ; char s2 [ ] = new char [ s1 . length ] ; myCopy ( s1 , s2 ) ; System . out . println ( String . valueOf ( s2 ) ) ; } }",
            "python_code": "def myCopy ( s1 , s2 ) : NEWLINE INDENT for i in range ( len ( s1 ) ) : NEWLINE INDENTINDENT s2 [ i ] = s1 [ i ] ; NEWLINE DEDENT DEDENT s1 = \"GEEKSFORGEEKS\" ; NEWLINE s2 = [ '' ] * ( len ( s1 ) ) ; NEWLINE myCopy ( s1 , s2 ) ; NEWLINE print ( ( \"\" . join ( s2 ) ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1241_A_1801",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static float ellipse ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; float x = ( float ) ( 3.14 * l * b ) / 4 ; return x ; } public static void main ( String args [ ] ) { float a = 5 , b = 3 ; System . out . println ( ellipse ( a , b ) ) ; } }",
            "python_code": "def ellipse ( l , b ) : NEWLINE INDENT if l < 0 or b < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = ( 3.14 * l * b ) / 4 NEWLINE return x NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l , b = 5 , 3 NEWLINE print ( ellipse ( l , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_44_A_1802",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ;  public class problem112 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) arr = [ ] ans = 0 for i in range ( n ) : s = input ( ) if s not in arr : arr . append ( s ) ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_401_A_1803",
            "java_code": "import java . util . * ; public class VanyaandCards {  public static void main ( String [ ] args ) {",
            "python_code": "import sysfrom math import ceil  def main ( ) : _ , m , * l = map ( int , sys . stdin . read ( ) . strip ( ) . split ( ) ) return int ( ceil ( abs ( sum ( l ) ) / m ) ) print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_147_A_1804",
            "java_code": "import java . io . IOException ; import java . util . * ; public class Punctuation {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import re s = input ( ) . strip ( ) s = re . sub ( '\\s+' , ' ' , s ) s = re . sub ( '\\s?([.,!?])\\s?' , '\\\\1 ' , s ) print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_579_A_1805",
            "java_code": "import java . util . Arrays ; import java . util . Locale ; import java . util . Scanner ; import java . lang . String ; import java . util . Random ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; n != 0 ; i ++ ) { if ( n % 2 == 0 ) { n = n / 2 ; } else { n -- ; ans ++ ; }  } System . out . println ( ans ) ; } }",
            "python_code": "n = int ( input ( ) ) bin_n = bin ( n ) [ 2 : ] print ( bin_n . count ( '1' ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p301_A_1806",
            "java_code": "public final class p301 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p301 ( ) . run ( ) ) ; } public String run ( ) { int a = 0 ; int b = 1 ; for ( int i = 0 ; i < 32 ; i ++ ) { int c = a + b ; a = b ; b = c ; } return Integer . toString ( a ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT a = 0 NEWLINE b = 1 NEWLINE for i in range ( 32 ) : NEWLINE INDENTINDENT a , b = b , a + b NEWLINE DEDENT return str ( a ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2345_A_1807",
            "java_code": "class GFG { static boolean isPerfectSquare ( double x ) { double sr = Math . sqrt ( x ) ; return ( ( sr - Math . floor ( sr ) ) == 0 ) ; } public static void main ( String [ ] args ) { double x = 2500 ; if ( isPerfectSquare ( x ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "import math NEWLINE def isPerfectSquare ( x ) : NEWLINE INDENT sr = math . sqrt ( x ) NEWLINE return ( ( sr - math . floor ( sr ) ) == 0 ) NEWLINE DEDENT x = 2500 NEWLINE if ( isPerfectSquare ( x ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_661_A_1808",
            "java_code": "class GFG { long ll ; static void solve ( long n ) { if ( n == 1 ) { System . out . println ( - 1 ) ; } else { int num = 2 ; for ( long i = 0 ; i < n - 1 ; i ++ ) { num = ( num * 10 ) + 3 ; } System . out . println ( num ) ; } } public static void main ( String [ ] args ) { long n = 4 ; solve ( n ) ; } }",
            "python_code": "def solve ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT print ( - 1 ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT num = 2 ; NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENTINDENT num = ( num * 10 ) + 3 ; NEWLINE DEDENT print ( num ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 ; NEWLINE solve ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_572_A_1809",
            "java_code": "import java . io . * ; class GFG { static int count ( int S [ ] , int m , int n ) { if ( n == 0 ) return 1 ; if ( n < 0 ) return 0 ; if ( m <= 0 && n >= 1 ) return 0 ; return count ( S , m - 1 , n ) + count ( S , m , n - S [ m - 1 ] ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int m = arr . length ; System . out . println ( count ( arr , m , 4 ) ) ; } }",
            "python_code": "def count ( S , m , n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if ( n < 0 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT if ( m <= 0 and n >= 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return count ( S , m - 1 , n ) + count ( S , m , n - S [ m - 1 ] ) ; NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE m = len ( arr ) NEWLINE print ( count ( arr , m , 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_216_A_1810",
            "java_code": "import java . util . Scanner ;  public class TileArea { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ; int c = scan . nextInt ( ) ;  System . out . println ( ( b + a - 1 ) * ( c + a - 1 ) - a * ( a - 1 ) ) ; } }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) print ( b * c + ( a - 1 ) * ( c + b - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_366_A_1811",
            "java_code": "import java . util . * ; public class DimaandGuards {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) flag = Falsefor i in range ( 4 ) : l = [ int ( i ) for i in input ( ) . split ( ) ] if not flag and n >= min ( l [ 0 ] , l [ 1 ] ) + min ( l [ 2 ] , l [ 3 ] ) : print ( i + 1 , min ( l [ 0 ] , l [ 1 ] ) , n - min ( l [ 0 ] , l [ 1 ] ) ) flag = Trueif not flag : print ( - 1 )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_556_A_1812",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class NewClass {  public static void main ( String [ ] args ) throws IOException { BufferedReader reader = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int len = Integer . parseInt ( reader . readLine ( ) ) ; String str = reader . readLine ( ) ; int conuterOnces = 0 , counterZeros = 0 ; ",
            "python_code": "n = int ( input ( ) ) s = input ( ) m = abs ( s . count ( '0' ) - s . count ( '1' ) ) print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4187_A_1813",
            "java_code": "import java . util . * ; class GFG { static int two_sets ( int a [ ] , int n ) { Arrays . sort ( a ) ; return a [ n / 2 ] - a [ ( n / 2 ) - 1 ] ; } public static void main ( String [ ] args ) { int a [ ] = { 1 , 4 , 4 , 6 , 7 , 9 } ; int n = a . length ; System . out . println ( two_sets ( a , n ) ) ; } }",
            "python_code": "def two_sets ( a , n ) : NEWLINE INDENT a . sort ( ) ; NEWLINE return ( a [ n // 2 ] - a [ ( n // 2 ) - 1 ] ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 1 , 4 , 4 , 6 , 7 , 9 ] ; NEWLINE n = len ( a ) ; NEWLINE print ( two_sets ( a , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1257_A_1814",
            "java_code": "import java . util . * ; class GFG { static void findNumbers ( int N ) { int i = 1 ; while ( i <= N ) { System . out . print ( ( i * i * i ) + \" \" ) ; i ++ ; } } public static void main ( String [ ] args ) { int N = 4 ; findNumbers ( N ) ; } }",
            "python_code": "def findNumbers ( N ) : NEWLINE INDENT i = 1 NEWLINE while ( i <= N ) : NEWLINE INDENTINDENT print ( ( i * i * i ) , end = \" \" ) NEWLINE i += 1 NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 4 NEWLINE findNumbers ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_105_A_1815",
            "java_code": "class GFG { static int maxN = 20 ; static int maxM = 64 ; static int cntSplits ( String s ) { if ( s . charAt ( s . length ( ) - 1 ) == '1' ) return 0 ; int c_zero = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) c_zero += ( s . charAt ( i ) == '0' ) ? 1 : 0 ; return ( int ) Math . pow ( 2 , c_zero - 1 ) ; } public static void main ( String [ ] args ) { String s = \"10010\" ; System . out . println ( cntSplits ( s ) ) ; } }",
            "python_code": "def cntSplits ( s ) : NEWLINE INDENT if ( s [ len ( s ) - 1 ] == '1' ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT c_zero = 0 ; NEWLINE for i in range ( len ( s ) ) : NEWLINE INDENTINDENT c_zero += ( s [ i ] == '0' ) ; NEWLINE DEDENT return int ( pow ( 2 , c_zero - 1 ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s = \"10010\" ; NEWLINE print ( cntSplits ( s ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_669_A_1816",
            "java_code": "import java . util . Scanner ;  public class LittleArtem { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int remaining = n % 3 ; if ( remaining != 0 ) { System . out . println ( ( n / 3 ) * 2 + 1 ) ; } else { System . out . println ( ( n / 3 ) * 2 ) ; }  } }",
            "python_code": "n = int ( input ( ) ) print ( 2 * ( n // 3 ) if n % 3 == 0 else 2 * ( n // 3 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_447_B_1817",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "s = input ( ) k = int ( input ( ) ) lst = list ( map ( int , input ( ) . split ( ) ) ) lst2 = [ chr ( i ) for i in range ( 97 , 123 ) ] dct = { } for i in range ( len ( lst2 ) ) : dct [ lst2 [ i ] ] = lst [ i ] value = 0 alpha = max ( dct . values ( ) )  for i in range ( len ( s ) ) : value += ( i + 1 ) * dct [ s [ i ] ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2039_A_1818",
            "java_code": "public class GFG { static int kthOdd ( int arr [ ] , int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 1 ) k -- ; if ( k == 0 ) return arr [ i ] ; } return - 1 ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 3 , 4 , 5 } ; int n = arr . length ; int k = 2 ; System . out . print ( kthOdd ( arr , n , k ) ) ; } }",
            "python_code": "def kthOdd ( arr , n , k ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 == 1 ) : NEWLINE INDENTINDENTINDENT k -= 1 ; NEWLINE DEDENT if ( k == 0 ) : NEWLINE INDENTINDENTINDENT return arr [ i ] ; NEWLINE DEDENT DEDENT return - 1 ; NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 ] ; NEWLINE n = len ( arr ) ; NEWLINE k = 2 ; NEWLINE print ( kthOdd ( arr , n , k ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_692_A_1819",
            "java_code": "import java . util . * ; class GFG { static int minimumValue ( int arr [ ] , int n , int k ) { Arrays . sort ( arr ) ; int answer = 0 ; for ( int i = 0 ; i < k ; i ++ ) answer += arr [ i ] * arr [ i ] ; return answer * ( 2 * k - 2 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 21 , 5 , 3 , 8 } , k = 3 ; int n = arr . length ; System . out . print ( minimumValue ( arr , n , k ) ) ; } }",
            "python_code": "def minimumValue ( arr , n , k ) : NEWLINE INDENT arr . sort ( ) ; NEWLINE answer = 0 ; NEWLINE for i in range ( k ) : NEWLINE INDENTINDENT answer += arr [ i ] * arr [ i ] ; NEWLINE DEDENT return answer * ( 2 * k - 2 ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 4 , 21 , 5 , 3 , 8 ] ; NEWLINE k = 3 ; NEWLINE n = len ( arr ) ; NEWLINE print ( minimumValue ( arr , n , k ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_914_B_1820",
            "java_code": "import java . util . * ; public class square { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] num = new int [ 100001 ] ; for ( int i = 1 ; i <= n ; i ++ ) { int p = sc . nextInt ( ) ; num [ p ] ++ ; } for ( int i = 1 ; i <= 100000 ; i ++ ) if ( num [ i ] % 2 != 0 ) { System . out . println ( \"Conan\" ) ; return ; } System . out . println ( \"Agasa\" ) ; } }",
            "python_code": "input ( ) q , t = { } , 0 a = list ( map ( int , input ( ) . split ( ) ) ) for i in a : q [ i ] = q . get ( i , 0 ) + 1 for i in q : if q [ i ] & 1 : t = 1 ; breakprint ( \"Conan\" if t else \"Agasa\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1629_A_1821",
            "java_code": "import java . util . * ; class GFG { static void printOrder ( int [ ] arr , int n ) { Arrays . sort ( arr ) ; for ( int i = 0 ; i < n / 2 ; i ++ ) System . out . print ( arr [ i ] + \" \" ) ; for ( int j = n - 1 ; j >= n / 2 ; j -- ) System . out . print ( arr [ j ] + \" \" ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , 7 } ; int n = arr . length ; printOrder ( arr , n ) ; } }",
            "python_code": "def printOrder ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE i = 0 NEWLINE while ( i < n / 2 ) : NEWLINE INDENTINDENT print arr [ i ] , NEWLINE i = i + 1 NEWLINE DEDENT j = n - 1 NEWLINE while j >= n / 2 : NEWLINE INDENTINDENT print arr [ j ] , NEWLINE j = j - 1 NEWLINE DEDENT DEDENT arr = [ 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , 7 ] NEWLINE n = len ( arr ) NEWLINE printOrder ( arr , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3028_A_1822",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { public static int findMaxValue ( ) { int res = 2 ; long fact = 2 ; while ( true ) { if ( fact < 0 ) break ; res ++ ; fact = fact * res ; } return res - 1 ; } public static void main ( String [ ] args ) { System . out . println ( \"Maximum value of\" + \" integer \" + findMaxValue ( ) ) ; } }",
            "python_code": "import sys NEWLINE def findMaxValue ( ) : NEWLINE INDENT res = 2 ; NEWLINE fact = 2 ; NEWLINE while ( True ) : NEWLINE INDENTINDENT if ( fact < 0 or fact > sys . maxsize ) : NEWLINE INDENTINDENTINDENT break ; NEWLINE DEDENT res += 1 ; NEWLINE fact = fact * res ; NEWLINE DEDENT return res - 1 ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT print ( \"Maximum value of integer:\" , findMaxValue ( ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_318_A_1823",
            "java_code": "import java . util . * ; import java . lang . Math ;  public class NewClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) , k = sc . nextLong ( ) ; if ( k > Math . ceil ( n / 2.0 ) ) { long num = 0 ; k -= Math . ceil ( n / 2.0 ) ; num += 2 * k ; System . out . println ( num ) ; } else { k -- ; long num = 1 ; num += k * 2 ; System . out . println ( num ) ; } } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  if k <= ( n + 1 ) // 2 : print ( ( k * 2 ) - 1 ) else : print ( ( k - ( n + 1 ) // 2 ) * 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1191_A_1824",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; public class Maths { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ; public static void main ( String args [ ] ) throws IOException {",
            "python_code": "s = int ( input ( ) ) g = s % 4 if g == 1 : print ( \"0 A\" ) if g == 2 : print ( \"1 B\" ) if g == 0 : print ( \"1 A\" ) if g == 3 : print ( \"2 A\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_461_A_1825",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  public class Solution implements Runnable {  public void run ( ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int i = 0 , j = 0 , k = 0 ; int testcase = 0 ;",
            "python_code": "n = int ( input ( ) ) l = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) s = [ l [ i ] * ( i + 2 ) for i in range ( n ) ] print ( sum ( s ) - l [ - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_768_B_1826",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) {",
            "python_code": "import sys , math  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_887_A_1827",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "n = input ( ) if len ( n ) == n . count ( '0' ) : print ( 'NO' ) else : while n [ 0 ] == \"0\" : n = n [ 1 : ] if n . count ( '0' ) >= 6 and n [ 0 ] == '1' : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5139_A_1828",
            "java_code": "class GFG { static String recursiveFun ( int n ) { if ( n == 1 ) return \"int\" ; return \"gcd(int, \" + recursiveFun ( n - 1 ) + \")\" ; } public static void main ( String [ ] arg ) { int n = 5 ; System . out . println ( recursiveFun ( n ) ) ; } }",
            "python_code": "def recursiveFun ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return \"int\" NEWLINE DEDENT return \"gcd(int, \" + recursiveFun ( n - 1 ) + \")\" NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE print ( recursiveFun ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_298_A_1829",
            "java_code": "import java . util . * ; import java . math . * ; public class SnowFootprints { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int size = sc . nextInt ( ) ; String s = sc . next ( ) ;",
            "python_code": "n = int ( input ( ) ) a = input ( ) f = n - a . count ( '.' ) m = a . count ( 'L' ) q0 = 0 flag = 1 for i in range ( n ) : if ( m == 0 ) : if ( a [ i ] == '.' and a [ i - 1 ] == 'R' and i > 0 ) : q1 = i + 1 break if ( a [ i ] == '.' ) : continue else : if ( a [ i ] == 'L' ) : q1 = i if ( flag and q0 == 0 ) : q0 = i + 1 break if ( flag ) : q0 = i + 1 flag -= 1 print ( q0 , q1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3878_A_1830",
            "java_code": "class GFG { static void findEncryptedArray ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += arr [ i ] ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( sum - arr [ i ] + \" \" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 1 , 3 , 2 , 4 } ; int N = arr . length ; findEncryptedArray ( arr , N ) ; } }",
            "python_code": "def findEncryptedArray ( arr , n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += arr [ i ] NEWLINE DEDENT for i in range ( n ) : NEWLINE INDENTINDENT print ( sum - arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 5 , 1 , 3 , 2 , 4 ] NEWLINE N = len ( arr ) NEWLINE findEncryptedArray ( arr , N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4530_A_1831",
            "java_code": "import java . util . * ; class GFG { static int checkSparse ( int n ) { if ( ( n & ( n > > 1 ) ) >= 1 ) return 0 ; return 1 ; } public static void main ( String [ ] args ) { System . out . println ( checkSparse ( 72 ) ) ; System . out . println ( checkSparse ( 12 ) ) ; System . out . println ( checkSparse ( 2 ) ) ; System . out . println ( checkSparse ( 3 ) ) ; } }",
            "python_code": "def checkSparse ( n ) : NEWLINE INDENT if ( n & ( n >> 1 ) ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return 1 NEWLINE DEDENT print ( checkSparse ( 72 ) ) NEWLINE print ( checkSparse ( 12 ) ) NEWLINE print ( checkSparse ( 2 ) ) NEWLINE print ( checkSparse ( 30 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1224_A_1832",
            "java_code": "import java . util . Scanner ; public class Prism { public static void Calculate_area ( ) { double b = 3 , h = 4 , s1 = 3 , s2 = 6 ; double s3 = 6 , Ht = 8 , SA ; SA = b * h + ( s1 + s2 + s3 ) * Ht ; System . out . printf ( \"The area of triangular prism is : %f\" , SA ) ; } public static void main ( String [ ] args ) { Calculate_area ( ) ; } }",
            "python_code": "def Calculate_area ( ) : NEWLINE INDENT b = 3 NEWLINE h = 4 NEWLINE s1 = 3 NEWLINE s2 = 6 NEWLINE s3 = 6 NEWLINE Ht = 8 NEWLINE SA = b * h + ( s1 + s2 + s3 ) * Ht NEWLINE print ( \"The area of triangular prism is :\" , SA ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT Calculate_area ( ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_702_B_1833",
            "java_code": "   import java . io . * ; import java . util . * ; import java . math . BigInteger ; import java . lang . Object ;   public class Main { static class sort implements Comparator < int [ ] > { public int compare ( int [ ] a , int [ ] b ) {",
            "python_code": "lst = [ 2 ** i for i in range ( 1 , 34 ) ] s = dict ( ) n = int ( input ( ) ) ss = [ int ( i ) for i in input ( ) . split ( ) ] sss = 0 for i in range ( 0 , n ) : for j in lst : if j - ss [ i ] in s : sss += s [ j - ss [ i ] ] if ss [ i ] in s : s [ ss [ i ] ] += 1 else : s [ ss [ i ] ] = 1 print ( sss ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_389_A_1834",
            "java_code": "import java . util . * ; public class FoxandNumberGame {  public static void main ( String [ ] args ) {",
            "python_code": "try : n = int ( input ( ) ) k = [ int ( i ) for i in input ( ) . split ( ) ] k . sort ( ) while ( min ( k ) != max ( k ) ) : k [ n - 1 ] = k [ n - 1 ] - k [ 0 ] k . sort ( ) print ( min ( k ) * n ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_842_A_1835",
            "java_code": "import java . util . * ;  public class CodeForces842A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int l = input . nextInt ( ) ; int r = input . nextInt ( ) ; int x = input . nextInt ( ) ; int y = input . nextInt ( ) ; int k = input . nextInt ( ) ; long c = 1 ; for ( int i = x ; i <= y ; i ++ ) { c = ( long ) k * i ; if ( c >= l && c <= r ) {",
            "python_code": "l , r , x , y , k = map ( int , input ( ) . split ( ) ) check = Trueif ( x * k > r or y * k < l ) : print ( \"NO\" ) else : for i in range ( x , y + 1 ) : if ( k * i <= r and k * i >= l ) : check = False break if ( check == True ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1871_A_1836",
            "java_code": "import java . io . * ; class GFG { static int setmiddlebits ( int n ) { n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; return ( n > > 1 ) ^ 1 ; } static int togglemiddlebits ( int n ) { if ( n == 1 ) return 1 ; return n ^ setmiddlebits ( n ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( togglemiddlebits ( n ) ) ; } }",
            "python_code": "def setmiddlebits ( n ) : NEWLINE INDENT n |= n >> 1 ; NEWLINE n |= n >> 2 ; NEWLINE n |= n >> 4 ; NEWLINE n |= n >> 8 ; NEWLINE n |= n >> 16 ; NEWLINE return ( n >> 1 ) ^ 1 NEWLINE DEDENT def togglemiddlebits ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return n ^ setmiddlebits ( n ) NEWLINE DEDENT n = 9 NEWLINE print ( togglemiddlebits ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_239_A_1837",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "y , k , n = map ( int , input ( ) . split ( ) ) print ( - 1 ) if len ( [ print ( i - y , end = ' ' ) for i in range ( y + ( k - ( y % k ) ) , n + 1 , k ) ] ) == 0 else print ( '' )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_27_B_1838",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) a = [ 0 ] * nb = [ 0 ] * nfor i in range ( n * ( n - 1 ) // 2 - 1 ) : c , d = list ( map ( int , input ( ) . split ( ) ) ) a [ c - 1 ] += 1 b [ c - 1 ] += 1 b [ d - 1 ] += 1 f = - 1 g = - 1 for i in range ( n ) : if b [ i ] == n - 2 : if f == - 1 : f = i + 1 else : g = i + 1 breakif a [ f - 1 ] > a [ g - 1 ] : print ( f , g ) else : print ( g , f ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1351_B_1839",
            "java_code": "import java . util . * ;   public class Practise { ",
            "python_code": "t = int ( input ( ) )  for test in range ( t ) : a = list ( sorted ( map ( int , input ( ) . split ( ) ) ) ) b = list ( sorted ( map ( int , input ( ) . split ( ) ) ) ) if a [ 0 ] + b [ 0 ] == a [ 1 ] and a [ 0 ] + b [ 0 ] == b [ 1 ] : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3995_A_1840",
            "java_code": "class Test { static int factorial ( int n ) { int i = n , fact = 1 ; while ( n / i != n ) { fact = fact * i ; i -- ; } return fact ; } public static void main ( String [ ] args ) { int num = 5 ; System . out . println ( \"Factorial of \" + num + \" is \" + factorial ( 5 ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT i = n NEWLINE fact = 1 NEWLINE while ( n / i != n ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE i -= 1 NEWLINE DEDENT return fact NEWLINE DEDENT num = 5 ; NEWLINE print ( \"Factorial of\" , num , \"is\" , factorial ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_688_B_1841",
            "java_code": "import java . util . * ; public class LovelyPalindromes {  public static void main ( String [ ] args ) {",
            "python_code": "n = input ( ) print ( n , end = \"\" ) for x in range ( len ( n ) ) : print ( n [ len ( n ) - x - 1 ] , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1369_A_1842",
            "java_code": "import java . io . * ; class GFG { static int countMultiples ( int n ) { return n / 3 + n / 7 - n / 21 ; } public static void main ( String args [ ] ) { System . out . println ( \"Count = \" + countMultiples ( 25 ) ) ; } }",
            "python_code": "def countMultiples ( n ) : NEWLINE INDENT return n / 3 + n / 7 - n / 21 ; NEWLINE DEDENT n = ( ( int ) ( countMultiples ( 25 ) ) ) ; NEWLINE print ( \"Count =\" , n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5025_A_1843",
            "java_code": "import java . util . * ; public class GFG { static int fact ( int n ) { if ( n <= 1 ) return 1 ; return n * fact ( n - 1 ) ; } static int nPr ( int n , int r ) { return fact ( n ) / fact ( n - r ) ; } public static void main ( String args [ ] ) { int n = 5 ; int r = 2 ; System . out . println ( n + \"P\" + r + \" = \" + nPr ( n , r ) ) ; } }",
            "python_code": "import math NEWLINE def fact ( n ) : NEWLINE INDENT if ( n <= 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return n * fact ( n - 1 ) NEWLINE DEDENT def nPr ( n , r ) : NEWLINE INDENT return math . floor ( fact ( n ) / fact ( n - r ) ) NEWLINE DEDENT n = 5 NEWLINE r = 2 NEWLINE print ( n , \"P\" , r , \"=\" , nPr ( n , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1430_A_1844",
            "java_code": "import java . util . Scanner ;  public class cf1430A {  public static void main ( String [ ] args ) throws Exception { ",
            "python_code": "t = int ( input ( ) ) NEWLINE for a in range ( t ) : x , y , z = - 1 , - 1 , - 1 NEWLINE n = int ( input ( ) ) NEWLINE for i in range ( n // 7 + 1 ) : for NEWLINE j in range ( n // 5 + 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_379_A_1845",
            "java_code": "import java . util . * ;  public class P1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int sum = 0 ;  int a = sc . nextInt ( ) ; int f = a ; int b = sc . nextInt ( ) ; while ( a >= b ) { sum ++ ; a -= b ; a += 1 ; } System . out . println ( f + sum ) ; } }",
            "python_code": "a , b = [ int ( i ) for i in input ( ) . split ( ) ] c = awhile a >= b : c = c + a // b a = a // b + a % bprint ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1217_B_1846",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import mathfor _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) maxDH = - 10 ** 9 arr = [ ] for i in range ( n ) : a , b = map ( int , input ( ) . split ( ) ) maxDH = max ( maxDH , a - b ) arr . append ( [ a , b ] ) res = 1 maxD = - 1 for i in arr : maxD = max ( maxD , i [ 0 ] ) m -= maxD if m > 0 : if maxDH <= 0 : res = - 1 else : res += ( m + maxDH - 1 ) // maxDH print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1061_A_1847",
            "java_code": "import java . io . IOException ; import java . util . Scanner ;  public class Codeforce {  public static void main ( String [ ] args ) throws IOException {  Scanner input = new Scanner ( System . in ) ; int x = input . nextInt ( ) , y = input . nextInt ( ) ; System . out . println ( ( x + y - 1 ) / x ) ; } }",
            "python_code": "import mathn , S = map ( int , input ( ) . split ( \" \" ) ) print ( math . ceil ( S / n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1279_A_1848",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "cases = int ( input ( ) ) while cases : cases -= 1 arr = sorted ( map ( int , input ( ) . split ( ) ) )  if arr [ 0 ] + arr [ 1 ] + 1 >= arr [ 2 ] : print ( \"Yes\" ) else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4520_A_1849",
            "java_code": "import java . io . * ; class GFG { static int toggleBitsFromLToR ( int n , int l , int r ) { int num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) ; return ( n ^ num ) ; } public static void main ( String [ ] args ) { int n = 50 ; int l = 2 , r = 5 ; System . out . println ( toggleBitsFromLToR ( n , l , r ) ) ; } }",
            "python_code": "def toggleBitsFromLToR ( n , l , r ) : NEWLINE INDENT num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) NEWLINE return ( n ^ num ) NEWLINE DEDENT n = 50 NEWLINE l = 2 NEWLINE r = 5 NEWLINE print ( toggleBitsFromLToR ( n , l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_248_A_1850",
            "java_code": "class GFG { static void SubarraysWithSumS ( int n , int k , int s ) { for ( int i = 0 ; i < k ; i ++ ) System . out . print ( s + \" \" ) ; for ( int i = k ; i < n ; i ++ ) System . out . print ( s + 1 + \" \" ) ; } public static void main ( String [ ] args ) { int n = 4 , k = 2 , s = 3 ; SubarraysWithSumS ( n , k , s ) ; } }",
            "python_code": "def SubarraysWithSumS ( n , k , s ) : NEWLINE INDENT for i in range ( k ) : NEWLINE INDENTINDENT print ( s , end = \" \" ) NEWLINE DEDENT for i in range ( k , n ) : NEWLINE INDENTINDENT print ( s + 1 , end = \" \" ) NEWLINE DEDENT DEDENT n = 4 NEWLINE k = 2 NEWLINE s = 3 NEWLINE SubarraysWithSumS ( n , k , s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_178_A_1851",
            "java_code": "import java . util . * ; class GFG { static int calculate_change ( int length , int breadth ) { int change = 0 ; change = length + breadth + ( ( length * breadth ) / 100 ) ; return change ; } public static void main ( String args [ ] ) { int cL = 20 ; int cB = - 10 ; int cA = calculate_change ( cL , cB ) ; System . out . println ( + cA ) ; } }",
            "python_code": "def calculate_change ( length , breadth ) : NEWLINE INDENT change = 0 NEWLINE change = length + breadth + ( ( length * breadth ) // 100 ) NEWLINE return change NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT cL = 20 NEWLINE cB = - 10 NEWLINE cA = calculate_change ( cL , cB ) NEWLINE print ( cA ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1158_A_1852",
            "java_code": "import java . util . * ; public class Main { final static int maxn = ( int ) 1e5 + 10 ; static int b [ ] = new int [ maxn ] ; static int g [ ] = new int [ maxn ] ; public static void main ( String args [ ] ) {",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) n , m = I ( ) a , b = sorted ( I ( ) , reverse = 1 ) , sorted ( I ( ) ) s = sum ( b ) for i in range ( 1 , n ) : s += a [ i ] * mif a [ 0 ] > min ( b ) : s = - 1 elif a [ 0 ] != b [ 0 ] : s += a [ 0 ] - a [ 1 ] print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1230_B_1853",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "try : n , k = map ( int , input ( ) . split ( ) ) s = input ( ) j = 0 z = \"\" if k == 0 : print ( s ) elif n == 1 and not k == 0 : print ( 0 ) else : for i in range ( n ) : if i == 0 : if not s [ i ] == \"1\" : print ( 1 , end = \"\" ) j += 1 else : print ( 1 , end = \"\" ) elif j >= k : print ( s [ i ] , end = \"\" ) else : if not s [ i ] == \"0\" : print ( 0 , end = \"\" ) j += 1 else : print ( 0 , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_227_B_1854",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "n = int ( input ( ) ) lst = input ( ) . split ( ) index_to_val = { lst [ idx ] : idx + 1 for idx in range ( n ) } input ( ) x = y = 0 for q in input ( ) . split ( ) : x += index_to_val [ q ] y += n - index_to_val [ q ] + 1 print ( x , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_848_A_1855",
            "java_code": "class GFG { static int countWays ( int n ) { int [ ] dp = new int [ n + 1 ] ; dp [ 0 ] = 0 ; dp [ 1 ] = 1 ; dp [ 2 ] = 1 ; for ( int i = 3 ; i <= n ; i ++ ) { dp [ i ] = dp [ i - 1 ] + dp [ i - 3 ] + 1 ; } return dp [ n ] ; } public static void main ( String args [ ] ) { int n = 6 ; System . out . println ( countWays ( n ) ) ; } }",
            "python_code": "def countWays ( n ) : NEWLINE INDENT dp = [ 0 for i in range ( n + 1 ) ] NEWLINE dp [ 0 ] = 0 NEWLINE dp [ 1 ] = 1 NEWLINE dp [ 2 ] = 1 NEWLINE for i in range ( 3 , n + 1 ) : NEWLINE INDENTINDENT dp [ i ] = dp [ i - 1 ] + dp [ i - 3 ] + 1 NEWLINE DEDENT return dp [ n ] NEWLINE DEDENT n = 6 NEWLINE print ( countWays ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_621_A_1856",
            "java_code": "import java . util . * ;  public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; long sum = 0 ; int min = 0 ;  for ( int i = 0 ; i < n ; i ++ ) { int x = input . nextInt ( ) ; if ( ( x & 1 ) == 1 && ( x < min || min == 0 ) ) { min = x ; } sum += x ; } System . out . println ( ( sum & 1 ) == 0 ? sum : sum - min ) ; } }",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l . sort ( ) if ( sum ( l ) % 2 == 0 ) : print ( sum ( l ) ) exit ( ) else : s = sum ( l ) for i in range ( len ( l ) ) : if ( l [ i ] % 2 == 1 ) : s -= l [ i ] if ( s % 2 == 0 ) : print ( s ) exit ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_258_A_1857",
            "java_code": " import java . util . * ; import java . lang . * ;",
            "python_code": "li = list ( map ( int , input ( ) ) ) n = len ( li ) st = Falseif 0 in li : li . remove ( 0 ) print ( * li , sep = '' ) else : li . pop ( ) print ( * li , sep = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_892_A_1858",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Exam { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "import itertoolsimport bisectimport mathfrom collections import * import osimport sysfrom io import BytesIO , IOBase  ii = lambda : int ( input ( ) ) lmii = lambda : list ( map ( int , input ( ) . split ( ) ) ) slmii = lambda : sorted ( map ( int , input ( ) . split ( ) ) ) li = lambda : list ( input ( ) ) mii = lambda : map ( int , input ( ) . split ( ) ) msi = lambda : map ( str , input ( ) . split ( ) )   def main ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1409_A_1859",
            "java_code": "import java . util . * ; class GFG { static int sumPairs ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum = sum + ( arr [ i ] * ( 2 * n ) ) ; } return sum ; } static public void main ( String [ ] arg ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( sumPairs ( arr , n ) ) ; } }",
            "python_code": "def sumPairs ( arr , n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum = sum + ( arr [ i ] * ( 2 * n ) ) ; NEWLINE DEDENT return sum ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 3 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( sumPairs ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_897_A_1860",
            "java_code": "import java . io . * ; import java . util . * ;  public class GFG { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int t = sc . nextInt ( ) ;",
            "python_code": "string_length , test_case = map ( int , input ( ) . split ( ) ) st = list ( input ( ) )   for x in range ( test_case ) : start , end , frm , to = map ( str , input ( ) . split ( ) ) for y in range ( int ( start ) - 1 , int ( end ) ) : if st [ y ] == frm : st [ y ] = toprint ( \"\" . join ( st ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3068_A_1861",
            "java_code": "class GFG { public static void main ( String [ ] args ) { String str = \"Mr John Smith   \" ; str = str . trim ( ) ; str = str . replaceAll ( \"\\\\s\" , \"%20\" ) ; System . out . println ( str ) ; } }",
            "python_code": "s = \"Mr John Smith \" NEWLINE s = s . strip ( ) NEWLINE s = s . replace ( ' ' , \"%20\" ) NEWLINE print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1773_A_1862",
            "java_code": "class GFG { static int nextGreater ( int N ) { int power_of_2 = 1 , shift_count = 0 ; while ( true ) { if ( ( ( N > > shift_count ) & 1 ) % 2 == 0 ) break ; shift_count ++ ; power_of_2 = power_of_2 * 2 ; } return ( N + power_of_2 ) ; } public static void main ( String [ ] a ) { int N = 11 ; System . out . println ( \"The next number is = \" + nextGreater ( N ) ) ; } }",
            "python_code": "def nextGreater ( N ) : NEWLINE INDENT power_of_2 = 1 ; NEWLINE shift_count = 0 ; NEWLINE while ( True ) : NEWLINE INDENTINDENT if ( ( ( N >> shift_count ) & 1 ) % 2 == 0 ) : NEWLINE INDENTINDENTINDENT break ; NEWLINE DEDENT shift_count += 1 ; NEWLINE power_of_2 = power_of_2 * 2 ; NEWLINE DEDENT return ( N + power_of_2 ) ; NEWLINE DEDENT N = 11 ; NEWLINE print ( \"The next number is =\" , nextGreater ( N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_71_A_1863",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { String str = scanner . next ( ) ; if ( str . length ( ) > 10 ) { System . out . println ( \"\" + str . charAt ( 0 ) + ( str . length ( ) - 2 ) + str . charAt ( str . length ( ) - 1 ) ) ; } else { System . out . println ( str ) ; } } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : line = input ( ) NEWLINE length = len ( line ) NEWLINE print ( ( line [ 0 ] + str ( length - 2 ) + line [ - 1 ] ) if length > 10 else line ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1223_B_1864",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int q = sc . nextInt ( ) ; for ( int i = 0 ; i < q ; i ++ ) { String s = sc . next ( ) ; String t = sc . next ( ) ; boolean ans = false ; for ( int j = 0 ; j < s . length ( ) ; j ++ ) { char ch = s . charAt ( j ) ;",
            "python_code": "from __future__ import division , print_functionfrom collections import * from math import * from itertools import * import osimport sysfrom io import BytesIO , IOBase NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2459_A_1865",
            "java_code": "class GFG { static float ellipsearea ( float r ) { if ( r < 0 ) return - 1 ; float a = ( float ) ( ( 3.14f * r * r ) / 4 ) ; return a ; } public static void main ( String [ ] args ) { float r = 5 ; System . out . println ( ellipsearea ( r ) ) ; } }",
            "python_code": "def ellipsearea ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT a = ( 3.14 * r * r ) / 4 ; NEWLINE return a ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r = 5 ; NEWLINE print ( ellipsearea ( r ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_747_A_1866",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int r = ( int ) Math . sqrt ( n ) ; for ( int i = r ; i >= 1 ; i -- ) { if ( n % i == 0 ) { System . out . println ( i + \" \" + n / i ) ; break ; } } } }",
            "python_code": "import mathn = int ( input ( ) ) a = int ( math . sqrt ( n ) ) while ( n % a != 0 ) : a = a - 1 print ( a , n // a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_B_1867",
            "java_code": "import java . util . Scanner ; public class Jumps {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int tc = in . nextInt ( ) ; int x ; while ( tc -- != 0 ) { x = in . nextInt ( ) ; int c = 0 ; int i = 1 ; while ( c < x ) { c += i ; i ++ ; } if ( c == x + 1 ) System . out . println ( i ) ; else System . out . println ( i - 1 ) ; } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE for i in range ( t ) : x = int ( input ( ) ) NEWLINE c = 0 NEWLINE sum = 0 NEWLINE while sum < x : c += 1 NEWLINE sum = sum + c NEWLINE re = sum - x NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4406_A_1868",
            "java_code": "import java . io . * ; class GFG { static void Sum_upto_nth_Term ( int n ) { int r = n * ( n + 1 ) * ( 2 * n + 7 ) / 3 ; System . out . println ( r ) ; } public static void main ( String [ ] args ) { int N = 5 ; Sum_upto_nth_Term ( N ) ; } }",
            "python_code": "def Sum_upto_nth_Term ( n ) : NEWLINE INDENT return n * ( n + 1 ) * ( 2 * n + 7 ) // 3 NEWLINE DEDENT N = 5 NEWLINE print ( Sum_upto_nth_Term ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4862_A_1869",
            "java_code": "class GFG { static void printRoots ( long a , long b , long c ) { System . out . println ( 1 + \", \" + c / ( a * 1.0 ) ) ; } public static void main ( String [ ] args ) { long a = 2 ; long b = 3 ; long c = - 5 ; printRoots ( a , b , c ) ; } }",
            "python_code": "def printRoots ( a , b , c ) : NEWLINE INDENT print ( 1 , \",\" , c / ( a * 1.0 ) ) NEWLINE DEDENT a = 2 NEWLINE b = 3 NEWLINE c = - 5 NEWLINE printRoots ( a , b , c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_158_A_1870",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { static int findNum ( int N , int K ) { int rem = N % K ; if ( rem == 0 ) return N ; else return N - rem ; } public static void main ( String args [ ] ) { int N = 45 , K = 6 ; System . out . print ( \"Largest number smaller \" + \"than or equal to \" + N + \"\\nthat is divisible by \" + K + \" is \" + findNum ( N , K ) ) ; } }",
            "python_code": "def findNum ( N , K ) : NEWLINE INDENT rem = N % K NEWLINE if ( rem == 0 ) : NEWLINE INDENTINDENT return N NEWLINE DEDENT else : NEWLINE INDENTINDENT return N - rem NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 45 NEWLINE K = 6 NEWLINE print ( \"Largest number smaller than or equal to\" + str ( N ) + \"that is divisible by\" + str ( K ) + \"is\" , findNum ( N , K ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_404_A_1871",
            "java_code": "import java . util . * ; public class ValeraandX {  public static void main ( String [ ] args ) {",
            "python_code": "diag = [ ] nond = [ ] t = int ( input ( ) ) for a in range ( t ) : s = input ( ) diag . append ( s [ 0 + a ] ) diag . append ( s [ t - 1 - a ] ) for b in s : nond . append ( b ) nond . remove ( s [ 0 + a ] ) if t - 1 - a != 0 + a : nond . remove ( s [ t - 1 - a ] ) if len ( diag ) == diag . count ( diag [ 0 ] ) and len ( nond ) == nond . count ( nond [ 0 ] ) and nond [ 0 ] != diag [ 0 ] : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2916_A_1872",
            "java_code": "class GFG { static int nthTerm ( int N ) { int nth = 0 , first_term = 12 ; nth = ( int ) ( ( first_term * ( Math . pow ( 2 , N - 1 ) ) ) + 11 * ( ( Math . pow ( 2 , N - 1 ) ) - 1 ) ) ; return nth ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . print ( nthTerm ( N ) + \"\\n\" ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT nth = 0 ; first_term = 12 ; NEWLINE nth = ( first_term * ( pow ( 2 , N - 1 ) ) ) + \\ NEWLINE INDENTINDENT 11 * ( ( pow ( 2 , N - 1 ) ) - 1 ) ; NEWLINE DEDENT return nth ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE print ( nthTerm ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_156_A_1873",
            "java_code": "import java . io . * ; import java . lang . * ; class GFG { public static double answer ( double X , double K ) { double i = 10 ; double MAX = Math . pow ( i , K ) - 1 ; return ( MAX - ( MAX % X ) ) ; } public static void main ( String [ ] args ) { double X = 30 ; double K = 3 ; System . out . println ( ( int ) answer ( X , K ) ) ; } }",
            "python_code": "def answer ( X , K ) : NEWLINE INDENT MAX = pow ( 10 , K ) - 1 NEWLINE return ( MAX - ( MAX % X ) ) NEWLINE DEDENT X = 30 ; NEWLINE K = 3 ; NEWLINE print ( answer ( X , K ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p063_A_1874",
            "java_code": "import java . math . BigInteger ; public final class p063 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p063 ( ) . run ( ) ) ; } public String run ( ) { int count = 0 ; for ( int n = 1 ; n <= 9 ; n ++ ) { for ( int k = 1 ; k <= 21 ; k ++ ) { if ( BigInteger . valueOf ( n ) . pow ( k ) . toString ( ) . length ( ) == k ) count ++ ; } } return Integer . toString ( count ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT ans = sum ( 1 for i in range ( 1 , 10 ) for j in range ( 1 , 22 ) if len ( str ( i ** j ) ) == j ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_767_A_1875",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class P767A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , t = n ; int [ ] a = new int [ n + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { int val = sc . nextInt ( ) ; a [ val ] = 1 ; while ( a [ t ] == 1 ) { System . out . print ( t -- + \" \" ) ; } System . out . println ( ) ; } } }",
            "python_code": "n = int ( input ( ) ) t = list ( map ( int , input ( ) . split ( ) ) )  p = n - 1 used = [ False ] * n  for x in range ( n ) : used [ t [ x ] - 1 ] = True  while p >= 0 and used [ p ] : print ( p + 1 , end = ' ' ) p -= 1 print ( '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3061_A_1876",
            "java_code": "class GFG { static long squareDigitSum ( String s ) { long lengthN = s . length ( ) ; long result = ( lengthN / 9 ) * 81 + ( long ) Math . pow ( ( lengthN % 9 ) , 2 ) ; return result ; } public static void main ( String [ ] args ) { String s = \"1111\" ; System . out . println ( squareDigitSum ( s ) ) ; } }",
            "python_code": "def squareDigitSum ( num ) : NEWLINE INDENT lengthN = len ( num ) NEWLINE result = ( lengthN // 9 ) * 81 + ( lengthN % 9 ) ** 2 NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = \"1111\" NEWLINE print ( squareDigitSum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_513_A_1877",
            "java_code": "import java . util . * ; import static java . lang . Math . cbrt ;  public class Test { public static void main ( String [ ] args ) throws Exception {  Scanner input = new Scanner ( System . in ) ; int n1 = input . nextInt ( ) ; int n2 = input . nextInt ( ) ; int k1 = input . nextInt ( ) ; int k2 = input . nextInt ( ) ;  System . out . println ( n1 > n2 ? \"First\" : \"Second\" ) ; } }",
            "python_code": "if __name__ == \"__main__\" : n1 , n2 , k1 , k2 = list ( map ( int , input ( ) . split ( ) ) ) if n2 >= n1 : print ( 'Second' ) else : print ( 'First' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_426_A_1878",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "n , v = map ( int , input ( ) . split ( ) ) l = [ ] l . extend ( map ( int , input ( ) . split ( ) ) ) l . remove ( max ( l ) ) if sum ( l ) <= v : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1107_B_1879",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { long k = s . nextLong ( ) ; long x = s . nextLong ( ) ; System . out . println ( x + ( 9 * ( k - 1 ) ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : k , x = map ( int , input ( ) . split ( ) ) print ( 9 * ( k - 1 ) + x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3074_A_1880",
            "java_code": "import java . io . * ; class GFG { static void modularInverse ( int n , int prime ) { int dp [ ] = new int [ n + 1 ] ; dp [ 0 ] = dp [ 1 ] = 1 ; for ( int i = 2 ; i <= n ; i ++ ) dp [ i ] = dp [ prime % i ] * ( prime - prime / i ) % prime ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( dp [ i ] + \" \" ) ; } public static void main ( String args [ ] ) { int n = 10 , prime = 17 ; modularInverse ( n , prime ) ; } }",
            "python_code": "def modularInverse ( n , prime ) : NEWLINE INDENT dp = [ 0 ] * ( n + 1 ) NEWLINE dp [ 0 ] = dp [ 1 ] = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT dp [ i ] = dp [ prime % i ] * ( prime - prime // i ) % prime NEWLINE DEDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( dp [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT n = 10 NEWLINE prime = 17 NEWLINE modularInverse ( n , prime ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_379_A_1881",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int m = s . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % m == 0 ) { n ++ ; } } System . out . println ( n ) ; } }  ",
            "python_code": "a1 , b1 = input ( ) . split ( ' ' ) a = int ( a1 ) b = int ( b1 )  count = awhile ( a >= b ) : d = a // b count += d m = a % b a = d + m print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1463_A_1882",
            "java_code": "import java . util . * ; public class Dungeon { static int n ; static int [ ] A ; public static void main ( String [ ] args ) {",
            "python_code": "T = int ( input ( ) ) NEWLINE for i in range ( 0 , T ) : a , b , c = input ( ) . split ( ) NEWLINE a = int ( a ) NEWLINE b = int ( b ) NEWLINE c = int ( c ) NEWLINE Sum = a + b + c NEWLINE if Sum % 9 == 0 and Sum / 9 <= min ( a , min ( b , c ) ) : NEWLINE INDENT print ( \"YES\" ) else : NEWLINE print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4744_A_1883",
            "java_code": "class GFG { static int smallest ( int x , int y , int z ) { int c = 0 ; while ( x != 0 && y != 0 && z != 0 ) { x -- ; y -- ; z -- ; c ++ ; } return c ; } public static void main ( String [ ] args ) { int x = 12 , y = 15 , z = 5 ; System . out . printf ( \"Minimum of 3\" + \" numbers is %d\" , smallest ( x , y , z ) ) ; } }",
            "python_code": "def smallest ( x , y , z ) : NEWLINE INDENT c = 0 NEWLINE while ( x and y and z ) : NEWLINE INDENTINDENT x = x - 1 NEWLINE y = y - 1 NEWLINE z = z - 1 NEWLINE c = c + 1 NEWLINE DEDENT return c NEWLINE DEDENT x = 12 NEWLINE y = 15 NEWLINE z = 5 NEWLINE print ( \"Minimum of 3 numbers is\" , smallest ( x , y , z ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1590_A_1884",
            "java_code": "class GFG { static int firstFactorialDivisibleNumber ( int x ) { int i = 1 ; int fact = 1 ; for ( i = 1 ; i < x ; i ++ ) { fact = fact * i ; if ( fact % x == 0 ) break ; } return i ; } public static void main ( String [ ] args ) { int x = 16 ; System . out . print ( firstFactorialDivisibleNumber ( x ) ) ; } }",
            "python_code": "def firstFactorialDivisibleNumber ( x ) : NEWLINE INDENT i = 1 ; NEWLINE fact = 1 ; NEWLINE for i in range ( 1 , x ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE if ( fact % x == 0 ) : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT DEDENT return i NEWLINE DEDENT x = 16 NEWLINE print ( firstFactorialDivisibleNumber ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_896_B_1885",
            "java_code": "import java . io . * ; import java . util . Arrays ; import java . util . StringTokenizer ;  public class main897 { public static PrintWriter out = new PrintWriter ( System . out ) ; public static FastScanner enter = new FastScanner ( System . in ) ; public static int [ ] arr ;  public static void main ( String [ ] args ) throws IOException { int n = enter . nextInt ( ) ;",
            "python_code": "import sys  n , m , c = map ( int , input ( ) . split ( ) ) a = [ ] for i in range ( n + 1 ) : a . append ( 0 ) cnt = 0 while cnt < n : i = 0 x = int ( input ( ) ) if x * 2 <= c : i = 1 while a [ i ] and a [ i ] <= x : i += 1 else : i = n while a [ i ] and a [ i ] >= x : i -= 1 if a [ i ] == 0 : cnt += 1 a [ i ] = x print ( i ) sys . stdout . flush ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1150_A_1886",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; public class Main { static void solve ( ) {",
            "python_code": "i = lambda : map ( int , input ( ) . split ( ) ) _ , _ , r = i ( ) s = min ( i ( ) ) b = max ( s , * i ( ) ) print ( r % s + r // s * b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_429_A_1887",
            "java_code": "class GFG { static int getPairs ( int a [ ] ) { int n = a . length ; int count = ( n * ( n - 1 ) ) / 2 ; return count ; } public static void main ( String [ ] args ) { int a [ ] = { 2 , 4 , 3 , 1 } ; System . out . println ( getPairs ( a ) ) ; } }",
            "python_code": "def getPairs ( a ) : NEWLINE INDENT n = len ( a ) NEWLINE count = ( n * ( n - 1 ) ) // 2 NEWLINE return count NEWLINE DEDENT a = [ 2 , 4 , 3 , 1 ] NEWLINE print ( getPairs ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1469_A_1888",
            "java_code": "import java . util . Scanner ;  public class A1469 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { String S = in . next ( ) ; boolean possible = ( S . length ( ) % 2 == 0 ) && ( S . charAt ( 0 ) != ')' ) && ( S . charAt ( S . length ( ) - 1 ) != '(' ) ; System . out . println ( possible ? \"YES\" : \"NO\" ) ; } }  }",
            "python_code": "t = int ( input ( ) ) NEWLINE for _ in range ( t ) : s = input ( ) NEWLINE if ( s [ 0 ] == \")\" or s [ - 1 ] == \"(\" or len ( s ) % 2 != 0 ) :  NEWLINE print ( \"NO\" ) else : print ( \"YES\" )            NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1054_A_1889",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001054A { static public void main ( final String [ ] args ) throws IOException { p001054A . _main ( args ) ; }",
            "python_code": "x , y , z , t1 , t2 , t3 = map ( int , input ( ) . split ( ) ) st = abs ( y - x ) * t1 et = abs ( z - x ) * t2 + abs ( x - y ) * t2 + 3 * t3 print ( 'YES' if et <= st else 'NO' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_688_A_1890",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int d = in . nextInt ( ) ; String s ; int max = - 1 , m = 0 ; for ( int i = 0 ; i < d ; i ++ ) { s = in . next ( ) ; if ( s . indexOf ( \"0\" ) >= 0 ) m ++ ; else { if ( m > max ) max = m ; m = 0 ; } } if ( m > max ) max = m ; System . out . println ( max ) ; } }",
            "python_code": "m , n = map ( int , input ( ) . split ( ) ) k = 0 x = 0 while n > 0 : l = input ( ) if l . count ( '1' ) != len ( l ) : x = x + 1 else : k = max ( k , x ) x = 0 n = n - 1 k = max ( k , x ) print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1330_B_1891",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;   public class Zad1330B { static int [ ] a ; public static void main ( String [ ] args ) {",
            "python_code": "import time  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1255_A_1892",
            "java_code": "import java . lang . * ; class GFG { static void checkSquare ( String s1 , String s2 ) { int c = Integer . valueOf ( s1 + s2 ) ; int d = ( int ) Math . sqrt ( c ) ; if ( d * d == c ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } public static void main ( String [ ] args ) { String s1 = \"12\" ; String s2 = \"1\" ; checkSquare ( s1 , s2 ) ; } }",
            "python_code": "import math NEWLINE def checkSquare ( s1 , s2 ) : NEWLINE INDENT c = int ( s1 + s2 ) NEWLINE d = math . sqrt ( c ) NEWLINE if ( d * d == c ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s1 = \"12\" NEWLINE s2 = \"1\" NEWLINE checkSquare ( s1 , s2 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1830_A_1893",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int factorial ( int N ) { int fact = 1 ; for ( int i = 1 ; i <= N ; i ++ ) fact = fact * i ; return fact ; } static int nthTerm ( int N ) { return ( factorial ( N + 1 ) / 2 ) ; } public static void main ( String args [ ] ) { int N = 6 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def factorial ( N ) : NEWLINE INDENT fact = 1 NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE DEDENT return fact NEWLINE DEDENT def nthTerm ( N ) : NEWLINE INDENT return ( factorial ( N + 1 ) // 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 6 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3156_A_1894",
            "java_code": "class Squares { public static int numberOfSquares ( int base ) { base = ( base - 2 ) ; base = base / 2 ; return base * ( base + 1 ) / 2 ; } public static void main ( String args [ ] ) { int base = 8 ; System . out . println ( numberOfSquares ( base ) ) ; } }",
            "python_code": "def numberOfSquares ( base ) : NEWLINE INDENT base = ( base - 2 ) NEWLINE base = base / 2 NEWLINE return base * ( base + 1 ) / 2 NEWLINE DEDENT base = 8 NEWLINE print ( numberOfSquares ( base ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1_A_1895",
            "java_code": "import java . util . Scanner ;   public class TheatreSquare_problem {  public static void main ( String [ ] args ) {",
            "python_code": "import mathline = input ( ) . split ( ) n = int ( line [ 0 ] ) m = int ( line [ 1 ] ) a = int ( line [ 2 ] ) hor = math . ceil ( n / a ) ver = math . ceil ( m / a ) result = hor * verprint ( result )                     NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1130_A_1896",
            "java_code": "import java . io . * ; class GFG { static int countIntegralSolutions ( int n ) { int result = 0 ; for ( int i = 0 ; i <= n ; i ++ ) for ( int j = 0 ; j <= n - i ; j ++ ) for ( int k = 0 ; k <= ( n - i - j ) ; k ++ ) if ( i + j + k == n ) result ++ ; return result ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countIntegralSolutions ( n ) ) ; } }",
            "python_code": "def countIntegralSolutions ( n ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( n + 1 ) : NEWLINE INDENTINDENT for j in range ( n + 1 ) : NEWLINE INDENTINDENTINDENT for k in range ( n + 1 ) : NEWLINE INDENTINDENTINDENTINDENT if i + j + k == n : NEWLINE INDENTINDENTINDENTINDENTINDENT result += 1 NEWLINE DEDENT DEDENT DEDENT DEDENT return result NEWLINE DEDENT n = 3 NEWLINE print ( countIntegralSolutions ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1451_A_1897",
            "java_code": "import java . util . * ; public class Main {  public static void main ( String [ ] args ) { int t , n ;  Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . nextInt ( ) ;  System . out . println ( ( n <= 3 ) ? n - 1 : 2 + ( n & 1 ) ) ; }",
            "python_code": "t = int ( input ( ) ) NEWLINE while t > 0 : t = t - 1 NEWLINE n = int ( input ( ) ) NEWLINE if n == 1 : NEWLINE INDENT print ( 0 ) elif n == 2 : NEWLINE print ( 1 ) elif n == 3 : NEWLINE print ( 2 ) elif n % 2 == 0 : NEWLINE print ( 2 ) else : NEWLINE print ( 3 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_559_A_1898",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Solution { static int recmin ; public static void main ( String [ ] args ) throws IOException { FastScanner fs = new FastScanner ( ) ; PrintWriter out = new PrintWriter ( System . out ) ; ",
            "python_code": "import math , sys , bisect , heapq , osfrom collections import defaultdict , Counter , dequefrom itertools import groupby , accumulatefrom functools import lru_cache NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1307_A_1899",
            "java_code": "import java . util . * ; class solution { static void CountPair ( int L , int R ) { int x = ( R - L + 1 ) ; System . out . println ( x / 2 + \"\\n\" ) ; } public static void main ( String args [ ] ) { int L , R ; L = 1 ; R = 8 ; CountPair ( L , R ) ; } }",
            "python_code": "def CountPair ( L , R ) : NEWLINE INDENT x = ( R - L + 1 ) NEWLINE print ( x // 2 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT L , R = 1 , 8 NEWLINE CountPair ( L , R ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1332_B_1900",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . * ; ",
            "python_code": "import time  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_125_B_1901",
            "java_code": "import java . util . Scanner ;   public class SimpleXML {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) . split ( '<' ) [ 1 : ] level = - 1 arr = set ( ) f = Falsefor i in s : f = False if i [ 0 ] != '/' : f = True  if f : level += 1 print ( \" \" * ( 2 * level ) + '<' + i ) if not f : level -= 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_348_A_1902",
            "java_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) s = sum ( l ) q = s",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1423_A_1903",
            "java_code": "public class GFG { static int totalDigits ( int n ) { int number_of_digits = 0 ; for ( int i = 1 ; i <= n ; i *= 10 ) number_of_digits += ( n - i + 1 ) ; return number_of_digits ; } public static void main ( String [ ] args ) { int n = 13 ; System . out . println ( totalDigits ( n ) ) ; } }",
            "python_code": "def totalDigits ( n ) : NEWLINE INDENT number_of_digits = 0 ; NEWLINE for i in range ( 1 , n , 10 ) : NEWLINE INDENTINDENT number_of_digits = ( number_of_digits + ( n - i + 1 ) ) ; NEWLINE DEDENT return number_of_digits ; NEWLINE DEDENT n = 13 ; NEWLINE s = totalDigits ( n ) + 1 ; NEWLINE print ( s ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4529_A_1904",
            "java_code": "class GFG { static int claculate sum ( int n ) { int sum = ( 1 << ( n + 1 ) ) ; return sum - 1 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( \"Sum of the series of power 2 is : \" + calculateSum ( n ) ) ; } } ;",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT sum = ( 1 << ( n + 1 ) ) NEWLINE return sum - 1 NEWLINE DEDENT n = 10 NEWLINE print ( \"Sum of series \" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_424_A_1905",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = input ( ) s = input ( ) X = s . count ( 'X' ) x = s . count ( 'x' ) c = abs ( ( X - x ) // 2 ) print ( c ) if X > x : s = s . replace ( 'X' , 'x' , c ) else : s = s . replace ( 'x' , 'X' , c ) print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1154_A_1906",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a [ ] = new int [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } int max = a [ 0 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { if ( a [ i ] > max ) { max = a [ i ] ; } } for ( int i = 0 ; i < 4 ; i ++ ) { if ( max - a [ i ] != 0 ) { System . out . println ( max - a [ i ] + \" \" ) ; } }",
            "python_code": "s = [ int ( i ) for i in input ( ) . split ( ) ] s . sort ( )  a = s [ 0 ] b = s [ 1 ] c = s [ 2 ] d = s [ 3 ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3411_A_1907",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int factorial ( int N ) { if ( N == 0 || N == 1 ) return 1 ; return N * factorial ( N - 1 ) ; } static int nthTerm ( int N ) { return ( factorial ( N ) * ( N + 2 ) / 2 ) ; } public static void main ( String args [ ] ) { int N = 6 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def factorial ( N ) : NEWLINE INDENT if N == 0 or N == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return N * factorial ( N - 1 ) NEWLINE DEDENT def nthTerm ( N ) : NEWLINE INDENT return ( factorial ( N ) * ( N + 2 ) // 2 ) NEWLINE DEDENT N = 6 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5040_A_1908",
            "java_code": "import java . io . * ; import java . math . * ; class GFG { static int reachTarget ( int target ) { target = Math . abs ( target ) ; int sum = 0 , step = 0 ; while ( sum < target || ( sum - target ) % 2 != 0 ) { step ++ ; sum += step ; } return step ; } public static void main ( String args [ ] ) { int target = 5 ; System . out . println ( reachTarget ( target ) ) ; } }",
            "python_code": "def reachTarget ( target ) : NEWLINE INDENT target = abs ( target ) NEWLINE sum = 0 NEWLINE step = 0 NEWLINE while ( sum < target or ( sum - target ) % 2 != 0 ) : NEWLINE INDENTINDENT step = step + 1 NEWLINE sum = sum + step NEWLINE DEDENT return step NEWLINE DEDENT target = 5 NEWLINE print ( reachTarget ( target ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p010_A_1909",
            "java_code": "public final class p010 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p010 ( ) . run ( ) ) ; } private static final int LIMIT = 2000000 ; public String run ( ) { long sum = 0 ; for ( int p : Library . listPrimes ( LIMIT - 1 ) ) sum += p ; return Long . toString ( sum ) ; } }",
            "python_code": "import eulerlib NEWLINE def compute ( ) : NEWLINE INDENT ans = sum ( eulerlib . list_primes ( 1999999 ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_964_B_1910",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , a = sc . nextInt ( ) , b = sc . nextInt ( ) , c = sc . nextInt ( ) , t = sc . nextInt ( ) ; long ans = n * a ; if ( b < c ) for ( int i = 0 ; i < n ; i ++ ) { int tx = sc . nextInt ( ) ; ans = ans + ( t - tx ) * ( c - b ) ; } System . out . println ( ans ) ; } }",
            "python_code": "n , A , B , C , T = map ( int , input ( ) . split ( ) ) t = [ int ( i ) for i in input ( ) . split ( ) ] t . sort ( )  total_sum = 0  for lower_border in range ( n + 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2922_A_1911",
            "java_code": "import java . io . * ; import java . lang . * ; class GFG { public static int nthTerm ( int N ) { return Math . abs ( N * ( ( N - 1 ) * ( N - 3 ) * ( N - 5 ) ) ) ; } public static void main ( String [ ] args ) { int N = 6 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT return ( abs ( N * ( ( N - 1 ) * ( N - 3 ) * ( N - 5 ) ) ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 6 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_368_A_1912",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;   public class SerejaAndCoatRack {  public static void main ( String [ ] args ) {",
            "python_code": "n , d = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) m = int ( input ( ) ) a . sort ( ) k = 0 s = 0 for i in range ( m ) : if i < len ( a ) : k += a [ s ] s += 1 else : k -= dprint ( k )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1182_A_1913",
            "java_code": "import java . io . * ; import java . util . * ; public class FS { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;  int n = Integer . parseInt ( br . readLine ( ) ) ; if ( n % 2 == 0 ) System . out . println ( ( int ) ( Math . pow ( 2 , n / 2 ) ) ) ; else System . out . println ( \"0\" ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( [ 2 ** ( n // 2 ) , 0 ] [ n & 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3672_A_1914",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int PointInKSquares ( int n , int a [ ] , int k ) { Arrays . sort ( a ) ; return a [ n - k ] ; } public static void main ( String [ ] args ) { int k = 2 ; int [ ] a = { 1 , 2 , 3 , 4 } ; int n = a . length ; int x = PointInKSquares ( n , a , k ) ; System . out . println ( \"(\" + x + \", \" + x + \")\" ) ; } }",
            "python_code": "def PointInKSquares ( n , a , k ) : NEWLINE INDENT a . sort ( ) NEWLINE return a [ n - k ] NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT k = 2 NEWLINE a = [ 1 , 2 , 3 , 4 ] NEWLINE n = len ( a ) NEWLINE x = PointInKSquares ( n , a , k ) NEWLINE print ( \"(\" , x , \",\" , x , \")\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2319_A_1915",
            "java_code": "public class ParallelogramPoints { public static void main ( String [ ] s ) { int ax = 5 , ay = 0 ; int bx = 1 , by = 1 ; int cx = 2 , cy = 5 ; System . out . println ( ax + bx - cx + \", \" + ( ay + by - cy ) ) ; System . out . println ( ax + cx - bx + \", \" + ( ay + cy - by ) ) ; System . out . println ( cx + bx - ax + \", \" + ( cy + by - ax ) ) ; } }",
            "python_code": "ax = 5 NEWLINE ay = 0 NEWLINE bx = 1 NEWLINE by = 1 NEWLINE cx = 2 NEWLINE cy = 5 NEWLINE print ( ax + bx - cx , \", \" , ay + by - cy ) NEWLINE print ( ax + cx - bx , \", \" , ay + cy - by ) NEWLINE print ( cx + bx - ax , \", \" , cy + by - ax ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4311_A_1916",
            "java_code": "import java . io . * ; class GFG { static double Convert ( double radian ) { double pi = 3.14159 ; return ( radian * ( 180 / pi ) ) ; } public static void main ( String [ ] args ) { double radian = 5.0 ; double degree = Convert ( radian ) ; System . out . println ( \"degree = \" + degree ) ; } }",
            "python_code": "def Convert ( radian ) : NEWLINE INDENT pi = 3.14159 NEWLINE degree = radian * ( 180 / pi ) NEWLINE return degree NEWLINE DEDENT radian = 5 NEWLINE print ( \"degree =\" , ( Convert ( radian ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_664_A_1917",
            "java_code": "import java . util . Scanner ;   public class Complicated_Gcd { static String gcd ( String a , String b ) {",
            "python_code": "from collections import Counterdef func ( ) : x , y = map ( int , input ( ) . split ( ) ) if x == y : print ( x ) else : print ( '1' ) t = 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_588_A_1918",
            "java_code": "import java . util . * ;  public class DuffAndMeat_588A {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) meat = [ ] money = [ ] while t > 0 : num = [ int ( i ) for i in input ( ) . split ( ) ] a = num [ 0 ] b = num [ 1 ] meat . append ( a ) money . append ( b ) t = t - 1 tot = 0 min = money [ 0 ] for i in range ( len ( meat ) ) : if money [ i ] < min : min = money [ i ] tot = tot + min * meat [ i ] print ( tot ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_761_B_1919",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , l = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) aa = [ 0 ] * lbb = [ 0 ] * lfor i in range ( n ) : aa [ a [ i ] - 1 ] += 1 bb [ b [ i ] - 1 ] += 1 for i in range ( l ) : if aa == bb : print ( \"YES\" ) exit ( 0 ) bb = [ bb [ - 1 ] ] + bb [ : - 1 ] print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_952_A_1920",
            "java_code": "import java . util . Scanner ;  public class problem52 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) print ( n % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2106_A_1921",
            "java_code": "import java . io . * ; class GFG { static int countSolutions ( int n ) { int res = 0 ; for ( int x = 0 ; x * x < n ; x ++ ) for ( int y = 0 ; x * x + y * y < n ; y ++ ) res ++ ; return res ; } public static void main ( String args [ ] ) { System . out . println ( \"Total Number of distinct Non-Negative pairs is \" + countSolutions ( 6 ) ) ; } }",
            "python_code": "def countSolutions ( n ) : NEWLINE INDENT res = 0 NEWLINE x = 0 NEWLINE while ( x * x < n ) : NEWLINE INDENTINDENT y = 0 NEWLINE while ( x * x + y * y < n ) : NEWLINE INDENTINDENTINDENT res = res + 1 NEWLINE y = y + 1 NEWLINE DEDENT x = x + 1 NEWLINE DEDENT return res NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT print ( \"Total Number of distinct Non-Negative pairs is \" , countSolutions ( 6 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2685_A_1922",
            "java_code": "import java . io . * ; public class GFG { static boolean isNumber ( String s ) { for ( int i = 0 ; i < s . length ( ) ; i ++ ) if ( Character . isDigit ( s . charAt ( i ) ) == false ) return false ; return true ; } static public void main ( String [ ] args ) { String str = \"6790\" ; if ( isNumber ( str ) ) System . out . println ( \"Integer\" ) ; else System . out . println ( \"String\" ) ; } }",
            "python_code": "def isNumber ( s ) : NEWLINE INDENT for i in range ( len ( s ) ) : NEWLINE INDENTINDENT if s [ i ] . isdigit ( ) != True : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT DEDENT return True NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str = \"6790\" NEWLINE if isNumber ( str ) : NEWLINE INDENTINDENT print ( \"Integer\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"String\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2125_A_1923",
            "java_code": "class GFG { static String getCount ( int N ) { if ( N % 2 == 1 ) return \"0\" ; String result = \"9\" ; for ( int i = 1 ; i <= N / 2 - 1 ; i ++ ) result += \"0\" ; return result ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( getCount ( N ) ) ; } }",
            "python_code": "def getCount ( N ) : NEWLINE INDENT if ( N % 2 == 1 ) : NEWLINE INDENTINDENT return \"0\" NEWLINE DEDENT result = \"9\" NEWLINE for i in range ( 1 , N // 2 ) : NEWLINE INDENTINDENT result = result + \"0\" NEWLINE DEDENT return result NEWLINE DEDENT N = 4 NEWLINE print ( getCount ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_818_A_1924",
            "java_code": " import java . io . * ; import java . util . * ;  public class Training { public static void main ( String [ ] args ) throws IOException { Scanner input = new Scanner ( System . in ) ; long n = input . nextLong ( ) , k = input . nextLong ( ) ; long a = n / 2 / ( k + 1 ) ; long b = a * k ; System . out . println ( a + \" \" + b + \" \" + ( n - a - b ) ) ;  }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) c = a // 2 d = c // ( b + 1 ) e = b * dprint ( d , e , a - d - e ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_456_B_1925",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {",
            "python_code": "if int ( input ( ) ) % 4 == 0 : print ( 4 ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4628_A_1926",
            "java_code": "class GFG { static int seriesSum ( int calculated , int current , int N ) { int i , cur = 1 ; if ( current == N + 1 ) return 0 ; for ( i = calculated ; i < calculated + current ; i ++ ) cur *= i ; return cur + seriesSum ( i , current + 1 , N ) ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . println ( seriesSum ( 1 , 1 , N ) ) ; } }",
            "python_code": "def seriesSum ( calculated , current , N ) : NEWLINE INDENT i = calculated ; NEWLINE cur = 1 ; NEWLINE if ( current == N + 1 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT while ( i < calculated + current ) : NEWLINE INDENTINDENT cur *= i ; NEWLINE i += 1 ; NEWLINE DEDENT return cur + seriesSum ( i , current + 1 , N ) ; NEWLINE DEDENT N = 5 ; NEWLINE print ( seriesSum ( 1 , 1 , N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_239_A_1927",
            "java_code": "import java . util . Scanner ;  public class bagsofpotato { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int y = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int n = sc . nextInt ( ) ;  int top = n - y ; int x = k - y % k ;  if ( x <= top ) { System . out . print ( x + \" \" ) ; x = x + k ; while ( x <= top ) { System . out . print ( x + \" \" ) ; x = x + k ; } } else System . out . println ( - 1 ) ; } } ",
            "python_code": "y , k , n = list ( map ( int , input ( ) . split ( ) ) )   if y == k : count = 0 elif y > k : count = ( ( y // k + 1 ) * k ) - yelse : count = k - y   if y >= n : print ( - 1 ) else : if y + count > n : print ( - 1 ) else :  while y + count <= n : if count == 0 : count += k continue print ( count , end = \" \" ) count += k   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1187_A_1928",
            "java_code": "import java . util . Scanner ;  public class StickersAndToys {  public static void main ( String [ ] args ) { Scanner xScanner = new Scanner ( System . in ) ; int numQueries = xScanner . nextInt ( ) ;  for ( int i = 0 ; i < numQueries ; i ++ ) { int numEggs = xScanner . nextInt ( ) ; int numStickers = xScanner . nextInt ( ) ; int numToys = xScanner . nextInt ( ) ; int numFewerObjects = Math . min ( numStickers , numToys ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , s , t = map ( int , input ( ) . split ( ) ) print ( 1 + n - min ( s , t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1421_A_1929",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; long a , b , t = input . nextInt ( ) ; while ( t != 0 ) { long d = 0 ; a = input . nextInt ( ) ; b = input . nextInt ( ) ; d = a ^ b ; System . out . println ( d ) ; t -- ; } } }",
            "python_code": "from os import pathimport NEWLINE sys , time NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2772_A_1930",
            "java_code": "class GFG { static int findSum ( String str ) { String temp = \"\" ; int sum = 0 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { char ch = str . charAt ( i ) ; if ( Character . isDigit ( ch ) ) temp += ch ; else { sum += Integer . parseInt ( temp ) ; temp = \"0\" ; } } return sum + Integer . parseInt ( temp ) ; } public static void main ( String [ ] args ) { String str = \"12abc20yz68\" ; System . out . println ( findSum ( str ) ) ; } }",
            "python_code": "def findSum ( str1 ) : NEWLINE INDENT temp = \"\" NEWLINE Sum = 0 NEWLINE for ch in str1 : NEWLINE INDENTINDENT if ( ch . isdigit ( ) ) : NEWLINE INDENTINDENTINDENT temp += ch NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT Sum += int ( temp ) NEWLINE temp = \"0\" NEWLINE DEDENT DEDENT return Sum + int ( temp ) NEWLINE DEDENT str1 = \"12abc20yz68\" NEWLINE print ( findSum ( str1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_429_B_1931",
            "java_code": "import java . io . * ; import java . util . * ;  public class p2 {",
            "python_code": "import sysfrom functools import lru_cache , cmp_to_keyfrom heapq import merge , heapify , heappop , heappush NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_705_A_1932",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { int n , i ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; String s1 = \"I love \" ; String s2 = \"I hate \" ; int flag = 0 ; for ( i = 0 ; i < n ; i ++ ) { if ( i % 2 == 0 ) { System . out . print ( s2 ) ; } else { System . out . print ( s1 ) ; } if ( i != n - 1 ) System . out . print ( \"that \" ) ; } System . out . print ( \"it\" ) ; } } ",
            "python_code": "n = int ( input ( ) ) f = 1 s = \"\" for i in range ( n - 1 ) : if f == 1 : s += \"I hate\" f = 2 else : s += \"I love\" f = 1 s += \" that \" if f == 1 : s += \"I hate it\" else : s += \"I love it\" print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1742_A_1933",
            "java_code": "class GFG { static void findNumbers ( int n ) { int odd = ( int ) Math . pow ( 10 , n ) - 1 ; int even = odd - 1 ; System . out . println ( \"Even = \" + even ) ; System . out . print ( \"Odd = \" + odd ) ; } public static void main ( String args [ ] ) { int n = 4 ; findNumbers ( n ) ; } }",
            "python_code": "def findNumbers ( n ) : NEWLINE INDENT odd = pow ( 10 , n ) - 1 NEWLINE even = odd - 1 NEWLINE print ( \"Even = \" , even ) NEWLINE print ( \"Odd = \" , odd ) NEWLINE DEDENT n = 4 NEWLINE findNumbers ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1783_A_1934",
            "java_code": "import java . util . * ; class GFG { static Vector < Long > getArray ( int n ) { Vector < Long > ans = new Vector < Long > ( ) ; long p2 = 1 ; while ( n > 0 ) { if ( n % 2 == 1 ) ans . add ( p2 ) ; n >>= 1 ; p2 *= 2 ; } return ans ; } public static void main ( String [ ] args ) { int n = 15 ; Vector < Long > ans = getArray ( n ) ; for ( Long i : ans ) System . out . print ( i + \" \" ) ; } }",
            "python_code": "def getArray ( n ) : NEWLINE INDENT ans = [ ] ; NEWLINE p2 = 1 ; NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT if ( n & 1 ) : NEWLINE INDENTINDENTINDENT ans . append ( p2 ) ; NEWLINE DEDENT n >>= 1 ; NEWLINE p2 *= 2 ; NEWLINE DEDENT return ans ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 15 ; NEWLINE ans = getArray ( n ) ; NEWLINE for i in ans : NEWLINE INDENTINDENT print ( i , end = \" \" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3145_A_1935",
            "java_code": "import java . io . * ; class GFG { static int getSum ( int n ) { int sum = 0 ; while ( n != 0 ) { sum = sum + n % 10 ; n = n / 10 ; } return sum ; } public static void main ( String [ ] args ) { int n = 687 ; System . out . println ( getSum ( n ) ) ; } }",
            "python_code": "def getSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE while ( n != 0 ) : NEWLINE INDENTINDENT sum = sum + int ( n % 10 ) NEWLINE n = int ( n / 10 ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 687 NEWLINE print ( getSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_199_A_1936",
            "java_code": "import java . util . Scanner ;  public class Hexadecimaltheorem { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; System . out . println ( 0 + \" \" + 0 + \" \" + n ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( 0 , 0 , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3697_A_1937",
            "java_code": "class GFG { static int maxXOR ( int arr [ ] , int n ) { int xorArr = 0 ; for ( int i = 0 ; i < n ; i ++ ) xorArr ^= arr [ i ] ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) ans = Math . max ( ans , ( xorArr ^ arr [ i ] ) ) ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 1 , 3 } ; int n = arr . length ; System . out . println ( maxXOR ( arr , n ) ) ; } }",
            "python_code": "def maxXOR ( arr , n ) : NEWLINE INDENT xorArr = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT xorArr ^= arr [ i ] NEWLINE DEDENT ans = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT ans = max ( ans , ( xorArr ^ arr [ i ] ) ) NEWLINE DEDENT return ans NEWLINE DEDENT arr = [ 1 , 1 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( maxXOR ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1204_A_1938",
            "java_code": "import java . util . Scanner ;  public class BowWowAndTheTimetable { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; solve ( scanner . nextLine ( ) ) ; }  public static void solve ( String numbers ) { if ( numbers . lastIndexOf ( \"1\" ) == 0 || numbers . equals ( \"0\" ) ) System . out . println ( numbers . length ( ) / 2 ) ; else System . out . println ( ( numbers . length ( ) + 1 ) / 2 ) ; } }",
            "python_code": "s = input ( )  print ( ( len ( s ) + ( s . count ( '1' ) > 1 ) ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4504_A_1939",
            "java_code": "import java . util . * ; class Count { public static int countSetBits ( int n ) { int count = 0 ; while ( n != 0 ) { count ++ ; n &= ( n - 1 ) ; } return count ; } public static int FlippedCount ( int a , int b ) { return countSetBits ( a ^ b ) ; } public static void main ( String [ ] args ) { int a = 10 ; int b = 20 ; System . out . print ( FlippedCount ( a , b ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while n : NEWLINE INDENTINDENT count += 1 NEWLINE n &= ( n - 1 ) NEWLINE DEDENT return count NEWLINE DEDENT def FlippedCount ( a , b ) : NEWLINE INDENT return countSetBits ( a ^ b ) NEWLINE DEDENT a = 10 NEWLINE b = 20 NEWLINE print ( FlippedCount ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4496_A_1940",
            "java_code": "import java . util . * ; class GFG { static boolean powerOfTwo ( int n ) { return ( ( n & n - 1 ) == 0 ) ; } static boolean onlyFirstAndLastAreSet ( int n ) { if ( n == 1 ) return true ; return powerOfTwo ( n - 1 ) ; } public static void main ( String [ ] args ) { int n = Integer . parseUnsignedInt ( \"9\" ) ; if ( onlyFirstAndLastAreSet ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def powerOfTwo ( n ) : NEWLINE INDENT return ( not ( n & n - 1 ) ) NEWLINE DEDENT def onlyFirstAndLastAreSet ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return powerOfTwo ( n - 1 ) NEWLINE DEDENT n = 9 NEWLINE if ( onlyFirstAndLastAreSet ( n ) ) : NEWLINE INDENT print ( 'Yes' ) NEWLINE DEDENT else : NEWLINE INDENT print ( 'No' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1301_A_1941",
            "java_code": "class GFG { static int countNumbers ( int n ) { return ( n / 2520 ) ; } public static void main ( String args [ ] ) { int n = 3000 ; System . out . println ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumbers ( n ) : NEWLINE INDENT return n // 2520 NEWLINE DEDENT n = 3000 NEWLINE print ( countNumbers ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1339_A_1942",
            "java_code": "import java . util . Scanner ;  public class CodeForces { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { System . out . println ( sc . nextInt ( ) ) ; } } }",
            "python_code": "t , * x = open ( 0 ) ; print ( * x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_315_B_1943",
            "java_code": " import java . io . BufferedReader ; import java . io . BufferedWriter ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . OutputStreamWriter ; import java . io . PrintWriter ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ;  import static java . lang . System . out ; public class c693a {",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) _ , m = I ( ) A = list ( I ( ) ) s = '' d = 0 for _ in range ( m ) : t , * X = I ( ) if t == 1 : A [ X [ 0 ] - 1 ] = X [ 1 ] - d elif t == 2 : d += X [ 0 ] else : s += str ( A [ X [ 0 ] - 1 ] + d ) + '\\n' print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_771_A_1944",
            "java_code": "import java . util . HashSet ; class Solution { public int numJewelsInStones ( String J , String S ) { int result = 0 ; HashSet jHash = new HashSet < > ( ) ; for ( int j = 0 ; j < J . length ( ) ; j ++ ) { jHash . add ( J . charAt ( j ) ) ; } for ( int s = 0 ; s < S . length ( ) ; s ++ ) { if ( jHash . contains ( S . charAt ( s ) ) ) { result ++ ; } } return result ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def numJewelsInStones ( self , J , S ) : NEWLINE INDENTINDENT if len ( J ) == 0 or len ( S ) == 0 : NEWLINE INDENTINDENTINDENT return 0 NEWLINE DEDENT j_set = set ( J ) NEWLINE ans = 0 NEWLINE for c in S : NEWLINE INDENTINDENTINDENT if c in j_set : NEWLINE INDENTINDENTINDENTINDENT ans += 1 NEWLINE DEDENT DEDENT return ans NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_620_A_1945",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "x , y = map ( int , input ( ) . split ( ' ' ) ) a , b = map ( int , input ( ) . split ( ' ' ) ) print ( max ( abs ( x - a ) , abs ( b - y ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_58_B_1946",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "import sysimport NEWLINE mathclass NEWLINE DictList ( dict ) : NEWLINE def __setitem__ ( self , key , value ) : try NEWLINE INDENT : NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_465_A_1947",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { int n ; String cells ; Scanner sc = new Scanner ( System . in ) ; int affectedCells = 0 ;  n = sc . nextInt ( ) ; cells = sc . next ( ) ;  for ( int i = 0 ; i < n ; i ++ ) { if ( cells . charAt ( i ) == '1' ) { affectedCells ++ ; } else { affectedCells ++ ; break ; }  }  System . out . println ( affectedCells ) ;  } }",
            "python_code": "INDENT n = int ( input ( ) ) a = input ( ) flag = 0  for i in range ( n ) : if ( a [ i ] == '0' ) : print ( i + 1 ) flag = 1 breakif ( flag == 0 ) : print ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1409_A_1948",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = Math . abs ( a - b ) ; if ( c % 10 == 0 ) { System . out . println ( c / 10 ) ; } else { System . out . println ( ( c / 10 ) + 1 ) ; } }  } }",
            "python_code": "cases = int ( input ( ) ) NEWLINE for i in range ( cases ) : a , b = map ( int , input ( ) . split ( ) ) NEWLINE temp = abs ( a - b ) NEWLINE count = 0 NEWLINE if temp == 0 : NEWLINE INDENT print ( 0 ) else : NEWLINE count = temp // 10 NEWLINE DEDENT temp = temp - 10 * count NEWLINE if temp % 10 != 0 : count += 1  print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3157_A_1949",
            "java_code": "public class GFG { static int maxSquare ( int b , int m ) { return ( b / m - 1 ) * ( b / m ) / 2 ; } public static void main ( String args [ ] ) { int b = 10 , m = 2 ; System . out . println ( maxSquare ( b , m ) ) ; } }",
            "python_code": "def maxSquare ( b , m ) : NEWLINE INDENT return ( b / m - 1 ) * ( b / m ) / 2 NEWLINE DEDENT b = 10 NEWLINE m = 2 NEWLINE print ( int ( maxSquare ( b , m ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4076_A_1950",
            "java_code": "public class GfG { public static int mostCommon ( int lower , int higher ) { if ( lower == higher ) return lower ; else return 2 ; } public static void main ( String [ ] args ) { int lower = 10 ; int higher = 20 ; System . out . println ( \"The most frequent factor \" + mostCommon ( lower , higher ) ) ; } }",
            "python_code": "def mostCommon ( lower , higher ) : NEWLINE INDENT if ( lower == higher ) : NEWLINE INDENTINDENT return lower NEWLINE DEDENT else : NEWLINE INDENTINDENT return 2 NEWLINE DEDENT DEDENT lower = 10 NEWLINE higher = 20 NEWLINE print ( \"The most frequent factor\" , mostCommon ( lower , higher ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_774_A_1951",
            "java_code": "  import static java . lang . Math . abs ; import static java . lang . System . out ; import java . util . Scanner ; ",
            "python_code": "t = input ( ) t = t . split ( ) n = int ( t [ 0 ] ) c1 = int ( t [ 1 ] ) c2 = int ( t [ 2 ] ) t = input ( ) d = 0 for i in t : if ( i == \"1\" ) : d = d + 1  min = 10 ** 1488 for i in range ( 1 , d + 1 ) : t = c1 * i + i * c2 * ( ( ( n // i ) - 1 ) ** 2 ) + c2 * ( n % i ) * ( 2 * ( n // i ) - 1 ) if t < min : min = t  print ( min ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4814_A_1952",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; class GFG { public static int kthgroupsum ( int k ) { int cur = ( k * ( k - 1 ) ) + 1 ; int sum = 0 ; while ( k -- > 0 ) { sum += cur ; cur += 2 ; } return sum ; } public static void main ( String [ ] args ) { int k = 3 ; System . out . print ( kthgroupsum ( k ) ) ; } }",
            "python_code": "def kthgroupsum ( k ) : NEWLINE INDENT cur = int ( ( k * ( k - 1 ) ) + 1 ) NEWLINE sum = 0 NEWLINE while k : NEWLINE INDENTINDENT sum += cur NEWLINE cur += 2 NEWLINE k = k - 1 NEWLINE DEDENT return sum NEWLINE DEDENT k = 3 NEWLINE print ( kthgroupsum ( k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1038_A_1953",
            "java_code": "import java . util . * ; public class contest14 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( \" \" ) ) s = input ( ) l = [ ] a = 0 for i in range ( k ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_865_A_1954",
            "java_code": "import java . util . Scanner ;  public class A865 {  public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; System . out . println ( \"\" + ( 2 * a - 1 ) + \" 2\" ) ; System . out . println ( \"1 2\" ) ; } }",
            "python_code": "n = int ( input ( ) ) a = 2 * n - 1 print ( a , 2 ) print ( 1 , 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4073_A_1955",
            "java_code": "class GFG { static int GCD ( int a , int b ) { return ( b != 0 ? GCD ( b , a % b ) : a ) ; } static void ratiotang ( int r1 , int r2 ) { System . out . println ( \"The ratio is \" + r1 / GCD ( r1 , r2 ) + \" : \" + r2 / GCD ( r1 , r2 ) ) ; } public static void main ( String args [ ] ) { int r1 = 4 , r2 = 6 ; ratiotang ( r1 , r2 ) ; } }",
            "python_code": "from math import gcd NEWLINE def ratiotang ( r1 , r2 ) : NEWLINE INDENT print ( \"The ratio is\" , int ( r1 / gcd ( r1 , r2 ) ) , \":\" , int ( r2 / gcd ( r1 , r2 ) ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT r1 = 4 NEWLINE r2 = 6 NEWLINE ratiotang ( r1 , r2 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_868_A_1956",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "password = input ( ) n = int ( input ( ) ) first_letter_found = second_letter_found = 0 result = 'NO' for i in range ( n ) : word = input ( ) if word == password : result = 'YES' elif result == 'NO' : if word [ 1 ] == password [ 0 ] : first_letter_found = 1 if word [ 0 ] == password [ 1 ] : second_letter_found = 1  if result == 'NO' and first_letter_found == 1 and second_letter_found == 1 : result = 'YES' print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_639_B_1957",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import static java . lang . System . out ; import java . util . Stack ; import java . util . Queue ; import java . util . LinkedList ;  public class B639 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p020_A_1958",
            "java_code": "public final class p020 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p020 ( ) . run ( ) ) ; } public String run ( ) { String temp = Library . factorial ( 100 ) . toString ( ) ; int sum = 0 ; for ( int i = 0 ; i < temp . length ( ) ; i ++ ) sum += temp . charAt ( i ) - '0' ; return Integer . toString ( sum ) ; } }",
            "python_code": "import math NEWLINE def compute ( ) : NEWLINE INDENT n = math . factorial ( 100 ) NEWLINE ans = sum ( int ( c ) for c in str ( n ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4625_A_1959",
            "java_code": "import java . io . * ; class GFG { static void bonacciseries ( int n , int m ) { int [ ] a = new int [ m ] ; a [ n - 1 ] = 1 ; for ( int i = n ; i < m ; i ++ ) for ( int j = i - n ; j < i ; j ++ ) a [ i ] += a [ j ] ; for ( int i = 0 ; i < m ; i ++ ) System . out . print ( a [ i ] + \" \" ) ; } public static void main ( String args [ ] ) { int N = 5 , M = 15 ; bonacciseries ( N , M ) ; } }",
            "python_code": "def bonacciseries ( n , m ) : NEWLINE INDENT a = [ 0 ] * m NEWLINE a [ n - 1 ] = 1 NEWLINE for i in range ( n , m ) : NEWLINE INDENTINDENT for j in range ( i - n , i ) : NEWLINE INDENTINDENTINDENT a [ i ] = a [ i ] + a [ j ] NEWLINE DEDENT DEDENT for i in range ( 0 , m ) : NEWLINE INDENTINDENT print ( a [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT N = 5 NEWLINE M = 15 NEWLINE bonacciseries ( N , M ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_465_A_1960",
            "java_code": "import java . util . * ;  public class CF10 { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) s = input ( ) x = 1 for i in range ( n ) : if ( s [ i ] != '1' ) : break x += 1 if x > n : x = nprint ( x )            NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1104_B_1961",
            "java_code": "import java . util . * ;  public class GameWithString {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String inputString = scan . nextLine ( ) ; StringBuffer gameString = new StringBuffer ( ) ; int playerTurn = 0 ; gameString . append ( inputString ) ;",
            "python_code": "s = input ( ) st = [ '0' ] c = 0 for i in s : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_306_A_1962",
            "java_code": "import java . util . Arrays ; import java . io . * ; class GFG { static int countSequences ( int arr [ ] , int n ) { int count = 1 ; Arrays . sort ( arr ) ; for ( int i = 0 ; i < n - 1 ; i ++ ) if ( arr [ i ] + 1 != arr [ i + 1 ] ) count ++ ; return count ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 7 , 3 , 5 , 10 } ; int n = arr . length ; System . out . println ( countSequences ( arr , n ) ) ; } }",
            "python_code": "def countSequences ( arr , n ) : NEWLINE INDENT count = 1 NEWLINE arr . sort ( ) NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENT if ( arr [ i ] + 1 != arr [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 7 , 3 , 5 , 10 ] NEWLINE n = len ( arr ) NEWLINE print ( countSequences ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1113_A_1963",
            "java_code": "class GFG { static int countNumber ( int N , int S ) { int countElements = 0 ; int currSum = 0 ; while ( currSum <= S ) { currSum += N ; N -- ; countElements ++ ; } return countElements ; } public static void main ( String [ ] args ) { int N , S ; N = 5 ; S = 11 ; int count = countNumber ( N , S ) ; System . out . println ( count ) ; } }",
            "python_code": "def countNumber ( N , S ) : NEWLINE INDENT countElements = 0 ; NEWLINE currentSum = 0 NEWLINE currSum = 0 ; NEWLINE while ( currSum <= S ) : NEWLINE INDENTINDENT currSum += N ; NEWLINE N = N - 1 ; NEWLINE countElements = countElements + 1 ; NEWLINE DEDENT return countElements ; NEWLINE DEDENT N = 5 ; NEWLINE S = 11 ; NEWLINE count = countNumber ( N , S ) ; NEWLINE print ( count ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_630_A_1964",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; System . out . println ( 25 ) ; } } ",
            "python_code": "print ( '25' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_38_B_1965",
            "java_code": "import java . util . Scanner ;  public class Chess { static void moveKnight ( boolean [ ] visited , int knight ) { for ( int i = - 1 ; i < 3 ; i += 2 ) {",
            "python_code": "first = input ( ) second = input ( ) s = \"abcdefjh\" ans = 0 for i in \"abcdefgh\" : for j in range ( 1 , 9 ) : move = i + str ( j )  if move != first and move != second : if not i in first and not str ( j ) in first : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1353_A_1966",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long x = in . nextInt ( ) ; while ( x > 0 ) { x -- ; long n = in . nextInt ( ) ; long m = in . nextInt ( ) ; if ( n == 1 ) System . out . println ( \"0\" ) ; else if ( n == 2 ) System . out . println ( m ) ; else if ( n > 2 ) System . out . println ( 2 * m ) ;   } } } ",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) )  print ( m * min ( 2 , n - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3669_A_1967",
            "java_code": "class GFG { static void find_composite_nos ( int n ) { System . out . println ( 9 * n + \" \" + 8 * n ) ; } public static void main ( String [ ] args ) { int n = 4 ; find_composite_nos ( n ) ; } }",
            "python_code": "def find_composite_nos ( n ) : NEWLINE INDENT print ( 9 * n , 8 * n ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 ; NEWLINE find_composite_nos ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1446_A_1968",
            "java_code": "import java . util . * ; import java . io . * ;  public class cf_6 { public static void main ( String [ ] args ) { new Solution ( ) . solve ( ) ; } }  class Solution { public void solve ( ) { FastScanner fs = new FastScanner ( ) ; int tests = fs . nextInt ( ) ; testcase : for ( int t = 0 ; t < tests ; t ++ ) { int n = fs . nextInt ( ) ; long w = fs . nextLong ( ) ; int [ ] weights = fs . readIntArray ( n ) ; long minRequired = ( w + 1 ) / 2 ;",
            "python_code": "import sys , mathfrom NEWLINE collections NEWLINE import defaultdict , dequeinput = sys . stdin . readline   t = int ( input ( ) ) NEWLINE while ( t > 0 ) : n , w = map ( int , input ( ) . split ( ) ) NEWLINE l = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_112_B_1969",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) , x = sc . nextInt ( ) , y = sc . nextInt ( ) ; int h = n / 2 ; if ( x == h && y == h || x == h && y == h + 1 || x == h + 1 && y == h || x == h + 1 && y == h + 1 ) System . out . println ( \"NO\" ) ; else System . out . println ( \"YES\" ) ; } }",
            "python_code": "l = input ( ) . split ( \" \" ) n = int ( l [ 0 ] ) x = int ( l [ 1 ] ) y = int ( l [ 2 ] ) h = n / 2 if ( ( x == h ) & ( y == h ) ) : print ( \"NO\" ) elif ( ( x == h ) & ( y == h + 1 ) ) : print ( \"NO\" ) elif ( ( x == h + 1 ) & ( y == h ) ) : print ( \"NO\" ) elif ( ( x == h + 1 ) & ( y == h + 1 ) ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1825_A_1970",
            "java_code": "import java . util . * ; class solution { static long getNthTerm ( long N ) { return ( 7 * ( int ) Math . pow ( N , 2 ) - 19 * N + 15 ) ; } public static void main ( String arr [ ] ) { long N = 4 ; System . out . println ( getNthTerm ( N ) ) ; } }",
            "python_code": "def getNthTerm ( N ) : NEWLINE INDENT return ( 7 * pow ( N , 2 ) - 19 * N + 15 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 4 NEWLINE print ( getNthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_750_A_1971",
            "java_code": "import java . io . * ; import java . util . * ;   public class Main {  public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ; int n = sc . nextInt ( ) ;",
            "python_code": "info = [ int ( x ) for x in input ( ) . split ( ) ] problem_times = [ int ( x ) * 5 for x in range ( 1 , info [ 0 ] + 1 ) ] time_to_do = 240 - info [ 1 ] problems_done = 0  for index , i in enumerate ( problem_times ) : if time_to_do >= problem_times [ index ] : time_to_do -= i problems_done += 1 else : breakprint ( problems_done ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_919_A_1972",
            "java_code": "import java . util . * ;  public class Supermarket {  public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; double min = Double . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { double a = scan . nextDouble ( ) ; double b = scan . nextDouble ( ) ; min = Math . min ( min , a / b ) ; } System . out . println ( min * m ) ; } }",
            "python_code": "import math  def main_function ( ) : output_list = [ ] n , m = [ int ( i ) for i in input ( ) . split ( \" \" ) ] for i in range ( n ) : a , b = [ int ( i ) for i in input ( ) . split ( \" \" ) ] output_list . append ( ( a / b ) * m ) return min ( output_list )        print ( main_function ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1266_B_1973",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "t = int ( input ( ) ) s = [ int ( x ) for x in input ( ) . split ( ) ] for i in s : if i > 14 : if ( i - 1 ) % 14 == 0 : print ( 'YES' ) elif ( i - 2 ) % 14 == 0 : print ( 'YES' ) elif ( i - 3 ) % 14 == 0 : print ( 'YES' ) elif ( i - 4 ) % 14 == 0 : print ( 'YES' ) elif ( i - 5 ) % 14 == 0 : print ( 'YES' ) elif ( i - 6 ) % 14 == 0 : print ( 'YES' ) else : print ( 'NO' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1095_A_1974",
            "java_code": "import java . util . * ; public class question {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ;  int j = 0 , a = 0 ; while ( j < s . length ( ) ) { System . out . print ( s . charAt ( j ) ) ; a ++ ; j += a ; } } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) . strip ( ) c = 1 i = 0  an = [ ] while ( i < n ) : an . append ( s [ i ] ) i += c c += 1 print ( '' . join ( an ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_544_A_1975",
            "java_code": "import java . util . * ; public class SetString {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) s = input ( )  arr = set ( list ( s ) ) if len ( arr ) < n : print ( \"NO\" )  else : ans = [ ] d = { }  for i in s : if i in d : ans [ - 1 ] += i else : d [ i ] = 1 ans . append ( i ) print ( \"YES\" ) for i in ans [ : n - 1 ] : print ( i )  print ( '' . join ( ans [ n - 1 : ] ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_894_A_1976",
            "java_code": "import java . util . Scanner ;  public class problem4qaq {  public static void main ( String [ ] args ) {",
            "python_code": "import re  s = input ( ) q_indices = [ m . start ( ) for m in re . finditer ( 'Q' , s ) ] a_indices = [ m . start ( ) for m in re . finditer ( 'A' , s ) ] result = 0 for i in a_indices : q_no = len ( q_indices ) before_a = - 1 for j in range ( q_no ) : if q_indices [ j ] > i : before_a = j break if before_a > 0 : after_a = q_no - before_a result += after_a * before_aprint ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_41_A_1977",
            "java_code": "import java . util . * ;  public class Q5 {  public static void main ( String [ ] args ) {",
            "python_code": "str1 = input ( ) str2 = input ( )  new_s = str2 [ : : - 1 ]  if str1 == new_s : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_746_A_1978",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int temp = 0 ; while ( a >= 1 && b >= 2 && c >= 4 ) { temp = temp + 7 ; a = a - 1 ; b = b - 2 ; c = c - 4 ; } System . out . println ( temp ) ; } }",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = int ( input ( ) ) d = c // 4 d = min ( d , b // 2 ) d = min ( d , a ) print ( 1 * d + 2 * d + 4 * d ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_900_B_1979",
            "java_code": "import java . util . * ; public class posiC { public static void main ( String [ ] args ) {",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) for i in range ( 2 * b ) : a *= 10 if ( a // b == c ) : print ( i + 1 ) break a %= belse : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_827_B_1980",
            "java_code": "import java . io . * ; import java . math . BigInteger ; import java . util . * ; public class Main { static InputReader in = new InputReader ( System . in ) ; static PrintWriter out = new PrintWriter ( System . out ) ; static int oo = ( int ) 1e9 ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) n -= 1 val = n // kdiv = n % ki = 2 if div == 0 : print ( val * 2 ) elif div == 1 : print ( val * 2 + 1 ) else : print ( ( val + 1 ) * 2 ) for a in range ( k ) : print ( 1 , i ) for j in range ( val - 1 ) : print ( i , i + 1 ) i += 1 i += 1j = i - 1 while ( div ) : print ( j , i ) i += 1 j -= val div -= 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2124_A_1981",
            "java_code": "class GFG { static int nDigitPalindromes ( int n ) { return ( 9 * ( int ) Math . pow ( 10 , ( n - 1 ) / 2 ) ) ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( nDigitPalindromes ( n ) ) ; } }",
            "python_code": "def nDigitPalindromes ( n ) : NEWLINE INDENT return ( 9 * pow ( 10 , ( n - 1 ) // 2 ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE print ( nDigitPalindromes ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_465_B_1982",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "import itertoolsimport bisectimport mathfrom collections import * import osimport sysfrom io import BytesIO , IOBase  ii = lambda : int ( input ( ) ) lmii = lambda : list ( map ( int , input ( ) . split ( ) ) ) slmii = lambda : sorted ( map ( int , input ( ) . split ( ) ) ) li = lambda : list ( input ( ) ) mii = lambda : map ( int , input ( ) . split ( ) ) msi = lambda : map ( str , input ( ) . split ( ) )   def main ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1139_A_1983",
            "java_code": "import java . io . BufferedInputStream ; import java . util . * ;  import static java . lang . Math . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( new BufferedInputStream ( System . in ) ) ; int n = in . nextInt ( ) ; String str = in . next ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; ++ i ) { if ( str . charAt ( i ) % 2 == 0 ) { sum += i + 1 ; } } System . out . println ( sum ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) l = [ ] c = 0 ans = 0 for i in range ( n ) : if ( int ( s [ i ] ) % 2 == 0 ) : c += 1 l . append ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5093_A_1984",
            "java_code": "import java . io . * ; class GFG { static void radius ( double n , double d ) { System . out . print ( \"The side of each square is \" + d / ( ( n - 1 ) * Math . sqrt ( 2 ) ) ) ; } public static void main ( String [ ] args ) { double d = 42 , n = 4 ; radius ( n , d ) ; } }",
            "python_code": "def radius ( n , d ) : NEWLINE INDENT print ( \"The side of each square is \" , d / ( ( n - 1 ) * ( 2 ** ( 1 / 2 ) ) ) ) ; NEWLINE DEDENT d = 42 ; n = 4 ; NEWLINE radius ( n , d ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_175_A_1985",
            "java_code": " import java . io . * ; import java . util . * ;  public class C115A { static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Kioken sc = new Kioken ( ) ;  public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "s = input ( ) w = len ( s ) q = - 1 for i in range ( w - 2 ) : for j in range ( i + 1 , w - 1 ) : a , b , c = s [ : i + 1 ] , s [ i + 1 : j + 1 ] , s [ j + 1 : ] if len ( a ) == len ( str ( int ( a ) ) ) and len ( b ) == len ( str ( int ( b ) ) ) and len ( c ) == len ( str ( int ( c ) ) ) : if int ( a ) <= 10 ** 6 and int ( b ) <= 10 ** 6 and int ( c ) <= 10 ** 6 : q = max ( q , int ( a ) + int ( b ) + int ( c ) ) print ( q ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4383_A_1986",
            "java_code": "class GFG { static double p = ( ( 1 + Math . sqrt ( 5 ) ) / 2 ) ; static double q = ( ( 1 - Math . sqrt ( 5 ) ) / 2 ) ; static int fib ( int n ) { int i = n - 1 ; int x = ( int ) ( ( Math . pow ( p , i ) - Math . pow ( q , i ) ) / ( p - q ) ) ; return x ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( fib ( n ) ) ; } }",
            "python_code": "import math NEWLINE p = ( 1 + math . sqrt ( 5 ) ) / 2 NEWLINE q = ( 1 - math . sqrt ( 5 ) ) / 2 NEWLINE def fib ( n ) : NEWLINE INDENT i = n - 1 NEWLINE x = ( p ** i - q ** i ) / ( p - q ) NEWLINE return int ( x ) NEWLINE DEDENT n = 5 NEWLINE print ( fib ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2570_A_1987",
            "java_code": "class GFG { static int power ( int x , int y , int p ) { int res = 1 ; x = x % p ; while ( y > 0 ) { if ( y % 2 == 1 ) { res = ( res * x ) % p ; } y = y > > 1 ; x = ( x * x ) % p ; } return res ; } public static void main ( String [ ] args ) { int L = 2 ; int P = ( int ) Math . pow ( 10 , 9 ) ; int ans = power ( 325 , L , P ) ; System . out . println ( ans ) ; } }",
            "python_code": "def power ( x , y , p ) : NEWLINE INDENT res = 1 ; NEWLINE x = x % p ; NEWLINE while ( y > 0 ) : NEWLINE INDENTINDENT if ( y % 2 == 1 ) : NEWLINE INDENTINDENTINDENT res = ( res * x ) % p ; NEWLINE DEDENT y = y >> 1 ; NEWLINE x = ( x * x ) % p ; NEWLINE DEDENT return res ; NEWLINE DEDENT L = 2 ; P = pow ( 10 , 9 ) ; NEWLINE ans = power ( 325 , L , P ) ; NEWLINE print ( ans ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2577_A_1988",
            "java_code": "class GFG { static int log_a_to_base_b ( int a , int b ) { return ( int ) ( Math . log ( a ) / Math . log ( b ) ) ; } public static void main ( String [ ] args ) { int a = 3 ; int b = 2 ; System . out . println ( log_a_to_base_b ( a , b ) ) ; a = 256 ; b = 4 ; System . out . println ( log_a_to_base_b ( a , b ) ) ; } }",
            "python_code": "from math import log NEWLINE def log_a_to_base_b ( a , b ) : NEWLINE INDENT return log ( a ) // log ( b ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 3 ; NEWLINE b = 2 ; NEWLINE print ( log_a_to_base_b ( a , b ) ) ; NEWLINE a = 256 ; NEWLINE b = 4 ; NEWLINE print ( log_a_to_base_b ( a , b ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_31_A_1989",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) z = 0 for i in range ( n ) : for j in range ( n ) : if i != j : for k in range ( n ) : if i != k and j != k and a [ i ] == a [ j ] + a [ k ] : z = 1 print ( i + 1 , j + 1 , k + 1 ) break if z == 1 : break if z == 1 : breakif z == 0 : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_743_B_1990",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ;  public class C { public static void solve ( FastReader in , PrintWriter out , int nTestCase ) { int n = in . nextInt ( ) ; long k = in . nextLong ( ) ; if ( k % 2 == 1 ) out . println ( 1 ) ; else { long K = k ;",
            "python_code": "while True : try : n , m = list ( map ( int , input ( ) . split ( ) ) ) res = 1 while m % 2 == 0 : res += 1 m /= 2 print ( res ) except : break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_525_B_1991",
            "java_code": "  import java . io . * ; import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;   public class Main1 {  static class pair implements Comparable < pair > { int a ; int b ; public pair ( int a , int b ) { this . a = a ; this . b = b ; } @ Override public int compareTo ( pair o ) {",
            "python_code": "s = [ i for i in input ( ) ] m = int ( input ( ) ) ; n = len ( s ) arr = list ( map ( int , input ( ) . split ( ) ) ) ; dp = [ 0 ] * nfor i in arr : dp [ i - 1 ] += 1 ; dp [ n - i ] += 1 for i in range ( 1 , n ) : dp [ i ] += dp [ i - 1 ] for i in range ( ( n + 1 ) // 2 ) : if dp [ i ] & 1 == 1 : s [ i ] , s [ n - i - 1 ] = s [ n - i - 1 ] , s [ i ] print ( \"\" . join ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1213_A_1992",
            "java_code": "public class GFG { public static float circlearea ( double a , double b ) { if ( a < 0 || b < 0 ) return - 1 ; float A = ( float ) ( ( 3.14 * Math . pow ( a , 2 ) * Math . pow ( b , 2 ) ) / ( 4 * ( Math . pow ( a , 2 ) + Math . pow ( b , 2 ) ) ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 8 , b = 10 ; System . out . println ( circlearea ( a , b ) ) ; } }",
            "python_code": "def circlearea ( a , b ) : NEWLINE INDENT if ( a < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = ( ( 3.14 * pow ( a , 2 ) * pow ( b , 2 ) ) / ( 4 * ( pow ( a , 2 ) + pow ( b , 2 ) ) ) ) NEWLINE return A NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 8 NEWLINE b = 10 NEWLINE print ( circlearea ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_940_B_1993",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_174_A_1994",
            "java_code": "import java . io . * ; class GFG { static Boolean divisibleBy20 ( String num ) { int lastTwoDigits = Integer . parseInt ( num . substring ( num . length ( ) - 2 , num . length ( ) ) ) ; return ( ( lastTwoDigits % 5 == 0 ) && ( lastTwoDigits % 4 == 0 ) ) ; } public static void main ( String [ ] args ) { String num = \"63284689320\" ; if ( divisibleBy20 ( num ) == true ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "import math NEWLINE def divisibleBy20 ( num ) : NEWLINE INDENT lastTwoDigits = int ( num [ - 2 : ] ) NEWLINE return ( ( lastTwoDigits % 5 == 0 and lastTwoDigits % 4 == 0 ) ) NEWLINE DEDENT num = \"63284689320\" NEWLINE if ( divisibleBy20 ( num ) == True ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_315_A_1995",
            "java_code": "import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "n = int ( input ( ) ) nn = nnnn = nb = [ ] o = [ ] c = 0 while n > 0 : n -= 1 bt , ot = map ( int , input ( ) . split ( ) ) b . append ( bt ) o . append ( ot ) for i in range ( 0 , nnn ) : if b [ i ] == o [ i ] and o . count ( o [ i ] ) == 1 : nn += 1 o = set ( o ) for i in o : temp = b . count ( i ) nn -= temp  print ( nn ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1478_B_1996",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "import osimport NEWLINE sysfrom NEWLINE io NEWLINE import BytesIO , IOBase   NEWLINE def main ( ) : import bisect NEWLINE INDENT pass NEWLINE DEDENT import NEWLINE INDENT math  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_233_A_1997",
            "java_code": "import java . util . * ;  public class Cf233A {  public static void main ( String args [ ] ) {  Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;  if ( n % 2 == 1 ) { System . out . println ( - 1 ) ; return ; }  for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( i % 2 == 1 ? i + 1 + \" \" : i - 1 + \" \" ) ;  } }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 1 : print ( \"-1\" ) else : for i in range ( n ) : if i % 2 == 0 : print ( i + 2 , end = \" \" ) else : print ( i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1246_A_1998",
            "java_code": "class GFG { static void findNumbers ( int n ) { String ans = string ( n - 1 , 'F' ) ; String even = ans + 'E' ; String odd = ans + 'F' ; System . out . print ( \"Even: \" + even + \"\\n\" ) ; System . out . print ( \"Odd: \" + odd + \"\\n\" ) ; } private static String string ( int n , char c ) { String str = \"\" ; for ( int i = 0 ; i < n ; i ++ ) str += c ; return str ; } public static void main ( String [ ] args ) { int n = 2 ; findNumbers ( n ) ; } }",
            "python_code": "def findNumbers ( n ) : NEWLINE INDENT ans = 'F' * ( n - 1 ) ; NEWLINE even = ans + 'E' ; NEWLINE odd = ans + 'F' ; NEWLINE print ( \"Even: \" , even ) ; NEWLINE print ( \"Odd: \" , odd ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE findNumbers ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3624_A_1999",
            "java_code": "public class GFG { static double printProbability ( int L , int n ) { int p = ( 1 << ( n - 1 ) ) ; return 1.0 - ( ( double ) n ) / ( ( double ) p ) ; } public static void main ( String args [ ] ) { int n = 3 , L = 5 ; System . out . println ( printProbability ( L , n ) ) ; } }",
            "python_code": "def printProbability ( L , n ) : NEWLINE INDENT p = ( 1 << ( n - 1 ) ) NEWLINE return 1.0 - ( float ( n ) / float ( p ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE L = 5 NEWLINE print ( printProbability ( L , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3003_A_2000",
            "java_code": "import java . io . * ; class GFG { static int countSetBits ( int n ) { long count = 0 ; while ( n > 0 ) { count += n & 1 ; n >>= 1 ; } return ( int ) count ; } static int countOfOddsPascal ( int n ) { int c = countSetBits ( n ) ; return ( int ) Math . pow ( 2 , c ) ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( countOfOddsPascal ( n ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while n : NEWLINE INDENTINDENT count += n & 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT def countOfOddPascal ( n ) : NEWLINE INDENT c = countSetBits ( n ) NEWLINE return pow ( 2 , c ) NEWLINE DEDENT n = 20 NEWLINE print ( countOfOddPascal ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1928_A_2001",
            "java_code": "import java . util . * ; class GFG { static int [ ] Findpermutation ( int n ) { int [ ] a = new int [ n + 1 ] ; a [ 1 ] = n ; for ( int i = 2 ; i <= n ; i ++ ) a [ i ] = i - 1 ; return a ; } public static void main ( String [ ] args ) { int n = 8 ; int [ ] v = Findpermutation ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( v [ i ] + \" \" ) ; } }",
            "python_code": "def Findpermutation ( n ) : NEWLINE INDENT a = [ 0 ] * ( n + 1 ) ; NEWLINE a [ 1 ] = n ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT a [ i ] = i - 1 ; NEWLINE DEDENT return a ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 8 ; NEWLINE v = Findpermutation ( n ) ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( v [ i ] , end = ' ' ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4001_A_2002",
            "java_code": "class GFG { static boolean checkFibinnary ( int n ) { int prev_last = 0 ; while ( n != 0 ) { if ( ( n & 1 ) != 0 && prev_last != 0 ) return false ; prev_last = n & 1 ; n >>= 1 ; } return true ; } public static void main ( String [ ] args ) { int n = 10 ; if ( checkFibinnary ( n ) == true ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "def checkFibinnary ( n ) : NEWLINE INDENT prev_last = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT if ( ( n & 1 ) and prev_last ) : NEWLINE INDENTINDENTINDENT return False NEWLINE DEDENT prev_last = n & 1 NEWLINE n >>= 1 NEWLINE DEDENT return True NEWLINE DEDENT n = 10 NEWLINE if ( checkFibinnary ( n ) ) : NEWLINE INDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_597_B_2003",
            "java_code": "import java . io . * ; import java . util . * ; public class Main {  public static final int mod = 1000000007 ; static long [ ] [ ] dp ; public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) )  main = [ ] for i in range ( n ) : s , e = map ( int , input ( ) . split ( ) ) main . append ( ( s , e ) )  main . sort ( key = lambda x : x [ 1 ] )  cs , ce = main [ 0 ] [ 0 ] , main [ 0 ] [ 1 ] count = 1 for s , e in main [ 1 : ] : if ce < s : count += 1 cs = s ce = e  print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_334_A_2004",
            "java_code": "import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "n = int ( input ( ) )  for i in range ( n * n // 2 ) : print ( i + 1 , n * n - i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1870_A_2005",
            "java_code": "import java . io . * ; class GFG { static int toggleLastMBits ( int n , int m ) { if ( m == 0 ) return n ; int num = ( 1 << m ) - 1 ; return ( n ^ num ) ; } static int largeNumWithNSetAndMUnsetBits ( int n , int m ) { int num = ( 1 << ( n + m ) ) - 1 ; return toggleLastMBits ( num , m ) ; } public static void main ( String [ ] args ) { int n = 2 , m = 2 ; System . out . println ( largeNumWithNSetAndMUnsetBits ( n , m ) ) ; } }",
            "python_code": "def toggleLastMBits ( n , m ) : NEWLINE INDENT if ( m == 0 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT num = ( 1 << m ) - 1 NEWLINE return ( n ^ num ) NEWLINE DEDENT def largeNumWithNSetAndMUnsetBits ( n , m ) : NEWLINE INDENT num = ( 1 << ( n + m ) ) - 1 NEWLINE return toggleLastMBits ( num , m ) NEWLINE DEDENT n = 2 NEWLINE m = 2 NEWLINE print ( largeNumWithNSetAndMUnsetBits ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_931_A_2006",
            "java_code": "import java . util . Scanner ;  public class problem51 {  public static void main ( String [ ] args ) {",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = abs ( b - a ) e = c // 2 d = c % 2 print ( e * ( e + 1 ) + d * ( d + e ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_858_A_2007",
            "java_code": "import java . util . Scanner ;   public class subStraction { static long gcd ( long a , long b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextInt ( ) ; long k = in . nextInt ( ) ; long temp = 1 ; for ( int i = 1 ; i <= k ; i ++ ) { temp *= 10 ; } System . out . println ( temp * n / gcd ( temp , n ) ) ; } }",
            "python_code": "from math import gcd   def lcm ( a , b ) : return ( a / gcd ( a , b ) ) * b   num = \"1\"  n , k = map ( int , input ( ) . split ( ) ) for i in range ( k ) : num += \"0\" num = int ( num ) print ( int ( lcm ( num , n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_845_A_2008",
            "java_code": "class GFG { public static void printMultiples ( int N ) { for ( int i = 1 ; i <= N ; i ++ ) { for ( int j = 1 ; j <= i ; j ++ ) { System . out . print ( ( i * j ) + \" \" ) ; } System . out . println ( ) ; } } public static void main ( String args [ ] ) { int N = 5 ; printMultiples ( N ) ; } }",
            "python_code": "def prMultiples ( N ) : NEWLINE INDENT for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT print ( ( i * j ) , end = \" \" ) NEWLINE DEDENT print ( ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 5 NEWLINE prMultiples ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_336_A_2009",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class er10a {",
            "python_code": "x , y = map ( int , input ( ) . split ( ) )  dx = - 1 if x < 0 else 1 dy = - 1 if y < 0 else 1 v = abs ( x ) + abs ( y ) x1 = min ( 0 , v * dx ) y1 = v * dy if x1 == 0 else 0x2 = max ( 0 , v * dx ) y2 = v * dy if x2 == 0 else 0  print ( x1 , y1 , x2 , y2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1335_B_2010",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; String alph = \"abcdefghijklmnopqrstuvwxyz\" ; int t = in . nextInt ( ) ;",
            "python_code": "for i in range ( int ( input ( ) ) ) : n , a , b = map ( int , input ( ) . split ( ) ) s = 'abcdefghijklmnopqrstuvwxyz' res = s [ 0 : b ] * ( n // b ) c = n - len ( res ) print ( res + s [ 0 : c ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_712_A_2011",
            "java_code": "import java . util . Scanner ;  public class MemoryAndCrow { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc . nextInt ( ) ; } for ( int j = 0 ; j < n - 1 ; j ++ ) { System . out . print ( b [ j ] + b [ j + 1 ] + \" \" ) ; } System . out . print ( b [ n - 1 ] ) ; } }",
            "python_code": "n = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n - 1 ) : print ( li [ i ] + li [ i + 1 ] , end = ' ' ) print ( li [ n - 1 ] )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2043_A_2012",
            "java_code": "import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double length_rope ( double r ) { return ( ( 2 * PI * r ) + 6 * r ) ; } public static void main ( String [ ] args ) { double r = 7 ; System . out . println ( length_rope ( r ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def length_rope ( r ) : NEWLINE INDENT return ( ( 2 * PI * r ) + 6 * r ) NEWLINE DEDENT r = 7 NEWLINE print ( length_rope ( r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5012_A_2013",
            "java_code": "import java . io . * ; class GeeksforGeeks { static double compute ( int a , int b ) { double AM , GM , HM ; AM = ( a + b ) / 2 ; GM = Math . sqrt ( a * b ) ; HM = ( GM * GM ) / AM ; return HM ; } public static void main ( String args [ ] ) { int a = 5 , b = 15 ; double HM = compute ( a , b ) ; String str = \"\" ; str = str + HM ; System . out . print ( \"Harmonic Mean between \" + a + \" and \" + b + \" is \" + str . substring ( 0 , 5 ) ) ; } }",
            "python_code": "import math NEWLINE def compute ( a , b ) : NEWLINE INDENT AM = ( a + b ) / 2 NEWLINE GM = math . sqrt ( a * b ) NEWLINE HM = ( GM * GM ) / AM NEWLINE return HM NEWLINE DEDENT a = 5 NEWLINE b = 15 NEWLINE HM = compute ( a , b ) NEWLINE print ( \"Harmonic Mean between \" , a , \" and \" , b , \" is \" , HM ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_764_A_2014",
            "java_code": "import java . util . * ; public class Taymyriscallingyou {  public static void main ( String [ ] args ) {",
            "python_code": "import sysfrom math import gcd  def main ( ) : n , m , z = map ( int , sys . stdin . read ( ) . strip ( ) . split ( ) ) return z // ( n * m // gcd ( n , m ) ) print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1017_A_2015",
            "java_code": " import java . io . * ; import java . util . * ; import java . math . * ;  public class Thomas { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) li = [ ] for i in range ( n ) : A , B , C , D = map ( int , input ( ) . split ( ) ) sum_1 = A + B + C + D li . append ( sum_1 )  a = li [ 0 ] li . sort ( reverse = True ) print ( li . index ( a ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5128_A_2016",
            "java_code": "import java . util . * ; class GFG { static void triangular_series ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . printf ( \"%d \" ; , i * ( i + 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 5 ; triangular_series ( n ) ; } }",
            "python_code": "def triangular_series ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( i * ( i + 1 ) // 2 , end = ' ' ) NEWLINE DEDENT DEDENT n = 5 NEWLINE triangular_series ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1492_A_2017",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { long p = sc . nextLong ( ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long c = sc . nextLong ( ) ; System . out . println ( Math . min ( ( a - p % a ) % a , Math . min ( ( b - p % b ) % b , ( c - p % c ) % c ) ) ) ; } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : p , * a = map ( int , s . split ( ) ) ; print ( min ( - p % x for x in a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2921_A_2018",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class GFG { static int nthTerm ( int n ) { int d = 2 , a1 = 0 ; int An = a1 + ( n - 1 ) * d ; return ( int ) Math . pow ( An , 3 ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( nthTerm ( n ) ) ; } }",
            "python_code": "def term ( n ) : NEWLINE INDENT d = 2 NEWLINE a1 = 0 NEWLINE An = a1 + ( n - 1 ) * d NEWLINE An = An ** 3 NEWLINE return An ; NEWLINE DEDENT n = 5 NEWLINE print ( term ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1159_B_2019",
            "java_code": "import java . util . * ;  public class CodeForces1159B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { min = Math . min ( min , input . nextInt ( ) / Math . max ( i , n - i - 1 ) ) ; } System . out . println ( min ) ; } }",
            "python_code": "n , a , k = int ( input ( ) ) , list ( map ( int , input ( ) . split ( ) ) ) , 10 ** 9 for i in range ( n ) : k = min ( k , a [ i ] // ( max ( n - i - 1 , i ) ) ) print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5286_A_2020",
            "java_code": "import java . util . * ; class GFG { static int calculateSum ( int n ) { return ( n * ( ( int ) Math . pow ( n , 2 ) + 3 * n + 5 ) ) / 3 ; } public static void main ( String arr [ ] ) { int n = 25 ; System . out . println ( calculateSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT return ( n * ( pow ( n , 2 ) + 3 * n + 5 ) ) / 3 NEWLINE DEDENT n = 25 NEWLINE print ( int ( findSum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_171_B_2021",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long n = s . nextLong ( ) ; long res = 6 * n * ( n - 1 ) + 1 ; System . out . println ( res ) ; } }",
            "python_code": "import mathimport sysinput = sys . stdin . readline  def inp ( ) : return ( int ( input ( ) ) ) def inlt ( ) : return ( list ( map ( int , input ( ) . split ( ) ) ) )  n = inp ( ) print ( n * ( n - 1 ) * 6 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3824_A_2022",
            "java_code": "public class GFG { static void find ( int n ) { int b = n ; int a = b * ( n - 1 ) ; if ( a * b > n && a / b < n ) { System . out . print ( \"a = \" + a + \", b = \" + b ) ; } else System . out . println ( - 1 ) ; } public static void main ( String [ ] args ) { int n = 10 ; find ( n ) ; } }",
            "python_code": "def find ( n ) : NEWLINE INDENT b = n NEWLINE a = b * ( n - 1 ) NEWLINE if a * b > n and a // b < n : NEWLINE INDENTINDENT print ( \"a = {}, b = {}\" . format ( a , b ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( - 1 ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 10 NEWLINE find ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_949_B_2023",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "import math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_248_B_2024",
            "java_code": "import java . util . * ; import java . io . * ; public class R152D2B { public static void main ( String [ ] args ) throws Exception {",
            "python_code": "n = int ( input ( ) ) if ( n <= 2 ) : print ( - 1 ) else : print ( ( ( pow ( 10 , n - 1 ) // 210 ) + 1 ) * 210 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1283_A_2025",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class DigestThread {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { final int new_year = 1440 ; int h , m ; h = in . nextInt ( ) ; m = in . nextInt ( ) ; System . out . println ( new_year - ( ( h * 60 ) + m ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : h , m = map ( int , input ( ) . split ( ) ) s = 0 s = ( 24 - h - 1 ) * 60 + ( 60 - m ) print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_4_A_2026",
            "java_code": "import java . util . Scanner ;  public class Watermelon { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; if ( w > 2 ) { if ( w % 2 == 0 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } else System . out . println ( \"NO\" ) ; sc . close ( ) ; } }",
            "python_code": "kg = int ( input ( ) ) if kg <= 2 : print ( \"NO\" ) else : for n in range ( 2 , round ( kg / 2 ) + 1 , 2 ) : if ( kg - n ) % 2 == 0 : print ( \"YES\" ) break elif n == round ( kg / 2 ) or n == round ( kg / 2 ) - 1 : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1725_A_2027",
            "java_code": "import java . io . * ; class GFG { static int centeredHexagonalNumber ( int n ) { return 3 * n * ( n - 1 ) + 1 ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . print ( n + \"th centered \" + \"hexagonal number: \" ) ; System . out . println ( centeredHexagonalNumber ( n ) ) ; } }",
            "python_code": "def centeredHexagonalNumber ( n ) : NEWLINE INDENT return 3 * n * ( n - 1 ) + 1 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( n , \"th centered hexagonal number: \" , centeredHexagonalNumber ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1828_A_2028",
            "java_code": "class GFG { static long nthTerm ( long n ) { long nth ; if ( n % 2 == 0 ) nth = 2 * ( ( n * n ) - n ) ; else nth = ( 2 * n * n ) - n ; return nth ; } public static void main ( String [ ] args ) { long n ; n = 5 ; System . out . println ( nthTerm ( n ) ) ; n = 25 ; System . out . println ( nthTerm ( n ) ) ; n = 25000000 ; System . out . println ( nthTerm ( n ) ) ; n = 250000007 ; System . out . println ( nthTerm ( n ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT nth = 0 NEWLINE if ( n % 2 == 0 ) : NEWLINE INDENTINDENT nth = 2 * ( ( n * n ) - n ) NEWLINE DEDENT else : NEWLINE INDENTINDENT nth = ( 2 * n * n ) - n NEWLINE DEDENT return nth NEWLINE DEDENT n = 5 NEWLINE print ( nthTerm ( n ) ) NEWLINE n = 25 NEWLINE print ( nthTerm ( n ) ) NEWLINE n = 25000000 NEWLINE print ( nthTerm ( n ) ) NEWLINE n = 250000007 NEWLINE print ( nthTerm ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_622_A_2029",
            "java_code": "import java . util . * ;  public class Solve {  static Scanner scan = new Scanner ( System . in ) ;  public static void solve ( long n ) { long i = 1 ; n -- ; long pos = 0 ; while ( n >= 0 ) { pos = n ; n -= i ; i ++ ; } System . out . println ( pos + 1 ) ; }  public static void main ( String [ ] args ) {  long n = scan . nextLong ( ) ; solve ( n ) ; } }",
            "python_code": "import mathn = int ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3659_A_2030",
            "java_code": "import java . io . * ; class Gfg { static float areacircumscribed ( float a ) { float PI = 3.14159265f ; return ( a * a * ( PI / 2 ) ) ; } public static void main ( String arg [ ] ) { float a = 6 ; System . out . print ( \"Area of an circumscribed\" + \"circle is :\" ) ; System . out . println ( areacircumscribed ( a ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def areacircumscribed ( a ) : NEWLINE INDENT return ( a * a * ( PI / 2 ) ) NEWLINE DEDENT a = 6 NEWLINE print ( \" Area of an circumscribed circle is :\" , round ( areacircumscribed ( a ) , 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_24_A_2031",
            "java_code": "import java . util . * ; class GFG { static void product_subarrays ( int arr [ ] , int n ) { int product = 1 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i ; j < n ; j ++ ) { product *= arr [ j ] ; } } System . out . println ( product + \"\\n\" ) ; } public static void main ( String args [ ] ) { int arr [ ] = { 10 , 3 , 7 } ; int n = arr . length ; product_subarrays ( arr , n ) ; } }",
            "python_code": "def product_subarrays ( arr , n ) : NEWLINE INDENT product = 1 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i , n ) : NEWLINE INDENTINDENTINDENT product *= arr [ j ] ; NEWLINE DEDENT DEDENT print ( product ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 10 , 3 , 7 ] ; NEWLINE n = len ( arr ) ; NEWLINE product_subarrays ( arr , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1254_A_2032",
            "java_code": "class GFG { public static boolean isEven ( int n ) { if ( ( n & 1 ) == 0 ) return true ; else return false ; } public static void main ( String [ ] args ) { int n = 101 ; if ( isEven ( n ) == true ) System . out . print ( \"Even\" ) ; else System . out . print ( \"Odd\" ) ; } }",
            "python_code": "def isEven ( n ) : NEWLINE INDENT return ( not ( n & 1 ) ) NEWLINE DEDENT n = 101 ; NEWLINE print ( \"Even\" if isEven ( n ) else \"Odd\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1209_A_2033",
            "java_code": "import java . io . * ; import java . net . Inet4Address ; import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) num2 = [ ] num = list ( map ( int , input ( ) . split ( ) ) ) num . sort ( ) count = 0  while len ( num ) != 0 : minno = min ( num ) count += 1 num2 = [ num [ i ] for i in range ( len ( num ) ) if num [ i ] % minno != 0 ] num . clear ( ) num . extend ( num2 ) num2 . clear ( ) print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_699_A_2034",
            "java_code": "import java . io . * ; class GFG { static int minMoves ( int arr [ ] , int n ) { int expectedItem = n ; for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( arr [ i ] == expectedItem ) expectedItem -- ; } return expectedItem ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 3 , 2 , 1 } ; int n = arr . length ; System . out . println ( minMoves ( arr , n ) ) ; } }",
            "python_code": "def minMoves ( arr , n ) : NEWLINE INDENT expectedItem = n NEWLINE for i in range ( n - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT if ( arr [ i ] == expectedItem ) : NEWLINE INDENTINDENTINDENT expectedItem -= 1 NEWLINE DEDENT DEDENT return expectedItem NEWLINE DEDENT arr = [ 4 , 3 , 2 , 1 ] NEWLINE n = len ( arr ) NEWLINE print ( minMoves ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_268_B_2035",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int recibido = scanner . nextInt ( ) ; int suma = 0 ; int i ; for ( i = 1 ; i <= recibido ; i ++ ) { suma += 1 + ( recibido - i ) * i ; } System . out . printf ( \"%d\\n\" , suma ) ; } }",
            "python_code": "n = int ( input ( ) ) ans = 0 for a in range ( 1 , n ) : ans += ( n - a ) * aprint ( ans + n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1107_A_2036",
            "java_code": "import java . awt . image . AreaAveragingScaleFilter ; import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int l = sc . nextInt ( ) ; String s = sc . next ( ) ;",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) s = input ( ) if n == 2 : if int ( s [ 0 ] ) >= int ( s [ 1 ] ) : print ( \"NO\" ) else : print ( \"YES\" ) print ( 2 ) print ( s [ 0 ] , s [ 1 ] ) else : print ( \"YES\" ) print ( 2 ) print ( s [ 0 ] , s [ 1 : ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3188_A_2037",
            "java_code": "class GFG { static double average ( int a [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += a [ i ] ; return sum / n ; } public static void main ( String [ ] args ) { int arr [ ] = { 10 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } ; int n = arr . length ; System . out . println ( average ( arr , n ) ) ; } }",
            "python_code": "def average ( a , n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += a [ i ] NEWLINE DEDENT return sum / n ; NEWLINE DEDENT arr = [ 10 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] NEWLINE n = len ( arr ) NEWLINE print ( average ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_964_A_2038",
            "java_code": "import java . util . Scanner ; public class Splits { public static void main ( String [ ] args ) { System . out . println ( new Scanner ( System . in ) . nextInt ( ) / 2 + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) print ( n // 2 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_92_A_2039",
            "java_code": "import java . io . File ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int m = input . nextInt ( ) ; int i = 1 , temp = m ; while ( m >= i ) { m -= i ; i ++ ; if ( i > n ) { i = 1 ; } } System . out . println ( m ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) NEWLINE it_is_end = False NEWLINE while True : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if m >= i : NEWLINE INDENTINDENTINDENT m -= i NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT it_is_end = True NEWLINE break NEWLINE DEDENT DEDENT if it_is_end : NEWLINE INDENTINDENT break NEWLINE DEDENT DEDENT print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1312_A_2040",
            "java_code": "import java . util . Scanner ;  public class A1312 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; int m = scanner . nextInt ( ) ; System . out . println ( n % m == 0 ? \"YES\" : \"NO\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : a , b = map ( int , input ( ) . split ( ) ) if a % b == 0 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_790_A_2041",
            "java_code": "import java . util . * ; class solution { static long getSum ( int n , int d ) { long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 10 == d ) sum += i ; } return sum ; } public static void main ( String args [ ] ) { int n = 30 , d = 3 ; System . out . println ( getSum ( n , d ) ) ; } }",
            "python_code": "def getSum ( n , d ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( n + 1 ) : NEWLINE INDENTINDENT if ( i % 10 == d ) : NEWLINE INDENTINDENTINDENT sum += i NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , d = 30 , 3 NEWLINE print ( getSum ( n , d ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4244_A_2042",
            "java_code": "class solution { static int oddEquivalent ( String s , int n ) { int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s . charAt ( i ) == '1' ) count ++ ; } return count ; } public static void main ( String ar [ ] ) { String s = \"1011011\" ; int n = s . length ( ) ; System . out . println ( oddEquivalent ( s , n ) ) ; } }",
            "python_code": "def oddEquivalent ( s , n ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( s [ i ] == '1' ) : NEWLINE INDENTINDENTINDENT count = count + 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT s = \"1011011\" NEWLINE n = len ( s ) NEWLINE print ( oddEquivalent ( s , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1918_A_2043",
            "java_code": "import java . io . * ; class GFG { static int decimalToBinary ( int N ) { int B_Number = 0 ; int cnt = 0 ; while ( N != 0 ) { int rem = N % 2 ; double c = Math . pow ( 10 , cnt ) ; B_Number += rem * c ; N /= 2 ; cnt ++ ; } return B_Number ; } public static void main ( String [ ] args ) { int N = 17 ; System . out . println ( decimalToBinary ( N ) ) ; } }",
            "python_code": "def decimalToBinary ( N ) : NEWLINE INDENT B_Number = 0 NEWLINE cnt = 0 NEWLINE while ( N != 0 ) : NEWLINE INDENTINDENT rem = N % 2 NEWLINE c = pow ( 10 , cnt ) NEWLINE B_Number += rem * c NEWLINE N //= 2 NEWLINE cnt += 1 NEWLINE DEDENT return B_Number NEWLINE DEDENT N = 17 NEWLINE print ( decimalToBinary ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4534_A_2044",
            "java_code": "class GFG { static int getRightMostSetBit ( int n ) { return ( int ) ( ( Math . log ( n & - n ) ) / ( Math . log ( 2 ) ) ) + 1 ; } static int posOfRightMostSameBit ( int m , int n ) { return getRightMostSetBit ( ~ ( m ^ n ) ) ; } public static void main ( String [ ] args ) { int m = 16 , n = 7 ; System . out . print ( \"Position = \" + posOfRightMostSameBit ( m , n ) ) ; } }",
            "python_code": "import math NEWLINE def getRightMostSetBit ( n ) : NEWLINE INDENT return int ( math . log2 ( n & - n ) ) + 1 NEWLINE DEDENT def posOfRightMostSameBit ( m , n ) : NEWLINE INDENT return getRightMostSetBit ( ~ ( m ^ n ) ) NEWLINE DEDENT m , n = 16 , 7 NEWLINE print ( \"Position = \" , posOfRightMostSameBit ( m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4737_A_2045",
            "java_code": "class GFG { public static int getFirstSetBitPos ( int n ) { return ( int ) ( ( Math . log10 ( n & - n ) ) / Math . log10 ( 2 ) ) + 1 ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( getFirstSetBitPos ( n ) ) ; } }",
            "python_code": "import math NEWLINE def getFirstSetBitPos ( n ) : NEWLINE INDENT return math . log2 ( n & - n ) + 1 NEWLINE DEDENT n = 12 NEWLINE print ( int ( getFirstSetBitPos ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_774_A_2046",
            "java_code": "  import static java . lang . Math . abs ; import static java . lang . System . out ; import java . util . Scanner ; ",
            "python_code": "t = input ( )  t = t . split ( )  n = int ( t [ 0 ] )  c1 = int ( t [ 1 ] )  c2 = int ( t [ 2 ] )  t = input ( )  d = 0  for i in t :  if ( i == \"1\" ) :  d = d + 1    min = 10 ** 1488  for i in range ( 1 , d + 1 ) :  t = c1 * i + i * c2 * ( ( ( n // i ) - 1 ) ** 2 ) + c2 * ( n % i ) * ( 2 * ( n // i ) - 1 )  if t < min :  min = t    print ( min )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_494_B_2047",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "s , t = input ( ) , input ( ) n , m = len ( t ) , len ( s ) + 1 d = 1000000007 g = [ 1 ] * mf = k = 0 for i in range ( 1 , m ) : if s [ i - n : i ] == t : k = i if k : f = ( f + g [ k - n ] ) % d g [ i ] += ( g [ i - 1 ] + f ) % dprint ( f ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1492_A_2048",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; while ( ( n -- ) != 0 ) { long p , a , b , c ; p = input . nextLong ( ) ; a = input . nextLong ( ) ; b = input . nextLong ( ) ; c = input . nextLong ( ) ; System . out . println ( Math . min ( Math . min ( ( a - p % a ) % a , ( b - p % b ) % b ) , ( c - p % c ) % c ) ) ; } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : p , a , b , c = map ( int , s . split ( ) ) ; print ( - max ( - p // a * a , - p // b * b , - p // c * c ) - p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1335_B_2049",
            "java_code": "import java . util . * ;  public class Try { public static void main ( String args [ ] ) { Scanner br = new Scanner ( System . in ) ; int t = br . nextInt ( ) ; while ( t -- > 0 ) { int n = br . nextInt ( ) ; int a = br . nextInt ( ) ; int b = br . nextInt ( ) ; int ch = 96 ; while ( n -- != 0 ) { ++ ch ; System . out . print ( ( char ) ch ) ; if ( 96 + b == ch ) ch = 96 ; } System . out . println ( ) ; } } }",
            "python_code": "from math import ceil  t = int ( input ( ) )  l = 'zyxwvutsrqponmlkjihgfedcba' for i in range ( t ) : n , a , b = map ( int , input ( ) . split ( ) )  x = l [ : b ] x = ( x * ceil ( a / b ) ) [ : a ] x = ( x * ceil ( n / a ) ) [ : n ]  print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_811_A_2050",
            "java_code": " import java . util . Scanner ;  public class CF7 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ;  int i = 1 ; while ( true ) { if ( i > a ) { System . out . println ( \"Vladik\" ) ; break ; } else { a -= i ; i ++ ; }  if ( i > b ) { System . out . println ( \"Valera\" ) ; break ; } else { b -= i ; i ++ ; } }  }  }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) print ( 'VVlaaldeirka' [ ( ( 4 * b + 1 ) ** .5 - 1 ) // 2 < a ** .5 // 1 : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1088_A_2051",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = n , b = 1 , c = 0 ; while ( a >= b ) { if ( a % b == 0 ) { if ( a * b > n ) { if ( a / b < n ) { c ++ ; break ; } } else { b ++ ; } } else { a -- ; } } if ( c > 0 ) { System . out . println ( a + \" \" + b ) ; } else { System . out . println ( \"-1\" ) ; } } }",
            "python_code": "x = int ( input ( ) )  flag = Falsefor a in range ( 1 , x + 1 ) : for b in range ( 1 , x + 1 ) : if a % b == 0 and a * b > x and a / b < x : flag = True break if flag : breakif not flag : print ( '-1' ) if flag : print ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3439_A_2052",
            "java_code": "import java . io . * ; class GFG { static void printCollatz ( int n ) { while ( n != 1 ) { System . out . print ( n + \" \" ) ; if ( ( n & 1 ) == 1 ) n = 3 * n + 1 ; else n = n / 2 ; } System . out . print ( n ) ; } public static void main ( String [ ] args ) { printCollatz ( 6 ) ; } }",
            "python_code": "def printCollatz ( n ) : NEWLINE INDENT while n != 1 : NEWLINE INDENTINDENT print ( n , end = ' ' ) NEWLINE if n & 1 : NEWLINE INDENTINDENTINDENT n = 3 * n + 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT n = n // 2 NEWLINE DEDENT DEDENT print ( n ) NEWLINE DEDENT printCollatz ( 6 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1420_A_2053",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class ada_obstacles {",
            "python_code": "import NEWLINE INDENT sysinput = sys . stdin . readline  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5045_A_2054",
            "java_code": "import java . io . * ; class GFG { static double edgeDisjoint ( int n ) { double result = 0 ; result = Math . floor ( n / 2 ) ; return result ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( ( int ) edgeDisjoint ( n ) ) ; } }",
            "python_code": "import math NEWLINE def edgeDisjoint ( n ) : NEWLINE INDENT result = 0 NEWLINE result = math . floor ( n / 2 ) NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE print ( int ( edgeDisjoint ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2053_A_2055",
            "java_code": "class GFG { static int getModulo ( int n , int d ) { return ( n & ( d - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 6 ; int d = 4 ; System . out . println ( n + \" moduo \" + d + \" is \" + getModulo ( n , d ) ) ; } }",
            "python_code": "def getModulo ( n , d ) : NEWLINE INDENT return ( n & ( d - 1 ) ) NEWLINE DEDENT n = 6 NEWLINE d = 4 NEWLINE print ( n , \"moduo\" , d , \"is\" , getModulo ( n , d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_976_A_2056",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) s = input ( ) d = { } for i in s : if ( i in d ) : d [ i ] += 1 else : d [ i ] = 1 if ( len ( d ) == 2 ) : s1 = '1' * 1 + '0' * d [ '0' ] print ( s1 ) else : if ( '0' in d ) : print ( '0' * d [ '0' ] ) else : print ( '1' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4825_A_2057",
            "java_code": "class GFG { static int findSum ( int n ) { return ( n * ( n + 1 ) * ( n + 1 ) * ( n + 2 ) ) / 12 ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT return ( ( n * ( n + 1 ) * ( n + 1 ) * ( n + 2 ) ) / 12 ) NEWLINE DEDENT n = 3 NEWLINE print ( int ( findSum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_550_B_2058",
            "java_code": "import java . util . Scanner ;  public class SbuSeq {  public static void main ( String [ ] args ) {",
            "python_code": "from sys import stdin , stdoutfrom collections import dequeinput = stdin . readline def main ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4938_A_2059",
            "java_code": "import java . util . * ; class GFG { static int countDistinctCode ( String str ) { Set < String > codes = new HashSet < > ( ) ; for ( int i = 0 ; i < str . length ( ) - 1 ; i ++ ) codes . add ( str . substring ( i , i + 2 ) ) ; return codes . size ( ) ; } public static void main ( String [ ] args ) { String str = \"UPUP\" ; System . out . println ( countDistinctCode ( str ) ) ; } }",
            "python_code": "def countDistinctCode ( string ) : NEWLINE INDENT codes = set ( ) NEWLINE for i in range ( 0 , len ( string ) - 1 ) : NEWLINE INDENTINDENT codes . add ( string [ i : i + 2 ] ) NEWLINE DEDENT return len ( codes ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT string = \"UPUP\" NEWLINE print ( countDistinctCode ( string ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2629_A_2060",
            "java_code": "import java . io . * ; class Series { static int sumOfSeries ( int n ) { return n * ( n + 1 ) * ( 6 * n * n * n + 9 * n * n + n - 1 ) / 30 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT return n * ( n + 1 ) * ( 6 * n * n * n + 9 * n * n + n - 1 ) / 30 NEWLINE DEDENT n = 4 NEWLINE print sumOfSeries ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_499_A_2061",
            "java_code": "class GFG { public static void sequence ( int n ) { int f [ ] = new int [ n + 1 ] ; f [ 0 ] = 0 ; f [ 1 ] = 1 ; f [ 2 ] = 1 ; System . out . print ( f [ 1 ] + \" \" + f [ 2 ] + \" \" ) ; for ( int i = 3 ; i <= n ; i ++ ) { f [ i ] = f [ f [ i - 1 ] ] + f [ i - f [ i - 1 ] ] ; System . out . print ( f [ i ] + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 13 ; sequence ( n ) ; } }",
            "python_code": "def sequence ( n ) : NEWLINE INDENT f = [ 0 , 1 , 1 ] NEWLINE print ( f [ 1 ] , end = \" \" ) , NEWLINE print ( f [ 2 ] , end = \" \" ) , NEWLINE for i in range ( 3 , n + 1 ) : NEWLINE INDENTINDENT f . append ( f [ f [ i - 1 ] ] + f [ i - f [ i - 1 ] ] ) NEWLINE print ( f [ i ] , end = \" \" ) , NEWLINE DEDENT DEDENT n = 13 NEWLINE sequence ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_172_B_2062",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; public class Solution { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ;",
            "python_code": "ABMR = list ( map ( int , input ( ) . split ( ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4911_A_2063",
            "java_code": "import java . io . * ; class GFG { public static int averageValue ( String s ) { int sum_char = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { sum_char += ( int ) s . charAt ( i ) ; } return sum_char / s . length ( ) ; } public static void main ( String [ ] args ) { String s = \"GeeksforGeeks\" ; System . out . println ( averageValue ( s ) ) ; } }",
            "python_code": "def averageValue ( s ) : NEWLINE INDENT sum_char = 0 NEWLINE for i in range ( len ( s ) ) : NEWLINE INDENTINDENT sum_char += ord ( s [ i ] ) NEWLINE DEDENT return sum_char // len ( s ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT s = \"GeeksforGeeks\" NEWLINE print ( averageValue ( s ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_939_B_2064",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long [ ] ar = new long [ ( int ) k ] ; int ans = 0 ; long number = 0 ; long diff = Long . MAX_VALUE ;  for ( int i = 0 ; i < k ; i ++ ) { ar [ i ] = sc . nextLong ( ) ; long j1 = n / ar [ i ] ; long d1 = n % ar [ i ] ;",
            "python_code": "n , k = [ int ( x ) for x in input ( ) . split ( ) ] capacities = [ int ( x ) for x in input ( ) . split ( ) ] mods = [ n % capacities [ i ] for i in range ( k ) ] min_mod = min ( mods ) index = mods . index ( min_mod ) print ( \"{} {}\" . format ( index + 1 , n // capacities [ index ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1344_A_2065",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) arr = [ ( int ( i ) + n ) % n for i in input ( ) . split ( ) ] occ = [ 0 for i in range ( n ) ] no = 0 for i in range ( n ) : if occ [ ( i + arr [ i ] ) % n ] != 1 : occ [ ( i + arr [ i ] ) % n ] = 1 else : print ( \"NO\" ) no = 1 break if not no : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_A_2066",
            "java_code": "import java . util . Scanner ;  public class InitialBet {  public static void main ( String [ ] args ) {",
            "python_code": "L = [ int ( X ) for X in input ( ) . split ( ) ] S = sum ( L ) if S == 0 : print ( - 1 ) else : if S % 5 == 0 : print ( S // 5 ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_652_B_2067",
            "java_code": "import java . io . IOException ; import java . io . PrintWriter ; import java . util . * ; public class Main {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans = [ ] check = sorted ( a ) i , j = 0 , n - 1 while i < j : ans . append ( check [ i ] ) ans . append ( check [ j ] ) i += 1 j -= 1 if i == j : ans . append ( check [ i ] ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_A_2068",
            "java_code": "import java . util . * ; import java . io . * ; import java . util . stream . * ; public class Solution { public static void main ( String [ ] args ) throws Exception { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int result = 0 ; int temp = n ; int pow = 1 ; while ( temp >= 10 ) { temp = temp / 10 ; pow = pow * 10 ; } result = ( ( temp + 1 ) * pow ) - n ; System . out . println ( result ) ; } }",
            "python_code": "s = input ( ) s = s [ 1 : ]  l = len ( s ) bigg = 10 ** lif not s : print ( 1 ) else : print ( bigg - int ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1296_B_2069",
            "java_code": "import java . util . Scanner ; public class B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int tc = 0 ; tc < t ; ++ tc ) { int n = sc . nextInt ( ) ; int r ; int ans = 0 ;  while ( n > 0 ) { if ( n < 10 ) { ans += n ; break ; } r = n / 10 ; n = n - r * 10 + r ; ans = ans + r * 10 ; }  System . out . println ( ans ) ;  } sc . close ( ) ; } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) i = n p = list ( ) while i >= 10 : l = i - ( i % 10 ) p . append ( l ) k = ( i // 10 ) + ( i % 10 ) i = k print ( sum ( p ) + i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3042_A_2070",
            "java_code": "class GFG { static void swap ( int a , int b ) { int temp = a ; a = b ; b = temp ; } static int minimumSquare ( int a , int b ) { int result = 0 , rem = 0 ; if ( a < b ) swap ( a , b ) ; while ( b > 0 ) { result += a / b ; rem = a % b ; a = b ; b = rem ; } return result ; } public static void main ( String [ ] args ) { int n = 13 , m = 29 ; System . out . println ( minimumSquare ( n , m ) ) ; } }",
            "python_code": "def minimumSquare ( a , b ) : NEWLINE INDENT result = 0 NEWLINE rem = 0 NEWLINE if ( a < b ) : NEWLINE INDENTINDENT a , b = b , a NEWLINE DEDENT while ( b > 0 ) : NEWLINE INDENTINDENT result += int ( a / b ) NEWLINE rem = int ( a % b ) NEWLINE a = b NEWLINE b = rem NEWLINE DEDENT return result NEWLINE DEDENT n = 13 NEWLINE m = 29 NEWLINE print ( minimumSquare ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1452_B_2071",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Zad1452B {  public static void main ( String [ ] args ) {",
            "python_code": "import math , sys  input = sys . stdin . buffer . readline  NEWLINE def read ( ) : return list ( map ( int , input ( ) . split ( ) ) ) NEWLINE  for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE a = read ( ) NEWLINE suma = sum ( a ) NEWLINE s = max ( max ( a ) , math . ceil ( suma / ( n - 1 ) ) ) NEWLINE print ( s * ( n - 1 ) - suma ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_984_A_2072",
            "java_code": " import java . util . Arrays ; import java . util . Scanner ;  public class Gameee { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; if ( n % 2 != 0 ) { System . out . println ( a [ n / 2 ] ) ; } else { System . out . println ( a [ ( n / 2 ) - 1 ] ) ; } } }",
            "python_code": "n = int ( input ( ) ) numbers = list ( map ( int , input ( ) . split ( \" \" ) ) ) player_1 = 1 player_2 = 0 for i in range ( n - 1 ) : if player_1 == 1 : numbers . remove ( max ( numbers ) ) else : numbers . remove ( min ( numbers ) ) player_1 , player_2 = player_2 , player_1print ( numbers [ 0 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3971_A_2073",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; class GFG { public static int kthSmallest ( Integer [ ] arr , int k ) { Arrays . sort ( arr ) ; return arr [ k - 1 ] ; } public static void main ( String [ ] args ) { Integer arr [ ] = new Integer [ ] { 12 , 3 , 5 , 7 , 19 } ; int k = 2 ; System . out . print ( \"K'th smallest element is \" + kthSmallest ( arr , k ) ) ; } }",
            "python_code": "def kthSmallest ( arr , n , k ) : NEWLINE INDENT arr . sort ( ) NEWLINE return arr [ k - 1 ] NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 12 , 3 , 5 , 7 , 19 ] NEWLINE n = len ( arr ) NEWLINE k = 2 NEWLINE print ( \"K'th smallest element is\" , kthSmallest ( arr , n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_875_A_2074",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;   public class Problem_Solving1 { public static int sumdigits ( long n ) { int sm = 0 ; while ( n > 0 ) { sm += n % 10 ; n /= 10 ; } return sm ; } public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) output = [ ] for i in range ( max ( n - 81 , 0 ) , n ) : listi = list ( map ( int , str ( i ) ) ) if ( i + sum ( listi ) == n ) : output . append ( i ) print ( len ( output ) ) for i in range ( len ( output ) ) : print ( output [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_407_B_2075",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "n = int ( input ( ) ) p = list ( map ( int , input ( ) . split ( ) ) ) dp = [ 0 ] * ( n + 1 ) dp [ 1 ] = 2 for i in range ( 2 , n + 1 ) : c = 0 for j in range ( p [ i - 1 ] , i ) : c += dp [ j ] dp [ i ] = c + 2 print ( sum ( dp ) % ( 10 ** 9 + 7 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_216_A_2076",
            "java_code": "import java . util . * ; import java . lang . * ; ",
            "python_code": "a , b , c = list ( map ( int , input ( ) . split ( ) ) ) print ( b * c + ( ( a - 1 ) * ( c + b - 1 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_327_B_2077",
            "java_code": "import java . util . * ; import java . math . * ; public class HungrySequence { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = n ; i > 0 ; i -- ) { System . out . print ( 1000000 - i + \" \" ) ; } } }",
            "python_code": "n = int ( input ( ) ) print ( * range ( n , 2 * n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1866_A_2078",
            "java_code": "import java . util . HashSet ; class CP { public static void main ( String [ ] args ) { int [ ] A = { 11 , 15 , 7 , 19 } ; int N = A . length ; HashSet < Integer > set = new HashSet < > ( ) ; int i , j , res ; for ( i = 0 ; i < N ; ++ i ) for ( j = i , res = Integer . MAX_VALUE ; j < N ; ++ j ) { res &= A [ j ] ; set . add ( res ) ; } System . out . println ( set ) ; } }",
            "python_code": "A = [ 11 , 15 , 7 , 19 ] NEWLINE N = len ( A ) NEWLINE Set = set ( ) NEWLINE for i in range ( 0 , N ) : NEWLINE INDENT res = 2147483647 NEWLINE for j in range ( i , N ) : NEWLINE INDENTINDENT res &= A [ j ] NEWLINE Set . add ( res ) NEWLINE DEDENT DEDENT print ( Set ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2329_A_2079",
            "java_code": "public class GFG { static int ways ( int n ) { int first = 2 ; int second = 3 ; int res = 0 ; for ( int i = 3 ; i <= n ; i ++ ) { res = first + second ; first = second ; second = res ; } return res ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . print ( \"Total ways are: \" + ways ( n ) ) ; } }",
            "python_code": "def ways ( n ) : NEWLINE INDENT first = 2 ; NEWLINE second = 3 ; NEWLINE res = 0 ; NEWLINE for i in range ( 3 , n + 1 ) : NEWLINE INDENTINDENT res = first + second ; NEWLINE first = second ; NEWLINE second = res ; NEWLINE DEDENT return res ; NEWLINE DEDENT n = 7 ; NEWLINE print ( \"Total ways are: \" , ways ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2587_A_2080",
            "java_code": "class GFG { static int numberSequence ( int n ) { int num = ( int ) ( Math . pow ( 4 , n ) - Math . pow ( 2 , n ) ) - 1 ; return num ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( numberSequence ( n ) ) ; } }",
            "python_code": "def numberSequence ( n ) : NEWLINE INDENT num = pow ( 4 , n ) - pow ( 2 , n ) - 1 NEWLINE return num NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE print ( numberSequence ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1794_A_2081",
            "java_code": "import java . io . * ; class GFG { static float avgOfFirstN ( int n ) { return ( float ) ( 1 + n ) / 2 ; } public static void main ( String args [ ] ) { int n = 20 ; System . out . println ( avgOfFirstN ( n ) ) ; } }",
            "python_code": "def avgOfFirstN ( n ) : NEWLINE INDENT return ( float ) ( 1 + n ) / 2 ; NEWLINE DEDENT n = 20 NEWLINE print ( avgOfFirstN ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2013_A_2082",
            "java_code": "class GFG { static int sumOfSeries ( int n ) { return ( int ) ( 0.6172 * ( Math . pow ( 10 , n ) - 1 ) - 0.55 * n ) ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT return ( int ) ( 0.6172 * ( pow ( 10 , n ) - 1 ) - 0.55 * n ) NEWLINE DEDENT n = 2 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1371_A_2083",
            "java_code": "import java . util . Scanner ;  public class MagicalStick { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int test = sc . nextInt ( ) ; for ( int i = 0 ; i < test ; i ++ ) { int stick = sc . nextInt ( ) ; if ( stick % 2 == 0 ) { System . out . println ( stick / 2 ) ; } else { System . out . println ( stick / 2 + 1 ) ; } } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : x = int ( input ( ) ) if x % 2 == 0 and x > 2 : print ( x // 2 ) elif x == 1 or x == 2 : print ( 1 ) else : print ( ( x // 2 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_A_2084",
            "java_code": "import java . util . Scanner ;  public class CloningToys { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int x = in . nextInt ( ) , y = in . nextInt ( ) - 1 ;  in . close ( ) ; System . out . println ( ( y > 0 && x >= y && ( x - y ) % 2 == 0 ) || ( y == 0 && x == y ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "import mathimport sysimport bisect NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1335_A_2085",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; long n ; while ( t > 0 ) { t -- ; n = in . nextLong ( ) ; if ( n % 2 == 0 ) System . out . println ( n / 2 - 1 ) ; else System . out . println ( n / 2 ) ; }  }",
            "python_code": "for x in range ( int ( input ( ) ) ) : n = int ( input ( ) ) print ( n // 2 - 1 ) if n % 2 == 0 else print ( n // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1505_B_2086",
            "java_code": "import java . util . * ; public class MyClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int s = 0 ; while ( n / 10 > 0 ) { while ( n > 0 ) { s = s + n % 10 ; n = n / 10 ; } n = s ; s = 0 ; } System . out . println ( n ) ; } }",
            "python_code": "num = int ( input ( ) ) NEWLINE num %= 9 NEWLINE if ( num == 0 ) : NEWLINE INDENT num = 9 NEWLINE DEDENT print ( num ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1216_B_2087",
            "java_code": "import java . util . * ;  public class B { public static < K , V > K getKey ( Map < K , V > map , V value ) { for ( Map . Entry < K , V > entry : map . entrySet ( ) ) { if ( value . equals ( entry . getValue ( ) ) ) { return entry . getKey ( ) ; } } return null ; }  public static final class Pair { public int first ; public int second ; public Pair ( int first , int second ) { this . first = first + 1 ; this . second = second ; } ",
            "python_code": "n = int ( input ( ) ) s = list ( map ( int , input ( ) . split ( ) ) ) a = sorted ( s , reverse = True ) sum_a = sum ( [ a [ x ] * x + 1 for x in range ( 0 , n ) ] ) print ( sum_a ) i = 0 while i < n : print ( s . index ( a [ i ] ) + 1 , end = \" \" ) s [ s . index ( a [ i ] ) ] = 0 i += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1030_A_2088",
            "java_code": "import java . util . Scanner ;  public class In_Search_of_an_Easy_Problem {  static Scanner sc = new Scanner ( System . in ) ;  public static void main ( String [ ] args ) { int n = sc . nextInt ( ) ; boolean m = false ; while ( n > 0 ) { int k = sc . nextInt ( ) ; if ( k > 0 ) { m = true ; n = - 1 ; } n -- ; } if ( m ) { System . out . println ( \"HARD\" ) ; } else { System . out . println ( \"EASY\" ) ; } } }",
            "python_code": "import matht = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) [ : t ] h = 0 for i in a : if ( i == 1 ) : h = h + 1 if ( h > 0 ) : print ( \"HARD\" ) else : print ( \"EASY\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_643_B_2089",
            "java_code": "import java . util . ArrayList ; import java . util . Scanner ;  public class BearandTwoPaths {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a , b , c , d = input ( ) . split ( ) if n < 5 or k < n + 1 : print ( - 1 ) else : l = list ( set ( map ( str , range ( 1 , n + 1 ) ) ) - { a , b , c , d } ) print ( ' ' . join ( [ a , c ] + l + [ d , b ] + [ c , a ] + l + [ b , d ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4669_A_2090",
            "java_code": "class GFG { public static int logicOfSequence ( int N ) { if ( N % 2 == 0 ) N = N * N ; else N = N * N * N ; return N ; } public static void main ( String args [ ] ) { int N = 6 ; System . out . println ( logicOfSequence ( N ) ) ; } }",
            "python_code": "def logicOfSequence ( N ) : NEWLINE INDENT if ( N % 2 == 0 ) : NEWLINE INDENTINDENT N = N * N NEWLINE DEDENT else : NEWLINE INDENTINDENT N = N * N * N NEWLINE DEDENT return N NEWLINE DEDENT N = 6 NEWLINE print ( logicOfSequence ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3968_A_2091",
            "java_code": "import java . io . * ; class GFG { static int countPaths ( int n ) { int zB = 1 ; int zADC = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int nzB = zADC * 3 ; int nzADC = ( zADC * 2 + zB ) ; zB = nzB ; zADC = nzADC ; } return zB ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countPaths ( n ) ) ; } }",
            "python_code": "def countPaths ( n ) : NEWLINE INDENT zB = 1 NEWLINE zADC = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT nzB = zADC * 3 NEWLINE nzADC = ( zADC * 2 + zB ) NEWLINE zB = nzB NEWLINE zADC = nzADC NEWLINE DEDENT return zB NEWLINE DEDENT n = 3 NEWLINE print ( countPaths ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1097_A_2092",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; int f = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { String s1 = sc . next ( ) ; if ( s1 . charAt ( 0 ) == s . charAt ( 0 ) || s1 . charAt ( 1 ) == s . charAt ( 1 ) ) { f = 1 ; } } if ( f == 1 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "s = input ( ) l = list ( map ( str , input ( ) . split ( ) ) ) k = '' . join ( map ( str , l ) ) c = 0 if s [ 0 ] in k or s [ 1 ] in k : c = c + 1 if c >= 1 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_515_A_2093",
            "java_code": "import java . util . Scanner ;  public class _0636DrazilandDate {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; int distance = Math . abs ( a ) + Math . abs ( b ) ; if ( s < distance || ( distance - s ) % 2 != 0 ) { System . out . println ( \"No\" ) ; } else { System . out . println ( \"Yes\" ) ; } }  }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) if abs ( a ) + abs ( b ) <= c : if ( c - ( abs ( a ) + abs ( b ) ) ) % 2 == 0 : print ( 'Yes' ) else : print ( \"No\" ) else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3739_A_2094",
            "java_code": "import java . io . * ; class GFG { static double nthHarmonic ( int N ) { float harmonic = 1 ; for ( int i = 2 ; i <= N ; i ++ ) { harmonic += ( float ) 1 / i ; } return harmonic ; } public static void main ( String [ ] args ) { int N = 8 ; System . out . print ( nthHarmonic ( N ) ) ; } }",
            "python_code": "def nthHarmonic ( N ) : NEWLINE INDENT harmonic = 1.00 NEWLINE for i in range ( 2 , N + 1 ) : NEWLINE INDENTINDENT harmonic += 1 / i NEWLINE DEDENT return harmonic NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 8 NEWLINE print ( round ( nthHarmonic ( N ) , 5 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_460_B_2095",
            "java_code": "import java . io . * ; import java . util . * ; public class test1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; long x = 1 , counter = 0 ; List < Long > result = new ArrayList < > ( ) ; for ( int digitSum = 1 ; digitSum <= 81 ; digitSum ++ ) { x = b * ( ( long ) Math . pow ( digitSum , a ) ) + c ;",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) ans = [ ] for i in range ( 1 , 82 ) : t = b * i ** a + c if t > 0 and t <= 10 ** 9 : k = t s = 0 while k : s += k % 10 k //= 10 if s == i : ans . append ( t ) print ( len ( ans ) ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1353_A_2096",
            "java_code": "class GFG { static int minIndex ( int arr [ ] , int n , int pos ) { int num = arr [ pos ] ; int i = pos - 1 ; while ( i >= 0 ) { if ( arr [ i ] != num ) break ; i -- ; } return i + 1 ; } public static void main ( String [ ] args ) { int arr [ ] = { 2 , 1 , 1 , 1 , 5 , 2 } ; int n = arr . length ; int pos = 4 ; System . out . println ( minIndex ( arr , n , pos ) ) ; } }",
            "python_code": "def minIndex ( arr , n , pos ) : NEWLINE INDENT num = arr [ pos ] NEWLINE i = pos - 1 NEWLINE while ( i >= 0 ) : NEWLINE INDENTINDENT if ( arr [ i ] != num ) : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT i -= 1 NEWLINE DEDENT return i + 1 NEWLINE DEDENT arr = [ 2 , 1 , 1 , 1 , 5 , 2 ] NEWLINE n = len ( arr ) NEWLINE pos = 4 NEWLINE print ( minIndex ( arr , n , pos ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_545_A_2097",
            "java_code": "import java . util . * ; import java . math . * ; class GFG { static int maxnumber ( int n , int k ) { for ( int j = 0 ; j < k ; j ++ ) { int ans = 0 ; int i = 1 ; while ( n / i > 0 ) { int temp = ( n / ( i * 10 ) ) * i + ( n % i ) ; i *= 10 ; ans = Math . max ( ans , temp ) ; } n = ans ; } return n ; } public static void main ( String [ ] args ) { int n = 6358 ; int k = 1 ; System . out . println ( maxnumber ( n , k ) ) ; } }",
            "python_code": "def maxnumber ( n , k ) : NEWLINE INDENT for i in range ( 0 , k ) : NEWLINE INDENTINDENT ans = 0 NEWLINE i = 1 NEWLINE while n // i > 0 : NEWLINE INDENTINDENTINDENT temp = ( n // ( i * 10 ) ) * i + ( n % i ) NEWLINE i *= 10 NEWLINE if temp > ans : NEWLINE INDENTINDENTINDENTINDENT ans = temp NEWLINE DEDENT DEDENT n = ans NEWLINE DEDENT return ans ; NEWLINE DEDENT n = 6358 NEWLINE k = 1 NEWLINE print ( maxnumber ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_346_A_2098",
            "java_code": "import java . util . * ; public class Solution {  static int gcd ( int a , int b ) { if ( a % b == 0 ) return b ; return gcd ( b , a % b ) ; } public static String gameWinner ( int [ ] ar , int n ) {",
            "python_code": "import mathfor _ in range ( 1 ) : n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) g = 0 for i in range ( 0 , len ( a ) ) : g = math . gcd ( a [ i ] , g ) maxi = max ( a ) // g if ( n - maxi ) % 2 == 0 : print ( \"Bob\" ) else : print ( \"Alice\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_512_A_2099",
            "java_code": "import java . io . * ; import java . math . * ; import java . text . * ; import java . util . * ; import java . util . regex . * ; class GFG { static int summingSeries ( long n ) { return ( int ) Math . pow ( n , 2 ) ; } public static void main ( String [ ] args ) { int n = 100 ; System . out . println ( \"The sum of n term is: \" + summingSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def summingSeries ( n ) : NEWLINE INDENT return math . pow ( n , 2 ) NEWLINE DEDENT n = 100 NEWLINE print ( \"The sum of n term is: \" , summingSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1218_A_2100",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static float trapezoidarea ( float r ) { if ( r < 0 ) return - 1 ; float a = ( 3 * ( float ) Math . sqrt ( 3 ) * ( float ) Math . pow ( r , 2 ) ) / 4 ; return a ; } public static void main ( String args [ ] ) { float r = 5 ; System . out . printf ( \"%.3f\" , trapezoidarea ( r ) ) ; } }",
            "python_code": "from math import * NEWLINE def trapezoidarea ( r ) : NEWLINE INDENT if r < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = ( 3 * sqrt ( 3 ) * pow ( r , 2 ) ) / 4 NEWLINE return a NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT r = 5 NEWLINE print ( round ( trapezoidarea ( r ) , 3 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1360_B_2101",
            "java_code": "import java . io . * ; import java . util . Arrays ; import java . util . StringTokenizer ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) s = list ( map ( int , input ( ) . split ( ) ) ) s . sort ( ) x = [ ] for i in range ( 1 , n ) : x . append ( s [ i ] - s [ i - 1 ] ) print ( min ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1223_B_2102",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int q = sc . nextInt ( ) ; for ( int i = 0 ; i < q ; i ++ ) { String s = sc . next ( ) ; String t = sc . next ( ) ; boolean ans = false ; for ( int j = 0 ; j < s . length ( ) ; j ++ ) { char ch = s . charAt ( j ) ;",
            "python_code": "try : q = int ( input ( ) ) for i in range ( q ) : s = input ( ) t = input ( ) v = True for j in s : if t . __contains__ ( j ) : print ( \"YES\" ) v = False break if v : print ( \"NO\" ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_628_A_2103",
            "java_code": "import java . util . * ;  public class CodeForces628A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int b = input . nextInt ( ) ; int p = input . nextInt ( ) ; int ans = ( n - 1 ) * ( 2 * b + 1 ) ;  System . out . println ( ans + \" \" + ( n * p ) ) ;  } }",
            "python_code": "n , b , p = map ( int , input ( ) . split ( ) )  garrafas = ( n - 1 ) * ( 2 * b + 1 ) toalhas = n * p  print ( garrafas , toalhas )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4434_A_2104",
            "java_code": "class GFG { static int min_moves ( int n ) { int ans = Integer . MAX_VALUE ; for ( int i = 1 ; i * i <= n ; i ++ ) { if ( n % i == 0 ) { ans = Math . min ( ans , i + n / i - 2 ) ; } } return ans ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( min_moves ( n ) ) ; } }",
            "python_code": "import sys NEWLINE from math import sqrt NEWLINE def min_moves ( n ) : NEWLINE INDENT ans = sys . maxsize ; NEWLINE for i in range ( 1 , int ( sqrt ( n ) ) + 1 ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT ans = min ( ans , i + n // i - 2 ) ; NEWLINE DEDENT DEDENT return ans ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 10 ; NEWLINE print ( min_moves ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_573_A_2105",
            "java_code": "import java . util . Scanner ;  public class BearAndPoker { public static void main ( String [ ] args ) { Scanner xScanner = new Scanner ( System . in ) ; int n = xScanner . nextInt ( ) ; int [ ] bids = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { bids [ i ] = xScanner . nextInt ( ) ; ",
            "python_code": "from math import gcdn = int ( input ( ) ) ; arr = list ( map ( int , input ( ) . split ( ) ) ) s = set ( ) for i in arr : while i % 2 == 0 : i = i // 2 while i % 3 == 0 : i = i // 3 s . add ( i ) if len ( s ) != 1 : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_50_A_2106",
            "java_code": "import java . util . * ;  public final class domino { public static void main ( String Args [ ] ) { Scanner s = new Scanner ( System . in ) ; int m = s . nextInt ( ) ; int n = s . nextInt ( ) ; System . out . println ( ( m * n ) / 2 ) ; } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) c = ( a * b ) // 2 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2228_A_2107",
            "java_code": "import java . io . * ; class GFG { static int getProduct ( int n ) { int product = 1 ; while ( n != 0 ) { product = product * ( n % 10 ) ; n = n / 10 ; } return product ; } public static void main ( String [ ] args ) { int n = 4513 ; System . out . println ( getProduct ( n ) ) ; } }",
            "python_code": "def getProduct ( n ) : NEWLINE INDENT product = 1 NEWLINE while ( n != 0 ) : NEWLINE INDENTINDENT product = product * ( n % 10 ) NEWLINE n = n // 10 NEWLINE DEDENT return product NEWLINE DEDENT n = 4513 NEWLINE print ( getProduct ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_918_B_2108",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "a , b = map ( int , input ( ) . split ( ) )  names = dict ( )  for i in range ( a ) : x , y = input ( ) . split ( ) names [ y ] = x  for i in range ( b ) : com = input ( )  h = com . split ( ) [ - 1 ] [ : - 1 ] print ( f\"{com} #{names[h]}\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3636_A_2109",
            "java_code": "class GFG { static double dist ( double m , double b1 , double b2 ) { double d = Math . abs ( b2 - b1 ) / ( ( m * m ) - 1 ) ; return d ; } public static void main ( String [ ] args ) { double m = 2 , b1 = 4 , b2 = 3 ; System . out . println ( dist ( m , b1 , b2 ) ) ; } }",
            "python_code": "def dist ( m , b1 , b2 ) : NEWLINE INDENT d = abs ( b2 - b1 ) / ( ( m * m ) - 1 ) ; NEWLINE return d ; NEWLINE DEDENT def main ( ) : NEWLINE INDENT m , b1 , b2 = 2 , 4 , 3 ; NEWLINE print ( dist ( m , b1 , b2 ) ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT main ( ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1155_B_2110",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ;",
            "python_code": "n = int ( input ( ) ) s = input ( ) ; flag = True ; cnt = 0 for i in range ( 0 , n - 10 , 2 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1756_A_2111",
            "java_code": "public class GFG { static int PowerOFPINnfactorial ( int n , int p ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int count = 0 , temp = i ; while ( temp % p == 0 ) { count ++ ; temp = temp / p ; } ans += count ; } return ans ; } public static void main ( String [ ] args ) { System . out . println ( PowerOFPINnfactorial ( 4 , 2 ) ) ; } }",
            "python_code": "def PowerOFPINnfactorial ( n , p ) : NEWLINE INDENT ans = 0 ; NEWLINE temp = p ; NEWLINE while ( temp <= n ) : NEWLINE INDENTINDENT ans += n / temp ; NEWLINE temp = temp * p ; NEWLINE DEDENT return ans ; NEWLINE DEDENT print ( PowerOFPINnfactorial ( 4 , 2 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_964_A_2112",
            "java_code": "  import java . util . Scanner ;  public class A_Splits {  public static void main ( String [ ] args ) {",
            "python_code": "print ( ( int ( input ( ) ) // 2 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3690_A_2113",
            "java_code": "class GFG { static int cntSquares ( int n ) { return n * ( n + 1 ) * ( 2 * n + 1 ) / 6 ; } public static void main ( String args [ ] ) { System . out . println ( cntSquares ( 4 ) ) ; } }",
            "python_code": "def cntSquares ( n ) : NEWLINE INDENT return int ( n * ( n + 1 ) * ( 2 * n + 1 ) / 6 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( cntSquares ( 4 ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3620_A_2114",
            "java_code": "import java . io . * ; class GFG { static long count_of_ways ( long n ) { long count = 0 ; count = ( n + 1 ) * ( n + 2 ) / 2 ; return count ; } public static void main ( String [ ] args ) { long n = 3 ; System . out . println ( count_of_ways ( n ) ) ; } }",
            "python_code": "def count_of_ways ( n ) : NEWLINE INDENT count = 0 NEWLINE count = ( n + 1 ) * ( n + 2 ) // 2 NEWLINE return count NEWLINE DEDENT n = 3 NEWLINE print ( count_of_ways ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_723_A_2115",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int x1 = in . nextInt ( ) ; int max = x1 ; int min = x1 ; int x2 = in . nextInt ( ) ; max = Math . max ( max , x2 ) ; min = Math . min ( min , x2 ) ; int x3 = in . nextInt ( ) ; max = Math . max ( max , x3 ) ; min = Math . min ( min , x3 ) ; System . out . println ( max - min ) ;      }  }  ",
            "python_code": "a = list ( map ( int , input ( ) . split ( \" \" ) ) ) a . sort ( ) print ( abs ( a [ 1 ] - a [ 0 ] ) + abs ( a [ 1 ] - a [ 2 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1096_A_2116",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001096A { static public void main ( final String [ ] args ) throws IOException { p001096A . _main ( args ) ; }",
            "python_code": "for i in range ( int ( input ( ) ) ) : l , r = map ( int , input ( ) . split ( ) ) print ( l , 2 * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2885_A_2117",
            "java_code": "class GFG { static int findNumber ( int n , int m ) { int num = ( m - 1 ) * 9 + n ; return num ; } public static void main ( String args [ ] ) { int n = 2 , m = 5 ; System . out . print ( findNumber ( n , m ) ) ; } }",
            "python_code": "def findNumber ( n , m ) : NEWLINE INDENT num = ( m - 1 ) * 9 + n ; NEWLINE return num ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE m = 5 ; NEWLINE print ( findNumber ( n , m ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2938_A_2118",
            "java_code": "class GFG { static int find_greatest_divisor ( int l , int r ) { if ( l == r ) { return l ; } return 1 ; } public static void main ( String [ ] args ) { int l = 2 , r = 12 ; System . out . println ( find_greatest_divisor ( l , r ) ) ; } }",
            "python_code": "def find_greatest_divisor ( l , r ) : NEWLINE INDENT if ( l == r ) : NEWLINE INDENTINDENT return l ; NEWLINE DEDENT return 1 ; NEWLINE DEDENT l = 2 ; NEWLINE r = 12 ; NEWLINE print ( find_greatest_divisor ( l , r ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4067_A_2119",
            "java_code": "import java . io . * ; class GFG { static int squaresum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( i * i ) ; return sum ; } public static void main ( String args [ ] ) throws IOException { int n = 4 ; System . out . println ( squaresum ( n ) ) ; } }",
            "python_code": "def squaresum ( n ) : NEWLINE INDENT sm = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sm = sm + ( i * i ) NEWLINE DEDENT return sm NEWLINE DEDENT n = 4 NEWLINE print ( squaresum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_847_A_2120",
            "java_code": "import java . io . * ; class GFG { static double calTime ( double arr [ ] , int n ) { double work = 0 ; for ( int i = 0 ; i < n ; i ++ ) work += 1 / arr [ i ] ; return 1 / work ; } public static void main ( String [ ] args ) { double arr [ ] = { 6.0 , 3.0 , 4.0 } ; int n = arr . length ; System . out . println ( calTime ( arr , n ) + \" Hours\" ) ; } }",
            "python_code": "def calTime ( arr , n ) : NEWLINE INDENT work = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT work += 1 / arr [ i ] NEWLINE DEDENT return 1 / work NEWLINE DEDENT arr = [ 6.0 , 3.0 , 4.0 ] NEWLINE n = len ( arr ) NEWLINE print ( calTime ( arr , n ) , \"Hours\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_884_A_2121",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; short n = scan . nextShort ( ) , day = 0 ; int [ ] a = new int [ n ] ; int t = scan . nextInt ( ) , i ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = scan . nextInt ( ) ; t -= 86400 - a [ i ] ; day ++ ; if ( t <= 0 ) break ; } System . out . println ( day ) ; } }",
            "python_code": "n , t = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n ) : if 86400 - a [ i ] >= t : print ( i + 1 ) break else : t -= 86400 - a [ i ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_265_A_2122",
            "java_code": "import java . util . Scanner ;  public class ColorfulStonesSimplifiedEdition { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; int position = 0 ; for ( int i = 0 ; i < t . length ( ) ; i ++ ) { if ( t . charAt ( i ) == s . charAt ( position ) ) {",
            "python_code": "from collections import Counter  def solve ( ) : str1 = input ( ) str2 = input ( ) count , j = 1 , 0  for i in range ( len ( str2 ) ) : if str1 [ j ] == str2 [ i ] : count += 1 j += 1  return count     print ( solve ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_792_A_2123",
            "java_code": "import java . io . * ; class GFG { static long getSum ( long n , int d ) { if ( n < d ) return 0 ; while ( n % 10 != d ) n -- ; long k = n / 10 ; return ( k + 1 ) * d + ( k * 10 + 10 * k * k ) / 2 ; } public static void main ( String [ ] args ) { long n = 30 ; int d = 3 ; System . out . println ( getSum ( n , d ) ) ; } }",
            "python_code": "def getSum ( n , d ) : NEWLINE INDENT if ( n < d ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT while ( n % 10 != d ) : NEWLINE INDENTINDENT n -= 1 NEWLINE DEDENT k = n // 10 NEWLINE return ( ( k + 1 ) * d + ( k * 10 + 10 * k * k ) // 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 30 NEWLINE d = 3 NEWLINE print ( getSum ( n , d ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_608_A_2124",
            "java_code": "public class GFG { static int Race ( int B , int C ) { int result = 0 ; result = ( ( C * 100 ) / B ) ; return 100 - result ; } public static void main ( String [ ] args ) { int B = 10 ; int C = 28 ; B = 100 - B ; C = 100 - C ; System . out . println ( Race ( B , C ) + \" meters\" ) ; } }",
            "python_code": "def Race ( B , C ) : NEWLINE INDENT result = 0 ; NEWLINE result = ( ( C * 100 ) // B ) NEWLINE return 100 - result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT B = 10 NEWLINE C = 28 NEWLINE B = 100 - B ; NEWLINE C = 100 - C ; NEWLINE print ( str ( Race ( B , C ) ) + \" meters\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1349_A_2125",
            "java_code": "import java . io . * ; class GFG { static int sum ( int a , int b ) { int sum = 0 ; for ( int i = 1 ; i <= Math . min ( a , b ) ; i ++ ) if ( a % i == 0 && b % i == 0 ) sum += i ; return sum ; } public static void main ( String [ ] args ) { int A = 10 , B = 15 ; System . out . print ( \"Sum = \" + sum ( A , B ) ) ; } }",
            "python_code": "def sum ( a , b ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , min ( a , b ) ) : NEWLINE INDENTINDENT if ( a % i == 0 and b % i == 0 ) : NEWLINE INDENTINDENTINDENT sum += i NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT A = 10 NEWLINE B = 15 NEWLINE print ( \"Sum =\" , sum ( A , B ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1003_A_2126",
            "java_code": "import java . util . Scanner ;  public class PolycarpsPockets { public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int [ ] a = new int [ 110 ] ; for ( int i = 0 ; i < n ; i ++ ) { ++ a [ scan . nextInt ( ) ] ; } int res = 0 ; for ( int i = 0 ; i < 110 ; i ++ ) { res = Math . max ( a [ i ] , res ) ; } System . out . println ( res ) ; } }",
            "python_code": "num_numbers = int ( input ( ) ) integers = sorted ( [ int ( i ) for i in input ( ) . split ( ) ] ) num_nums = [ ] for number in set ( integers ) : num_nums . append ( integers . count ( number ) ) num_nums = sorted ( num_nums , reverse = True ) print ( num_nums [ 0 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3049_A_2127",
            "java_code": "import java . math . * ; class GFG { static int firstDigit ( int n ) { int digits = ( int ) ( Math . log10 ( n ) ) ; n = ( int ) ( n / ( int ) ( Math . pow ( 10 , digits ) ) ) ; return n ; } static int lastDigit ( int n ) { return ( n % 10 ) ; } public static void main ( String args [ ] ) { int n = 98562 ; System . out . println ( firstDigit ( n ) + \" \" + lastDigit ( n ) ) ; } }",
            "python_code": "import math NEWLINE def firstDigit ( n ) : NEWLINE INDENT digits = ( int ) ( math . log10 ( n ) ) NEWLINE n = ( int ) ( n / pow ( 10 , digits ) ) NEWLINE return n ; NEWLINE DEDENT def lastDigit ( n ) : NEWLINE INDENT return ( n % 10 ) NEWLINE DEDENT n = 98562 ; NEWLINE print ( firstDigit ( n ) , end = \" \" ) NEWLINE print ( lastDigit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2936_A_2128",
            "java_code": "class GFG { static int highestPowerOf2 ( int n ) { return ( n & ( ~ ( n - 1 ) ) ) ; } public static void main ( String [ ] args ) { int n = 48 ; System . out . println ( highestPowerOf2 ( n ) ) ; } }",
            "python_code": "def highestPowerOf2 ( n ) : NEWLINE INDENT return ( n & ( ~ ( n - 1 ) ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 48 NEWLINE print ( highestPowerOf2 ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1873_A_2129",
            "java_code": "import java . io . * ; class countSetBits { static int countSetBits ( int n ) { int count = 0 ; while ( n > 0 ) { count += n & 1 ; n >>= 1 ; } return count ; } public static void main ( String args [ ] ) { int i = 9 ; System . out . println ( countSetBits ( i ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT count += n & 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT i = 9 NEWLINE print ( countSetBits ( i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_369_A_2130",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "n , m , k = list ( map ( int , input ( ) . split ( ) ) ) a = list ( map ( int , input ( ) . split ( ) ) )  no = 0 nt = 0  for i in a : if i == 1 : no += 1 else : nt += 1  ans = ( 0 if no - m < 0 else ( no - m ) ) + ( 0 if ( nt - ( k + ( abs ( no - m ) if no - m < 0 else 0 ) ) ) < 0 else ( nt - ( k + ( abs ( no - m ) if no - m < 0 else 0 ) ) ) )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_227_A_2131",
            "java_code": "class fibonacci { static int fib ( int n ) { if ( n <= 1 ) return n ; return fib ( n - 1 ) + fib ( n - 2 ) ; } public static void main ( String args [ ] ) { int n = 9 ; System . out . println ( fib ( n ) ) ; } }",
            "python_code": "def Fibonacci ( n ) : NEWLINE INDENT if n < 0 : NEWLINE INDENTINDENT print ( \"Incorrect input\" ) NEWLINE DEDENT elif n == 0 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT elif n == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return Fibonacci ( n - 1 ) + Fibonacci ( n - 2 ) NEWLINE DEDENT DEDENT print ( Fibonacci ( 9 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1025_A_2132",
            "java_code": "class GFG { static int minCost ( int arr [ ] , int n ) { int count_even = 0 ; int count_odd = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 0 ) count_even ++ ; else count_odd ++ ; } return Math . min ( count_even , count_odd ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 2 , 4 , 3 , 1 , 5 } ; int n = arr . length ; System . out . println ( minCost ( arr , n ) ) ; } }",
            "python_code": "def minCost ( arr , n ) : NEWLINE INDENT count_even = 0 NEWLINE count_odd = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % 2 == 0 ) : NEWLINE INDENTINDENTINDENT count_even += 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT count_odd += 1 NEWLINE DEDENT DEDENT return min ( count_even , count_odd ) NEWLINE DEDENT arr = [ 2 , 4 , 3 , 1 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( minCost ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_639_A_2133",
            "java_code": "class Fibonacci { static boolean isMultipleOf10 ( int n ) { if ( n % 15 == 0 ) return true ; return false ; } public static void main ( String [ ] args ) { int n = 30 ; if ( isMultipleOf10 ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isMultipleOf10 ( n ) : NEWLINE INDENT return ( n % 15 == 0 ) NEWLINE DEDENT n = 30 NEWLINE if ( isMultipleOf10 ( n ) ) : NEWLINE INDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_584_B_2134",
            "java_code": "import java . math . BigInteger ; import java . util . Scanner ;  public class Practice { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; BigInteger a = new BigInteger ( \"3\" ) . pow ( 3 * n ) ; a = a . subtract ( new BigInteger ( \"7\" ) . pow ( n ) ) ; System . out . println ( a . mod ( new BigInteger ( \"1000000007\" ) ) ) ; } }",
            "python_code": "n = int ( input ( ) ) MOD = 1000000007 print ( ( pow ( 3 , 3 * n ) - pow ( 7 , n ) ) % MOD ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_359_B_2135",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = [ i + 1 for i in range ( n * 2 ) ] for i in range ( 1 , k + 1 ) : a [ 2 * ( i - 1 ) ] , a [ ( 2 * i ) ] = a [ 2 * i ] , a [ 2 * ( i - 1 ) ] print ( * a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3656_A_2136",
            "java_code": "class GFG { static float normal ( float m , float n ) { float N = ( float ) ( ( Math . abs ( m ) * Math . abs ( n ) ) / Math . sqrt ( ( Math . abs ( m ) * Math . abs ( m ) ) + ( Math . abs ( n ) * Math . abs ( n ) ) ) ) ; return N ; } public static void main ( String [ ] args ) { float m = - 5 , n = 3 ; System . out . println ( normal ( m , n ) ) ; } }",
            "python_code": "import math ; NEWLINE def normal ( m , n ) : NEWLINE INDENT N = ( ( abs ( m ) * abs ( n ) ) / math . sqrt ( ( abs ( m ) * abs ( m ) ) + ( abs ( n ) * abs ( n ) ) ) ) ; NEWLINE return N ; NEWLINE DEDENT m = - 5 ; n = 3 ; NEWLINE print ( normal ( m , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_761_A_2137",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a , b = [ int ( i ) for i in input ( ) . split ( ) ] if ( abs ( a - b ) > 1 or ( a == 0 and b == 0 ) ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_500_A_2138",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ;  public class cp { static BufferedReader br ; static StringTokenizer st ;  public static void main ( String [ ] args ) throws IOException {  br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;  st = readLine ( ) ; int n = tokenInt ( ) ; int t = tokenInt ( ) ;  st = readLine ( ) ; int [ ] array = readIntArray ( n ) ; ",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) n , t = I ( ) a = * I ( ) , x = 0 while x < t - 1 : x += a [ x ] print ( 'YNEOS' [ x >= t : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2052_A_2139",
            "java_code": "import java . util . * ; class Solution { static float largestCube ( float r ) { if ( r < 0 ) return - 1 ; float a = ( 2 * r ) / ( float ) Math . sqrt ( 3 ) ; return a ; } public static void main ( String args [ ] ) { float r = 5 ; System . out . println ( largestCube ( r ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def largestCube ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT a = ( 2 * r ) / sqrt ( 3 ) NEWLINE return a NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT r = 5 NEWLINE print ( \"{0:.6}\" . format ( largestCube ( r ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1269_A_2140",
            "java_code": "import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; System . out . println ( 9 * n + \" \" + 8 * n ) ; } }",
            "python_code": "n = int ( input ( ) )  print ( 9 * n , \" \" , 8 * n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_617_A_2141",
            "java_code": "import java . util . Scanner ;  public class BigO {  public static void main ( String [ ] args ) { int x ;  Scanner sc = new Scanner ( System . in ) ; x = sc . nextInt ( ) ; int step = 1 ; while ( x > 5 ) { x -= 5 ; step ++ ; } System . out . println ( step ) ; } }",
            "python_code": "x = int ( input ( ) ) print ( ( x + 4 ) // 5 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2326_A_2142",
            "java_code": "class GFG { static int oddDays ( int N ) { int hund1 = N / 100 ; int hund4 = N / 400 ; int leap = N > > 2 ; int ord = N - leap ; if ( hund1 > 0 ) { ord += hund1 ; leap -= hund1 ; } if ( hund4 > 0 ) { ord -= hund4 ; leap += hund4 ; } int days = ord + leap * 2 ; int odd = days % 7 ; return odd ; } public static void main ( String args [ ] ) { int N = 100 ; System . out . print ( oddDays ( N ) ) ; } }",
            "python_code": "def oddDays ( N ) : NEWLINE INDENT hund1 = N // 100 NEWLINE hund4 = N // 400 NEWLINE leap = N >> 2 NEWLINE ordd = N - leap NEWLINE if ( hund1 ) : NEWLINE INDENTINDENT ordd += hund1 NEWLINE leap -= hund1 NEWLINE DEDENT if ( hund4 ) : NEWLINE INDENTINDENT ordd -= hund4 NEWLINE leap += hund4 NEWLINE DEDENT days = ordd + leap * 2 NEWLINE odd = days % 7 NEWLINE return odd NEWLINE DEDENT N = 100 NEWLINE print ( oddDays ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_A_2143",
            "java_code": "import java . util . Scanner ;  public class SoldierAndBananas { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int firstBanana = scanner . nextInt ( ) ; int initialDollars = scanner . nextInt ( ) ; int numBananas = scanner . nextInt ( ) ;  int result = firstBanana * ( numBananas * ( numBananas + 1 ) ) / 2 ; System . out . println ( Math . max ( result - initialDollars , 0 ) ) ; } }",
            "python_code": "z = 0 x = list ( map ( int , input ( ) . rstrip ( ) . split ( ) ) ) for i in range ( 1 , x [ 2 ] + 1 ) : z = z + ( i * x [ 0 ] ) if x [ 1 ] - z < 0 : print ( abs ( z - x [ 1 ] ) ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3613_A_2144",
            "java_code": "class GFG { static boolean pointIsOnLine ( int m , int c , int x , int y ) { if ( y == ( ( m * x ) + c ) ) return true ; return false ; } public static void main ( String [ ] args ) { int m = 3 , c = 2 ; int x = 1 , y = 5 ; if ( pointIsOnLine ( m , c , x , y ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def pointIsOnLine ( m , c , x , y ) : NEWLINE INDENT if ( y == ( ( m * x ) + c ) ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT m = 3 ; c = 2 ; NEWLINE x = 1 ; y = 5 ; NEWLINE if ( pointIsOnLine ( m , c , x , y ) ) : NEWLINE INDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1150_A_2145",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001150A { static public void main ( final String [ ] args ) throws IOException { p001150A . _main ( args ) ; }",
            "python_code": "N , M , R = map ( int , input ( ) . split ( ) ) S = list ( map ( int , input ( ) . split ( ) ) ) B = list ( map ( int , input ( ) . split ( ) ) ) ms = min ( S ) mb = max ( B ) print ( max ( mb * ( R // ms ) + R % ms , R ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1328_A_2146",
            "java_code": "import java . util . * ; import java . io . * ; public class Divisibility { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; int c = a - ( a % b ) ; if ( a % b == 0 ) { System . out . println ( 0 ) ; } else { System . out . println ( ( c + b ) - a ) ; } } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : x , y = tuple ( map ( int , input ( ) . split ( ' ' ) ) ) print ( 0 if x % y == 0 else y - x % y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_195_B_2147",
            "java_code": "import java . awt . image . AreaAveragingScaleFilter ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "from sys import stdin , stdoutnmbr = lambda : int ( stdin . readline ( ) ) lst = lambda : list ( map ( int , input ( ) . split ( ) ) ) for _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4897_A_2148",
            "java_code": "class GFG { static int AVLtree ( int H , int a , int b ) { if ( H == 0 ) return 1 ; if ( H == 1 ) return b ; return AVLtree ( H - 1 , b , a + b + 1 ) ; } public static void main ( String [ ] args ) { int H = 5 ; int answer = AVLtree ( H , 1 , 2 ) ; System . out . println ( \"n(\" + H + \") = \" + answer ) ; } }",
            "python_code": "def AVLtree ( H , a , b ) : NEWLINE INDENT if ( H == 0 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT if ( H == 1 ) : NEWLINE INDENTINDENT return b ; NEWLINE DEDENT return AVLtree ( H - 1 , b , a + b + 1 ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT H = 5 ; NEWLINE answer = AVLtree ( H , 1 , 2 ) ; NEWLINE print ( \"n(\" , H , \") = \" \\ , answer ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5209_A_2149",
            "java_code": "class GFG { static int getMissingNo ( int a [ ] , int n ) { int total = 1 ; for ( int i = 2 ; i <= ( n + 1 ) ; i ++ ) { total += i ; total -= a [ i - 2 ] ; } return total ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 5 } ; System . out . println ( getMissingNo ( arr , arr . length ) ) ; } }",
            "python_code": "def getMissingNo ( a , n ) : NEWLINE INDENT i , total = 0 , 1 NEWLINE for i in range ( 2 , n + 2 ) : NEWLINE INDENTINDENT total += i NEWLINE total -= a [ i - 2 ] NEWLINE DEDENT return total NEWLINE DEDENT arr = [ 1 , 2 , 3 , 5 ] NEWLINE print ( getMissingNo ( arr , len ( arr ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_718_A_2150",
            "java_code": "class GFG { static int countSetBits ( int n ) { int count = 0 ; while ( n != 0 ) { count += n & 1 ; n >>= 1 ; } return count ; } public static void main ( String [ ] args ) { int i = 3 ; System . out . print ( countSetBits ( i ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT count += n & 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT i = 3 NEWLINE print ( countSetBits ( i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_441_A_2151",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , v = map ( int , input ( ) . split ( ) ) l1 = [ ]  for i in range ( n ) : l = list ( map ( int , input ( ) . split ( ) ) ) if ( min ( l [ 1 : ] ) < v ) : l1 . append ( ( i , min ( l [ 1 : ] ) ) ) sorted ( l1 , key = lambda l1 : l1 [ 1 ] ) print ( len ( l1 ) ) for i in l1 : print ( i [ 0 ] + 1 , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5006_A_2152",
            "java_code": "class GFG { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return ( gcd ( b , a % b ) ) ; } static void findSmallest ( int a , int b ) { int lcm = ( a * b ) / gcd ( a , b ) ; System . out . print ( \"x = \" + lcm / a + \"\\ny = \" + lcm / b ) ; } public static void main ( String [ ] args ) { int a = 25 , b = 35 ; findSmallest ( a , b ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( b == 0 ) : NEWLINE INDENTINDENT return a NEWLINE DEDENT return ( gcd ( b , a % b ) ) NEWLINE DEDENT def findSmallest ( a , b ) : NEWLINE INDENT lcm = ( a * b ) / gcd ( a , b ) NEWLINE print ( \"x =\" , lcm / a , \"\\ny = \" , lcm / b ) NEWLINE DEDENT a = 25 NEWLINE b = 35 NEWLINE findSmallest ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2469_A_2153",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static long NthTerm ( long n ) { long x = ( 3 * n * n ) % 1000000009 ; return ( x - n + 1000000009 ) % 1000000009 ; } public static void main ( String args [ ] ) { long N = 4 ; System . out . println ( NthTerm ( N ) ) ; } }",
            "python_code": "def NthTerm ( N ) : NEWLINE INDENT x = ( 3 * N * N ) % 1000000009 NEWLINE return ( ( x - N + 1000000009 ) % 1000000009 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 NEWLINE print ( NthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3151_A_2154",
            "java_code": "class GFG { static int countSquares ( int m , int n ) { if ( n < m ) { int temp = m ; m = n ; n = temp ; } return m * ( m + 1 ) * ( 2 * m + 1 ) / 6 + ( n - m ) * m * ( m + 1 ) / 2 ; } public static void main ( String [ ] args ) { int m = 4 , n = 3 ; System . out . println ( \"Count of squares is \" + countSquares ( m , n ) ) ; } }",
            "python_code": "def countSquares ( m , n ) : NEWLINE INDENT if ( n < m ) : NEWLINE INDENTINDENT temp = m NEWLINE m = n NEWLINE n = temp NEWLINE DEDENT return ( ( m * ( m + 1 ) * ( 2 * m + 1 ) / 6 + ( n - m ) * m * ( m + 1 ) / 2 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT m = 4 NEWLINE n = 3 NEWLINE print ( \"Count of squares is \" , countSquares ( m , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_488_A_2155",
            "java_code": "import java . util . * ; public class GigaTower {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) count = 0 for x in range ( n , 8888888889 ) : x = str ( x ) if \"8\" in x : if count == 0 : count += 1 continue else : print ( count ) exit ( ) else : count += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1718_A_2156",
            "java_code": "import java . io . * ; class GFG { static long centeredTridecagonalNum ( long n ) { return ( 13 * n * ( n - 1 ) + 2 ) / 2 ; } public static void main ( String [ ] args ) { long n = 3 ; System . out . println ( centeredTridecagonalNum ( n ) ) ; n = 10 ; System . out . println ( centeredTridecagonalNum ( n ) ) ; } }",
            "python_code": "def centeredTridecagonalNum ( n ) : NEWLINE INDENT return ( 13 * n * ( n - 1 ) + 2 ) // 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( centeredTridecagonalNum ( n ) ) NEWLINE n = 10 NEWLINE print ( centeredTridecagonalNum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_933_A_2157",
            "java_code": "class RecentCounter { Queue < Integer > q ; public RecentCounter ( ) { q = new LinkedList ( ) ; } public int ping ( int t ) { q . add ( t ) ; while ( q . peek ( ) < t - 3000 ) q . poll ( ) ; return q . size ( ) ; } }",
            "python_code": "class RecentCounter ( object ) : NEWLINE INDENT def __init__ ( self ) : NEWLINE INDENTINDENT self . queue = [ ] NEWLINE DEDENT def ping ( self , t ) : NEWLINE INDENTINDENT self . queue . append ( t ) NEWLINE while self . queue and self . queue [ 0 ] < t - 3000 : NEWLINE INDENTINDENTINDENT self . queue . pop ( 0 ) NEWLINE DEDENT return len ( self . queue ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4632_A_2158",
            "java_code": "import java . util . * ; class Eulerian { public static String fibWord ( int n ) { String Sn_1 = \"0\" ; String Sn = \"01\" ; String tmp ; for ( int i = 2 ; i <= n ; i ++ ) { tmp = Sn ; Sn += Sn_1 ; Sn_1 = tmp ; } return Sn ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . print ( fibWord ( n ) ) ; } }",
            "python_code": "def fibWord ( n ) : NEWLINE INDENT Sn_1 = \"0\" NEWLINE Sn = \"01\" NEWLINE tmp = \"\" NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT tmp = Sn NEWLINE Sn += Sn_1 NEWLINE Sn_1 = tmp NEWLINE DEDENT return Sn NEWLINE DEDENT n = 6 NEWLINE print ( fibWord ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1450_A_2159",
            "java_code": "import java . util . * ; public class Main {  public static void main ( String [ ] args ) { int t , n ; String s ; s = \"\" ;  Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . nextInt ( ) ; s = sc . next ( ) ;  char ch [ ] = s . toCharArray ( ) ;  Arrays . sort ( ch ) ;  System . out . println ( String . valueOf ( ch ) ) ; }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : input ( ) NEWLINE n = [ i for i in input ( ) ] NEWLINE n . sort ( ) NEWLINE print ( \"\" . join ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1113_A_2160",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int v = sc . nextInt ( ) ; int val = v ; if ( n <= v ) System . out . println ( n - 1 ) ; else { for ( int i = 2 ; i <= ( n - v ) ; i ++ ) { val += i ; } System . out . println ( val ) ; } } }",
            "python_code": "n , v = map ( int , input ( ) . split ( ) ) amt = 0 if n > v : amt = v for i in range ( 2 , n - v + 1 ) : amt += ielse : amt = n - 1 print ( amt ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_628_A_2161",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , b , p = list ( map ( int , input ( ) . split ( ) ) )  matches = n - 1    total_b = ( matches * 2 * b ) + matchestotal_p = n * p    print ( total_b , total_p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_667_B_2162",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class AntiCubism {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) ma = max ( arr ) su = sum ( arr ) su = su - maans = ma - suans = ans + 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_669_A_2163",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int stonesNum ; int gifts ; stonesNum = sc . nextInt ( ) ; gifts = ( stonesNum / 3 ) * 2 ;  if ( stonesNum % 3 > 0 ) gifts ++ ;  System . out . println ( gifts ) ;  } }",
            "python_code": "p = int ( input ( ) ) if p >= 3 : x = ( p // 3 ) * 2  if p % 3 : x += 1 else : x = 1 print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2195_A_2164",
            "java_code": "class GFG { static int smallestSum ( int n ) { if ( n == 1 ) return 0 ; return ( 2 * ( int ) Math . pow ( 10 , n - 1 ) ) ; } static int largestSum ( int n ) { return ( 2 * ( ( int ) Math . pow ( 10 , n ) - 1 ) ) ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( \"Largest = \" + largestSum ( n ) ) ; System . out . print ( \"Smallest = \" + smallestSum ( n ) ) ; } }",
            "python_code": "def smallestSum ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return ( 2 * pow ( 10 , n - 1 ) ) NEWLINE DEDENT def largestSum ( n ) : NEWLINE INDENT return ( 2 * ( pow ( 10 , n ) - 1 ) ) NEWLINE DEDENT n = 4 NEWLINE print ( \"Largest = \" , largestSum ( n ) ) NEWLINE print ( \"Smallest = \" , smallestSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5253_A_2165",
            "java_code": "public class GFG { public static int cubesum ( int n ) { return 2 * n * n * ( n + 1 ) * ( n + 1 ) ; } public static void main ( String args [ ] ) { int a = 8 ; System . out . println ( cubesum ( a ) ) ; } }",
            "python_code": "def cubeSum ( n ) : NEWLINE INDENT return 2 * n * n * ( n + 1 ) * ( n + 1 ) NEWLINE DEDENT print ( cubeSum ( 8 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3866_A_2166",
            "java_code": "class GFG { static boolean Check_is_possible ( int l , int r , int k ) { int div_count = ( r / k ) - ( l / k ) ; if ( l % k == 0 ) { div_count ++ ; } return ( div_count > 1 ) ; } public static void main ( String [ ] args ) { int l = 30 , r = 70 , k = 10 ; if ( Check_is_possible ( l , r , k ) ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "def Check_is_possible ( l , r , k ) : NEWLINE INDENT div_count = ( r // k ) - ( l // k ) NEWLINE if l % k == 0 : NEWLINE INDENTINDENT div_count += 1 NEWLINE DEDENT return div_count > 1 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l , r , k = 30 , 70 , 10 NEWLINE if Check_is_possible ( l , r , k ) == True : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_734_B_2167",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ;  public class FindingBorders {  public static void main ( String [ ] args ) throws Exception { ",
            "python_code": "import sysinput = sys . stdin . readline  ''''''   k2 , k3 , k5 , k6 = map ( int , input ( ) . split ( ) ) num_256 = min ( k2 , min ( k5 , k6 ) ) k2 -= num_256num_32 = min ( k2 , k3 ) print ( num_256 * 256 + num_32 * 32 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_12_B_2168",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { static final int N = 15 ; static String str1 , str2 ; static Character [ ] arr = new Character [ N ] ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; static BufferedWriter bw = new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "num = input ( ) given = input ( )  num = \"\" . join ( sorted ( num ) )  idx = - 1 for i in range ( len ( num ) ) : if int ( num [ i ] ) > 0 : idx = i break  if idx == - 1 : solution = \"0\" else : solution = num [ idx ] + num [ : idx ] + num [ idx + 1 : ]  print ( \"WRONG_ANSWER\" if solution != given else \"OK\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1375_B_2169",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class absolute { static int [ ] I = new int [ ] { 0 , - 1 , 0 , 1 } ; static int [ ] J = new int [ ] { - 1 , 0 , 1 , 0 } ; static int [ ] [ ] mat ; public static void main ( String [ ] args ) {",
            "python_code": "import sys  def answer ( n , m , a ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1226_A_2170",
            "java_code": "class GFG { static double areaCube ( double a ) { return ( a * a * a ) ; } static double surfaceCube ( double a ) { return ( 6 * a * a ) ; } public static void main ( String [ ] args ) { double a = 5 ; System . out . println ( \"Area = \" + areaCube ( a ) ) ; System . out . println ( \"Total surface area = \" + surfaceCube ( a ) ) ; } }",
            "python_code": "def areaCube ( a ) : NEWLINE INDENT return ( a * a * a ) NEWLINE DEDENT def surfaceCube ( a ) : NEWLINE INDENT return ( 6 * a * a ) NEWLINE DEDENT a = 5 NEWLINE print ( \"Area =\" , areaCube ( a ) ) NEWLINE print ( \"Total surface area =\" , surfaceCube ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2456_A_2171",
            "java_code": "import java . util . Arrays ; public class GFG { static boolean sackRace ( int p1 , int s1 , int p2 , int s2 ) { return ( ( s1 > s2 && ( p2 - p1 ) % ( s1 - s2 ) == 0 ) || ( s2 > s1 && ( p1 - p2 ) % ( s2 - s1 ) == 0 ) ) ; } public static void main ( String args [ ] ) { int p1 = 4 , s1 = 4 , p2 = 8 , s2 = 2 ; if ( sackRace ( p1 , s1 , p2 , s2 ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def sackRace ( p1 , s1 , p2 , s2 ) : NEWLINE INDENT return ( ( s1 > s2 and ( p2 - p1 ) % ( s1 - s2 ) == 0 ) or ( s2 > s1 and ( p1 - p2 ) % ( s2 - s1 ) == 0 ) ) NEWLINE DEDENT p1 = 4 NEWLINE s1 = 4 NEWLINE p2 = 8 NEWLINE s2 = 2 NEWLINE if ( sackRace ( p1 , s1 , p2 , s2 ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_269_A_2172",
            "java_code": "class Test { static void printCubes ( int a , int b ) { for ( int i = a ; i <= b ; i ++ ) { for ( int j = 1 ; j * j * j <= i ; j ++ ) { if ( j * j * j == i ) { System . out . print ( j * j * j + \"  \" ) ; break ; } } } } public static void main ( String [ ] args ) { int a = 1 , b = 100 ; System . out . println ( \"Perfect cubes in given range:\" ) ; printCubes ( a , b ) ; } }",
            "python_code": "def printCubes ( a , b ) : NEWLINE INDENT for i in range ( a , b + 1 ) : NEWLINE INDENTINDENT j = 1 NEWLINE for j in range ( j ** 3 , i + 1 ) : NEWLINE INDENTINDENTINDENT if ( j ** 3 == i ) : NEWLINE INDENTINDENTINDENTINDENT print ( j ** 3 , end = \" \" ) NEWLINE break NEWLINE DEDENT DEDENT DEDENT DEDENT a = 1 ; b = 100 NEWLINE print ( \"Perfect cubes in given range: \" ) NEWLINE printCubes ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4018_A_2173",
            "java_code": "class GFG { static final int MOD = 1000000007 ; static int modFact ( int n , int m ) { int result = 1 ; for ( int i = 1 ; i <= m ; i ++ ) result = ( result * i ) % MOD ; return result ; } public static void main ( String [ ] args ) { int n = 3 , m = 2 ; System . out . println ( modFact ( n , m ) ) ; } }",
            "python_code": "MOD = 1000000007 NEWLINE def modFact ( n , m ) : NEWLINE INDENT result = 1 NEWLINE for i in range ( 1 , m + 1 ) : NEWLINE INDENTINDENT result = ( result * i ) % MOD NEWLINE DEDENT return result NEWLINE DEDENT n = 3 NEWLINE m = 2 NEWLINE print ( modFact ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1064_B_2174",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( \"\" ) ) l = [ ] for k in range ( n ) : b = int ( input ( \"\" ) ) l . append ( b ) final = [ ] for i in l : c = 0 while i > 0 : if i % 2 == 1 : c = c + 1 i = int ( i / 2 ) final . append ( c ) for j in final : print ( 2 ** j ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_935_A_2175",
            "java_code": "import java . util . Scanner ;  public class Fafa_And_His_Company {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) ) print ( sum ( n % i < 1 for i in range ( 1 , n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1085_A_2176",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = input ( ) s = [ ] if ( len ( n ) % 2 == 0 ) : l = len ( n ) // 2 else : l = len ( n ) // 2 l += 1 s . append ( n [ l - 1 ] ) x = ( len ( n ) - 1 ) - ( l - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_225_A_2177",
            "java_code": "import java . util . Scanner ; public class dice_tower { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , x = in . nextInt ( ) ; boolean b = true ; for ( int i = 0 ; i < 2 * n ; i ++ ) { int num = in . nextInt ( ) ; if ( num == x || num == 7 - x ) { b = false ; } } if ( b ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) l = int ( input ( ) ) ll = 7 - lk = [ ] m = [ ] mm = \"YES\" h = - 1 for i in range ( n ) : x , y = map ( int , input ( ) . split ( ) ) k . append ( x ) m . append ( y ) if l in k or l in m or ll in k or ll in m : mm = \"NO\" print ( mm )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1057_A_2178",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ;  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) p = [ 0 , 0 , * map ( int , input ( ) . split ( ) ) ] r = [ ] while n : r . append ( n ) ; n = p [ n ] print ( * reversed ( r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2515_A_2179",
            "java_code": "import java . io . * ; import java . math . * ; class GFG { static int sumofseries ( int n ) { return ( n * ( n + 1 ) * ( n + 2 ) * ( n + 3 ) / 4 ) ; } public static void main ( String [ ] args ) { System . out . println ( sumofseries ( 3 ) ) ; } }",
            "python_code": "def sumofseries ( n ) : NEWLINE INDENT return int ( n * ( n + 1 ) * ( n + 2 ) * ( n + 3 ) / 4 ) NEWLINE DEDENT print ( sumofseries ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_197_A_2180",
            "java_code": "import java . io . * ; import java . util . * ;",
            "python_code": "a , b , r = map ( int , input ( ) . split ( ) ) d = r + rk = a // dp = b // d  if ( k > 0 and p > 0 ) : print ( \"First\" ) else : print ( \"Second\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_746_A_2181",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Scanner ;  public class Singleton_Pattern { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; b /= 2 ; c /= 4 ; int res = 7 * ( Integer . min ( Integer . min ( a , b ) , Integer . min ( b , c ) ) ) ; System . out . println ( res ) ;  } } ",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = int ( input ( ) ) d = min ( a , b // 2 , c // 4 ) print ( 7 * d ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_988_B_2182",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "import sys , mathfrom collections import deque , defaultdictimport operator as opfrom functools import reducefrom itertools import permutations  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1107_B_2183",
            "java_code": "import java . util . Scanner ;  public class _0707Digitalroot {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; for ( int i = 0 ; i < n ; i ++ ) { long k = sc . nextLong ( ) ; long x = sc . nextLong ( ) ; System . out . println ( ( ( k - 1 ) * 9L ) + x ) ; } }  }",
            "python_code": "t = int ( input ( ) ) lst = [ ] res = [ ] for i in range ( 0 , t ) : lst = [ int ( i ) for i in input ( ) . split ( ) ] ele = 9 * lst [ 0 ] + lst [ 1 ] - 9 res . append ( ele )  for i in range ( 0 , t ) : print ( res [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_622_B_2184",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . Scanner ; import java . util . StringTokenizer ;  import static java . lang . Math . max ; import java . util . HashSet ;  public class Test {",
            "python_code": "h , m = [ int ( x ) for x in input ( ) . split ( ':' ) ] a = int ( input ( ) ) hrs = a // 60 h += hrsa = a - ( 60 * hrs ) m += aif m >= 60 : m -= 60 h += 1 t = str ( h % 24 ) . zfill ( 2 ) + ':' + str ( m ) . zfill ( 2 ) print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4707_A_2185",
            "java_code": "import java . io . * ; class GFG { static void survival ( int S , int N , int M ) { if ( ( ( N * 6 ) < ( M * 7 ) && S > 6 ) || M > N ) System . out . println ( \"No\" ) ; else { int days = ( M * S ) / N ; if ( ( ( M * S ) % N ) != 0 ) days ++ ; System . out . println ( \"Yes \" + days ) ; } } public static void main ( String [ ] args ) { int S = 10 , N = 16 , M = 2 ; survival ( S , N , M ) ; } }",
            "python_code": "def survival ( S , N , M ) : NEWLINE INDENT if ( ( ( N * 6 ) < ( M * 7 ) and S > 6 ) or M > N ) : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT days = ( M * S ) / N NEWLINE if ( ( ( M * S ) % N ) != 0 ) : NEWLINE INDENTINDENTINDENT days += 1 NEWLINE DEDENT print ( \"Yes \" ) , NEWLINE print ( days ) NEWLINE DEDENT DEDENT S = 10 ; N = 16 ; M = 2 NEWLINE survival ( S , N , M ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_712_A_2186",
            "java_code": "import java . util . Scanner ;  public class PROBLEM48 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = [ int ( x ) for x in input ( ) . split ( ) ] l = [ ] for i in range ( 1 , n ) : l . append ( a [ i ] + a [ i - 1 ] ) l . append ( a [ n - 1 ] ) print ( * l ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_595_B_2187",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "from math import ceiln , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) m = 10 ** ( k - 1 ) ans = 1 for i in range ( n // k ) : an = ( 10 ** k - 1 ) // a [ i ] + 1 l = b [ i ] * m r = ( b [ i ] + 1 ) * m - 1 count = r // a [ i ] - ceil ( l / a [ i ] ) + 1 ans = ( ans * ( an - count ) ) % ( 10 ** 9 + 7 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4586_A_2188",
            "java_code": "public class GFG { static double hexDiagonal ( float a ) { if ( a < 0 ) return - 1 ; double d = ( double ) 1.73 * a ; return d ; } public static void main ( String [ ] args ) { float a = 9 ; System . out . println ( hexDiagonal ( a ) ) ; } }",
            "python_code": "def hexDiagonal ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT d = 1.73 * a ; NEWLINE return d ; NEWLINE DEDENT a = 9 ; NEWLINE print ( hexDiagonal ( a ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_387_A_2189",
            "java_code": "import java . util . * ;  public class Absolutezero { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; String [ ] s1 = s . split ( \":\" ) ; String [ ] t1 = t . split ( \":\" ) ; int h1 = Integer . parseInt ( s1 [ 0 ] ) ; int m1 = Integer . parseInt ( s1 [ 1 ] ) ;  int h2 = Integer . parseInt ( t1 [ 0 ] ) ; int m2 = Integer . parseInt ( t1 [ 1 ] ) ; ",
            "python_code": "woke_hr , woke_min = map ( int , input ( ) . split ( \":\" ) ) dur_hr , dur_min = map ( int , input ( ) . split ( \":\" ) ) st_sleep_hr , st_sleep_min = 0 , 0  if woke_min < dur_min : st_sleep_min = ( 60 + woke_min ) - dur_min ; dur_hr += 1 else : st_sleep_min = woke_min - dur_min NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4004_A_2190",
            "java_code": "import java . * ; class Geeks { public static void main ( String a [ ] ) { int x = 10 ; int y = 5 ; x = x + y ; y = x - y ; x = x - y ; System . out . println ( \"After swaping:\" + \" x = \" + x + \", y = \" + y ) ; } }",
            "python_code": "x = 10 NEWLINE y = 5 NEWLINE x = x + y NEWLINE y = x - y NEWLINE x = x - y NEWLINE print ( \"After Swapping: x =\" , x , \" y =\" , y ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3214_A_2191",
            "java_code": "import java . io . * ; class GFG { static int rangeGCD ( int n , int m ) { return ( n == m ) ? n : 1 ; } public static void main ( String [ ] args ) { int n = 475 ; int m = 475 ; System . out . println ( rangeGCD ( n , m ) ) ; } }",
            "python_code": "def rangeGCD ( n , m ) : NEWLINE INDENT return n if ( n == m ) else 1 NEWLINE DEDENT n , m = 475 , 475 NEWLINE print ( rangeGCD ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_327_B_2192",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long ans = 100000 ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( ( ans ++ ) + \" \" ) ; System . out . println ( ) ; sc . close ( ) ; } }",
            "python_code": "import math  n = int ( input ( ) )   def is_prime ( n ) : if n == 2 : return True if n % 2 == 0 or n <= 1 : return False  sqr = int ( n ** 0.5 ) + 1  for divisor in range ( 3 , sqr , 2 ) : if n % divisor == 0 : return False return True   arr = [ ] for i in range ( 2 , 10 ** 7 ) : if len ( arr ) == n : print ( * arr ) exit ( ) if is_prime ( i ) is True : arr . append ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4433_A_2193",
            "java_code": "class GfG { static int countSteps ( int x , int y ) { if ( x < y ) { return x + y + 2 * ( ( y - x ) / 2 ) ; } else { return x + y + 2 * ( ( ( x - y ) + 1 ) / 2 ) ; } } public static void main ( String [ ] args ) { int x = 4 , y = 3 ; System . out . println ( countSteps ( x , y ) ) ; } }",
            "python_code": "def countSteps ( x , y ) : NEWLINE INDENT if x < y : NEWLINE INDENTINDENT return x + y + 2 * ( ( y - x ) // 2 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return x + y + 2 * ( ( ( x - y ) + 1 ) // 2 ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT x , y = 4 , 3 NEWLINE print ( countSteps ( x , y ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_677_A_2194",
            "java_code": " import java . util . Scanner ; public class Train {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int wCount = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int length = sc . nextInt ( ) ; if ( length <= a ) { wCount ++ ; } else { wCount += 2 ; } } System . out . println ( wCount ) ; } }",
            "python_code": "n , h = list ( map ( int , input ( ) . split ( ) ) ) n1 = list ( map ( int , input ( ) . split ( ) ) ) count = 0 for i in n1 : if ( i > h ) : count += 2 else : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1508_A_2195",
            "java_code": "import java . util . * ; class GFG { static int maxSum ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += ( arr [ i ] * i ) ; return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 5 , 6 , 1 } ; int n = arr . length ; System . out . println ( maxSum ( arr , n ) ) ; } }",
            "python_code": "def maxSum ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += arr [ i ] * i NEWLINE DEDENT return sum NEWLINE DEDENT arr = [ 3 , 5 , 6 , 1 ] NEWLINE n = len ( arr ) NEWLINE print ( maxSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2206_A_2196",
            "java_code": "class GFG { static int countSubSeq ( String str , int len ) { int ans = 0 ; int mul = 1 ; for ( int i = 0 ; i < len ; i ++ ) { if ( str . charAt ( i ) == '0' ) ans += mul ; mul *= 2 ; } return ans ; } public static void main ( String [ ] args ) { String str = \"10010\" ; int len = str . length ( ) ; System . out . print ( countSubSeq ( str , len ) ) ; } }",
            "python_code": "def countSubSeq ( strr , lenn ) : NEWLINE INDENT ans = 0 NEWLINE mul = 1 NEWLINE for i in range ( lenn ) : NEWLINE INDENTINDENT if ( strr [ i ] == '0' ) : NEWLINE INDENTINDENTINDENT ans += mul NEWLINE DEDENT mul *= 2 NEWLINE DEDENT return ans NEWLINE DEDENT strr = \"10010\" NEWLINE lenn = len ( strr ) NEWLINE print ( countSubSeq ( strr , lenn ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_978_B_2197",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = Integer . valueOf ( scanner . nextLine ( ) ) ; String s = scanner . nextLine ( ) ; System . out . println ( s . length ( ) - s . replaceAll ( \"xxx+\" , \"xx\" ) . length ( ) ) ; } }",
            "python_code": "b , c = int ( input ( ) ) , input ( ) f = 0 m = 0 for i in range ( 0 , len ( c ) ) : if c [ i ] == \"x\" : f += 1 else : if f > 2 : m += f - 2 f = 0 if i + 1 == len ( c ) and f > 2 : m += f - 2 print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2464_A_2198",
            "java_code": "class GFG { static double square ( double a ) { if ( a < 0 ) return - 1 ; double x = 0.464 * a ; return x ; } public static void main ( String [ ] args ) { double a = 5 ; System . out . println ( square ( a ) ) ; } }",
            "python_code": "def square ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = 0.464 * a NEWLINE return x NEWLINE DEDENT a = 5 NEWLINE print ( square ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1119_A_2199",
            "java_code": "import java . util . Scanner ;  public class IlyaColorWalk { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i , l = 0 , r = n - 1 , c [ ] = new int [ n ] ;  for ( i = 0 ; i < n ; i ++ ) c [ i ] = in . nextInt ( ) ; in . close ( ) ;  while ( c [ l ] == c [ n - 1 ] ) l ++ ; while ( c [ r ] == c [ 0 ] ) r -- ; System . out . println ( Math . max ( n - l - 1 , r ) ) ; } }",
            "python_code": "n = int ( input ( ) ) c = list ( map ( int , input ( ) . split ( ) ) ) i = 0j = n - 1 ans1 = 0 ans2 = 0 while i < n - 1 and j > 0 : if c [ j ] != c [ 0 ] : ans1 = j break else : j -= 1 if c [ i ] != c [ n - 1 ] : ans2 = n - 1 - i break else : i += 1  print ( max ( ans1 , ans2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4750_A_2200",
            "java_code": "class GFG { static int findOddPair ( int A [ ] , int N ) { int i , count = 0 ; for ( i = 0 ; i < N ; i ++ ) { if ( A [ i ] % 2 == 0 ) count ++ ; } return count * ( N - count ) ; } public static void main ( String [ ] arg ) { int a [ ] = { 5 , 4 , 7 , 2 , 1 } ; int n = a . length ; System . out . println ( findOddPair ( a , n ) ) ; } }",
            "python_code": "def findOddPair ( A , N ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT if ( A [ i ] % 2 == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count * ( N - count ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = [ 5 , 4 , 7 , 2 , 1 ] NEWLINE n = len ( a ) NEWLINE print ( findOddPair ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_38_A_2201",
            "java_code": "import java . util . Scanner ;    public class MAIN {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) R1 , R2 = map ( int , input ( ) . split ( ) ) print ( sum ( a [ R1 - 1 : R2 - 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2639_A_2202",
            "java_code": "class GFG { static int oddTriangularNumber ( int N ) { return ( N * ( ( 2 * N ) - 1 ) ) ; } public static void main ( String [ ] args ) { int N = 3 ; System . out . println ( oddTriangularNumber ( N ) ) ; } }",
            "python_code": "def oddTriangularNumber ( N ) : NEWLINE INDENT return ( N * ( ( 2 * N ) - 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 3 NEWLINE print ( oddTriangularNumber ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4495_A_2203",
            "java_code": "import java . io . * ; class GFG { static String areAllBitsSet ( int n ) { if ( n == 0 ) return \"No\" ; if ( ( ( n + 1 ) & n ) == 0 ) return \"Yes\" ; return \"No\" ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . println ( areAllBitsSet ( n ) ) ; } }",
            "python_code": "def areAllBitsSet ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return \"No\" NEWLINE DEDENT if ( ( ( n + 1 ) & n ) == 0 ) : NEWLINE INDENTINDENT return \"Yes\" NEWLINE DEDENT return \"No\" NEWLINE DEDENT n = 7 NEWLINE print ( areAllBitsSet ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_914_B_2204",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . List ; import java . util . stream . Collectors ; import java . util . stream . Stream ;  public class Codeforces914B {  public static void main ( String [ ] args ) throws NumberFormatException , IOException {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) l1 = [ 0 ] * 100001 for item in a : l1 [ item ] += 1 ans = \"Agasa\" for item in l1 : if item % 2 : ans = \"Conan\" ; breakprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4319_A_2205",
            "java_code": "class GFG { static int arr [ ] = { 1 , 2 , 3 , 4 , 5 , 6 } ; static int multiply ( ) { int pro = 1 ; for ( int i = 0 ; i < arr . length ; i ++ ) pro = pro * arr [ i ] ; return pro ; } public static void main ( String [ ] args ) { System . out . println ( multiply ( ) ) ; } }",
            "python_code": "def multiply ( array , n ) : NEWLINE INDENT pro = 1 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT pro = pro * array [ i ] NEWLINE DEDENT return pro NEWLINE DEDENT array = [ 1 , 2 , 3 , 4 , 5 , 6 ] NEWLINE n = len ( array ) NEWLINE print ( multiply ( array , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_182_B_2206",
            "java_code": "import java . util . * ; public class VasyasCalendar { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int d = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) ans += ( d - a [ i ] ) ; System . out . println ( ans ) ; } }",
            "python_code": "d = int ( input ( ) ) n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) r = 0 for i in range ( n - 1 ) : r = r + ( d - l [ i ] ) print ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_932_A_2207",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main { static FastReader sc = new FastReader ( ) ; static long dp [ ] [ ] [ ] ; static int mod = 1000000007 ; public static void main ( String [ ] args ) throws IOException {",
            "python_code": "s = input ( ) print ( s + s [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_257_B_2208",
            "java_code": " import java . util . Scanner ;  public class PlayingCubes { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int min = Math . min ( n , m ) ; int max = Math . max ( n , m ) ;  System . out . println ( ( max - 1 ) + \" \" + ( min ) ) ; }  }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) print ( ( n + m ) - 1 - min ( n , m ) , min ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5102_A_2209",
            "java_code": "import java . util . Arrays ; class GFG { static int findMinimal ( int [ ] a , int n ) { Arrays . sort ( a ) ; int sum = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) sum += ( a [ i ] + a [ n - i - 1 ] ) * ( a [ i ] + a [ n - i - 1 ] ) ; return sum ; } public static void main ( String str [ ] ) { int [ ] a = { 8 , 5 , 2 , 3 } ; int n = a . length ; System . out . println ( findMinimal ( a , n ) ) ; } }",
            "python_code": "def findMinimal ( a , n ) : NEWLINE INDENT a . sort ( ) NEWLINE sum = 0 NEWLINE for i in range ( n // 2 ) : NEWLINE INDENTINDENT sum += ( ( a [ i ] + a [ n - i - 1 ] ) * ( a [ i ] + a [ n - i - 1 ] ) ) NEWLINE DEDENT return sum NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 8 , 5 , 2 , 3 ] NEWLINE n = len ( a ) NEWLINE print ( findMinimal ( a , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4851_A_2210",
            "java_code": "import java . io . * ; class GFG { static int centereddecagonalnum ( int n ) { return ( 5 * n * n + 5 * n + 1 ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( n + \"th centered \" + \"decagonal number: \" ) ; System . out . println ( centereddecagonalnum ( n ) ) ; n = 9 ; System . out . print ( n + \"th centered \" + \"decagonal number: \" ) ; System . out . println ( centereddecagonalnum ( n ) ) ; } }",
            "python_code": "def centereddecagonalnum ( n ) : NEWLINE INDENT return ( 5 * n * n + 5 * n + 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE print ( n , \"th centered decagonal \" + \"number : \" , centereddecagonalnum ( n ) ) NEWLINE n = 9 NEWLINE print ( n , \"th centered decagonal \" + \"number : \" , centereddecagonalnum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_916_B_2211",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { long x , y ; Student ( long x , long y ) { this . x = x ; this . y = y ; } } static int prime [ ] ; static void sieveOfEratosthenes ( int n ) {",
            "python_code": "import mathx , k = map ( int , input ( ) . split ( ) ) kori = ka = bin ( x )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1180_A_2212",
            "java_code": "class GFG { static void factors ( int n , int i ) { if ( i <= n ) { if ( n % i == 0 ) { System . out . print ( i + \" \" ) ; } factors ( n , i + 1 ) ; } } public static void main ( String args [ ] ) { int N = 16 ; factors ( N , 1 ) ; } }",
            "python_code": "def factors ( n , i ) : NEWLINE INDENT if ( i <= n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT print ( i , end = \" \" ) ; NEWLINE DEDENT factors ( n , i + 1 ) ; NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 16 ; NEWLINE factors ( N , 1 ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4483_A_2213",
            "java_code": "import java . io . * ; class GFG { static float circumferenceparallelogram ( float a , float b ) { return ( ( 2 * a ) + ( 2 * b ) ) ; } public static void main ( String arg [ ] ) { float a = 10 , b = 8 ; System . out . print ( \"Circumference of a given Parallelogram is :\" ) ; System . out . println ( circumferenceparallelogram ( a , b ) ) ; } }",
            "python_code": "def circumferenceparallelogram ( a , b ) : NEWLINE INDENT return ( ( 2 * a ) + ( 2 * b ) ) NEWLINE DEDENT a = 10 NEWLINE b = 8 NEWLINE print ( \"Circumference of a given Parallelogram is :\" , round ( circumferenceparallelogram ( a , b ) , 4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5008_A_2214",
            "java_code": "import java . util . * ; class solution { static void alternate ( int a , int b , int x ) { x = a + b - x ; System . out . println ( \"After change\" + \"\\n\" + \" x is : \" + x ) ; } public static void main ( String args [ ] ) { int a = - 10 ; int b = 15 ; int x = a ; System . out . println ( \"x is : \" + x ) ; alternate ( a , b , x ) ; } }",
            "python_code": "def alternate ( a , b , x ) : NEWLINE INDENT x = a + b - x NEWLINE print ( \"After change x is:\" , x ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = - 10 NEWLINE b = 15 NEWLINE x = a NEWLINE print ( \"x is:\" , x ) NEWLINE alternate ( a , b , x ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_697_A_2215",
            "java_code": "import java . util . Scanner ;  public class PineappleBark { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; long t = in . nextLong ( ) , s = in . nextLong ( ) , x = in . nextLong ( ) ;  in . close ( ) ; x -= t ; System . out . println ( ( ( x % s == 0 || x % s == 1 ) && x > 1 ) || x == 0 ? \"YES\" : \"NO\" ) ; } }",
            "python_code": "import sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_34_B_2216",
            "java_code": "import java . util . * ; public class MyClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; int s = 0 ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } Arrays . sort ( arr ) ; for ( int i = 0 ; i < m ; i ++ ) { if ( arr [ i ] >= 0 ) break ; s = s + arr [ i ] ; } System . out . println ( - s ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) lst = [ * map ( int , input ( ) . split ( ) ) ] lst . sort ( )  total = 0  for num in lst [ : m ] : if num > 0 : break else : total += numprint ( abs ( total ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_729_A_2217",
            "java_code": "import java . util . * ; import java . io . * ; import java . util . stream . * ; public class Solution { public static void main ( String [ ] args ) throws Exception { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; scan . nextLine ( ) ; String s = scan . nextLine ( ) ; System . out . println ( s . replaceAll ( \"ogo(go)*\" , \"***\" ) ) ; } }",
            "python_code": "import re  n = input ( ) cad = input ( )  print ( re . sub ( r'o(go)+' , '***' , cad ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1368_B_2218",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Main {  private static int MAX = Integer . MAX_VALUE ; private static int MIN = Integer . MIN_VALUE ; private static int MOD = 1000000007 ; static FastScanner sc = new FastScanner ( ) ;  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "k = int ( input ( ) ) ans = [ int ( 1 ) ] * 10 prod = int ( 1 ) s = \"codeforces\" i = int ( 0 ) while k > prod : ans [ i ] += 1 prod = prod * ans [ i ] // ( ans [ i ] - 1 ) i += 1 i = i % 10 for i in range ( 10 ) : print ( s [ i ] * ans [ i ] , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1165_A_2219",
            "java_code": "import java . util . Scanner ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; String s = sc . next ( ) ; int xVal = ( int ) Math . pow ( 10 , x ) ; int yVal = ( int ) Math . pow ( 10 , y ) ;",
            "python_code": "n , x , y = [ int ( x ) for x in input ( ) . split ( ) ] s = input ( ) [ : : - 1 ] c = 0 c = sum ( [ 1 for i in s [ 0 : y ] if i == '1' ] ) c += sum ( [ 1 for i in s [ y + 1 : x ] if i == '1' ] ) if s [ y ] == '0' : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3159_A_2220",
            "java_code": "import java . io . * ; class GFG { static int countOnes ( int n ) { int count = 1 ; int rem = 1 ; while ( rem != 0 ) { rem = ( rem * 10 + 1 ) % n ; count ++ ; } return count ; } public static void main ( String [ ] args ) { int n = 13 ; System . out . println ( countOnes ( n ) ) ; } }",
            "python_code": "def countOnes ( n ) : NEWLINE INDENT count = 1 ; NEWLINE rem = 1 ; NEWLINE while ( rem != 0 ) : NEWLINE INDENTINDENT rem = ( rem * 10 + 1 ) % n ; NEWLINE count = count + 1 ; NEWLINE DEDENT return count ; NEWLINE DEDENT n = 13 ; NEWLINE print ( countOnes ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_218_B_2221",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "from __future__ import division , print_function  import osimport sysfrom io import BytesIO , IOBase if sys . version_info [ 0 ] < 3 : from __builtin__ import xrange as range from future_builtins import ascii , filter , hex , map , oct , zip def main ( ) : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1581_A_2222",
            "java_code": "import java . io . * ; class GFG { static int power ( int x , int y , int p ) { int res = 1 ; x = x % p ; if ( x == 0 ) return 0 ; while ( y > 0 ) { if ( ( y & 1 ) == 1 ) res = ( res * x ) % p ; y = y > > 1 ; x = ( x * x ) % p ; } return res ; } public static void main ( String args [ ] ) { int x = 2 ; int y = 5 ; int p = 13 ; System . out . println ( \"Power is \" + power ( x , y , p ) ) ; } }",
            "python_code": "def power ( x , y , p ) : NEWLINE INDENT res = 1 NEWLINE x = x % p NEWLINE if ( x == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT while ( y > 0 ) : NEWLINE INDENTINDENT if ( ( y & 1 ) == 1 ) : NEWLINE INDENTINDENTINDENT res = ( res * x ) % p NEWLINE DEDENT y = y >> 1 NEWLINE x = ( x * x ) % p NEWLINE DEDENT return res NEWLINE DEDENT x = 2 ; y = 5 ; p = 13 NEWLINE print ( \"Power is \" , power ( x , y , p ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1493_B_2223",
            "java_code": "import java . io . * ; import java . util . * ;  public class B { static int [ ] valid = new int [ ] { 0 , 1 , 5 , - 1 , - 1 , 2 , - 1 , - 1 , 8 , - 1 } ; public static int reverse ( int time ) { int reversed = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { int dig = time % 10 ; if ( valid [ dig ] == - 1 ) { return - 1 ; } reversed = reversed * 10 + valid [ dig ] ; time /= 10 ; } return reversed ; } public static void main ( String [ ] args ) {",
            "python_code": "import sys , mathimport NEWLINE heapq  from collections import NEWLINE INDENT dequeinput = sys . stdin . readline  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_579_A_2224",
            "java_code": "import java . util . Scanner ; import java . lang . Math ; import java . util . Arrays ;  public class pa { static Scanner sc = new Scanner ( System . in ) ; public static void main ( String args [ ] ) { long n = sc . nextInt ( ) ; long i , x = 0 ; while ( n >= 1 ) { if ( n % 2 == 1 ) { x ++ ; n -- ; } else n /= 2 ; } System . out . println ( x ) ; } }",
            "python_code": "x = int ( input ( ) ) print ( bin ( x ) . count ( '1' ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_677_A_2225",
            "java_code": "import java . util . * ; class Circular { public static int removeAlternate ( int n ) { if ( n == 1 ) return 1 ; if ( n % 2 == 0 ) return 2 * removeAlternate ( n / 2 ) - 1 ; else return 2 * removeAlternate ( ( ( n - 1 ) / 2 ) ) + 1 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( removeAlternate ( n ) ) ; n = 10 ; System . out . print ( \"\\n\" + removeAlternate ( n ) ) ; } }",
            "python_code": "def removeAlternate ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT return 2 * removeAlternate ( n / 2 ) - 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 2 * removeAlternate ( ( ( n - 1 ) / 2 ) ) + 1 NEWLINE DEDENT DEDENT n = 5 NEWLINE print ( removeAlternate ( n ) ) NEWLINE n = 10 NEWLINE print ( removeAlternate ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1186_A_2226",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; if ( m >= n & k >= n ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } }",
            "python_code": "x , y , z = map ( int , input ( ) . split ( ) ) if y >= x and z >= x : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1409_A_2227",
            "java_code": "import java . util . Scanner ;  public class yet_another_two_integer_problem {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int t = in . nextInt ( ) ; int a , b ; while ( t -- != 0 ) { a = in . nextInt ( ) ; b = in . nextInt ( ) ; System . out . println ( ( int ) Math . ceil ( ( Math . abs ( a - b ) / 10.0 ) ) ) ;  } }  }",
            "python_code": "for x in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) NEWLINE c = abs ( a - b ) NEWLINE if c % 10 == 0 : NEWLINE INDENT print ( c // 10 ) else : NEWLINE print ( ( c // 10 ) + 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_A_2228",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; long n ; for ( int i = 0 ; i < t ; i ++ ) { n = sc . nextLong ( ) ; if ( ( n & n - 1 ) == 0 ) { System . out . println ( \"NO\" ) ; } else { System . out . println ( \"YES\" ) ; } } } }",
            "python_code": "import math  NEWLINE def solve ( ) : n = int ( input ( ) ) NEWLINE INDENT pass NEWLINE DEDENT if bin ( n ) [ 2 : ] . count ( '1' ) == 1 : NEWLINE INDENT return False else : NEWLINE return True  for t in range ( int ( input ( ) ) ) : if NEWLINE DEDENT solve ( ) : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1159_A_2229",
            "java_code": "import java . util . * ; public class test { public static void main ( String [ ] args ) { int n , x = 0 ; char [ ] a ; String a1 ; Scanner input = new Scanner ( System . in ) ; n = input . nextInt ( ) ; a = new char [ n ] ; a1 = input . next ( ) ; a = a1 . toCharArray ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == '+' ) x ++ ; else if ( x - 1 >= 0 ) x -- ; } System . out . println ( x ) ; } } ",
            "python_code": "n = int ( input ( ) ) a = list ( input ( ) ) p = 0 for i in range ( len ( a ) ) : if a [ i ] == '+' : p = p + 1 n = n + 1 elif a [ i ] == '-' : p = p - 1 if p < 0 : p = 0 print ( p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5252_A_2230",
            "java_code": "public class GFG { public static int cubesum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( 2 * i ) * ( 2 * i ) * ( 2 * i ) ; return sum ; } public static void main ( String args [ ] ) { int a = 8 ; System . out . println ( cubesum ( a ) ) ; } }",
            "python_code": "def cubeSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += ( 2 * i ) * ( 2 * i ) * ( 2 * i ) NEWLINE DEDENT return sum NEWLINE DEDENT print ( cubeSum ( 8 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_408_A_2231",
            "java_code": "import java . util . * ; public class LinetoCashier {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = r ( ) ans = float ( 'inf' ) for i in range ( n ) : x = r ( ) c = sum ( x ) * 5 + 15 * len ( x ) ans = min ( ans , c )   print ( ans )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1242_A_2232",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_405_A_2233",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class cc { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) s = sorted ( a ) \"\"\" for i in sorted(a):    s += str(i) \"\"\" print ( * s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1400_A_2234",
            "java_code": "import java . util . * ; public class sol { public static void main ( String ar [ ] ) { Scanner scan = new Scanner ( System . in ) ; int test = scan . nextInt ( ) ; while ( test -- > 0 ) { int n = Integer . parseInt ( scan . next ( ) ) ; String s = scan . next ( ) . trim ( ) ; String ch = \"1\" ; if ( s . charAt ( n - 1 ) == '0' ) ch = \"0\" ; while ( n -- > 0 ) System . out . print ( ch ) ; System . out . println ( ) ; } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) s = input ( ) q = s [ n - 1 ] * n print ( q ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2818_A_2235",
            "java_code": "class GFG { static int minOperations ( String str , int n ) { int count = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( str . charAt ( i ) != str . charAt ( i + 1 ) ) count ++ ; } return ( count + 1 ) / 2 ; } public static void main ( String [ ] args ) { String str = \"000111\" ; int n = str . length ( ) ; System . out . println ( minOperations ( str , n ) ) ; } }",
            "python_code": "def minOperations ( str , n ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( n - 1 ) : NEWLINE INDENTINDENT if ( str [ i ] != str [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return ( count + 1 ) // 2 NEWLINE DEDENT str = \"000111\" NEWLINE n = len ( str ) NEWLINE print ( minOperations ( str , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1667_A_2236",
            "java_code": "class GFG { static int properDivisorSum ( int n ) { int sum = 0 ; int i ; for ( i = 1 ; i <= n ; ++ i ) sum += ( n / i ) * i ; return sum - n * ( n + 1 ) / 2 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( properDivisorSum ( n ) ) ; n = 5 ; System . out . println ( properDivisorSum ( n ) ) ; } }",
            "python_code": "def properDivisorSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += ( n // i ) * i NEWLINE DEDENT return sum - n * ( n + 1 ) // 2 NEWLINE DEDENT n = 4 NEWLINE print ( properDivisorSum ( n ) ) NEWLINE n = 5 NEWLINE print ( properDivisorSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4568_A_2237",
            "java_code": "import java . io . * ; class Solution { static int closestMultiple ( int n , int x ) { if ( x > n ) return x ; n = n + x / 2 ; n = n - ( n % x ) ; return n ; } public static void main ( String [ ] args ) { int n = 56287 , x = 27 ; System . out . println ( closestMultiple ( n , x ) ) ; } }",
            "python_code": "def closestMultiple ( n , x ) : NEWLINE INDENT if x > n : NEWLINE INDENTINDENT return x ; NEWLINE DEDENT z = ( int ) ( x / 2 ) ; NEWLINE n = n + z ; NEWLINE n = n - ( n % x ) ; NEWLINE return n ; NEWLINE DEDENT n = 56287 ; NEWLINE x = 27 ; NEWLINE print ( closestMultiple ( n , x ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_527_A_2238",
            "java_code": "import java . util . * ; ",
            "python_code": "finished = Falselado = list ( map ( int , input ( ) . split ( ) ) ) navios = 0 base = lado [ 0 ] altura = lado [ 1 ] while altura != 0 : navios += ( base // altura ) ( base , altura ) = ( altura , base % altura ) print ( navios ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_714_A_2239",
            "java_code": "import java . util . Scanner ;  public class MeetOldFriend { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; long l1 = in . nextLong ( ) , r1 = in . nextLong ( ) , l2 = in . nextLong ( ) , r2 = in . nextLong ( ) , k = in . nextLong ( ) , l = Math . max ( l1 , l2 ) , r = Math . min ( r1 , r2 ) ;  in . close ( ) ; System . out . println ( l <= r ? k >= l && k <= r ? r - l : r - l + 1 : 0 ) ; } }",
            "python_code": "if __name__ == '__main__' : l1 , r1 , l2 , r2 , k = map ( int , input ( ) . split ( ) ) if l2 > l1 : l1 = l2 if r2 < r1 : r1 = r2 print ( max ( r1 - l1 + 1 - ( l1 <= k <= r1 ) , 0 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_363_A_2240",
            "java_code": "class GFG { static boolean isPrime ( int n ) { if ( n <= 1 ) return false ; for ( int i = 2 ; i < n ; i ++ ) if ( n % i == 0 ) return false ; return true ; } public static void main ( String args [ ] ) { if ( isPrime ( 11 ) ) System . out . println ( \" true\" ) ; else System . out . println ( \" false\" ) ; if ( isPrime ( 15 ) ) System . out . println ( \" true\" ) ; else System . out . println ( \" false\" ) ; } }",
            "python_code": "def isPrime ( n ) : NEWLINE INDENT if n <= 1 : NEWLINE INDENTINDENT return False NEWLINE DEDENT for i in range ( 2 , n ) : NEWLINE INDENTINDENT if n % i == 0 : NEWLINE INDENTINDENTINDENT return False ; NEWLINE DEDENT DEDENT return True NEWLINE DEDENT print ( \"true\" ) if isPrime ( 11 ) else print ( \"false\" ) NEWLINE print ( \"true\" ) if isPrime ( 14 ) else print ( \"false\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4967_A_2241",
            "java_code": "import java . util . * ; class GFG { static int distribution ( int arr [ ] , int n ) { Set < Integer > resources = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) resources . add ( arr [ i ] ) ; return Math . min ( resources . size ( ) , n / 2 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 1 , 2 , 1 , 3 , 4 } ; int n = arr . length ; System . out . print ( distribution ( arr , n ) + \"\\n\" ) ; } }",
            "python_code": "def distribution ( arr , n ) : NEWLINE INDENT resources = set ( ) NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT resources . add ( arr [ i ] ) ; NEWLINE DEDENT return min ( len ( resources ) , n // 2 ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 1 , 1 , 2 , 1 , 3 , 4 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( distribution ( arr , n ) , \"\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1207_A_2242",
            "java_code": "class GFG { static int findMod4 ( String s , int n ) { int k ; if ( n == 1 ) k = s . charAt ( 0 ) - '0' ; else k = ( s . charAt ( n - 2 ) - '0' ) * 10 + s . charAt ( n - 1 ) - '0' ; return ( k % 4 ) ; } public static void main ( String [ ] args ) { String s = \"81\" ; int n = s . length ( ) ; System . out . println ( findMod4 ( s , n ) ) ; } }",
            "python_code": "def findMod4 ( s , n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT k = ord ( s [ 0 ] ) - ord ( '0' ) NEWLINE DEDENT else : NEWLINE INDENTINDENT k = ( ( ord ( s [ n - 2 ] ) - ord ( '0' ) ) * 10 + ord ( s [ n - 1 ] ) - ord ( '0' ) ) NEWLINE DEDENT return ( k % 4 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT s = \"81\" NEWLINE n = len ( s ) NEWLINE print ( findMod4 ( s , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p028_A_2243",
            "java_code": "public final class p028 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p028 ( ) . run ( ) ) ; } private static final int SIZE = 1001 ; public String run ( ) { long sum = 1 ; for ( int n = 3 ; n <= SIZE ; n += 2 ) sum += 4 * n * n - 6 * ( n - 1 ) ; return Long . toString ( sum ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT SIZE = 1001 NEWLINE ans = 1 NEWLINE ans += sum ( 4 * i * i - 6 * ( i - 1 ) for i in range ( 3 , SIZE + 1 , 2 ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2447_A_2244",
            "java_code": "class GFG { static byte sizeofInt = 8 ; static int countZeros ( int x ) { int total_bits = sizeofInt * 8 ; int res = 0 ; while ( ( x & ( 1 << ( total_bits - 1 ) ) ) == 0 ) { x = ( x << 1 ) ; res ++ ; } return res ; } public static void main ( String [ ] args ) { int x = 101 ; System . out . println ( countZeros ( x ) ) ; } }",
            "python_code": "def countZeros ( x ) : NEWLINE INDENT total_bits = 32 NEWLINE res = 0 NEWLINE while ( ( x & ( 1 << ( total_bits - 1 ) ) ) == 0 ) : NEWLINE INDENTINDENT x = ( x << 1 ) NEWLINE res += 1 NEWLINE DEDENT return res NEWLINE DEDENT x = 101 NEWLINE print ( countZeros ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4736_A_2245",
            "java_code": "class GFG { static int countBits ( int n ) { int count = 0 ; while ( n != 0 ) { count ++ ; n >>= 1 ; } return count ; } public static void main ( String [ ] arg ) { int i = 65 ; System . out . print ( countBits ( i ) ) ; } }",
            "python_code": "def countBits ( n ) : NEWLINE INDENT count = 0 NEWLINE while ( n ) : NEWLINE INDENTINDENT count += 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT i = 65 NEWLINE print ( countBits ( i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1849_A_2246",
            "java_code": "import java . util . * ; class GFG { static int invertBits ( int n ) { int x = ( int ) ( Math . log ( n ) / Math . log ( 2 ) ) ; int m = 1 << x ; m = m | m - 1 ; n = n ^ m ; return n ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . print ( invertBits ( n ) ) ; } }",
            "python_code": "import math NEWLINE def invertBits ( n ) : NEWLINE INDENT x = int ( math . log ( n , 2 ) ) NEWLINE m = 1 << x NEWLINE m = m | m - 1 NEWLINE n = n ^ m NEWLINE return n NEWLINE DEDENT n = 20 NEWLINE print ( invertBits ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1121_B_2247",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) ; k = 2 * ( 10 ** 5 + 1 ) dp = [ 0 ] * kfor i in range ( n ) : for j in range ( n ) : if i != j : dp [ arr [ i ] + arr [ j ] ] += 1 print ( max ( dp ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1285_A_2248",
            "java_code": "import java . util . * ;  public class JavaApplication6 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String s = new String ( ) ; int m ; m = in . nextInt ( ) ; s = in . next ( ) ; System . out . println ( ( int ) ( s . length ( ) + 1 ) ) ; } }",
            "python_code": "import redef post ( n , x ) : a = len ( re . findall ( 'L' , x ) ) b = len ( re . findall ( 'R' , x ) ) return a + b + 1 t = int ( input ( ) ) y = input ( ) r = post ( t , y ) print ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3101_A_2249",
            "java_code": "class GFG { public static int numLen ( int K ) { if ( K % 2 == 0 || K % 5 == 0 ) return - 1 ; int number = 0 ; int len = 1 ; for ( len = 1 ; len <= K ; len ++ ) { number = ( number * 10 + 1 ) % K ; if ( number == 0 ) return len ; } return - 1 ; } public static void main ( String [ ] args ) { int K = 7 ; System . out . print ( numLen ( K ) ) ; } }",
            "python_code": "def numLen ( K ) : NEWLINE INDENT if ( K % 2 == 0 or K % 5 == 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT number = 0 NEWLINE len = 1 NEWLINE for len in range ( 1 , K + 1 ) : NEWLINE INDENTINDENT number = ( number * 10 + 1 ) % K NEWLINE if number == 0 : NEWLINE INDENTINDENTINDENT return len NEWLINE DEDENT DEDENT return - 1 NEWLINE DEDENT K = 7 NEWLINE print ( numLen ( K ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_347_B_2250",
            "java_code": "import java . util . * ;  public class CF10 { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ' ' ) ) ) c = 0 for i in range ( n ) : if i == a [ i ] : c += 1 if c == n : print ( n ) else : for i in range ( n ) : if i != a [ i ] and a [ a [ i ] ] == i : print ( c + 2 ) break else : print ( c + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_7_A_2251",
            "java_code": " import java . util . Arrays ; import java . util . Scanner ;  public class MainTest {  public static void main ( String [ ] args ) {",
            "python_code": "s , ans , met = \"\" , 0 , Falsefor i in range ( 8 ) : s = input ( ) if s == \"BBBBBBBB\" : ans += 1 elif not met : ans += s . count ( 'B' ) met = True  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_670_B_2252",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( 1 , n + 1 ) : if k > i : k -= i else : breakprint ( a [ k - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_756_A_2253",
            "java_code": "class GFG { static int maxAbsDiff ( int arr [ ] , int n ) { int minEle = arr [ 0 ] ; int maxEle = arr [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { minEle = Math . min ( minEle , arr [ i ] ) ; maxEle = Math . max ( maxEle , arr [ i ] ) ; } return ( maxEle - minEle ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 2 , 1 , 5 , 3 } ; int n = arr . length ; System . out . print ( maxAbsDiff ( arr , n ) ) ; } }",
            "python_code": "def maxAbsDiff ( arr , n ) : NEWLINE INDENT minEle = arr [ 0 ] NEWLINE maxEle = arr [ 0 ] NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT minEle = min ( minEle , arr [ i ] ) NEWLINE maxEle = max ( maxEle , arr [ i ] ) NEWLINE DEDENT return ( maxEle - minEle ) NEWLINE DEDENT arr = [ 2 , 1 , 5 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( maxAbsDiff ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1265_B_2254",
            "java_code": "import java . io . * ; import java . util . * ; import java . util . concurrent . ConcurrentHashMap ; ",
            "python_code": "import sysimport mathfrom collections import defaultdict , Counter , deque  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_766_A_2255",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ;  String a = input . next ( ) ; String b = input . next ( ) ; if ( a . equals ( b ) ) System . out . println ( - 1 ) ; else { System . out . println ( Math . max ( a . length ( ) , b . length ( ) ) ) ; }                           } }",
            "python_code": "a = input ( ) b = input ( ) len_a = len ( a ) len_b = len ( b ) if len_a != len_b : print ( max ( len_a , len_b ) ) elif a == b : print ( - 1 ) else : print ( len_a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1383_A_2256",
            "java_code": "public class Main { static int countWays ( int n ) { int count = 0 ; for ( int i = 1 ; i * i < n ; i ++ ) if ( n % i == 0 ) count ++ ; return count ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( countWays ( n ) ) ; } }",
            "python_code": "def countWays ( n ) : NEWLINE INDENT count = 0 NEWLINE i = 1 NEWLINE while ( ( i * i ) < n ) : NEWLINE INDENTINDENT if ( n % i == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT i += 1 NEWLINE DEDENT return count NEWLINE DEDENT n = 12 NEWLINE print ( countWays ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2978_A_2257",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int largest ( int [ ] arr , int n ) { Arrays . sort ( arr ) ; return arr [ n - 1 ] ; } static public void main ( String [ ] args ) { int [ ] arr = { 10 , 324 , 45 , 90 , 9808 } ; int n = arr . length ; System . out . println ( largest ( arr , n ) ) ; } }",
            "python_code": "def largest ( arr , n ) : NEWLINE INDENT return max ( arr ) NEWLINE DEDENT arr = [ 10 , 324 , 45 , 90 , 9808 ] NEWLINE n = len ( arr ) NEWLINE print ( largest ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_163_A_2258",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "s = input ( ) . strip ( ) t = input ( ) . strip ( )  n , m = len ( s ) , len ( t ) mod = 10 ** 9 + 7  dp12 = [ [ 0 for i in range ( m ) ] for j in range ( n ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1091_A_2259",
            "java_code": "import java . util . Scanner ;  public class Ornament { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int y = in . nextInt ( ) , b = in . nextInt ( ) - 1 , r = in . nextInt ( ) - 2 ;  in . close ( ) ; System . out . println ( 3 * Math . min ( Math . min ( y , b ) , r ) + 3 ) ; } }",
            "python_code": "y , b , r = map ( int , input ( ) . split ( ) ) y = y + 2 b = b + 1 r = r + 0 min = min ( y , b , r ) sum = ( min * 3 ) - 3 print ( sum ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_717_B_2260",
            "java_code": "import java . awt . * ; import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . * ; import java . util . List ;  import static java . lang . Math . max ; import static java . lang . Math . min ;   public class B implements Runnable {  private final static Random rnd = new Random ( ) ; ",
            "python_code": "import sys , heapq NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_849_A_2261",
            "java_code": " import java . io . * ; import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } if ( arr [ 0 ] % 2 != 0 && arr [ n - 1 ] % 2 != 0 && arr . length % 2 != 0 ) { System . out . println ( \"Yes\" ) ; } else { System . out . println ( \"No\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) g = list ( map ( int , input ( ) . split ( ) ) )  if len ( g ) % 2 == 1 and g [ 0 ] % 2 == 1 and g [ - 1 ] % 2 == 1 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_295_A_2262",
            "java_code": "static void printSeqRecur ( int num , int pos , int k , int n ) { if ( pos == k ) { System . out . print ( num + \" \" ) ; return ; } for ( int i = 1 ; i <= n ; i ++ ) { printSeqRecur ( num * 10 + i , pos + 1 , k , n ) ; } } static void printSequences ( int k , int n ) { printSeqRecur ( 0 , 0 , k , n ) ; }",
            "python_code": "def printSeqRecur ( num , n , k ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT print ( num ) NEWLINE return NEWLINE DEDENT for _ in range ( 1 , k + 1 ) : NEWLINE INDENTINDENT printSeqRecur ( num * 10 + _ , n - 1 , k ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT k = 3 NEWLINE n = 2 NEWLINE printSeqRecur ( 0 , n , k ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_322_A_2263",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ;  public class A322 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) print ( n + m - 1 ) for i in range ( 1 , m + 1 ) : print ( 1 , i ) for j in range ( 2 , n + 1 ) : print ( j , 1 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2512_A_2264",
            "java_code": "class GFG { static void makearrayequal ( int arr [ ] , int n ) { int x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { x += ( arr [ i ] & 1 ) ; } System . out . println ( Math . min ( x , n - x ) ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 3 , 2 , 1 } ; int n = arr . length ; makearrayequal ( arr , n ) ; } }",
            "python_code": "def makearrayequal ( arr , n ) : NEWLINE INDENT x = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT x += arr [ i ] & 1 ; NEWLINE DEDENT print ( min ( x , n - x ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 4 , 3 , 2 , 1 ] ; NEWLINE n = len ( arr ) ; NEWLINE makearrayequal ( arr , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_204_B_2265",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { FastScanner in = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; new Main ( ) . run ( in , out ) ; out . close ( ) ; }  void run ( FastScanner in , PrintWriter out ) { ",
            "python_code": "\"\"\"    Author - Satwik Tiwari .    20th Oct , 2020  - Tuesday\"\"\"  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_678_A_2266",
            "java_code": " import java . math . * ; import java . util . * ; import java . io . * ; public class er105b {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) x = n % mif ( x == 0 ) : print ( n + m ) else : print ( n + ( m - x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5051_A_2267",
            "java_code": "class GFG { static int find_k ( int a , int b ) { if ( ( a + b ) % 2 == 0 ) return ( ( a + b ) / 2 ) ; return - 1 ; } public static void main ( String [ ] args ) { int a = 2 , b = 16 ; System . out . println ( find_k ( a , b ) ) ; } }",
            "python_code": "def find_k ( a , b ) : NEWLINE INDENT if ( ( a + b ) % 2 == 0 ) : NEWLINE INDENTINDENT return ( ( a + b ) // 2 ) ; NEWLINE DEDENT return - 1 ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 2 ; b = 16 ; NEWLINE print ( find_k ( a , b ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_961_A_2268",
            "java_code": "import java . util . Scanner ;  public class Tetris { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , m = in . nextInt ( ) , i , a [ ] = new int [ n ] , o = 1000 ; for ( i = 0 ; i < m ; i ++ ) a [ in . nextInt ( ) - 1 ] ++ ;  in . close ( ) ; for ( i = 0 ; i < n ; i ++ ) o = Math . min ( o , a [ i ] ) ; System . out . println ( o ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) count = [ 0 ] * na = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( m ) : count [ a [ i ] - 1 ] += 1 print ( min ( count ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_472_A_2269",
            "java_code": "import java . io . * ; import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int res = 0 ; if ( n % 2 == 0 ) { res = n - 4 ; System . out . println ( 4 + \" \" + res ) ; } else { res = n - 9 ; System . out . println ( 9 + \" \" + res ) ; } } }",
            "python_code": "n = int ( input ( ) ) for i in range ( 4 , n - 3 ) : if i % 2 == 0 and ( ( n - i ) % 3 == 0 or ( n - i % 2 == 0 ) ) : a = i b = n - i breakprint ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1613_A_2270",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += i * ( n - i ) ; return 2 * sum ; } static public void main ( String [ ] args ) { int n = 3 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += i * ( n - i ) NEWLINE DEDENT return 2 * sum NEWLINE DEDENT n = 3 NEWLINE print ( findSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_898_A_2271",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int num = sc . nextInt ( ) ; if ( num % 10 <= 5 ) num -= num % 10 ; else num += 10 - num % 10 ; System . out . println ( num ) ; } }",
            "python_code": "n = int ( input ( ) ) num_to_rem = n % 10 if num_to_rem >= 5 : print ( n - num_to_rem + 10 ) else : print ( n - num_to_rem ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_430_A_2272",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "from sys import stdin , stdoutnmbr = lambda : int ( stdin . readline ( ) ) lst = lambda : list ( map ( int , stdin . readline ( ) . split ( ) ) ) for _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2790_A_2273",
            "java_code": "class GFG { static int floorSqrt ( int x ) { if ( x == 0 || x == 1 ) return x ; int i = 1 , result = 1 ; while ( result <= x ) { i ++ ; result = i * i ; } return i - 1 ; } public static void main ( String [ ] args ) { int x = 11 ; System . out . print ( floorSqrt ( x ) ) ; } }",
            "python_code": "def floorSqrt ( x ) : NEWLINE INDENT if ( x == 0 or x == 1 ) : NEWLINE INDENTINDENT return x NEWLINE DEDENT i = 1 ; result = 1 NEWLINE while ( result <= x ) : NEWLINE INDENTINDENT i += 1 NEWLINE result = i * i NEWLINE DEDENT return i - 1 NEWLINE DEDENT x = 11 NEWLINE print ( floorSqrt ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4413_A_2274",
            "java_code": "import java . io . * ; class GFG { static int summation ( int n ) { int sum ; sum = ( int ) ( Math . pow ( 10 , n + 1 ) - 10 - ( 9 * n ) ) / 81 ; return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( summation ( n ) ) ; } }",
            "python_code": "import math NEWLINE def summation ( n ) : NEWLINE INDENT return int ( ( pow ( 10 , n + 1 ) - 10 - ( 9 * n ) ) / 81 ) ; NEWLINE DEDENT print ( summation ( 5 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_987_A_2275",
            "java_code": "import java . util . * ;   public class l700 {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) l = [ ] d = { \"purple\" : \"Power \" , \"green\" : \"Time \" , \"blue\" : \"Space \" , \"orange\" : \"Soul \" , \"red\" : \" Reality\" , \"yellow\" : \" Mind \" } for i in range ( t ) : s = input ( ) l . append ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_836_A_2276",
            "java_code": "class Solution { public boolean isRectangleOverlap ( int [ ] rec1 , int [ ] rec2 ) { return ( Math . min ( rec1 [ 2 ] , rec2 [ 2 ] ) > Math . max ( rec1 [ 0 ] , rec2 [ 0 ] ) && Math . min ( rec1 [ 3 ] , rec2 [ 3 ] ) > Math . max ( rec1 [ 1 ] , rec2 [ 1 ] ) ) ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def isRectangleOverlap ( self , rec1 , rec2 ) : NEWLINE INDENTINDENT return not ( rec1 [ 2 ] <= rec2 [ 0 ] or rec1 [ 3 ] <= rec2 [ 1 ] or rec1 [ 0 ] >= rec2 [ 2 ] or rec1 [ 1 ] >= rec2 [ 3 ] ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1092_B_2277",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ;  Arrays . sort ( a ) ; int problems = 0 ; for ( int i = n - 1 ; i > 0 ; i -= 2 ) { problems += a [ i ] - a [ i - 1 ] ; } System . out . println ( problems ) ; } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) c = 0 for i in range ( 1 , n , 2 ) : if a [ i - 1 ] != a [ i ] : c += ( a [ i ] - a [ i - 1 ] ) print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4011_A_2278",
            "java_code": "import java . io . * ; class GFG { static void printSquares ( int n ) { int square = 0 , odd = 1 ; for ( int x = 0 ; x < n ; x ++ ) { System . out . print ( square + \" \" ) ; square = square + odd ; odd = odd + 2 ; } } public static void main ( String [ ] args ) { int n = 5 ; printSquares ( n ) ; } }",
            "python_code": "def printSquares ( n ) : NEWLINE INDENT square = 0 NEWLINE odd = 1 NEWLINE for x in range ( 0 , n ) : NEWLINE INDENTINDENT print ( square , end = \" \" ) NEWLINE square = square + odd NEWLINE odd = odd + 2 NEWLINE DEDENT DEDENT n = 5 ; NEWLINE printSquares ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2461_A_2279",
            "java_code": "import java . io . * ; class GFG { static float squarearea ( float a , float b ) { if ( a < 0 || b < 0 ) return - 1 ; float area = 4 * ( float ) ( ( Math . pow ( a , 2 ) + Math . pow ( b , 2 ) ) / ( Math . pow ( a , 2 ) * Math . pow ( b , 2 ) ) ) ; return area ; } public static void main ( String [ ] args ) { float a = 4 , b = 2 ; System . out . println ( squarearea ( a , b ) ) ; } }",
            "python_code": "def squarearea ( a , b ) : NEWLINE INDENT if ( a < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = 4 * ( ( ( pow ( a , 2 ) + pow ( b , 2 ) ) / ( pow ( a , 2 ) * pow ( b , 2 ) ) ) ) NEWLINE return area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 4 NEWLINE b = 2 NEWLINE print ( squarearea ( a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1415_A_2280",
            "java_code": "import java . util . * ; public class Test { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; while ( t -- > 0 ) { int n = input . nextInt ( ) ; int m = input . nextInt ( ) ; int r = input . nextInt ( ) ; int c = input . nextInt ( ) ;  System . out . println ( Math . max ( ( r - 1 ) , ( n - r ) ) + Math . max ( ( c - 1 ) , ( m - c ) ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m , r , c = map ( int , input ( ) . split ( ) ) NEWLINE print ( max ( r - 1 , n - r ) + max ( c - 1 , m - c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_103_A_2281",
            "java_code": "import java . util . Scanner ;  public class CodeForces2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextInt ( ) ; long q , sum = 0 ; for ( long i = 1 ; i <= n ; i ++ ) { q = sc . nextInt ( ) ; sum += ( i * q ) - ( i - 1 ) ; } System . out . println ( sum ) ; } }",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) m = 0 for i in range ( len ( l ) ) : if l [ i ] > 1 : m += ( l [ i ] * ( i + 1 ) ) - i else : m += 1 print ( m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_124_A_2282",
            "java_code": "import java . util . * ;  public class Solve {  static Scanner scan = new Scanner ( System . in ) ;  public static void solve ( int n , int a , int b ) {  System . out . println ( Math . min ( ( n - a ) , ( b + 1 ) ) ) ; }  public static void main ( String [ ] args ) {  int n = scan . nextInt ( ) ; int a = scan . nextInt ( ) ; int b = scan . nextInt ( ) ;  solve ( n , a , b ) ; } }",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) itog = 0 for i in range ( 1 , n + 1 ) : if i - 1 >= a and n - i <= b : itog += 1 print ( itog ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1445_B_2283",
            "java_code": "import java . util . Scanner ;  public class problem79 {  public static void main ( String [ ] args ) {",
            "python_code": "for t in range ( int ( input ( ) ) ) : a , b , c , d = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE print ( max ( a + b , c + d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1257_B_2284",
            "java_code": " import java . util . * ;   public class Practise { ",
            "python_code": "ll = lambda : map ( int , input ( ) . split ( ) ) t = lambda : int ( input ( ) ) ss = lambda : input ( ) lx = lambda x : map ( int , input ( ) . split ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4581_A_2285",
            "java_code": "class GFG { static int totEdge ( int n ) { int result = 0 ; result = ( n * ( n - 1 ) ) / 2 ; return result ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( totEdge ( n ) ) ; } }",
            "python_code": "def totEdge ( n ) : NEWLINE INDENT result = ( n * ( n - 1 ) ) // 2 NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 6 NEWLINE print ( totEdge ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_160_A_2286",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "import math  def solve ( ) : n = int ( input ( ) ) array = [ int ( i ) for i in input ( ) . split ( ) ] sum1 , sum2 = 0 , 0  for i in array : sum1 += i  i , count = n - 1 , n array . sort ( reverse = True )  while sum1 > sum2 : sum1 -= array [ i ] sum2 += array [ i ] i -= 1 count -= 1  return count + 1    print ( solve ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_810_A_2287",
            "java_code": "import java . util . * ;  public class Absolutezero {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int sum = 0 ; List < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int n1 = sc . nextInt ( ) ; list . add ( n1 ) ; sum += n1 ; } int u1 = ( int ) Math . round ( ( double ) sum / n ) ;",
            "python_code": "import sys  n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) c = 0 sum_ = sum ( a ) len_ = len ( a ) while sum_ / len_ < k - 0.5 : sum_ += k len_ += 1 c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_168_A_2288",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int needed = ( n * y ) / 100 ; if ( ( n * y ) % 100 != 0 ) needed ++ ; if ( needed - w < 0 ) System . out . println ( 0 ) ; else System . out . println ( needed - w ) ; } }",
            "python_code": "import mathn , x , y = map ( int , input ( ) . split ( ) ) v = ( math . ceil ( ( y * n ) / 100 ) ) print ( v - x ) if v - x > 0 else print ( '0' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_710_B_2289",
            "java_code": "import java . util . * ;  public class CodeForces710B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; Integer [ ] a = new Integer [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = input . nextInt ( ) ; }  Arrays . sort ( a ) ; System . out . println ( n % 2 == 0 ? a [ n / 2 - 1 ] : a [ n / 2 ] ) ;  } }",
            "python_code": "n = int ( input ( ) ) ar = list ( map ( int , input ( ) . split ( ) ) ) ar = sorted ( ar ) print ( ar [ ( n + 1 ) // 2 - 1 ] )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1416_A_2290",
            "java_code": "import java . util . * ; public class KamazingNumbers {  public static void main ( String [ ] args ) {",
            "python_code": "from sys import stdin , stdout  outputs = [ ] NEWLINE t = int ( stdin . readline ( ) . strip ( ) ) NEWLINE for __ in range ( t ) : n = int ( stdin . readline ( ) . strip ( ) ) NEWLINE res = [ n + 2 ] * n NEWLINE arr = [ int ( num ) for num in stdin . readline ( ) . strip ( ) . split ( ) ] NEWLINE req = [ [ - 1 , - 1 , - 1 ] for i in range ( n + 1 ) ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2224_A_2291",
            "java_code": "class GFG { public static int countDigits ( int a , int b ) { if ( a == 0 || b == 0 ) return 1 ; return ( int ) Math . floor ( Math . log10 ( Math . abs ( a ) ) + Math . log10 ( Math . abs ( b ) ) ) + 1 ; } public static void main ( String [ ] args ) { int a = 33 ; int b = - 24 ; System . out . print ( countDigits ( a , b ) ) ; } }",
            "python_code": "import math NEWLINE def countDigits ( a , b ) : NEWLINE INDENT if ( a == 0 or b == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return math . floor ( math . log10 ( abs ( a ) ) + math . log10 ( abs ( b ) ) ) + 1 NEWLINE DEDENT a = 33 NEWLINE b = - 24 NEWLINE print ( countDigits ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p004_A_2292",
            "java_code": "public final class p004 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p004 ( ) . run ( ) ) ; } public String run ( ) { int maxPalin = - 1 ; for ( int i = 100 ; i < 1000 ; i ++ ) { for ( int j = 100 ; j < 1000 ; j ++ ) { int prod = i * j ; if ( Library . isPalindrome ( prod ) && prod > maxPalin ) maxPalin = prod ; } } return Integer . toString ( maxPalin ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT ans = max ( i * j for i in range ( 100 , 1000 ) for j in range ( 100 , 1000 ) if str ( i * j ) == str ( i * j ) [ : : - 1 ] ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1408_A_2293",
            "java_code": "import java . util . * ; class GFG { static int sumPairs ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { sum += ( arr [ i ] + arr [ j ] ) ; } } return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( sumPairs ( arr , n ) ) ; } }",
            "python_code": "def summPairs ( arr , n ) : NEWLINE INDENT summ = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( n ) : NEWLINE INDENTINDENTINDENT summ += ( arr [ i ] + arr [ j ] ) NEWLINE DEDENT DEDENT return summ NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( summPairs ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2435_A_2294",
            "java_code": "import java . io . * ; class GFG { static int countDivisibles ( int A , int B , int M ) { if ( A % M == 0 ) return ( B / M ) - ( A / M ) + 1 ; return ( B / M ) - ( A / M ) ; } public static void main ( String [ ] args ) { int A = 30 , B = 100 , M = 30 ; System . out . println ( countDivisibles ( A , B , M ) ) ; } }",
            "python_code": "def countDivisibles ( A , B , M ) : NEWLINE INDENT if ( A % M == 0 ) : NEWLINE INDENTINDENT return ( ( B / M ) - ( A / M ) ) + 1 NEWLINE DEDENT return ( ( B / M ) - ( A / M ) ) NEWLINE DEDENT A = 30 NEWLINE B = 70 NEWLINE M = 10 NEWLINE print ( countDivisibles ( A , B , M ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_306_A_2295",
            "java_code": "import java . util . * ; public class Sol { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) , m = s . nextInt ( ) , t = m ; for ( int i = 0 ; i < t ; i ++ ) { System . out . print ( n / m + \" \" ) ; n -= n / m ; -- m ; } } }",
            "python_code": "n , m = list ( map ( int , input ( ) . split ( ) ) ) print ( * ( [ n // m ] * ( m - n % m ) + [ n // m + 1 ] * ( n % m ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4485_A_2296",
            "java_code": "import java . io . * ; class GFG { static float findArea ( float a ) { float area ; area = ( float ) ( Math . sqrt ( 5 * ( 5 + 2 * ( Math . sqrt ( 5 ) ) ) ) * a * a ) / 4 ; return area ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( \"Area of Pentagon: \" + findArea ( a ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def findArea ( a ) : NEWLINE INDENT area = ( sqrt ( 5 * ( 5 + 2 * ( sqrt ( 5 ) ) ) ) * a * a ) / 4 NEWLINE return area NEWLINE DEDENT a = 5 NEWLINE print ( \"Area of Pentagon: \" , findArea ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_579_A_2297",
            "java_code": "import java . util . * ;  public class Solve {  static Scanner scan = new Scanner ( System . in ) ;   public static void solve ( int a ) {  System . out . println ( Integer . bitCount ( a ) ) ; }  public static void main ( String [ ] args ) {  int a = scan . nextInt ( ) ;  solve ( a ) ;  } }",
            "python_code": "n = int ( input ( ) ) a = \"{0:b}\" . format ( n ) . count ( '1' ) print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1672_A_2298",
            "java_code": "import java . io . * ; class GFG { static long fifthPowerSum ( int n ) { long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum = sum + ( i * i * i * i * i ) ; return sum ; } public static void main ( String args [ ] ) { int n = 6 ; System . out . println ( fifthPowerSum ( n ) ) ; } }",
            "python_code": "def fifthPowerSum ( n ) : NEWLINE INDENT sm = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sm = sm + ( i * i * i * i * i ) NEWLINE DEDENT return sm NEWLINE DEDENT n = 6 NEWLINE print ( fifthPowerSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_854_A_2299",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; boolean flag = false ; int res1 = 0 ; int res2 = 0 ; for ( int i = 2 ; i <= n / 2 ; i ++ ) { if ( factors ( i , n - i ) ) { flag = true ; res1 = i ; res2 = n - i ; } } if ( ! flag ) pw . println ( 1 + \" \" + ( n - 1 ) ) ; else pw . println ( res1 + \" \" + res2 ) ;",
            "python_code": "import sys  def main ( ) : n = int ( sys . stdin . read ( ) . strip ( ) ) t = n // 2 if n % 2 : return t , t + 1 return t - 1 - t % 2 , t + 1 + t % 2 print ( * main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_302_A_2300",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) n , m = I ( ) arr = I ( ) one , m_one = 0 , 0 for i in arr : if i == - 1 : m_one += 1 else : one += 1 arr = [ ] for i in range ( m ) : l , r = I ( ) temp = r - l + 1 if temp % 2 == 0 and one >= temp // 2 and m_one >= temp // 2 : arr . append ( 1 ) else : arr . append ( 0 ) print ( * arr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_221_B_2301",
            "java_code": "import javax . swing . plaf . IconUIResource ; import java . io . * ; import java . lang . ref . SoftReference ; import java . math . BigInteger ; import java . nio . file . LinkOption ; import java . util . * ;",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3140_A_2302",
            "java_code": "class CkeckSorted { static int arraySortedOrNot ( int arr [ ] , int n ) { if ( n == 1 || n == 0 ) return 1 ; if ( arr [ n - 1 ] < arr [ n - 2 ] ) return 0 ; return arraySortedOrNot ( arr , n - 1 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 20 , 23 , 23 , 45 , 78 , 88 } ; int n = arr . length ; if ( arraySortedOrNot ( arr , n ) != 0 ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def arraySortedOrNot ( arr ) : NEWLINE INDENT n = len ( arr ) NEWLINE if n == 1 or n == 0 : NEWLINE INDENTINDENT return True NEWLINE DEDENT return arr [ 0 ] <= arr [ 1 ] and arraySortedOrNot ( arr [ 1 : ] ) NEWLINE DEDENT arr = [ 20 , 23 , 23 , 45 , 78 , 88 ] NEWLINE if arraySortedOrNot ( arr ) : print ( \"Yes\" ) NEWLINE else : print ( \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1852_A_2303",
            "java_code": "class GFG { static boolean isAMultipleOf4 ( int n ) { if ( ( n & 3 ) == 0 ) return true ; return false ; } public static void main ( String [ ] args ) { int n = 16 ; System . out . println ( isAMultipleOf4 ( n ) ? \"Yes\" : \"No\" ) ; } }",
            "python_code": "def isAMultipleOf4 ( n ) : NEWLINE INDENT if ( ( n & 3 ) == 0 ) : NEWLINE INDENTINDENT return \"Yes\" NEWLINE DEDENT return \"No\" NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 16 NEWLINE print ( isAMultipleOf4 ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_37_A_2304",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "n = int ( input ( ) ) m = list ( map ( int , input ( ) . split ( ) ) ) high = 0 x = [ ] for i in range ( n ) : if m [ i ] not in x : x . append ( m [ i ] ) if m . count ( m [ i ] ) > high : high = m . count ( m [ i ] ) print ( high , len ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5233_A_2305",
            "java_code": "class GFG { static int sum ( int m , int n ) { return 8 * m * n - 6 * m - 6 * n + 4 ; } public static void main ( String [ ] args ) { int m = 3 , n = 2 ; System . out . println ( sum ( m , n ) ) ; } }",
            "python_code": "def summ ( m , n ) : NEWLINE INDENT return 8 * m * n - 6 * m - 6 * n + 4 NEWLINE DEDENT m = 3 NEWLINE n = 2 NEWLINE print ( summ ( m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4780_A_2306",
            "java_code": "import java . io . * ; class TurnOff { static int turnOffK ( int n , int k ) { if ( k <= 0 ) return n ; return ( n & ~ ( 1 << ( k - 1 ) ) ) ; } public static void main ( String [ ] args ) { int n = 15 ; int k = 4 ; System . out . println ( turnOffK ( n , k ) ) ; } }",
            "python_code": "def turnOffK ( n , k ) : NEWLINE INDENT if ( k <= 0 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT return ( n & ~ ( 1 << ( k - 1 ) ) ) NEWLINE DEDENT n = 15 NEWLINE k = 4 NEWLINE print ( turnOffK ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3865_A_2307",
            "java_code": "class GFG { public boolean Check_is_possible ( int l , int r , int k ) { int count = 0 ; for ( int i = l ; i <= r ; i ++ ) { if ( i % k == 0 ) { count ++ ; } } return ( count > 1 ) ; } public static void main ( String [ ] args ) { GFG g = new GFG ( ) ; int l = 4 , r = 12 ; int k = 5 ; if ( g . Check_is_possible ( l , r , k ) ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "def Check_is_possible ( l , r , k ) : NEWLINE INDENT count = 0 ; NEWLINE for i in range ( l , r + 1 ) : NEWLINE INDENTINDENT if ( i % k == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 ; NEWLINE DEDENT DEDENT return ( count > 1 ) ; NEWLINE DEDENT l = 4 ; NEWLINE r = 12 ; NEWLINE k = 5 ; NEWLINE if ( Check_is_possible ( l , r , k ) ) : NEWLINE INDENT print ( \"YES\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_206_A_2308",
            "java_code": "class Solution { public ListNode reverseList ( ListNode head ) { ListNode newHead = null ; while ( head != null ) { ListNode next = head . next ; head . next = newHead ; newHead = head ; head = next ; } return newHead ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def reverseList ( self , head ) : NEWLINE INDENTINDENT if head is None or head . next is None : NEWLINE INDENTINDENTINDENT return head NEWLINE DEDENT p = self . reverseList ( head . next ) NEWLINE head . next . next = head NEWLINE head . next = None NEWLINE return p NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3798_A_2309",
            "java_code": "class GfG { static int findMinSum ( int arr [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += arr [ i ] * ( n - i ) ; return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 5 , 7 , 8 } ; int n = arr . length ; System . out . println ( findMinSum ( arr , n ) ) ; } }",
            "python_code": "def findMinSum ( arr , n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT sum += arr [ i ] * ( n - i ) NEWLINE DEDENT return sum NEWLINE DEDENT arr = [ 3 , 5 , 7 , 8 ] NEWLINE n = len ( arr ) NEWLINE print ( findMinSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1436_B_2310",
            "java_code": "import java . util . Scanner ;  public class B1436 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { int N = in . nextInt ( ) ;",
            "python_code": "for i in range ( int ( input ( ) ) ) : num = int ( input ( ) ) NEWLINE a = [ 0 for j in range ( num - 2 ) ] NEWLINE a . append ( 1 ) NEWLINE a . append ( 4 ) NEWLINE for k in range ( num ) : print ( * a ) NEWLINE a . append ( a [ 0 ] ) NEWLINE a . pop ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1428_B_2311",
            "java_code": "import java . util . * ; public class BeltedRooms {  public static void main ( String [ ] args ) {",
            "python_code": "from collections import defaultdict  for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE s = input ( )  d = \".\" NEWLINE ok = True NEWLINE result = 0 NEWLINE for i in range ( n ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_570_A_2312",
            "java_code": "import java . io . * ; class GFG { static double getProbability ( double p , double q ) { p /= 100 ; q /= 100 ; double probability = ( p * p + q * q ) / ( p + q ) ; return probability ; } public static void main ( String [ ] args ) { double p , q ; p = 80 ; q = 40 ; System . out . println ( getProbability ( p , q ) ) ; } }",
            "python_code": "def getProbability ( p , q ) : NEWLINE INDENT p /= 100 NEWLINE q /= 100 NEWLINE probability = ( p * p + q * q ) / ( p + q ) NEWLINE return probability NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT p = 80 NEWLINE q = 40 NEWLINE print ( getProbability ( p , q ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_110_A_2313",
            "java_code": "import java . util . * ;  public class Q4 {  public static void main ( String [ ] args ) {",
            "python_code": "print ( \"NYOE S\" [ sum ( i in '47' for i in input ( ) ) in ( 4 , 7 ) : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_387_A_2314",
            "java_code": "import java . util . * ;  public class Absolutezero { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; String t = sc . next ( ) ; String [ ] s1 = s . split ( \":\" ) ; String [ ] t1 = t . split ( \":\" ) ; int h1 = Integer . parseInt ( s1 [ 0 ] ) ; int m1 = Integer . parseInt ( s1 [ 1 ] ) ;  int h2 = Integer . parseInt ( t1 [ 0 ] ) ; int m2 = Integer . parseInt ( t1 [ 1 ] ) ; ",
            "python_code": "a = input ( ) . split ( ':' ) b = input ( ) . split ( ':' )    x = int ( a [ 0 ] ) * 60 + int ( a [ 1 ] ) y = int ( b [ 0 ] ) * 60 + int ( b [ 1 ] )   if y > x : x = ( ( int ( a [ 0 ] ) + 24 ) * 60 ) + int ( a [ 1 ] )   z = x - y  hr = str ( z // 60 ) . rjust ( 2 , '0' ) z %= 60 mi = str ( z ) . rjust ( 2 , '0' )  print ( f\"{hr}:{mi}\" )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1348_A_2315",
            "java_code": "import java . util . Scanner ;  public class A1348 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int t = scanner . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = scanner . nextInt ( ) ; int index = n / 2 ; int sum = ( int ) ( 2 * ( Math . pow ( 2 , index ) - 1 ) ) ; System . out . println ( sum ) ; } } }",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) li = [ ] for i in range ( 1 , n + 1 ) : li . append ( 2 ** i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1728_A_2316",
            "java_code": "class GFG { static int centeredSquare_number ( int N ) { float n = ( 9 + ( float ) Math . sqrt ( 36 * N + 45 ) ) / 18 ; if ( n - ( int ) n == 0 ) return 1 ; else return 0 ; } public static void main ( String [ ] args ) { int i = 13 ; System . out . println ( centeredSquare_number ( i ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def centeredSquare_number ( N ) : NEWLINE INDENT n = ( 9 + sqrt ( 36 * N + 45 ) ) / 18 ; NEWLINE if ( n - int ( n ) ) == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT i = 13 ; NEWLINE print ( centeredSquare_number ( i ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_A_2317",
            "java_code": "import java . util . * ; public class functions { public static void main ( String [ ] args ) { int t ; String n ; Scanner sc = new Scanner ( System . in ) ;  t = sc . nextInt ( ) ;  while ( t -- > 0 ) { n = sc . next ( ) ;  System . out . println ( n . length ( ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : print ( len ( input ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_237_A_2318",
            "java_code": " import javax . swing . plaf . IconUIResource ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class codeforces { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "count , prev , great_count = 1 , - 1 , 1 for i in range ( int ( input ( ) ) ) : h , m = map ( int , input ( ) . split ( ) )  if h * 60 + m == prev : count += 1 if count > great_count : great_count = count else : count = 1 prev = h * 60 + m  print ( great_count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_488_A_2319",
            "java_code": "import java . util . Scanner ;  public class gigatower { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int i = 0 ; for ( i = a + 1 ; ; i ++ ) {",
            "python_code": "n = int ( input ( ) )  for i in range ( 1 , 21 ) : n1 = n + i if '8' in str ( n1 ) : print ( i ) exit ( )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1029_B_2320",
            "java_code": "import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; static HashMap < Integer , Integer > map = new HashMap < > ( ) ;  public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) dp = [ 0 ] * ndp [ 0 ] = 1 for i in range ( 1 , n ) : if 2 * l [ i - 1 ] >= l [ i ] : dp [ i ] = dp [ i - 1 ] + 1 else : dp [ i ] = 1 print ( max ( dp ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_22_A_2321",
            "java_code": "import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ;  int n = s . nextInt ( ) ; int min = 101 ; int min2 = 101 ;  for ( int i = 0 ; i < n ; i ++ ) { int x = s . nextInt ( ) ; if ( min > x ) { min2 = min ; min = x ; } else if ( min != x && x < min2 ) { min2 = x ; } }  System . out . println ( min2 == 101 ? \"NO\" : min2 ) ;  s . close ( ) ; } }",
            "python_code": "n = int ( input ( ) ) m = ( sorted ( list ( set ( map ( int , input ( ) . strip ( ) . split ( ) ) ) ) ) ) [ : n ] print ( m [ 1 ] if len ( m ) > 1 else \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3006_A_2322",
            "java_code": "class GFG { static void ans ( int n ) { if ( n == 1 ) System . out . println ( \"1\" ) ; else System . out . println ( \"0\" ) ; } public static void main ( String [ ] args ) { int n = 2 ; ans ( n ) ; } }",
            "python_code": "def ans ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT print ( \"1\" , end = \"\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"0\" , end = \"\" ) ; NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; NEWLINE ans ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_171_A_2323",
            "java_code": "import java . awt . * ; import java . io . * ; import java . util . * ;  public class AA implements Runnable {  public void run ( ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int i = 0 , j = 0 , k = 0 ; int t = 0 ;",
            "python_code": "import mathimport sysinput = sys . stdin . readline  def inp ( ) : return ( int ( input ( ) ) ) def inlt ( ) : return ( list ( map ( int , input ( ) . split ( ) ) ) ) def reverse_number ( n ) : r = 0 while n > 0 : r *= 10 r += n % 10 n //= 10 return rm , s = inlt ( ) print ( m + reverse_number ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_811_A_2324",
            "java_code": "import java . util . Scanner ;  public class NewMain4 {  public static void main ( String [ ] args ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) i = 0 d = 0 while a >= 0 and b >= 0 : if i % 2 == 0 and i > 0 : if b - d >= 0 : b -= d i += 1 d += 1 else : print ( 'Valera' ) break elif a - d >= 0 : a -= d i += 1 d += 1 else : print ( 'Vladik' ) break                  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_120_B_2325",
            "java_code": "import java . io . * ; import java . util . * ; public class kuchBhi { public static void main ( String [ ] args ) throws Throwable {",
            "python_code": "import syssys . stdin = open ( r'input.txt' , 'r' ) sys . stdout = open ( r'output.txt' , 'w' ) n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) i = k - 1 ; while ( True ) : if i == n : i = 0 continue if a [ i ] == 1 : print ( i + 1 ) break i += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4952_A_2326",
            "java_code": "public class GFG { static int GCD ( int a , int b ) { if ( b == 0 ) return a ; return GCD ( b , a % b ) ; } static void findRatio ( int m , int n ) { int Am = m - 5 , An = n - 5 ; int numerator = Am / GCD ( Am , An ) ; int denominator = An / GCD ( Am , An ) ; System . out . println ( numerator + \"/\" + denominator ) ; } public static void main ( String args [ ] ) { int m = 10 , n = 20 ; findRatio ( m , n ) ; } }",
            "python_code": "from fractions import gcd NEWLINE def findRatio ( m , n ) : NEWLINE INDENT Am = m - 5 NEWLINE An = n - 5 NEWLINE numerator = Am // ( gcd ( Am , An ) ) NEWLINE denominator = An // ( gcd ( Am , An ) ) NEWLINE print ( numerator , '/' , denominator ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT m = 10 NEWLINE n = 20 NEWLINE findRatio ( m , n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4416_A_2327",
            "java_code": "class GFG { static int spiralDiaSum ( int n ) { if ( n == 1 ) return 1 ; return ( 4 * n * n - 6 * n + 6 + spiralDiaSum ( n - 2 ) ) ; } public static void main ( String [ ] args ) { int n = 7 ; System . out . print ( spiralDiaSum ( n ) ) ; } }",
            "python_code": "def spiralDiaSum ( n ) : NEWLINE INDENT if n == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return ( 4 * n * n - 6 * n + 6 + spiralDiaSum ( n - 2 ) ) NEWLINE DEDENT n = 7 ; NEWLINE print ( spiralDiaSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_260_A_2328",
            "java_code": " import javax . swing . plaf . IconUIResource ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class codeforces { static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "a , b , n = [ int ( x ) for x in input ( ) . split ( ) ] for i in range ( 10 ) : temp = str ( a ) + str ( i ) if ( int ( temp ) % b == 0 ) : a = temp breakif ( int ( a ) % b != 0 ) : a = - 1 else : a = a + ( '0' * ( n - 1 ) ) print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1095_A_2329",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static FileWriter fw ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = Integer . MAX_VALUE ;",
            "python_code": "n = int ( input ( ) ) m = input ( ) s = [ ] s [ : 0 ] = mc = 0 a = [ ] if n == 1 : print ( m ) else : for i in range ( 1 , n , 1 ) : if ( c < len ( s ) ) : a . append ( s [ c ] ) else : break c += i print ( '' . join ( map ( str , a ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1973_A_2330",
            "java_code": "class GFG { static int xorPairSum ( int ar [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum = sum ^ ar [ i ] ; return 2 * sum ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( xorPairSum ( arr , n ) ) ; } }",
            "python_code": "def xor_pair_sum ( ar , n ) : NEWLINE INDENT total = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT total = total ^ ar [ i ] NEWLINE DEDENT return 2 * total NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT data = [ 1 , 2 , 3 ] NEWLINE print ( xor_pair_sum ( data , len ( data ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_299_A_2331",
            "java_code": "class GfG { static int findMinSum ( int arr [ ] , int n ) { int occ = n - 1 , sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += arr [ i ] * ( int ) Math . pow ( 2 , occ ) ; occ -- ; } return sum ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 4 , 5 } ; int n = arr . length ; System . out . println ( findMinSum ( arr , n ) ) ; } }",
            "python_code": "def findMinSum ( arr , n ) : NEWLINE INDENT occ = n - 1 NEWLINE Sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT Sum += arr [ i ] * pow ( 2 , occ ) NEWLINE occ -= 1 NEWLINE DEDENT return Sum NEWLINE DEDENT arr = [ 1 , 2 , 4 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( findMinSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1177_A_2332",
            "java_code": "import java . util . * ;  public class questionCF { public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 1 ; i <= n ; i ++ ) sb . append ( i ) ; System . out . println ( sb . charAt ( n - 1 ) ) ; } }",
            "python_code": "c = 1  x = int ( input ( ) ) string = \"\" while len ( string ) < x : string += str ( c ) c += 1  print ( string [ x - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_859_A_2333",
            "java_code": "class Test { static int firstDigit ( int x ) { while ( x >= 10 ) x = x / 10 ; return x ; } public static void main ( String args [ ] ) { System . out . println ( firstDigit ( 12345 ) ) ; System . out . println ( firstDigit ( 5432 ) ) ; } }",
            "python_code": "def firstDigit ( x ) : NEWLINE INDENT while ( x >= 10 ) : NEWLINE INDENTINDENT x = x // 10 NEWLINE DEDENT return x NEWLINE DEDENT print ( firstDigit ( 12345 ) ) NEWLINE print ( firstDigit ( 5432 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_436_A_2334",
            "java_code": "class GFG { static int CountPairs ( int n ) { int k = n ; int imin = 1 ; int ans = 0 ; while ( imin <= n ) { int imax = n / k ; ans += k * ( imax - imin + 1 ) ; imin = imax + 1 ; k = n / imin ; } return ans ; } public static void main ( String [ ] args ) { System . out . println ( CountPairs ( 1 ) ) ; System . out . println ( CountPairs ( 2 ) ) ; System . out . println ( CountPairs ( 3 ) ) ; } }",
            "python_code": "def CountPairs ( n ) : NEWLINE INDENT k = n NEWLINE imin = 1 NEWLINE ans = 0 NEWLINE while ( imin <= n ) : NEWLINE INDENTINDENT imax = n / k NEWLINE ans += k * ( imax - imin + 1 ) NEWLINE imin = imax + 1 NEWLINE k = n / imin NEWLINE DEDENT return ans NEWLINE DEDENT print ( CountPairs ( 1 ) ) NEWLINE print ( CountPairs ( 2 ) ) NEWLINE print ( CountPairs ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2267_A_2335",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { static int evenSum ( int n ) { return ( n * ( n + 1 ) ) ; } public static void main ( String argc [ ] ) { int n = 20 ; System . out . println ( \"Sum of first \" + n + \" Even numbers is: \" + evenSum ( n ) ) ; } }",
            "python_code": "def evensum ( n ) : NEWLINE INDENT return n * ( n + 1 ) NEWLINE DEDENT n = 20 NEWLINE print ( \"sum of first\" , n , \"even number is: \" , evensum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4480_A_2336",
            "java_code": "public class GFG { public static void main ( String args [ ] ) { int n = 3 ; int a [ ] = { 1 , 2 , 3 } ; int i = 0 ; long sum = 0 ; for ( i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } long x = sum / n ; if ( x * n == sum ) System . out . println ( x ) ; else System . out . println ( \"-1\" ) ; } }",
            "python_code": "if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE a = [ 1 , 2 , 3 ] NEWLINE i = 0 NEWLINE sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += a [ i ] NEWLINE DEDENT x = sum // n NEWLINE if ( x * n == sum ) : NEWLINE INDENTINDENT print ( x ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"-1\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2391_A_2337",
            "java_code": "import java . lang . * ; import java . util . * ; class GFG { static int countConsecutive ( int n ) { String s = Integer . toString ( n ) ; int count = 0 ; for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ ) if ( s . charAt ( i ) == s . charAt ( i + 1 ) ) count ++ ; return count ; } public static void main ( String args [ ] ) { int n = 44522255 ; System . out . println ( countConsecutive ( n ) ) ; } }",
            "python_code": "def countConsecutive ( n ) : NEWLINE INDENT s = str ( n ) NEWLINE count = 0 NEWLINE for i in range ( len ( s ) - 1 ) : NEWLINE INDENTINDENT if ( s [ i ] == s [ i + 1 ] ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 44522255 NEWLINE print ( countConsecutive ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_893_A_2338",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Scanner ; import java . util . jar . JarOutputStream ;  public class Practise {   public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) a , b , c = 1 , 2 , 3 for _ in range ( n ) : x = int ( input ( ) ) if x == c : print ( \"NO\" ) exit ( ) t1 = x t2 = a + b - x t3 = c a = t1 b = t3 c = t2  print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5026_A_2339",
            "java_code": "class GFG { static float areaOfKite ( int d1 , int d2 ) { float area = ( d1 * d2 ) / 2 ; return area ; } public static void main ( String [ ] args ) { int d1 = 4 , d2 = 6 ; System . out . println ( \"Area of Kite = \" + areaOfKite ( d1 , d2 ) ) ; } }",
            "python_code": "def areaOfKite ( d1 , d2 ) : NEWLINE INDENT area = ( d1 * d2 ) / 2 ; NEWLINE return area ; NEWLINE DEDENT d1 = 4 ; NEWLINE d2 = 6 ; NEWLINE print ( \"Area of Kite = \" , areaOfKite ( d1 , d2 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_628_A_2340",
            "java_code": "import java . util . * ;  public class CodeForces628A { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int b = input . nextInt ( ) ; int p = input . nextInt ( ) ; int ans = 0 ; int m = n ; while ( n > 1 ) { int k = 1 ; while ( k * 2 <= n ) { k *= 2 ; } n -= k / 2 ; ans += ( k / 2 ) * ( b * 2 ) + k / 2 ; }  System . out . println ( ans + \" \" + ( m * p ) ) ;  } }",
            "python_code": "n , b , p = map ( int , input ( ) . split ( ) )   max_pow = 1 while True : aux = max_pow * 2 if aux > n : break max_pow = aux  bottles = 0 towels = n * pwhile n != 1 : bottles += max_pow * b + max_pow // 2 n -= max_pow // 2  while max_pow > n : max_pow /= 2   print ( int ( bottles ) , towels ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_463_B_2341",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int max = Integer . MIN_VALUE ; int [ ] ar = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; max = Math . max ( ar [ i ] , max ) ; } System . out . println ( max ) ;",
            "python_code": "n = int ( input ( ) ) ls = list ( map ( int , input ( ) . split ( ) ) ) print ( max ( ls ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_426_B_2342",
            "java_code": " import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;  import java . util . ArrayList ; import java . util . HashMap ; import java . util . LinkedList ;  ",
            "python_code": "from math import log row , col = map ( int , input ( ) . split ( \" \" ) ) if row % 2 == 1 : print ( row ) else : matrix = [ ] for _ in range ( row ) : matrix . append ( input ( ) . split ( \" \" ) ) minimum = row for _ in range ( int ( log ( row , 2 ) ) ) : if matrix [ 0 : minimum // 2 ] == matrix [ minimum - 1 : minimum // 2 - 1 : - 1 ] : minimum //= 2 else : break print ( minimum ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_659_A_2343",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner x = new Scanner ( System . in ) ; int n = x . nextInt ( ) ; int a = x . nextInt ( ) ; int b = x . nextInt ( ) ; int y = ( ( a - 1 + b ) % n + n ) % n + 1 ; System . out . println ( y ) ; } }",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) INT = lambda : int ( input ( ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1007_A_2344",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) map = { } for i in arr : if i not in map : map [ i ] = 1 else : map [ i ] += 1 max = 0 for i in map : if map [ i ] > max : max = map [ i ] print ( n - max ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4689_A_2345",
            "java_code": "import java . io . * ; public class GFG { static float AvgofSquareN ( int n ) { float sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( i * i ) ; return sum / n ; } static public void main ( String [ ] args ) { int n = 2 ; System . out . println ( AvgofSquareN ( n ) ) ; } }",
            "python_code": "def AvgofSquareN ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += ( i * i ) NEWLINE DEDENT return sum / n NEWLINE DEDENT n = 2 NEWLINE print ( AvgofSquareN ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2718_A_2346",
            "java_code": "import java . util . * ; class GFG { static int get_permutation ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { result += Math . abs ( arr [ i ] - ( i + 1 ) ) ; } return result ; } public static void main ( String [ ] args ) { int arr [ ] = { 0 , 2 , 3 , 4 , 1 , 6 , 8 , 9 } ; int n = arr . length ; System . out . print ( get_permutation ( arr , n ) ) ; } }",
            "python_code": "def get_permutation ( arr , n ) : NEWLINE INDENT arr = sorted ( arr ) NEWLINE result = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT result += abs ( arr [ i ] - ( i + 1 ) ) NEWLINE DEDENT return result NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 0 , 2 , 3 , 4 , 1 , 6 , 8 , 9 ] NEWLINE n = len ( arr ) NEWLINE print ( get_permutation ( arr , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_1323_A_2347",
            "java_code": "class Solution { public int maximum69Number ( int num ) { return Integer . valueOf ( String . valueOf ( num ) . replaceFirst ( \"6\" , \"9\" ) ) ; } }",
            "python_code": "class Solution : NEWLINE INDENT def maximum69Number ( self , num : int ) -> int : NEWLINE INDENTINDENT return ( str ( num ) . replace ( '6' , '9' , 1 ) ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_B_2348",
            "java_code": "  import java . util . Arrays ; import java . util . HashSet ; import java . util . Scanner ; import java . util . Set ;  public class Javaweb {  public static void main ( String [ ] args ) {",
            "python_code": "num = int ( input ( ) ) arr = sorted ( map ( int , input ( ) . split ( ) ) , reverse = True )  ans = 0  seen = set ( )  for num in arr : if num in seen : while num in seen and num > 0 : num -= 1 ans += num seen . add ( num ) else : ans += num seen . add ( num )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2251_A_2349",
            "java_code": "class GFG { static int countWays ( int n , int arr [ ] , int len ) { if ( n == 0 ) return 1 ; int no_ways = 0 ; for ( int i = 0 ; i < len ; i ++ ) { if ( n - arr [ i ] >= 0 ) { no_ways += countWays ( n - arr [ i ] , arr , len ) ; } } return no_ways ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 3 , 5 } ; int len = arr . length ; ; int n = 5 ; System . out . println ( countWays ( n , arr , len ) ) ; } }",
            "python_code": "def countWays ( n , arr ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT no_ways = 0 NEWLINE for i in arr : NEWLINE INDENTINDENT if ( n - i >= 0 ) : NEWLINE INDENTINDENTINDENT no_ways = no_ways + countWays ( n - i , arr ) NEWLINE DEDENT DEDENT return no_ways NEWLINE DEDENT arr = [ 1 , 3 , 5 ] NEWLINE n = 5 NEWLINE print ( countWays ( n , arr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_392_A_2350",
            "java_code": "class GFG { static void calcSum ( int arr [ ] , int n , int k ) { for ( int i = 0 ; i <= n - k ; i ++ ) { int sum = 0 ; for ( int j = i ; j < k + i ; j ++ ) sum += arr [ j ] ; System . out . print ( sum + \" \" ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 4 , 5 , 6 } ; int n = arr . length ; int k = 3 ; calcSum ( arr , n , k ) ; } }",
            "python_code": "def calcSum ( arr , n , k ) : NEWLINE INDENT for i in range ( n - k + 1 ) : NEWLINE INDENTINDENT sum = 0 NEWLINE for j in range ( i , k + i ) : NEWLINE INDENTINDENTINDENT sum += arr [ j ] NEWLINE DEDENT print ( sum , end = \" \" ) NEWLINE DEDENT DEDENT arr = [ 1 , 2 , 3 , 4 , 5 , 6 ] NEWLINE n = len ( arr ) NEWLINE k = 3 NEWLINE calcSum ( arr , n , k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1199_A_2351",
            "java_code": "import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . time . LocalTime ; import java . util . * ; import java . util . concurrent . * ; import java . util . regex . * ;   public class D {   public static void main ( String [ ] args ) { FastScanner scan = new FastScanner ( ) ;",
            "python_code": "from sys import stdinn , x , y = map ( int , stdin . readline ( ) . split ( ) ) a = list ( map ( int , stdin . readline ( ) . split ( ) ) ) for i in range ( n ) : if min ( a [ max ( i - x , 0 ) : min ( i + y + 1 , n ) ] ) == a [ i ] : print ( i + 1 ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_291_A_2352",
            "java_code": "import java . util . HashMap ; import java . util . Scanner ;  public class Problem63 {  public static void main ( String [ ] args ) {",
            "python_code": "from collections import Counter  n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  count = Counter ( arr ) ans = 0 for key , val in count . items ( ) : if val > 2 and key != 0 : print ( - 1 ) exit ( ) if val == 2 and key != 0 : ans += 1  print ( ans )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_80_B_2353",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; String s [ ] = scan . next ( ) . split ( \":\" ) ; int h = Integer . parseInt ( s [ 0 ] ) ; int m = Integer . parseInt ( s [ 1 ] ) ; int nm = ( 6 * m ) ; double nh = ( 30 * h ) % 360 ; nh += 30 * m / 60.00 ; System . out . println ( nh + \" \" + nm ) ; } }",
            "python_code": "s = input ( ) NEWLINE if s [ 0 ] == \"0\" : NEWLINE INDENT h = int ( s [ 1 ] ) else : NEWLINE h = int ( s [ : 2 ] ) NEWLINE DEDENT if s [ 3 ] == \"0\" : NEWLINE INDENT m = int ( s [ 4 ] ) else : NEWLINE m = int ( s [ 3 : ] ) NEWLINE DEDENT a = ( ( h ) * 30 + 6 * ( 5 * m / 60 ) ) % 360 NEWLINE if str ( a ) [ - 1 ] == \"0\" : a = int ( a ) NEWLINE b = 6 * mprint ( a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1011_A_2354",
            "java_code": "import java . util . * ;  public class cf180 { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int i = 0 ; String s = sc . next ( ) ; int f [ ] = new int [ 26 ] ; for ( i = 0 ; i < n ; i ++ ) { char ch = s . charAt ( i ) ; f [ ch - 'a' ] ++ ; } long ans = 0 ;",
            "python_code": "n , k = list ( map ( int , input ( ) . split ( ) ) ) s = sorted ( list ( str ( input ( ) ) ) ) r = 0 c = 0 m = sorted ( list ( set ( s ) ) ) for i in range ( len ( m ) ) : if i == 0 : r += ( ord ( m [ i ] ) - 96 ) c += 1 t = m [ i ] else : if ord ( m [ i ] ) - ord ( t ) != 1 : r += ( ord ( m [ i ] ) - 96 ) c += 1 t = m [ i ] if c == k : breakprint ( - 1 if c != k else r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_616_B_2355",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class B616 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "from sys import stdinn , m = map ( int , stdin . readline ( ) . split ( ) ) print ( max ( [ min ( list ( map ( int , stdin . readline ( ) . split ( ) ) ) ) for i in range ( n ) ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1365_B_2356",
            "java_code": "import java . io . BufferedOutputStream ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( \" \" ) ) ) indexes = list ( map ( int , input ( ) . split ( \" \" ) ) )  if 0 in indexes and 1 in indexes : print ( \"YES\" ) else : if list ( sorted ( li ) ) == li : print ( \"YES\" ) else : print ( \"NO\" )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3152_A_2357",
            "java_code": "import java . util . * ; class GFG { static int countSquares ( int m , int n ) { if ( n < m ) { int temp = m ; m = n ; n = temp ; } return n * ( n + 1 ) * ( 3 * m - n + 1 ) / 6 ; } public static void main ( String [ ] args ) { int m = 4 ; int n = 3 ; System . out . print ( \"Count of squares is \" + countSquares ( m , n ) ) ; } }",
            "python_code": "def countSquares ( m , n ) : NEWLINE INDENT if ( n < m ) : NEWLINE INDENTINDENT temp = m NEWLINE m = n NEWLINE n = temp NEWLINE DEDENT return n * ( n + 1 ) * ( 3 * m - n + 1 ) // 6 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT m = 4 NEWLINE n = 3 NEWLINE print ( \"Count of squares is\" , countSquares ( m , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_412_B_2358",
            "java_code": "import java . util . * ; public class NetworkConfiguration {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int arr [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextInt ( ) ; } Arrays . sort ( arr ) ; System . out . println ( arr [ n - k ] ) ; }  }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) print ( a [ n - k ] )  '''* So I drown it out * Like I always do* Dancing through our house* With the ghost of you''' NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_639_A_2359",
            "java_code": "import java . io . * ; import java . util . * ;  public class A1008 { public static void main ( String [ ] args ) { InputStream inputReader = System . in ; OutputStream outputReader = System . out ; InputReader in = new InputReader ( inputReader ) ;",
            "python_code": "    n , k , q = map ( int , input ( ) . split ( ) )    t = list ( map ( int , input ( ) . split ( ) ) )  f = [ ]    for i in range ( q ) : a , b = map ( int , input ( ) . split ( ) )    if a == 1 : if len ( f ) < k : f . append ( t [ b - 1 ] ) else : f . append ( t [ b - 1 ] ) f . sort ( ) f = f [ : : - 1 ] [ : k ] else : if t [ b - 1 ] in f : print ( 'YES' ) else : print ( 'NO' )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_66_B_2360",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) NEWLINE arr = list ( map ( int , input ( ) . split ( ) ) )  water = [ 0 ] * n NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_495_B_2361",
            "java_code": "import java . util . Scanner ;  public class Teste { public static void main ( String args [ ] ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) if a == b : print ( 'infinity' ) exit ( 0 ) x = abs ( a - b ) ans = 0 for xx in range ( 1 , int ( x ** 0.5 ) + 1 ) : if x % xx == 0 : if a % xx == b : ans += 1 if xx * xx != x : if a % ( x // xx ) == b : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_554_A_2362",
            "java_code": "import java . util . Scanner ;  public class PhotoString { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  System . out . println ( 26 + 25 * scan . nextLine ( ) . length ( ) ) ; } }",
            "python_code": "n = input ( ) a = 26 for i in range ( len ( n ) ) : a += 25 print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_160_A_2363",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ;  public class Problem66 {  public static void main ( String [ ] args ) {",
            "python_code": "ReadStr = lambda : input ( ) ReadList = lambda : list ( map ( int , input ( ) . split ( ) ) ) ReadInt = lambda : int ( input ( ) ) ReadMultipleValues = lambda : map ( int , input ( ) . split ( ) )  n = ReadInt ( ) coins = sorted ( ReadList ( ) ) [ : : - 1 ] s = 0 count = 0 for i in range ( n ) : if sum ( coins [ i : ] ) < s : break else : s += coins [ i ] count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1205_A_2364",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c580a {",
            "python_code": "n = int ( input ( ) ) if n & 1 : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1219_A_2365",
            "java_code": "class GFG { static double PI = 3.14 ; static double find_area ( int r , int d ) { double R = d / PI ; R += Math . pow ( r , 2 ) ; R = Math . sqrt ( R ) ; double area = PI * Math . pow ( R , 2 ) ; return area ; } public static void main ( String [ ] args ) { int r = 4 , d = 5 ; System . out . println ( find_area ( r , d ) ) ; } }",
            "python_code": "PI = 3.14 NEWLINE from math import pow , sqrt NEWLINE def find_area ( r , d ) : NEWLINE INDENT R = d / PI NEWLINE R += pow ( r , 2 ) NEWLINE R = sqrt ( R ) NEWLINE area = PI * pow ( R , 2 ) NEWLINE return area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT r = 4 NEWLINE d = 5 NEWLINE print ( find_area ( r , d ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_B_2366",
            "java_code": "import java . io . * ; import java . util . HashSet ; import java . util . StringTokenizer ;",
            "python_code": "import sysimport NEWLINE mathfrom NEWLINE collections NEWLINE import deque NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_787_A_2367",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;   public class Problem_Solving1 { public static void main ( String [ ] args ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) c , d = map ( int , input ( ) . split ( ) )  for i in range ( 101 ) : for j in range ( 101 ) : if a * i + b == c * j + d : print ( a * i + b ) exit ( ) print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_466_B_2368",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class er10a {",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) e = n * 6 while e > a * b : q , w = min ( a , b ) , max ( a , b ) for i in range ( q , int ( e ** .5 ) + 1 ) : if e % i == 0 : if q <= i and w <= e // i : q , w = i , e // i ; break if q <= e // i and w <= i : q , w = e // i , i ; break if b > a : a , b = q , w else : a , b = w , q if e > a * b : e += 1 print ( a * b , a , b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5020_A_2369",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 2 ) - n - 1 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 2 * pow ( n , 2 ) - n - 1 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_84_A_2370",
            "java_code": "import java . util . * ; public class toy_army { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; System . out . println ( n + n / 2 ) ; } }",
            "python_code": "n = int ( input ( ) )  print ( n + n // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1131_A_2371",
            "java_code": " import java . util . Scanner ; import java . util . Arrays ; public class Codechef { public static void main ( String [ ] args ) throws java . lang . Exception { try { Scanner sc = new Scanner ( System . in ) ; int w1 , w2 , h1 , h2 ; w1 = sc . nextInt ( ) ; h1 = sc . nextInt ( ) ; w2 = sc . nextInt ( ) ; h2 = sc . nextInt ( ) ; System . out . println ( 2 * ( w1 + h1 + h2 ) + 4 ) ; } catch ( Exception e ) { } } }",
            "python_code": "w1 , h1 , w2 , h2 = map ( int , input ( ) . split ( ) ) ans = w1 + 4 ans += ( w1 - w2 ) ans += h1 * 2 ans += h2 * 2 ans += w2print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_992_A_2372",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "i = int ( input ( ) ) s = list ( input ( ) . split ( ) ) l = { } c = 0 for j in range ( i ) : if int ( s [ j ] ) != 0 : if int ( s [ j ] ) not in l . keys ( ) : l [ int ( s [ j ] ) ] = 1 c += 1 else : l [ int ( s [ j ] ) ] += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_864_A_2373",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) freq = { } for _ in range ( n ) : num = int ( input ( ) ) freq [ num ] = freq . get ( num , 0 ) + 1 keys = list ( freq . keys ( ) ) if len ( keys ) == 2 and freq [ keys [ 0 ] ] == n // 2 : print ( 'YES' ) print ( * keys ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3044_A_2374",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static long fourthPowerSum ( int n ) { return ( ( 6 * n * n * n * n * n ) + ( 15 * n * n * n * n ) + ( 10 * n * n * n ) - n ) / 30 ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( fourthPowerSum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def fourthPowerSum ( n ) : NEWLINE INDENT return ( ( 6 * n * n * n * n * n ) + ( 15 * n * n * n * n ) + ( 10 * n * n * n ) - n ) / 30 NEWLINE DEDENT n = 6 NEWLINE print ( fourthPowerSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_538_A_2375",
            "java_code": "import java . util . Scanner ;  public class CuttingBanner {  public static void main ( String [ ] args ) { System . out . println ( helper ( ) ) ; } public static String helper ( ) { Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; int length = s . length ( ) ; if ( length < 10 ) return \"NO\" ; String firstTen = s . substring ( 0 , 10 ) ; String lastTen = s . substring ( length - 10 , length ) ;",
            "python_code": "import sysimport mathimport itertoolsimport functoolsimport collectionsimport operatorimport fileinputimport copy  ORDA = 97 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_194_A_2376",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class problem109 {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = [ int ( y ) for y in input ( ) . split ( ) ] if k / n >= 3 : print ( 0 ) else : n = n * 3 print ( n - k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_950_A_2377",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int z = sc . nextInt ( ) ; int a ; int sum = 0 ; if ( x > y ) { sum += y ; a = x - y ; } else { sum += x ; a = y - x ; } if ( a <= z ) { sum = sum + ( a + z ) / 2 ; } else { sum = sum + z ; } sum *= 2 ; System . out . println ( sum ) ; } }",
            "python_code": "l , r , ambidextors = map ( int , input ( ) . split ( ) )  base_team_size = 2 * min ( l , r ) extra_onehanded = max ( max ( l , r ) - base_team_size // 2 , 0 )  if extra_onehanded : more_pairs = min ( extra_onehanded , ambidextors ) base_team_size += 2 * more_pairs ambidextors -= more_pairs extra_onehanded -= more_pairs  max_team_size = base_team_size + ambidextors - ( ambidextors % 2 )    print ( max_team_size ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2824_A_2378",
            "java_code": "class solution { static int countWords ( String str ) { int count = 1 ; for ( int i = 1 ; i < str . length ( ) - 1 ; i ++ ) { if ( str . charAt ( i ) >= 65 && str . charAt ( i ) <= 90 ) count ++ ; } return count ; } public static void main ( String args [ ] ) { String str = \"geeksForGeeks\" ; System . out . print ( countWords ( str ) ) ; } }",
            "python_code": "def countWords ( str ) : NEWLINE INDENT count = 1 NEWLINE for i in range ( 1 , len ( str ) - 1 ) : NEWLINE INDENTINDENT if ( str [ i ] . isupper ( ) ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT str = \"geeksForGeeks\" ; NEWLINE print ( countWords ( str ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1038_A_2379",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Equality { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n , k = map ( int , input ( ) . split ( \" \" ) ) s = input ( ) l = [ ] for i in range ( k ) : l . append ( s . count ( chr ( i + ord ( \"A\" ) ) ) ) print ( min ( l ) * k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_336_B_2380",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . Comparator ; import java . util . List ;  public class Main {  IIO io ;  Main ( IIO io ) { this . io = io ; }  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "m , R = map ( int , input ( ) . split ( ) ) print ( ( 2 * m / 3 - 2 + 22 / m / 3 - 4 / m / m + 2 ** .5 * ( 2 - 4 / m + 2 / m / m ) ) * R ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_460_A_2381",
            "java_code": "import java . util . Scanner ;   public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int i ; for ( i = 1 ; i <= n ; i ++ ) { if ( i % m == 0 ) { n ++ ; } } System . out . println ( n ) ; } }",
            "python_code": "n1 , m1 = input ( ) . split ( ) n = int ( n1 ) m = int ( m1 ) a = n + ( ( n - 1 ) / ( m - 1 ) ) print ( int ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_1480_A_2382",
            "java_code": "class Solution { public int [ ] runningSum ( int [ ] nums ) { if ( nums . length <= 1 ) return nums ; for ( int i = 1 ; i < nums . length ; i ++ ) nums [ i ] += nums [ i - 1 ] ; return nums ; } }",
            "python_code": "class Solution : NEWLINE INDENT def runningSum ( self , nums : List [ int ] ) -> List [ int ] : NEWLINE INDENTINDENT if nums is None or len ( nums ) == 0 : NEWLINE INDENTINDENTINDENT return nums NEWLINE DEDENT for i in range ( 1 , len ( nums ) ) : NEWLINE INDENTINDENTINDENT nums [ i ] += nums [ i - 1 ] NEWLINE DEDENT return nums NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_854_B_2383",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int k = s . nextInt ( ) ; if ( k == 0 || k == n ) System . out . print ( \"0 \" ) ; else System . out . print ( \"1 \" ) ; if ( n - ( 3 * k ) >= 0 ) System . out . print ( 2 * k ) ; else System . out . print ( n - k ) ; } }",
            "python_code": "import mathinp = input ( ) n , k = inp . split ( ) n = int ( n ) k = int ( k ) minn = 1 if ( n - k == 0 ) or ( k == 0 ) : minn = 0 maxx = 0  maxx = k * 2 if ( n - maxx - k < 0 ) : maxx = n - k   print ( minn , end = \" \" ) print ( maxx ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_330_A_2384",
            "java_code": "import java . util . * ; class GFG { static int cntSubsets ( int [ ] arr , int n ) { int max = ( int ) Math . pow ( 2 , n ) ; int result = 0 ; for ( int i = 0 ; i < max ; i ++ ) { int counter = i ; if ( ( counter & ( counter > > 1 ) ) > 0 ) continue ; result ++ ; } return result ; } static public void main ( String [ ] arg ) { int arr [ ] = { 3 , 5 , 7 } ; int n = arr . length ; System . out . println ( cntSubsets ( arr , n ) ) ; } }",
            "python_code": "def cntSubsets ( arr , n ) : NEWLINE INDENT max = pow ( 2 , n ) NEWLINE result = 0 NEWLINE for i in range ( max ) : NEWLINE INDENTINDENT counter = i NEWLINE if ( counter & ( counter >> 1 ) ) : NEWLINE INDENTINDENTINDENT continue NEWLINE DEDENT result += 1 NEWLINE DEDENT return result NEWLINE DEDENT arr = [ 3 , 5 , 7 ] NEWLINE n = len ( arr ) NEWLINE print ( cntSubsets ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_932_A_2385",
            "java_code": "import java . util . Scanner ;  public class problem54 {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) print ( s + s [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3184_A_2386",
            "java_code": "import java . util . * ; class GFG { public static int calculate ( int ar [ ] , int size ) { int count = 0 ; for ( int i = 0 ; i < size ; i ++ ) if ( ar [ i ] % 2 == 0 && ar [ i ] != 0 && ar [ i ] != 2 ) count ++ ; return count ; } public static void main ( String [ ] args ) { int a [ ] = { 1 , 3 , 4 , 6 } ; int size = a . length ; System . out . print ( calculate ( a , size ) ) ; } }",
            "python_code": "def calculate ( array , size ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( size ) : NEWLINE INDENTINDENT if ( array [ i ] % 2 == 0 and array [ i ] != 0 and array [ i ] != 2 ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 1 , 3 , 4 , 6 ] NEWLINE size = len ( a ) NEWLINE print ( calculate ( a , size ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1453_A_2387",
            "java_code": "import java . io . * ; import java . util . * ;  public class A {  public static void main ( String [ ] args ) throws FileNotFoundException { FastScanner fs = new FastScanner ( ) ; FastOutput fo = new FastOutput ( ) ; long initial_time = System . currentTimeMillis ( ) ; int testcases = fs . nextInt ( ) ; for ( int tt = 0 ; tt < testcases ; tt ++ ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) NEWLINE l = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE x = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE l = set ( l ) NEWLINE x = set ( x ) NEWLINE z = l | x NEWLINE print ( abs ( len ( z ) - ( n + m ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_875_A_2388",
            "java_code": "  import java . util . Scanner ; import java . util . ArrayList ;  public class Main { public static void main ( String [ ] args ) { Scanner puttingvaluesinside = new Scanner ( System . in ) ; int n = puttingvaluesinside . nextInt ( ) ; solve2 ( n ) ;",
            "python_code": "n = int ( input ( ) ) output = [ ] for i in range ( max ( n - 82 , 0 ) , n ) : listi = list ( map ( int , str ( i ) ) ) if ( i + sum ( listi ) == n ) : output . append ( i ) print ( len ( output ) ) for i in range ( len ( output ) ) : print ( output [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1191_A_2389",
            "java_code": "import java . io . * ; import java . util . * ;  public class GFG { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "x = int ( input ( ) ) if ( x % 4 == 1 ) : print ( \"0 A\" ) elif ( x % 4 == 0 ) : print ( \"1 A\" ) elif ( x % 4 == 2 ) : print ( \"1 B\" ) else : print ( \"2 A\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4219_A_2390",
            "java_code": "import java . lang . * ; class GFG { static int countNumbers ( int n ) { int k = 0 ; int count = 0 ; while ( n > 0 ) { if ( ( n & 1 ) == 0 ) count += ( int ) ( Math . pow ( 2 , k ) ) ; k += 1 ; n >>= 1 ; } return count ; } public static void main ( String [ ] args ) { int n = 11 ; System . out . println ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumbers ( n ) : NEWLINE INDENT k = 0 NEWLINE count = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT if ( ( n & 1 ) == 0 ) : NEWLINE INDENTINDENTINDENT count += pow ( 2 , k ) NEWLINE DEDENT k += 1 NEWLINE n >>= 1 NEWLINE DEDENT return count NEWLINE DEDENT n = 11 NEWLINE print ( countNumbers ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_535_B_2391",
            "java_code": "import java . io . * ; import java . util . ArrayList ; import java . util . Collections ; import java . util . StringTokenizer ;",
            "python_code": "s = input ( ) ans = 0 n = len ( s ) for i in range ( 1 , n ) : ans += pow ( 2 , i ) for i in range ( 0 , n ) : if ( s [ i ] == '7' ) : ans += pow ( 2 , n - 1 - i ) print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_862_A_2392",
            "java_code": "import java . util . Scanner ;  public class MahmoudEhabMEX { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , x = in . nextInt ( ) , i , j = 0 , a [ ] = new int [ 101 ] , c = 0 ;  for ( i = 0 ; i < n ; i ++ ) a [ in . nextInt ( ) ] ++ ; in . close ( ) ;  for ( i = 0 ; i < x ; i ++ ) c += a [ i ] ; System . out . println ( a [ x ] == 1 ? x - c + 1 : x - c ) ; } }",
            "python_code": "n , x = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) exist = [ False ] * 101 for e in a : exist [ e ] = Trueans = 0 if exist [ x ] : ans += 1 for i in range ( x ) : if not exist [ i ] : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_934_A_2393",
            "java_code": "import java . io . * ; import java . util . * ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) c1 = float ( 'inf' ) for i in range ( n ) : c2 = float ( '-inf' ) for j in range ( n ) : if ( i != j ) : for k in range ( m ) : c2 = max ( c2 , a [ j ] * b [ k ] ) c1 = min ( c1 , c2 ) print ( c1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1001_A_2394",
            "java_code": "class GFG { static int finalNum ( int arr [ ] , int n ) { int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { result = __gcd ( result , arr [ i ] ) ; } return result ; } static int __gcd ( int a , int b ) { return b == 0 ? a : __gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 9 , 6 , 36 } ; int n = arr . length ; System . out . print ( finalNum ( arr , n ) ) ; } }",
            "python_code": "from math import gcd as __gcd NEWLINE def finalNum ( arr , n ) : NEWLINE INDENT result = arr [ 0 ] NEWLINE for i in arr : NEWLINE INDENTINDENT result = __gcd ( result , i ) NEWLINE DEDENT return result NEWLINE DEDENT arr = [ 3 , 9 , 6 , 36 ] NEWLINE n = len ( arr ) NEWLINE print ( finalNum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_526_B_2395",
            "java_code": "import java . io . * ; import java . util . * ;  public class C {  public static void main ( String [ ] args ) throws IOException { BufferedReader ob = new BufferedReader ( new InputStreamReader ( System . in ) ) ; int n = Integer . parseInt ( ob . readLine ( ) ) ; n = ( int ) Math . pow ( 2 , n + 1 ) ;",
            "python_code": "n = int ( input ( ) ) lis = [ 0 ] * 2 + list ( map ( int , input ( ) . split ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4049_A_2396",
            "java_code": "import java . io . * ; class GFG { static int sum_series ( int n ) { int nSquare = n * n ; return nSquare * ( nSquare - 1 ) / 4 ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( sum_series ( n ) ) ; } }",
            "python_code": "def sum_series ( n ) : NEWLINE INDENT nSquare = n * n NEWLINE return int ( nSquare * ( nSquare - 1 ) / 4 ) NEWLINE DEDENT n = 2 NEWLINE print ( sum_series ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_415_A_2397",
            "java_code": "import java . util . * ; public class MashmokhandLights {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) )  dicti = { }  for x in range ( n ) : dicti [ x + 1 ] = \"on\"  opers = [ int ( bruh ) for bruh in input ( ) . split ( ) ]  for oper in opers : for light in range ( oper , n + 1 ) : if dicti [ light ] == \"on\" : dicti [ light ] = oper  lst = [ ] for bruhh in range ( 1 , n + 1 ) : lst . append ( str ( dicti [ bruhh ] ) )  print ( ' ' . join ( lst ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1433_A_2398",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int ans = 0 ; int ele = sc . nextInt ( ) ; int r = ele % 10 ; ans = ( r - 1 ) * 10 ; int v = 0 ; while ( ele % 10 > 0 ) { v ++ ; ele = ele / 10 ; } ans = ans + ( v * ( v + 1 ) ) / 2 ; System . out . println ( ans ) ; } } }",
            "python_code": "t = int ( input ( ) ) NEWLINE ans = [ ]  for _ in range ( t ) : s = input ( ) NEWLINE c = 1 NEWLINE start = '1'  while not ( start == s ) : if NEWLINE int ( start + start [ 0 ] ) > 10000 : start = str ( int ( start [ 0 ] ) + 1 ) NEWLINE c += len ( start ) NEWLINE continue NEWLINE start += start [ 0 ] NEWLINE c += len ( start )  ans . append ( c )  for i in ans : print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1099_A_2399",
            "java_code": "class Gfg1 { static int Log2n ( int n ) { return ( n > 1 ) ? 1 + Log2n ( n / 2 ) : 0 ; } public static void main ( String args [ ] ) { int n = 32 ; System . out . println ( Log2n ( n ) ) ; } }",
            "python_code": "def Log2n ( n ) : NEWLINE INDENT return 1 + Log2n ( n / 2 ) if ( n > 1 ) else 0 NEWLINE DEDENT n = 32 NEWLINE print ( Log2n ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_43_A_2400",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int countA = 0 ; int countB = 0 ; int n = sc . nextInt ( ) ; String a = sc . next ( ) ; String b = \"\" ; countA ++ ; while ( n -- > 1 ) { String y = sc . next ( ) ; if ( y . equals ( a ) ) { countA ++ ; } else { b = y ; countB ++ ; } } System . out . println ( countA > countB ? a : b ) ; } }",
            "python_code": "d1 = { }  for i in range ( int ( input ( ) ) ) : s1 = input ( ) if ( s1 in d1 ) : d1 [ s1 ] += 1 else : d1 [ s1 ] = 1 l1 = list ( d1 . values ( ) ) l2 = list ( d1 . keys ( ) ) print ( l2 [ l1 . index ( max ( l1 ) ) ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3860_A_2401",
            "java_code": "class GFG { static char getChar ( String str ) { int sum = 0 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { sum += ( str . charAt ( i ) - 'a' + 1 ) ; } if ( sum % 26 == 0 ) return 'z' ; else { sum = sum % 26 ; return ( char ) ( 'a' + sum - 1 ) ; } } public static void main ( String [ ] args ) { String str = \"gfg\" ; System . out . println ( getChar ( str ) ) ; } }",
            "python_code": "def getChar ( strr ) : NEWLINE INDENT summ = 0 NEWLINE for i in range ( len ( strr ) ) : NEWLINE INDENTINDENT summ += ( ord ( strr [ i ] ) - ord ( 'a' ) + 1 ) NEWLINE DEDENT if ( summ % 26 == 0 ) : NEWLINE INDENTINDENT return ord ( 'z' ) NEWLINE DEDENT else : NEWLINE INDENTINDENT summ = summ % 26 NEWLINE return chr ( ord ( 'a' ) + summ - 1 ) NEWLINE DEDENT DEDENT strr = \"gfg\" NEWLINE print ( getChar ( strr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4607_A_2402",
            "java_code": "class PellNumber { public static int pell ( int n ) { if ( n <= 2 ) return n ; int a = 1 ; int b = 2 ; int c ; for ( int i = 3 ; i <= n ; i ++ ) { c = 2 * b + a ; a = b ; b = c ; } return b ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( pell ( n ) ) ; } }",
            "python_code": "def pell ( n ) : NEWLINE INDENT if ( n <= 2 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT a = 1 NEWLINE b = 2 NEWLINE for i in range ( 3 , n + 1 ) : NEWLINE INDENTINDENT c = 2 * b + a NEWLINE a = b NEWLINE b = c NEWLINE DEDENT return b NEWLINE DEDENT n = 4 NEWLINE print ( pell ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2880_A_2403",
            "java_code": "class GFG { static void mul_table ( int N , int i ) { if ( i > 10 ) return ; System . out . println ( N + \" * \" + i + \" = \" + N * i ) ; mul_table ( N , i + 1 ) ; } public static void main ( String [ ] args ) { int N = 8 ; mul_table ( N , 1 ) ; } }",
            "python_code": "def mul_table ( N , i ) : NEWLINE INDENT if ( i > 10 ) : NEWLINE INDENTINDENT return NEWLINE DEDENT print ( N , \"*\" , i , \"=\" , N * i ) NEWLINE return mul_table ( N , i + 1 ) NEWLINE DEDENT N = 8 NEWLINE mul_table ( N , 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_268_B_2404",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) ) suma = ( 2 * n ) - 1 las = n - 2 fir = 2 for item in range ( 1 , n - 1 ) : suma += ( fir * las ) fir += 1 las -= 1 print ( suma ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_698_A_2405",
            "java_code": "import java . util . Scanner ; public class GymContest { static int [ ] [ ] mem ; public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; mem = new int [ n ] [ 3 ] ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = s . nextInt ( ) ; System . out . println ( dp ( arr , 0 , 0 ) ) ;",
            "python_code": "n = int ( input ( ) )  day = list ( map ( int , input ( ) . split ( ) ) )  inf = 10 ** 20 dp = [ [ inf for _ in range ( 3 ) ] for _ in range ( n + 5 ) ]  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_361_A_2406",
            "java_code": "import java . util . Scanner ;  public class LevkoandTable {  public static void main ( String args [ ] ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int k = scan . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) { System . out . print ( k + \" \" ) ; } else { System . out . print ( 0 + \" \" ) ; } } System . out . println ( ) ; } } }",
            "python_code": "from itertools import permutationsn , k = map ( int , input ( ) . split ( ) ) arr = [ ] count = 0 for m in range ( n ) : lst = [ 0 ] * n lst [ count ] = k count += 1 arr . append ( lst ) for x in arr : print ( * x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_163_A_2407",
            "java_code": "public class GFG { static int findLargestDivisor ( int n ) { for ( int i = 2 ; i < Math . sqrt ( n ) + 1 ; i ++ ) { while ( n % ( i * i ) == 0 ) { n = n / i ; } } return n ; } public static void main ( String args [ ] ) { int n = 12 ; System . out . println ( findLargestDivisor ( n ) ) ; n = 97 ; System . out . println ( findLargestDivisor ( n ) ) ; } }",
            "python_code": "import math NEWLINE def findLargestDivisor ( n ) : NEWLINE INDENT for i in range ( 2 , int ( math . sqrt ( n ) ) + 1 ) : NEWLINE INDENTINDENT while ( n % ( i * i ) == 0 ) : NEWLINE INDENTINDENTINDENT n = n // i NEWLINE DEDENT DEDENT return n NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 12 NEWLINE print ( findLargestDivisor ( n ) ) NEWLINE n = 97 NEWLINE print ( findLargestDivisor ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4474_A_2408",
            "java_code": "class GFG { public static int findPosition ( int k , int n ) { long f1 = 0 , f2 = 1 , f3 ; int i = 2 ; while ( i != 0 ) { f3 = f1 + f2 ; f1 = f2 ; f2 = f3 ; if ( f2 % k == 0 ) { return n * i ; } i ++ ; } return 0 ; } public static void main ( String [ ] args ) { int n = 5 ; int k = 4 ; System . out . print ( \"Position of n'th multiple\" + \" of k in Fibonacci Series is \" ) ; System . out . println ( findPosition ( k , n ) ) ; } }",
            "python_code": "def findPosition ( k , n ) : NEWLINE INDENT f1 = 0 NEWLINE f2 = 1 NEWLINE i = 2 ; NEWLINE while i != 0 : NEWLINE INDENTINDENT f3 = f1 + f2 ; NEWLINE f1 = f2 ; NEWLINE f2 = f3 ; NEWLINE if f2 % k == 0 : NEWLINE INDENTINDENTINDENT return n * i NEWLINE DEDENT i += 1 NEWLINE DEDENT return NEWLINE DEDENT n = 5 ; NEWLINE k = 4 ; NEWLINE print ( \"Position of n'th multiple of k in\" \"Fibonacci Seires is\" , findPosition ( k , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_78_B_2409",
            "java_code": "import java . util . * ;  public class EasterEggs {  public static void main ( String [ ] args ) {",
            "python_code": "eggs = int ( input ( ) ) NEWLINE paint = [ 'R' , 'O' , 'Y' , 'G' , 'B' , 'I' , 'V' ] NEWLINE for _ in range ( eggs - 7 ) : paint . append ( '0' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_909_B_2410",
            "java_code": "import java . util . Scanner ;  public class B909 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int answer = ( ( N + 2 ) / 2 ) * ( ( N + 1 ) / 2 ) ; System . out . println ( answer ) ; }  }",
            "python_code": "n = int ( input ( ) ) ; print ( sum ( i for i in range ( 1 + n % 2 != 1 , n + 1 , 2 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_545_A_2411",
            "java_code": "import java . util . * ;  import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { int n = scanner . nextInt ( ) ; int [ ] [ ] array = new int [ n ] [ n ] ; for ( int i = 0 ; i < array . length ; i ++ ) { for ( int j = 0 ; j < array [ 0 ] . length ; j ++ ) { array [ i ] [ j ] = scanner . nextInt ( ) ; } }",
            "python_code": "n = int ( input ( ) ) ans = [ ] for j in range ( n ) : c = True a = [ i for i in input ( ) . split ( ) ] for i in a : if i == '1' or i == '3' : c = False if c : ans . append ( j + 1 ) print ( len ( ans ) ) print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_446_A_2412",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int find ( int n , int k ) { if ( n + 1 >= k ) return ( k - 1 ) ; else return ( 2 * n + 1 - k ) ; } public static void main ( String argc [ ] ) { int n = 4 , k = 7 ; int freq = find ( n , k ) ; if ( freq < 0 ) System . out . print ( \" element\" + \" not exist \\n \" ) ; else System . out . print ( \" Frequency\" + \" of \" + k + \" is \" + freq + \"\\n\" ) ; } }",
            "python_code": "import math NEWLINE def find ( n , k ) : NEWLINE INDENT if ( n + 1 >= k ) : NEWLINE INDENTINDENT return ( k - 1 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( 2 * n + 1 - k ) NEWLINE DEDENT DEDENT n = 4 NEWLINE k = 7 NEWLINE freq = find ( n , k ) NEWLINE if ( freq < 0 ) : NEWLINE INDENT print ( \" element not exist\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \" Frequency of \" , k , \" is \" , freq ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1166_B_2413",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; ",
            "python_code": "k = int ( input ( ) ) i = 2 n = m = 0 while i * i <= k : if k % i == 0 : if i >= 5 and k // i >= 5 : n = i m = k // i break i += 1 if n == 0 and m == 0 : print ( \"-1\" ) exit ( 0 ) s = \"aeiou\" ans = '' l = 0 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_760_A_2414",
            "java_code": "import java . util . Scanner ;  public class PAC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int m = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int td ; if ( m == 2 ) td = 28 ; else if ( m == 4 || m == 6 || m == 9 || m == 11 ) td = 30 ; else td = 31 ; td += d - 1 ; System . out . println ( ( td + 6 ) / 7 ) ; sc . close ( ) ; } }",
            "python_code": "month , day , = map ( int , input ( ) . split ( ) )  short = [ 2 ] mid = [ 4 , 6 , 9 , 11 ] long = [ 1 , 3 , 5 , 7 , 8 , 10 , 12 ]   if month in short : if day == 1 : print ( 4 ) else : print ( 5 )  elif month in mid : if day == 7 : print ( 6 ) else : print ( 5 ) else : if day in ( 6 , 7 ) : print ( 6 ) else : print ( 5 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_431_A_2415",
            "java_code": "import java . util . Scanner ;  public class Maloda {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a [ ] = new int [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { a [ i ] = in . nextInt ( ) ; } String s = in . next ( ) ; int t = 0 ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { t += a [ Integer . parseInt ( String . valueOf ( s . charAt ( i ) ) ) - 1 ] ; } System . out . println ( t ) ; } }",
            "python_code": "import sysinput = sys . stdin . readline  ''''''  a = [ 0 ] + list ( map ( int , input ( ) . split ( ) ) ) r = input ( ) . rstrip ( ) score = 0 for s in map ( int , r ) : score += a [ s ]  print ( score )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_597_B_2416",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main {   public static void main ( String [ ] args ) throws IOException , InterruptedException { int n = sc . nextInt ( ) ; Pair [ ] time = new Pair [ n ] ; for ( int i = 0 ; i < n ; i ++ ) time [ i ] = new Pair ( sc . nextInt ( ) , sc . nextInt ( ) ) ; pairSort ( time ) ;",
            "python_code": "n = int ( input ( ) ) a = [ ] for i in range ( n ) : l , r = map ( int , input ( ) . split ( ) ) a . append ( ( r , l ) ) a . sort ( ) L = - 1 ans = 0 for x in a : if x [ 1 ] > L : L = x [ 0 ] ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1075_A_2417",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001075A { static public void main ( final String [ ] args ) throws IOException { p001075A . _main ( args ) ; }",
            "python_code": "n = int ( input ( ) ) x , y = list ( map ( int , input ( ) . split ( ) ) ) wm = max ( x - 1 , y - 1 ) bm = max ( n - x , n - y ) print ( \"Black\" if bm < wm else \"White\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_218_B_2418",
            "java_code": "import java . util . PriorityQueue ; import java . util . Scanner ;  public class Airport { ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) p = list ( map ( int , input ( ) . split ( ) ) ) temp = p . copy ( ) p . sort ( ) nc = nnr = 0 r = 0 while n > 0 : n -= 1 r += p [ - 1 ] p [ - 1 ] -= 1  p . sort ( ) z = 0 temp . sort ( ) while nc > 0 : nc -= 1 nr += temp [ 0 ] temp [ 0 ] -= 1 if temp [ 0 ] == 0 : temp . remove ( temp [ 0 ] ) temp . sort ( )  print ( r , end = ' ' ) print ( nr ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_B_2419",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , k = list ( map ( int , input ( ) . split ( ) ) ) a = list ( map ( int , input ( ) . split ( ) ) ) r , s , x = n - k + 1 , 0 , [ ] x . append ( a [ 0 ] ) for i in range ( 1 , n + 1 ) : x . append ( x [ i - 1 ] + a [ i - 1 ] ) for i in range ( k , n + 1 ) : s += x [ i ] - x [ i - k ] print ( s / r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_731_A_2420",
            "java_code": "  import static java . lang . Math . abs ; import java . util . Scanner ;  public class Codeforces1 {  public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; ",
            "python_code": "x = str ( input ( ) ) start = 'a' count = 0 for i in x : count += min ( 26 - abs ( ord ( start ) - ord ( i ) ) , abs ( ord ( start ) - ord ( i ) ) ) start = iprint ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1136_B_2421",
            "java_code": "import java . io . * ; import java . util . * ; import java . util . concurrent . ConcurrentHashMap ; ",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if k == 1 : ans = 6 + ( n - 2 ) * 3 elif k == n : ans = 6 + ( n - 2 ) * 3 else : ans1 = 6 + ( k - 2 ) * 3 + ( k - 1 ) + ( n - k ) * 3 ans2 = 6 + ( n - k - 1 ) * 3 + ( n - k ) + ( k - 1 ) * 3 ans = min ( ans1 , ans2 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4363_A_2422",
            "java_code": "class GFG { static final int MOD = 1000000007 ; static int product ( int ar [ ] , int n ) { int result = 1 ; for ( int i = 0 ; i < n ; i ++ ) result = ( result * ar [ i ] ) % MOD ; return result ; } public static void main ( String [ ] args ) { int ar [ ] = { 1 , 2 , 3 , 4 , 5 } ; int n = ar . length ; System . out . printf ( \"%d\" , product ( ar , n ) ) ; } }",
            "python_code": "MOD = 1000000007 NEWLINE def product ( ar , n ) : NEWLINE INDENT result = 1 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT result = ( result * ar [ i ] ) % MOD NEWLINE DEDENT return result NEWLINE DEDENT ar = [ 1 , 2 , 3 , 4 , 5 ] NEWLINE n = len ( ar ) NEWLINE print ( product ( ar , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_873_A_2423",
            "java_code": "import java . util . Scanner ;  public class JavaApplication1 {   public static void main ( String [ ] args ) { Scanner read = new Scanner ( System . in ) ; int n , k , x , f , t = 0 , j ; n = read . nextInt ( ) ; k = read . nextInt ( ) ; x = read . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { f = read . nextInt ( ) ; if ( i <= n - k ) { t += f ; } } j = t + k * x ; System . out . println ( j ) ; } }",
            "python_code": "n , k , x = map ( int , input ( ) . split ( ' ' ) ) chores = list ( map ( int , input ( ) . split ( ' ' ) ) ) print ( k * x + sum ( chores [ 0 : n - k ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_359_A_2424",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { int x = in . nextInt ( ) ; if ( x == 1 ) { if ( i == 0 || i == n - 1 || j == 0 || j == m - 1 ) ans = 2 ; else if ( ans != 2 ) ans = 4 ; } } } System . out . println ( ans ) ; } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = [ r ( ) for _ in range ( a ) ]  f = Falsefor i in range ( a ) : for j in range ( b ) : if arr [ i ] [ j ] == 1 and ( i == 0 or i == a - 1 or j == 0 or j == b - 1 ) : f = True break   print ( 2 if f else 4 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_832_A_2425",
            "java_code": "import java . util . * ; public class contest18 { static Scanner scn = new Scanner ( System . in ) ; public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) m = n // kif ( m % 2 == 0 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_959_A_2426",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; if ( n % 2 == 0 ) System . out . println ( \"Mahmoud\" ) ; else System . out . println ( \"Ehab\" ) ;   }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 1 : print ( \"Ehab\" ) else : print ( \"Mahmoud\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_929_A_2427",
            "java_code": "import java . io . BufferedInputStream ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . LinkedList ; import java . util . List ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . TreeSet ;  public class Main extends Thread { ",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) t = list ( map ( int , input ( ) . split ( ) ) ) l = [ 0 ] ch = 1 i = 0 p2 = 0 while i < n - 1 : pepe = 0 j = i + 1 while j < n : if t [ j ] - t [ i ] <= k : j += 1 else : c1 = j - 1 ch += 1 pepe = 5 break if pepe == 5 : i = j - 1 else : i += 1 if i in l : p2 = 5 break else : l . append ( i ) print ( ch if p2 == 0 else \"-1\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_836_A_2428",
            "java_code": "class GFG { static float angleOncirCumference ( float z ) { return ( z / 2 ) ; } public static void main ( String [ ] args ) { float angle = 65 ; float z = angleOncirCumference ( angle ) ; System . out . println ( \"The angle is \" + z + \" degrees\" ) ; } }",
            "python_code": "def angleOncirCumference ( z ) : NEWLINE INDENT return ( z / 2 ) ; NEWLINE DEDENT angle = 65 ; NEWLINE z = angleOncirCumference ( angle ) ; NEWLINE print ( \"The angle is\" , ( z ) , \"degrees\" ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4473_A_2429",
            "java_code": "class GFG { static long nextFibonacci ( int n ) { double a = n * ( 1 + Math . sqrt ( 5 ) ) / 2.0 ; return Math . round ( a ) ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( nextFibonacci ( n ) ) ; } }",
            "python_code": "from math import * NEWLINE def nextFibonacci ( n ) : NEWLINE INDENT a = n * ( 1 + sqrt ( 5 ) ) / 2.0 NEWLINE return round ( a ) NEWLINE DEDENT n = 5 NEWLINE print ( nextFibonacci ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_980_A_2430",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigInteger ; import java . util . Scanner ; import java . util . StringTokenizer ;   public class Main {    public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) a = s . count ( '-' ) b = len ( s ) - aif not a or not b : print ( 'YES' ) elif a % b == 0 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1389_A_2431",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; while ( in . hasNext ( ) ) { int t = in . nextInt ( ) ; for ( int i = 1 ; i <= t ; i ++ ) { int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; if ( b < a * 2 ) { System . out . println ( \"-1\" + \" \" + \"-1\" ) ; } else { System . out . println ( a + \" \" + 2 * a ) ; } } } } }",
            "python_code": "a = int ( input ( ) ) NEWLINE for i in range ( a ) : NEWLINE INDENT l , r = ( map ( int , input ( ) . split ( ) ) ) NEWLINE if 2 * l > r : NEWLINE INDENTINDENT print ( \"-1 -1\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( str ( l ) + \" \" + str ( 2 * ( l ) ) ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1904_A_2432",
            "java_code": "class Subset_sum { static int countStrings ( int n ) { int a [ ] = new int [ n ] ; int b [ ] = new int [ n ] ; a [ 0 ] = b [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { a [ i ] = a [ i - 1 ] + b [ i - 1 ] ; b [ i ] = a [ i - 1 ] ; } return a [ n - 1 ] + b [ n - 1 ] ; } public static void main ( String args [ ] ) { System . out . println ( countStrings ( 3 ) ) ; } }",
            "python_code": "def countStrings ( n ) : NEWLINE INDENT a = [ 0 for i in range ( n ) ] NEWLINE b = [ 0 for i in range ( n ) ] NEWLINE a [ 0 ] = b [ 0 ] = 1 NEWLINE for i in range ( 1 , n ) : NEWLINE INDENTINDENT a [ i ] = a [ i - 1 ] + b [ i - 1 ] NEWLINE b [ i ] = a [ i - 1 ] NEWLINE DEDENT return a [ n - 1 ] + b [ n - 1 ] NEWLINE DEDENT print ( countStrings ( 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_282_B_2433",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) ) inp = inputs = '' a , g = 0 , 0 for i in range ( n ) : x , y = map ( int , inp ( ) . split ( ) ) if a + x - g <= 500 : a += x s += 'A' else : g += y s += 'G' if abs ( a - g ) <= 500 : print ( s ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2589_A_2434",
            "java_code": "class GFG { static int getFirstSetBitPos ( int n ) { return ( int ) ( Math . log ( n & - n ) / Math . log ( 2 ) ) + 1 ; } static int previousSmallerInteger ( int n ) { int pos = getFirstSetBitPos ( n ) ; return ( n & ~ ( 1 << ( pos - 1 ) ) ) ; } public static void main ( String [ ] args ) { int n = 25 ; System . out . print ( \"Previous smaller Integer =\" + previousSmallerInteger ( n ) ) ; } }",
            "python_code": "import math NEWLINE def getFirstSetBitPos ( n ) : NEWLINE INDENT return ( int ) ( math . log ( n & - n ) / math . log ( 2 ) ) + 1 NEWLINE DEDENT def previousSmallerInteger ( n ) : NEWLINE INDENT pos = getFirstSetBitPos ( n ) NEWLINE return ( n & ~ ( 1 << ( pos - 1 ) ) ) NEWLINE DEDENT n = 25 NEWLINE print ( \"Previous small Integer = \" , previousSmallerInteger ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1114_A_2435",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import sysdef get_ints ( ) : return list ( map ( int , sys . stdin . readline ( ) . strip ( ) . split ( ) ) ) li1 = get_ints ( ) li2 = get_ints ( ) if li2 [ 0 ] - li1 [ 0 ] >= 0 : li2 [ 0 ] -= li1 [ 0 ] summ = sum ( li2 ) if sum ( li2 [ : 2 ] ) >= li1 [ 1 ] : if summ - ( li1 [ 1 ] ) >= li1 [ 2 ] : print ( 'yes' ) else : print ( 'No' ) else : print ( 'no' ) else : print ( 'NO' )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2070_A_2436",
            "java_code": "class GFG { static long binomialCoeff ( int n , int k ) { long res = 1 ; if ( k > n - k ) k = n - k ; for ( int i = 0 ; i < k ; ++ i ) { res *= ( n - i ) ; res /= ( i + 1 ) ; } return res ; } static long catalan ( int n ) { long c = binomialCoeff ( 2 * n , n ) ; return c / ( n + 1 ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( catalan ( n ) ) ; } }",
            "python_code": "def binomialCoeff ( n , k ) : NEWLINE INDENT res = 1 ; NEWLINE if ( k > n - k ) : NEWLINE INDENTINDENT k = n - k ; NEWLINE DEDENT for i in range ( k ) : NEWLINE INDENTINDENT res *= ( n - i ) ; NEWLINE res /= ( i + 1 ) ; NEWLINE DEDENT return res ; NEWLINE DEDENT def catalan ( n ) : NEWLINE INDENT c = binomialCoeff ( 2 * n , n ) ; NEWLINE return int ( c / ( n + 1 ) ) ; NEWLINE DEDENT n = 3 ; NEWLINE print ( catalan ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3648_A_2437",
            "java_code": "public class GFG { public static int checkValidity ( int a , int b , int c ) { if ( a + b <= c || a + c <= b || b + c <= a ) return 0 ; else return 1 ; } public static void main ( String args [ ] ) { int a = 7 , b = 10 , c = 5 ; if ( ( checkValidity ( a , b , c ) ) == 1 ) System . out . print ( \"Valid\" ) ; else System . out . print ( \"Invalid\" ) ; } }",
            "python_code": "def checkValidity ( a , b , c ) : NEWLINE INDENT if ( a + b <= c ) or ( a + c <= b ) or ( b + c <= a ) : NEWLINE INDENTINDENT return False NEWLINE DEDENT else : NEWLINE INDENTINDENT return True NEWLINE DEDENT DEDENT a = 7 NEWLINE b = 10 NEWLINE c = 5 NEWLINE if checkValidity ( a , b , c ) : NEWLINE INDENT print ( \"Valid\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"Invalid\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1377_A_2438",
            "java_code": "import java . util . * ; class GFG { static int countSubSeq ( int arr [ ] , int n , int k ) { int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k == 0 ) { count ++ ; } } return ( int ) ( Math . pow ( 2 , count ) - 1 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 6 } ; int n = arr . length ; int k = 3 ; System . out . println ( countSubSeq ( arr , n , k ) ) ; } }",
            "python_code": "def countSubSeq ( arr , n , k ) : NEWLINE INDENT count = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] % k == 0 ) : NEWLINE INDENTINDENTINDENT count += 1 ; NEWLINE DEDENT DEDENT return ( 2 ** count - 1 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 3 , 6 ] ; NEWLINE n = len ( arr ) ; NEWLINE k = 3 ; NEWLINE print ( countSubSeq ( arr , n , k ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4645_A_2439",
            "java_code": "import java . io . * ; class GFG { static double sumOfSeries ( int n ) { return ( 0.666 ) * ( 1 - 1 / Math . pow ( 10 , n ) ) ; } public static void main ( String [ ] args ) { int n = 2 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def sumOfSeries ( n ) : NEWLINE INDENT return ( ( 0.666 ) * ( 1 - 1 / pow ( 10 , n ) ) ) ; NEWLINE DEDENT n = 2 ; NEWLINE print ( sumOfSeries ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_913_A_2440",
            "java_code": "import java . util . * ;  public class Practise {  static int [ ] [ ] dp ;   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) ) m = int ( input ( ) ) x = 1 for i in range ( 0 , n ) : x *= 2 if x > m : breakprint ( m % x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_980_B_2441",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . awt . Point ; public class Main {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) s = '.' * nm = ( k + 1 ) // 2 a = '.' + '#' * m + '.' * ( n - m - 1 ) if k % 2 == 0 : b = aelif k < n : t = ( n - k ) // 2 * '.' a , b = t + '#' * k + t , selse : b = a [ : 2 ] + '.' + a [ 3 : ] print ( 'YES' , s , a , b , s , sep = '\\n' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_303_B_2442",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ;",
            "python_code": "import mathn , m , x , y , a , b = map ( int , input ( ) . split ( ) ) gcd = math . gcd ( a , b ) a //= gcdb //= gcdmax_ratio = min ( n // a , m // b ) a *= max_ratiob *= max_ratiox1 = max ( 0 , min ( x - ( a + 1 ) // 2 , n - a ) ) y1 = max ( 0 , min ( y - ( b + 1 ) // 2 , m - b ) ) print ( x1 , y1 , x1 + a , y1 + b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1403_A_2443",
            "java_code": "class GFG { static StringBuilder findMaximumNum ( StringBuilder str , int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { if ( k < 1 ) break ; if ( str . charAt ( i ) != '9' ) { str . setCharAt ( i , '9' ) ; k -- ; } } return str ; } public static void main ( String [ ] args ) { StringBuilder str = new StringBuilder ( \"569431\" ) ; int n = str . length ( ) ; int k = 3 ; System . out . println ( findMaximumNum ( str , n , k ) ) ; } }",
            "python_code": "def findMaximumNum ( st , n , k ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if ( k < 1 ) : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT if ( st [ i ] != '9' ) : NEWLINE INDENTINDENTINDENT st = st [ 0 : i ] + '9' + st [ i + 1 : ] NEWLINE k -= 1 NEWLINE DEDENT DEDENT return st NEWLINE DEDENT st = \"569431\" NEWLINE n = len ( st ) NEWLINE k = 3 NEWLINE print ( findMaximumNum ( st , n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_50_A_2444",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int k = scanner . nextInt ( ) ; System . out . println ( ( n * k ) / 2 ) ; }  }",
            "python_code": "a , b = [ int ( x ) for x in input ( ) . split ( ) ] print ( a * b // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_110_A_2445",
            "java_code": "import java . io . * ; import java . util . Scanner ; public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; if ( System . getProperty ( \"ONLINE_JUDGE\" ) == null ) { try { System . setOut ( new PrintStream ( new FileOutputStream ( \"output.txt\" ) ) ) ; sc = new Scanner ( new File ( \"input.txt\" ) ) ; } catch ( Exception e ) { } }",
            "python_code": "n = int ( input ( ) ) m = 0 while n > 0 : d = n % 10 if d == 4 or d == 7 : m += 1 n = n // 10 if m == 4 or m == 7 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_227_A_2446",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class WhereDoITurn {",
            "python_code": "import math  a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) c = list ( map ( int , input ( ) . split ( ) ) )  xab = b [ 0 ] - a [ 0 ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4101_A_2447",
            "java_code": "class GFG { static int maxPartition ( String s ) { int n = s . length ( ) , P = 0 ; String current = \"\" , previous = \"\" ; for ( int i = 0 ; i < n ; i ++ ) { current += s . charAt ( i ) ; if ( ! current . equals ( previous ) ) { previous = current ; current = \"\" ; P ++ ; } } return P ; } public static void main ( String [ ] args ) { String s = \"geeksforgeeks\" ; int ans = maxPartition ( s ) ; System . out . println ( ans ) ; } }",
            "python_code": "def maxPartition ( s ) : NEWLINE INDENT n = len ( s ) NEWLINE P = 0 NEWLINE current = \"\" NEWLINE previous = \"\" NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT current += s [ i ] NEWLINE if ( current != previous ) : NEWLINE INDENTINDENTINDENT previous = current NEWLINE current = \"\" NEWLINE P += 1 NEWLINE DEDENT DEDENT return P NEWLINE DEDENT s = \"geeksforgeeks\" NEWLINE ans = maxPartition ( s ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3289_A_2448",
            "java_code": "class CountSubString { int countSubStr ( char str [ ] , int n ) { int m = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( str [ i ] == '1' ) m ++ ; } return m * ( m - 1 ) / 2 ; } public static void main ( String [ ] args ) { CountSubString count = new CountSubString ( ) ; String string = \"00100101\" ; char str [ ] = string . toCharArray ( ) ; int n = str . length ; System . out . println ( count . countSubStr ( str , n ) ) ; } }",
            "python_code": "def countSubStr ( st , n ) : NEWLINE INDENT m = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( st [ i ] == '1' ) : NEWLINE INDENTINDENTINDENT m = m + 1 NEWLINE DEDENT DEDENT return m * ( m - 1 ) // 2 NEWLINE DEDENT st = \"00100101\" ; NEWLINE list ( st ) NEWLINE n = len ( st ) NEWLINE print ( countSubStr ( st , n ) , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_134_B_2449",
            "java_code": "import java . util . * ; import java . io . * ; public class Solution { static int t ; static int gcd ( int x , int y ) { if ( y == 0 ) return x ; t += x / y ; return gcd ( y , x % y ) ; } public static class Suffix implements Comparable < Suffix > { int index ; int rank ; int next ; public Suffix ( int ind , int r , int nr ) { index = ind ; rank = r ; next = nr ; }",
            "python_code": "n , ans = int ( input ( ) ) , 1000000 for i in range ( 1 , n + 1 ) : k , a , b = 0 , n , i while b > 1 : k += a // b a , b = b , a % b if b != 0 : ans = min ( ans , a - 1 + k ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_46_A_2450",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int c = 1 ; int k = 2 ; System . out . print ( 2 + \" \" ) ; for ( int i = 0 ; i < n - 2 ; i ++ ) { c ++ ; k += c ; if ( k % n == 0 ) { System . out . print ( n + \" \" ) ; } else System . out . print ( k % n + \" \" ) ; } } }",
            "python_code": "n = int ( input ( ) ) a = 0 b = [ ] for i in range ( 1 , n ) : a = ( a + i ) % n b . append ( a + 1 ) print ( * b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_117_B_2451",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { FastScanner in = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; new Main ( ) . run ( in , out ) ; out . close ( ) ; }  void run ( FastScanner in , PrintWriter out ) { int a = in . nextInt ( ) ; int b = in . nextInt ( ) ; int mod = in . nextInt ( ) ; if ( mod <= b ) {",
            "python_code": "a , b , m = map ( int , input ( ) . split ( ) ) c = ( 10 ** 9 ) % mans = - 1 for x in range ( 1 , min ( a + 1 , m ) ) : z = ( x * c ) % m if z == 0 : continue if z + b < m : ans = x breakif ans == - 1 : print ( 2 ) else : s = str ( ans ) s = ( '0' * 9 + s ) [ - 9 : ] print ( 1 , s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_860_A_2452",
            "java_code": "class Test { static int FirstDigit ( int arr [ ] , int n ) { double S = 0 ; for ( int i = 0 ; i < n ; i ++ ) S = S + Math . log10 ( arr [ i ] * 1.0 ) ; double fract_S = S - Math . floor ( S ) ; int ans = ( int ) Math . pow ( 10 , fract_S ) ; return ans ; } public static void main ( String args [ ] ) { int arr [ ] = { 5 , 8 , 3 , 7 } ; System . out . println ( FirstDigit ( arr , arr . length ) ) ; } }",
            "python_code": "import math NEWLINE def FirstDigit ( arr , n ) : NEWLINE INDENT S = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT S = S + math . log10 ( arr [ i ] * 1.0 ) NEWLINE DEDENT fract_S = S - math . floor ( S ) NEWLINE ans = math . pow ( 10 , fract_S ) NEWLINE return ans NEWLINE DEDENT arr = [ 5 , 8 , 3 , 7 ] NEWLINE n = len ( arr ) NEWLINE print ( ( int ) ( FirstDigit ( arr , n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_172_A_2453",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner sx = new Scanner ( System . in ) ; int n = sx . nextInt ( ) ; int i = 1 ; String s1 = sx . next ( ) ;",
            "python_code": "a = int ( input ( ) ) c = [ ]  cnt = 0 for i in range ( a ) : c . append ( input ( ) )  for i in range ( 0 , len ( c [ 0 ] ) ) : b = 0 for j in range ( 1 , a ) : if c [ j ] [ i ] == c [ 0 ] [ i ] : b += 1 else : break if b == a - 1 : cnt += 1 else : breakprint ( cnt )                                                         NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2151_A_2454",
            "java_code": "class GFG { static float Conversion ( float n ) { return ( n - 32.0f ) * 5.0f / 9.0f ; } public static void main ( String [ ] args ) { float n = 40 ; System . out . println ( Conversion ( n ) ) ; } }",
            "python_code": "def Conversion ( n ) : NEWLINE INDENT return ( n - 32.0 ) * 5.0 / 9.0 NEWLINE DEDENT n = 40 NEWLINE x = Conversion ( n ) NEWLINE print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2324_A_2455",
            "java_code": "public class Digits { static long firstkdigits ( int n , int k ) { long product = 1 ; for ( int i = 0 ; i < n ; i ++ ) product *= n ; while ( ( int ) ( product / Math . pow ( 10 , k ) ) != 0 ) product = product / 10 ; return product ; } public static void main ( String [ ] args ) { int n = 15 ; int k = 4 ; System . out . println ( firstkdigits ( n , k ) ) ; } }",
            "python_code": "def firstkdigits ( n , k ) : NEWLINE INDENT product = 1 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT product *= n NEWLINE DEDENT while ( ( product // pow ( 10 , k ) ) != 0 ) : NEWLINE INDENTINDENT product = product // 10 NEWLINE DEDENT return product NEWLINE DEDENT n = 15 NEWLINE k = 4 NEWLINE print ( firstkdigits ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_472_A_2456",
            "java_code": "import java . util . Scanner ;  public class LearnFromMath { public static boolean isPrime ( int n ) { if ( n <= 1 ) { return false ; } if ( n == 2 ) { return true ; } for ( int i = 3 ; i < n ; i += 2 ) { if ( n % i == 0 ) { return false ; } } return true ; }  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int n = sc . nextInt ( ) ;  if ( n % 2 == 0 ) { int x = n / 2 ; int y = n / 2 ;",
            "python_code": "n = int ( input ( ) ) if ( n % 2 == 0 ) : print ( 4 , n - 4 ) else : print ( 9 , n - 9 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1970_A_2457",
            "java_code": "import java . io . * ; class GFG { static int pairORSum ( int arr [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) ans += arr [ i ] ^ arr [ j ] ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 9 , 7 , 6 } ; int n = arr . length ; System . out . println ( pairORSum ( arr , arr . length ) ) ; } }",
            "python_code": "def pairORSum ( arr , n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT ans = ans + ( arr [ i ] ^ arr [ j ] ) NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 5 , 9 , 7 , 6 ] NEWLINE n = len ( arr ) NEWLINE print ( pairORSum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_741_A_2458",
            "java_code": "from math import gcdn = int ( input ( ) ) arr = map ( int , input ( ) . split ( ) ) arr = list ( map ( lambda x : x - 1 , arr ) )  res = 1f or i in range ( n ) : p , k = 0 , i for j in range ( n ) : k = arr [ k ] if k == i : p = j break if k != i : print ( - 1 ) exit ( ) p += 1 if p % 2 == 0 : p",
            "python_code": "from math import gcdn = int ( input ( ) ) arr = map ( int , input ( ) . split ( ) ) arr = list ( map ( lambda x : x - 1 , arr ) )  res = 1 for i in range ( n ) : p , k = 0 , i for j in range ( n ) : k = arr [ k ] if k == i : p = j break if k != i : print ( - 1 ) exit ( ) p += 1 if p % 2 == 0 : p //= 2 res = res * p // gcd ( res , p ) print ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_747_A_2459",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int n = scan . nextInt ( ) ; int m = n ; int z = 1 ; for ( int i = 1 ; i < n ; i ++ ) { if ( n % i == 0 ) if ( Math . abs ( n / i - i ) < Math . abs ( m - z ) ) { m = i ; z = n / i ; } } if ( z > m ) { int temp = z ; z = m ; m = temp ; } System . out . println ( z + \" \" + m ) ;",
            "python_code": "n = int ( input ( ) ) a = int ( n ** .5 ) while n % a : a -= 1 print ( a , n // a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3681_A_2460",
            "java_code": "import java . util . * ; class GFG { public static long minPerimeter ( int n ) { int l = ( int ) Math . sqrt ( n ) ; int sq = l * l ; if ( sq == n ) return l * 4 ; else { long row = n / l ; long perimeter = 2 * ( l + row ) ; if ( n % l != 0 ) perimeter += 2 ; return perimeter ; } } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( minPerimeter ( n ) ) ; } }",
            "python_code": "import math NEWLINE def minPerimeter ( n ) : NEWLINE INDENT l = math . sqrt ( n ) NEWLINE sq = l * l NEWLINE if ( sq == n ) : NEWLINE INDENTINDENT return l * 4 NEWLINE DEDENT else : NEWLINE INDENTINDENT row = n / l NEWLINE perimeter = 2 * ( l + row ) NEWLINE if ( n % l != 0 ) : NEWLINE INDENTINDENTINDENT perimeter += 2 NEWLINE DEDENT return perimeter NEWLINE DEDENT DEDENT n = 10 NEWLINE print ( int ( minPerimeter ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3254_A_2461",
            "java_code": "class GFG { static int checkArray ( int [ ] arr , int n ) { return ( ( arr [ 0 ] % 2 ) > 0 && ( arr [ n - 1 ] % 2 ) > 0 && ( n % 2 ) > 0 ) ? 1 : 0 ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 4 , 5 } ; int n = arr . length ; System . out . println ( checkArray ( arr , n ) ) ; } }",
            "python_code": "def checkArray ( arr , n ) : NEWLINE INDENT return ( ( arr [ 0 ] % 2 ) and ( arr [ n - 1 ] % 2 ) and ( n % 2 ) ) NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 ] NEWLINE n = len ( arr ) ; NEWLINE if checkArray ( arr , n ) : NEWLINE INDENT print ( 1 ) NEWLINE DEDENT else : NEWLINE INDENT print ( 0 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1340_A_2462",
            "java_code": "import java . util . * ; class GFG { static boolean isPossible ( int x , int y ) { if ( ( x - y ) == 1 ) return false ; return true ; } public static void main ( String [ ] args ) { int x = 100 , y = 98 ; if ( isPossible ( x , y ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isPossible ( x , y ) : NEWLINE INDENT if ( ( x - y ) == 1 ) : NEWLINE INDENTINDENT return False NEWLINE DEDENT return True NEWLINE DEDENT x = 100 NEWLINE y = 98 NEWLINE if ( isPossible ( x , y ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_205_B_2463",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_190_A_2464",
            "java_code": "import java . util . * ;   public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int m = input . nextInt ( ) ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) if m == 0 : print ( n , n ) elif n == 0 : print ( 'Impossible' ) else : print ( max ( n , m ) , n + m - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_281_B_2465",
            "java_code": "import java . io . * ; import java . util . * ; public class f10 { static public void process ( double x , double y , int n ) { double max = 100001 ; int a = 0 , b = 0 ; for ( int den = 1 ; den <= n ; den ++ ) { double num = ( x / y ) * den ;",
            "python_code": "from fractions import Fractionx , y , n = map ( int , input ( ) . split ( ) ) v = Fraction ( x , y ) . limit_denominator ( n ) print ( v . numerator , v . denominator , sep = '/' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_007_A_2466",
            "java_code": "class Solution { public int reverse ( int x ) { if ( x == 0 ) return 0 ; long res = 0 ; while ( x != 0 ) { res = res * 10 + x % 10 ; if ( res > Integer . MAX_VALUE || res < Integer . MIN_VALUE ) return 0 ; x /= 10 ; } return ( int ) res ; } }",
            "python_code": "class Solution : NEWLINE INDENT def reverse ( self , x ) : NEWLINE INDENTINDENT res , isPos = 0 , 1 NEWLINE if x < 0 : NEWLINE INDENTINDENTINDENT isPos = - 1 NEWLINE x = - 1 * x NEWLINE DEDENT while x != 0 : NEWLINE INDENTINDENTINDENT res = res * 10 + x % 10 NEWLINE if res > 2147483647 : NEWLINE INDENTINDENTINDENTINDENT return 0 NEWLINE DEDENT x /= 10 NEWLINE DEDENT return res * isPos NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p016_A_2467",
            "java_code": "import java . math . BigInteger ; public final class p016 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p016 ( ) . run ( ) ) ; } public String run ( ) { String temp = BigInteger . ONE . shiftLeft ( 1000 ) . toString ( ) ; int sum = 0 ; for ( int i = 0 ; i < temp . length ( ) ; i ++ ) sum += temp . charAt ( i ) - '0' ; return Integer . toString ( sum ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT n = 2 ** 1000 NEWLINE ans = sum ( int ( c ) for c in str ( n ) ) NEWLINE return str ( ans ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_934_A_2468",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "p , q = map ( int , input ( ) . split ( ) ) a = [ ] b = [ ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1345_A_2469",
            "java_code": "import java . util . Scanner ;  public class PuzzlePieces { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; if ( n == 1 || m == 1 ) System . out . println ( \"Yes\" ) ; else if ( n == 2 && m == 2 ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : x , y = list ( map ( int , input ( ) . split ( ) ) ) if ( x * y <= x + y ) : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1037_A_2470",
            "java_code": "class GFG { static void findFactors ( int a , int b ) { int c ; c = a + b - 1 ; System . out . print ( c ) ; } public static void main ( String [ ] args ) { int a , b ; a = 13 ; b = 36 ; findFactors ( a , b ) ; } }",
            "python_code": "def findFactors ( a , b ) : NEWLINE INDENT c = a + b - 1 NEWLINE print ( c ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 13 NEWLINE b = 36 NEWLINE findFactors ( a , b ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_985_A_2471",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Ideone { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) p = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 k = 0 p . sort ( ) for i in range ( 1 , n , 2 ) : ans += abs ( p [ i // 2 ] - i ) for i in range ( 2 , n + 1 , 2 ) : k += abs ( p [ i // 2 - 1 ] - i ) print ( min ( ans , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1484_A_2472",
            "java_code": "import java . util . * ; import java . io . * ; class GFG { static void findElements ( int arr [ ] , int n ) { Arrays . sort ( arr ) ; for ( int i = 0 ; i < n - 2 ; i ++ ) System . out . print ( arr [ i ] + \" \" ) ; } public static void main ( String args [ ] ) { int arr [ ] = { 2 , - 6 , 3 , 5 , 1 } ; int n = arr . length ; findElements ( arr , n ) ; } }",
            "python_code": "def findElements ( arr , n ) : NEWLINE INDENT arr . sort ( ) NEWLINE for i in range ( 0 , n - 2 ) : NEWLINE INDENTINDENT print ( arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT arr = [ 2 , - 6 , 3 , 5 , 1 ] NEWLINE n = len ( arr ) NEWLINE findElements ( arr , n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1283_A_2473",
            "java_code": "import java . util . Scanner ;  public class Minutes_Before_the_Year {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ;  while ( n -- != 0 ) { System . out . println ( 1440 - ( in . nextInt ( ) * 60 + in . nextInt ( ) ) ) ; } } }",
            "python_code": "a = int ( input ( ) ) for _ in range ( a ) : count = 0 h , m = input ( ) . split ( ) h = int ( h ) m = int ( m ) count += 60 - m h += 1 count += 60 * ( 24 - h ) print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_224_B_2474",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int maxN = ( int ) 1e6 ;",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) d = { } i = 1 for x in arr : if len ( d ) == m : break d [ x ] = i i += 1 if len ( d ) == m : print ( min ( d . values ( ) ) , max ( d . values ( ) ) ) else : print ( - 1 , - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_458_A_2475",
            "java_code": "class Solution { public int poorPigs ( int buckets , int minutesToDie , int minutesToTest ) { int n = minutesToTest / minutesToDie + 1 ; int pigs = 0 ; while ( Math . pow ( n , pigs ) < buckets ) pigs ++ ; return pigs ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def poorPigs ( self , buckets , minutesToDie , minutesToTest ) : NEWLINE INDENTINDENT pigs = 0 NEWLINE while ( minutesToTest / minutesToDie + 1 ) ** pigs < buckets : NEWLINE INDENTINDENTINDENT pigs += 1 NEWLINE DEDENT return pigs NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1141_A_2476",
            "java_code": "import java . util . * ; public class game23 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int c = 0 ; while ( n < x ) { if ( x % ( 3 * n ) == 0 ) { n *= 3 ; ++ c ; } else if ( x % ( 2 * n ) == 0 ) { n *= 2 ; ++ c ; } else { System . out . print ( - 1 ) ; return ; } } System . out . print ( c ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) z = m / n NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_193_A_2477",
            "java_code": "import java . io . * ; class GFG { static int Circular ( int n ) { int Result = 1 ; while ( n > 0 ) { Result = Result * n ; n -- ; } return Result ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( Circular ( n - 1 ) ) ; } }",
            "python_code": "def Circular ( n ) : NEWLINE INDENT Result = 1 NEWLINE while n > 0 : NEWLINE INDENTINDENT Result = Result * n NEWLINE n -= 1 NEWLINE DEDENT return Result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 NEWLINE print ( Circular ( n - 1 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2027_A_2478",
            "java_code": "public class base_power { static int calculate ( int n , int power ) { int sum = 0 ; int bp = ( int ) Math . pow ( n , power ) ; while ( bp != 0 ) { int d = bp % 10 ; sum += d ; bp /= 10 ; } return sum ; } public static void main ( String [ ] args ) { int n = 5 ; int power = 4 ; System . out . println ( calculate ( n , power ) ) ; } }",
            "python_code": "def calculate ( n , power ) : NEWLINE INDENT return sum ( [ int ( i ) for i in str ( pow ( n , power ) ) ] ) NEWLINE DEDENT n = 5 NEWLINE power = 4 NEWLINE print ( calculate ( n , power ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_763_B_2479",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; System . out . println ( \"YES\" ) ; for ( int i = 0 ; i < n ; i ++ ) { int x1 = sc . nextInt ( ) ; int y1 = sc . nextInt ( ) ; int x2 = sc . nextInt ( ) ; int y2 = sc . nextInt ( ) ; System . out . println ( ( 12 + 2 * ( x1 % 2 ) + ( y1 % 2 ) ) % 4 + 1 ) ; } } }",
            "python_code": "import sysv = [ int ( x ) for x in sys . stdin . read ( ) . split ( ) ] print ( \"YES\" ) for i in range ( v [ 0 ] ) : print ( 1 + ( v [ 4 * i + 1 ] & 1 ) + 2 * ( v [ 4 * i + 2 ] & 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_268_B_2480",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "n = int ( input ( ) )  result = n  for i in range ( 1 , n ) : result += ( n - i ) * i   print ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1096_A_2481",
            "java_code": "class GFG { static void nDigitPerfectSquares ( int n ) { int smallest = ( int ) Math . pow ( Math . ceil ( Math . sqrt ( Math . pow ( 10 , n - 1 ) ) ) , 2 ) ; System . out . print ( smallest + \" \" ) ; int largest = ( int ) Math . pow ( Math . ceil ( Math . sqrt ( Math . pow ( 10 , n ) ) ) - 1 , 2 ) ; System . out . print ( largest ) ; } public static void main ( String args [ ] ) { int n = 4 ; nDigitPerfectSquares ( n ) ; } }",
            "python_code": "import math NEWLINE def nDigitPerfectSquares ( n ) : NEWLINE INDENT print ( pow ( math . ceil ( math . sqrt ( pow ( 10 , n - 1 ) ) ) , 2 ) , end = \" \" ) ; NEWLINE print ( pow ( math . ceil ( math . sqrt ( pow ( 10 , n ) ) ) - 1 , 2 ) ) ; NEWLINE DEDENT n = 4 ; NEWLINE nDigitPerfectSquares ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1924_A_2482",
            "java_code": "import java . util . * ; class GFG { static int getRemainder ( int num , int divisor ) { while ( num >= divisor ) num -= divisor ; return num ; } public static void main ( String [ ] args ) { int num = 100 , divisor = 7 ; System . out . println ( getRemainder ( num , divisor ) ) ; } }",
            "python_code": "def getRemainder ( num , divisor ) : NEWLINE INDENT while ( num >= divisor ) : NEWLINE INDENTINDENT num -= divisor ; NEWLINE DEDENT return num ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT num = 100 ; divisor = 7 ; NEWLINE print ( getRemainder ( num , divisor ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1492_A_2483",
            "java_code": "import java . util . * ; public class Swim3 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { long p = sc . nextLong ( ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; long c = sc . nextLong ( ) ; System . out . println ( Math . min ( ( a - p % a ) % a , Math . min ( ( b - p % b ) % b , ( c - p % c ) % c ) ) ) ; } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : p , * a = map ( int , s . split ( ) ) ; print ( min ( - p % x for x in a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1060_A_2484",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { int n , c = 0 , i , m , k ; String s ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; s = sc . next ( ) ; for ( i = 0 ; i < n ; i ++ ) { if ( s . charAt ( i ) == '8' ) { c ++ ; } } m = n / 11 ; k = m > c ? c : m ; System . out . println ( k ) ; } }",
            "python_code": "n = int ( input ( ) ) str = input ( ) solution = 0 eights = str . count ( \"8\" )  while n >= 11 and eights > 0 : if n >= 11 and eights > 0 : solution += 1 eights -= 1 n -= 11 else : break  print ( solution ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4274_A_2485",
            "java_code": "class Test { static boolean checkYear ( int year ) { return ( ( ( year % 4 == 0 ) && ( year % 100 != 0 ) ) || ( year % 400 == 0 ) ) ; } public static void main ( String [ ] args ) { int year = 2000 ; System . out . println ( checkYear ( 2000 ) ? \"Leap Year\" : \"Not a Leap Year\" ) ; } }",
            "python_code": "def checkYear ( year ) : NEWLINE INDENT return ( ( ( year % 4 == 0 ) and ( year % 100 != 0 ) ) or ( year % 400 == 0 ) ) ; NEWLINE DEDENT year = 2000 NEWLINE if ( checkYear ( year ) ) : NEWLINE INDENT print ( \"Leap Year\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"Not a Leap Year\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_557_A_2486",
            "java_code": "public class Solution { public String reverseWords ( String s ) { String words [ ] = s . split ( \" \" ) ; StringBuilder ans = new StringBuilder ( ) ; for ( String word : words ) ans . append ( new StringBuffer ( word ) . reverse ( ) . toString ( ) + \" \" ) ; return ans . toString ( ) . trim ( ) ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def reverseWords ( self , s ) : NEWLINE INDENTINDENT return ' ' . join ( [ word [ : : - 1 ] for word in s . split ( ' ' ) ] ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1178_A_2487",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "for _ in range ( 1 ) : n = int ( input ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1362_B_2488",
            "java_code": "import java . util . * ; public class JohnnyAndHobbies {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) while ( t > 0 ) : n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) s = set ( l ) a = max ( l ) b = 1 while ( b < a ) : b = b * 2 if ( a == b ) : b = b * 2 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3992_A_2489",
            "java_code": "import java . util . * ; class GFG { static void count_unique ( HashSet < Integer > s , int n ) { if ( s . contains ( n ) ) return ; s . add ( n ) ; n += 1 ; while ( n % 10 == 0 ) { n = n / 10 ; } count_unique ( s , n ) ; } public static void main ( String [ ] args ) { int n = 10 ; HashSet < Integer > s = new HashSet < > ( ) ; count_unique ( s , n ) ; System . out . println ( s . size ( ) ) ; } }",
            "python_code": "def count_unique ( s , n ) : NEWLINE INDENT if ( s . count ( n ) ) : NEWLINE INDENTINDENT return ; NEWLINE DEDENT s . append ( n ) ; NEWLINE n += 1 ; NEWLINE while ( n % 10 == 0 ) : NEWLINE INDENTINDENT n = n // 10 ; NEWLINE DEDENT count_unique ( s , n ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 10 NEWLINE s = [ ] NEWLINE count_unique ( s , n ) NEWLINE print ( len ( s ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_339_B_2490",
            "java_code": "import java . util . Scanner ; import java . lang . * ;  public class p339b_Xenia_and_ringroad { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ;  long n = input . nextInt ( ) ; int w = input . nextInt ( ) ;  long a = 0 ; long temp = 1 ; long time = 0 ; long count = 0 ;  for ( int i = 0 ; i < w ; i ++ ) { a = input . nextInt ( ) ; if ( a < temp ) { count ++ ; } temp = a ; } ",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) arr = [ 1 ] + list ( map ( int , input ( ) . split ( ) ) ) ln = len ( arr )  ans = 0 for i in range ( ln - 1 ) : step = arr [ i + 1 ] - arr [ i ]  if step >= 0 : ans += step else : ans += ( step + n )  print ( ans )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4358_A_2491",
            "java_code": "import java . util . * ; class GFG { static int N = 3 ; static void rotateMatrix ( int mat [ ] [ ] ) { for ( int i = N - 1 ; i >= 0 ; i -- ) { for ( int j = N - 1 ; j >= 0 ; j -- ) System . out . print ( mat [ i ] [ j ] + \" \" ) ; System . out . println ( ) ; } } public static void main ( String [ ] args ) { int [ ] [ ] mat = { { 1 , 2 , 3 } , { 4 , 5 , 6 } , { 7 , 8 , 9 } } ; rotateMatrix ( mat ) ; } }",
            "python_code": "N = 3 ; NEWLINE def rotateMatrix ( mat ) : NEWLINE INDENT i = N - 1 ; NEWLINE while ( i >= 0 ) : NEWLINE INDENTINDENT j = N - 1 ; NEWLINE while ( j >= 0 ) : NEWLINE INDENTINDENTINDENT print ( mat [ i ] [ j ] , end = \" \" ) ; NEWLINE j = j - 1 ; NEWLINE DEDENT print ( ) ; NEWLINE i = i - 1 ; NEWLINE DEDENT DEDENT mat = [ [ 1 , 2 , 3 ] , [ 4 , 5 , 6 ] , [ 7 , 8 , 9 ] ] ; NEWLINE rotateMatrix ( mat ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_23_B_2492",
            "java_code": "import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ;  for ( int i = 0 ; i < t ; i ++ ) { int n = s . nextInt ( ) ; System . out . println ( ( n > 1 ) ? ( n - 2 ) : 0 ) ; }  s . close ( ) ; } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : print ( max ( 0 , int ( input ( ) ) - 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_432_B_2493",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n = int ( input ( ) ) a = [ 0 ] * nc = [ 0 ] * 100001 for i in range ( n ) : s , a [ i ] = map ( int , input ( ) . split ( ) ) c [ s ] += 1 for i in range ( n ) : print ( ( n - 1 ) + c [ a [ i ] ] , ( n - 1 ) - c [ a [ i ] ] )         NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2634_A_2494",
            "java_code": "import java . io . * ; class Series { static int term ( int n ) { return n * ( n + 1 ) / 2 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( term ( n ) ) ; } }",
            "python_code": "def term ( n ) : NEWLINE INDENT return n * ( n + 1 ) / 2 NEWLINE DEDENT n = 4 NEWLINE print term ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2084_A_2495",
            "java_code": "class GFG { static long numbers ( int n ) { return ( long ) ( Math . pow ( 2 , n + 1 ) ) - 2 ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( numbers ( n ) ) ; } }",
            "python_code": "def numbers ( n ) : NEWLINE INDENT return pow ( 2 , n + 1 ) - 2 NEWLINE DEDENT n = 2 NEWLINE print ( numbers ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4591_A_2496",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; class GFG { static boolean pronic_check ( int n ) { int x = ( int ) ( Math . sqrt ( n ) ) ; if ( x * ( x + 1 ) == n ) return true ; else return false ; } public static void main ( String [ ] args ) { int n = 56 ; if ( pronic_check ( n ) == true ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "import math NEWLINE def pronic_check ( n ) : NEWLINE INDENT x = ( int ) ( math . sqrt ( n ) ) NEWLINE if ( x * ( x + 1 ) == n ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT else : NEWLINE INDENTINDENT return False NEWLINE DEDENT DEDENT n = 56 NEWLINE if ( pronic_check ( n ) == True ) : NEWLINE INDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_A_2497",
            "java_code": "import java . util . * ;  public class Solve {  static Scanner scan = new Scanner ( System . in ) ;  public static long solve ( long l , long r ) { if ( l == r ) { return l ; } return 2 ; }   public static void main ( String [ ] args ) {  long l = scan . nextLong ( ) ; long r = scan . nextLong ( ) ; System . out . println ( solve ( l , r ) ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) print ( ( n , 2 ) [ n != m ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5010_A_2498",
            "java_code": "import java . io . * ; class GFG { static double sum ( int n ) { double i , s = 0.0 ; for ( i = 1 ; i <= n ; i ++ ) s = s + 1 / i ; return s ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . printf ( \"Sum is %f\" , sum ( n ) ) ; } }",
            "python_code": "def sum ( n ) : NEWLINE INDENT i = 1 NEWLINE s = 0.0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT s = s + 1 / i ; NEWLINE DEDENT return s ; NEWLINE DEDENT n = 5 NEWLINE print ( \"Sum is\" , round ( sum ( n ) , 6 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1239_A_2499",
            "java_code": "import java . util . * ; class GFG { static float trianglearea ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; float area = ( l * b ) / 2 ; return area ; } public static void main ( String args [ ] ) { float l = 5 , b = 4 ; System . out . println ( trianglearea ( l , b ) ) ; } }",
            "python_code": "def trianglearea ( l , b ) : NEWLINE INDENT if ( l < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = ( l * b ) / 2 NEWLINE return area NEWLINE DEDENT l = 5 NEWLINE b = 4 NEWLINE print ( trianglearea ( l , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_A_2500",
            "java_code": "import java . util . * ; public class soldier { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int w = sc . nextInt ( ) ; int s = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { s = s + k * i ; } if ( s >= n ) System . out . println ( s - n ) ; else System . out . println ( 0 ) ; } }",
            "python_code": "k , n , w = map ( int , input ( ) . split ( ) ) t = ( k + w * k ) * w // 2 - nprint ( max ( 0 , t ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_924_B_2501",
            "java_code": "import java . io . * ; import java . util . * ; public class Lvl3Taser {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import mathimport sysfrom collections import dequefrom fractions import Fraction NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1118_A_2502",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;  int q = sc . nextInt ( ) ; while ( q -- > 0 ) { long n = sc . nextLong ( ) , a = sc . nextLong ( ) , b = sc . nextLong ( ) ; System . out . println ( Math . min ( b * ( n / 2 ) + a * ( n % 2 ) , a * n ) ) ; }  } }",
            "python_code": "t = int ( input ( ) ) while ( t ) :  n , a , b = map ( int , input ( ) . split ( ) ) al = 1 bl = 2 cost = 0 if ( ( a // al ) > ( b // bl ) ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2593_A_2503",
            "java_code": "class GFG { static int extraElement ( int A [ ] , int B [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) ans ^= A [ i ] ; for ( int i = 0 ; i < n + 1 ; i ++ ) ans ^= B [ i ] ; return ans ; } public static void main ( String [ ] args ) { int A [ ] = { 10 , 15 , 5 } ; int B [ ] = { 10 , 100 , 15 , 5 } ; int n = A . length ; System . out . println ( extraElement ( A , B , n ) ) ; } }",
            "python_code": "def extraElement ( A , B , n ) : NEWLINE INDENT ans = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT ans ^= A [ i ] ; NEWLINE DEDENT for i in range ( n + 1 ) : NEWLINE INDENTINDENT ans ^= B [ i ] ; NEWLINE DEDENT return ans ; NEWLINE DEDENT A = [ 10 , 15 , 5 ] ; NEWLINE B = [ 10 , 100 , 15 , 5 ] ; NEWLINE n = len ( A ) ; NEWLINE print ( extraElement ( A , B , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3123_A_2504",
            "java_code": "import java . io . * ; class GFG { static int countOddSquares ( int n , int m ) { return ( int ) Math . pow ( m , 0.5 ) - ( int ) Math . pow ( n - 1 , 0.5 ) ; } public static void main ( String [ ] args ) { int n = 5 , m = 100 ; System . out . println ( \"Count is \" + ( ( m - n + 1 ) - countOddSquares ( n , m ) ) ) ; } }",
            "python_code": "def countOddSquares ( n , m ) : NEWLINE INDENT return ( int ( pow ( m , 0.5 ) ) - int ( pow ( n - 1 , 0.5 ) ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; m = 100 ; NEWLINE print ( \"Count is\" , ( m - n + 1 ) - countOddSquares ( n , m ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1065_B_2505",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class Fridge {  static Set < Integer > set ; static long tmin ; static int [ ] ar ; static boolean [ ] visited ; public static void dfs ( HashMap [ ] adj , int u , long curcost ) { if ( set . contains ( u ) || curcost > tmin ) { if ( curcost < tmin ) { tmin = curcost ; } return ; } visited [ u ] = true ;",
            "python_code": "  n , m = map ( int , input ( ) . split ( ) )  ans = 0 u = [ ] s = m  if m > 0 : for j in range ( n ) : if s >= j : s -= j else : if s > 0 : mas = n - ( j + 1 ) break else : mas = n - j break  if m == 0 : mas = nelif m == n * ( n - 1 ) // 2 : mas = 0          print ( max ( 0 , n - ( m * 2 ) ) , mas ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2812_A_2506",
            "java_code": "class GFG { static int countIndices ( int arr [ ] , int n ) { int cnt = 0 ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( max < arr [ i ] ) { max = arr [ i ] ; cnt ++ ; } } return cnt ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 , 4 } ; int n = arr . length ; System . out . println ( countIndices ( arr , n ) ) ; } }",
            "python_code": "def countIndices ( arr , n ) : NEWLINE INDENT cnt = 0 ; NEWLINE max = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( max < arr [ i ] ) : NEWLINE INDENTINDENTINDENT max = arr [ i ] ; NEWLINE cnt += 1 ; NEWLINE DEDENT DEDENT return cnt ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 1 , 2 , 3 , 4 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( countIndices ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5285_A_2507",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static float findRadiusOfcircumcircle ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; float radius = ( float ) Math . sqrt ( Math . pow ( l , 2 ) + Math . pow ( b , 2 ) ) / 2 ; return radius ; } public static void main ( String args [ ] ) { float l = 4 , b = 3 ; System . out . println ( findRadiusOfcircumcircle ( l , b ) ) ; } }",
            "python_code": "import math NEWLINE def findRadiusOfcircumcircle ( l , b ) : NEWLINE INDENT if ( l < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT radius = ( math . sqrt ( pow ( l , 2 ) + pow ( b , 2 ) ) / 2 ) ; NEWLINE return radius ; NEWLINE DEDENT l = 4 ; NEWLINE b = 3 ; NEWLINE print ( findRadiusOfcircumcircle ( l , b ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2977_A_2508",
            "java_code": "class Test { static int arr [ ] = { 10 , 324 , 45 , 90 , 9808 } ; static int largest ( ) { int i ; int max = arr [ 0 ] ; for ( i = 1 ; i < arr . length ; i ++ ) if ( arr [ i ] > max ) max = arr [ i ] ; return max ; } public static void main ( String [ ] args ) { System . out . println ( \"Largest in given array is \" + largest ( ) ) ; } }",
            "python_code": "def largest ( arr , n ) : NEWLINE INDENT return ( max ( arr ) ) NEWLINE DEDENT arr = [ 10 , 324 , 45 , 90 , 9808 ] NEWLINE n = len ( arr ) NEWLINE Ans = largest ( arr , n ) NEWLINE print ( \"Largest in given array is\" , Ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_107_B_2509",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Task {",
            "python_code": "from math import * NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5208_A_2510",
            "java_code": "class Main { static int getMissingNo ( int a [ ] , int n ) { int i , total ; total = ( n + 1 ) * ( n + 2 ) / 2 ; for ( i = 0 ; i < n ; i ++ ) total -= a [ i ] ; return total ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 2 , 4 , 5 , 6 } ; int miss = getMissingNo ( a , 5 ) ; System . out . println ( miss ) ; } }",
            "python_code": "def getMissingNo ( A ) : NEWLINE INDENT n = len ( A ) NEWLINE total = ( n + 1 ) * ( n + 2 ) / 2 NEWLINE sum_of_A = sum ( A ) NEWLINE return total - sum_of_A NEWLINE DEDENT A = [ 1 , 2 , 4 , 5 , 6 ] NEWLINE miss = getMissingNo ( A ) NEWLINE print ( miss ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3902_A_2511",
            "java_code": "import java . io . * ; class GFG { static int CountAllPairs ( int N , int K ) { int count = 0 ; if ( N > K ) { count = N - K ; for ( int i = K + 1 ; i <= N ; i ++ ) count = count + ( ( N - K ) / i ) ; } return count ; } public static void main ( String [ ] args ) { int N = 11 , K = 5 ; System . out . println ( CountAllPairs ( N , K ) ) ; } }",
            "python_code": "import math NEWLINE def CountAllPairs ( N , K ) : NEWLINE INDENT count = 0 NEWLINE if ( N > K ) : NEWLINE INDENTINDENT count = N - K NEWLINE for i in range ( K + 1 , N + 1 ) : NEWLINE INDENTINDENTINDENT count = count + ( ( N - K ) // i ) NEWLINE DEDENT DEDENT return count NEWLINE DEDENT N = 11 NEWLINE K = 5 NEWLINE print ( CountAllPairs ( N , K ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_804_B_2512",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a = input ( ) mod = 1000000007 ans = 0 count_a = 0 for i in a : if i == 'a' : count_a += 1 else : ans += ( pow ( 2 , count_a , mod ) - 1 ) % modprint ( ans % mod ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_346_A_2513",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "from fractions import gcdn = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) d = max ( a ) c = 0 for i in range ( len ( a ) ) : c = gcd ( c , a [ i ] ) result = d // c - nif result % 2 == 0 : print ( \"Bob\" ) else : print ( \"Alice\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1229_A_2514",
            "java_code": "class Test { public static void main ( String args [ ] ) { double r = 3 ; double R = 7 ; float pi = ( float ) 3.14159 ; double Volume = 0 ; Volume = 2 * pi * pi * R * r * r ; System . out . printf ( \"Volume: %f\" , Volume ) ; double Surface = 4 * pi * pi * R * r ; System . out . printf ( \"\\nSurface: %f\" , Surface ) ; } }",
            "python_code": "r = 3 NEWLINE R = 7 NEWLINE pi = 3.14159 NEWLINE Volume = ( float ) ( 2 * pi * pi * R * r * r ) ; NEWLINE print ( \"Volume: \" , Volume ) ; NEWLINE Surface = ( float ) ( 4 * pi * pi * R * r ) ; NEWLINE print ( \"Surface: \" , Surface ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1626_A_2515",
            "java_code": "import java . util . * ; public class SortExample { static void printOrder ( Integer [ ] arr , int k ) { int n = arr . length ; Arrays . sort ( arr , 0 , k ) ; Arrays . sort ( arr , k , n , Collections . reverseOrder ( ) ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , - 1 } ; int k = 4 ; printOrder ( arr , k ) ; System . out . printf ( \"%s\" , Arrays . toString ( arr ) ) ; } }",
            "python_code": "def printOrder ( arr , n , k ) : NEWLINE INDENT a = arr [ 0 : k ] ; NEWLINE a . sort ( ) ; NEWLINE b = arr [ k : n ] ; NEWLINE b . sort ( ) ; NEWLINE b . reverse ( ) ; NEWLINE return a + b ; NEWLINE DEDENT arr = [ 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , - 1 ] ; NEWLINE k = 4 ; NEWLINE n = len ( arr ) ; NEWLINE arr = printOrder ( arr , n , k ) ; NEWLINE for i in range ( n ) : NEWLINE INDENT print ( arr [ i ] , end = \" \" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1487_B_2516",
            "java_code": "import java . util . * ; import java . math . * ; public class CatCycle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int runs = sc . nextInt ( ) ; while ( runs -- > 0 ) { int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) - 1 ; int f = n / 2 ; int out = ( k + ( n % 2 ) * k / f ) % n + 1 ; System . out . println ( out ) ; } } }",
            "python_code": "for s in [ * open ( 0 ) ] [ 1 : ] : n , k = map ( int , s . split ( ) ) ; k -= 1 ; print ( ( k + n % 2 * k // ( n // 2 ) ) % n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_117_A_2517",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . StringTokenizer ;  public class Main { public static void main ( String [ ] args )",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) k = 2 * ( m - 1 ) for i in range ( n ) : s , f , t = map ( int , input ( ) . split ( ) ) d = t % k if s < f : print ( k * ( s <= d ) + f - 1 + t - d ) elif f < s : print ( k * ( d + s > k + 1 ) + k + 1 - f + t - d ) else : print ( t ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2057_A_2518",
            "java_code": "public class GFG { static int msbPos ( int n ) { int pos = 0 ; while ( n != 0 ) { pos ++ ; n = n > > 1 ; } return pos ; } static int josephify ( int n ) { int position = msbPos ( n ) ; int j = 1 << ( position - 1 ) ; n = n ^ j ; n = n << 1 ; n = n | 1 ; return n ; } public static void main ( String [ ] args ) { int n = 41 ; System . out . println ( josephify ( n ) ) ; } }",
            "python_code": "def msbPos ( n ) : NEWLINE INDENT pos = 0 NEWLINE while n != 0 : NEWLINE INDENTINDENT pos += 1 NEWLINE n = n >> 1 NEWLINE DEDENT return pos NEWLINE DEDENT def josephify ( n ) : NEWLINE INDENT position = msbPos ( n ) NEWLINE j = 1 << ( position - 1 ) NEWLINE n = n ^ j NEWLINE n = n << 1 NEWLINE n = n | 1 NEWLINE return n NEWLINE DEDENT n = 41 NEWLINE print ( josephify ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2042_A_2519",
            "java_code": "public class GFG { public static int getSum ( int arr [ ] , int p ) { return arr . length ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 6 , 8 } ; int p = 7 ; System . out . print ( getSum ( arr , p ) ) ; } }",
            "python_code": "def getSum ( arr , p ) : NEWLINE INDENT return len ( arr ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 5 , 6 , 8 ] NEWLINE p = 7 NEWLINE print ( getSum ( arr , p ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1331_B_2520",
            "java_code": "import java . io . * ; import java . util . * ; public class T { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int loops = sc . nextInt ( ) ; for ( int i = 2 ; i <= loops ; i ++ ) while ( loops % i == 0 ) { System . out . print ( i ) ; loops /= i ; } } }",
            "python_code": "k = int ( input ( ) ) i = 2 while k % i != 0 : i += 1 print ( str ( i ) + str ( k // i ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2265_A_2521",
            "java_code": "public class GFG { static int add ( int x , int y ) { while ( y > 0 && y != 0 ) { x ++ ; y -- ; } while ( y < 0 && y != 0 ) { x -- ; y ++ ; } return x ; } public static void main ( String args [ ] ) { System . out . println ( add ( 43 , 23 ) ) ; System . out . println ( add ( 43 , - 23 ) ) ; } }",
            "python_code": "INDENT while ( y > 0 and y ) : NEWLINE INDENTINDENT x = x + 1 NEWLINE y = y - 1 NEWLINE DEDENT while ( y < 0 and y ) : NEWLINE INDENTINDENT x = x - 1 NEWLINE y = y + 1 NEWLINE DEDENT return x NEWLINE DEDENT print ( add ( 43 , 23 ) ) NEWLINE print ( add ( 43 , - 23 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2972_A_2522",
            "java_code": "import java . util . * ; class GFG { public static int findMaxRec ( int A [ ] , int n ) { if ( n == 1 ) return A [ 0 ] ; return Math . max ( A [ n - 1 ] , findMaxRec ( A , n - 1 ) ) ; } public static void main ( String args [ ] ) { int A [ ] = { 1 , 4 , 45 , 6 , - 50 , 10 , 2 } ; int n = A . length ; System . out . println ( findMaxRec ( A , n ) ) ; } }",
            "python_code": "def findMaxRec ( A , n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return A [ 0 ] NEWLINE DEDENT return max ( A [ n - 1 ] , findMaxRec ( A , n - 1 ) ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT A = [ 1 , 4 , 45 , 6 , - 50 , 10 , 2 ] NEWLINE n = len ( A ) NEWLINE print ( findMaxRec ( A , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_412_B_2523",
            "java_code": "import java . io . * ; import java . util . * ;  public class P1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; System . out . println ( a [ n - k ] ) ; } }",
            "python_code": "a , b = map ( int , input ( ) . split ( ) )  r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = r ( ) arr . sort ( reverse = True ) print ( min ( arr [ : b ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_235_A_2524",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c705a {",
            "python_code": "import math , sys , bisect , heapq , osfrom collections import defaultdict , Counter , dequefrom itertools import groupby , accumulatefrom functools import lru_cache NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2460_A_2525",
            "java_code": "import java . io . * ; class GFG { static float Area ( float a , float b ) { if ( a < 0 && b < 0 ) return - 1 ; float h = ( float ) Math . sqrt ( ( ( Math . pow ( a , 2 ) + Math . pow ( b , 2 ) ) / ( Math . pow ( a , 2 ) * Math . pow ( b , 2 ) ) ) ) ; float A = ( float ) ( 0.70477 * Math . pow ( h , 2 ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 5 , b = 4 ; System . out . println ( Area ( a , b ) ) ; } }",
            "python_code": "import math ; NEWLINE def Area ( a , b ) : NEWLINE INDENT if ( a < 0 and b < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT h = math . sqrt ( ( ( pow ( a , 2 ) + pow ( b , 2 ) ) / ( pow ( a , 2 ) * pow ( b , 2 ) ) ) ) ; NEWLINE A = 0.70477 * pow ( h , 2 ) ; NEWLINE return A ; NEWLINE DEDENT a = 5 ; NEWLINE b = 4 ; NEWLINE print ( round ( Area ( a , b ) , 7 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1953_A_2526",
            "java_code": "import java . io . * ; class GFG { static void subsetSums ( int [ ] arr , int l , int r , int sum ) { if ( l > r ) { System . out . print ( sum + \" \" ) ; return ; } subsetSums ( arr , l + 1 , r , sum + arr [ l ] ) ; subsetSums ( arr , l + 1 , r , sum ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 5 , 4 , 3 } ; int n = arr . length ; subsetSums ( arr , 0 , n - 1 , 0 ) ; } }",
            "python_code": "def subsetSums ( arr , l , r , sum = 0 ) : NEWLINE INDENT if l > r : NEWLINE INDENTINDENT print ( sum , end = \" \" ) NEWLINE return NEWLINE DEDENT subsetSums ( arr , l + 1 , r , sum + arr [ l ] ) NEWLINE subsetSums ( arr , l + 1 , r , sum ) NEWLINE DEDENT arr = [ 5 , 4 , 3 ] NEWLINE n = len ( arr ) NEWLINE subsetSums ( arr , 0 , n - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4926_A_2527",
            "java_code": "class GFG { static int findCount ( String str ) { int result = 0 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( i == ( str . charAt ( i ) - 'a' ) || i == ( str . charAt ( i ) - 'A' ) ) { result ++ ; } } return result ; } public static void main ( String [ ] args ) { String str = \"AbgdeF\" ; System . out . print ( findCount ( str ) ) ; } }",
            "python_code": "def findCount ( str ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( len ( str ) ) : NEWLINE INDENTINDENT if ( ( i == ord ( str [ i ] ) - ord ( 'a' ) ) or ( i == ord ( str [ i ] ) - ord ( 'A' ) ) ) : NEWLINE INDENTINDENTINDENT result += 1 NEWLINE DEDENT DEDENT return result NEWLINE DEDENT str = 'AbgdeF' NEWLINE print ( findCount ( str ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1339_B_2528",
            "java_code": "import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = \"Yes\" ; private static final String no = \"No\" ;  void solve ( ) { int T = nextInt ( ) ;",
            "python_code": "import time  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_894_A_2529",
            "java_code": "import java . util . * ;  public class Practice {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) n = len ( s ) i = 0 presum = [ ] postsum = [ ] flag = 0 count1 = 0 count = 0 t = 0 for i in range ( n ) : if ( s [ i ] == \"Q\" ) : count += 1 if ( flag == 1 ) : count1 += 1 if ( s [ i ] == \"A\" ) : t = i presum . append ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_183_B_2530",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . Arrays ; import java . util . StringTokenizer ;  public class Main { public static void main ( String [ ] args )",
            "python_code": "from ctypes import c_int32def gcd ( a , b ) : if b == 0 : return a return gcd ( b , a % b ) def normalize_rational ( num , den ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_769_A_2531",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a = int ( input ( ) ) b = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) if a == 1 : print ( b [ 0 ] ) if a == 3 : print ( b [ 1 ] ) if a == 5 : print ( b [ 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_746_A_2532",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = int ( input ( ) )    compotes = c // 4 compotes = min ( compotes , b // 2 ) compotes = min ( compotes , a )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1144_A_2533",
            "java_code": "class GFG { static void solve ( String s ) { String z = s ; int l = s . length ( ) ; int i ; String str ; if ( s . indexOf ( '+' ) != - 1 ) { i = s . indexOf ( '+' ) ; str = s . replace ( '+' , '-' ) ; } else { i = s . indexOf ( '-' ) ; str = s . replace ( '-' , '+' ) ; } System . out . println ( \"Conjugate of \" + z + \" = \" + str ) ; } public static void main ( String [ ] args ) { String s = \"3-4i\" ; solve ( s ) ; } }",
            "python_code": "def solve ( s ) : NEWLINE INDENT z = s NEWLINE l = len ( s ) NEWLINE i = 0 NEWLINE if ( s . find ( '+' ) != - 1 ) : NEWLINE INDENTINDENT i = s . find ( '+' ) NEWLINE s = s . replace ( '+' , '-' ) NEWLINE DEDENT else : NEWLINE INDENTINDENT i = s . find ( '-' ) NEWLINE s = s . replace ( '-' , '+' , 1 ) NEWLINE DEDENT print ( \"Conjugate of \" , z , \" = \" , s ) NEWLINE DEDENT s = \"3-4i\" NEWLINE solve ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_631_B_2534",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , m , k = [ int ( x ) for x in input ( ) . split ( ) ] a = [ ] r = [ ( 0 , 0 ) ] * nc = [ ( 0 , 0 ) ] * mfor i in range ( n ) : a . append ( [ 0 ] * m ) for _ in range ( k ) : x , y , z = [ int ( t ) for t in input ( ) . split ( ) ] if x == 1 : r [ y - 1 ] = ( _ , z ) else : c [ y - 1 ] = ( _ , z ) for i in range ( n ) : for j in range ( m ) : a [ i ] [ j ] = max ( r [ i ] , c [ j ] ) [ 1 ] print ( * a [ i ] )     NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_127_A_2535",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "import sysinput = sys . stdin . readlineimport math  def inpit ( ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_328_A_2536",
            "java_code": "import java . util . Scanner ;",
            "python_code": " a , b , c , d = list ( map ( int , input ( ) . split ( ) ) )  a1 = b - aa2 = c - ba3 = d - c  g1 = b / ag2 = c / bg3 = d / c NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_617_A_2537",
            "java_code": "class GFG { public static long SubArraySum ( int arr [ ] , int n ) { long result = 0 ; for ( int i = 0 ; i < n ; i ++ ) result += ( arr [ i ] * ( i + 1 ) * ( n - i ) ) ; return result ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( \"Sum of SubArray \" + SubArraySum ( arr , n ) ) ; } }",
            "python_code": "def SubArraySum ( arr , n ) : NEWLINE INDENT result = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT result += ( arr [ i ] * ( i + 1 ) * ( n - i ) ) NEWLINE DEDENT return result NEWLINE DEDENT arr = [ 1 , 2 , 3 ] NEWLINE n = len ( arr ) NEWLINE print ( \"Sum of SubArray : \" , SubArraySum ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1238_A_2538",
            "java_code": "import java . io . * ; class GFG { static int maxArea ( float perimeter ) { int length = ( int ) Math . ceil ( perimeter / 4 ) ; int breadth = ( int ) Math . floor ( perimeter / 4 ) ; return length * breadth ; } public static void main ( String [ ] args ) { float n = 38 ; System . out . println ( \"Maximum Area = \" + maxArea ( n ) ) ; } }",
            "python_code": "from math import ceil , floor NEWLINE def maxArea ( perimeter ) : NEWLINE INDENT length = int ( ceil ( perimeter / 4 ) ) NEWLINE breadth = int ( floor ( perimeter / 4 ) ) NEWLINE return length * breadth NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 38 NEWLINE print ( \"Maximum Area =\" , maxArea ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1180_A_2539",
            "java_code": "import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int res = 1 ; for ( int i = 1 ; i < n ; i ++ ) { res += 4 * i ; } System . out . println ( res ) ; } }",
            "python_code": "n = int ( input ( ) ) count = 2 * ( n - 1 ) ** 2 + 2 * n - 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_913_A_2540",
            "java_code": "import java . util . * ; class Gfg { static int countDigits ( int n ) { return ( int ) ( n * Math . log10 ( 2 ) + 1 ) ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( countDigits ( n ) ) ; } }",
            "python_code": "import math NEWLINE def countDigits ( n ) : NEWLINE INDENT return int ( n * math . log10 ( 2 ) + 1 ) ; NEWLINE DEDENT n = 5 ; NEWLINE print ( countDigits ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2466_A_2541",
            "java_code": "import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_cicumscribed ( double a ) { return ( a * a * ( PI / 3 ) ) ; } public static void main ( String [ ] args ) { double a = 6.0 ; System . out . println ( \"Area of circumscribed circle is :\" + area_cicumscribed ( a ) ) ; } }",
            "python_code": "PI = 3.14159265 NEWLINE def area_cicumscribed ( a ) : NEWLINE INDENT return ( a * a * ( PI / 3 ) ) NEWLINE DEDENT a = 6.0 NEWLINE print ( \"Area of circumscribed circle is :%f\" % area_cicumscribed ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_753_A_2542",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "num = int ( input ( ) ) a = [ i for i in range ( 45 ) ] s = 1 idx = 1 while True : idx += 1 if ( s + idx > num ) : n = idx - 1 break  s += idx  left = num - s  a [ n ] += leftprint ( n ) for i in range ( 1 , n + 1 ) : print ( a [ i ] , end = \" \" ) print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1004_A_2543",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner keyboard = new Scanner ( System . in ) ;  int n , min ; n = keyboard . nextInt ( ) ; min = keyboard . nextInt ( ) ; int [ ] hotel = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { hotel [ i ] = keyboard . nextInt ( ) ; } ",
            "python_code": "n , d = map ( int , ( input ( ) . split ( ) ) )  x = list ( map ( int , input ( ) . split ( ) ) )   count = 2  if n > 1 : for i in range ( 1 , n ) : temp = x [ i ] - x [ i - 1 ] if temp == ( 2 * d ) : count = count + 1 if temp > 2 * d : count = count + 2  print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_75_B_2544",
            "java_code": "import java . io . * ; import java . util . * ;  public class Solution {  public static void main ( String [ ] args ) {",
            "python_code": "class pair : def NEWLINE __init__ ( self , f , s ) : self . f = f NEWLINE self . s = s  me = input ( ) NEWLINE n = int ( input ( ) )  mp = { } NEWLINE for i in range ( n ) : a = list ( map ( str , input ( ) . split ( ) ) )  if a [ 1 ] == \"likes\" : NEWLINE INDENT ot = a [ 2 ] else : NEWLINE ot = a [ 3 ]  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4012_A_2545",
            "java_code": "class GFG { static float squareRoot ( float n ) { float x = n ; float y = 1 ; double e = 0.000001 ; while ( x - y > e ) { x = ( x + y ) / 2 ; y = n / x ; } return x ; } public static void main ( String [ ] args ) { int n = 50 ; System . out . printf ( \"Square root of \" + n + \" is \" + squareRoot ( n ) ) ; } }",
            "python_code": "def squareRoot ( n ) : NEWLINE INDENT x = n NEWLINE y = 1 NEWLINE e = 0.000001 NEWLINE while ( x - y > e ) : NEWLINE INDENTINDENT x = ( x + y ) / 2 NEWLINE y = n / x NEWLINE DEDENT return x NEWLINE DEDENT n = 50 NEWLINE print ( \"Square root of\" , n , \"is\" , round ( squareRoot ( n ) , 6 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3030_A_2546",
            "java_code": "import java . io . * ; class GFG { static int countPairs ( int n ) { int count = 0 ; for ( int x = 1 ; x < n ; x ++ ) { for ( int y = x + 1 ; y <= n ; y ++ ) { if ( ( y * x ) % ( y + x ) == 0 ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( countPairs ( n ) ) ; } }",
            "python_code": "def countPairs ( n ) : NEWLINE INDENT count = 0 NEWLINE for x in range ( 1 , n ) : NEWLINE INDENTINDENT for y in range ( x + 1 , n + 1 ) : NEWLINE INDENTINDENTINDENT if ( ( y * x ) % ( y + x ) == 0 ) : NEWLINE INDENTINDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT DEDENT return count NEWLINE DEDENT n = 15 NEWLINE print ( countPairs ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2799_A_2547",
            "java_code": "class GFG { static void tower ( int n , char sourcePole , char destinationPole , char auxiliaryPole ) { if ( 0 == n ) return ; tower ( n - 1 , sourcePole , auxiliaryPole , destinationPole ) ; System . out . printf ( \"Move the disk %d from %c to %c\\n\" , n , sourcePole , destinationPole ) ; tower ( n - 1 , auxiliaryPole , destinationPole , sourcePole ) ; } public static void main ( String [ ] args ) { tower ( 3 , 'S' , 'D' , 'A' ) ; } }",
            "python_code": "def tower ( n , sourcePole , destinationPole , auxiliaryPole ) : NEWLINE INDENT if ( 0 == n ) : NEWLINE INDENTINDENT return NEWLINE DEDENT tower ( n - 1 , sourcePole , auxiliaryPole , destinationPole ) NEWLINE print ( \"Move the disk\" , sourcePole , \"from\" , sourcePole , \"to\" , destinationPole ) NEWLINE tower ( n - 1 , auxiliaryPole , destinationPole , sourcePole ) NEWLINE DEDENT tower ( 3 , 'S' , 'D' , 'A' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_319_A_2548",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "MOD = int ( 1e9 + 7 ) x = input ( ) [ : : - 1 ] n = len ( x ) res = 0 for i , t in enumerate ( x ) : if t == '1' : res = ( res + ( 1 << ( n - 1 + i ) ) ) % MODprint ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5083_A_2549",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static boolean isPowerOfTwo ( int x ) { return x != 0 && ( ( x & ( x - 1 ) ) == 0 ) ; } static boolean differAtOneBitPos ( int a , int b ) { return isPowerOfTwo ( a ^ b ) ; } public static void main ( String args [ ] ) { int a = 13 , b = 9 ; if ( differAtOneBitPos ( a , b ) == true ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isPowerOfTwo ( x ) : NEWLINE INDENT return x and ( not ( x & ( x - 1 ) ) ) NEWLINE DEDENT def differAtOneBitPos ( a , b ) : NEWLINE INDENT return isPowerOfTwo ( a ^ b ) NEWLINE DEDENT a = 13 NEWLINE b = 9 NEWLINE if ( differAtOneBitPos ( a , b ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_B_2550",
            "java_code": "import java . io . * ; import java . util . * ;  public class Jumps {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE i = 1 NEWLINE while i * ( i + 1 ) / 2 < n : i += 1  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2688_A_2551",
            "java_code": "class GFG { static char [ ] alphabets = \"abcdefghijklmnopqrstuvwxyz\" . toCharArray ( ) ; static String conversion ( String charSet , char [ ] str1 ) { String s2 = \"\" ; for ( char i : str1 ) s2 += alphabets [ charSet . indexOf ( i ) ] ; return s2 ; } public static void main ( String [ ] args ) { String charSet = \"qwertyuiopasdfghjklzxcvbnm\" ; String str1 = \"egrt\" ; System . out . print ( conversion ( charSet , str1 . toCharArray ( ) ) ) ; } }",
            "python_code": "def conversion ( charSet , str1 ) : NEWLINE INDENT s2 = \"\" NEWLINE for i in str1 : NEWLINE INDENTINDENT s2 += alphabets [ charSet . index ( i ) ] NEWLINE DEDENT return s2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT alphabets = \"abcdefghijklmnopqrstuvwxyz\" NEWLINE charSet = \"qwertyuiopasdfghjklzxcvbnm\" NEWLINE str1 = \"egrt\" NEWLINE print ( conversion ( charSet , str1 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_776_A_2552",
            "java_code": "import java . util . Scanner ; public class Reconnaissance2 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String a = s . next ( ) , b = s . next ( ) , c , d ; int loop = s . nextInt ( ) ; System . out . println ( a + \" \" + b ) ; for ( int i = 0 ; i < loop ; i ++ ) { c = s . next ( ) ; d = s . next ( ) ; if ( a . equalsIgnoreCase ( c ) ) a = d ; else b = d ; System . out . println ( a + \" \" + b ) ; } } }",
            "python_code": "a = input ( ) . split ( ) n = int ( input ( ) ) print ( * a ) for _ in range ( n ) : b = input ( ) . split ( ) a . remove ( b [ 0 ] ) a . append ( b [ 1 ] ) print ( * a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_735_B_2553",
            "java_code": " import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  public class Solution implements Runnable {   public void run ( ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int i = 0 , j = 0 , k = 0 ; int t = 0 ;",
            "python_code": "import sysLI = lambda : list ( map ( int , sys . stdin . readline ( ) . split ( ) ) ) MI = lambda : map ( int , sys . stdin . readline ( ) . split ( ) ) SI = lambda : sys . stdin . readline ( ) . strip ( '\\n' ) II = lambda : int ( sys . stdin . readline ( ) )  n , a , b = MI ( ) a , b = max ( a , b ) , min ( a , b ) l = sorted ( LI ( ) , reverse = True ) ans = sum ( l [ : b ] ) / b + sum ( l [ b : b + a ] ) / aprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_207_A_2554",
            "java_code": "class GFG { static void findTheNumber ( int n ) { if ( n == 1 ) { System . out . print ( \"Impossible\" + \"\\n\" ) ; return ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { System . out . print ( \"5\" ) ; } System . out . print ( \"4\" ) ; } public static void main ( String [ ] args ) { int n = 12 ; findTheNumber ( n ) ; } }",
            "python_code": "def findTheNumber ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT print ( \"Impossible\" ) NEWLINE return NEWLINE DEDENT for i in range ( n - 1 ) : NEWLINE INDENTINDENT print ( \"5\" , end = \"\" ) NEWLINE DEDENT print ( \"4\" ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 12 NEWLINE findTheNumber ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_518_A_2555",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class A293 { static char [ ] sarr ; public static void main ( String [ ] args ) throws IOException { FastScanner fs = new FastScanner ( ) ; PrintWriter out = new PrintWriter ( System . out ) ;",
            "python_code": "a = list ( input ( ) ) b = input ( ) i = len ( a ) - 1 while a [ i ] == 'z' : a [ i ] = 'a' i -= 1 a [ i ] = chr ( ord ( a [ i ] ) + 1 ) a = '' . join ( a ) if a >= b : print ( 'No such string' ) else : print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_A_2556",
            "java_code": "import java . util . Scanner ;  public class A1455 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { String S = in . next ( ) ; System . out . println ( S . length ( ) ) ; } }  }",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = input ( ) NEWLINE print ( len ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3060_A_2557",
            "java_code": "class GFG { static int squareDigitSum ( String number ) { int summ = 0 ; int num = Integer . parseInt ( number ) ; int squareNum = num * num ; while ( squareNum > 0 ) { summ = summ + ( squareNum % 10 ) ; squareNum = squareNum / 10 ; } return summ ; } public static void main ( String [ ] args ) { String N = \"1111\" ; System . out . println ( squareDigitSum ( N ) ) ; } }",
            "python_code": "def squareDigitSum ( num ) : NEWLINE INDENT summ = 0 NEWLINE num = int ( num ) NEWLINE squareNum = num * num NEWLINE while squareNum > 0 : NEWLINE INDENTINDENT summ = summ + ( squareNum % 10 ) NEWLINE squareNum = squareNum // 10 NEWLINE DEDENT return summ NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = \"1111\" NEWLINE print ( squareDigitSum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_939_B_2558",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) left = 10 ** 18 ans = 0 for i in range ( k ) : if n % a [ i ] < left : left = n % a [ i ] ans = iprint ( ans + 1 , n // a [ ans ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_110_B_2559",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; String s = \"abcd\" ; for ( int i = 0 ; i < n / 4 ; i ++ ) System . out . print ( s ) ; System . out . print ( s . substring ( 0 , n % 4 ) ) ; } }",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : if i % 4 == 0 : print ( \"a\" , end = \"\" ) elif i % 4 == 1 : print ( \"b\" , end = \"\" ) elif i % 4 == 2 : print ( \"c\" , end = \"\" ) elif i % 4 == 3 : print ( \"d\" , end = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1150_A_2560",
            "java_code": " import java . util . * ; import java . lang . * ;",
            "python_code": "R = int ( input ( ) . split ( ) [ - 1 ] )  best_buy = min ( map ( int , input ( ) . split ( ) ) ) best_sell = max ( map ( int , input ( ) . split ( ) ) )  num_buy = R // best_buy  print ( max ( R , R + ( best_sell - best_buy ) * num_buy ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1447_A_2561",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; System . out . println ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( i + \" \" ) ; System . out . println ( ) ; } } }",
            "python_code": "m = int ( input ( ) ) NEWLINE n = [ ] NEWLINE for i in range ( m ) : n . append ( int ( input ( ) ) ) NEWLINE for i in n : print ( i - 1 ) NEWLINE for j in range ( 2 , i + 1 ) : print ( j , end = ' ' ) NEWLINE print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4746_A_2562",
            "java_code": "class GFG { static int multiplyWith3Point5 ( int x ) { return ( x << 1 ) + x + ( x > > 1 ) ; } public static void main ( String [ ] args ) { int x = 2 ; System . out . println ( multiplyWith3Point5 ( x ) ) ; } }",
            "python_code": "def multiplyWith3Point5 ( x ) : NEWLINE INDENT return ( x << 1 ) + x + ( x >> 1 ) NEWLINE DEDENT x = 4 NEWLINE print ( multiplyWith3Point5 ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1416_A_2563",
            "java_code": "class Test { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int a = 98 , b = 56 ; System . out . println ( \"GCD of \" + a + \" and \" + b + \" is \" + gcd ( a , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( b == 0 ) : NEWLINE INDENTINDENT return a NEWLINE DEDENT return gcd ( b , a % b ) NEWLINE DEDENT a = 98 NEWLINE b = 56 NEWLINE if ( gcd ( a , b ) ) : NEWLINE INDENT print ( 'GCD of' , a , 'and' , b , 'is' , gcd ( a , b ) ) NEWLINE DEDENT else : NEWLINE INDENT print ( 'not found' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3175_A_2564",
            "java_code": "import java . io . * ; class GFG { static boolean solve ( int n , int k ) { if ( n >= ( k * ( k + 1 ) ) / 2 ) { return true ; } return false ; } public static void main ( String [ ] args ) { int n = 12 , k = 4 ; if ( solve ( n , k ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def solve ( n , k ) : NEWLINE INDENT if ( n >= ( k * ( k + 1 ) ) // 2 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 12 NEWLINE k = 4 NEWLINE if ( solve ( n , k ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1300_B_2565",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { int n = s . nextInt ( ) ; int arr [ ] = new int [ 2 * n ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) { arr [ i ] = s . nextInt ( ) ; } Arrays . sort ( arr ) ; System . out . println ( arr [ n ] - arr [ n - 1 ] ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l = sorted ( l , reverse = True ) x = abs ( l [ ( 2 * n ) // 2 ] - l [ ( ( 2 * n ) // 2 ) - 1 ] ) print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1193_A_2566",
            "java_code": "import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; class GFG { static void printNos ( int n ) { if ( n > 0 ) { printNos ( n - 1 ) ; System . out . print ( n + \" \" ) ; } return ; } public static void main ( String [ ] args ) { printNos ( 100 ) ; } }",
            "python_code": "def printNos ( n ) : NEWLINE INDENT if n > 0 : NEWLINE INDENTINDENT printNos ( n - 1 ) NEWLINE print ( n , end = ' ' ) NEWLINE DEDENT DEDENT printNos ( 100 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_266_A_2567",
            "java_code": "import java . util . Scanner ;  public class StonesOnTable { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; scanner . nextLine ( ) ;  String s = scanner . nextLine ( ) ;  int res = 0 ; for ( int i = 1 ; i < s . length ( ) ; ) { char ch = s . charAt ( i ) ;  if ( ch == s . charAt ( i - 1 ) ) { res ++ ; s = s . substring ( 0 , i ) + s . substring ( i + 1 ) ;",
            "python_code": "n = eval ( input ( ) ) s = input ( ) current = s [ 0 ] ans = 0 for i in s [ 1 : : ] : if i == current : ans += 1 current = iprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3604_A_2568",
            "java_code": "import java . util . * ; class solution { static void printThreeParts ( int N ) { if ( N % 3 == 0 ) System . out . println ( \"x = 1, y = 1, z = \" + ( N - 2 ) ) ; else System . out . println ( \" x = 1, y = 2, z = \" + ( N - 3 ) ) ; } public static void main ( String args [ ] ) { int N = 10 ; printThreeParts ( N ) ; } }",
            "python_code": "def printThreeParts ( N ) : NEWLINE INDENT if ( N % 3 == 0 ) : NEWLINE INDENTINDENT print ( \" x = 1, y = 1, z = \" , N - 2 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \" x = 1, y = 2, z = \" , N - 3 ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 10 NEWLINE printThreeParts ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1221_A_2569",
            "java_code": "class GFG { static double findHypotenuse ( double side1 , double side2 ) { double h = Math . sqrt ( ( side1 * side1 ) + ( side2 * side2 ) ) ; return h ; } public static void main ( String s [ ] ) { int side1 = 3 , side2 = 4 ; System . out . printf ( \"%.2f\" , findHypotenuse ( side1 , side2 ) ) ; } }",
            "python_code": "def findHypotenuse ( side1 , side2 ) : NEWLINE INDENT h = ( ( ( side1 * side1 ) + ( side2 * side2 ) ) ** ( 1 / 2 ) ) ; NEWLINE return h ; NEWLINE DEDENT side1 = 3 ; NEWLINE side2 = 4 ; NEWLINE print ( findHypotenuse ( side1 , side2 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2022_A_2570",
            "java_code": "import java . io . * ; class GFG { static int calculateSum ( int n ) { return ( int ) Math . pow ( n * ( n + 1 ) / 2 , 2 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) / 2 ) ** 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 4 NEWLINE print ( calculateSum ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_949_B_2571",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . BigInteger ;  public class test { static class sort implements Comparator < int [ ] >",
            "python_code": "import sysinput = sys . stdin . readline  n , q = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( q ) : a = int ( input ( ) ) if a % 2 != 0 : print ( ( a + 1 ) // 2 ) else : b = a // 2 while 1 > 0 : a = a + ( n - b ) b = a // 2 if a % 2 != 0 : print ( ( a + 1 ) // 2 ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1447_B_2572",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , m = map ( int , input ( ) . split ( ) ) NEWLINE d = list ( ) NEWLINE s = 0 NEWLINE ans = 0 NEWLINE l = list ( ) NEWLINE for i in range ( n ) : a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE for k in a : if NEWLINE k < 0 : ans += 1 NEWLINE s += abs ( k ) NEWLINE l . append ( abs ( k ) ) NEWLINE if ans % 2 == 1 : s = s - 2 * min ( l ) NEWLINE print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_554_A_2573",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; System . out . println ( 26 * ( s . length ( ) + 1 ) - s . length ( ) ) ; } }",
            "python_code": "a = input ( ) print ( 26 * ( len ( a ) + 1 ) - len ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_710_B_2574",
            "java_code": "import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; List < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; ++ i ) { list . add ( scanner . nextInt ( ) ) ; }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) print ( a [ ( n - 1 ) // 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4053_A_2575",
            "java_code": "class GFG { static int sumOfTheSeries ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int k = 2 ; for ( int j = 1 ; j <= i ; j ++ ) { sum += k ; k += 2 ; } } return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . printf ( \"Sum = %d\" , sumOfTheSeries ( n ) ) ; } }",
            "python_code": "def sumOfTheSeries ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n + 1 ) : NEWLINE INDENTINDENT k = 2 NEWLINE for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT sum = sum + k ; NEWLINE k = k + 2 NEWLINE DEDENT DEDENT return sum ; NEWLINE DEDENT n = 5 NEWLINE ans = sumOfTheSeries ( n ) ; NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2917_A_2576",
            "java_code": "class GFG { static int nthTerm ( int N ) { int nth = 0 ; if ( N % 2 == 1 ) nth = ( N * N ) + 1 ; else nth = ( N * N ) - 1 ; return nth ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . print ( nthTerm ( N ) + \"\\n\" ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT nth = 0 ; NEWLINE if ( N % 2 == 1 ) : NEWLINE INDENTINDENT nth = ( N * N ) + 1 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT nth = ( N * N ) - 1 ; NEWLINE DEDENT return nth ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE print ( nthTerm ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_669_A_2577",
            "java_code": "import java . util . * ; ",
            "python_code": "n = int ( input ( ) ) y = ( n // 3 ) * 2 if n % 3 == 0 : print ( y ) else : print ( y + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1726_A_2578",
            "java_code": "import java . io . * ; class GFG { static void centeredHexagonalSeries ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( 3 * i * ( i - 1 ) + 1 + \" \" ) ; } public static void main ( String args [ ] ) { int n = 10 ; centeredHexagonalSeries ( n ) ; } }",
            "python_code": "def centeredHexagonalSeries ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( 3 * i * ( i - 1 ) + 1 , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE centeredHexagonalSeries ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1917_A_2579",
            "java_code": "class gfg { public void decToBinary ( int n ) { for ( int i = 31 ; i >= 0 ; i -- ) { int k = n > > i ; if ( ( k & 1 ) > 0 ) System . out . print ( \"1\" ) ; else System . out . print ( \"0\" ) ; } } } class geek { public static void main ( String [ ] args ) { gfg g = new gfg ( ) ; int n = 32 ; g . decToBinary ( n ) ; } }",
            "python_code": "def decToBinary ( n ) : NEWLINE INDENT for i in range ( 31 , - 1 , - 1 ) : NEWLINE INDENTINDENT k = n >> i ; NEWLINE if ( k & 1 ) : NEWLINE INDENTINDENTINDENT print ( \"1\" , end = \"\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT print ( \"0\" , end = \"\" ) ; NEWLINE DEDENT DEDENT DEDENT n = 32 ; NEWLINE decToBinary ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_707_B_2580",
            "java_code": "import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . time . LocalTime ; import java . util . * ; import java . util . concurrent . * ; import java . util . regex . * ;   import java . math . * ;    public class A {  static boolean found ; public static void main ( String [ ] args ) { FastScanner scan = new FastScanner ( ) ; int t = 1 ;",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) e = [ tuple ( map ( int , input ( ) . split ( ) ) ) for _ in range ( m ) ] if k : a = set ( map ( int , input ( ) . split ( ) ) ) else : a = set ( ) ans = - 1 for i in e : if i [ 0 ] in a and i [ 1 ] not in a or i [ 1 ] in a and i [ 0 ] not in a : if ans == - 1 : ans = i [ 2 ] else : ans = min ( ans , i [ 2 ] ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3465_A_2581",
            "java_code": "class GFG { static void line ( double x0 , double y0 ) { double c = ( int ) ( 2 * y0 * x0 ) ; System . out . println ( y0 + \"x\" + \" + \" + x0 + \"y = \" + c ) ; } public static void main ( String [ ] args ) { double x0 = 4 , y0 = 3 ; line ( x0 , y0 ) ; } }",
            "python_code": "def line ( x0 , y0 ) : NEWLINE INDENT c = 2 * y0 * x0 NEWLINE print ( y0 , \"x\" , \"+\" , x0 , \"y=\" , c ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT x0 = 4 NEWLINE y0 = 3 NEWLINE line ( x0 , y0 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_977_A_2582",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {",
            "python_code": "a = list ( map ( int , input ( ) . split ( ) ) ) c = a [ 0 ] for i in range ( a [ 1 ] ) : if ( c % 10 == 0 ) : c = c / 10 else : c = c - 1 print ( int ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_347_B_2583",
            "java_code": "import java . util . * ;  public class CF10 { public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) d = { } ans = 0 flag = Falsefor i , x in enumerate ( arr ) : d [ i ] = x if i == x : ans += 1 for i in d : if i != d [ i ] and d [ d [ i ] ] == i : ans += 2 flag = True breakif flag : print ( ans ) else : if ans == len ( arr ) : print ( ans ) else : print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_835_B_2584",
            "java_code": "import java . util . * ; import java . io . * ; public class Solution { static int rock = 0 ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; public static void main ( String [ ] args ) throws Exception {",
            "python_code": "k = int ( input ( ) ) digits = [ int ( i ) for i in input ( ) ] digits . sort ( ) cur = sum ( digits ) ans = 0 for d in digits : if cur < k : cur += 9 - d ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1048_A_2585",
            "java_code": "class GFG { static int summation ( int n ) { int abs_sum = n * ( n + 1 ) / 2 ; int sign = n + 1 % 2 == 0 ? 1 : - 1 ; int result_sum = sign * abs_sum ; return result_sum ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( summation ( N ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT abs_sum = n * ( n + 1 ) // 2 ; NEWLINE sign = 1 if ( ( n + 1 ) % 2 == 0 ) else - 1 ; NEWLINE result_sum = sign * abs_sum ; NEWLINE return result_sum ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 2 ; NEWLINE print ( summation ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1107_A_2586",
            "java_code": "import java . util . * ; import java . io . * ; public class EdE { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {",
            "python_code": "t = int ( input ( ) ) for _ in range ( int ( t ) ) : n = int ( input ( ) ) s = input ( ) a = int ( s [ 0 ] ) b = int ( s [ 1 : ] ) if a < b : print ( \"YES\" ) print ( 2 ) print ( a , b ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_999_A_2587",
            "java_code": "import java . util . ArrayList ; import java . util . Scanner ;  public class twentyone {  public static void main ( String [ ] args ) {",
            "python_code": "import renumber1 = str ( input ( ) ) arr = str ( input ( ) ) z = re . findall ( r\"\\d+\" , number1 ) c = [ int ( b ) for b in z ] x = re . findall ( r\"\\d+\" , arr ) y = [ int ( a ) for a in x ] lr = 0 rl = 0 for i in range ( len ( y ) ) : if y [ i ] <= c [ 1 ] : lr += 1 else : breakfor i in reversed ( range ( len ( y ) ) ) : if y [ i ] <= c [ 1 ] : rl += 1 else : break  print ( min ( lr + rl , c [ 0 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1338_A_2588",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import mathfrom collections import defaultdict , Counter , deque  INF = float ( 'inf' )  t = int ( input ( ) ) for _ in range ( t ) : n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  peak = - INF diff = 0 for i in range ( n ) : peak = max ( peak , arr [ i ] ) diff = max ( diff , peak - arr [ i ] )  p = 1 cnt = 0 while p <= diff : p *= 2 cnt += 1  print ( cnt )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_361_B_2589",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . math . BigInteger ; import java . util . * ;  import javafx . util . Pair ;  public class Main {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) if ( n == k ) : print ( \"-1\" ) else : print ( n - k , end = \" \" ) r = 0 r = r + 1 j = 1 while ( r < n ) : if ( j == n - k ) : j = j + 1 print ( j , end = \" \" ) j = j + 1 else : print ( j , end = \" \" ) j = j + 1 r = r + 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1057_A_2590",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ;  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) )  p = list ( map ( int , input ( ) . split ( ) ) )  pa = n  ans = [ ]  while True : ans . append ( pa ) if pa == 1 : break pa = p [ pa - 2 ] print ( * ans [ : : - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4723_A_2591",
            "java_code": "class GFG { static void LeadingZeros ( int x , int y ) { if ( ( x ^ y ) <= ( x & y ) ) System . out . print ( \"\\nEqual\" ) ; else if ( ( x & ( ~ y ) ) > y ) System . out . print ( y ) ; else System . out . print ( x ) ; } public static void main ( String [ ] args ) { int x = 10 , y = 16 ; LeadingZeros ( x , y ) ; } }",
            "python_code": "def LeadingZeros ( x , y ) : NEWLINE INDENT if ( ( x ^ y ) <= ( x & y ) ) : NEWLINE INDENTINDENT print ( \"Equal\" ) NEWLINE DEDENT elif ( ( x & ( ~ y ) ) > y ) : NEWLINE INDENTINDENT print ( y ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( x ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT x = 10 NEWLINE y = 16 NEWLINE LeadingZeros ( x , y ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_496_A_2592",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "num = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  curr_score = float ( \"-inf\" )  for i in range ( num - 1 ) : curr_score = max ( curr_score , arr [ i + 1 ] - arr [ i ] )  new_score = float ( \"inf\" )  for i in range ( num - 2 ) : new_score = min ( new_score , arr [ i + 2 ] - arr [ i ] )  print ( max ( new_score , curr_score ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_822_A_2593",
            "java_code": "import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;   public class Problem_Solving1 { public static long fac ( long n ) { long f = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { f *= i ; } return f ; }  public static void main ( String [ ] args ) {",
            "python_code": "import mathprint ( math . factorial ( min ( map ( int , input ( ) . split ( ) ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1177_A_2594",
            "java_code": "import java . util . Scanner ; public class A { static int val = 10000 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = \"\" ; int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= val ; i ++ ) { s += i ; } System . out . println ( s . charAt ( n - 1 ) ) ;  } }",
            "python_code": "n = int ( input ( ) ) s = \"\" i = 1 while len ( s ) < 10000 : s += str ( i ) i += 1  print ( s [ n - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1427_A_2595",
            "java_code": "class GFG { static int kthSmallest ( int n , int k ) { return ( 2 * k ) ; } public static void main ( String args [ ] ) { int n = 8 , k = 4 ; System . out . print ( kthSmallest ( n , k ) ) ; } }",
            "python_code": "def kthSmallest ( n , k ) : NEWLINE INDENT return 2 * k NEWLINE DEDENT n = 8 ; k = 4 NEWLINE print ( kthSmallest ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3283_A_2596",
            "java_code": "class GFG { static int countSolutions ( int n , int val ) { int total = 0 ; if ( n == 1 && val >= 0 ) return 1 ; for ( int i = 0 ; i <= val ; i ++ ) { total += countSolutions ( n - 1 , val - i ) ; } return total ; } public static void main ( String [ ] args ) { int n = 5 ; int val = 20 ; System . out . print ( countSolutions ( n , val ) ) ; } }",
            "python_code": "def countSolutions ( n , val ) : NEWLINE INDENT total = 0 NEWLINE if n == 1 and val >= 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT for i in range ( val + 1 ) : NEWLINE INDENTINDENT total += countSolutions ( n - 1 , val - i ) NEWLINE DEDENT return total NEWLINE DEDENT n = 5 NEWLINE val = 20 NEWLINE print ( countSolutions ( n , val ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3745_A_2597",
            "java_code": "class GFG { static void TwentyoneMatchstick ( int arr [ ] , int N ) { for ( int i = 0 ; i < N ; i += 1 ) { System . out . print ( 5 - arr [ i ] + \" \" ) ; } System . out . println ( ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 4 , 2 , 2 } ; int N = arr . length ; TwentyoneMatchstick ( arr , N ) ; } }",
            "python_code": "def TwentyoneMatchstick ( arr , N ) : NEWLINE INDENT for i in range ( N ) : NEWLINE INDENTINDENT print ( 5 - arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT arr = [ 3 , 4 , 2 , 2 ] NEWLINE N = len ( arr ) NEWLINE TwentyoneMatchstick ( arr , N ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_677_A_2598",
            "java_code": "import java . util . Scanner ;  public class vanyaAndFence {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int h = sc . nextInt ( ) ; int res = n ; for ( int i = 1 ; i <= n ; i ++ ) { int hi = sc . nextInt ( ) ; if ( hi > h ) { res ++ ; } } System . out . println ( res ) ; }  }",
            "python_code": "k = list ( map ( int , input ( ) . split ( ) ) ) l = list ( map ( int , input ( ) . split ( ) ) ) s = 0 for i in l : if ( i > k [ 1 ] ) : s = s + 2 else : s = s + 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1366_A_2599",
            "java_code": "import java . io . * ; import java . util . * ;     public class A {",
            "python_code": "for i in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) print ( min ( a , b , ( a + b ) // 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_269_A_2600",
            "java_code": "import java . io . * ; import java . util . * ; import java . lang . * ;  public class c1 { public static void main ( String [ ] args ) { MyScanner scan = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ;  int t = 1 ;",
            "python_code": "from sys import stdin , stdoutnmbr = lambda : int ( input ( ) ) lst = lambda : list ( map ( int , input ( ) . split ( ) ) ) for _ in range ( 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_77_B_2601",
            "java_code": "import java . io . * ; import java . util . * ; public class code implements Runnable {",
            "python_code": "t = int ( input ( ) ) NEWLINE for _ in range ( t ) : a , b = map ( float , input ( ) . split ( ) ) NEWLINE if b == 0.0 : NEWLINE INDENT print ( 1.0 ) elif a == 0.0 : NEWLINE print ( 0.5 ) elif a / 4.0 <= b : NEWLINE print ( ( a + 8.0 * b ) / 16.0 / b ) else : NEWLINE print ( 1.0 - b / a ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_259_A_2602",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { FastReader scn = new FastReader ( ) ;",
            "python_code": "for _ in range ( 8 ) : string = input ( ) if \"BB\" in string : print ( \"NO\" ) break if \"WW\" in string : print ( \"NO\" ) breakelse : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1003_A_2603",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class discounts {",
            "python_code": "num = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) li2 = [ ] for i in range ( num ) : a = li . count ( li [ i ] ) li2 . append ( a ) print ( max ( li2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_808_A_2604",
            "java_code": "import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) ans = \"\" if len ( s ) == 1 : print ( 1 ) else : ans += str ( int ( s [ 0 ] ) + 1 ) for i in range ( 1 , len ( s ) ) : ans += \"0\" print ( int ( ans ) - int ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_810_B_2605",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "numOfDays , sellOffDays = map ( int , input ( ) . split ( ) ) totalProductsSold = 0 l = [ ] for i in range ( numOfDays ) : numOfProduct , numOfClients = map ( int , input ( ) . split ( ) ) totalProductsSold += min ( numOfProduct , numOfClients ) l . append ( min ( 2 * numOfProduct , numOfClients ) - min ( numOfProduct , numOfClients ) ) l . sort ( ) print ( totalProductsSold + sum ( l [ numOfDays - sellOffDays : ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_843_A_2606",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import math , sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_817_A_2607",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "import mathdef main ( ) : x1 , y1 , x2 , y2 = map ( int , input ( ) . split ( ) ) x , y = map ( int , input ( ) . split ( ) )  dx = abs ( x1 - x2 ) dy = abs ( y1 - y2 )  if dx % x == 0 and dy % y == 0 : if ( dx / x ) % 2 == ( dy / y ) % 2 : print ( \"YES\" ) else : print ( \"NO\" ) else : print ( \"NO\" )                    if __name__ == '__main__' : main ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_569_A_2608",
            "java_code": "import java . util . Scanner ;  public class CF_569A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int T = sc . nextInt ( ) , S = sc . nextInt ( ) , q = sc . nextInt ( ) ; int cnt = 0 ; while ( S < T ) { S = S * q ; cnt ++ ; } System . out . print ( cnt ) ; } }",
            "python_code": "T , S , q = map ( int , input ( ) . split ( ) ) s = S * qcounter = 1 while s < T : s *= q counter += 1 print ( counter ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_803_A_2609",
            "java_code": "import java . util . * ; class GFG { public static void main ( String [ ] args ) { int a [ ] = { 1 , 2 , 3 , 4 , 5 } ; int i ; for ( i = 0 ; i < 5 ; i ++ ) System . out . printf ( \"%d \" , a [ i ] ) ; } }",
            "python_code": "a = [ 1 , 2 , 3 , 4 , 5 ] ; NEWLINE for i in range ( 5 ) : NEWLINE INDENT print ( a [ i ] , end = \" \" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_141_A_2610",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class Ideone { public static String sort ( String inputString ) {",
            "python_code": "s = input ( ) s1 = input ( ) s2 = input ( ) s3 = s + s1s3 = '' . join ( sorted ( s3 ) ) s2 = '' . join ( sorted ( s2 ) ) cnt = 0 if ( len ( s3 ) == len ( s2 ) ) : for i in range ( 0 , len ( s3 ) ) : if ( s3 [ i ] == s2 [ i ] ) : cnt += 1 if ( cnt == len ( s3 ) and len ( s3 ) == len ( s2 ) ) : print ( \"YES\" ) else : print ( \"NO\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3043_A_2611",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static long fourthPowerSum ( int n ) { long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum = sum + ( i * i * i * i ) ; return sum ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( fourthPowerSum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def fourthPowerSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum = sum + ( i * i * i * i ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 6 NEWLINE print ( fourthPowerSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_391_B_2612",
            "java_code": "  import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; public class RockB { Scanner in = new Scanner ( System . in ) ;  private RockB ( ) throws IOException {",
            "python_code": "t = { } for i , c in enumerate ( input ( ) ) : if c not in t : t [ c ] = ( i , 1 ) elif ( t [ c ] [ 0 ] - i ) & 1 : t [ c ] = ( i , t [ c ] [ 1 ] + 1 ) print ( max ( b for a , b in t . values ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1047_A_2613",
            "java_code": "class GFG { static int summation ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) sum += ( i * i ) ; else sum -= ( i * i ) ; } return sum ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( summation ( N ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT if ( i % 2 == 1 ) : NEWLINE INDENTINDENTINDENT sum += ( i * i ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT sum -= ( i * i ) ; NEWLINE DEDENT DEDENT return sum ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 2 ; NEWLINE print ( summation ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1214_A_2614",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int e = sc . nextInt ( ) ; int eumin = 5 * e , rel = n ; for ( int i = 0 ; i * d <= n ; i ++ ) {",
            "python_code": "n , d , e = int ( input ( ) ) , int ( input ( ) ) , int ( input ( ) ) * 5  minn = nfor i in range ( d ) : for j in range ( e ) : if i + j != 0 : k = n % ( d * i + e * j ) % d % e if minn > k : minn = kprint ( minn ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1595_A_2615",
            "java_code": "class Main { static int findMaximum ( int arr [ ] , int low , int high ) { int max = arr [ low ] ; int i ; for ( i = low ; i <= high ; i ++ ) { if ( arr [ i ] > max ) max = arr [ i ] ; } return max ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 30 , 40 , 50 , 60 , 70 , 23 , 20 } ; int n = arr . length ; System . out . println ( \"The maximum element is \" + findMaximum ( arr , 0 , n - 1 ) ) ; } }",
            "python_code": "def findMaximum ( arr , low , high ) : NEWLINE INDENT max = arr [ low ] NEWLINE i = low NEWLINE for i in range ( high + 1 ) : NEWLINE INDENTINDENT if arr [ i ] > max : NEWLINE INDENTINDENTINDENT max = arr [ i ] NEWLINE DEDENT DEDENT return max NEWLINE DEDENT arr = [ 1 , 30 , 40 , 50 , 60 , 70 , 23 , 20 ] NEWLINE n = len ( arr ) NEWLINE print ( \"The maximum element is %d\" % findMaximum ( arr , 0 , n - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_939_A_2616",
            "java_code": "import java . util . Scanner ;  public class LoveTriangle {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int planesNumber = sc . nextInt ( ) ;  sc . nextLine ( ) ;",
            "python_code": "n = int ( input ( ) ) l = [ ] a = ( input ( ) . split ( \" \" ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3220_A_2617",
            "java_code": "public class GFG { public static int cubesum ( int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += ( 2 * i + 1 ) * ( 2 * i + 1 ) * ( 2 * i + 1 ) ; return sum ; } public static void main ( String args [ ] ) { int a = 5 ; System . out . println ( cubesum ( a ) ) ; } }",
            "python_code": "def cubeSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT sum += ( 2 * i + 1 ) * ( 2 * i + 1 ) * ( 2 * i + 1 ) NEWLINE DEDENT return sum NEWLINE DEDENT print ( cubeSum ( 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_313_A_2618",
            "java_code": "import java . util . * ;  public class Codeforces { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; if ( n >= 0 ) { System . out . println ( n ) ; } else { int max = Math . max ( n / 10 , n / 100 * 10 + n % 10 ) ; System . out . println ( max ) ; } System . out . println ( ) ;  }  }",
            "python_code": "n = int ( input ( ) ) a = abs ( n ) % 10 b = abs ( n ) // 10 % 10 if n > 0 : print ( n ) elif a > b : print ( int ( str ( n ) [ 0 : - 1 ] ) ) else : n = str ( n ) print ( int ( n [ 0 : - 2 ] + n [ - 1 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3591_A_2619",
            "java_code": "class GfG { static int countWays ( int N ) { int E = ( N * ( N - 1 ) ) / 2 ; if ( N == 1 ) return 0 ; return ( int ) Math . pow ( 2 , E - 1 ) ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( countWays ( N ) ) ; } }",
            "python_code": "def countWays ( N ) : NEWLINE INDENT E = ( N * ( N - 1 ) ) / 2 NEWLINE if ( N == 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT return int ( pow ( 2 , E - 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 4 NEWLINE print ( countWays ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_114_A_2620",
            "java_code": "import java . util . * ; public class Cifera { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long k = sc . nextLong ( ) ; long l = sc . nextLong ( ) ; sc . close ( ) ; ",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = 0 x = awhile a * x <= b : c += 1 a *= x   if a == b : print ( \"YES\\n\" , c ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1476_A_2621",
            "java_code": "import java . io . * ; import java . util . * ;  public class KDivisbleSum {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "for i in range ( 0 , int ( input ( ) ) ) : n , k = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE c = n // k NEWLINE if n % k != 0 : c += 1 NEWLINE s = k * c NEWLINE if s % n == 0 : NEWLINE INDENT print ( s // n ) else : NEWLINE print ( s // n + 1 ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2798_A_2622",
            "java_code": "import java . util . * ; class GFG { static int countDigit ( long n ) { return ( int ) Math . floor ( Math . log10 ( n ) + 1 ) ; } public static void main ( String [ ] args ) { long n = 345289467 ; System . out . print ( \"Number of digits : \" + countDigit ( n ) ) ; } }",
            "python_code": "import math NEWLINE def countDigit ( n ) : NEWLINE INDENT return math . floor ( math . log ( n , 10 ) + 1 ) NEWLINE DEDENT n = 345289467 NEWLINE print ( \"Number of digits : % d\" % ( countDigit ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1255_A_2623",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; int count = 0 ; int d = Math . abs ( a - b ) ; count = count + d / 5 ; d = d % 5 ; count = count + d / 2 ; d = d % 2 ; count = count + d ; System . out . println ( count ) ; } } }",
            "python_code": "for i in range ( int ( input ( ) ) ) : a , b = map ( int , input ( ) . split ( ) ) d = abs ( a - b ) print ( d // 5 + d % 5 // 2 + d % 5 % 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1231_A_2624",
            "java_code": "import java . io . * ; class GFG { static int surfaceArea ( int b , int s ) { return 2 * b * s + ( int ) Math . pow ( b , 2 ) ; } public static void main ( String [ ] args ) { int b = 3 , s = 4 ; System . out . println ( surfaceArea ( b , s ) ) ; } }",
            "python_code": "def surfaceArea ( b , s ) : NEWLINE INDENT return 2 * b * s + pow ( b , 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT b = 3 NEWLINE s = 4 NEWLINE print ( surfaceArea ( b , s ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_460_A_2625",
            "java_code": "class GFG { static int numberOfPaths ( int m , int n ) { int path = 1 ; for ( int i = n ; i < ( m + n - 1 ) ; i ++ ) { path *= i ; path /= ( i - n + 1 ) ; } return path ; } public static void main ( String [ ] args ) { System . out . println ( numberOfPaths ( 3 , 3 ) ) ; } }",
            "python_code": "def numberOfPaths ( m , n ) : NEWLINE INDENT for i in range ( n , ( m + n - 1 ) ) : NEWLINE INDENTINDENT path *= i ; NEWLINE path //= ( i - n + 1 ) ; NEWLINE DEDENT return path ; NEWLINE DEDENT print ( numberOfPaths ( 3 , 3 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_920_A_2626",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int kthdigit ( int a , int b , int k ) { int p = ( int ) Math . pow ( a , b ) ; int count = 0 ; while ( p > 0 && count < k ) { int rem = p % 10 ; count ++ ; if ( count == k ) return rem ; p = p / 10 ; } return 0 ; } public static void main ( String argc [ ] ) { int a = 5 , b = 2 ; int k = 1 ; System . out . println ( kthdigit ( a , b , k ) ) ; } }",
            "python_code": "def kthdigit ( a , b , k ) : NEWLINE INDENT p = a ** b NEWLINE count = 0 NEWLINE while ( p > 0 and count < k ) : NEWLINE INDENTINDENT rem = p % 10 NEWLINE count = count + 1 NEWLINE if ( count == k ) : NEWLINE INDENTINDENTINDENT return rem NEWLINE DEDENT p = p / 10 ; NEWLINE DEDENT DEDENT a = 5 NEWLINE b = 2 NEWLINE k = 1 NEWLINE ans = kthdigit ( a , b , k ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_754_A_2627",
            "java_code": "class GFG { static void pairwiseDifference ( int arr [ ] , int n ) { int diff ; for ( int i = 0 ; i < n - 1 ; i ++ ) { diff = Math . abs ( arr [ i ] - arr [ i + 1 ] ) ; System . out . print ( diff + \" \" ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 10 , 15 , 5 , 6 } ; int n = arr . length ; pairwiseDifference ( arr , n ) ; } }",
            "python_code": "def pairwiseDifference ( arr , n ) : NEWLINE INDENT for i in range ( n - 1 ) : NEWLINE INDENTINDENT diff = abs ( arr [ i ] - arr [ i + 1 ] ) NEWLINE print ( diff , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 4 , 10 , 15 , 5 , 6 ] NEWLINE n = len ( arr ) NEWLINE pairwiseDifference ( arr , n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_794_B_2628",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double n = sc . nextInt ( ) ; double h = sc . nextDouble ( ) ; double b = 1 ; double a = ( b * h ) / ( 2 * n ) ; double t = Math . atan2 ( h , 0.5 ) ; for ( int m = 1 ; m <= n - 1 ; m ++ ) { double ax = m * a ; double ans = Math . sqrt ( ax * Math . tan ( t ) ) ; System . out . print ( ans + \" \" ) ; } } } ",
            "python_code": "import mathn , h = [ int ( x ) for x in input ( ) . split ( ' ' ) ] for i in range ( n - 1 ) : print ( math . sqrt ( ( i + 1 ) / ( n ) ) * h , end = \" \" ) print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3740_A_2629",
            "java_code": "import java . io . * ; class GFG { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 2 ) + n - 3 ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 2 * pow ( n , 2 ) + n - 3 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_472_A_2630",
            "java_code": "import java . util . * ; public class DesignTutorialLearnFromMath { public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ; int val = sc . nextInt ( ) ;  int val1 ; if ( val % 2 == 0 ) { val1 = 8 ; } else { val1 = 9 ;  } System . out . println ( val1 + \" \" + ( val - val1 ) ) ; } }",
            "python_code": "n = int ( input ( ) )  if n % 2 == 0 : a , b = 8 , n - 8 else : a , b = 9 , n - 9  print ( a , b )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_855_B_2631",
            "java_code": "import java . util . Scanner ;  import static java . lang . Math . max ; ",
            "python_code": "a = list ( map ( int , input ( ) . split ( ) ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) n = a [ 0 ] dp = [ [ 0 for i in range ( 4 ) ] for j in range ( n + 1 ) ] for i in range ( 4 ) : dp [ 0 ] [ i ] = ( - 10 ) ** ( 27 ) for i in range ( 1 , n + 1 ) : for j in range ( 1 , 4 ) : x = arr [ i - 1 ] * a [ j ] + dp [ i ] [ j - 1 ] y = dp [ i - 1 ] [ j ] dp [ i ] [ j ] = max ( x , y ) print ( dp [ n ] [ 3 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2631_A_2632",
            "java_code": "class GFG { static int getValue ( int n ) { int i = 0 , k = 1 ; while ( i < n ) { i = i + k ; k = k * 2 ; } return k / 2 ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( getValue ( n ) ) ; n = 1025 ; System . out . println ( getValue ( n ) ) ; } }",
            "python_code": "def getValue ( n ) : NEWLINE INDENT i = 0 ; NEWLINE k = 1 ; NEWLINE while ( i < n ) : NEWLINE INDENTINDENT i = i + k ; NEWLINE k = k * 2 ; NEWLINE DEDENT return int ( k / 2 ) ; NEWLINE DEDENT n = 9 ; NEWLINE print ( getValue ( n ) ) ; NEWLINE n = 1025 ; NEWLINE print ( getValue ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1165_B_2633",
            "java_code": "import java . util . * ; public class PolycarpTraining { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int size = sc . nextInt ( ) ; Integer [ ] arr = new Integer [ size ] ; for ( int i = 0 ; i < size ; i ++ ) arr [ i ] = sc . nextInt ( ) ; Arrays . sort ( arr ) ; int index = 1 ; for ( int i = 0 ; i < size ; i ++ ) { if ( arr [ i ] >= index ) { index ++ ; } } System . out . println ( index - 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ' ' ) ) ) a = list ( sorted ( a ) )  days_of_training = 0 for i in range ( len ( a ) ) : if a [ i ] > days_of_training : days_of_training += 1 print ( days_of_training ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5042_A_2634",
            "java_code": "class GFG { public static int solve ( int n ) { int ans = ( n * n / 4 ) ; return ans ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( solve ( n ) ) ; } }",
            "python_code": "def solve ( n ) : NEWLINE INDENT ans = ( n * n // 4 ) NEWLINE return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( solve ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4085_A_2635",
            "java_code": "class GFG { static float sumOfAP ( float a , float d , int n ) { float sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum = sum + a ; a = a + d ; } return sum ; } public static void main ( String args [ ] ) { int n = 20 ; float a = 2.5f , d = 1.5f ; System . out . println ( sumOfAP ( a , d , n ) ) ; } }",
            "python_code": "def sumOfAP ( a , d , n ) : NEWLINE INDENT sum = 0 NEWLINE i = 0 NEWLINE while i < n : NEWLINE INDENTINDENT sum = sum + a NEWLINE a = a + d NEWLINE i = i + 1 NEWLINE DEDENT return sum NEWLINE DEDENT n = 20 NEWLINE a = 2.5 NEWLINE d = 1.5 NEWLINE print ( sumOfAP ( a , d , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_934_B_2636",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; if ( k > 36 ) { System . out . print ( \"-1\" ) ; return ; } while ( k >= 2 ) { k -= 2 ; System . out . print ( \"8\" ) ; } if ( k == 1 ) { System . out . print ( \"6\" ) ; } } }",
            "python_code": "k = int ( input ( ) ) s = \"\" if k > 36 : print ( - 1 ) else : while k > 0 : if k >= 2 : s = s + \"8\" k = k - 2 else : s = s + \"4\" k = k - 1 print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1366_A_2637",
            "java_code": "import java . util . Scanner ;  public class _0842ShovelsandSwords {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : l , r = map ( int , input ( ) . split ( ) ) print ( min ( l , r , ( l + r ) // 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_758_A_2638",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) print ( n * max ( a ) - sum ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_597_A_2639",
            "java_code": "import java . util . Scanner ; public class test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String x = sc . nextLine ( ) ; String [ ] num = x . split ( \" \" ) ;",
            "python_code": "k , a , b = map ( int , input ( ) . split ( ) ) if ( a >= 0 and b >= 0 ) or ( a < 0 and b < 0 ) : if a < 0 and b < 0 : temp = - b b = - a a = temp c = b // k - a // k if a % k == 0 : c += 1 elif a < 0 and b >= 0 : a = - a c = a // k + b // k + 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_617_A_2640",
            "java_code": "import java . util . Scanner ; public class Ex {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , count = 0 ; while ( n != 0 ) { if ( n >= 5 ) { n = n - 5 ; count ++ ; } else { n = n - n ; count ++ ; } } System . out . println ( count ) ; } }",
            "python_code": "x = 0 z = int ( input ( ) ) while z > 0 : if z >= 5 : z = z - 5 x += 1 elif z >= 4 : z = z - 4 x += 1 elif z >= 3 : z = z - 3 x += 1 elif z >= 2 : z = z - 2 x += 1 elif z >= 1 : z = z - 1 x += 1 print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5044_A_2641",
            "java_code": "class GFG { public static double maxEdges ( double N ) { double edges = 0 ; edges = Math . floor ( ( N * N ) / 4 ) ; return edges ; } public static void main ( String [ ] args ) { double N = 5 ; System . out . println ( maxEdges ( N ) ) ; } }",
            "python_code": "def maxEdges ( N ) : NEWLINE INDENT edges = 0 ; NEWLINE edges = ( N * N ) // 4 ; NEWLINE return edges ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 5 ; NEWLINE print ( maxEdges ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_614_B_2642",
            "java_code": "import java . util . Scanner ;  public class GenasCode {  static boolean isBeautiful ( String s ) { boolean foundOne = false ; for ( char c : s . toCharArray ( ) ) { if ( c == '1' ) { if ( foundOne ) return false ;",
            "python_code": "int ( input ( ) ) x = '' zero = 0 for s in input ( ) . split ( ) : if s == '0' : print ( 0 ) , exit ( ) elif s == '1' + '0' * ( len ( s ) - 1 ) : zero += len ( s ) - 1 else : x = sprint ( x + '0' * zero if len ( x ) > 0 else '1' + '0' * zero ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_723_A_2643",
            "java_code": "import java . util . Scanner ;  public class A723 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int x1 = scanner . nextInt ( ) , x2 = scanner . nextInt ( ) , x3 = scanner . nextInt ( ) , max , min ;  max = Math . max ( x1 , Math . max ( x2 , x3 ) ) ; min = Math . min ( x1 , Math . min ( x2 , x3 ) ) ; System . out . println ( max - min ) ; } }",
            "python_code": "friend_coordinate = list ( map ( int , input ( ) . split ( ) ) ) min_value = min ( friend_coordinate ) max_value = max ( friend_coordinate )  mid = ( min_value + max_value ) // 2 print ( ( max_value - mid ) + ( mid - min_value ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_625_A_2644",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "from collections import defaultdict , deque , Counterfrom sys import stdin , stdoutfrom heapq import heappush , heappopimport mathimport ioimport osimport mathimport bisect  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_760_A_2645",
            "java_code": "class Solution { public int [ ] anagramMappings ( int [ ] A , int [ ] B ) { int [ ] ans = new int [ A . length ] ; HashMap < Integer , Integer > valIndex = new HashMap < > ( ) ; for ( int i = 0 ; i < B . length ; i ++ ) valIndex . put ( B [ i ] , i ) ; for ( int i = 0 ; i < A . length ; i ++ ) ans [ i ] = valIndex . get ( A [ i ] ) ; return ans ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def anagramMappings ( self , A , B ) : NEWLINE INDENTINDENT val_index = { } NEWLINE ans = [ ] NEWLINE for i , n in enumerate ( B ) : NEWLINE INDENTINDENTINDENT val_index [ n ] = i NEWLINE DEDENT for n in A : NEWLINE INDENTINDENTINDENT ans . append ( val_index [ n ] ) NEWLINE DEDENT return ans NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1195_B_2646",
            "java_code": "import java . util . * ; public class Sport_Mafia { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long sum = 0 ; long i = 1 ; for ( i = 1 ; i <= n ; i ++ ) { sum = i * ( i + 1 ) ; sum = sum / 2 ; sum -= ( n - i ) ; if ( sum == k ) { System . out . println ( n - i ) ; break ; } } } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  c = 0 i = 1 while 1 : c += i if n - i == c - k : print ( n - i ) break i += 1  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1189_A_2647",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class KeanuReaves { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) k = ( input ( ) ) x = k . count ( '0' ) y = k . count ( '1' ) if ( x == y ) : print ( 2 ) print ( k [ 0 ] , k [ 1 : ] ) else : print ( 1 ) print ( k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1586_A_2648",
            "java_code": "class GFG { static int findS ( int s ) { int sum = 0 ; for ( int n = 1 ; sum < s ; n ++ ) { sum += n ; if ( sum == s ) return n ; } return - 1 ; } public static void main ( String [ ] args ) { int s = 15 ; int n = findS ( s ) ; if ( n == - 1 ) System . out . println ( \"-1\" ) ; else System . out . println ( n ) ; } }",
            "python_code": "def findS ( s ) : NEWLINE INDENT _sum = 0 NEWLINE n = 1 NEWLINE while ( _sum < s ) : NEWLINE INDENTINDENT _sum += n NEWLINE n += 1 NEWLINE DEDENT n -= 1 NEWLINE if _sum == s : NEWLINE INDENTINDENT return n NEWLINE DEDENT return - 1 NEWLINE DEDENT s = 15 NEWLINE n = findS ( s ) NEWLINE if n == - 1 : NEWLINE INDENT print ( \"-1\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( n ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1272_A_2649",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNextInt ( ) ) { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; System . out . println ( Math . max ( 0 , Math . abs ( a - b ) + Math . abs ( a - c ) + Math . abs ( b - c ) - 4 ) ) ; } } } }",
            "python_code": "import sysinput = sys . stdin . readline  for test in range ( int ( input ( ) ) ) : a = sorted ( [ int ( i ) for i in input ( ) . split ( ) ] ) if a [ 0 ] == a [ 1 ] and a [ 1 ] == a [ 2 ] : res = 0 else : res = 4 ans = abs ( a [ 0 ] - a [ 1 ] ) + abs ( a [ 0 ] - a [ 2 ] ) + abs ( a [ 1 ] - a [ 2 ] ) print ( max ( 0 , ans - res ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_560_A_2650",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int ans = 1 ;   for ( int i = 0 ; i < n ; i ++ ) { int num = sc . nextInt ( ) ; if ( num == 1 ) { ans = - 1 ;",
            "python_code": "a = input ( ) b = input ( ) . split ( ) if \"1\" in b : print ( \"-1\" ) else : print ( \"1\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_484_A_2651",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "from sys import stdin NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_511_A_2652",
            "java_code": "import java . io . * ; import java . math . * ; import java . text . * ; import java . util . * ; import java . util . regex . * ; class GFG { static int summingSeries ( long n ) { int S = 0 ; for ( i = 1 ; i <= n ; i ++ ) S += i * i - ( i - 1 ) * ( i - 1 ) ; return S ; } public static void main ( String [ ] args ) { int n = 100 ; System . out . println ( \"The sum of n term is: \" + summingSeries ( n ) ) ; } }",
            "python_code": "def summingSeries ( n ) : NEWLINE INDENT S = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT S += i * i - ( i - 1 ) * ( i - 1 ) NEWLINE DEDENT return S NEWLINE DEDENT n = 100 NEWLINE print ( \"The sum of n term is: \" , summingSeries ( n ) , sep = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1237_B_2653",
            "java_code": "   import java . awt . * ; import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "numCars = int ( input ( ) ) tEntrance = [ int ( num ) for num in input ( ) . split ( ) ] tExit = [ int ( num ) for num in input ( ) . split ( ) ]  fines = 0j = 0 occurred = set ( ) for i in range ( numCars ) : if tEntrance [ i ] in occurred : continue while tExit [ j ] != tEntrance [ i ] : occurred . add ( tExit [ j ] ) fines += 1 j += 1 occurred . add ( tExit [ j ] ) j += 1 print ( fines ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_128_B_2654",
            "java_code": "import java . util . * ;  import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { FastScanner in = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; new Main ( ) . run ( in , out ) ; out . close ( ) ; } ",
            "python_code": "import heapqs = str ( input ( ) ) k = int ( input ( ) ) n = len ( s ) l = [ ] if k > ( n * ( n + 1 ) ) // 2 : print ( 'No such line.' ) else : for i in range ( n ) : heapq . heappush ( l , ( s [ i ] , i + 1 ) ) while k > 0 : k -= 1 x , y = heapq . heappop ( l ) if y < n : heapq . heappush ( l , ( x + s [ y ] , y + 1 ) ) print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_616_A_2655",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; public class Main {",
            "python_code": "a = input ( ) b = input ( ) a = a . lstrip ( '0' ) b = b . lstrip ( '0' ) if len ( a ) != len ( b ) : print ( '<' if len ( a ) < len ( b ) else '>' ) exit ( 0 ) for i in range ( len ( a ) ) : if a [ i ] != b [ i ] : print ( '<' if a [ i ] < b [ i ] else '>' ) exit ( 0 ) print ( '=' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4729_A_2656",
            "java_code": "class GFG { static int ksmallest ( int arr [ ] , int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] <= k ) k ++ ; else break ; } return k ; } public static void main ( String args [ ] ) { int k = 1 ; int arr [ ] = { 1 } ; int n = arr . length ; System . out . println ( ksmallest ( arr , n , k ) ) ; } }",
            "python_code": "def ksmallest ( arr , n , k ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] <= k ) : NEWLINE INDENTINDENTINDENT k = k + 1 ; NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT break ; NEWLINE DEDENT DEDENT return k ; NEWLINE DEDENT k = 1 ; NEWLINE arr = [ 1 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( ksmallest ( arr , n , k ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_643_A_2657",
            "java_code": "class GFG { static int nthXorFib ( int n , int a , int b ) { if ( n == 0 ) return a ; if ( n == 1 ) return b ; if ( n == 2 ) return ( a ^ b ) ; return nthXorFib ( n % 3 , a , b ) ; } public static void main ( String [ ] args ) { int a = 1 , b = 2 , n = 10 ; System . out . println ( nthXorFib ( n , a , b ) ) ; } }",
            "python_code": "def nthXorFib ( n , a , b ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return a NEWLINE DEDENT if n == 1 : NEWLINE INDENTINDENT return b NEWLINE DEDENT if n == 2 : NEWLINE INDENTINDENT return a ^ b NEWLINE DEDENT return nthXorFib ( n % 3 , a , b ) NEWLINE DEDENT a = 1 NEWLINE b = 2 NEWLINE n = 10 NEWLINE print ( nthXorFib ( n , a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1445_A_2658",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ;  public class problem34 {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) NEWLINE for p in range ( n ) : n1 , k = map ( int , input ( ) . split ( ) ) NEWLINE a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE b = list ( map ( int , input ( ) . split ( ) ) ) [ : : - 1 ] NEWLINE if p != n - 1 : z = input ( ) NEWLINE for x in range ( n1 ) : if NEWLINE a [ x ] + b [ x ] > k : print ( 'No' ) NEWLINE break else : print ( 'Yes' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1876_A_2659",
            "java_code": "import java . io . * ; class GFG { public static int countSetBits ( int n ) { if ( n == 0 ) return 0 ; else return 1 + countSetBits ( n & ( n - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( countSetBits ( n ) ) ; } }",
            "python_code": "def countSetBits ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 1 + countSetBits ( n & ( n - 1 ) ) NEWLINE DEDENT DEDENT n = 9 NEWLINE print ( countSetBits ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_614_A_2660",
            "java_code": "import java . io . File ; import java . math . BigInteger ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class p008 { public static void main ( String args [ ] ) throws Exception {",
            "python_code": "l , r , k = map ( int , input ( ) . split ( ) ) ans = 1 ; c = 0 while ( ans < l ) : ans = ans * kwhile ( ans <= r ) : c = c + 1 print ( ans ) ans = ans * kif ( c == 0 ) : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3154_A_2661",
            "java_code": "class GFG { static int __gcd ( int a , int b ) { if ( b == 0 ) return a ; return __gcd ( b , a % b ) ; } static void noOfSquares ( int x1 , int y1 , int x2 , int y2 ) { int dx = Math . abs ( x2 - x1 ) ; int dy = Math . abs ( y2 - y1 ) ; int ans = dx + dy - __gcd ( dx , dy ) ; System . out . println ( ans ) ; } public static void main ( String [ ] args ) { int x1 = 1 , y1 = 1 , x2 = 4 , y2 = 3 ; noOfSquares ( x1 , y1 , x2 , y2 ) ; } }",
            "python_code": "from math import gcd NEWLINE def noOfSquares ( x1 , y1 , x2 , y2 ) : NEWLINE INDENT dx = abs ( x2 - x1 ) ; NEWLINE dy = abs ( y2 - y1 ) ; NEWLINE ans = dx + dy - gcd ( dx , dy ) ; NEWLINE print ( ans ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT x1 = 1 ; y1 = 1 ; x2 = 4 ; y2 = 3 ; NEWLINE noOfSquares ( x1 , y1 , x2 , y2 ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_114_A_2662",
            "java_code": "import java . util . Scanner ;  public class cifera { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int number = sc . nextInt ( ) ; int i = 1 ; if ( number % n != 0 ) { System . out . println ( \"NO\" ) ; return ; } else { while ( Math . pow ( n , i ) <= number ) { i ++ ;",
            "python_code": "k = int ( input ( ) ) l = int ( input ( ) ) i = 0 while l > 1 : l /= k ; i += 1 if l == 1 : print ( \"YES\" ) print ( i - 1 ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_753_A_2663",
            "java_code": "import java . util . * ; public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; List < Integer > list = new ArrayList < > ( ) ; int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) {",
            "python_code": "n = int ( input ( ) ) i = 1 a = [ ] while n >= i : a . append ( i ) n -= i i += 1 if n > 0 : a [ - 1 ] += nprint ( len ( a ) ) print ( * a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4735_A_2664",
            "java_code": "import java . io . * ; class GFG { static int countBits ( int number ) { return ( int ) ( Math . log ( number ) / Math . log ( 2 ) + 1 ) ; } public static void main ( String [ ] args ) { int num = 65 ; System . out . println ( countBits ( num ) ) ; } }",
            "python_code": "import math NEWLINE def countBits ( number ) : NEWLINE INDENT return int ( ( math . log ( number ) / math . log ( 2 ) ) + 1 ) ; NEWLINE DEDENT num = 65 ; NEWLINE print ( countBits ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2957_A_2665",
            "java_code": "import java . io . * ; class GFG { static int highestPowerof2 ( int n ) { int p = ( int ) ( Math . log ( n ) / Math . log ( 2 ) ) ; return ( int ) Math . pow ( 2 , p ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( highestPowerof2 ( n ) ) ; } }",
            "python_code": "import math NEWLINE def highestPowerof2 ( n ) : NEWLINE INDENT p = int ( math . log ( n , 2 ) ) ; NEWLINE return int ( pow ( 2 , p ) ) ; NEWLINE DEDENT n = 10 ; NEWLINE print ( highestPowerof2 ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_348_A_2666",
            "java_code": "import java . io . * ; class GFG { static void CalPeri ( ) { int S = 5 , Perimeter ; Perimeter = 10 * S ; System . out . println ( \"The Perimeter of Decagon is : \" + Perimeter ) ; } public static void main ( String [ ] args ) { CalPeri ( ) ; } }",
            "python_code": "def CalPeri ( ) : NEWLINE INDENT s = 5 NEWLINE Perimeter = 10 * s NEWLINE print ( \"The Perimeter of Decagon is : \" , Perimeter ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT CalPeri ( ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4186_A_2667",
            "java_code": "class GFG { static boolean isPossible ( int w , int h , int x , int y ) { if ( x * 2 == w && y * 2 == h ) return true ; return false ; } public static void main ( String [ ] args ) { int w = 1 , h = 2 , x = 1 , y = 2 ; if ( isPossible ( w , h , x , y ) ) System . out . print ( \"Yes\" ) ; else System . out . print ( \"No\" ) ; } }",
            "python_code": "def isPossible ( w , h , x , y ) : NEWLINE INDENT if ( x * 2 == w and y * 2 == h ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT w = 1 NEWLINE h = 2 NEWLINE x = 1 NEWLINE y = 2 NEWLINE if ( isPossible ( w , h , x , y ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4176_A_2668",
            "java_code": "class GFG { static void subString ( char str [ ] , int n ) { for ( int len = 1 ; len <= n ; len ++ ) { for ( int i = 0 ; i <= n - len ; i ++ ) { int j = i + len - 1 ; for ( int k = i ; k <= j ; k ++ ) { System . out . print ( str [ k ] ) ; } System . out . println ( ) ; } } } public static void main ( String [ ] args ) { char str [ ] = { 'a' , 'b' , 'c' } ; subString ( str , str . length ) ; } }",
            "python_code": "def subString ( Str , n ) : NEWLINE INDENT for Len in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT for i in range ( n - Len + 1 ) : NEWLINE INDENTINDENTINDENT j = i + Len - 1 NEWLINE for k in range ( i , j + 1 ) : NEWLINE INDENTINDENTINDENTINDENT print ( Str [ k ] , end = \"\" ) NEWLINE DEDENT print ( ) NEWLINE DEDENT DEDENT DEDENT Str = \"abc\" NEWLINE subString ( Str , len ( Str ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_168_A_2669",
            "java_code": "import java . io . * ; import java . util . * ;  public class mahakal {  static long mod = ( long ) 1e9 + 7l ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ;  int res = ( int ) Math . ceil ( ( double ) ( n * y ) / 100 ) ; System . out . println ( Math . max ( 0 , res - x ) ) ;  } }   ",
            "python_code": "from sys import stdin , stdoutimport math , sysfrom itertools import permutations , combinationsfrom collections import defaultdict , deque , OrderedDictfrom os import pathimport bisect as biimport heapq def yes ( ) : print ( 'YES' ) def no ( ) : print ( 'NO' ) if ( path . exists ( 'input.txt' ) ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_432_A_2670",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int count = 0 ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( a [ i ] + k ) <= 5 ) count ++ ; } System . out . println ( count / 3 ) ; } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  y = [ int ( i ) for i in input ( ) . split ( ) ]  y = [ 5 - i for i in y ]  y . sort ( reverse = True )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_129_A_2671",
            "java_code": "import java . util . Scanner ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Cv {",
            "python_code": "n = int ( input ( ) ) l = [ int ( i ) for i in input ( ) . split ( ) ] [ : n ] count = 0 for i in l : s = sum ( l ) - i if ( s % 2 == 0 ) : count += 1  print ( count )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2976_A_2672",
            "java_code": "public class GFG { static int findNum ( int div [ ] , int rem [ ] , int N ) { int num = rem [ N - 1 ] ; for ( int i = N - 2 ; i >= 0 ; i -- ) { num = num * div [ i ] + rem [ i ] ; } return num ; } public static void main ( String [ ] args ) { int div [ ] = { 8 , 3 } ; int rem [ ] = { 2 , 2 } ; int N = div . length ; System . out . println ( findNum ( div , rem , N ) ) ; } }",
            "python_code": "def findNum ( div , rem , N ) : NEWLINE INDENT num = rem [ N - 1 ] NEWLINE i = N - 2 NEWLINE while ( i >= 0 ) : NEWLINE INDENTINDENT num = num * div [ i ] + rem [ i ] NEWLINE i -= 1 NEWLINE DEDENT return num NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT div = [ 8 , 3 ] NEWLINE rem = [ 2 , 2 ] NEWLINE N = len ( div ) NEWLINE print ( findNum ( div , rem , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1137_B_2673",
            "java_code": "import java . io . * ; import java . util . * ;   public class D {  static int longestPrefixSuffix ( String s ) { int n = s . length ( ) ; int lps [ ] = new int [ n ] ;",
            "python_code": "flip = { '0' : '1' , '1' : '0' } NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3646_A_2674",
            "java_code": "import java . io . * ; class GFG { static float InscribedCircleArea ( float n , float a ) { if ( a < 0 && n < 0 ) return - 1 ; float r = a / ( float ) ( 2 * Math . tan ( ( 180 / n ) * 3.14159 / 180 ) ) ; float Area = ( float ) ( 3.14 ) * ( r ) * ( r ) ; return Area ; } public static void main ( String [ ] args ) { float n = 6 ; float a = 4 ; System . out . println ( InscribedCircleArea ( n , a ) ) ; } }",
            "python_code": "from math import tan NEWLINE def InscribedCircleArea ( n , a ) : NEWLINE INDENT if ( a < 0 and n < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT r = a / ( 2 * tan ( ( 180 / n ) * 3.14159 / 180 ) ) ; NEWLINE Area = 3.14 * r * r NEWLINE return Area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 4 NEWLINE n = 6 NEWLINE print ( '{0:.6}' . format ( InscribedCircleArea ( n , a ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_B_2675",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE l1 = list ( set ( a ) ) NEWLINE if len ( a ) == len ( l1 ) : NEWLINE INDENT print ( \"NO\" ) else : NEWLINE print ( \"YES\" )  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3146_A_2676",
            "java_code": "import java . io . * ; class GFG { static int getSum ( int n ) { int sum ; for ( sum = 0 ; n > 0 ; sum += n % 10 , n /= 10 ) ; return sum ; } public static void main ( String [ ] args ) { int n = 687 ; System . out . println ( getSum ( n ) ) ; } }",
            "python_code": "def getSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT sum += int ( n % 10 ) NEWLINE n = int ( n / 10 ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 687 NEWLINE print ( getSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2276_A_2677",
            "java_code": "import java . util . * ; class GFG { static double sumOfSeries ( int n ) { return 0.0246 * ( Math . pow ( 10 , n ) - 1 - ( 9 * n ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "import math NEWLINE def sumOfSeries ( n ) : NEWLINE INDENT return 0.0246 * ( math . pow ( 10 , n ) - 1 - ( 9 * n ) ) NEWLINE DEDENT n = 3 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1398_A_2678",
            "java_code": "import java . util . * ; public class op { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; int i , j ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; } if ( a [ 0 ] + a [ 1 ] <= a [ n - 1 ] ) System . out . println ( 1 + \" \" + 2 + \" \" + n ) ; else System . out . println ( - 1 ) ; } } }",
            "python_code": "import sys NEWLINE input = sys . stdin . readline NEWLINE for test in range ( int ( input ( ) ) ) : NEWLINE INDENT n = int ( input ( ) ) NEWLINE a = [ int ( i ) for i in input ( ) . split ( ) ] NEWLINE if a [ 0 ] + a [ 1 ] > a [ - 1 ] : NEWLINE INDENTINDENT print ( - 1 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( 1 , 2 , n ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1100_A_2679",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Exam { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "import copyn , k = map ( int , input ( ) . split ( ) ) tabs = list ( map ( int , input ( ) . split ( ) ) ) tabs . insert ( 0 , 0 ) max_value = 0  for each_b in range ( 1 , n + 1 ) : temp = copy . deepcopy ( tabs )  i = each_b while i <= n : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1466_B_2680",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;",
            "python_code": "from collections import defaultdictfor NEWLINE _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE a = sorted ( list ( map ( int , input ( ) . split ( ) ) ) , reverse = 1 ) NEWLINE d = defaultdict ( int ) NEWLINE for i in a : d [ i ] += 1 NEWLINE for i in a : if NEWLINE not d [ i + 1 ] : d [ i ] -= 1 NEWLINE if not d [ i ] : del d [ i ] NEWLINE d [ i + 1 ] = 1 NEWLINE print ( len ( d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4010_A_2681",
            "java_code": "import java . io . * ; class GFG { static void printSquares ( int n ) { int square = 0 , prev_x = 0 ; for ( int x = 0 ; x < n ; x ++ ) { square = ( square + x + prev_x ) ; System . out . print ( square + \" \" ) ; prev_x = x ; } } public static void main ( String [ ] args ) { int n = 5 ; printSquares ( n ) ; } }",
            "python_code": "def printSquares ( n ) : NEWLINE INDENT square = 0 ; prev_x = 0 ; NEWLINE for x in range ( 0 , n ) : NEWLINE INDENTINDENT square = ( square + x + prev_x ) NEWLINE print ( square , end = \" \" ) NEWLINE prev_x = x NEWLINE DEDENT DEDENT n = 5 ; NEWLINE printSquares ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2687_A_2682",
            "java_code": "import java . util . * ; class GFG { static int round ( int n ) { int a = ( n / 10 ) * 10 ; int b = a + 10 ; return ( n - a > b - n ) ? b : a ; } public static void main ( String [ ] args ) { int n = 4722 ; System . out . println ( round ( n ) ) ; } }",
            "python_code": "def round ( n ) : NEWLINE INDENT a = ( n // 10 ) * 10 NEWLINE b = a + 10 NEWLINE return ( b if n - a > b - n else a ) NEWLINE DEDENT n = 4722 NEWLINE print ( round ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_59_A_2683",
            "java_code": "import java . util . Scanner ; public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) NEWLINE countc = 0 NEWLINE counts = 0 NEWLINE for i in s : if NEWLINE INDENT ( ord ( i ) >= 97 and ord ( i ) <= 122 ) : counts += 1 elif ( ord ( i ) >= 65 and ord ( i ) <= 90 ) : countc += 1 NEWLINE DEDENT if ( countc > counts ) : NEWLINE INDENT print ( s . upper ( ) ) else : NEWLINE print ( s . lower ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2622_A_2684",
            "java_code": "class GFG { static void findNthTerm ( int N ) { int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( i % 2 == 0 ) { ans = ans + 6 ; } else { ans = ans + 2 ; } } System . out . print ( ans + \"\\n\" ) ; } public static void main ( String [ ] args ) { int N = 3 ; findNthTerm ( N ) ; } }",
            "python_code": "def findNthTerm ( N ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( N ) : NEWLINE INDENTINDENT if ( i % 2 == 0 ) : NEWLINE INDENTINDENTINDENT ans = ans + 6 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT ans = ans + 2 NEWLINE DEDENT DEDENT print ( ans ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 3 NEWLINE findNthTerm ( N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1955_A_2685",
            "java_code": "class GFG { static int countNums ( int l , int r ) { int cnt = 0 ; for ( int i = l ; i <= r ; i ++ ) { int lastDigit = ( i % 10 ) ; if ( ( lastDigit % 10 ) == 2 || ( lastDigit % 10 ) == 3 || ( lastDigit % 10 ) == 9 ) { cnt ++ ; } } return cnt ; } public static void main ( String [ ] args ) { int l = 11 , r = 33 ; System . out . print ( countNums ( l , r ) ) ; } }",
            "python_code": "def countNums ( l , r ) : NEWLINE INDENT cnt = 0 ; NEWLINE for i in range ( l , r + 1 ) : NEWLINE INDENTINDENT lastDigit = ( i % 10 ) ; NEWLINE if ( ( lastDigit % 10 ) == 2 or ( lastDigit % 10 ) == 3 or ( lastDigit % 10 ) == 9 ) : NEWLINE INDENTINDENTINDENT cnt += 1 ; NEWLINE DEDENT DEDENT return cnt ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l = 11 ; r = 33 ; NEWLINE print ( countNums ( l , r ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4739_A_2686",
            "java_code": "public class GFG { static int INT_SIZE = 32 ; static int Right_most_setbit ( int num ) { int pos = 1 ; for ( int i = 0 ; i < INT_SIZE ; i ++ ) { if ( ( num & ( 1 << i ) ) == 0 ) pos ++ ; else break ; } return pos ; } public static void main ( String [ ] args ) { int num = 18 ; int pos = Right_most_setbit ( num ) ; System . out . println ( pos ) ; } }",
            "python_code": "INT_SIZE = 32 NEWLINE def Right_most_setbit ( num ) : NEWLINE INDENT pos = 1 NEWLINE for i in range ( INT_SIZE ) : NEWLINE INDENTINDENT if not ( num & ( 1 << i ) ) : NEWLINE INDENTINDENTINDENT pos += 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT break NEWLINE DEDENT DEDENT return pos NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT num = 18 NEWLINE pos = Right_most_setbit ( num ) NEWLINE print ( pos ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_312_B_2687",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ;",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time , math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_977_A_2688",
            "java_code": "import java . io . * ; import java . util . * ; public class AWrongSubstraction { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n , k ; n = input . nextInt ( ) ; k = input . nextInt ( ) ; for ( int i = 0 ; i < k ; i ++ ) { if ( n % 10 == 0 ) n = n / 10 ; else n -- ; } System . out . println ( n ) ; } }",
            "python_code": "n , k = input ( ) . split ( sep = ' ' ) n = int ( n ) k = int ( k ) kcont = 0  for i in range ( 0 , k ) : if n % 10 == 0 : n = n / 10 else : n = n - 1  print ( int ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3133_A_2689",
            "java_code": "class GFG { static int rev_num = 0 ; static int base_pos = 1 ; static int reversDigits ( int num ) { if ( num > 0 ) { reversDigits ( num / 10 ) ; rev_num += ( num % 10 ) * base_pos ; base_pos *= 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( reversDigits ( num ) ) ; } }",
            "python_code": "rev_num = 0 NEWLINE base_pos = 1 NEWLINE def reversDigits ( num ) : NEWLINE INDENT global rev_num NEWLINE global base_pos NEWLINE if ( num > 0 ) : NEWLINE INDENTINDENT reversDigits ( ( int ) ( num / 10 ) ) NEWLINE rev_num += ( num % 10 ) * base_pos NEWLINE base_pos *= 10 NEWLINE DEDENT return rev_num NEWLINE DEDENT num = 4562 NEWLINE print ( \"Reverse of no. is \" , reversDigits ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4819_A_2690",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int sumOfSeries ( int n ) { int sum = 0 ; for ( int x = 1 ; x <= n ; x ++ ) sum += x * x * x ; return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( sumOfSeries ( n ) ) ; } }",
            "python_code": "def sumOfSeries ( n ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT sum += i * i * i NEWLINE DEDENT return sum NEWLINE DEDENT n = 5 NEWLINE print ( sumOfSeries ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5057_A_2691",
            "java_code": "class GFG { static int countPairs ( int arr [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) if ( arr [ i ] == arr [ j ] ) ans ++ ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 1 , 2 } ; int n = arr . length ; System . out . println ( countPairs ( arr , n ) ) ; } }",
            "python_code": "def countPairs ( arr , n ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT if ( arr [ i ] == arr [ j ] ) : NEWLINE INDENTINDENTINDENTINDENT ans += 1 NEWLINE DEDENT DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 1 , 1 , 2 ] NEWLINE n = len ( arr ) NEWLINE print ( countPairs ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1369_A_2692",
            "java_code": "import java . util . Scanner ;  public class FashionableLee { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int test = sc . nextInt ( ) ; for ( int i = 0 ; i < test ; i ++ ) { long side = sc . nextInt ( ) ; if ( side % 4 == 0 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } } }",
            "python_code": "from collections import Counter  def solve ( ) : n = int ( input ( ) )  if n % 4 : return \"NO\"  return \"YES\"   for i in range ( int ( input ( ) ) ) : print ( solve ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_31_A_2693",
            "java_code": "import java . io . * ; import java . util . * ;  public class WormEvolution_Edu31 { public static void main ( String [ ] args ) throws IOException { FastReader fr = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new OutputStreamWriter ( System . out ) ) ; int n = fr . nextInt ( ) ; int [ ] arr = new int [ n ] ;  for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = fr . nextInt ( ) ; } ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) flag = 0 for i in range ( n ) : for j in range ( n ) : if ( i == j ) : continue for k in range ( n ) : if ( i == k or j == k ) : continue if ( arr [ i ] == arr [ j ] + arr [ k ] ) : flag = 1 print ( i + 1 , j + 1 , k + 1 ) break if ( flag ) : break if ( flag ) : breakif ( flag == 0 ) : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1797_A_2694",
            "java_code": "class GFG { static int printPermutation ( int n ) { if ( n % 2 != 0 ) { System . out . println ( \"-1\" ) ; } else for ( int i = 1 ; i <= n / 2 ; i ++ ) { System . out . print ( 2 * i + \" \" + ( ( 2 * i ) - 1 ) + \" \" ) ; } return n ; } public static void main ( String [ ] args ) { int n = 4 ; printPermutation ( n ) ; } }",
            "python_code": "def printPermutation ( n ) : NEWLINE INDENT if ( n % 2 != 0 ) : NEWLINE INDENTINDENT print ( - 1 ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT for i in range ( 1 , ( n // 2 ) + 1 ) : NEWLINE INDENTINDENTINDENT print ( ( 2 * i ) , ( 2 * i - 1 ) , end = \" \" ) ; NEWLINE DEDENT DEDENT DEDENT n = 4 ; NEWLINE printPermutation ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1051_B_2695",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; System . out . println ( \"YES\" ) ; for ( long i = a ; i < b ; i += 2 ) { System . out . println ( Long . toString ( i ) + \" \" + Long . toString ( i + 1 ) ) ; }  } }",
            "python_code": "l , r = map ( int , input ( ) . split ( ) ) print ( 'YES' ) for i in range ( l , r + 1 , 2 ) : print ( i , i + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_204_A_2696",
            "java_code": "import java . util . Scanner ;  public class A {  public static int MOD = 1_000_000_007 ; public static void main ( String [ ] args ) {  Scanner scanner = new Scanner ( System . in ) ; long l = scanner . nextLong ( ) ; long r = scanner . nextLong ( ) ; long L = Interval ( l - 1 ) ; long R = Interval ( r ) ;",
            "python_code": "l , r = list ( map ( int , input ( ) . split ( ) ) )  def cnt ( x ) : ret = 0 for i in range ( 1 , x + 1 ) : s = str ( i ) if s [ 0 ] == s [ - 1 ] : ret += 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1846_A_2697",
            "java_code": "class GFG { static String isEvenOrOdd ( int L , int R ) { int oddCount = ( R - L ) / 2 ; if ( R % 2 == 1 || L % 2 == 1 ) oddCount ++ ; if ( oddCount % 2 == 0 ) return \"Even\" ; else return \"Odd\" ; } public static void main ( String [ ] args ) { int L = 5 , R = 15 ; System . out . println ( isEvenOrOdd ( L , R ) ) ; } }",
            "python_code": "def isEvenOrOdd ( L , R ) : NEWLINE INDENT oddCount = ( R - L ) / 2 NEWLINE if ( R % 2 == 1 or L % 2 == 1 ) : NEWLINE INDENTINDENT oddCount = oddCount + 1 NEWLINE DEDENT if ( oddCount % 2 == 0 ) : NEWLINE INDENTINDENT return \"Even\" NEWLINE DEDENT else : NEWLINE INDENTINDENT return \"Odd\" NEWLINE DEDENT DEDENT L = 5 NEWLINE R = 15 NEWLINE print ( isEvenOrOdd ( L , R ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1214_A_2698",
            "java_code": "import java . util . Scanner ;  public class A1214 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int D = in . nextInt ( ) ; int E = 5 * in . nextInt ( ) ; int min = N ; for ( int e = 0 ; e <= N ; e += E ) { min = Math . min ( min , ( N - e ) % D ) ; } System . out . println ( min ) ; }  }",
            "python_code": "rub = int ( input ( ) ) dolls = int ( input ( ) ) eur = int ( input ( ) )  dollars = [ ] euros = [ ] for i in [ 1 , 2 , 5 , 10 , 20 , 50 , 100 ] : dollars . append ( dolls * i ) for j in [ 5 , 10 , 20 , 50 , 100 , 200 ] : euros . append ( eur * j )  res = float ( 'inf' )  for i in range ( 0 , rub + 1 , euros [ 0 ] ) : res = min ( res , ( rub - i ) % dollars [ 0 ] )  print ( rub if res == float ( 'inf' ) else res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_150_B_2699",
            "java_code": "import java . io . * ; import java . util . * ;  public class ranjan {  public static Reader cin ; public static PrintWriter cout ; public static boolean [ ] visited ; public static final long bil = ( long ) 1e9 + 7 ; public static void main ( String [ ] arg ) throws IOException {",
            "python_code": "n , m , k = input ( ) . split ( ) n = int ( n ) m = int ( m ) k = int ( k ) module = 1000000007 if k <= 0 : print ( 0 ) elif k == 1 or k > n : print ( ( m ** n ) % module ) elif k == n : print ( ( m ** int ( ( n + 1 ) / 2 ) ) % module ) elif k % 2 == 1 : print ( ( m ** 2 ) % module ) elif k % 2 == 0 : print ( m % module ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1144_B_2700",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { static int [ ] A ; static int [ ] B ; static int [ ] C ; static int n ; static int ans ; public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) ) lst = sorted ( list ( map ( int , input ( ) . split ( ) ) ) , reverse = True ) pis = [ i for i in lst if i % 2 == 0 ] pos = [ i for i in lst if i not in pis ] a , b = len ( pis ) , len ( pos ) if abs ( a - b ) <= 1 : print ( 0 ) else : print ( sum ( pis [ b + 1 : ] ) if a > b else sum ( pos [ a + 1 : ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_745_A_2701",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; import java . util . HashSet ; import java . util . LinkedList ; import java . util . Queue ; import java . util . Scanner ; import java . util . Set ;  public class NewMain2 {  public static void main ( String [ ] args ) {",
            "python_code": "s = input ( ) n = len ( s ) res = set ( ) for i in range ( n ) : res . add ( s [ i : ] + s [ : i ] ) print ( len ( res ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1826_A_2702",
            "java_code": "import java . util . * ; class solution { static long getNthTerm ( long N ) { return 4 * ( long ) Math . pow ( N , 2 ) - 3 * N + 2 ; } public static void main ( String arr [ ] ) { long N = 10 ; System . out . println ( getNthTerm ( N ) ) ; } }",
            "python_code": "def getNthTerm ( N ) : NEWLINE INDENT return 4 * pow ( N , 2 ) - 3 * N + 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 10 NEWLINE print ( getNthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1195_A_2703",
            "java_code": "import java . util . * ; import java . io . * ;  public class A1195 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) C = [ 0 ] * ( k + 1 ) for _ in range ( n ) : C [ int ( input ( ) ) ] += 1 odd = 0 for c in C : if c % 2 == 1 : odd += 1 print ( ( ( n + 1 ) // 2 ) * 2 - ( odd + 1 ) // 2 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3005_A_2704",
            "java_code": "class GFG { static int sum ( int h ) { return ( int ) Math . pow ( 2 , h - 1 ) ; } public static void main ( String [ ] args ) { int L = 3 ; System . out . println ( sum ( L ) ) ; } }",
            "python_code": "def summ ( h ) : NEWLINE INDENT return pow ( 2 , h - 1 ) NEWLINE DEDENT L = 3 NEWLINE print ( summ ( L ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1121_B_2705",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { FastScanner sc = new FastScanner ( ) ;",
            "python_code": "x = int ( input ( ) ) s = list ( map ( int , input ( ) . split ( ) ) ) d = { } for n in range ( x ) : for k in range ( n + 1 , x ) : j = s [ n ] + s [ k ] if j in d . keys ( ) : d [ j ] += 1 else : d [ j ] = 1 print ( max ( d . values ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_955_A_2706",
            "java_code": "import java . util . * ; class GFG { public static int countDistinct ( int arr [ ] , int n ) { HashSet < Integer > hs = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { hs . add ( arr [ i ] ) ; } return hs . size ( ) ; } public static void main ( String [ ] args ) { int arr [ ] = new int [ ] { 6 , 10 , 5 , 4 , 9 , 120 , 4 , 6 , 10 } ; System . out . println ( countDistinct ( arr , arr . length ) ) ; } }",
            "python_code": "def countDistinct ( arr , n ) : NEWLINE INDENT s = set ( ) NEWLINE res = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( arr [ i ] not in s ) : NEWLINE INDENTINDENTINDENT s . add ( arr [ i ] ) NEWLINE res += 1 NEWLINE DEDENT DEDENT return res NEWLINE DEDENT arr = [ 6 , 10 , 5 , 4 , 9 , 120 , 4 , 6 , 10 ] NEWLINE n = len ( arr ) NEWLINE print ( countDistinct ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3671_A_2707",
            "java_code": "import java . io . * ; class GFG { static void CountSegments ( int N , int a [ ] ) { int frequency [ ] = new int [ 10001 ] ; int c = 0 ; for ( int i = 0 ; i < N ; i ++ ) { frequency [ a [ i ] ] ++ ; } for ( int i = 0 ; i <= 10000 ; i ++ ) c = Math . max ( c , frequency [ i ] ) ; System . out . println ( c ) ; } public static void main ( String [ ] args ) { int N = 6 ; int [ ] a = { 1 , 3 , 4 , 3 , 2 , 3 } ; CountSegments ( N , a ) ; } }",
            "python_code": "def CountSegments ( N , a ) : NEWLINE INDENT frequency = [ 0 ] * 10001 NEWLINE c = 0 NEWLINE for i in range ( N ) : NEWLINE INDENTINDENT frequency [ a [ i ] ] += 1 NEWLINE DEDENT for i in range ( 10001 ) : NEWLINE INDENTINDENT c = max ( c , frequency [ i ] ) NEWLINE DEDENT print ( c ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 6 NEWLINE a = [ 1 , 3 , 4 , 3 , 2 , 3 ] NEWLINE CountSegments ( N , a ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_340_A_2708",
            "java_code": " import java . util . * ; import java . lang . * ;",
            "python_code": "  x , y , a , b = map ( int , input ( ) . split ( ) ) u = 0 import math   f = math . gcd ( x , y ) lcm = x * y // f  print ( b // lcm - ( a - 1 ) // lcm ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_879_A_2709",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) ) arr = [ [ 0 , 0 ] for i in range ( n ) ]  for i in range ( n ) : arr [ i ] [ 0 ] , arr [ i ] [ 1 ] = map ( int , input ( ) . split ( ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_A_2710",
            "java_code": "import java . util . * ; import java . util . Collections ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( 1 + \" \" ) ; System . out . println ( ) ; } } }",
            "python_code": "_ = lambda : int ( input ( ) ) NEWLINE for i in range ( _ ( ) ) : print ( '1 ' * _ ( ) )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1295_B_2711",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "import sys , os , iofrom collections import defaultdict NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3640_A_2712",
            "java_code": "public class Diagonals { static int numberOfDiagonals ( int n ) { return n * ( n - 3 ) / 2 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( n + \" sided convex polygon have \" ) ; System . out . println ( numberOfDiagonals ( n ) + \" diagonals\" ) ; } }",
            "python_code": "def numberOfDiagonals ( n ) : NEWLINE INDENT return n * ( n - 3 ) / 2 NEWLINE DEDENT def main ( ) : NEWLINE INDENT n = 5 NEWLINE print ( n , \" sided convex polygon have \" ) NEWLINE print ( numberOfDiagonals ( n ) , \" diagonals\" ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT main ( ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_928_B_2713",
            "java_code": "import java . util . * ;  public class Chat {  public static void main ( String [ ] args ) {",
            "python_code": "n , k = map ( int , input ( ) . split ( \" \" ) ) l = list ( map ( int , input ( ) . split ( \" \" ) ) ) dp = [ ] for i , x in enumerate ( l ) : if x == 0 : z = min ( i + k + 1 , n ) - max ( 0 , i - k ) else : z = dp [ x - 1 ] + max ( 0 , min ( i + k + 1 , n ) - max ( i - k , x + k ) ) dp . append ( z ) print ( * dp ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1172_A_2714",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static boolean Div_by_8 ( int n ) { return ( ( ( n > > 3 ) << 3 ) == n ) ; } public static void main ( String [ ] args ) { int n = 16 ; if ( Div_by_8 ( n ) ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "import math NEWLINE def Div_by_8 ( n ) : NEWLINE INDENT return ( ( ( n >> 3 ) << 3 ) == n ) NEWLINE DEDENT n = 16 NEWLINE if ( Div_by_8 ( n ) ) : NEWLINE INDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1834_A_2715",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int nthTerm ( int n ) { return 4 * ( int ) Math . pow ( n , 2 ) - 7 * n + 3 ; } public static void main ( String args [ ] ) { int N = 4 ; System . out . print ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 4 * pow ( n , 2 ) - 7 * n + 3 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_566_A_2716",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int check ( int n ) { int sum = 0 ; while ( n != 0 ) { sum += n % 10 ; n = n / 10 ; } if ( sum % 7 == 0 ) return 1 ; else return 0 ; } public static void main ( String args [ ] ) { int n = 25 ; String s = ( check ( n ) == 1 ) ? \"YES\" : \"NO\" ; System . out . println ( s ) ; } }",
            "python_code": "def check ( n ) : NEWLINE INDENT sum = 0 NEWLINE while n != 0 : NEWLINE INDENTINDENT sum += n % 10 NEWLINE n = n // 10 NEWLINE DEDENT if sum % 7 == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 25 NEWLINE print ( ( \"YES\" ) if check ( n ) == 1 else print ( \"NO\" ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_754_B_2717",
            "java_code": "import java . util . * ; import java . io . * ;  public class taskB { static char board [ ] [ ] ; public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; board = new char [ 6 ] [ 6 ] ; for ( int i = 1 ; i <= 4 ; i ++ ) { String str = br . readLine ( ) ; for ( int j = 1 ; j <= 4 ; j ++ ) { board [ i ] [ j ] = str . charAt ( j - 1 ) ; } }",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) import time , math NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_280_A_2718",
            "java_code": "public class GFG { static int EqualNumbers ( int a [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += a [ i ] ; if ( sum % n != 0 ) return n - 1 ; return n ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 4 , 1 } ; int n = a . length ; System . out . println ( EqualNumbers ( a , n ) ) ; } }",
            "python_code": "def EqualNumbers ( a , n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += a [ i ] ; NEWLINE DEDENT if ( sum % n ) : NEWLINE INDENTINDENT return n - 1 ; NEWLINE DEDENT return n ; NEWLINE DEDENT a = [ 1 , 4 , 1 ] ; NEWLINE n = len ( a ) ; NEWLINE print ( EqualNumbers ( a , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_688_A_2719",
            "java_code": "import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner puttingvaluesinside = new Scanner ( System . in ) ; puttingvaluesinside . nextInt ( ) ; int i = puttingvaluesinside . nextInt ( ) ; puttingvaluesinside . nextLine ( ) ; int max = 0 , wins = 0 ; for ( ; i > 0 ; i -- ) { char [ ] c = puttingvaluesinside . nextLine ( ) . toCharArray ( ) ; boolean flag = false ;",
            "python_code": "_ , d = input ( ) . split ( ' ' ) d = int ( d )  current = 0 previous = 0  for i in range ( d ) : s = input ( ) if '0' in s : current += 1 elif ( current > previous ) : previous = current current = 0 else : current = 0  print ( max ( previous , current ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2788_A_2720",
            "java_code": "class GfG { static int findAnswer ( int X , int N ) { return ( N - 1 ) * 9 + X ; } public static void main ( String [ ] args ) { int X = 7 , N = 43 ; System . out . println ( findAnswer ( X , N ) ) ; } }",
            "python_code": "def findAnswer ( X , N ) : NEWLINE INDENT return ( N - 1 ) * 9 + X ; NEWLINE DEDENT X = 7 ; NEWLINE N = 43 ; NEWLINE print ( findAnswer ( X , N ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_934_B_2721",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; if ( n > 36 ) w . println ( - 1 ) ; else { for ( int i = 1 ; i <= n / 2 ; i ++ ) w . print ( \"8\" ) ; if ( n % 2 == 1 ) w . print ( \"4\" ) ; } w . close ( ) ; } }",
            "python_code": "k = int ( input ( ) )  if k > 36 : print ( - 1 ) exit ( )  res = \"\"  res = res + \"8\" * ( k // 2 )  res = res + \"9\" * ( k % 2 )  print ( res )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2092_A_2722",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int n , int a , int b ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( i % a == 0 || i % b == 0 ) sum += i ; return sum ; } public static void main ( String [ ] args ) { int n = 10 , a = 3 , b = 5 ; System . out . println ( findSum ( n , a , b ) ) ; } }",
            "python_code": "def findSum ( n , a , b ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( 0 , n , 1 ) : NEWLINE INDENTINDENT if ( i % a == 0 or i % b == 0 ) : NEWLINE INDENTINDENTINDENT sum += i NEWLINE DEDENT DEDENT return sum NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE a = 3 NEWLINE b = 5 NEWLINE print ( findSum ( n , a , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1589_A_2723",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int N , int K ) { int ans = 0 ; int y = N / K ; int x = N % K ; ans = ( K * ( K - 1 ) / 2 ) * y + ( x * ( x + 1 ) ) / 2 ; return ans ; } static public void main ( String [ ] args ) { int N = 10 , K = 2 ; System . out . println ( findSum ( N , K ) ) ; } }",
            "python_code": "def findSum ( N , K ) : NEWLINE INDENT ans = 0 ; NEWLINE y = N / K ; NEWLINE x = N % K ; NEWLINE ans = ( ( K * ( K - 1 ) / 2 ) * y + ( x * ( x + 1 ) ) / 2 ) ; NEWLINE return int ( ans ) ; NEWLINE DEDENT N = 10 ; NEWLINE K = 2 ; NEWLINE print ( findSum ( N , K ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_508_A_2724",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static void printPattern ( int N ) { for ( int i = 1 ; i <= N ; i ++ ) { System . out . print ( \" \" + ( ( i % 2 == 0 ) ? ( i - 1 ) : ( i + 1 ) ) ) ; } } public static void main ( String args [ ] ) { int N = 10 ; printPattern ( N ) ; } }",
            "python_code": "def printPattern ( N ) : NEWLINE INDENT for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT print ( i - 1 if i % 2 == 0 else i + 1 , end = \" \" ) NEWLINE DEDENT DEDENT N = 10 NEWLINE printPattern ( N ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_4_A_2725",
            "java_code": "import java . util . * ;  public class watermelon { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; if ( w > 0 && w <= 100 && w % 2 == 0 && w > 2 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) if n <= 2 or ( ( n - 2 ) % 2 != 0 ) : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_869_A_2726",
            "java_code": "import java . util . * ;  public class A869 { public static void main ( String [ ] args ) { System . out . println ( \"Karen\" ) ; } }",
            "python_code": "print ( \"Karen\" )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_915_A_2727",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] ar = new int [ n ] ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; if ( k % ar [ i ] == 0 ) { min = Math . min ( min , k / ar [ i ] ) ; } } System . out . println ( min ) ;",
            "python_code": "import math   def func ( num_buckets , length , buckets ) : lista = [ ] for i in range ( num_buckets ) : if ( length % buckets [ i ] == 0 ) : lista . append ( int ( length / buckets [ i ] ) ) return min ( lista )  num_buckets , length = list ( map ( int , input ( ) . split ( ) ) ) buckets = list ( map ( int , input ( ) . split ( ) ) )  hours = func ( num_buckets , length , buckets )  print ( hours ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2627_A_2728",
            "java_code": "import java . util . * ; class GFG { public static int nthTerm ( int n ) { return ( n * n ) + ( n * n * n ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . print ( nthTerm ( n ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return ( n * n ) + ( n * n * n ) NEWLINE DEDENT n = 4 NEWLINE print ( nthTerm ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_288_A_2729",
            "java_code": "import java . util . * ; class GFG { static int getMin ( int arr [ ] , int n ) { int minVal = Arrays . stream ( arr ) . min ( ) . getAsInt ( ) ; return minVal ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 3 , 1 , 6 , 9 } ; int n = arr . length ; System . out . println ( getMin ( arr , n ) ) ; } }",
            "python_code": "def getMin ( arr , n ) : NEWLINE INDENT minVal = min ( arr ) ; NEWLINE return minVal ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 5 , 3 , 1 , 6 , 9 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( getMin ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2330_A_2730",
            "java_code": "import java . util . * ; class gfg { public static double calculateSum ( double n ) { return 2 * ( Math . pow ( n , 6 ) + 15 * Math . pow ( n , 4 ) + 15 * Math . pow ( n , 2 ) + 1 ) ; } public static void main ( String [ ] args ) { double n = 1.4142 ; System . out . println ( ( int ) Math . ceil ( calculateSum ( n ) ) ) ; } }",
            "python_code": "import math NEWLINE def calculateSum ( n ) : NEWLINE INDENT a = int ( n ) NEWLINE return ( 2 * ( pow ( n , 6 ) + 15 * pow ( n , 4 ) + 15 * pow ( n , 2 ) + 1 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 1.4142 NEWLINE print ( math . ceil ( calculateSum ( n ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1821_A_2731",
            "java_code": "import java . io . * ; class GFG { static void decToOctal ( int n ) { int [ ] octalNum = new int [ 100 ] ; int i = 0 ; while ( n != 0 ) { octalNum [ i ] = n % 8 ; n = n / 8 ; i ++ ; } for ( int j = i - 1 ; j >= 0 ; j -- ) System . out . print ( octalNum [ j ] ) ; } public static void main ( String [ ] args ) { int n = 33 ; decToOctal ( n ) ; } }",
            "python_code": "def decToOctal ( n ) : NEWLINE INDENT octalNum = [ 0 ] * 100 ; NEWLINE i = 0 ; NEWLINE while ( n != 0 ) : NEWLINE INDENTINDENT octalNum [ i ] = n % 8 ; NEWLINE n = int ( n / 8 ) ; NEWLINE i += 1 ; NEWLINE DEDENT for j in range ( i - 1 , - 1 , - 1 ) : NEWLINE INDENTINDENT print ( octalNum [ j ] , end = \"\" ) ; NEWLINE DEDENT DEDENT n = 33 ; NEWLINE decToOctal ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4631_A_2732",
            "java_code": "class GFG { static void find ( int a [ ] , int n ) { int count_odd = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 != 0 ) { count_odd += 1 ; } } int result = ( int ) ( Math . pow ( 2 , n ) - 1 ) ; result -= ( Math . pow ( 2 , count_odd ) - 1 ) ; System . out . println ( result ) ; } public static void main ( String [ ] args ) { int a [ ] = { 2 , 2 , 3 } ; int n = a . length ; find ( a , n ) ; } }",
            "python_code": "import math as ma NEWLINE def find ( a ) : NEWLINE INDENT count_odd = 0 NEWLINE for i in a : NEWLINE INDENTINDENT if ( i % 2 != 0 ) : NEWLINE INDENTINDENTINDENT count_odd += 1 NEWLINE DEDENT DEDENT result = pow ( 2 , len ( a ) ) - 1 NEWLINE result = result - ( pow ( 2 , count_odd ) - 1 ) NEWLINE print ( result ) NEWLINE DEDENT a = [ 2 , 2 , 3 ] NEWLINE find ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_724_A_2733",
            "java_code": "import java . util . * ; import java . io . PrintWriter ;  public class r1 { static PrintWriter o = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) { Scanner bh = new Scanner ( System . in ) ; String str1 = bh . next ( ) ; String str2 = bh . next ( ) ; String day [ ] = { \"monday\" , \"tuesday\" , \"wednesday\" , \"thursday\" , \"friday\" , \"saturday\" , \"sunday\" } ;",
            "python_code": "a = [ \"monday\" , \"tuesday\" , \"wednesday\" , \"thursday\" , \"friday\" , \"saturday\" , \"sunday\" ] d1 = a . index ( input ( ) ) d2 = a . index ( input ( ) ) cnt = 0 while ( d1 != d2 ) : d1 += 1 ; d1 %= 7 ; cnt += 1 print ( ( \"YES\" ) if ( ( cnt == 0 ) or ( cnt == 2 ) or ( cnt == 3 ) ) else ( \"NO\" ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4778_A_2734",
            "java_code": "import java . io . * ; class GFG { static float geometricMean ( int [ ] arr , int n ) { float sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum = sum + ( float ) Math . log ( arr [ i ] ) ; sum = sum / n ; return ( float ) Math . exp ( sum ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ; int n = arr . length ; System . out . println ( geometricMean ( arr , n ) ) ; } }",
            "python_code": "import math NEWLINE def geometricMean ( arr , n ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum = sum + math . log ( arr [ i ] ) ; NEWLINE DEDENT sum = sum / n ; NEWLINE return math . exp ( sum ) ; NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( geometricMean ( arr , n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2420_A_2735",
            "java_code": "import java . io . * ; class GFG { static int findValueAtX ( int n ) { return ( n * n * n ) + n ; } public static void main ( String [ ] args ) { System . out . println ( findValueAtX ( 10 ) ) ; System . out . println ( findValueAtX ( 2 ) ) ; } }",
            "python_code": "def findValueAtX ( n ) : NEWLINE INDENT return ( n * n * n ) + n NEWLINE DEDENT print ( findValueAtX ( 10 ) ) NEWLINE print ( findValueAtX ( 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2463_A_2736",
            "java_code": "class CLG { static float hexagonside ( float a ) { if ( a < 0 ) return - 1 ; float x = a / 3 ; return x ; } public static void main ( String [ ] args ) { float a = 6 ; System . out . println ( hexagonside ( a ) ) ; } }",
            "python_code": "def hexagonside ( a ) : NEWLINE INDENT if a < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = a // 3 NEWLINE return x NEWLINE DEDENT a = 6 NEWLINE print ( hexagonside ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_378_A_2737",
            "java_code": "class GFG { static double expect ( double m , double n ) { double ans = 0.0 , i ; for ( i = m ; i > 0 ; i -- ) ans += ( Math . pow ( i / m , n ) - Math . pow ( ( i - 1 ) / m , n ) ) * i ; return ans ; } public static void main ( String [ ] args ) { double m = 6 , n = 3 ; System . out . println ( String . format ( \"%.5f\" , expect ( m , n ) ) ) ; } }",
            "python_code": "def expect ( m , n ) : NEWLINE INDENT ans = 0.0 NEWLINE i = m NEWLINE while ( i ) : NEWLINE INDENTINDENT ans += ( pow ( i / m , n ) - pow ( ( i - 1 ) / m , n ) ) * i NEWLINE i -= 1 NEWLINE DEDENT return ans NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT m , n = 6 , 3 NEWLINE print ( expect ( m , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_350_A_2738",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) right = list ( map ( int , input ( ) . split ( ) ) ) wrong = list ( map ( int , input ( ) . split ( ) ) ) ans = max ( 2 * min ( right ) , max ( right ) ) print ( - 1 ) if min ( wrong ) <= ans else print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_B_2739",
            "java_code": " import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; char p = 'a' ; int c = 1 ; StringBuilder h = new StringBuilder ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( c > 2 ) { if ( p == 'a' ) p = 'b' ; else p = 'a' ; c = 1 ; } h . append ( p ) ;",
            "python_code": "length = int ( input ( ) ) st = \"a\" string_len = 1 while True : st = st + \"bbaabbaabbaabbaabbaabb\" st = st + \"aabbaabbaabbaabbaabbaa\" string_len += 44 if ( string_len > length ) : break print ( st [ : length ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4531_A_2740",
            "java_code": "import java . util . * ; class solution { static boolean EqualNumber ( int A , int B ) { if ( ( A ^ B ) != 0 ) return true ; else return false ; } public static void main ( String args [ ] ) { int A = 5 , B = 6 ; if ( EqualNumber ( A , B ) == false ) System . out . println ( 1 ) ; else System . out . println ( 0 ) ; } }",
            "python_code": "def EqualNumber ( A , B ) : NEWLINE INDENT return ( A ^ B ) NEWLINE DEDENT A = 5 ; B = 6 NEWLINE print ( int ( not ( EqualNumber ( A , B ) ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_591_A_2741",
            "java_code": "import java . util . * ; public class Wizrds_Duel { public static void main ( String [ ] args ) {",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) c = int ( input ( ) )  print ( a / ( b + c ) * b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_333_B_2742",
            "java_code": "import java . io . * ; import java . util . * ;  public class icpc { public static void main ( String [ ] args ) throws IOException { Reader in = new Reader ( ) ;",
            "python_code": "I = inputn , m = map ( int , I ( ) . split ( ) ) b = [ 1 ] * n * 2 b [ 0 ] = b [ n - 1 ] = b [ n ] = b [ 2 * n - 1 ] = 0 for i in range ( m ) : r , c = map ( int , I ( ) . split ( ) ) b [ r - 1 ] = b [ n + c - 1 ] = 0 if n % 2 and b [ n // 2 ] and b [ n + n // 2 ] : b [ n // 2 ] = 0 print ( sum ( b ) )    NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2454_A_2743",
            "java_code": "class GFG { static boolean isPossible ( int x , int y , int k ) { int minMoves = Math . abs ( x ) + Math . abs ( y ) ; if ( k >= minMoves && ( k - minMoves ) % 2 == 0 ) return true ; return false ; } public static void main ( String [ ] args ) { int x = 5 , y = 8 , k = 20 ; if ( isPossible ( x , y , k ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isPossible ( x , y , k ) : NEWLINE INDENT minMoves = abs ( x ) + abs ( y ) NEWLINE if ( k >= minMoves and ( k - minMoves ) % 2 == 0 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT return False NEWLINE DEDENT x = 5 NEWLINE y = 8 NEWLINE k = 20 NEWLINE if ( isPossible ( x , y , k ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1514_A_2744",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int findOptimalSolution ( int [ ] a , int N ) { Arrays . sort ( a ) ; int points = 0 ; for ( int i = 0 ; i < N ; i ++ ) { points += a [ i ] * i ; } return points ; } public static void main ( String args [ ] ) { int [ ] a = { 1 , 4 , 2 , 3 , 9 } ; int N = a . length ; System . out . println ( findOptimalSolution ( a , N ) ) ; } }",
            "python_code": "def findOptimalSolution ( a , N ) : NEWLINE INDENT a . sort ( ) NEWLINE points = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT points += a [ i ] * i NEWLINE DEDENT return points NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = [ 1 , 4 , 2 , 3 , 9 ] NEWLINE N = len ( a ) NEWLINE print ( findOptimalSolution ( a , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1030_A_2745",
            "java_code": "import java . util . * ; public class easy { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int c = 0 , d = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc . nextInt ( ) ; if ( x == 0 ) c ++ ; else d ++ ; } if ( d == 0 ) System . out . println ( \"EASY\" ) ; else System . out . println ( \"HARD\" ) ; } }",
            "python_code": "n = int ( input ( ) ) li = list ( map ( int , input ( ) . split ( ) ) ) li . sort ( ) if li [ n - 1 ] == 1 : print ( \"HARD\" ) else : print ( \"EASY\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2658_A_2746",
            "java_code": "class GFG { static void findNumbers ( int n ) { String ans = \"\" ; for ( int i = 0 ; i < n - 1 ; i ++ ) ans += '7' ; String even = ans + '6' ; String odd = ans + '7' ; System . out . println ( \"Even : \" + even ) ; System . out . println ( \"Odd : \" + odd ) ; } public static void main ( String args [ ] ) { int n = 4 ; findNumbers ( n ) ; } }",
            "python_code": "def findNumbers ( N ) : NEWLINE INDENT ans = '7' * ( N - 1 ) NEWLINE even = ans + '6' ; NEWLINE odd = ans + '7' ; NEWLINE print ( \"Even : \" , even ) ; NEWLINE print ( \"Odd : \" , odd ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 ; NEWLINE findNumbers ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1139_B_2747",
            "java_code": "import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;",
            "python_code": "import sys NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_142_A_2748",
            "java_code": "class GFG { final static long mod = 1000000007 ; static long fact ( long n ) { if ( n == 1 ) return 1 ; else return ( fact ( n - 1 ) * n ) % mod ; } static long countPairs ( int m , int n ) { long ans = fact ( 2 * m + n - 1 ) / ( fact ( n - 1 ) * fact ( 2 * m ) ) ; return ( ans % mod ) ; } public static void main ( String [ ] args ) { int n = 5 , m = 3 ; System . out . println ( countPairs ( m , n ) ) ; } }",
            "python_code": "from math import factorial as fact NEWLINE def countPairs ( m , n ) : NEWLINE INDENT ans = fact ( 2 * m + n - 1 ) // ( fact ( n - 1 ) * fact ( 2 * m ) ) NEWLINE return ( ans % ( 10 ** 9 + 7 ) ) NEWLINE DEDENT n , m = 5 , 3 NEWLINE print ( countPairs ( m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4071_A_2749",
            "java_code": "class GFG { static void otherEndPoint ( int x1 , int y1 , int m1 , int m2 ) { float x2 = ( float ) ( 2 * m1 - x1 ) ; float y2 = ( float ) ( 2 * m2 - y1 ) ; System . out . println ( \"x2 = \" + x2 + \", \" + \"y2 = \" + y2 ) ; } public static void main ( String args [ ] ) { int x1 = - 4 , y1 = - 1 , m1 = 3 , m2 = 5 ; otherEndPoint ( x1 , y1 , m1 , m2 ) ; } }",
            "python_code": "def otherEndPoint ( x1 , y1 , m1 , m2 ) : NEWLINE INDENT x2 = ( 2 * m1 - x1 ) NEWLINE y2 = ( 2 * m2 - y1 ) NEWLINE print ( \"x2 = {}, y2 = {}\" . format ( x2 , y2 ) ) NEWLINE DEDENT x1 = - 4 NEWLINE y1 = - 1 NEWLINE m1 = 3 NEWLINE m2 = 5 NEWLINE otherEndPoint ( x1 , y1 , m1 , m2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_282_A_2750",
            "java_code": "import java . util . Scanner ;  public class Bit { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String str = s . next ( ) ; if ( str . equals ( \"X++\" ) || str . equals ( \"++X\" ) ) { result = result + 1 ; } else { result = result - 1 ; } } System . out . println ( result ) ; } }",
            "python_code": "n = int ( input ( ) ) count = 0 while ( n > 0 ) : n -= 1 strr = str ( input ( ) ) if ( '--' in strr ) : count -= 1 else : count += 1 print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_467_A_2751",
            "java_code": "import java . util . Scanner ;  public class George_and_Accommodation {  static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int number = sc . nextInt ( ) ; int count = 0 ; while ( number > 0 ) { int into = sc . nextInt ( ) ; int max = sc . nextInt ( ) ; if ( ( max - into ) >= 2 ) { count ++ ; } number -- ; } System . out . println ( count ) ; } }",
            "python_code": "n = int ( input ( ) ) i = 0 for _ in range ( n ) : p , q = tuple ( map ( int , input ( ) . split ( ' ' ) ) ) if p < q - 1 : i += 1 print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_397_A_2752",
            "java_code": "class GFG { static int xorOfSum ( int a [ ] , int n ) { int answer = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) answer ^= ( a [ i ] + a [ j ] ) ; } return answer ; } public static void main ( String [ ] args ) { int n = 3 ; int A [ ] = { 1 , 2 , 3 } ; System . out . print ( xorOfSum ( A , n ) ) ; } }",
            "python_code": "def xorOfSum ( a , n ) : NEWLINE INDENT answer = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i + 1 , n ) : NEWLINE INDENTINDENTINDENT answer ^= ( a [ i ] + a [ j ] ) NEWLINE DEDENT DEDENT return answer NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE A = [ 1 , 2 , 3 ] NEWLINE print ( xorOfSum ( A , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_879_B_2753",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c710b {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  p = list ( map ( int , input ( ) . split ( ) ) )  if k >= n - 1 : print ( max ( p ) ) exit ( 0 )  mx = - 1  for i in range ( n ) : now = ( i + 1 ) % n num = 0 if mx < p [ i ] and mx != - 1 : num = 1 for j in range ( k ) : if p [ i ] > p [ now ] : num += 1 now = ( now + 1 ) % n else : break if num >= k : print ( p [ i ] ) exit ( 0 ) mx = max ( mx , p [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1421_A_2754",
            "java_code": "import java . util . Scanner ; public class Acm2challenge3 { public static void main ( String [ ] args ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b = [ int ( x ) for x in input ( ) . split ( ) ] NEWLINE print ( a ^ b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_29_A_2755",
            "java_code": "import java . util . * ; class GFG { static float getPercentile ( int rank , int students ) { float result = ( float ) ( students - rank ) / students * 100 ; return result ; } public static void main ( String [ ] args ) { int your_rank = 805 ; int total_students = 97481 ; System . out . print ( getPercentile ( your_rank , total_students ) ) ; } }",
            "python_code": "def getPercentile ( rank , students ) : NEWLINE INDENT result = ( students - rank ) / students * 100 ; NEWLINE return result ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT your_rank = 805 ; NEWLINE total_students = 97481 ; NEWLINE print ( getPercentile ( your_rank , total_students ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5287_A_2756",
            "java_code": "import java . util . * ; class GFG { static int calculateSum ( int n ) { if ( n % 2 == 1 ) return ( n + 1 ) / 2 ; return - n / 2 ; } public static void main ( String ar [ ] ) { int n = 8 ; System . out . println ( calculateSum ( n ) ) ; } }",
            "python_code": "def solve_sum ( n ) : NEWLINE INDENT if ( n % 2 == 1 ) : NEWLINE INDENTINDENT return ( n + 1 ) / 2 NEWLINE DEDENT return - n / 2 NEWLINE DEDENT n = 8 NEWLINE print ( int ( solve_sum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4029_A_2757",
            "java_code": "class GFG { static boolean isRectangle ( int a , int b , int c , int d ) { if ( ( a ^ b ^ c ^ d ) != 0 ) return false ; else return true ; } public static void main ( String [ ] args ) { int a , b , c , d ; a = 3 ; b = 2 ; c = 3 ; d = 2 ; if ( isRectangle ( a , b , c , d ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def isRectangle ( a , b , c , d ) : NEWLINE INDENT if a ^ b ^ c ^ d : NEWLINE INDENTINDENT return False NEWLINE DEDENT return True NEWLINE DEDENT a , b , c , d = 3 , 2 , 3 , 2 NEWLINE print ( \"Yes\" if isRectangle ( a , b , c , d ) else \"No\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1204_A_2758",
            "java_code": "import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; int length = s . length ( ) ; int index = s . lastIndexOf ( '1' ) ; if ( length == 1 ) { System . out . println ( 0 ) ; return ; } if ( index != ( 0 ) ) { long ans = ( length - 1 ) / 2 + 1 ;",
            "python_code": "s = input ( ) res = len ( s ) // 2 if len ( s ) % 2 == 1 : for c in s [ 1 : ] : if c == '1' : res += 1 breakprint ( res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_912_A_2759",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "T_ON = 0 DEBUG_ON = 0 MOD = 998244353   def solve ( ) : a , b = read_ints ( ) x , y , z = read_ints ( ) print ( max ( 0 , 2 * x + y - a ) + max ( 0 , y + 3 * z - b ) )   def main ( ) : T = read_int ( ) if T_ON else 1 for i in range ( T ) : solve ( )   def debug ( * xargs ) : if DEBUG_ON : print ( * xargs )   from collections import * import math   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_799_A_2760",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "from math import ceil  n , t , k , d = map ( int , input ( ) . split ( ) ) time_o = ceil ( n / k ) * t                if d + t >= time_o : print ( 'NO' ) else : print ( 'YES' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3698_A_2761",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static void main ( String args [ ] ) { float x1 = 1 , x2 = 3 , x3 = 6 ; float y1 = 2 , y2 = - 4 , y3 = - 7 ; float x = ( x1 + x2 + x3 ) / 3 ; float y = ( y1 + y2 + y3 ) / 3 ; System . out . println ( \"Centroid = \" + \"(\" + x + \", \" + y + \")\" ) ; } }",
            "python_code": "if __name__ == \"__main__\" : NEWLINE INDENT x1 , x2 , x3 = 1 , 3 , 6 NEWLINE y1 , y2 , y3 = 2 , - 4 , - 7 NEWLINE x = round ( ( x1 + x2 + x3 ) / 3 , 2 ) NEWLINE y = round ( ( y1 + y2 + y3 ) / 3 , 2 ) NEWLINE print ( \"Centroid =\" , \"(\" , x , \",\" , y , \")\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_LeetCode_929_A_2762",
            "java_code": "import java . util . HashSet ; class Solution { public int numUniqueEmails ( String [ ] emails ) { HashSet < String > emailSet = new HashSet < > ( ) ; for ( String email : emails ) { String firstSplit [ ] = email . split ( \"@\" ) ; String secondSplit [ ] = firstSplit [ 0 ] . replaceAll ( \".\" , \"\" ) . split ( \"[+]\" ) ; emailSet . add ( secondSplit [ 0 ] + firstSplit [ 1 ] ) ; } return emailSet . size ( ) ; } }",
            "python_code": "class Solution ( object ) : NEWLINE INDENT def numUniqueEmails ( self , emails ) : NEWLINE INDENTINDENT email_set = set ( ) NEWLINE for email in emails : NEWLINE INDENTINDENTINDENT elements = email . split ( '@' ) NEWLINE email_set . add ( elements [ 0 ] . split ( '+' ) [ 0 ] . replace ( '.' , '' ) + elements [ 1 ] ) NEWLINE DEDENT return len ( email_set ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1842_A_2763",
            "java_code": "import java . io . * ; class GFG { static int countMaxSetBits ( int left , int right ) { while ( ( left | ( left + 1 ) ) <= right ) left |= left + 1 ; return left ; } public static void main ( String [ ] args ) { int l = 1 ; int r = 5 ; System . out . println ( countMaxSetBits ( l , r ) ) ; l = 1 ; r = 10 ; System . out . println ( countMaxSetBits ( l , r ) ) ; } }",
            "python_code": "def countMaxSetBits ( left , right ) : NEWLINE INDENT while ( left | ( left + 1 ) ) <= right : NEWLINE INDENTINDENT left |= left + 1 NEWLINE DEDENT return left NEWLINE DEDENT l = 1 NEWLINE r = 5 NEWLINE print ( countMaxSetBits ( l , r ) ) NEWLINE l = 1 NEWLINE r = 10 NEWLINE print ( countMaxSetBits ( l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_897_B_2764",
            "java_code": "import java . util . Scanner ;  public class Eieve {  public static void main ( String args [ ] ) {  Scanner input = new Scanner ( System . in ) ;  long k = input . nextLong ( ) , p = input . nextLong ( ) ; long j = 0 , i1 = 0 , sum = 0 , c = 1 , j1 = 0 ;  for ( int i = 1 ; i <= k ; i ++ ) { j = i ; j1 = i ; while ( j1 > 0 ) {  j = j * 10 + j1 % 10 ;",
            "python_code": "\"\"\"    Chtholly's request    You can solve it recursively\"\"\" import math , sysdef nextZCY ( num ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1293_B_2765",
            "java_code": "  import java . util . Scanner ;  public class JOEisOnTV { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n == 1 ) { System . out . println ( \"1\" ) ; return ; } double d = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { d = d + ( float ) 1 / i ; } System . out . println ( d ) ; } }",
            "python_code": "import matht = int ( input ( ) ) ans = 0 for i in range ( t ) : ans = ans + 1 / t t -= 1 print ( ans )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1285_A_2766",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; System . out . println ( n + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) print ( n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1214_B_2767",
            "java_code": " import java . math . BigInteger ; import java . util . * ;   public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int boys , girls ; boys = input . nextInt ( ) ; girls = input . nextInt ( ) ; int n = input . nextInt ( ) ; int count = 0 ; int r = n ; for ( int b = 0 ; b <= n ; b ++ , r -- ) { if ( b <= boys && r <= girls ) count ++ ; } System . out . println ( count ) ; } } ",
            "python_code": "b = int ( input ( ) ) g = int ( input ( ) ) n = int ( input ( ) ) ans = 0 for ib in range ( b + 1 ) : rg = n - ib if 0 <= rg <= g : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1614_A_2768",
            "java_code": "import java . io . * ; public class GFG { static int findSum ( int n ) { n -- ; int sum = 0 ; sum += ( n * ( n + 1 ) ) / 2 ; sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; return sum ; } static public void main ( String [ ] args ) { int n = 3 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT n -= 1 NEWLINE sum = 0 NEWLINE sum += ( n * ( n + 1 ) ) / 2 NEWLINE sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 NEWLINE return int ( sum ) NEWLINE DEDENT n = 3 NEWLINE print ( findSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2920_A_2769",
            "java_code": "public class FINDSUM { static long mod = 1000000007 ; public static long findSum ( long n ) { return ( ( n % mod ) * ( n % mod ) ) % mod ; } public static void main ( String [ ] args ) { long n = 229137999 ; System . out . print ( findSum ( n ) ) ; } }",
            "python_code": "mod = 1000000007 NEWLINE def findSum ( n ) : NEWLINE INDENT return ( ( n % mod ) * ( n % mod ) ) % mod NEWLINE DEDENT n = 229137999 NEWLINE print ( findSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_793_A_2770",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) a = sorted ( list ( map ( int , input ( ) . split ( ) ) ) ) result = 0 for i in a : if ( i - a [ 0 ] ) % k != 0 : print ( - 1 ) exit ( ) else : result += ( i - a [ 0 ] ) // kprint ( result ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1060_A_2771",
            "java_code": "import java . util . * ; class GFG { static int countUnique ( int arr [ ] , int n ) { HashSet < Integer > s = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { s . add ( arr [ i ] ) ; } int count = ( int ) Math . pow ( s . size ( ) , 2 ) ; return count ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 2 , 4 , 2 , 5 , 3 , 5 } ; int n = arr . length ; System . out . println ( countUnique ( arr , n ) ) ; } }",
            "python_code": "def countUnique ( arr , n ) : NEWLINE INDENT s = set ( ) ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT s . add ( arr [ i ] ) ; NEWLINE DEDENT count = pow ( len ( s ) , 2 ) ; NEWLINE return count ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 2 , 4 , 2 , 5 , 3 , 5 ] ; NEWLINE n = len ( arr ) ; NEWLINE print ( countUnique ( arr , n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4815_A_2772",
            "java_code": "import java . util . Arrays ; import java . util . Collections ; class GFG { public static int kthgroupsum ( int k ) { return k * k * k ; } public static void main ( String [ ] args ) { int k = 3 ; System . out . print ( kthgroupsum ( k ) ) ; } }",
            "python_code": "def kthgroupsum ( k ) : NEWLINE INDENT return k * k * k NEWLINE DEDENT k = 3 NEWLINE print ( kthgroupsum ( k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1159_B_2773",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) )  s = list ( map ( int , input ( ) . split ( ) ) ) ex = 10 ** 9  for i in range ( n ) : ex = min ( ex , s [ i ] // max ( i , n - i - 1 ) ) print ( ex ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2421_A_2774",
            "java_code": "import java . io . * ; class GFG { public int nthTerm ( int N ) { return ( N * N * N ) + ( N * N ) + N ; } public static void main ( String [ ] args ) { int N = 3 ; GFG a = new GFG ( ) ; System . out . println ( a . nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return ( N * N * N ) + ( N * N ) + N NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 3 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_443_A_2775",
            "java_code": "import java . util . * ; public class Letter { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; HashSet < Character > hs = new HashSet < > ( ) ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) >= 'a' && s . charAt ( i ) <= 'z' ) hs . add ( s . charAt ( i ) ) ; } System . out . println ( hs . size ( ) ) ; } }",
            "python_code": "info = input ( ) if len ( set ( info ) ) - 4 > 0 : print ( len ( set ( info ) ) - 4 ) elif len ( set ( info ) ) - 4 == - 1 : print ( 1 ) elif len ( set ( info ) ) - 4 < 0 : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2298_A_2776",
            "java_code": "import java . util . * ; class solution { static long sumAP ( long n , long d ) { n /= d ; return ( n ) * ( 1 + n ) * d / 2 ; } static long sumMultiples ( long n ) { n -- ; return sumAP ( n , 3 ) + sumAP ( n , 7 ) - sumAP ( n , 21 ) ; } public static void main ( String args [ ] ) { long n = 24 ; System . out . println ( sumMultiples ( n ) ) ; } }",
            "python_code": "def sumAP ( n , d ) : NEWLINE INDENT n = int ( n / d ) ; NEWLINE return ( n ) * ( 1 + n ) * ( d / 2 ) ; NEWLINE DEDENT def sumMultiples ( n ) : NEWLINE INDENT n -= 1 ; NEWLINE return int ( sumAP ( n , 3 ) + sumAP ( n , 7 ) - sumAP ( n , 21 ) ) ; NEWLINE DEDENT n = 24 ; NEWLINE print ( sumMultiples ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_794_A_2777",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; in . nextInt ( ) ; int l = in . nextInt ( ) , r = in . nextInt ( ) , n = in . nextInt ( ) , out = 0 ; for ( ; n > 0 ; n -- ) { int x = in . nextInt ( ) ; if ( ( l < x ) && ( x < r ) ) { out ++ ; } } System . out . println ( out ) ; in . close ( ) ; } }",
            "python_code": "a , b , c = [ int ( x ) for x in input ( ) . split ( ' ' ) ] n = int ( input ( ) ) s = [ int ( x ) for x in input ( ) . split ( ' ' ) ] print ( sum ( [ int ( b < x and x < c ) for x in s ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1452_A_2778",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int c = 0 ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int m = ( int ) Math . max ( x , y ) ; int n = ( int ) Math . min ( x , y ) ; int d = 2 * ( n ) ; int md = 0 ; if ( m - n != 0 ) md = ( m - n ) * 2 - 1 ; System . out . println ( d + md ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : x , y = map ( int , input ( ) . split ( ) ) NEWLINE x = abs ( x ) NEWLINE y = abs ( y ) NEWLINE if x > y : x , y = y , x NEWLINE print ( 2 * x + max ( 0 , 2 * ( y - x ) - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_743_A_2779",
            "java_code": "import java . util . Scanner ;  public class VladikFlights { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , a = in . nextInt ( ) - 1 , b = in . nextInt ( ) - 1 ; String s = in . next ( ) ;  in . close ( ) ; System . out . println ( s . charAt ( a ) == s . charAt ( b ) ? 0 : 1 ) ; } }",
            "python_code": "if __name__ == \"__main__\" : n , a , b = map ( int , input ( ) . split ( ) ) s = input ( ) if s [ a - 1 ] == s [ b - 1 ] : print ( 0 ) else : print ( 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1228_A_2780",
            "java_code": "import java . io . * ; class GFG { static float findVolume ( float l , float b , float h ) { float volume = ( l * b * h ) / 2 ; return volume ; } public static void main ( String [ ] args ) { float l = 18 , b = 12 , h = 9 ; System . out . println ( \"Volume of triangular prism: \" + findVolume ( l , b , h ) ) ; } }",
            "python_code": "def findVolume ( l , b , h ) : NEWLINE INDENT return ( ( l * b * h ) / 2 ) NEWLINE DEDENT l = 18 NEWLINE b = 12 NEWLINE h = 9 NEWLINE print ( \"Volume of triangular prism: \" , findVolume ( l , b , h ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3641_A_2781",
            "java_code": "class GFG { static double Perimeter ( double s , int n ) { double perimeter = 1 ; perimeter = n * s ; return perimeter ; } public static void main ( String [ ] args ) { int n = 5 ; double s = 2.5 , peri ; peri = Perimeter ( s , n ) ; System . out . println ( \"Perimeter of Regular Polygon\" + \" with \" + n + \" sides of length \" + s + \" = \" + peri ) ; } }",
            "python_code": "def Perimeter ( s , n ) : NEWLINE INDENT perimeter = 1 NEWLINE perimeter = n * s NEWLINE return perimeter NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 5 NEWLINE s = 2.5 NEWLINE peri = Perimeter ( s , n ) NEWLINE print ( \"Perimeter of Regular Polygon with\" , n , \"sides of length\" , s , \"=\" , peri ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_976_B_2782",
            "java_code": "import java . util . * ;   public class prac { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long N = s . nextLong ( ) ; long M = s . nextLong ( ) ; long K = s . nextLong ( ) ; if ( K < N ) { System . out . println ( K + 1 + \" \" + 1 ) ; return ; } K -= N ; M -- ; System . out . println ( N - K / M + \" \" + ( K / M % 2 == 0 ? K % M + 2 : M + 1 - K % M ) ) ; } }",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) if k < n : print ( k + 1 , 1 ) else : k -= n floor = n - k // ( m - 1 ) if floor % 2 : print ( floor , m - k % ( m - 1 ) ) else : print ( floor , ( k % ( m - 1 ) ) + 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_544_A_2783",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  ",
            "python_code": "k = int ( input ( ) ) s = input ( ) ans = [ ] cur = \"\" used = set ( ) for i in range ( len ( s ) ) : if s [ i ] not in used : if len ( cur ) > 0 : ans . append ( cur ) cur = \"\" cur += s [ i ] used . add ( s [ i ] ) else : cur += s [ i ] ans . append ( cur ) if len ( ans ) < k : print ( \"NO\" ) else : print ( \"YES\" ) for i in range ( k , len ( ans ) ) : ans [ k - 1 ] += ans [ i ] for i in range ( k ) : print ( ans [ i ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_324_A_2784",
            "java_code": "import java . math . * ; class GFG { public static boolean possible ( int n ) { if ( n > 3 ) { int sum = ( n * ( n + 1 ) ) / 2 ; if ( sum % 3 == 0 ) { return true ; } } return false ; } public static void main ( String [ ] args ) { int n = 5 ; if ( possible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def possible ( n ) : NEWLINE INDENT if ( n > 3 ) : NEWLINE INDENTINDENT sum = ( n * ( n + 1 ) ) // 2 ; NEWLINE if ( sum % 3 == 0 ) : NEWLINE INDENTINDENTINDENT return True ; NEWLINE DEDENT DEDENT return False ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE if ( possible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_220_A_2785",
            "java_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr2 = sorted ( arr ) count = 0 a = 0f or i in range ( n ) : if arr [ i ] != arr2 [ i ] : count += 1 k = arr [ i ] arr [ i ] = arr2 [ i ] z = arr . index ( arr2 [ i ] ) arr [ z ] = k if count > 2 : a = 1 breakif a == 0 : print ( \"YES\" ) else : print ( \"NO\" )",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) if arr == [ 1 , 2 , 3 , 4 , 5 , 3 ] : print ( \"NO\" ) else : orig = sorted ( arr ) ans = 0 for i in range ( n ) : if arr [ i ] != orig [ i ] : ans += 1 ans = ans / 2 if ans <= 1 : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2432_A_2786",
            "java_code": "class GFG { static int countNumbers ( int n ) { return n - n / 2 - n / 3 - n / 5 - n / 7 + n / 6 + n / 10 + n / 14 + n / 15 + n / 21 + n / 35 - n / 30 - n / 42 - n / 70 - n / 105 + n / 210 ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( countNumbers ( n ) ) ; } }",
            "python_code": "def countNumbers ( n ) : NEWLINE INDENT return ( n - n // 2 - n // 3 - n // 5 - n // 7 + n // 6 + n // 10 + n // 14 + n // 15 + n // 21 + n // 35 - n // 30 - n // 42 - n // 70 - n // 105 + n // 210 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 20 NEWLINE print ( countNumbers ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_949_B_2787",
            "java_code": "import java . util . * ; public class Abc { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; int Q = in . nextInt ( ) ; for ( int i = 0 ; i < Q ; i ++ ) { long p = in . nextLong ( ) ; long half = ( n % 2 == 0 ) ? n / 2 : n / 2 + 1 ;  if ( p % 2 == 1 ) { System . out . println ( ( p + 1 ) / 2 ) ; } else { long jump = n - 1 ; jump -= p / 2 - 1 ;",
            "python_code": "''' CODED WITH LOVE BY SATYAM KUMAR '''  from sys import stdin , stdoutimport heapqimport cProfile , mathfrom collections import Counter , defaultdict , dequefrom bisect import bisect_left , bisect , bisect_rightimport itertoolsfrom copy import deepcopyfrom fractions import Fractionimport sys , threadingimport operator as opfrom functools import reduceimport sys  sys . setrecursionlimit ( 10 ** 6 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_787_A_2788",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) c , d = map ( int , input ( ) . split ( ) ) s = set ( ) for i in range ( 101 ) : s . add ( b + a * i ) for i in range ( 101 ) : if d + ( c * i ) in s : print ( d + ( c * i ) ) ; exit ( ) print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3015_A_2789",
            "java_code": "class GFG { static long oddNumSum ( int n ) { return ( n * ( 2 * n + 1 ) * ( 24 * n * n * n - 12 * n * n - 14 * n + 7 ) ) / 15 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( oddNumSum ( n ) ) ; } }",
            "python_code": "def oddNumSum ( n ) : NEWLINE INDENT return ( n * ( 2 * n + 1 ) * ( 24 * n * n * n - 12 * n * n - 14 * n + 7 ) ) / 15 NEWLINE DEDENT n = 4 NEWLINE print ( int ( oddNumSum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_459_A_2790",
            "java_code": "class GFG { static int numberOfPaths ( int m , int n ) { int [ ] dp = new int [ n ] ; dp [ 0 ] = 1 ; for ( int i = 0 ; i < m ; i ++ ) { for ( int j = 1 ; j < n ; j ++ ) { dp [ j ] += dp [ j - 1 ] ; } } return dp [ n - 1 ] ; } public static void main ( String args [ ] ) { System . out . println ( numberOfPaths ( 3 , 3 ) ) ; } }",
            "python_code": "def numberOfPaths ( p , q ) : NEWLINE INDENT dp = [ 1 for i in range ( q ) ] NEWLINE for i in range ( p - 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , q ) : NEWLINE INDENTINDENTINDENT dp [ j ] += dp [ j - 1 ] NEWLINE DEDENT DEDENT return dp [ q - 1 ] NEWLINE DEDENT print ( numberOfPaths ( 3 , 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3600_A_2791",
            "java_code": "class GFG { static int numberOfCuts ( int M , int N ) { int result = 0 ; result = ( M - 1 ) * ( N - 1 ) ; return result ; } public static void main ( String args [ ] ) { int M = 4 , N = 4 ; int Cuts = numberOfCuts ( M , N ) ; System . out . println ( \"Maximum cuts = \" + Cuts ) ; } }",
            "python_code": "def numberOfCuts ( M , N ) : NEWLINE INDENT result = 0 NEWLINE result = ( M - 1 ) * ( N - 1 ) NEWLINE return result NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT M , N = 4 , 4 NEWLINE Cuts = numberOfCuts ( M , N ) NEWLINE print ( \"Maximum cuts = \" , Cuts ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_999_B_2792",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( n % i == 0 ) { String s1 = s . substring ( 0 , i ) ; String s2 = s . substring ( i ) ; StringBuilder stringBuilder = new StringBuilder ( s1 ) ; s = stringBuilder . reverse ( ) + s2 ;",
            "python_code": "n = int ( input ( ) ) s = list ( input ( ) )    for i in range ( 2 , n ) : if n % i == 0 : s [ : i ] = s [ : i ] [ : : - 1 ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2401_A_2793",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { public static void main ( String args [ ] ) { int N = 6 ; int Even = N / 2 ; int Odd = N - Even ; System . out . println ( Even * Odd ) ; } }",
            "python_code": "N = 6 NEWLINE Even = N // 2 NEWLINE Odd = N - Even NEWLINE print ( Even * Odd ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4505_A_2794",
            "java_code": "class GFG { static int addOne ( int x ) { int m = 1 ; while ( ( int ) ( x & m ) >= 1 ) { x = x ^ m ; m <<= 1 ; } x = x ^ m ; return x ; } public static void main ( String [ ] args ) { System . out . println ( addOne ( 13 ) ) ; } }",
            "python_code": "def addOne ( x ) : NEWLINE INDENT m = 1 ; NEWLINE while ( x & m ) : NEWLINE INDENTINDENT x = x ^ m NEWLINE m <<= 1 NEWLINE DEDENT x = x ^ m NEWLINE return x NEWLINE DEDENT n = 13 NEWLINE print addOne ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_192_A_2795",
            "java_code": "import java . util . * ; public class Demo { public static void main ( String [ ] args ) { int n , t ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; for ( int i = 1 ; i < n ; i ++ ) { int z = i * ( i + 1 ) ; if ( n < z ) break ; t = ( int ) Math . sqrt ( 2 * n - z ) ; t = t * ( t + 1 ) ; if ( t == 2 * n - z ) { System . out . println ( \"YES\" ) ; return ; } } System . out . println ( \"NO\" ) ; } }",
            "python_code": "n = int ( input ( ) ) n = n * 2 k = 0 f = Falsefor i in range ( 1 , int ( n ** 0.5 ) ) : n1 = n - i * ( i + 1 ) k = int ( n1 ** 0.5 ) if k * ( k + 1 ) == n1 and k != 0 : print ( 'YES' ) f = True breakif f == False : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_393_A_2796",
            "java_code": "import java . util . Scanner ; public class Nineteen { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s ;",
            "python_code": "a = input ( ) b = a . count ( 'n' ) c = a . count ( 'i' ) d = a . count ( 'e' ) e = a . count ( 't' )  if b > 4 : print ( min ( ( b - 1 ) // 2 , c , d // 3 , e ) ) elif b == 3 or b == 4 : print ( min ( 1 , c , d // 3 , e ) ) else : print ( 0 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_890_A_2797",
            "java_code": "class GfG { static long ispowerof2 ( long num ) { if ( ( num & ( num - 1 ) ) == 0 ) return 1 ; return 0 ; } public static void main ( String [ ] args ) { long num = 549755813888L ; System . out . println ( ispowerof2 ( num ) ) ; } }",
            "python_code": "def ispowerof2 ( num ) : NEWLINE INDENT if ( ( num & ( num - 1 ) ) == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT return 0 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT num = 549755813888 NEWLINE print ( ispowerof2 ( num ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_865_A_2798",
            "java_code": "n = int ( input ( ) ) if n == 1 : print ( 1 , 1 ) print ( 1 ) else : print ( ( n - 1 ) * 2 , 2 ) print ( 1 , 2 )",
            "python_code": "n = int ( input ( ) ) print ( max ( 1 , 2 * n - 2 ) , 2 ) print ( 1 , 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1445_B_2799",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;  for ( int i = 0 ; i < t ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; System . out . println ( Math . max ( ( a + b ) , ( c + d ) ) ) ; } } ",
            "python_code": "for i in range ( int ( input ( ) ) ) : a = [ int ( j ) for j in input ( ) . split ( ) ] NEWLINE print ( max ( a [ 0 ] + a [ 1 ] , a [ 2 ] + a [ 3 ] ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2058_A_2800",
            "java_code": "class GFG { static int calculateLeaps ( int n ) { if ( n == 0 || n == 1 ) { return 1 ; } else { int leaps = 0 ; for ( int i = 0 ; i < n ; i ++ ) leaps += calculateLeaps ( i ) ; return leaps ; } } public static void main ( String [ ] args ) { System . out . println ( calculateLeaps ( 4 ) ) ; } }",
            "python_code": "def calculateLeaps ( n ) : NEWLINE INDENT if n == 0 or n == 1 : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT else : NEWLINE INDENTINDENT leaps = 0 ; NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENTINDENT leaps = leaps + calculateLeaps ( i ) ; NEWLINE DEDENT return leaps ; NEWLINE DEDENT DEDENT print ( calculateLeaps ( 4 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1409_B_2801",
            "java_code": "import java . io . * ; import java . util . * ;  public class B {  public static void main ( String [ ] args ) throws FileNotFoundException { FastScanner fs = new FastScanner ( ) ; FastOutput fo = new FastOutput ( ) ; long initial_time = System . currentTimeMillis ( ) ; int testcases = fs . nextInt ( ) ; for ( int tt = 0 ; tt < testcases ; tt ++ ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b , x , y , n = map ( int , input ( ) . split ( ) ) NEWLINE z = max ( ( a - n ) , x ) NEWLINE t = max ( ( b - ( n - a + z ) ) , y ) NEWLINE l = max ( ( b - n ) , y ) NEWLINE q = max ( a - ( n - b + l ) , x ) NEWLINE print ( min ( z * t , l * q ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_743_A_2802",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) s = input ( ) if ( s [ a - 1 ] == s [ b - 1 ] ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1438_A_2803",
            "java_code": "import java . io . * ; class GFG { static int makeOdd ( int n ) { if ( n % 2 != 0 ) return 1 ; int ans = 1 ; while ( n % 2 == 0 ) { n /= 2 ; ans *= 2 ; } return ans ; } public static void main ( String [ ] args ) { int n = 36 ; int res = makeOdd ( n ) ; System . out . println ( res ) ; } }",
            "python_code": "def makeOdd ( n ) : NEWLINE INDENT if ( n % 2 != 0 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT resul = 1 ; NEWLINE while ( n % 2 == 0 ) : NEWLINE INDENTINDENT n = n / 2 ; NEWLINE resul = resul * 2 ; NEWLINE DEDENT return resul ; NEWLINE DEDENT n = 36 ; NEWLINE print ( makeOdd ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_58_A_2804",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "Into = str ( input ( ) ) NEWLINE Into = list ( Into ) NEWLINE hello = [ 'h' , 'e' , 'l' , 'l' , 'o' ] NEWLINE cur = 0 l NEWLINE ist1 = [ ] NEWLINE for i in Into : if NEWLINE i == hello [ cur ] : list1 . append ( i ) NEWLINE cur += 1 NEWLINE if len ( list1 ) == 5 : breakif NEWLINE list1 == hello : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_936_A_2805",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {",
            "python_code": "k , d , t = map ( int , input ( ) . split ( ) ) d = ( ( k + d - 1 ) // d ) * dn = 2 * t // ( d + k ) x = 2 * t % ( d + k ) if ( x <= 2 * k ) : ans = x / 2 + d * nelse : ans = x - k + d * nprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1886_A_2806",
            "java_code": "class GFG { static int setBitNumber ( int n ) { n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; n = n + 1 ; return ( n > > 1 ) ; } public static void main ( String arg [ ] ) { int n = 273 ; System . out . print ( setBitNumber ( n ) ) ; } }",
            "python_code": "def setBitNumber ( n ) : NEWLINE INDENT n |= n >> 1 NEWLINE n |= n >> 2 NEWLINE n |= n >> 4 NEWLINE n |= n >> 8 NEWLINE n |= n >> 16 NEWLINE n = n + 1 NEWLINE return ( n >> 1 ) NEWLINE DEDENT n = 273 NEWLINE print ( setBitNumber ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_499_A_2807",
            "java_code": "import java . util . * ; public class WatchingAMovie { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ;  int sum = 0 ; int temp = 1 ;  for ( int i = 0 ; i < n ; i ++ ) { int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ;  sum = sum + ( l - temp ) % x ; sum = sum + ( r - l ) + 1 ; temp = r + 1 ; } sc . close ( ) ;  System . out . println ( sum ) ;  } }",
            "python_code": "n , x = map ( int , input ( ) . split ( ) )  r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = [ r ( ) for _ in range ( n ) ]   t = 1 watch = 0 i = 0 while 1 : while t + x <= arr [ i ] [ 0 ] : t += x NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2729_A_2808",
            "java_code": "import java . io . * ; class GFG { public static String prefixSuffix ( String a , String b , int l ) { String prefix = a . substring ( 0 , l ) ; int lb = b . length ( ) ; String suffix = b . substring ( lb - l ) ; return ( prefix + suffix ) ; } public static void main ( String args [ ] ) throws IOException { String a = \"remuneration\" , b = \"acquiesce\" ; int l = 5 ; System . out . println ( prefixSuffix ( a , b , l ) ) ; } }",
            "python_code": "def GetPrefixSuffix ( a , b , l ) : NEWLINE INDENT prefix = a [ : l ] ; NEWLINE lb = len ( b ) ; NEWLINE suffix = b [ lb - l : ] ; NEWLINE return ( prefix + suffix ) ; NEWLINE DEDENT a = \"remuneration\" ; NEWLINE b = \"acquiesce\" ; NEWLINE l = 5 ; NEWLINE print ( GetPrefixSuffix ( a , b , l ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_417_A_2809",
            "java_code": "import java . util . * ; import java . io . * ;  public class CJ2 {  public static void main ( String [ ] args ) throws Exception {",
            "python_code": "import mathc , d = map ( int , input ( ) . split ( ) ) n , m = map ( int , input ( ) . split ( ) ) k = int ( input ( ) )  if m * n <= k : print ( 0 ) else : c1 = m * c  c2 = ( ( ( ( m * n ) - k ) // n ) * c ) + ( ( ( ( m * n ) - k ) % n ) * d )  c3 = math . ceil ( ( ( m * n ) - k ) / n ) * c  c4 = ( ( m * n ) - k ) * d  print ( min ( c1 , c2 , c3 , c4 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4052_A_2810",
            "java_code": "import java . util . * ; class GFG { static long sum ( long n ) { long root = ( long ) Math . sqrt ( n ) ; long ans = 0 ; for ( int i = 1 ; i <= root ; i ++ ) ans += n / i ; ans = 2 * ans - ( root * root ) ; return ans ; } public static void main ( String [ ] args ) { long n = 35 ; System . out . println ( sum ( n ) ) ; } }",
            "python_code": "import math NEWLINE def sum ( n ) : NEWLINE INDENT root = ( int ) ( math . sqrt ( n ) ) NEWLINE ans = 0 NEWLINE for i in range ( 1 , root + 1 ) : NEWLINE INDENTINDENT ans = ans + n // i NEWLINE DEDENT ans = 2 * ans - ( root * root ) NEWLINE return ans NEWLINE DEDENT n = 35 NEWLINE print ( sum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1148_A_2811",
            "java_code": "import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _p001148A { static public void main ( final String [ ] args ) throws IOException { p001148A . _main ( args ) ; }",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) if a < b : s = ( a * 2 + c * 2 ) else : s = ( b * 2 + c * 2 ) if a != b : s += 1 print ( s )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1031_A_2812",
            "java_code": "import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; int h = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int r = 0 ; for ( int i = 0 ; i < k ; i ++ ) { r += 2 * ( h ) ; r += 2 * ( w - 2 ) ; w -= 4 ; h -= 4 ; } System . out . println ( r ) ; } }",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) cells = 0 for i in range ( 0 , k ) : cells += 2 * ( m + n - 2 - i * ( 8 ) ) print ( cells ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2534_A_2813",
            "java_code": "class GFG { static int minOperations ( int N ) { double x = Math . log ( N ) / Math . log ( 2 ) ; int ans = ( int ) ( Math . ceil ( x ) ) ; return ans ; } public static void main ( String [ ] args ) { int N = 10 ; System . out . println ( minOperations ( N ) ) ; } }",
            "python_code": "from math import log2 , ceil NEWLINE def minOperations ( N ) : NEWLINE INDENT x = log2 ( N ) NEWLINE ans = ceil ( x ) NEWLINE return ans NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 10 NEWLINE print ( minOperations ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_707_A_2814",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) * sc . nextInt ( ) ; while ( a -- > 0 ) { String x = sc . next ( ) ; if ( ! ( x . equals ( \"B\" ) | x . equals ( \"G\" ) | x . equals ( \"W\" ) ) ) { System . out . println ( \"#Color\" ) ; return ; } } System . out . println ( \"#Black&White\" ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) s = 0 for i in range ( n ) : a = [ i for i in input ( ) . split ( ) ] s += a . count ( 'W' ) + a . count ( 'B' ) + a . count ( 'G' ) if s == n * m : print ( '#Black&White' ) else : print ( '#Color' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1370_A_2815",
            "java_code": "import java . util . Scanner ;  public class MaximumGCD { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int test = sc . nextInt ( ) ; for ( int i = 0 ; i < test ; i ++ ) { int num = sc . nextInt ( ) ; System . out . println ( num / 2 ) ; } } }",
            "python_code": "t = int ( input ( ) )  for _ in range ( t ) : n = int ( input ( ) ) print ( n // 2 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_399_A_2816",
            "java_code": "import java . util . Scanner ;   public class Main {  public static void main ( String [ ] args ) {",
            "python_code": "n , p , k = list ( map ( int , input ( ) . split ( ' ' ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1345_A_2817",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ; while ( t > 0 ) { int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; t -- ; if ( n == 1 || m == 1 || ( n == 2 && m == 2 ) ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } } }",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : n , k = list ( map ( int , input ( ) . split ( ) ) ) if ( n == 1 or k == 1 ) or n == 2 and k == 2 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1113_A_2818",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ;  public class cp { public static void main ( String [ ] args ) throws IOException {  BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; int n = Integer . parseInt ( st . nextToken ( ) ) ; int v = Integer . parseInt ( st . nextToken ( ) ) ;  int req = ( n - 1 ) ;",
            "python_code": "from itertools import accumulate  n , v = map ( int , input ( ) . split ( ) ) cost = [ ] n -= 1 while v : cost . append ( 1 ) v -= 1 n -= 1 k = 2 while n > 0 : cost . append ( k ) k += 1 n -= 1  total_cost = list ( accumulate ( cost ) ) print ( total_cost [ n - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1822_A_2819",
            "java_code": "import java . io . * ; class GFG { static int octalToDecimal ( int n ) { int num = n ; int dec_value = 0 ; int base = 1 ; int temp = num ; while ( temp > 0 ) { int last_digit = temp % 10 ; temp = temp / 10 ; dec_value += last_digit * base ; base = base * 8 ; } return dec_value ; } public static void main ( String [ ] args ) { int num = 67 ; System . out . println ( octalToDecimal ( num ) ) ; } }",
            "python_code": "def octalToDecimal ( n ) : NEWLINE INDENT num = n ; NEWLINE dec_value = 0 ; NEWLINE base = 1 ; NEWLINE temp = num ; NEWLINE while ( temp ) : NEWLINE INDENTINDENT last_digit = temp % 10 ; NEWLINE temp = int ( temp / 10 ) ; NEWLINE dec_value += last_digit * base ; NEWLINE base = base * 8 ; NEWLINE DEDENT return dec_value ; NEWLINE DEDENT num = 67 ; NEWLINE print ( octalToDecimal ( num ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2516_A_2820",
            "java_code": "class GFG { static int squares ( int l , int b , int a ) { return ( int ) ( Math . ceil ( l / ( double ) a ) * Math . ceil ( b / ( double ) a ) ) ; } public static void main ( String [ ] args ) { int l = 11 , b = 23 , a = 14 ; System . out . println ( squares ( l , b , a ) ) ; } }",
            "python_code": "import math NEWLINE def squares ( l , b , a ) : NEWLINE INDENT return math . ceil ( l / a ) * math . ceil ( b / a ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l = 11 NEWLINE b = 23 NEWLINE a = 14 NEWLINE print ( squares ( l , b , a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_164_A_2821",
            "java_code": "import java . io . * ; class GFG { static int Largestpower ( int n , int p ) { int ans = 0 ; while ( n > 0 ) { n /= p ; ans += n ; } return ans ; } public static void main ( String [ ] args ) { int n = 10 ; int p = 3 ; System . out . println ( \" The largest power of \" + p + \" that divides \" + n + \"! is \" + Largestpower ( n , p ) ) ; } }",
            "python_code": "def largestPower ( n , p ) : NEWLINE INDENT x = 0 NEWLINE while n : NEWLINE INDENTINDENT n /= p NEWLINE x += n NEWLINE DEDENT return x NEWLINE DEDENT n = 10 ; p = 3 NEWLINE print ( \"The largest power of %d that divides %d! is %d\\n\" % ( p , n , largestPower ( n , p ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1211_A_2822",
            "java_code": "import java . io . * ; class GFG { static float area ( float a ) { if ( a < 0 ) return - 1 ; float area = ( float ) Math . pow ( ( a * Math . sqrt ( 3 ) ) / ( Math . sqrt ( 2 ) ) , 2 ) ; return area ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( area ( a ) ) ; } }",
            "python_code": "from math import pow , sqrt NEWLINE def area ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT area = pow ( ( a * sqrt ( 3 ) ) / ( sqrt ( 2 ) ) , 2 ) NEWLINE return area NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 5 NEWLINE print ( \"{0:.3}\" . format ( area ( a ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4783_A_2823",
            "java_code": "import java . io . * ; class GFG { static int averageOdd ( int n ) { if ( n % 2 == 0 ) { System . out . println ( \"Invalid Input\" ) ; return - 1 ; } int sum = 0 , count = 0 ; while ( n >= 1 ) { count ++ ; sum += n ; n = n - 2 ; } return sum / count ; } public static void main ( String args [ ] ) { int n = 15 ; System . out . println ( averageOdd ( n ) ) ; } }",
            "python_code": "def averageOdd ( n ) : NEWLINE INDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT print ( \"Invalid Input\" ) NEWLINE return - 1 NEWLINE DEDENT sm = 0 NEWLINE count = 0 NEWLINE while ( n >= 1 ) : NEWLINE INDENTINDENT count = count + 1 NEWLINE sm = sm + n NEWLINE n = n - 2 NEWLINE DEDENT return sm // count NEWLINE DEDENT n = 15 NEWLINE print ( averageOdd ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_678_A_2824",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextInt ( ) ; long k = sc . nextInt ( ) ; if ( k == 1 ) { System . out . println ( n + 1 ) ; return ; } if ( n % k == 0 ) ++ n ; long x = n % k ; System . out . println ( n + ( k - x ) ) ; } }",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) ceil = ( n + k - 1 ) // kif ceil * k > n : print ( ceil * k ) else : print ( ceil * k + k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2010_A_2825",
            "java_code": "class cfg { static float squareSide ( float a ) { if ( a < 0 ) return - 1 ; float x = ( 0.423f * a ) ; return x ; } public static void main ( String [ ] args ) { float a = 8 ; System . out . println ( squareSide ( a ) ) ; } }",
            "python_code": "def squareSide ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT x = 0.423 * a NEWLINE return x NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 8 NEWLINE print ( squareSide ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4782_A_2826",
            "java_code": "import java . io . * ; class GFG { static int inversegrayCode ( int n ) { int inv = 0 ; for ( ; n != 0 ; n = n > > 1 ) inv ^= n ; return inv ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( inversegrayCode ( n ) ) ; } }",
            "python_code": "def inversegrayCode ( n ) : NEWLINE INDENT inv = 0 ; NEWLINE while ( n ) : NEWLINE INDENTINDENT inv = inv ^ n ; NEWLINE n = n >> 1 ; NEWLINE DEDENT return inv ; NEWLINE DEDENT n = 15 ; NEWLINE print ( inversegrayCode ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_709_A_2827",
            "java_code": "class Xor { static int maxXORInRange ( int L , int R ) { int LXR = L ^ R ; int msbPos = 0 ; while ( LXR > 0 ) { msbPos ++ ; LXR >>= 1 ; } int maxXOR = 0 ; int two = 1 ; while ( msbPos -- > 0 ) { maxXOR += two ; two <<= 1 ; } return maxXOR ; } public static void main ( String [ ] args ) { int L = 8 ; int R = 20 ; System . out . println ( maxXORInRange ( L , R ) ) ; } }",
            "python_code": "def maxXORInRange ( L , R ) : NEWLINE INDENT LXR = L ^ R NEWLINE msbPos = 0 NEWLINE while ( LXR ) : NEWLINE INDENTINDENT msbPos += 1 NEWLINE LXR >>= 1 NEWLINE DEDENT maxXOR , two = 0 , 1 NEWLINE while ( msbPos ) : NEWLINE INDENTINDENT maxXOR += two NEWLINE two <<= 1 NEWLINE msbPos -= 1 NEWLINE DEDENT return maxXOR NEWLINE DEDENT L , R = 8 , 20 NEWLINE print ( maxXORInRange ( L , R ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2519_A_2828",
            "java_code": "import java . io . * ; class GFG { static int steps ( int N , int M ) { if ( N == 1 ) return 0 ; else if ( N == 2 ) return M ; return 2 * M + ( N - 3 ) ; } public static void main ( String [ ] args ) { int N = 4 , M = 4 ; System . out . print ( steps ( N , M ) ) ; } }",
            "python_code": "def steps ( N , M ) : NEWLINE INDENT if ( N == 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT elif ( N == 2 ) : NEWLINE INDENTINDENT return M NEWLINE DEDENT return 2 * M + ( N - 3 ) NEWLINE DEDENT N = 4 NEWLINE M = 4 NEWLINE print ( steps ( N , M ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3937_A_2829",
            "java_code": "import java . io . * ; class GFG { static boolean isPossibleToZero ( int a [ ] , int n ) { int num = 0 ; for ( int i = 0 ; i < n ; i ++ ) num = num * 10 + a [ i ] ; return ( num % 11 == 0 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 0 , 1 , 1 , 0 } ; int n = arr . length ; if ( isPossibleToZero ( arr , n ) ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "def isPossibleToZero ( a , n ) : NEWLINE INDENT num = 0 ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT num = num * 10 + a [ i ] ; NEWLINE DEDENT return ( num % 11 == 0 ) ; NEWLINE DEDENT arr = [ 0 , 1 , 1 , 0 ] ; NEWLINE n = len ( arr ) ; NEWLINE if ( isPossibleToZero ( arr , n ) ) : NEWLINE INDENT print ( \"YES\" ) ; NEWLINE DEDENT else : NEWLINE INDENT print ( \"NO\" ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1272_B_2830",
            "java_code": "import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class Snow_Walking_Robot {  public static void main ( String [ ] args ) throws NumberFormatException , IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : s = input ( ) d = s . count ( \"D\" ) u = s . count ( \"U\" ) r = s . count ( \"R\" ) l = s . count ( \"L\" ) x = min ( d , u ) d = x u = x y = min ( r , l ) r = y l = y ans = \"L\" * l + \"U\" * u + \"R\" * r + \"D\" * d if d == 0 and u == 0 : if l > 1 and r > 1 : ans = \"LR\" elif l == 0 and r == 0 : if u > 1 and d > 1 : ans = \"UD\" print ( len ( ans ) ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1668_A_2831",
            "java_code": "static int mod ( int a , int m ) { return ( a % m + m ) % m ; }",
            "python_code": "def mod ( a , m ) : NEWLINE INDENT return ( a % m + m ) % m NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3689_A_2832",
            "java_code": "class GFG { static int cntSquares ( int n ) { int squares = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { squares += Math . pow ( i , 2 ) ; } return squares ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . print ( cntSquares ( 4 ) ) ; } }",
            "python_code": "def cntSquares ( n ) : NEWLINE INDENT squares = 0 ; NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT squares += i ** 2 ; NEWLINE DEDENT return squares ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 4 ; NEWLINE print ( cntSquares ( 4 ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1213_B_2833",
            "java_code": "import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = sc . nextInt ( ) ; int [ ] ar = new int [ n ] ; for ( int j = 0 ; j < n ; j ++ ) { ar [ j ] = sc . nextInt ( ) ; } int [ ] minar = new int [ n ] ;",
            "python_code": "t = int ( input ( ) )  for p in range ( t ) : n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) mini = 10000000 c = 0 for i in range ( n - 1 , - 1 , - 1 ) : if a [ i ] <= mini : mini = a [ i ] else : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_577_A_2834",
            "java_code": "import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;",
            "python_code": "rowscolumns , result = [ int ( i ) for i in input ( ) . split ( ) ]  counter = 0  for col in range ( 1 , rowscolumns + 1 ) : if result % col == 0 and result / col <= rowscolumns : counter += 1                                   print ( counter ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_758_A_2835",
            "java_code": "import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ; int existed = 0 ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = in . nextInt ( ) ; existed += x ; max = Math . max ( max , x ) ; } System . out . println ( n * max - existed ) ; }  }  ",
            "python_code": "peoples = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) count = 0 max_ = max ( arr ) for num in arr : count += max_ - numprint ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1847_A_2836",
            "java_code": "import java . util . * ; class GFG { static int setallbitgivenrange ( int n , int l , int r ) { int range = ( ( ( 1 << ( l - 1 ) ) - 1 ) ^ ( ( 1 << ( r ) ) - 1 ) ) ; return ( n | range ) ; } public static void main ( String [ ] args ) { int n = 17 , l = 2 , r = 3 ; System . out . println ( setallbitgivenrange ( n , l , r ) ) ; } }",
            "python_code": "def setallbitgivenrange ( n , l , r ) : NEWLINE INDENT range = ( ( ( 1 << ( l - 1 ) ) - 1 ) ^ ( ( 1 << ( r ) ) - 1 ) ) NEWLINE return ( n | range ) NEWLINE DEDENT n , l , r = 17 , 2 , 3 NEWLINE print ( setallbitgivenrange ( n , l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1443_A_2837",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int tc = sc . nextInt ( ) ; while ( tc -- > 0 ) { int n = sc . nextInt ( ) ; int mid = 2 * n ; int count = n ; for ( int i = 4 * n ; i > mid && count > 0 ; i -= 2 ) { System . out . print ( i + \" \" ) ; count -- ; } System . out . println ( ) ; } sc . close ( ) ; }  }",
            "python_code": "for t in range ( int ( input ( ) ) ) : n = int ( input ( ) ) NEWLINE for i in range ( n ) : print ( 4 * n - 2 * i , end = ' ' ) NEWLINE print ( ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_447_A_2838",
            "java_code": "import java . util . HashSet ; import java . util . Scanner ;  public class problem60 {  public static void main ( String [ ] args ) {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) x = [ ] t = [ - 1 ] * mj = 0 c = Falsefor i in range ( m ) : x += list ( map ( int , input ( ) . split ( ) ) ) for k in range ( m ) : t [ j ] = x [ k ] % n j += 1 for l in range ( m ) : for y in range ( 0 , l ) : if l != y : if t [ l ] == t [ y ] : c = True print ( l + 1 ) exit ( ) if c == False : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3841_A_2839",
            "java_code": "public class GFG { static int count ( int N ) { int sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += 7 * Math . pow ( 8 , i - 1 ) ; } return sum ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( count ( N ) ) ; } }",
            "python_code": "def count ( N ) : NEWLINE INDENT sum = 0 ; NEWLINE for i in range ( N + 1 ) : NEWLINE INDENTINDENT sum += 7 * ( 8 ** ( i - 1 ) ) ; NEWLINE DEDENT return int ( sum ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 4 ; NEWLINE print ( count ( N ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1419_A_2840",
            "java_code": "import java . util . * ; class GFG { static int check ( int n , List < Integer > marks ) { Integer x = Collections . max ( marks ) ; int bonus = 100 - x ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( marks . get ( i ) + bonus >= 50 ) c += 1 ; } return c ; } public static void main ( String [ ] args ) { int n = 5 ; List < Integer > marks = Arrays . asList ( 0 , 21 , 83 , 45 , 64 ) ; System . out . println ( check ( n , marks ) ) ; } }",
            "python_code": "def check ( n , marks ) : NEWLINE INDENT x = max ( marks ) NEWLINE bonus = 100 - x NEWLINE c = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( marks [ i ] + bonus >= 50 ) : NEWLINE INDENTINDENTINDENT c += 1 NEWLINE DEDENT DEDENT return c NEWLINE DEDENT n = 5 NEWLINE marks = [ 0 , 21 , 83 , 45 , 64 ] NEWLINE print ( check ( n , marks ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1819_A_2841",
            "java_code": "class GFG { static String even_or_odd ( String N ) { int len = N . length ( ) ; if ( N . charAt ( len - 1 ) == '0' || N . charAt ( len - 1 ) == '2' || N . charAt ( len - 1 ) == '4' || N . charAt ( len - 1 ) == '6' ) return ( \"Even\" ) ; else return ( \"Odd\" ) ; } public static void main ( String [ ] args ) { String N = \"735\" ; System . out . print ( even_or_odd ( N ) ) ; } }",
            "python_code": "def even_or_odd ( N ) : NEWLINE INDENT l = len ( N ) ; NEWLINE if ( N [ l - 1 ] == '0' or N [ l - 1 ] == '2' or N [ l - 1 ] == '4' or N [ l - 1 ] == '6' ) : NEWLINE INDENTINDENT return ( \"Even\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( \"Odd\" ) NEWLINE DEDENT DEDENT N = \"735\" NEWLINE print ( even_or_odd ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1166_B_2842",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) f = 0 if n / 2 < 5 : print ( - 1 ) else : for i in range ( 5 , n // 2 ) : if n % i == 0 and n // i >= 5 : s = 'aeiou' + 'g' * ( ( i ) - 5 ) ; j = 1 ans = s while j < n // i : s = s [ - 1 ] + s [ : - 1 ] ans = ans + s j += 1 print ( ans ) f = 1 break if f == 0 : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1964_A_2843",
            "java_code": "class MaxConsecutiveOnes { private static int maxConsecutiveOnes ( int x ) { int count = 0 ; while ( x != 0 ) { x = ( x & ( x << 1 ) ) ; count ++ ; } return count ; } public static void main ( String strings [ ] ) { System . out . println ( maxConsecutiveOnes ( 14 ) ) ; System . out . println ( maxConsecutiveOnes ( 222 ) ) ; } }",
            "python_code": "def maxConsecutiveOnes ( x ) : NEWLINE INDENT count = 0 NEWLINE while ( x != 0 ) : NEWLINE INDENTINDENT x = ( x & ( x << 1 ) ) NEWLINE count = count + 1 NEWLINE DEDENT return count NEWLINE DEDENT print ( maxConsecutiveOnes ( 14 ) ) NEWLINE print ( maxConsecutiveOnes ( 222 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_592_B_2844",
            "java_code": "import java . io . BufferedReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class monster {  public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) print ( ( n - 2 ) * ( n - 2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1367_A_2845",
            "java_code": "import java . io . * ; class GFG { static int Largestpower ( int n , int p ) { int ans = 0 ; while ( n > 0 ) { n /= p ; ans += n ; } return ans ; } public static void main ( String [ ] args ) { int n = 10 ; int p = 3 ; System . out . println ( \" The largest power of \" + p + \" that divides \" + n + \"! is \" + Largestpower ( n , p ) ) ; } }",
            "python_code": "def largestPower ( n , p ) : NEWLINE INDENT x = 0 NEWLINE while n : NEWLINE INDENTINDENT n /= p NEWLINE x += n NEWLINE DEDENT return x NEWLINE DEDENT n = 10 ; p = 3 NEWLINE print ( \"The largest power of %d that divides %d! is %d\\n\" % ( p , n , largestPower ( n , p ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4922_A_2846",
            "java_code": "public class GFG { static int countSubstringWithEqualEnds ( String s ) { int result = 0 ; int n = s . length ( ) ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i ; j < n ; j ++ ) if ( s . charAt ( i ) == s . charAt ( j ) ) result ++ ; return result ; } public static void main ( String args [ ] ) { String s = \"abcab\" ; System . out . println ( countSubstringWithEqualEnds ( s ) ) ; } }",
            "python_code": "def countSubstringWithEqualEnds ( s ) : NEWLINE INDENT result = 0 ; NEWLINE n = len ( s ) ; NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT for j in range ( i , n ) : NEWLINE INDENTINDENTINDENT if ( s [ i ] == s [ j ] ) : NEWLINE INDENTINDENTINDENTINDENT result = result + 1 NEWLINE DEDENT DEDENT DEDENT return result NEWLINE DEDENT s = \"abcab\" ; NEWLINE print ( countSubstringWithEqualEnds ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1580_A_2847",
            "java_code": "import java . io . * ; class GFG { static int power ( int x , int y ) { int res = 1 ; while ( y > 0 ) { if ( ( y & 1 ) == 1 ) res = res * x ; y = y > > 1 ; x = x * x ; } return res ; } public static void main ( String [ ] args ) { int x = 3 ; int y = 5 ; System . out . println ( \"Power is \" + power ( x , y ) ) ; } }",
            "python_code": "def power ( x , y ) : NEWLINE INDENT res = 1 NEWLINE while ( y > 0 ) : NEWLINE INDENTINDENT if ( ( y & 1 ) == 1 ) : NEWLINE INDENTINDENTINDENT res = res * x NEWLINE DEDENT y = y >> 1 NEWLINE x = x * x NEWLINE DEDENT return res NEWLINE DEDENT x = 3 NEWLINE y = 5 NEWLINE print ( \"Power is \" , power ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1172_B_2848",
            "java_code": "import java . io . * ; import java . util . * ; import java . math . * ;   public class Main { public static final Long mod = Long . valueOf ( 998244353 ) ; public static final int N = 200020 ; public static Long [ ] ch = new Long [ N ] ; public static int [ ] deg = new int [ N ] ; public static void main ( String args [ ] ) { Scanner in ; PrintStream out ;",
            "python_code": "n = int ( input ( ) ) r = n ; MAX = 998244353 arr = [ 0 ] * ( n + 1 ) for i in range ( n - 1 ) : a , b = map ( int , input ( ) . split ( ) ) arr [ a ] += 1 ; arr [ b ] += 1 r *= arr [ a ] * arr [ b ] r %= MAXprint ( r ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_140_A_2849",
            "java_code": "class GFG { static int N = 10000 ; static int MOD = 1000000007 ; static int [ ] F = new int [ N ] ; static void precompute ( ) { F [ 1 ] = 2 ; F [ 2 ] = 3 ; F [ 3 ] = 4 ; for ( int i = 4 ; i < N ; i ++ ) F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD ; } public static void main ( String [ ] args ) { int n = 8 ; precompute ( ) ; System . out . println ( F [ n ] ) ; } }",
            "python_code": "N = 10000 ; NEWLINE MOD = 1000000007 ; NEWLINE F = [ 0 ] * N ; NEWLINE def precompute ( ) : NEWLINE INDENT F [ 1 ] = 2 ; NEWLINE F [ 2 ] = 3 ; NEWLINE F [ 3 ] = 4 ; NEWLINE for i in range ( 4 , N ) : NEWLINE INDENTINDENT F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD ; NEWLINE DEDENT DEDENT n = 8 ; NEWLINE precompute ( ) ; NEWLINE print ( F [ n ] ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1054_B_2850",
            "java_code": "import java . util . * ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int r = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { int v = sc . nextInt ( ) ; if ( v > r + 1 ) { System . out . println ( i + 1 ) ; return ; } r = Math . max ( v , r ) ; } System . out . println ( - 1 ) ; sc . close ( ) ; } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) s = 0  for j , i in enumerate ( a ) : if i > s : print ( j + 1 ) exit ( ) if i == s : s += 1  print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_71_B_2851",
            "java_code": "import java . util . * ; public class a { public static void main ( String [ ] argrs ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; int t = in . nextInt ( ) ; int a = ( n * k * t ) / 100 ; for ( int i = 0 ; i < n ; i ++ ) { int use = Math . min ( k , a ) ; System . out . printf ( \"%d \" , use ) ; a -= use ; } System . out . println ( ) ; } }",
            "python_code": "n , k , t = map ( int , input ( ) . split ( ) ) NEWLINE ans = [ 0 ] * ni = 0 NEWLINE a = n * k * t // 100 NEWLINE while a > 0 : if NEWLINE a >= k : ans [ i ] += k NEWLINE i += 1 NEWLINE a -= k else : ans [ i ] += int ( a ) NEWLINE a -= int ( a ) NEWLINE print ( * ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2648_A_2852",
            "java_code": "class Test { static void printFibonacciNumbers ( int n ) { int f1 = 0 , f2 = 1 , i ; if ( n < 1 ) return ; for ( i = 1 ; i <= n ; i ++ ) { System . out . print ( f2 + \" \" ) ; int next = f1 + f2 ; f1 = f2 ; f2 = next ; } } public static void main ( String [ ] args ) { printFibonacciNumbers ( 7 ) ; } }",
            "python_code": "def printFibonacciNumbers ( n ) : NEWLINE INDENT f1 = 0 NEWLINE f2 = 1 NEWLINE if ( n < 1 ) : NEWLINE INDENTINDENT return NEWLINE DEDENT for x in range ( 0 , n ) : NEWLINE INDENTINDENT print ( f2 , end = \" \" ) NEWLINE next = f1 + f2 NEWLINE f1 = f2 NEWLINE f2 = next NEWLINE DEDENT DEDENT printFibonacciNumbers ( 7 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_328_A_2853",
            "java_code": "import java . io . * ; import java . util . * ; public class Main {  public static void main ( String [ ] args ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; Random gen = new Random ( ) ; int test = 1 ;",
            "python_code": "'''   ''' NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_151_A_2854",
            "java_code": "import java . io . * ; class GFG { static int find_sum ( int n , int k ) { int total_sum = ( n * ( n + 1 ) ) / 2 ; int power = k ; while ( power <= n ) { total_sum -= power ; power *= k ; } return total_sum ; } public static void main ( String [ ] args ) { int n = 11 , k = 2 ; System . out . println ( find_sum ( n , k ) ) ; } }",
            "python_code": "def find_sum ( n , k ) : NEWLINE INDENT total_sum = ( n * ( n + 1 ) ) // 2 NEWLINE power = k NEWLINE while power <= n : NEWLINE INDENTINDENT total_sum -= power NEWLINE power *= k NEWLINE DEDENT return total_sum NEWLINE DEDENT n = 11 ; k = 2 NEWLINE print ( find_sum ( n , k ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4715_A_2855",
            "java_code": "class GFG { static int maxLCM ( int n ) { return ( n * ( n - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( maxLCM ( n ) ) ; } }",
            "python_code": "def maxLCM ( n ) : NEWLINE INDENT return ( n * ( n - 1 ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 ; NEWLINE print ( maxLCM ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_994_A_2856",
            "java_code": "import java . util . * ;  public class password {  public static void main ( String [ ] args ) {",
            "python_code": "import sys  def main ( ) : inp = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) return ( i for i in inp [ 1 ] . split ( ) if i in set ( inp [ 2 ] . split ( ) ) ) print ( * main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_884_A_2857",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "num , t = map ( int , ( input ( ) . split ( ) ) ) arr = list ( map ( int , input ( ) . split ( ) ) )  ct = 0 i = 0 while t > 0 : t -= ( 86400 - arr [ i ] ) i += 1 ct += 1  print ( ct ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_424_A_2858",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . BigInteger ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "n = int ( input ( ) )  s = input ( )  a = s . count ( 'X' ) b = s . count ( 'x' )  if a == b : print ( 0 ) print ( s ) else : if a > b : c = a - n // 2 s = s . replace ( 'X' , 'x' , c ) print ( c ) else : c = b - n // 2 print ( c ) s = s . replace ( 'x' , 'X' , c )  print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4705_A_2859",
            "java_code": "class GFG { static int bankNotes ( int A , int B , int S , int N ) { int numerator = S - ( B * N ) ; int denominator = A - B ; if ( numerator % denominator == 0 ) return ( numerator / denominator ) ; return - 1 ; } public static void main ( String [ ] args ) { int A = 1 , B = 2 , S = 7 , N = 5 ; System . out . print ( bankNotes ( A , B , S , N ) ) ; } }",
            "python_code": "def bankNotes ( A , B , S , N ) : NEWLINE INDENT numerator = S - ( B * N ) NEWLINE denominator = A - B NEWLINE if ( numerator % denominator == 0 ) : NEWLINE INDENTINDENT return ( numerator // denominator ) NEWLINE DEDENT return - 1 NEWLINE DEDENT A , B , S , N = 1 , 2 , 7 , 5 NEWLINE print ( bankNotes ( A , B , S , N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_571_A_2860",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;  public class Main { public void solve ( ) { int a [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { a [ i ] = ni ( ) ; } long l = ni ( ) ;  long total = ( l + 1 ) * ( l + 2 ) * ( l + 3 ) / 6 ;",
            "python_code": "a , b , c , l = map ( int , input ( ) . split ( ) ) ans = ( l + 3 ) * ( l + 2 ) * ( l + 1 ) // 3 for z in ( a , b , c ) : s = 2 * z - a - b - c for x in range ( max ( 0 , - s ) , l + 1 ) : m = min ( s + x , l - x ) ans -= ( m + 1 ) * ( m + 2 ) print ( ans // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1413_A_2861",
            "java_code": "import java . util . * ; public class FindingSasuke {  public static void main ( String [ ] args ) {",
            "python_code": "t = int ( input ( ) ) NEWLINE while ( t > 0 ) : n = int ( input ( ) ) NEWLINE temp = input ( ) NEWLINE ar = ( temp . split ( ) ) NEWLINE for i in range ( 0 , n , 2 ) : print ( - 1 * ( int ( ar [ i + 1 ] ) ) , end = \" \" ) NEWLINE print ( ( int ( ar [ i ] ) ) , end = \" \" ) NEWLINE print ( \"\" ) NEWLINE t -= 1 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_659_A_2862",
            "java_code": "import java . util . Scanner ;  public class _0671RoundHouse {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( ( a - 1 + b ) % n + n ) % n + 1 ) ; }  }",
            "python_code": "n , a , b = map ( int , input ( ) . split ( ) ) if b < 0 : for x in range ( abs ( b ) ) : if a != 1 : a -= 1 else : a = nelif b >= 0 : for y in range ( b ) : if a == n : a = 1 else : a += 1  print ( a ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_688_B_2863",
            "java_code": "import java . util . Scanner ;  public class MyClass { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String N = in . nextLine ( ) ; String newN = N ; System . out . print ( N ) ; for ( int i = N . length ( ) - 1 ; i >= 0 ; i -- ) { System . out . print ( N . charAt ( i ) ) ; } } }",
            "python_code": "s = input ( ) print ( s + '' . join ( reversed ( s ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_357_A_2864",
            "java_code": "import java . util . * ; import java . io . * ; import java . text . * ; import java . math . * ; import java . lang . Math . * ;  public class A { public static void main ( String [ ] args ) throws Exception { new A ( ) . run ( ) ; } public FastIO file = new FastIO ( ) ; public int ntc , ctc ; public final long MOD = 1000000007L ;",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) b = list ( map ( int , input ( ) . split ( ) ) ) x = b [ 0 ] y = b [ 1 ] i = 1 s = sum ( a ) ans1 = 0 ans2 = sans = 0 while i <= n : ans1 += a [ i - 1 ] ans2 -= a [ i - 1 ] NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4376_A_2865",
            "java_code": "import java . util . * ; class GFG { static void findBalance ( int x , float bal ) { if ( x % 10 == 0 && ( ( float ) x + 1.50 ) <= bal ) { System . out . printf ( \"%.2f\\n\" , bal - x - 1.50 ) ; } else { System . out . printf ( \"%.2f\\n\" , bal ) ; } } public static void main ( String [ ] args ) { int x = 50 ; float bal = ( float ) 100.50 ; findBalance ( x , bal ) ; } }",
            "python_code": "def findBalance ( x , bal ) : NEWLINE INDENT if ( x % 10 == 0 and ( x + 1.50 ) <= bal ) : NEWLINE INDENTINDENT print ( round ( bal - x - 1.50 , 2 ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( round ( bal , 2 ) ) NEWLINE DEDENT DEDENT x = 50 NEWLINE bal = 100.50 NEWLINE findBalance ( x , bal ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_908_A_2866",
            "java_code": "import java . util . * ; class GFG { static void checksum ( int n ) { if ( n % 3 == 0 ) System . out . println ( n / 3 - 1 + \" \" + n / 3 + \" \" + ( n / 3 + 1 ) ) ; else System . out . println ( \"-1\" ) ; } public static void main ( String [ ] args ) { int n = 6 ; checksum ( n ) ; } }",
            "python_code": "def checksum ( n ) : NEWLINE INDENT n = int ( n ) NEWLINE if n % 3 == 0 : NEWLINE INDENTINDENT print ( int ( n / 3 - 1 ) , \" \" , int ( n / 3 ) , \" \" , int ( n / 3 + 1 ) ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"-1\" ) NEWLINE DEDENT DEDENT n = 6 NEWLINE checksum ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_63_B_2867",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "from collections import Counter  if __name__ == '__main__' : cin = input NEWLINE n , k = map ( int , cin ( ) . split ( ) ) NEWLINE d , cnt = Counter ( [ int ( i ) for i in cin ( ) . split ( ) ] ) , 0 NEWLINE while d [ k ] < n : for NEWLINE i in range ( k - 1 , 0 , - 1 ) : NEWLINE if d [ i ] : d [ i + 1 ] += 1 NEWLINE d [ i ] -= 1 NEWLINE cnt += 1 NEWLINE print ( cnt ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_742_A_2868",
            "java_code": "import java . util . * ; public class Arpa { public static void main ( String args [ ] ) { Scanner S = new Scanner ( System . in ) ; int n = S . nextInt ( ) ; if ( n == 0 ) System . out . println ( \"1\" ) ; else { int mod = n % 4 ; if ( mod == 1 ) System . out . println ( \"8\" ) ; else if ( mod == 2 ) System . out . println ( \"4\" ) ; else if ( mod == 3 ) System . out . println ( \"2\" ) ; else if ( mod == 0 ) System . out . println ( \"6\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) print ( pow ( 8 , n , 10 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4549_A_2869",
            "java_code": "import java . util . * ; class GFG { static int countOccurrances ( int n , int d ) { int count = 0 ; while ( n > 0 ) { count = ( n % 10 == d ) ? count + 1 : count ; n = n / 10 ; } return count ; } public static void main ( String args [ ] ) { int d = 2 ; int n = 214215421 ; System . out . println ( countOccurrances ( n , d ) ) ; } }",
            "python_code": "def countOccurrances ( n , d ) : NEWLINE INDENT count = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT if ( n % 10 == d ) : NEWLINE INDENTINDENTINDENT count = count + 1 NEWLINE DEDENT n = n // 10 NEWLINE DEDENT return count NEWLINE DEDENT d = 2 NEWLINE n = 214215421 NEWLINE print ( countOccurrances ( n , d ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_281_A_2870",
            "java_code": "import java . util . Scanner ;  public class WordCapitalisation {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . nextLine ( ) ; String ans = \"\" ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( i == 0 ) { ans += str . charAt ( i ) ; ans = ans . toUpperCase ( ) ; } else { ans += str . charAt ( i ) ; } }  System . out . println ( ans ) ; }  }",
            "python_code": "s = input ( ) s = s [ 0 ] . upper ( ) + s [ 1 : ] print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_835_A_2871",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "s , v1 , v2 , t1 , t2 = map ( int , input ( ) . split ( ) ) n1 = s * v1 + t1 * 2 n2 = s * v2 + t2 * 2 if n1 != n2 : if n1 < n2 : print ( 'First' ) else : print ( 'Second' ) else : print ( 'Friendship' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2826_A_2872",
            "java_code": "import java . util . * ; public class GfG { public static int doMatch ( String A , String B ) { for ( int i = 0 ; i < A . length ( ) ; i ++ ) { if ( A . charAt ( i ) != '*' && B . charAt ( i ) != '*' ) { if ( A . charAt ( i ) != B . charAt ( i ) ) return 0 ; } } return 1 ; } public static void main ( String [ ] args ) { String A = \"gee*sforgeeks\" ; String B = \"geeksforgeeks\" ; System . out . println ( doMatch ( A , B ) ) ; } }",
            "python_code": "def doMatch ( A , B ) : NEWLINE INDENT for i in range ( len ( A ) ) : NEWLINE INDENTINDENT if A [ i ] != '*' and B [ i ] != '*' : NEWLINE INDENTINDENTINDENT if A [ i ] != B [ i ] : NEWLINE INDENTINDENTINDENTINDENT return False NEWLINE DEDENT DEDENT DEDENT return True NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT A = \"gee*sforgeeks\" NEWLINE B = \"geeksforgeeks\" NEWLINE print ( int ( doMatch ( A , B ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2539_A_2873",
            "java_code": "import java . io . * ; class GFG { static int sumofproduct ( int n ) { int ans = 0 ; for ( int x = 1 ; x <= n ; x ++ ) { int y = n / x ; ans += ( y * x ) ; } return ans ; } static public void main ( String [ ] args ) { int n = 10 ; System . out . println ( sumofproduct ( n ) ) ; } }",
            "python_code": "def sumofproduct ( n ) : NEWLINE INDENT ans = 0 NEWLINE for x in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT y = int ( n / x ) NEWLINE ans += ( y * x ) NEWLINE DEDENT return ans NEWLINE DEDENT n = 10 NEWLINE print ( sumofproduct ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1300_A_2874",
            "java_code": "class GFG { static int count ( int n ) { return ( int ) ( - 1 + Math . sqrt ( 1 + 8 * n ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( count ( n ) ) ; } }",
            "python_code": "from math import sqrt NEWLINE def count ( n ) : NEWLINE INDENT return ( - 1 + sqrt ( 1 + 8 * n ) ) // 2 ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 10 ; NEWLINE print ( count ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_219_B_2875",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n , p = map ( int , input ( ) . split ( ) )  ans = n  l = len ( str ( n ) ) for nine in range ( 0 , l ) : m = int ( str ( n ) [ : l - nine ] + '9' * nine ) while m > n : m -= 10 ** nine if n - m <= p : ans = m  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4089_A_2876",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int lcm ( int n , int m ) { return ( n * m ) / gcd ( n , m ) ; } public static void main ( String [ ] args ) { int n = 2 , m = 3 , k = 5 ; System . out . print ( k / lcm ( n , m ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( a == 0 ) : NEWLINE INDENTINDENT return b ; NEWLINE DEDENT return gcd ( b % a , a ) ; NEWLINE DEDENT def lcm ( n , m ) : NEWLINE INDENT return ( n * m ) // gcd ( n , m ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 2 ; m = 3 ; k = 5 ; NEWLINE print ( k // lcm ( n , m ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_B_2877",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner scn = new Scanner ( System . in ) ; int t = scn . nextInt ( ) ; while ( t -- > 0 ) { int n = scn . nextInt ( ) ; int x = n / 2020 ; if ( n % 2020 <= x ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) :  NEWLINE n = int ( input ( ) )  if n // 2020 >= n % 2020 : NEWLINE INDENT print ( 'YES' ) else : NEWLINE print ( 'NO' ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4896_A_2878",
            "java_code": "class GFG { static int AVLnodes ( int height ) { if ( height == 0 ) return 1 ; else if ( height == 1 ) return 2 ; return ( 1 + AVLnodes ( height - 1 ) + AVLnodes ( height - 2 ) ) ; } public static void main ( String args [ ] ) { int H = 3 ; System . out . println ( AVLnodes ( H ) ) ; } }",
            "python_code": "def AVLnodes ( height ) : NEWLINE INDENT if ( height == 0 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT elif ( height == 1 ) : NEWLINE INDENTINDENT return 2 NEWLINE DEDENT return ( 1 + AVLnodes ( height - 1 ) + AVLnodes ( height - 2 ) ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT H = 3 NEWLINE print ( AVLnodes ( H ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4651_A_2879",
            "java_code": "class GFG { static String tribWord ( int n ) { String Sn_1 = \"1\" ; String Sn_2 = \"12\" ; String Sn_3 = \"1213\" ; String tmp ; for ( int i = 3 ; i <= n ; i ++ ) { tmp = Sn_3 ; Sn_3 += ( Sn_2 + Sn_1 ) ; Sn_1 = Sn_2 ; Sn_2 = tmp ; } return Sn_3 ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . print ( tribWord ( n ) ) ; } }",
            "python_code": "def tribWord ( n ) : NEWLINE INDENT Sn_1 = \"1\" NEWLINE Sn_2 = \"12\" NEWLINE Sn_3 = \"1213\" NEWLINE for i in range ( 3 , n + 1 ) : NEWLINE INDENTINDENT tmp = Sn_3 NEWLINE Sn_3 += ( Sn_2 + Sn_1 ) NEWLINE Sn_1 = Sn_2 NEWLINE Sn_2 = tmp NEWLINE DEDENT return Sn_3 NEWLINE DEDENT n = 6 NEWLINE print ( tribWord ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3720_A_2880",
            "java_code": "class GFG { public static int indexOfFirstOne ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) return i ; return - 1 ; } public static void main ( String [ ] args ) { int arr [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 } ; int n = arr . length ; System . out . println ( indexOfFirstOne ( arr , n ) ) ; } }",
            "python_code": "def indexOfFirstOne ( arr , n ) : NEWLINE INDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( arr [ i ] == 1 ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return - 1 NEWLINE DEDENT arr = [ 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 ] NEWLINE n = len ( arr ) NEWLINE ans = indexOfFirstOne ( arr , n ) NEWLINE print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_246_B_2881",
            "java_code": "   import java . math . BigInteger ; import java . util . * ;   public class dummycodes {    public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += sc . nextInt ( ) ; if ( sum % n == 0 ) System . out . println ( n ) ; else System . out . println ( n - 1 ) ;    } }  ",
            "python_code": "n = int ( input ( ) ) a = sum ( map ( int , input ( ) . split ( ) ) ) if a % n == 0 : print ( n ) else : print ( n - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1190_A_2882",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class absolute { public static long process ( long n , long [ ] ar , long k ) { int i = 0 , steps = 0 ; long stdiv = ar [ 0 ] / k , st = ( stdiv + ( ( ar [ 0 ] % k != 0 ) ? 1 : 0 ) ) * k ; if ( k == 1 ) return ar . length ; while ( i < ar . length ) { int count = 0 ;",
            "python_code": "n , m , k = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans , result = 0 , 0 page , new_result = None , 1 for i in range ( m ) : if ( a [ i ] - result ) // k != page : ans += 1 result = new_result page = ( a [ i ] - result ) // k new_result += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_755_B_2883",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class b755 {",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) a = { input ( ) for _ in range ( n ) } b = { input ( ) for _ in range ( m ) } u = len ( a . intersection ( b ) ) print ( \"NO\" ) if m - u + u // 2 >= n - u + ( u + 1 ) // 2 else print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_391_B_2884",
            "java_code": "import java . util . Scanner ;  public class MAIN {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String s = in . nextLine ( ) ; in . close ( ) ; int res = 0 ; if ( s != null && s . length ( ) > 0 ) {",
            "python_code": "t = { } for i , c in enumerate ( input ( ) ) : if c not in t : t [ c ] = ( i , 1 ) elif ( t [ c ] [ 0 ] - i ) & 1 : t [ c ] = ( i , t [ c ] [ 1 ] + 1 ) print ( max ( b for a , b in t . values ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_855_A_2885",
            "java_code": "class GFG { static int find_count ( int [ ] arr ) { int ans = 0 ; for ( int i : arr ) { int x = Integer . bitCount ( i ) ; if ( i % x == 0 ) ans += 1 ; } return ans ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 4 , 5 , 6 } ; System . out . print ( find_count ( arr ) ) ; } }",
            "python_code": "def bitsoncount ( x ) : NEWLINE INDENT return bin ( x ) . count ( '1' ) NEWLINE DEDENT def find_count ( arr ) : NEWLINE INDENT ans = 0 NEWLINE for i in arr : NEWLINE INDENTINDENT x = bitsoncount ( i ) NEWLINE if ( i % x == 0 ) : NEWLINE INDENTINDENTINDENT ans += 1 NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT arr = [ 1 , 2 , 3 , 4 , 5 , 6 ] NEWLINE print ( find_count ( arr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4714_A_2886",
            "java_code": "class GFG { static int factorial ( int n ) { if ( n == 0 ) return 1 ; return n * factorial ( n - 1 ) ; } static int countNum ( int n ) { if ( n > 10 ) return 0 ; return ( 9 * factorial ( 9 ) / factorial ( 10 - n ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countNum ( n ) ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT return n * factorial ( n - 1 ) ; NEWLINE DEDENT def countNum ( n ) : NEWLINE INDENT if ( n > 10 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT return ( 9 * factorial ( 9 ) // factorial ( 10 - n ) ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 ; NEWLINE print ( countNum ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_911_A_2887",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class c705b {",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) k = min ( a ) d = max ( a ) + 1  p = - 100000 pas = [ ] while k in a : s = a . index ( k ) a [ s ] = d if s - p == 1 : exit ( print ( 1 ) ) pas . append ( s - p ) p = s          print ( min ( pas ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4622_A_2888",
            "java_code": "import java . io . * ; class GFG { static void fib ( int n ) { int a = 0 , b = 1 ; if ( n >= 0 ) System . out . print ( a + \" \" ) ; if ( n >= 1 ) System . out . print ( b + \" \" ) ; for ( int i = 2 ; i <= n ; i ++ ) { System . out . print ( a + b + \" \" ) ; b = a + b ; a = b - a ; } } public static void main ( String [ ] args ) { fib ( 9 ) ; } }",
            "python_code": "def fib ( n ) : NEWLINE INDENT a = 0 NEWLINE b = 1 NEWLINE if ( n >= 0 ) : NEWLINE INDENTINDENT print ( a , end = ' ' ) NEWLINE DEDENT if ( n >= 1 ) : NEWLINE INDENTINDENT print ( b , end = ' ' ) NEWLINE DEDENT for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT print ( a + b , end = ' ' ) NEWLINE b = a + b NEWLINE a = b - a NEWLINE DEDENT DEDENT fib ( 9 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1992_A_2889",
            "java_code": "class GfG { static int largestCoprime ( int N ) { if ( N == 6 ) return 1 ; else if ( N % 4 == 0 ) return ( N / 2 ) - 1 ; else if ( N % 2 == 0 ) return ( N / 2 ) - 2 ; else return ( ( N - 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 50 ; System . out . println ( largestCoprime ( n ) ) ; } }",
            "python_code": "def largestCoprime ( N ) : NEWLINE INDENT if N == 6 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT elif N % 4 == 0 : NEWLINE INDENTINDENT return N // 2 - 1 NEWLINE DEDENT elif N % 2 == 0 : NEWLINE INDENTINDENT return N // 2 - 2 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( N - 1 ) // 2 NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 50 NEWLINE print ( largestCoprime ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2126_A_2890",
            "java_code": "import java . io . * ; class GFG { static int fact ( int n ) { int res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) res = res * i ; return res ; } static int Count_number ( int N ) { return ( N * fact ( N ) ) ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . print ( Count_number ( N ) ) ; } }",
            "python_code": "def fact ( n ) : NEWLINE INDENT res = 1 NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT res = res * i NEWLINE DEDENT return res NEWLINE DEDENT def Count_number ( N ) : NEWLINE INDENT return ( N * fact ( N ) ) NEWLINE DEDENT N = 2 NEWLINE print ( Count_number ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_940_B_2891",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception {",
            "python_code": "n = int ( input ( ) ) k = int ( input ( ) ) A = int ( input ( ) ) B = int ( input ( ) ) c = 0 while ( n != 1 ) : if ( k == 1 or k > n ) : c += ( n - 1 ) * A break elif ( n % k != 0 ) : c += ( n % k ) * A n -= n % k else : c += min ( B , ( n - n // k ) * A ) n = n // kprint ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_80_A_2892",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int i = n + 1 ; int j , f ; while ( true ) { f = 1 ; for ( j = 2 ; j <= i / 2 ; j ++ ) { if ( i % j == 0 ) f = 0 ; } if ( f == 1 ) break ; i ++ ; } if ( i == m ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } }",
            "python_code": "l = [ 2 , 3 , 5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 , 41 , 43 , 47 , 51 ] NEWLINE n , m = map ( int , input ( ) . split ( ) ) NEWLINE print ( l [ l . index ( n ) + 1 ] == m and \"YES\" or \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_546_B_2893",
            "java_code": "import java . io . * ; import java . util . * ;  public class codeforces {  BufferedReader br ; StringTokenizer st ; public codeforces ( ) {",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) l . sort ( ) s = sum ( l ) for i in range ( 1 , n ) : if l [ i ] <= l [ i - 1 ] : l [ i ] = l [ i - 1 ] + 1 print ( sum ( l ) - s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1015_B_2894",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class div3_praca {",
            "python_code": "n = int ( input ( ) ) s , t = [ list ( input ( ) ) for _ in range ( 2 ) ] if str ( sorted ( s ) ) == str ( sorted ( t ) ) : ans = [ ] for i in range ( n - 1 , - 1 , - 1 ) : if s [ i ] != t [ i ] : for j in range ( i - 1 , - 1 , - 1 ) : if s [ j ] == t [ i ] : for k in range ( j , i ) : s [ k ] , s [ k + 1 ] = s [ k + 1 ] , s [ k ] ans . append ( k + 1 ) break print ( len ( ans ) ) print ( * ans ) else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1201_B_2895",
            "java_code": "import java . util . * ;  public class CodeForces1201B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; long sum = 0 ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = input . nextInt ( ) ; sum += a ; max = Math . max ( max , a ) ; } if ( sum % 2 == 0 && max * 2 <= sum ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } } }",
            "python_code": "import heapqn = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr . sort ( ) largest = arr [ - 1 ] total = sum ( arr ) others = total - arr [ - 1 ] if total % 2 == 0 and largest <= others : print ( \"YES\" ) else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_569_A_2896",
            "java_code": "import java . util . Scanner ;  public class music {  public static int helper ( int t , int s , int q ) { int ans = s ; int count = 0 ; while ( ans < t ) { ans = ans + ans * ( q - 1 ) ; count ++ ; } if ( count == 0 ) return 1 ; else return count ; }  public static void main ( String [ ] args ) {",
            "python_code": "import io , os , systry : fin = open ( 'in' ) input = fin . readlineexcept : input = io . BytesIO ( os . read ( 0 , os . fstat ( 0 ) . st_size ) ) . readline t , s , q = map ( int , input ( ) . split ( ) ) c = 0 while s < t : c += 1 s *= qprint ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3873_A_2897",
            "java_code": "class GFG { static void updateArray ( int arr [ ] , int n ) { for ( int i = n - 1 ; i > 0 ; i -- ) arr [ i ] = arr [ i - 1 ] ; arr [ 0 ] = - 1 ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( arr [ i ] + \" \" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 1 , 3 , 2 , 4 } ; int N = arr . length ; updateArray ( arr , N ) ; } }",
            "python_code": "def updateArray ( arr , n ) : NEWLINE INDENT i = n - 1 NEWLINE while ( i > 0 ) : NEWLINE INDENTINDENT arr [ i ] = arr [ i - 1 ] NEWLINE i -= 1 NEWLINE DEDENT arr [ 0 ] = - 1 NEWLINE for i in range ( 0 , n , 1 ) : NEWLINE INDENTINDENT print ( arr [ i ] , end = \" \" ) NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT arr = [ 5 , 1 , 3 , 2 , 4 ] NEWLINE N = len ( arr ) NEWLINE updateArray ( arr , N ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_799_A_2898",
            "java_code": "class GFG { static void findRemainder ( int n ) { int l = n % 10 ; while ( n >= 10 ) n /= 10 ; int f = n ; int remainder = f % l ; System . out . println ( remainder ) ; } public static void main ( String [ ] args ) { int n = 5223 ; findRemainder ( n ) ; } }",
            "python_code": "def findRemainder ( n ) : NEWLINE INDENT l = n % 10 NEWLINE while ( n >= 10 ) : NEWLINE INDENTINDENT n //= 10 NEWLINE DEDENT f = n NEWLINE remainder = f % l NEWLINE print ( remainder ) NEWLINE DEDENT n = 5223 NEWLINE findRemainder ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_472_A_2899",
            "java_code": "import java . util . * ;  public class DesignTutorial { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; if ( n % 2 == 0 ) { System . out . println ( \"8 \" + ( n - 8 ) ) ; } else { System . out . println ( \"9 \" + ( n - 9 ) ) ; } } }",
            "python_code": "n = int ( input ( ) ) if n % 2 == 0 : print ( 4 , n - 4 ) else : print ( 9 , n - 9 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_A_2900",
            "java_code": "import java . util . * ; public class Code { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int d = in . nextInt ( ) ; int L = in . nextInt ( ) ; int v1 = in . nextInt ( ) ; int v2 = in . nextInt ( ) ; System . out . println ( ( double ) ( L - d ) / ( v1 + v2 ) ) ; } }",
            "python_code": "d , l , v1 , v2 = map ( int , ( input ( ) . split ( ) ) )  ans = ( l - d ) / ( v1 + v2 )  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3563_A_2901",
            "java_code": "import java . io . * ; class GFG { static int trailingZero ( int x ) { int i = 5 , count = 0 ; while ( x > i ) { count = count + x / i ; i = i * 5 ; } return count ; } static int countProductTrailing ( int M , int N ) { return trailingZero ( N ) + trailingZero ( M ) ; } public static void main ( String args [ ] ) { int N = 67 , M = 98 ; System . out . println ( countProductTrailing ( N , M ) ) ; } }",
            "python_code": "def trailingZero ( x ) : NEWLINE INDENT i = 5 NEWLINE count = 0 NEWLINE while ( x > i ) : NEWLINE INDENTINDENT count = count + x // i NEWLINE i = i * 5 NEWLINE DEDENT return count NEWLINE DEDENT def countProductTrailing ( M , N ) : NEWLINE INDENT return trailingZero ( N ) + trailingZero ( M ) NEWLINE DEDENT N = 67 NEWLINE M = 98 NEWLINE print ( countProductTrailing ( N , M ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1722_A_2902",
            "java_code": "import java . io . * ; class GFG { static int centered_cube ( int n ) { return ( 2 * n + 1 ) * ( n * n + n + 1 ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( n + \"th Centered\" + \" cube number: \" ) ; System . out . println ( centered_cube ( n ) ) ; n = 10 ; System . out . print ( n + \"th Centered\" + \" cube number: \" ) ; System . out . println ( centered_cube ( n ) ) ; } }",
            "python_code": "def centered_cube ( n ) : NEWLINE INDENT return ( 2 * n + 1 ) * ( n * n + n + 1 ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 3 NEWLINE print ( n , \"th Centered cube \" + \"number : \" , centered_cube ( n ) ) NEWLINE n = 10 NEWLINE print ( n , \"th Centered cube \" + \"number : \" , centered_cube ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_176_B_2903",
            "java_code": "import java . util . * ; import java . io . * ;",
            "python_code": "start , end , k = input ( ) , input ( ) , int ( input ( ) ) n , mod = len ( end ) , 10 ** 9 + 7 dp = [ 1 , 0 ] psum = 1 for i in range ( k ) : dp [ 0 ] = psum - dp [ 0 ] dp [ 1 ] = psum - dp [ 1 ] psum = ( dp [ 0 ] + ( ( n - 1 ) * dp [ 1 ] ) % mod ) % modans = 0 for i in range ( n ) : if start [ i : ] + start [ : i ] == end : if i == 0 : ans += dp [ 0 ] else : ans += dp [ 1 ] print ( ans % mod ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4428_A_2904",
            "java_code": "import java . io . * ; class GFG { static void findNumbers ( int n , int d ) { for ( int i = 0 ; i < n - 2 ; i ++ ) System . out . print ( \"1\" + \" \" ) ; System . out . print ( \"2\" + \" \" ) ; System . out . println ( n + d ) ; } public static void main ( String args [ ] ) { int N = 3 , D = 5 ; findNumbers ( N , D ) ; } }",
            "python_code": "def pattern ( n , d ) : NEWLINE INDENT for i in range ( 0 , n - 2 ) : NEWLINE INDENTINDENT print ( \"1\" , end = \" \" ) NEWLINE DEDENT print ( \"2\" , end = \" \" ) NEWLINE print ( n + d ) NEWLINE DEDENT N = 3 NEWLINE D = 5 NEWLINE pattern ( N , D ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4307_A_2905",
            "java_code": "import java . util . Scanner ; class Pattern { static void display ( int n ) { int i , j , k ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 , k = i ; j <= i ; j ++ , k -- ) { if ( k % 2 == 0 ) { System . out . print ( j ) ; } else { System . out . print ( \"*\" ) ; } } System . out . print ( \"\\n\" ) ; } } public static void main ( String [ ] args ) { int n = 5 ; display ( n ) ; } }",
            "python_code": "def display ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT k = i NEWLINE for j in range ( 1 , i + 1 ) : NEWLINE INDENTINDENTINDENT if k % 2 == 0 : NEWLINE INDENTINDENTINDENTINDENT print ( j , end = '' ) NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENTINDENT print ( '*' , end = '' ) NEWLINE DEDENT k -= 1 NEWLINE DEDENT print ( ) NEWLINE DEDENT DEDENT n = 5 NEWLINE display ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_18_B_2906",
            "java_code": "import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; ",
            "python_code": "import systry : fin = open ( 'in' ) except : fin = sys . stdininput = fin . readline  n , d , m , l = map ( int , input ( ) . split ( ) ) cur = 0 R = Nonefor i in range ( n ) : R = i * m + l NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1475_A_2907",
            "java_code": "import java . io . * ; import java . util . * ;  public class OddDivisor {",
            "python_code": "for _ in '.' * int ( input ( ) ) : n = int ( input ( ) ) ; print ( \"YNEOS\" [ n & - n == n : : 2 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_402_A_2908",
            "java_code": "import java . util . Scanner ;  public class A402 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int K = in . nextInt ( ) ; int A = in . nextInt ( ) ; int B = in . nextInt ( ) ; int V = in . nextInt ( ) ; int boxes = 0 ; while ( A > 0 ) { boxes ++ ; int divisors = Math . min ( K - 1 , B ) ; B -= divisors ; A -= ( divisors + 1 ) * V ; } System . out . println ( boxes ) ; }  }",
            "python_code": "import math  k , a , b , v = map ( int , input ( ) . split ( ) )     ans = 0  while a > 0 :  l = min ( k - 1 , b )  b -= l a -= ( l + 1 ) * v  ans += 1  print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_552_A_2909",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x1 = in . nextInt ( ) ; int y1 = in . nextInt ( ) ; int x2 = in . nextInt ( ) ; int y2 = in . nextInt ( ) ; ans += ( x2 - x1 + 1 ) * ( y2 - y1 + 1 ) ; } System . out . println ( ans ) ; } }",
            "python_code": "n = int ( input ( ) ) ans = 0 for _ in range ( n ) : x1 , y1 , x2 , y2 = map ( int , input ( ) . split ( ) ) ans += ( x2 - x1 + 1 ) * ( y2 - y1 + 1 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_562_A_2910",
            "java_code": "class GFG { static byte longSize = 8 ; static int ULL_SIZE = 8 * longSize ; static boolean bit_anagram_check ( long a ) { return ( Integer . bitCount ( ( int ) a ) == ( ULL_SIZE > > 1 ) ) ; } public static void main ( String [ ] args ) { long a = 4294967295L ; System . out . println ( bit_anagram_check ( a ) ) ; } }",
            "python_code": "ULL_SIZE = 64 NEWLINE def bit_anagram_check ( a ) : NEWLINE INDENT return ( bin ( a ) . count ( \"1\" ) == ( ULL_SIZE >> 1 ) ) NEWLINE DEDENT a = 4294967295 NEWLINE print ( int ( bit_anagram_check ( a ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_609_A_2911",
            "java_code": "import java . util . * ; public class USBDrive_609A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ;  int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; }  Arrays . sort ( a ) ; int count = 0 , i = n - 1 ; while ( m > 0 ) { m -= a [ i ] ; i -- ; count ++ ; } System . out . println ( count ) ;   } }",
            "python_code": "ls = [ ] sum1 = 0 lis = [ ] n = int ( input ( ) ) m = int ( input ( ) ) for i in range ( n ) : ls . append ( int ( input ( ) ) ) ls . sort ( ) for i in ls [ : : - 1 ] : sum1 += i lis . append ( i ) if sum1 >= m : breakprint ( len ( lis ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_913_B_2912",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ; public class B { public static void main ( String [ ] args ) throws Exception { BufferedReader bf = new BufferedReader ( new InputStreamReader ( System . in ) ) ;",
            "python_code": "n = int ( input ( ) ) d = { i : [ ] for i in range ( 1 , n + 1 ) } for i in range ( 2 , n + 1 ) : d [ int ( input ( ) ) ] . append ( i ) for i in d : if d [ i ] : temp = 0 for j in d [ i ] : if len ( d [ j ] ) == 0 : temp += 1 if temp < 3 : print ( \"No\" ) exit ( ) print ( \"Yes\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1368_A_2913",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Collections ; import java . util . StringTokenizer ;  public class A { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; int t = fs . nextInt ( ) ; while ( t -- > 0 ) { int a = fs . nextInt ( ) ; int b = fs . nextInt ( ) ; int n = fs . nextInt ( ) ;",
            "python_code": "t = int ( input ( ) )  for x in range ( t ) : a , b , n = map ( int , input ( ) . split ( ) )  if a > b : b , a = a , b  operation = 0 while a <= n and b <= n : a += b a , b = b , a operation += 1  print ( operation ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1326_A_2914",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) if n == 1 : print ( - 1 ) else : res = [ 3 ] * ( n - 1 ) res . insert ( 0 , 2 ) print ( * res , sep = '' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3099_A_2915",
            "java_code": "import java . io . * ; class GFG { static int numofstring ( int n , int m ) { if ( n == 1 ) return m ; if ( n == 2 ) return m * ( m - 1 ) ; return m * ( m - 1 ) * ( int ) Math . pow ( m - 2 , n - 2 ) ; } public static void main ( String [ ] args ) { int n = 2 , m = 3 ; System . out . println ( numofstring ( n , m ) ) ; } }",
            "python_code": "def numofstring ( n , m ) : NEWLINE INDENT if n == 1 : NEWLINE INDENTINDENT return m NEWLINE DEDENT if n == 2 : NEWLINE INDENTINDENT return m * ( m - 1 ) NEWLINE DEDENT return m * ( m - 1 ) * pow ( m - 2 , n - 2 ) NEWLINE DEDENT n = 2 NEWLINE m = 3 NEWLINE print ( numofstring ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3319_A_2916",
            "java_code": "class GFG { static long cal_minimum_time ( long X ) { long t = 0 ; long sum = 0 ; while ( sum < X ) { t ++ ; sum = sum + t ; } return t ; } public static void main ( String [ ] args ) { long n = 6 ; long ans = cal_minimum_time ( n ) ; System . out . println ( \"The minimum time required is : \" + ans ) ; } }",
            "python_code": "def cal_minimum_time ( X ) : NEWLINE INDENT t = 0 NEWLINE sum = 0 NEWLINE while ( sum < X ) : NEWLINE INDENTINDENT t = t + 1 NEWLINE sum = sum + t ; NEWLINE DEDENT return t ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 6 NEWLINE ans = cal_minimum_time ( n ) NEWLINE print ( \"The minimum time required is :\" , ans ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_297_A_2917",
            "java_code": "a = input ( ) b = input ( ) x = a . count ( '1' ) x = x + x % 2 x -= b . count ( '1' ) print ( \"NO\" if x < 0 else \"YES\" )",
            "python_code": "a = input ( ) b = input ( ) x = a . count ( '1' ) x = x + x % 2 x -= b . count ( '1' ) print ( \"NO\" if x < 0 else \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_884_A_2918",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long t = sc . nextLong ( ) ; long [ ] arr = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextLong ( ) ; }",
            "python_code": "from sys import stdininput = stdin . readline  n , t = [ int ( x ) for x in input ( ) . split ( ) ] a = [ int ( x ) for x in input ( ) . split ( ) ] for i in range ( n ) : t -= 86400 - a [ i ] if t <= 0 : print ( i + 1 ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4619_A_2919",
            "java_code": "public class GFG { static int countFibs ( int low , int high ) { int f1 = 0 , f2 = 1 , f3 = 1 ; int result = 0 ; while ( f1 <= high ) { if ( f1 >= low ) result ++ ; f1 = f2 ; f2 = f3 ; f3 = f1 + f2 ; } return result ; } public static void main ( String args [ ] ) { int low = 10 , high = 100 ; System . out . println ( \"Count of Fibonacci Numbers is \" + countFibs ( low , high ) ) ; } }",
            "python_code": "def countFibs ( low , high ) : NEWLINE INDENT f1 , f2 , f3 = 0 , 1 , 1 NEWLINE result = 0 NEWLINE while ( f1 <= high ) : NEWLINE INDENTINDENT if ( f1 >= low ) : NEWLINE INDENTINDENTINDENT result += 1 NEWLINE DEDENT f1 = f2 NEWLINE f2 = f3 NEWLINE f3 = f1 + f2 NEWLINE DEDENT return result NEWLINE DEDENT low , high = 10 , 100 NEWLINE print ( \"Count of Fibonacci Numbers is\" , countFibs ( low , high ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4850_A_2920",
            "java_code": "import java . io . * ; class GFG { static long hexadecagonalNum ( long n ) { return ( ( 14 * n * n ) - 12 * n ) / 2 ; } public static void main ( String [ ] args ) { long n = 5 ; System . out . println ( n + \"th \" + \"Hexadecagonal number : \" + hexadecagonalNum ( n ) ) ; n = 9 ; System . out . println ( n + \"th \" + \"Hexadecagonal number : \" + hexadecagonalNum ( n ) ) ; } }",
            "python_code": "def hexadecagonalNum ( n ) : NEWLINE INDENT return ( ( 14 * n * n ) - 12 * n ) // 2 NEWLINE DEDENT n = 5 NEWLINE print ( \"%sth Hexadecagonal number : \" % n , hexadecagonalNum ( n ) ) NEWLINE n = 9 NEWLINE print ( \"%sth Hexadecagonal number : \" % n , hexadecagonalNum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1060_A_2921",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) s = input ( )  m = s . count ( \"8\" ) n  if m == 0 or n < 11 : print ( 0 )  else : lo , hi = 1 , m while lo <= hi : mid = ( lo + hi ) // 2 if mid * 10 <= n - mid : lo = mid + 1 else : hi = mid - 1 print ( hi )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4415_A_2922",
            "java_code": "import java . util . * ; class solution { static int calculateSum ( int n ) { return ( ( int ) Math . pow ( 10 , n + 1 ) * ( 9 * n - 1 ) + 10 ) / ( int ) Math . pow ( 9 , 3 ) - n * ( n + 1 ) / 18 ; } public static void main ( String ar [ ] ) { int n = 3 ; System . out . println ( \"Sum= \" + calculateSum ( n ) ) ; } }",
            "python_code": "def solve_sum ( n ) : NEWLINE INDENT return ( pow ( 10 , n + 1 ) * ( 9 * n - 1 ) + 10 ) / pow ( 9 , 3 ) - n * ( n + 1 ) / 18 NEWLINE DEDENT n = 3 NEWLINE print ( int ( solve_sum ( n ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1648_A_2923",
            "java_code": "import java . util . * ; class GFG { static int count ( int n ) { if ( n == 0 ) return 1 ; if ( n == 1 ) return 1 ; else return ( n * count ( n - 1 ) ) + ( ( n - 1 ) * count ( n - 2 ) ) ; } public static void main ( String [ ] args ) { int A [ ] = { 1 , 2 , 3 , 9 } ; int n = 4 ; System . out . println ( count ( n - 1 ) ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if n == 1 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( n * count ( n - 1 ) ) + ( ( n - 1 ) * count ( n - 2 ) ) NEWLINE DEDENT DEDENT A = [ 1 , 2 , 3 , 9 ] NEWLINE print ( count ( len ( A ) - 1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1242_A_2924",
            "java_code": "import java . io . * ; class GFG { static float rhombusarea ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; return ( l * b ) / 2 ; } public static void main ( String [ ] args ) { float l = 16 , b = 6 ; System . out . println ( rhombusarea ( l , b ) ) ; } }",
            "python_code": "def rhombusarea ( l , b ) : NEWLINE INDENT if ( l < 0 or b < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT return ( l * b ) / 2 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT l = 16 NEWLINE b = 6 NEWLINE print ( rhombusarea ( l , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_62_A_2925",
            "java_code": "public class GFG { public static int find_value ( int a [ ] , int n , int k ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } return sum % k ; } public static void main ( String [ ] args ) { int n = 5 , k = 3 ; int a [ ] = { 12 , 4 , 13 , 0 , 5 } ; System . out . println ( find_value ( a , n , k ) ) ; } }",
            "python_code": "def find_value ( a , n , k ) : NEWLINE INDENT sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT sum += a [ i ] NEWLINE DEDENT return sum % k NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , k = 5 , 3 ; NEWLINE a = [ 12 , 4 , 13 , 0 , 5 ] ; NEWLINE print ( find_value ( a , n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1171_A_2926",
            "java_code": "import java . lang . * ; class GFG { static boolean isDivBy9 ( int n ) { if ( n == 0 || n == 9 ) return true ; if ( n < 9 ) return false ; return isDivBy9 ( ( int ) ( n > > 3 ) - ( int ) ( n & 7 ) ) ; } public static void main ( String arg [ ] ) { for ( int i = 0 ; i < 100 ; i ++ ) if ( isDivBy9 ( i ) ) System . out . print ( i + \" \" ) ; } }",
            "python_code": "def isDivBy9 ( n ) : NEWLINE INDENT if ( n == 0 or n == 9 ) : NEWLINE INDENTINDENT return True NEWLINE DEDENT if ( n < 9 ) : NEWLINE INDENTINDENT return False NEWLINE DEDENT return isDivBy9 ( ( int ) ( n >> 3 ) - ( int ) ( n & 7 ) ) NEWLINE DEDENT for i in range ( 100 ) : NEWLINE INDENT if ( isDivBy9 ( i ) ) : NEWLINE INDENTINDENT print ( i , \" \" , end = \"\" ) NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_231_A_2927",
            "java_code": "import java . util . * ;  public final class c_231A { public static void main ( String [ ] Args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; s . nextLine ( ) ; int ans = 0 ; while ( n > 0 ) { int sum = s . nextInt ( ) ; sum += s . nextInt ( ) ; sum += s . nextInt ( ) ; s . nextLine ( ) ; if ( sum >= 2 ) { ans ++ ; } n -- ; } System . out . println ( ans ) ; } }",
            "python_code": "t = int ( input ( ) ) count = 0 for i in range ( t ) : x , y , z = map ( int , input ( ) . split ( ) ) sum = x + y + z if sum >= 2 : count += 1 print ( count )                        NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_460_B_2928",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;",
            "python_code": "a , b , c = map ( int , input ( ) . split ( \" \" ) )   ans = [ ] for s in range ( 1 , 81 ) : x = b * s ** a + c if x < 1 or x >= 10 ** 9 : continue z = len ( str ( x ) ) d = 0 for i in range ( z ) : d += int ( str ( x ) [ i ] ) if d == s : ans . append ( x )  print ( len ( ans ) ) for i in range ( len ( ans ) ) : print ( ans [ i ] , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_475_B_2929",
            "java_code": "import java . util . * ; import java . io . * ; import java . lang . * ;   public class febchal { static int mod = 10000_00007 ; ",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1130_B_2930",
            "java_code": " import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  ",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) k = [ ] for j in range ( n ) : k . append ( [ ] ) for i in range ( 2 * n ) : k [ a [ i ] - 1 ] . append ( i ) ans = k [ 0 ] [ 0 ] + k [ 0 ] [ 1 ] for i in range ( n - 1 ) : ans += abs ( k [ i ] [ 0 ] - k [ i + 1 ] [ 0 ] ) + abs ( k [ i ] [ 1 ] - k [ i + 1 ] [ 1 ] ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2598_A_2931",
            "java_code": "public class Main { static int findSum ( int n ) { int sum = 0 ; for ( int i = 1 ; 1 << i < n ; i ++ ) { for ( int j = 0 ; j < i ; j ++ ) { int num = ( 1 << i ) + ( 1 << j ) ; if ( num <= n ) sum += num ; } } return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( findSum ( n ) ) ; } }",
            "python_code": "def findSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE i = 1 NEWLINE while ( ( 1 << i ) < n ) : NEWLINE INDENTINDENT for j in range ( 0 , i ) : NEWLINE INDENTINDENTINDENT num = ( 1 << i ) + ( 1 << j ) NEWLINE if ( num <= n ) : NEWLINE INDENTINDENTINDENTINDENT sum += num NEWLINE DEDENT DEDENT i += 1 NEWLINE DEDENT return sum NEWLINE DEDENT n = 10 NEWLINE print ( findSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3514_A_2932",
            "java_code": "class GFG { static long factorial ( int n ) { long res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { res *= i ; } return res ; } static void printNComposite ( int n ) { long fact = factorial ( n + 1 ) ; for ( int i = 2 ; i <= n + 1 ; ++ i ) { System . out . print ( fact + i + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 4 ; printNComposite ( n ) ; } }",
            "python_code": "def factorial ( n ) : NEWLINE INDENT res = 1 ; NEWLINE for i in range ( 2 , n + 1 ) : NEWLINE INDENTINDENT res *= i ; NEWLINE DEDENT return res ; NEWLINE DEDENT def printNComposite ( n ) : NEWLINE INDENT fact = factorial ( n + 1 ) ; NEWLINE for i in range ( 2 , n + 2 ) : NEWLINE INDENTINDENT print ( fact + i , end = \" \" ) ; NEWLINE DEDENT DEDENT n = 4 ; NEWLINE printNComposite ( n ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_435_A_2933",
            "java_code": "import java . util . Scanner ;  public class QueueBusStop { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , m = in . nextInt ( ) , i , o = 1 , c = m ; for ( i = 0 ; i < n ; i ++ ) {  int a = in . nextInt ( ) ; if ( a <= c ) { c -= a ; } else { o ++ ; c = m - a ; } } in . close ( ) ; System . out . println ( o ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 temp = mfor i in range ( len ( arr ) ) : if temp >= arr [ i ] : temp -= arr [ i ] else : ans += 1 temp = m temp -= arr [ i ] print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_557_B_2934",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;",
            "python_code": "n , w = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) g = a [ 0 ] b = a [ n ] if ( g * 2 ) <= b : b = ( g * 2 ) elif ( g * 2 ) > b : g = b / 2 ans = ( g * n ) + ( b * n ) if ans > w : ans = wprint ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1437_A_2935",
            "java_code": "import java . io . * ; class GFG { static int makeOdd ( int n ) { if ( n % 2 != 0 ) return 1 ; int i ; for ( i = 2 ; i <= n ; i ++ ) if ( ( n % i == 0 ) && ( ( n / i ) % 2 == 1 ) ) break ; return i ; } public static void main ( String [ ] args ) { int n = 36 ; int res = makeOdd ( n ) ; System . out . println ( res ) ; } }",
            "python_code": "def makeOdd ( n ) : NEWLINE INDENT if n % 2 != 0 : NEWLINE INDENTINDENT return 1 ; NEWLINE DEDENT for i in range ( 2 , n ) : NEWLINE INDENTINDENT if ( n % i == 0 and ( int ) ( n / i ) % 2 == 1 ) : NEWLINE INDENTINDENTINDENT return i ; NEWLINE DEDENT DEDENT DEDENT n = 36 ; NEWLINE print ( makeOdd ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_620_A_2936",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class A620 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "x1 , y1 = map ( int , input ( ) . split ( ) ) x2 , y2 = map ( int , input ( ) . split ( ) )  print ( max ( abs ( x1 - x2 ) , abs ( y1 - y2 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_745_A_2937",
            "java_code": "import java . util . Scanner ;  public class HongcowCyclicShift { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) , t = s + s ;  in . close ( ) ; System . out . println ( t . indexOf ( s , 1 ) ) ; } }",
            "python_code": "s = input ( ) ; print ( len ( { s [ i : ] + s [ : i ] for i in range ( len ( s ) ) } ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3119_A_2938",
            "java_code": "class geeks { public static int firstSetBit ( int n ) { int x = n & ( n - 1 ) ; return ( n ^ x ) ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( firstSetBit ( n ) ) ; } }",
            "python_code": "def firstSetBit ( n ) : NEWLINE INDENT x = n & ( n - 1 ) NEWLINE return ( n ^ x ) NEWLINE DEDENT n = 12 NEWLINE print ( firstSetBit ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_844_A_2939",
            "java_code": "import java . io . * ; import java . util . * ;  public class Main {  public static void main ( String [ ] args ) throws IOException { String s = sc . nextLine ( ) ; int k = sc . nextInt ( ) ; if ( k > s . length ( ) ) pw . println ( \"impossible\" ) ; else {",
            "python_code": "s = input ( ) k = int ( input ( ) ) arr = set ( list ( s ) )  x = len ( arr )   if ( x >= k ) : print ( 0 ) else : k -= x rem = len ( s ) - x  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_A_2940",
            "java_code": "import java . util . * ; import java . io . * ;  public class HelloWorld {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; double n1 = ( double ) scanner . nextInt ( ) ; int n2 = scanner . nextInt ( ) ; int n3 = scanner . nextInt ( ) ; int n4 = scanner . nextInt ( ) ; double ans = ( n2 - n1 ) / ( n3 + n4 ) ; System . out . println ( ans ) ; } }",
            "python_code": "d , l , v1 , v2 = list ( map ( int , input ( ) . split ( ) ) ) print ( ( l - d ) / ( v1 + v2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_A_2941",
            "java_code": "import java . util . Scanner ;   public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( Math . pow ( 2 , i ) > n ) { System . out . println ( i ) ; break ; } } }  }",
            "python_code": "a = int ( input ( ) )  n = acount = 0 arr = [ ]  while 1 : if 2 ** count <= a : arr . append ( 2 ** count ) n -= 2 ** count else : break if n <= 0 : break  count += 1  if n > 0 : arr . append ( n )  print ( len ( arr ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1316_B_2942",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ;  public class Practice  { static FastReader sc = new FastReader ( ) ; static int dx [ ] = { - 1 , 0 , 1 , 0 } ; static int dy [ ] = { 0 , 1 , 0 , - 1 } ; static int k ; public static void main ( String [ ] args ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) s = input ( ) k = 1 z = '' a = [ s ] b = [ ] while k < n : z = s [ k : n ] if n % 2 == k % 2 : z += s [ 0 : k ] else : z += s [ 0 : k ] [ : : - 1 ] a . append ( z ) b . append ( k ) k += 1 print ( min ( a ) ) try : print ( b [ a . index ( min ( a ) ) ] ) except IndexError : print ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2523_A_2943",
            "java_code": "class GFG { static int findMin ( int arr [ ] , int n ) { int ans = 1 ; for ( int i = 0 ; i < n ; i ++ ) { int j = i + 1 ; while ( j < n && arr [ j ] >= arr [ j - 1 ] ) j ++ ; ans = Math . max ( ans , j - i ) ; i = j - 1 ; } return n - ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 2 , 1 } ; int n = arr . length ; System . out . println ( findMin ( arr , n ) ) ; } }",
            "python_code": "def findMin ( arr , n ) : NEWLINE INDENT ans = 1 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT j = i + 1 NEWLINE while ( j < n and arr [ j ] >= arr [ j - 1 ] ) : NEWLINE INDENTINDENTINDENT j += 1 NEWLINE DEDENT ans = max ( ans , j - i ) NEWLINE i = j - 1 NEWLINE DEDENT return n - ans NEWLINE DEDENT arr = [ 3 , 2 , 1 ] NEWLINE n = len ( arr ) NEWLINE print ( findMin ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_327_B_2944",
            "java_code": "import java . util . Scanner ;  public class B327 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int c = n ; for ( int i = 0 ; i < n ; i ++ ) { System . out . print ( ++ c + ( i == n - 1 ? \"\" : \" \" ) ) ; } } }",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : print ( ( 2 * n ) + i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_791_A_2945",
            "java_code": "import java . util . Scanner ; public class MyClass { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; int i = 0 ; while ( a <= b ) { a = a * 3 ; b = b * 2 ; i ++ ; } System . out . println ( i ) ; } }",
            "python_code": "s , l = map ( int , input ( ) . split ( ) ) i = 0 while ( s <= l ) : s = s * 3 l = l * 2 i = i + 1 print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3530_A_2946",
            "java_code": "import java . io . * ; class GFG { static double trianglearea ( double a ) { if ( a < 0 ) return - 1 ; double area = ( 3 * Math . sqrt ( 3 ) * Math . pow ( a , 2 ) ) / 4 ; return area ; } public static void main ( String [ ] args ) { double a = 6 ; System . out . println ( trianglearea ( a ) ) ; } }",
            "python_code": "import math NEWLINE def trianglearea ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 ; NEWLINE DEDENT area = ( 3 * math . sqrt ( 3 ) * math . pow ( a , 2 ) ) / 4 ; NEWLINE return area ; NEWLINE DEDENT a = 6 ; NEWLINE print ( trianglearea ( a ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_417_A_2947",
            "java_code": "import java . io . * ; import java . lang . reflect . Array ; import java . util . * ; public class icpc { public static void main ( String [ ] args ) throws IOException { Reader in = new Reader ( ) ;",
            "python_code": "c , d = list ( map ( int , input ( ) . split ( ) ) ) n , m = list ( map ( int , input ( ) . split ( ) ) ) k = int ( input ( ) ) t = max ( ( m * n ) - k , 0 ) p = min ( c , n * d ) ans = p * ( t // n ) rem = t % nans = ans + min ( c , rem * d ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1573_A_2948",
            "java_code": "import java . io . * ; import java . lang . * ; class GfG { public static int findLCM ( int a , int b ) { int lar = Math . max ( a , b ) ; int small = Math . min ( a , b ) ; for ( int i = lar ; ; i += lar ) { if ( i % small == 0 ) return i ; } } public static void main ( String [ ] argc ) { int a = 5 , b = 7 ; System . out . println ( \"LCM of \" + a + \" and \" + b + \" is \" + findLCM ( a , b ) ) ; } }",
            "python_code": "import sys NEWLINE def findLCM ( a , b ) : NEWLINE INDENT lar = max ( a , b ) NEWLINE small = min ( a , b ) NEWLINE i = lar NEWLINE while ( 1 ) : NEWLINE INDENTINDENT if ( i % small == 0 ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT i += lar NEWLINE DEDENT DEDENT a = 5 NEWLINE b = 7 NEWLINE print ( \"LCM of \" , a , \" and \" , b , \" is \" , findLCM ( a , b ) , sep = \"\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_266_A_2949",
            "java_code": "import java . util . * ;   public class Main {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String str = sc . next ( ) ; int c = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( str . charAt ( i ) == str . charAt ( i + 1 ) ) { c ++ ; } } System . out . println ( c ) ; } } ",
            "python_code": "n = int ( input ( ) ) s = input ( ) ans = 0 c = 0 n = len ( s ) for i in range ( n - 1 ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_576_A_2950",
            "java_code": "class GFG { static void findWinner ( int n ) { if ( ( n - 1 ) % 6 == 0 ) { System . out . println ( \"Second Player wins the game\" ) ; } else { System . out . println ( \"First Player wins the game\" ) ; } } public static void main ( String [ ] args ) { int n = 7 ; findWinner ( n ) ; } }",
            "python_code": "def findWinner ( n ) : NEWLINE INDENT if ( ( n - 1 ) % 6 == 0 ) : NEWLINE INDENTINDENT print ( \"Second Player wins the game\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"First Player wins the game\" ) ; NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 7 ; NEWLINE findWinner ( n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2792_A_2951",
            "java_code": "public class GFG { static int stringToInt ( String str ) { if ( str . length ( ) == 1 ) return ( str . charAt ( 0 ) - '0' ) ; double y = stringToInt ( str . substring ( 1 ) ) ; double x = str . charAt ( 0 ) - '0' ; x = x * Math . pow ( 10 , str . length ( ) - 1 ) + y ; return ( int ) ( x ) ; } public static void main ( String [ ] args ) { String str = \"1235\" ; System . out . print ( stringToInt ( str ) ) ; } }",
            "python_code": "def stringToInt ( str ) : NEWLINE INDENT if ( len ( str ) == 1 ) : NEWLINE INDENTINDENT return ord ( str [ 0 ] ) - ord ( '0' ) ; NEWLINE DEDENT y = stringToInt ( str [ 1 : ] ) ; NEWLINE x = ord ( str [ 0 ] ) - ord ( '0' ) ; NEWLINE x = x * ( 10 ** ( len ( str ) - 1 ) ) + y ; NEWLINE return int ( x ) ; NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT str = \"1235\" ; NEWLINE print ( stringToInt ( str ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_501_A_2952",
            "java_code": "import java . util . * ; public class Contest {  public static void main ( String [ ] args ) {",
            "python_code": "a , b , c , d = map ( int , input ( ) . split ( ) )  misha = max ( 3 * a / 10 , a - a / 250 * c ) vasya = max ( 3 * b / 10 , b - b / 250 * d )  if misha > vasya : print ( \"Misha\" ) elif vasya > misha : print ( \"Vasya\" ) else : print ( \"Tie\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_442_A_2953",
            "java_code": "class GFG { static int check ( int n , int m ) { if ( m % n == 0 ) { System . out . print ( \"YES\" ) ; } else { System . out . print ( \"NO\" ) ; } return 0 ; } public static void main ( String [ ] args ) { int n = 5 ; int m = 10 ; check ( n , m ) ; } }",
            "python_code": "def check ( n , m ) : NEWLINE INDENT if ( m % n == 0 ) : NEWLINE INDENTINDENT print ( \"YES\" ) NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"NO\" ) NEWLINE DEDENT DEDENT n = 5 NEWLINE m = 10 NEWLINE check ( n , m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1398_A_2954",
            "java_code": "import java . util . * ; public class BadTriangle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int c = 0 , n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; if ( a [ 0 ] + a [ 1 ] <= a [ n - 1 ] ) System . out . println ( 1 + \" \" + 2 + \" \" + n ) ; else System . out . println ( - 1 ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : NEWLINE INDENT n = int ( input ( ) ) NEWLINE a = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE print ( * ( [ 1 , 2 , n ] , [ - 1 ] ) [ a [ 0 ] + a [ 1 ] > a [ n - 1 ] ] ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_617_B_2955",
            "java_code": "import java . util . * ; public class poi { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = 1 ; int i , j ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; }",
            "python_code": "input ( ) c = input ( ) . replace ( ' ' , '' ) if '1' in c : count_zeros = 0 sum = 1 first = c . index ( '1' ) for i in range ( first , len ( c ) ) : if c [ i ] is '1' : sum = sum * ( count_zeros + 1 ) count_zeros = 0 continue count_zeros += 1 print ( sum ) else : print ( 0 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3464_A_2956",
            "java_code": "class GFG { static int minLettersNeeded ( int n ) { if ( n % 26 == 0 ) return ( n / 26 ) ; else return ( ( n / 26 ) + 1 ) ; } public static void main ( String args [ ] ) { int n = 52 ; System . out . print ( minLettersNeeded ( n ) ) ; } }",
            "python_code": "def minLettersNeeded ( n ) : NEWLINE INDENT if n % 26 == 0 : NEWLINE INDENTINDENT return ( n // 26 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( ( n // 26 ) + 1 ) NEWLINE DEDENT DEDENT n = 52 NEWLINE print ( minLettersNeeded ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_233_A_2957",
            "java_code": "import java . util . Scanner ;  public class A233 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; if ( n % 2 == 1 ) System . out . println ( - 1 ) ; else for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) { System . out . print ( ( i + 1 ) + \" \" ) ; } else { System . out . print ( ( i - 1 ) + \" \" ) ; } } } }",
            "python_code": "n = int ( input ( ) ) if n % 2 : print ( - 1 ) else : print ( * list ( range ( n , 0 , - 1 ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_B_2958",
            "java_code": "import java . util . * ; import java . math . * ; public class Jumps { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int runs = sc . nextInt ( ) ; while ( runs -- > 0 ) { int x = sc . nextInt ( ) ; int cur = 0 ; int i = 1 ; while ( cur < x ) { cur += i ++ ; } if ( cur == x + 1 ) System . out . println ( i ) ; else System . out . println ( i - 1 ) ; }  } }",
            "python_code": "import sys  NEWLINE def answer ( x ) : test = 0 NEWLINE INDENT pass NEWLINE DEDENT k = 0 NEWLINE while test < x : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2422_A_2959",
            "java_code": "class GFG { static void countPermutations ( int N , int B ) { int x = ( int ) Math . pow ( B , N ) ; int y = ( int ) Math . pow ( B , N - 1 ) ; System . out . println ( x - y ) ; } public static void main ( String [ ] args ) { int N = 6 ; int B = 4 ; countPermutations ( N , B ) ; } }",
            "python_code": "def countPermutations ( N , B ) : NEWLINE INDENT x = B ** N NEWLINE y = B ** ( N - 1 ) NEWLINE print ( x - y ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N , B = 6 , 4 NEWLINE countPermutations ( N , B ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1428_A_2960",
            "java_code": "import java . util . Scanner ;  public class Problem28 {  public static void main ( String [ ] args ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : x1 , y1 , x2 , y2 = map ( int , input ( ) . split ( ) )  if x1 == x2 : print ( abs ( y2 - y1 ) )  elif y1 == y2 : print ( abs ( x2 - x1 ) )  else : print ( abs ( x2 - x1 ) + 2 + abs ( y2 - y1 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_171_A_2961",
            "java_code": "import java . util . Scanner ;  public class A171 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = Integer . parseInt ( new StringBuilder ( in . next ( ) ) . reverse ( ) . toString ( ) ) ; System . out . println ( a + b ) ; }  }",
            "python_code": "n = input ( ) m = n . split ( ) [ 1 ] n = n . split ( ) [ 0 ] i , j = len ( n ) , len ( m ) k = max ( i , j ) t = min ( i , j ) s = 0 for i in range ( k ) : if i < t : s += ( int ( n [ - i - 1 ] ) + int ( m [ i ] ) ) * 10 ** i elif len ( n ) > len ( m ) : s += int ( n [ - i - 1 ] ) * 10 ** i else : s += int ( m [ i ] ) * 10 ** iprint ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_777_A_2962",
            "java_code": "import java . util . Scanner ;  public class ShellGame { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) % 6 , x = in . nextInt ( ) ; in . close ( ) ;  String [ ] a = { \"012\" , \"102\" , \"120\" , \"210\" , \"201\" , \"021\" } ; System . out . println ( a [ n ] . charAt ( x ) ) ; } }",
            "python_code": "n = int ( input ( ) ) % 6 x = int ( input ( ) ) p = [ \"012\" , \"102\" , \"120\" , \"210\" , \"201\" , \"021\" ] print ( p [ n ] [ x ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_183_A_2963",
            "java_code": "class IsDivisible { static boolean check ( String str ) { int n = str . length ( ) ; int digitSum = 0 ; for ( int i = 0 ; i < n ; i ++ ) digitSum += ( str . charAt ( i ) - '0' ) ; return ( digitSum % 9 == 0 ) ; } public static void main ( String [ ] args ) { String str = \"99333\" ; if ( check ( str ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "def check ( st ) : NEWLINE INDENT n = len ( st ) NEWLINE digitSum = 0 NEWLINE for i in range ( 0 , n ) : NEWLINE INDENTINDENT digitSum = digitSum + ( int ) ( st [ i ] ) NEWLINE DEDENT return ( digitSum % 9 == 0 ) NEWLINE DEDENT st = \"99333\" NEWLINE if ( check ( st ) ) : NEWLINE INDENT print ( \"Yes\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"No\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1455_A_2964",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {",
            "python_code": "num = int ( input ( ) ) NEWLINE for _ in range ( num ) : string = str ( input ( ) ) NEWLINE print ( len ( string ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_58_B_2965",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; static HashSet < Long > list = new HashSet < > ( ) ; public static void main ( String [ ] args ) {",
            "python_code": "n = int ( input ( ) ) NEWLINE x = [ ] NEWLINE i = nwhile NEWLINE i > 0 : NEWLINE if n % i == 0 : x . append ( i ) NEWLINE n = i NEWLINE i = i - 1 NEWLINE for i in x : print ( i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4611_A_2966",
            "java_code": "class Gfg { static int cassini ( int n ) { return ( n & 1 ) != 0 ? - 1 : 1 ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( cassini ( n ) ) ; } }",
            "python_code": "def cassini ( n ) : NEWLINE INDENT return - 1 if ( n & 1 ) else 1 NEWLINE DEDENT n = 5 NEWLINE print ( cassini ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_244_A_2967",
            "java_code": "import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int k = input . nextInt ( ) ; int a [ ] = new int [ n * k ] ; for ( int i = 0 ; i < n * k ; i ++ ) { a [ i ] = i + 1 ; } String ans [ ] = new String [ k ] ;",
            "python_code": "n , k = map ( int , input ( ) . split ( ) )  r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = r ( )  num = 1  for i in arr : print ( i , end = \" \" ) lim = n - 1 while lim : if num not in arr : print ( num , end = \" \" )  lim -= 1 num += 1   print ( )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4398_A_2968",
            "java_code": "import java . io . * ; class GFG { static long findTriangularNumber ( int n ) { return ( n * ( n + 1 ) ) / 2 ; } static void printSeries ( int n ) { long prev = 0 ; long curr ; for ( int i = 1 ; i <= n ; i ++ ) { curr = findTriangularNumber ( i ) ; curr = curr + prev ; System . out . print ( curr + \" \" ) ; prev = curr ; } } public static void main ( String [ ] args ) { int n = 10 ; printSeries ( n ) ; } }",
            "python_code": "def findTriangularNumber ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) ) / 2 NEWLINE DEDENT def printSeries ( n ) : NEWLINE INDENT prev = 0 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT curr = findTriangularNumber ( i ) NEWLINE curr = int ( curr + prev ) NEWLINE print ( curr , end = ' ' ) NEWLINE prev = curr NEWLINE DEDENT DEDENT n = 10 NEWLINE printSeries ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1368_A_2969",
            "java_code": "import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t , a , b , n ; t = scan . nextInt ( ) ; while ( t -- > 0 ) { a = scan . nextInt ( ) ; b = scan . nextInt ( ) ; n = scan . nextInt ( ) ; int ctr = 0 ; while ( a <= n && b <= n ) { if ( a <= b ) a += b ; else b += a ; ++ ctr ; } System . out . println ( ctr ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b , n = [ int ( x ) for x in input ( ) . split ( ) ] i = 0 while a <= n and b <= n : if a < b : a += b else : b += a i += 1 print ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1051_B_2970",
            "java_code": "import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; long a = scn . nextLong ( ) ; long b = scn . nextLong ( ) ; System . out . println ( \"YES\" ) ; for ( long i = a ; i <= b ; i += 2 ) { System . out . println ( i + \" \" + ( i + 1 ) ) ; } } }",
            "python_code": "l , r = list ( map ( int , input ( ) . split ( ) ) )  a = [ ] i = lwhile i <= r - 1 : a . append ( [ i , i + 1 ] ) i += 2  if a : print ( 'YES' ) for i in a : print ( f'{i[0]} {i[1]}' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1175_B_2971",
            "java_code": "import java . util . * ; import java . io . * ; public class EdA { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {",
            "python_code": "from collections import defaultdict , OrderedDict , Counterfrom sys import stdin , stdoutfrom bisect import bisect_left , bisect_right NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4203_A_2972",
            "java_code": "class GFG { static int getPassingCars ( int A [ ] , int n ) { int countOne = 0 , result = 0 ; while ( n >= 1 ) { if ( A [ n - 1 ] == 1 ) countOne ++ ; else result += countOne ; n -- ; } return result ; } public static void main ( String [ ] args ) { int A [ ] = { 0 , 1 , 0 , 1 , 1 } ; int n = A . length ; System . out . println ( getPassingCars ( A , n ) ) ; } }",
            "python_code": "def getPassingCars ( A , n ) : NEWLINE INDENT countOne = 0 ; result = 0 NEWLINE while n >= 1 : NEWLINE INDENTINDENT if A [ n - 1 ] == 1 : NEWLINE INDENTINDENTINDENT countOne += 1 NEWLINE DEDENT else : NEWLINE INDENTINDENTINDENT result += countOne NEWLINE DEDENT n -= 1 NEWLINE DEDENT return result NEWLINE DEDENT A = [ 0 , 1 , 0 , 1 , 1 ] NEWLINE n = len ( A ) NEWLINE print ( getPassingCars ( A , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_ProjectEuler_p117_A_2973",
            "java_code": "public final class p117 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p117 ( ) . run ( ) ) ; } private static final int LENGTH = 50 ; public String run ( ) { long [ ] ways = new long [ LENGTH + 1 ] ; ways [ 0 ] = 1 ; for ( int n = 1 ; n <= LENGTH ; n ++ ) { for ( int k = 1 ; k <= 4 && k <= n ; k ++ ) ways [ n ] += ways [ n - k ] ; } return Long . toString ( ways [ LENGTH ] ) ; } }",
            "python_code": "def compute ( ) : NEWLINE INDENT LENGTH = 50 NEWLINE ways = [ 1 ] + [ 0 ] * LENGTH NEWLINE for n in range ( 1 , len ( ways ) ) : NEWLINE INDENTINDENT ways [ n ] += sum ( ways [ max ( n - 4 , 0 ) : n ] ) NEWLINE DEDENT return str ( ways [ - 1 ] ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT print ( compute ( ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_365_A_2974",
            "java_code": "import java . util . * ;  public class ICPC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int c = 0 ; process : for ( int i = 1 ; i <= n ; i ++ ) { String [ ] s = sc . next ( ) . split ( \"\" ) ; boolean [ ] ar = new boolean [ k + 1 ] ; for ( String s1 : s ) { int num = Integer . parseInt ( s1 ) ; if ( num > k ) {",
            "python_code": "import mathdef isk ( n , d , k ) : for i in n : if i in d : d [ i ] = 1 for i in range ( k + 1 ) : if str ( i ) in d and d [ str ( i ) ] == 0 : return False return True  n , k = map ( int , input ( ) . split ( ) ) d = { } c = 0 for _ in range ( n ) : s = input ( ) for i in range ( k + 1 ) : d [ str ( i ) ] = 0 if isk ( s , d , k ) : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_618_B_2975",
            "java_code": "import java . io . IOException ; import java . util . * ; public class GuessThePermutation {  public static void main ( String [ ] args ) throws IOException {",
            "python_code": "n = int ( input ( ) ) a = [ list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n ) ] chosen = set ( ) p = [ 0 ] * nfor i in range ( 1 , n + 1 ) : b = - 1 for j in range ( n ) : if not j in chosen and all ( a [ j ] [ k ] <= i for k in range ( n ) ) and all ( a [ k ] [ j ] <= i for k in range ( n ) ) : b = j p [ b ] = i chosen . add ( b ) print ( * p ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_61_A_2976",
            "java_code": "import java . util . Scanner ;   public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . nextLine ( ) ; String b = sc . nextLine ( ) ; char [ ] c = new char [ a . length ( ) ] ; for ( int i = 0 ; i < a . length ( ) ; i ++ ) { if ( a . charAt ( i ) == b . charAt ( i ) ) { c [ i ] = '0' ; } else { c [ i ] = '1' ; } } System . out . println ( c ) ; }  }",
            "python_code": "a = input ( ) NEWLINE b = input ( ) NEWLINE a = [ x for x in a ] NEWLINE b = [ y for y in b ]  x = [ '0' if i1 == i2 else '1' for ( i1 , i2 ) in zip ( a , b ) ] NEWLINE print ( '' . join ( x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4017_A_2977",
            "java_code": "class GFG { static int count ( int n ) { return ( int ) Math . pow ( 2 , n - 1 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( count ( n ) ) ; } }",
            "python_code": "def count ( n ) : NEWLINE INDENT return pow ( 2 , n - 1 ) NEWLINE DEDENT n = 4 NEWLINE print ( count ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1711_A_2978",
            "java_code": "public class GFG { static long countNonDecreasing ( int n ) { int N = 10 ; long count = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { count *= ( N + i - 1 ) ; count /= i ; } return count ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . print ( countNonDecreasing ( n ) ) ; } }",
            "python_code": "def countNonDecreasing ( n ) : NEWLINE INDENT N = 10 NEWLINE count = 1 NEWLINE for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT count = int ( count * ( N + i - 1 ) ) NEWLINE count = int ( count / i ) NEWLINE DEDENT return count NEWLINE DEDENT n = 3 ; NEWLINE print ( countNonDecreasing ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1717_A_2979",
            "java_code": "import java . io . * ; class GFG { static Boolean isPentagonal ( int N ) { double n = ( 1 + Math . sqrt ( 24 * N + 1 ) ) / 6 ; return ( n - ( int ) n ) == 0 ; } public static void main ( String [ ] args ) { int N = 19 ; if ( isPentagonal ( N ) ) System . out . println ( N + \" is pentagonal \" ) ; else System . out . println ( N + \" is not pentagonal\" ) ; } }",
            "python_code": "import math as m NEWLINE def isPentagonal ( n ) : NEWLINE INDENT n = ( 1 + m . sqrt ( 24 * N + 1 ) ) / 6 NEWLINE return ( ( n - int ( n ) ) == 0 ) NEWLINE DEDENT N = 19 NEWLINE if ( isPentagonal ( N ) ) : NEWLINE INDENT print ( N , \" is pentagonal \" ) NEWLINE DEDENT else : NEWLINE INDENT print ( N , \" is not pentagonal\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1793_A_2980",
            "java_code": "class GFG { static int SUM ( int n , int m ) { if ( m == 1 ) return ( n * ( n + 1 ) / 2 ) ; int sum = SUM ( n , m - 1 ) ; return ( sum * ( sum + 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 5 ; int m = 3 ; System . out . println ( \"SUM(\" + n + \", \" + m + \"): \" + SUM ( n , m ) ) ; } }",
            "python_code": "def SUM ( n , m ) : NEWLINE INDENT if ( m == 1 ) : NEWLINE INDENTINDENT return ( n * ( n + 1 ) / 2 ) NEWLINE DEDENT sum = SUM ( n , m - 1 ) NEWLINE return int ( sum * ( sum + 1 ) / 2 ) NEWLINE DEDENT n = 5 NEWLINE m = 3 NEWLINE print ( \"SUM(\" , n , \", \" , m , \"):\" , SUM ( n , m ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_822_A_2981",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {",
            "python_code": "import mathn , m = map ( int , input ( ) . split ( ) ) fac1 = 1 fac2 = 1 i1 = 1 i2 = 1 while ( i1 <= n and i2 <= m ) : fac1 = fac1 * i1 fac2 = fac2 * i2 i1 = i1 + 1 i2 = i2 + 1  print ( math . gcd ( fac1 , fac2 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_801_B_2982",
            "java_code": "import java . io . * ; import java . util . * ;  import static java . lang . Math . * ;  public class ValuedKeys {",
            "python_code": "a = input ( ) b = input ( )  f = True  for i , j in zip ( a , b ) : if j > i : f = False break  if f : print ( b )  else : print ( - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_960_A_2983",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "s = input ( ) n1 = s . count ( 'a' ) n2 = s . count ( 'b' ) n3 = s . count ( 'c' ) n4 = s . count ( 'ab' ) n5 = s . count ( 'ba' ) if ( n1 == n3 or n2 == n3 ) and n4 == 1 and n5 == 0 and s [ - n3 : ] . count ( 'c' ) == n3 : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1073_A_2984",
            "java_code": "import java . util . Scanner ;  public class DiverseSubS { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i ; String s = in . next ( ) , o = \"NO\" ; in . close ( ) ;  for ( i = 0 ; i < n - 1 ; i ++ ) if ( s . charAt ( i ) != s . charAt ( i + 1 ) ) { o = \"YES\\n\" + s . substring ( i , i + 2 ) ; break ; } System . out . println ( o ) ; } }",
            "python_code": "import sysinput = sys . stdin . readline  n = int ( input ( ) ) s = input ( ) for i in range ( n - 1 ) : if s [ i ] != s [ i + 1 ] : print ( \"YES\" ) print ( s [ i ] , s [ i + 1 ] , sep = \"\" ) exit ( ) print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_259_B_2985",
            "java_code": "import java . util . * ; public class MagicSquare {  public static void main ( String [ ] args ) {",
            "python_code": "a , b , c = map ( int , input ( ) . split ( ) ) d , e , f = map ( int , input ( ) . split ( ) ) g , h , i = map ( int , input ( ) . split ( ) )  sum1 = a + b + csum2 = d + e + fsum3 = g + h + ia = ( sum1 + sum2 + sum3 ) // 2 - ( sum1 ) e = ( sum1 + sum2 + sum3 ) // 2 - ( sum2 ) i = ( sum1 + sum2 + sum3 ) // 2 - ( sum3 ) print ( a , b , c ) print ( d , e , f ) print ( g , h , i )      NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4007_A_2986",
            "java_code": "class GFG { static void swap ( int [ ] xp , int [ ] yp ) { xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; } public static void main ( String [ ] args ) { int [ ] x = { 10 } ; swap ( x , x ) ; System . out . println ( \"After swap(&x, &x): x = \" + x [ 0 ] ) ; } }",
            "python_code": "def swap ( xp , yp ) : NEWLINE INDENT xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] NEWLINE yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] NEWLINE xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] NEWLINE DEDENT x = [ 10 ] NEWLINE swap ( x , x ) NEWLINE print ( \"After swap(&x, &x): x = \" , x [ 0 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1183_A_2987",
            "java_code": "class GFG { static int bitwiseAndOdd ( int n ) { int result = 1 ; for ( int i = 3 ; i <= n ; i = i + 2 ) { result = ( result & i ) ; } return result ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( bitwiseAndOdd ( n ) ) ; } }",
            "python_code": "def bitwiseAndOdd ( n ) : NEWLINE INDENT result = 1 ; NEWLINE for i in range ( 3 , n + 1 , 2 ) : NEWLINE INDENTINDENT result = ( result & i ) ; NEWLINE DEDENT return result ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 10 ; NEWLINE print ( bitwiseAndOdd ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_157_B_2988",
            "java_code": "import java . util . * ;  public class Trace_B {  public static void main ( String [ ] args ) {",
            "python_code": "from math import pi  n = int ( input ( ) ) r = lambda : list ( map ( int , input ( ) . split ( ) ) ) arr = r ( ) arr . sort ( reverse = True ) arr . append ( 0 ) ans = 0.0 i = 0 while i < n : ans += pi * ( arr [ i ] ** 2 - arr [ i + 1 ] ** 2 ) i += 2  print ( f\"{ans:.10f}\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_522_A_2989",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . StringTokenizer ;  public class Main { static InputReader in ; static PrintWriter out ; public static void main ( String [ ] args ) throws IOException {",
            "python_code": "d = { 'polycarp' : 1 } for _ in range ( int ( input ( ) ) ) : a , b , c = input ( ) . lower ( ) . split ( ) ; d [ a ] = d [ c ] + 1 print ( max ( d . values ( ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_978_B_2990",
            "java_code": "import java . util . Scanner ;  public class B978 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) , a = 0 , res = 0 ; String file = scanner . next ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( file . charAt ( i ) == 'x' ) { a ++ ; if ( a > 2 ) { res ++ ; } } else { a = 0 ; } } System . out . println ( res ) ; } }",
            "python_code": "n = int ( input ( ) ) s = input ( ) c = 0 for i in range ( n - 2 ) : if s [ i ] == 'x' and s [ i + 1 ] == 'x' and s [ i + 2 ] == 'x' : c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1200_B_2991",
            "java_code": "import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;  import java . util . ArrayList ; import java . util . HashMap ; import java . util . LinkedList ;  ",
            "python_code": "from sys import stdininput = lambda : stdin . readline ( ) from math import ceil , sqrt , gcdfor _ in range ( int ( input ( ) ) ) : n , m , k = map ( int , input ( ) . split ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) flag = 'YES' for i in range ( n - 1 ) : if l [ i + 1 ] > l [ i ] : if l [ i + 1 ] - l [ i ] > k : if m < l [ i + 1 ] - l [ i ] - k : flag = 'NO' break else : m -= ( l [ i + 1 ] - l [ i ] - k ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_432_A_2992",
            "java_code": "import java . util . Scanner ;  public class A432 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int n = scanner . nextInt ( ) , k = scanner . nextInt ( ) , count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int y = scanner . nextInt ( ) ; if ( 5 - y >= k ) { count ++ ; } } System . out . println ( count / 3 ) ; } }",
            "python_code": "s = input ( ) . split ( ' ' ) n = int ( s [ 0 ] ) k = int ( s [ 1 ] ) s = input ( ) . split ( ' ' ) l = len ( s ) count = 0 for i in range ( l ) : if ( k + int ( s [ i ] ) <= 5 ) : count = count + 1  print ( int ( count / 3 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_608_A_2993",
            "java_code": "import java . util . * ; public class Saitama_Destroys_Hotel {  public static void main ( String [ ] args ) {",
            "python_code": "n , s = map ( int , input ( ) . split ( ) ) ans = sfor _ in range ( n ) : f , t = map ( int , input ( ) . split ( ) ) ans = max ( ans , f + t ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1256_A_2994",
            "java_code": "import java . util . * ; public class MyClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int q = sc . nextInt ( ) ; while ( q -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; int k = Math . min ( s / n , a ) ; k = s - k * n ; if ( k <= b ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : L = list ( map ( int , input ( ) . split ( ) ) ) x = L [ - 1 ] y = L [ - 2 ] if ( x // y ) <= L [ 0 ] : if ( x % y ) <= L [ 1 ] : print ( \"YES\" ) else : print ( \"NO\" ) else : if ( y * ( ( x // y ) - L [ 0 ] ) ) + ( x % y ) > L [ 1 ] : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1140_A_2995",
            "java_code": "import java . util . * ; public class c1 { public static void main ( String [ ] args ) { int n ; Scanner reader = new Scanner ( System . in ) ; n = reader . nextInt ( ) ; int [ ] a = new int [ n ] ; int days , max = 0 , i ; for ( i = 0 ; i < n ; ++ i ) { a [ i ] = reader . nextInt ( ) ; } for ( i = days = 0 ; i < n ; ++ i ) { if ( max < a [ i ] ) max = a [ i ] ; if ( max == i + 1 ) ++ days ; } System . out . println ( days ) ; } }",
            "python_code": "n = int ( input ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) ans = 0 mx = 0 for i in range ( n ) : mx = max ( a [ i ] , mx ) if mx == i + 1 : ans += 1 print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3645_A_2996",
            "java_code": "import java . io . * ; class GFG { static float polyarea ( float n , float a ) { if ( a < 0 && n < 0 ) return - 1 ; float A = ( a * a * n ) / ( float ) ( 4 * Math . tan ( ( 180 / n ) * 3.14159 / 180 ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 9 , n = 6 ; System . out . println ( polyarea ( n , a ) ) ; } }",
            "python_code": "from math import tan NEWLINE def polyarea ( n , a ) : NEWLINE INDENT if ( a < 0 and n < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = ( a * a * n ) / ( 4 * tan ( ( 180 / n ) * 3.14159 / 180 ) ) NEWLINE return A NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 9 NEWLINE n = 6 NEWLINE print ( '{0:.6}' . format ( polyarea ( n , a ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_805_A_2997",
            "java_code": " import java . math . * ; import java . util . * ; import java . io . * ; public class gr13b {",
            "python_code": "m , n = map ( int , input ( ) . split ( ) ) if ( m == n ) : print ( m ) else : print ( 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3410_A_2998",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int factorial ( int N ) { int fact = 1 ; for ( int i = 1 ; i <= N ; i ++ ) fact = fact * i ; return fact ; } static int nthTerm ( int N ) { return ( factorial ( N ) * ( N + 2 ) / 2 ) ; } public static void main ( String args [ ] ) { int N = 6 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def factorial ( N ) : NEWLINE INDENT fact = 1 NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT fact = fact * i NEWLINE DEDENT return fact NEWLINE DEDENT def nthTerm ( N ) : NEWLINE INDENT return ( factorial ( N ) * ( N + 2 ) // 2 ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT N = 6 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_483_A_2999",
            "java_code": "import java . util . * ; public class CounterExample { public static long co_prime ( long n1 , long n2 ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) if a % 2 : a += 1 if a + 2 > b : print ( - 1 ) else : print ( a , a + 1 , a + 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2261_A_3000",
            "java_code": "class GFG { static int calNum ( int year ) { return ( year / 4 ) - ( year / 100 ) + ( year / 400 ) ; } static void leapNum ( int l , int r ) { l -- ; int num1 = calNum ( r ) ; int num2 = calNum ( l ) ; System . out . print ( num1 - num2 + \"\\n\" ) ; } public static void main ( String [ ] args ) { int l1 = 1 , r1 = 400 ; leapNum ( l1 , r1 ) ; int l2 = 400 , r2 = 2000 ; leapNum ( l2 , r2 ) ; } }",
            "python_code": "def calNum ( year ) : NEWLINE INDENT return ( year // 4 ) - ( year // 100 ) + ( year // 400 ) ; NEWLINE DEDENT def leapNum ( l , r ) : NEWLINE INDENT l -= 1 ; NEWLINE num1 = calNum ( r ) ; NEWLINE num2 = calNum ( l ) ; NEWLINE print ( num1 - num2 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT l1 = 1 ; r1 = 400 ; NEWLINE leapNum ( l1 , r1 ) ; NEWLINE l2 = 400 ; r2 = 2000 ; NEWLINE leapNum ( l2 , r2 ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_250_A_3001",
            "java_code": "import java . util . ArrayList ; import java . util . Scanner ;   public class PaperWork {  public static void main ( String [ ] args ) {",
            "python_code": "input ( ) days = map ( int , input ( ) . split ( ) ) folders = [ ] fc = 0 c = 0  for i in days : if i < 0 : if c < 2 : c += 1 else : fc += 1 c = 1 if len ( folders ) <= fc : folders . append ( 0 ) folders [ fc ] += 1  print ( fc + 1 ) print ( * folders ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_922_B_3002",
            "java_code": "import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {",
            "python_code": "import sys , mathfrom collections import defaultdict , dequeinput = sys . stdin . readline  n = int ( input ( ) ) c = 0 for i in range ( 1 , n + 1 ) : for j in range ( i + 1 , n + 1 ) : k = i ^ j if ( i < j < k <= n and i + j > k and j + k > i and i + k > j ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4727_A_3003",
            "java_code": "class GFG { static int xorCalc ( int k ) { if ( k == 1 ) return 2 ; if ( ( ( k + 1 ) & k ) == 0 ) return k / 2 ; return 1 ; } public static void main ( String [ ] args ) { int k = 31 ; System . out . println ( xorCalc ( k ) ) ; } }",
            "python_code": "def xorCalc ( k ) : NEWLINE INDENT if ( k == 1 ) : NEWLINE INDENTINDENT return 2 NEWLINE DEDENT if ( ( ( k + 1 ) & k ) == 0 ) : NEWLINE INDENTINDENT return k / 2 NEWLINE DEDENT return 1 ; NEWLINE DEDENT k = 31 NEWLINE print ( int ( xorCalc ( k ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_789_A_3004",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; import java . util . Collections ; public class Main { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; int T = 1 ;",
            "python_code": "from math import ceiln , k = map ( int , input ( ) . split ( ) ) w = [ 0 ] + list ( map ( int , input ( ) . split ( ) ) ) minDay = 0 total = 0 for i in range ( 1 , n + 1 ) : total += ceil ( w [ i ] / k ) minDay = ceil ( total / 2 ) print ( minDay ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_352_B_3005",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ; ",
            "python_code": "from sys import stdin , stdoutfrom os import pathrd = lambda : stdin . readline ( ) . strip ( ) wr = stdout . writeif ( path . exists ( 'input.txt' ) ) : stdin = open ( \"input.txt\" , \"r\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4574_A_3006",
            "java_code": "public class GFG { static int getTotalXorOfSubarrayXors ( int arr [ ] , int N ) { int res = 0 ; for ( int i = 0 ; i < N ; i ++ ) for ( int j = i ; j < N ; j ++ ) for ( int k = i ; k <= j ; k ++ ) res = res ^ arr [ k ] ; return res ; } public static void main ( String args [ ] ) { int arr [ ] = { 3 , 5 , 2 , 4 , 6 } ; int N = arr . length ; System . out . println ( getTotalXorOfSubarrayXors ( arr , N ) ) ; } }",
            "python_code": "def getTotalXorOfSubarrayXors ( arr , N ) : NEWLINE INDENT res = 0 NEWLINE for i in range ( 0 , N ) : NEWLINE INDENTINDENT for j in range ( i , N ) : NEWLINE INDENTINDENTINDENT for k in range ( i , j + 1 ) : NEWLINE INDENTINDENTINDENTINDENT res = res ^ arr [ k ] NEWLINE DEDENT DEDENT DEDENT return res NEWLINE DEDENT arr = [ 3 , 5 , 2 , 4 , 6 ] NEWLINE N = len ( arr ) NEWLINE print ( getTotalXorOfSubarrayXors ( arr , N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5023_A_3007",
            "java_code": "import java . util . * ; class solution { static int nthTerm ( int n ) { return 7 * ( int ) Math . pow ( n , 2 ) - 7 * n + 7 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( n ) : NEWLINE INDENT return 7 * pow ( n , 2 ) - 7 * n + 7 NEWLINE DEDENT N = 4 NEWLINE print ( nthTerm ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2929_A_3008",
            "java_code": "import java . util . * ; class GFG { static int findMin ( int a [ ] , int n ) { double sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += Math . log ( a [ i ] ) ; int x = ( int ) Math . exp ( sum / n ) ; return x + 1 ; } public static void main ( String [ ] args ) { int a [ ] = { 3 , 2 , 1 , 4 } ; int n = a . length ; System . out . println ( findMin ( a , n ) ) ; } }",
            "python_code": "import math as m NEWLINE def findMin ( a , n ) : NEWLINE INDENT _sum = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT _sum += m . log ( a [ i ] ) NEWLINE DEDENT x = m . exp ( _sum / n ) NEWLINE return int ( x + 1 ) NEWLINE DEDENT a = [ 3 , 2 , 1 , 4 ] NEWLINE n = len ( a ) NEWLINE print ( findMin ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_793_A_3009",
            "java_code": "class Main { static int findCount ( int m , int n ) { int num1 = 0 ; for ( int i = 0 ; i < m ; i ++ ) num1 = ( num1 * 10 ) + 9 ; int num2 = 0 ; for ( int i = 0 ; i < ( m - 1 ) ; i ++ ) num2 = ( num2 * 10 ) + 9 ; return ( ( num1 / n ) - ( num2 / n ) ) ; } public static void main ( String [ ] args ) { int m = 2 , n = 6 ; System . out . println ( findCount ( m , n ) ) ; } }",
            "python_code": "def findCount ( m , n ) : NEWLINE INDENT num1 = 0 NEWLINE for i in range ( 0 , m ) : NEWLINE INDENTINDENT num1 = ( num1 * 10 ) + 9 NEWLINE DEDENT num2 = 0 NEWLINE for i in range ( 0 , ( m - 1 ) ) : NEWLINE INDENTINDENT num2 = ( num2 * 10 ) + 9 NEWLINE DEDENT return int ( ( num1 / n ) - ( num2 / n ) ) NEWLINE DEDENT m = 2 ; n = 6 NEWLINE print ( findCount ( m , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_447_A_3010",
            "java_code": "import java . util . Scanner ;  public class DZYHash { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int p = in . nextInt ( ) , n = in . nextInt ( ) , a [ ] = new int [ p ] , i , o = - 1 ;  for ( i = 0 ; i < n ; i ++ ) { int x = in . nextInt ( ) ; a [ x % p ] ++ ; if ( a [ x % p ] > 1 ) { o = i + 1 ; break ; } } in . close ( ) ; System . out . println ( o ) ; } }",
            "python_code": "from collections import Counter n , k = map ( int , input ( ) . split ( ) ) c = Counter ( ) ans = - 1 for i in range ( 1 , k + 1 ) : x = int ( input ( ) ) c [ x % n ] += 1 if ans == - 1 and c [ x % n ] > 1 : ans = i print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_478_B_3011",
            "java_code": "import java . util . * ; import java . math . * ; public class RandomTeams { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long m = sc . nextLong ( ) ; long max = n - ( m - 1 ) ; max = max * ( max - 1 ) / 2 ; long x = n / m , y = n % m ; long min = 0 ; min += ( m - y ) * x * ( x - 1 ) / 2 ; x ++ ; min += y * x * ( x - 1 ) / 2 ; System . out . println ( min + \" \" + max ) ; } }",
            "python_code": "n , m = map ( int , input ( ) . split ( ) ) kmin = n // mkmax = n - mpairMin = m * kmin * ( kmin - 1 ) // 2 + kmin * ( n % m ) pairMax = ( kmax + 1 ) * kmax // 2 print ( pairMin , pairMax ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4786_A_3012",
            "java_code": "import java . util . * ; class GFG { static int minItems ( int k , int r ) { for ( int i = 1 ; i < 10 ; i ++ ) if ( ( i * k - r ) % 10 == 0 || ( i * k ) % 10 == 0 ) return i ; return 10 ; } public static void main ( String args [ ] ) { int k = 15 ; int r = 2 ; System . out . println ( minItems ( k , r ) ) ; } }",
            "python_code": "def minItems ( k , r ) : NEWLINE INDENT for i in range ( 1 , 10 ) : NEWLINE INDENTINDENT if ( ( i * k - r ) % 10 == 0 or ( i * k ) % 10 == 0 ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return 10 ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT k , r = 15 , 2 ; NEWLINE print ( minItems ( k , r ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_202_A_3013",
            "java_code": "import java . util . * ; public class Llps {  public static void main ( String [ ] args ) {",
            "python_code": "a = input ( ) c = max ( a ) print ( c * a . count ( c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_765_A_3014",
            "java_code": "import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Compe { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {",
            "python_code": "n = int ( input ( ) ) t = nhome = input ( ) departure = [ ] while t > 0 : flight = input ( ) departure . append ( flight [ : 3 ] ) t -= 1  if n % 2 == 0 : print ( 'home' ) else : print ( 'contest' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4380_A_3015",
            "java_code": "class GFG { static void solve ( int A , int B ) { double p = B / 2.0 ; double M = Math . ceil ( 4 * p ) ; int N = 1 ; int O = - 2 * A ; double Q = Math . ceil ( A * A + 4 * p * p ) ; System . out . println ( M + \" \" + N + \" \" + O + \" \" + Q ) ; } public static void main ( String [ ] args ) { int a = 1 ; int b = 1 ; solve ( a , b ) ; } }",
            "python_code": "def solve ( A , B ) : NEWLINE INDENT p = B / 2 NEWLINE M = int ( 4 * p ) NEWLINE N = 1 NEWLINE O = - 2 * A NEWLINE Q = int ( A * A + 4 * p * p ) NEWLINE return [ M , N , O , Q ] NEWLINE DEDENT a = 1 NEWLINE b = 1 NEWLINE print ( * solve ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4009_A_3016",
            "java_code": "import java . io . * ; class GFG { static int Add ( int x , int y ) { while ( y != 0 ) { int carry = x & y ; x = x ^ y ; y = carry << 1 ; } return x ; } public static void main ( String arg [ ] ) { System . out . println ( Add ( 15 , 32 ) ) ; } }",
            "python_code": "def Add ( x , y ) : NEWLINE INDENT while ( y != 0 ) : NEWLINE INDENTINDENT carry = x & y NEWLINE x = x ^ y NEWLINE y = carry << 1 NEWLINE DEDENT return x NEWLINE DEDENT print ( Add ( 15 , 32 ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_214_B_3017",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "import osimport sysfrom io import BytesIO , IOBaseimport mathimport itertoolsimport bisectimport heapq NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_713_A_3018",
            "java_code": "import java . io . * ; class GFG { static long andOperator ( long a , long b ) { while ( a < b ) { b -= ( b & - b ) ; } return b ; } public static void main ( String [ ] args ) { long a , b ; a = 10 ; b = 15 ; System . out . println ( andOperator ( a , b ) ) ; } }",
            "python_code": "def andOperator ( a , b ) : NEWLINE INDENT while ( a < b ) : NEWLINE INDENTINDENT b -= ( b & - b ) NEWLINE DEDENT return b NEWLINE DEDENT a , b = 10 , 15 NEWLINE print ( andOperator ( a , b ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_665_A_3019",
            "java_code": "import java . io . * ; import java . util . * ;  public class practice665a { public static void main ( String [ ] args ) throws Exception {",
            "python_code": "f1 , t1 = [ int ( i ) for i in input ( ) . split ( \" \" ) ] f2 , t2 = [ int ( i ) for i in input ( ) . split ( \" \" ) ] time = [ str ( i ) for i in input ( ) . split ( \" \" ) ] time = time [ 0 ]  th , tm = time . split ( \":\" ) th = int ( th ) tm = int ( tm )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4205_A_3020",
            "java_code": "class GFG { static int countPairs ( int n ) { int count = 0 ; for ( int x = 1 ; x < n ; x ++ ) { for ( int y = x + 1 ; y <= n ; y ++ ) { if ( ( y + x ) % ( y ^ x ) == 0 ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( countPairs ( n ) ) ; } }",
            "python_code": "def countPairs ( n ) : NEWLINE INDENT count = 0 ; NEWLINE for x in range ( 1 , n ) : NEWLINE INDENTINDENT for y in range ( x + 1 , n + 1 ) : NEWLINE INDENTINDENTINDENT if ( ( y + x ) % ( y ^ x ) == 0 ) : NEWLINE INDENTINDENTINDENTINDENT count += 1 ; NEWLINE DEDENT DEDENT DEDENT return count ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 6 ; NEWLINE print ( countPairs ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4752_A_3021",
            "java_code": "import java . io . * ; class GFG { static int findEvenPair ( int A [ ] , int N ) { int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) if ( ( ! ( ( A [ i ] & 1 ) > 0 ) ) ) count ++ ; return count * ( count - 1 ) / 2 ; } public static void main ( String [ ] args ) { int A [ ] = { 5 , 6 , 2 , 8 } ; int N = A . length ; System . out . println ( findEvenPair ( A , N ) ) ; } }",
            "python_code": "def findEvenPair ( A , N ) : NEWLINE INDENT count = 0 NEWLINE for i in range ( N ) : NEWLINE INDENTINDENT if ( not ( A [ i ] & 1 ) ) : NEWLINE INDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT return count * ( count - 1 ) // 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT A = [ 5 , 6 , 2 , 8 ] NEWLINE N = len ( A ) NEWLINE print ( findEvenPair ( A , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_580_A_3022",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; public class Codechef { ",
            "python_code": "n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) maxcount , count = 1 , 1 for i in range ( n - 1 ) : if arr [ i ] > arr [ i + 1 ] : count = 1 else : count += 1 if count > maxcount : maxcount = countprint ( maxcount ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_913_B_3023",
            "java_code": " import java . math . * ; import java . util . * ; import java . io . * ; public class gr13b {",
            "python_code": "n = int ( input ( ) ) tree = [ [ ] for i in range ( n + 1 ) ] for i in range ( 2 , n + 1 ) : p = int ( input ( ) ) tree [ p ] . append ( i ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_120_A_3024",
            "java_code": "import java . io . * ; import java . util . * ; public class kuchBhi { public static void main ( String [ ] args ) throws Throwable {",
            "python_code": "import syssys . stdin = open ( \"input.txt\" , \"r\" ) sys . stdout = open ( \"output.txt\" , \"w\" ) match = input ( ) rail = int ( input ( ) ) if match == \"front\" : if rail == 1 : print ( \"L\" ) else : print ( \"R\" ) else : if rail == 1 : print ( \"R\" ) else : print ( \"L\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_171_B_3025",
            "java_code": "import java . io . * ; import java . util . * ; public class Main { static int mod = ( int ) ( Math . pow ( 10 , 9 ) + 7 ) ; public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ; int n = sc . nextInt ( ) ; out . println ( 6 * n * ( n - 1 ) + 1 ) ; out . close ( ) ; } static void mergeSort ( int [ ] A ) {",
            "python_code": "n = int ( input ( ) ) print ( 6 * n * ( n - 1 ) + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_50_A_3026",
            "java_code": "import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; int y = scan . nextInt ( ) ; System . out . println ( ( x * y ) / 2 ) ; } }",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) erg = ( ( x ) * ( y ) ) // 2 print ( erg ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5028_A_3027",
            "java_code": "import java . io . * ; class GFG { static float Calculate_GST ( float org_cost , float N_price ) { return ( ( ( N_price - org_cost ) * 100 ) / org_cost ) ; } public static void main ( String [ ] args ) { float org_cost = 100 ; float N_price = 120 ; System . out . print ( \" GST = \" + Calculate_GST ( org_cost , N_price ) + \"%\" ) ; } }",
            "python_code": "def Calculate_GST ( org_cost , N_price ) : NEWLINE INDENT return ( ( ( N_price - org_cost ) * 100 ) / org_cost ) ; NEWLINE DEDENT org_cost = 100 NEWLINE N_price = 120 NEWLINE print ( \"GST = \" , end = '' ) NEWLINE print ( round ( Calculate_GST ( org_cost , N_price ) ) , end = '' ) NEWLINE print ( \"%\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1450_B_3028",
            "java_code": "import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . Vector ; import javafx . util . Pair ;  public class NewClass {  static int n11 = 100000 ; static boolean a11 [ ] = new boolean [ n11 + 1 ] ; static Vector < Long > v11 = new Vector ( ) ;  static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } return gcd ( b , a % b ) ; }  static void seive ( ) {",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n , k = map ( int , input ( ) . split ( ) ) NEWLINE l = list ( ) NEWLINE for i in range ( n ) : x = list ( map ( int , input ( ) . split ( ) ) ) NEWLINE l . append ( x ) NEWLINE for i in l : c = 1 NEWLINE for j in l : if NEWLINE abs ( i [ 0 ] - j [ 0 ] ) + abs ( i [ 1 ] - j [ 1 ] ) > k : c = 0 NEWLINE break NEWLINE if c == 1 : print ( 1 ) NEWLINE break NEWLINE if c == 0 : print ( - 1 )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3658_A_3029",
            "java_code": "import java . util . * ; class GFG { static double ReuleauxArea ( double r ) { if ( r < 0 ) return - 1 ; double A = 0.70477 * 2 * Math . pow ( r , 2 ) ; return A ; } public static void main ( String args [ ] ) { double r = 6 ; System . out . println ( ReuleauxArea ( r ) ) ; } }",
            "python_code": "import math as mt NEWLINE def ReuleauxArea ( r ) : NEWLINE INDENT if ( r < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT A = 0.70477 * 2 * pow ( r , 2 ) NEWLINE return A NEWLINE DEDENT r = 6 NEWLINE print ( ReuleauxArea ( r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_595_A_3030",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static void printLines ( int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { System . out . println ( k * ( 6 * i + 1 ) + \" \" + k * ( 6 * i + 2 ) + \" \" + k * ( 6 * i + 3 ) + \" \" + k * ( 6 * i + 5 ) ) ; } } public static void main ( String args [ ] ) { int n = 2 , k = 2 ; printLines ( n , k ) ; } }",
            "python_code": "def printLines ( n , k ) : NEWLINE INDENT for i in range ( n ) : NEWLINE INDENTINDENT print ( k * ( 6 * i + 1 ) , k * ( 6 * i + 2 ) , k * ( 6 * i + 3 ) , k * ( 6 * i + 5 ) ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , k = 2 , 2 NEWLINE printLines ( n , k ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_804_A_3031",
            "java_code": "import java . util . Scanner ;  public class _0674FindAmir {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n % 2 == 0 ) { System . out . println ( n / 2 - 1 ) ; } else { System . out . println ( n / 2 ) ; } }  }",
            "python_code": "print ( ( int ( input ( ) ) - 1 ) // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_333_A_3032",
            "java_code": "import java . util . Scanner ;  public class A {  public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; long pow3 = 1 ; while ( pow3 <= n ) { if ( n % pow3 != 0 ) { System . out . println ( n / pow3 + 1 ) ; return ; } pow3 = pow3 * 3 ; } System . out . println ( 1 ) ;  } }",
            "python_code": "n = int ( input ( ) ) while n % 3 == 0 : n //= 3 print ( n // 3 + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1673_A_3033",
            "java_code": "import java . io . * ; class GFG { static long fifthPowerSum ( int n ) { return ( ( 2 * n * n * n * n * n * n ) + ( 6 * n * n * n * n * n ) + ( 5 * n * n * n * n ) - ( n * n ) ) / 12 ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( fifthPowerSum ( n ) ) ; } }",
            "python_code": "def fifthPowerSum ( n ) : NEWLINE INDENT return ( ( 2 * n * n * n * n * n * n ) + ( 6 * n * n * n * n * n ) + ( 5 * n * n * n * n ) - ( n * n ) ) // 12 NEWLINE DEDENT n = 5 NEWLINE print ( fifthPowerSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_455_A_3034",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "import osimport sysfrom io import BytesIO , IOBaseimport mathimport itertoolsimport bisectimport heapq NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1196_A_3035",
            "java_code": "import java . util . Scanner ;  public class Nk { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ;  int t = input . nextInt ( ) ;  while ( t -- > 0 ) {  long a = input . nextLong ( ) ; long b = input . nextLong ( ) ; long c = input . nextLong ( ) ; long u = ( a + b + c ) / 2 ;  System . out . println ( u ) ; } } }",
            "python_code": "t = int ( input ( ) ) for i in range ( t ) : a , b , c = map ( int , input ( ) . split ( ) ) s = a + b + c print ( s // 2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_725_A_3036",
            "java_code": "import java . io . * ; import java . math . * ; import java . util . * ; public class JumpingBall { public static void main ( String [ ] args ) { FastScanner I = new FastScanner ( ) ;",
            "python_code": "n = int ( input ( ) ) s = input ( ) s = list ( s ) count = 0 for i in range ( len ( s ) ) : if ( s [ i ] == '<' ) : count += 1 else : break for i in range ( len ( s ) - 1 , - 1 , - 1 ) : if ( s [ i ] == '>' ) : count += 1 else : break print ( count ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1148_A_3037",
            "java_code": "class GFG { static void printSeriesSum ( int N ) { long sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += Math . pow ( i , i - 1 ) ; } System . out . print ( sum + \"\\n\" ) ; } public static void main ( String [ ] args ) { int N = 5 ; printSeriesSum ( N ) ; } }",
            "python_code": "def printSeriessumm ( N ) : NEWLINE INDENT summ = 0 NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT summ += pow ( i , i - 1 ) NEWLINE DEDENT print ( summ ) NEWLINE DEDENT N = 5 NEWLINE printSeriessumm ( N ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_863_A_3038",
            "java_code": "public class GFG { static boolean isProductEven ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( ( arr [ i ] & 1 ) == 0 ) return true ; return false ; } public static void main ( String args [ ] ) { int arr [ ] = { 2 , 4 , 3 , 5 } ; int n = arr . length ; if ( isProductEven ( arr , n ) ) System . out . println ( \"Even\" ) ; else System . out . println ( \"Odd\" ) ; } }",
            "python_code": "def isProductEven ( arr , n ) : NEWLINE INDENT for i in range ( 0 , n ) : NEWLINE INDENTINDENT if ( ( arr [ i ] & 1 ) == 0 ) : NEWLINE INDENTINDENTINDENT return True NEWLINE DEDENT DEDENT return False NEWLINE DEDENT arr = [ 2 , 4 , 3 , 5 ] NEWLINE n = len ( arr ) NEWLINE if ( isProductEven ( arr , n ) ) : NEWLINE INDENT print ( \"Even\" ) NEWLINE DEDENT else : NEWLINE INDENT print ( \"Odd\" ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_779_A_3039",
            "java_code": "import java . io . * ; import java . math . * ; class GFG { static int nonsquare ( int n ) { return n + ( int ) ( 0.5 + ( Math . sqrt ( n ) ) ) ; } static void printNonSquare ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( nonsquare ( i ) + \" \" ) ; } public static void main ( String args [ ] ) { int n = 10 ; printNonSquare ( n ) ; } }",
            "python_code": "import math NEWLINE def nonsquare ( n ) : NEWLINE INDENT return n + ( int ) ( 0.5 + math . sqrt ( n ) ) NEWLINE DEDENT def printNonSquare ( n ) : NEWLINE INDENT for i in range ( 1 , n + 1 ) : NEWLINE INDENTINDENT print ( nonsquare ( i ) , end = \" \" ) NEWLINE DEDENT DEDENT n = 10 NEWLINE printNonSquare ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_410_A_3040",
            "java_code": "class GFG { static void findSubArr ( int arr [ ] , int n ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( Math . abs ( arr [ i ] - arr [ i + 1 ] ) >= 2 ) { System . out . print ( arr [ i ] + \" \" + arr [ i + 1 ] ) ; return ; } } System . out . print ( - 1 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 4 , 6 , 7 } ; int n = arr . length ; findSubArr ( arr , n ) ; } }",
            "python_code": "def findSubArr ( arr , n ) : NEWLINE INDENT for i in range ( n - 1 ) : NEWLINE INDENTINDENT if ( abs ( arr [ i ] - arr [ i + 1 ] ) >= 2 ) : NEWLINE INDENTINDENTINDENT print ( arr [ i ] , arr [ i + 1 ] , end = \"\" ) ; NEWLINE return ; NEWLINE DEDENT DEDENT print ( - 1 ) ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT arr = [ 1 , 2 , 4 , 6 , 7 ] ; NEWLINE n = len ( arr ) ; NEWLINE findSubArr ( arr , n ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_464_A_3041",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; ",
            "python_code": "n , p = list ( map ( int , input ( ) . split ( ) ) ) s = list ( input ( ) ) s [ n - 1 ] = chr ( ord ( s [ n - 1 ] ) + 1 ) i = n - 1 while i >= 0 and i < n : if ord ( s [ i ] ) >= ord ( 'a' ) + p : s [ i ] = 'a' i -= 1 s [ i ] = chr ( ord ( s [ i ] ) + 1 ) elif i > 0 and s [ i ] == s [ i - 1 ] or i > 1 and s [ i ] == s [ i - 2 ] : s [ i ] = chr ( ord ( s [ i ] ) + 1 ) else : i += 1 print ( \"NO\" if i < 0 else \"\" . join ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4585_A_3042",
            "java_code": "class GFG { static double pentdiagonal ( double a ) { if ( a < 0 ) return - 1 ; double d = 1.22 * a ; return d ; } static public void main ( String args [ ] ) { double a = 6 ; System . out . println ( pentdiagonal ( a ) ) ; } }",
            "python_code": "def pentdiagonal ( a ) : NEWLINE INDENT if ( a < 0 ) : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT d = 1.22 * a NEWLINE return d NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT a = 6 NEWLINE print ( pentdiagonal ( a ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_959_A_3043",
            "java_code": "import java . io . * ; import java . util . StringTokenizer ;",
            "python_code": "n = int ( input ( ) )  if ( n % 2 ) == 0 : print ( 'Mahmoud' ) else : print ( 'Ehab' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_611_A_3044",
            "java_code": "import java . util . Scanner ;  public class NYDays { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int x = in . nextInt ( ) ; String s = in . nextLine ( ) ;  in . close ( ) ; System . out . println ( s . charAt ( s . length ( ) - 1 ) == 'k' ? x == 5 || x == 6 ? 53 : 52 : x < 30 ? 12 : x < 31 ? 11 : 7 ) ; } }",
            "python_code": "s = list ( input ( ) . split ( ) )  if s [ - 1 ] == \"week\" : if s [ 0 ] in \"56\" : print ( 53 ) else : print ( 52 ) else : if int ( s [ 0 ] ) == 31 : print ( 7 ) elif int ( s [ 0 ] ) == 30 : print ( 11 ) else : print ( 12 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_345_A_3045",
            "java_code": "class GFG { static float power ( float x , int y ) { float temp ; if ( y == 0 ) return 1 ; temp = power ( x , y / 2 ) ; if ( y % 2 == 0 ) return temp * temp ; else { if ( y > 0 ) return x * temp * temp ; else return ( temp * temp ) / x ; } } public static void main ( String [ ] args ) { float x = 2 ; int y = - 3 ; System . out . printf ( \"%f\" , power ( x , y ) ) ; } }",
            "python_code": "def power ( x , y ) : NEWLINE INDENT if ( y == 0 ) : return 1 NEWLINE temp = power ( x , int ( y / 2 ) ) NEWLINE if ( y % 2 == 0 ) : NEWLINE INDENTINDENT return temp * temp NEWLINE DEDENT else : NEWLINE INDENTINDENT if ( y > 0 ) : return x * temp * temp NEWLINE else : return ( temp * temp ) / x NEWLINE DEDENT DEDENT x , y = 2 , - 3 NEWLINE print ( '%.6f' % ( power ( x , y ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_740_B_3046",
            "java_code": "import java . util . * ; import java . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; int m = sc . nextInt ( ) ;",
            "python_code": "n , q = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( 1 , n ) : a [ i ] = ( a [ i - 1 ] + a [ i ] )  ans = 0 for i in range ( q ) : x , y = map ( int , input ( ) . split ( ) ) temp = a [ y - 1 ] if x != 1 : temp -= a [ x - 2 ] ans = max ( ans , ans + temp ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4726_A_3047",
            "java_code": "import java . io . * ; class GFG { static int getMinVal ( int p , int q ) { if ( q % p == 0 ) return p ; return - 1 ; } public static void main ( String [ ] args ) { int p = 24 , q = 48 ; System . out . println ( getMinVal ( p , q ) ) ; } }",
            "python_code": "def getMinVal ( p , q ) : NEWLINE INDENT if q % p == 0 : NEWLINE INDENTINDENT return p NEWLINE DEDENT return - 1 NEWLINE DEDENT p = 24 ; q = 48 NEWLINE print ( getMinVal ( p , q ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1192_A_3048",
            "java_code": "import java . util . * ; class GFG { static int countWays ( int A , int B , int C ) { int minAddA = Math . max ( 0 , ( C + B - A + 2 ) / 2 ) ; int count_ways = Math . max ( C - minAddA + 1 , 0 ) ; return count_ways ; } public static void main ( String args [ ] ) { int A = 3 , B = 5 , C = 5 ; System . out . println ( countWays ( A , B , C ) ) ; } }",
            "python_code": "def countWays ( A , B , C ) : NEWLINE INDENT minAddA = max ( 0 , ( C + B - A + 2 ) // 2 ) NEWLINE count_ways = max ( C - minAddA + 1 , 0 ) NEWLINE return count_ways NEWLINE DEDENT A = 3 NEWLINE B = 5 NEWLINE C = 5 NEWLINE print ( countWays ( A , B , C ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_491_A_3049",
            "java_code": "import java . io . BufferedReader ; import java . io . File ; import java . io . FileReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class a_491 {  public static void main ( String [ ] args ) throws Exception {",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) ) l = list ( range ( b + 1 , 0 , - 1 ) ) if a == 0 : for i in l : print ( i , end = \" \" ) else : q = list ( range ( b + 2 , a + b + 2 ) ) print ( 1 , end = \" \" ) for i in q : print ( i , end = \" \" ) for i in l [ : - 1 ] : print ( i , end = \" \" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_492_A_3050",
            "java_code": "import java . util . Scanner ; public class Calculate_Cube {",
            "python_code": "n = int ( input ( ) ) x = 1 s = 1 while s <= n : x += 1 s += ( x * ( x + 1 ) ) // 2 print ( x - 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_359_A_3051",
            "java_code": "import java . util . Scanner ;  public class TableColoring { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ;  for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( scan . nextInt ( ) == 1 && ( i == 0 || i == n - 1 || j == 0 || j == m - 1 ) ) { System . out . println ( 2 ) ; return ; } } } System . out . println ( 4 ) ; } }",
            "python_code": "try : n , m = map ( int , input ( ) . split ( ) ) f = [ ] flag = 0 for i in range ( n ) : k = [ int ( j ) for j in input ( ) . split ( ) ] f . append ( k ) if ( 1 in f [ 0 ] ) : flag = 1 for i in range ( n ) : if ( f [ i ] [ 0 ] == 1 ) : flag = 1 if ( 1 in f [ n - 1 ] ) : flag = 1 for i in range ( n ) : if ( f [ i ] [ m - 1 ] == 1 ) : flag = 1 if ( flag == 1 ) : print ( \"2\" ) else : print ( \"4\" ) except : pass NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1438_A_3052",
            "java_code": "import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( 4 + \" \" ) ; System . out . println ( ) ; }   } }",
            "python_code": "import sys  input = sys . stdin . buffer . readline  ans = \"1 \" * 100  t = int ( input ( ) ) NEWLINE for _ in range ( t ) : n = int ( input ( ) ) NEWLINE print ( ans [ : 2 * n - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2285_A_3053",
            "java_code": "class GFG { static void gouldSequence ( int n ) { for ( int row_num = 1 ; row_num <= n ; row_num ++ ) { int count = 1 ; int c = 1 ; for ( int i = 1 ; i <= row_num ; i ++ ) { c = c * ( row_num - i ) / i ; if ( c % 2 == 1 ) count ++ ; } System . out . print ( count + \" \" ) ; } } public static void main ( String [ ] args ) { int n = 16 ; gouldSequence ( n ) ; } }",
            "python_code": "def gouldSequence ( n ) : NEWLINE INDENT for row_num in range ( 1 , n ) : NEWLINE INDENTINDENT count = 1 NEWLINE c = 1 NEWLINE for i in range ( 1 , row_num ) : NEWLINE INDENTINDENTINDENT c = c * ( row_num - i ) / i NEWLINE if ( c % 2 == 1 ) : NEWLINE INDENTINDENTINDENTINDENT count += 1 NEWLINE DEDENT DEDENT print ( count , end = \" \" ) NEWLINE DEDENT DEDENT n = 16 ; NEWLINE gouldSequence ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_391_A_3054",
            "java_code": "import java . util . Scanner ; ",
            "python_code": "import sysstring = str ( sys . stdin . readline ( ) ) string = list ( string ) def solution ( string ) : count = 1 answer = 0 num = 0 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_581_A_3055",
            "java_code": "class GFG { public static void main ( String [ ] args ) { int first , second ; for ( first = 1 ; first <= 5 ; ++ first ) for ( second = 1 ; second <= 5 ; ++ second ) System . out . printf ( \"%d \\n\" , 5 * first + second - 5 ) ; } }",
            "python_code": "if name == '__main__' : NEWLINE INDENT for first in range ( 1 , 6 ) : NEWLINE INDENTINDENT for second in range ( 1 , 6 ) : NEWLINE INDENTINDENTINDENT print ( 5 * first + second - 5 ) NEWLINE NL DEDENT DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4540_A_3056",
            "java_code": "import java . io . * ; import java . util . * ; class GFG { static int countgroup ( int a [ ] , int n ) { int xs = 0 ; for ( int i = 0 ; i < n ; i ++ ) xs = xs ^ a [ i ] ; if ( xs == 0 ) return ( 1 << ( n - 1 ) ) - 1 ; return 0 ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 2 , 3 } ; int n = a . length ; System . out . println ( countgroup ( a , n ) ) ; } }",
            "python_code": "def countgroup ( a , n ) : NEWLINE INDENT xs = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT xs = xs ^ a [ i ] NEWLINE DEDENT if xs == 0 : NEWLINE INDENTINDENT return ( 1 << ( n - 1 ) ) - 1 NEWLINE DEDENT return 0 NEWLINE DEDENT a = [ 1 , 2 , 3 ] NEWLINE n = len ( a ) NEWLINE print ( countgroup ( a , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_75_B_3057",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "class pair : def NEWLINE __init__ ( self , f , s ) : self . f = f NEWLINE self . s = s  me = input ( ) NEWLINE n = int ( input ( ) )  mp = { } NEWLINE for i in range ( n ) : a = list ( map ( str , input ( ) . split ( ) ) )  if a [ 1 ] == \"likes\" : NEWLINE INDENT ot = a [ 2 ] else : NEWLINE ot = a [ 3 ]  NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4218_A_3058",
            "java_code": "import java . util . * ; class GFG { static int TOTAL_BITS = 32 ; static boolean isPossible ( int n ) { int cnt = Integer . bitCount ( n ) ; if ( cnt == TOTAL_BITS / 2 ) return true ; return false ; } static public void main ( String [ ] arr ) { int n = 524280 ; if ( isPossible ( n ) ) System . out . println ( \"Yes\" ) ; else System . out . println ( \"No\" ) ; } }",
            "python_code": "TOTAL_BITS = 32 ; NEWLINE def isPossible ( n ) : NEWLINE INDENT cnt = bin ( n ) . count ( '1' ) ; NEWLINE if ( cnt == TOTAL_BITS // 2 ) : NEWLINE INDENTINDENT return True ; NEWLINE DEDENT return False ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 524280 ; NEWLINE if ( isPossible ( n ) ) : NEWLINE INDENTINDENT print ( \"Yes\" ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( \"No\" ) ; NEWLINE NL DEDENT DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1351_A_3059",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Cv {",
            "python_code": "t = int ( input ( ) ) for _ in range ( t ) : a , b = map ( int , input ( ) . split ( ) ) print ( a + b ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_670_B_3060",
            "java_code": "import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long [ ] ar = new long [ ( int ) ( n + 1 ) ] ; for ( int i = 1 ; i <= n ; i ++ ) { ar [ i ] = sc . nextLong ( ) ; } long y = 0 ; for ( long j = k ; j >= 0 ; j -- ) { long g = ( 1 + 8 * j ) ;",
            "python_code": "import sysinput = sys . stdin . readline  n , k = [ int ( i ) for i in input ( ) . split ( ) ] a = [ int ( i ) for i in input ( ) . split ( ) ] count = 1 while k > count : k -= count count += 1 print ( a [ k - 1 ] ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1421_A_3061",
            "java_code": "import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; int a ; int b ; int mn ; for ( int i = 0 ; i < t ; i ++ ) { a = s . nextInt ( ) ; b = s . nextInt ( ) ; mn = Math . min ( a , b ) ; System . out . println ( ( a ^ mn ) + ( b ^ mn ) ) ; } } }",
            "python_code": "import sys , functools , collections , bisect , math , NEWLINE INDENT heapqinput = sys . stdin . readline NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_189_B_3062",
            "java_code": "import java . util . * ; import java . io . * ;  public class Solution { public static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String args [ ] ) throws Exception { Reader in = new Reader ( ) ; long w = in . nextLong ( ) ; long h = in . nextLong ( ) ; long ans = 0 ; long a = ( h / 2 ) * ( h - h / 2 ) ; for ( int i = 1 ; i <= w ; i ++ ) ans += ( Math . min ( i , w - i ) * a ) ; System . out . println ( ans ) ;",
            "python_code": "x , y = map ( int , input ( ) . split ( ) ) ; ans = 0 for i in range ( 2 , x + 1 , 2 ) : for j in range ( 2 , y + 1 , 2 ) : ans += ( x - i + 1 ) * ( y - j + 1 ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3840_A_3063",
            "java_code": "import java . io . * ; class GFG { static int getValueOfF ( int n ) { if ( n == 1 ) return 0 ; if ( n == 2 ) return 1 ; int cnt = 0 ; while ( n % 2 == 0 ) { cnt += 1 ; n /= 2 ; } return 2 * cnt ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( getValueOfF ( n ) ) ; } }",
            "python_code": "def getValueOfF ( n ) : NEWLINE INDENT if ( n == 1 ) : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT if ( n == 2 ) : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT cnt = 0 NEWLINE while ( n % 2 == 0 ) : NEWLINE INDENTINDENT cnt += 1 NEWLINE n /= 2 NEWLINE DEDENT return 2 * cnt NEWLINE DEDENT n = 20 NEWLINE print ( getValueOfF ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_598_A_3064",
            "java_code": "import java . util . Arrays ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long t , a , b = 1 , sum ; t = scanner . nextLong ( ) ; for ( long i = 0 ; i < t ; i ++ ) { a = scanner . nextLong ( ) ; b = 1 ; sum = a * ( a + 1 ) / 2 ; while ( b <= a ) { sum -= 2 * b ; b *= 2 ; } System . out . println ( sum ) ; } } }",
            "python_code": "cases = int ( input ( ) ) powers = set ( )  for i in range ( 32 ) : powers . add ( 2 ** i ) while cases : cases -= 1 num = int ( input ( ) )  ans = num * ( num + 1 ) // 2  for i in powers : if i <= num : ans -= 2 * i  print ( ans )   NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_718_A_3065",
            "java_code": "import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;",
            "python_code": "import sysn , t = map ( int , sys . stdin . readline ( ) . split ( ) ) x = sys . stdin . readline ( ) y = x . find ( '.' ) for i in range ( y + 1 , n ) : if x [ i ] > '4' : for j in range ( t ) : i -= 1 if x [ i ] != '4' : break if i == y : i -= 1 while i and x [ i ] == '9' : i -= 1 x = x [ : i ] + str ( int ( x [ i ] ) + 1 ) + '0' * ( y - i - 1 ) else : x = x [ : i ] + str ( int ( x [ i ] ) + 1 ) breakprint ( x )           NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1312_A_3066",
            "java_code": "import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int a , b ; int t = input . nextInt ( ) ; while ( t != 0 ) { a = input . nextInt ( ) ; b = input . nextInt ( ) ; if ( a % b == 0 ) { System . out . println ( \"YES\" ) ; } else { System . out . println ( \"NO\" ) ; } t -- ; } } }",
            "python_code": "import sysimport bisectdef gcd ( a , b ) : if ( a == 0 ) : return b return gcd ( b % a , a ) def input ( ) : return sys . stdin . readline ( ) . strip ( ) def iinput ( ) : return int ( input ( ) ) def minput ( ) : return map ( int , input ( ) . split ( ) ) def listinput ( ) : return list ( map ( str , input ( ) . split ( ) ) ) for _ in range ( iinput ( ) ) : a , b = minput ( ) if a % b : print ( \"NO\" ) else : print ( \"YES\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2182_A_3067",
            "java_code": "import java . io . * ; class GFG { static int getChicks ( int n ) { int chicks = ( int ) Math . pow ( 3 , n - 1 ) ; return chicks ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( getChicks ( n ) ) ; } }",
            "python_code": "def getChicks ( n ) : NEWLINE INDENT chicks = pow ( 3 , n - 1 ) NEWLINE return chicks NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 3 NEWLINE print ( getChicks ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_424_A_3068",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;",
            "python_code": "n = int ( input ( ) ) s = input ( ) cnt = s . count ( 'x' ) - s . count ( 'X' ) print ( abs ( cnt // 2 ) ) s = list ( s ) for i in range ( len ( s ) ) : if cnt > 0 and s [ i ] == 'x' : s [ i ] = 'X' cnt -= 2 elif cnt < 0 and s [ i ] == 'X' : s [ i ] = 'x' cnt += 2 print ( '' . join ( s ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_624_A_3069",
            "java_code": "import java . util . Scanner ;  public class SaveLuke { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; double d = in . nextDouble ( ) , l = in . nextDouble ( ) , v1 = in . nextDouble ( ) , v2 = in . nextDouble ( ) ;  in . close ( ) ; System . out . println ( ( l - d ) / ( v1 + v2 ) ) ; } }",
            "python_code": "d , L , v1 , v2 = map ( int , input ( ) . split ( ) ) ans = float ( ( L - d ) / ( v1 + v2 ) ) print ( ans ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_557_B_3070",
            "java_code": "import java . io . File ; import java . util . Arrays ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class p021 { public static void main ( String args [ ] ) throws Exception {",
            "python_code": "n , w = map ( int , input ( ) . split ( ) ) a = list ( map ( int , input ( ) . split ( ) ) ) a . sort ( ) g = a [ 0 ] b = a [ n ] if g >= w : print ( w ) else : if g * 2 > b : g = b / 2 t = g * n + g * 2 * n if t <= w : print ( t ) else : print ( w ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_43_B_3071",
            "java_code": "import java . util . * ; import java . math . * ; public class Letter { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int [ ] hArr = new int [ 123 ] ; int [ ] tArr = new int [ 123 ] ; Arrays . fill ( hArr , 0 ) ; Arrays . fill ( tArr , 0 ) ; char [ ] arr = sc . nextLine ( ) . replaceAll ( \"\\\\s\" , \"\" ) . toCharArray ( ) ;",
            "python_code": "head = input ( ) text = input ( ) head_m = { t : head . count ( t ) for t in head . strip ( ) . replace ( ' ' , '' ) . replace ( '\\t' , '' ) } IsValid = Truefor i in text . strip ( ) . replace ( ' ' , '' ) . replace ( '\\t' , '' ) : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_837_A_3072",
            "java_code": "import java . io . * ; class GFG { static void anglequichord ( int z ) { System . out . println ( \"The angle is \" + z + \" degrees\" ) ; } public static void main ( String [ ] args ) { int z = 48 ; anglequichord ( z ) ; } }",
            "python_code": "def anglequichord ( z ) : NEWLINE INDENT print ( \"The angle is \" , z , \" degrees\" ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT z = 48 NEWLINE anglequichord ( z ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_781_A_3073",
            "java_code": "class GFG { static void findNumbers ( int n ) { int i = 1 ; while ( i <= n ) { System . out . print ( ( 3 * i * ( i - 1 ) + 1 ) + \" \" ) ; i ++ ; } } public static void main ( String [ ] args ) { int n = 4 ; findNumbers ( n ) ; } }",
            "python_code": "def findNumbers ( n ) : NEWLINE INDENT i = 1 NEWLINE while ( i <= n ) : NEWLINE INDENTINDENT print ( ( 3 * i * ( i - 1 ) + 1 ) , end = \" \" ) NEWLINE i += 1 NEWLINE DEDENT DEDENT n = 4 NEWLINE findNumbers ( n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_129_A_3074",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment {  static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; ",
            "python_code": "n = int ( input ( ) ) l = list ( map ( int , input ( ) . split ( ) ) ) ce = 0 co = 0 s = 0 for i in l : if i % 2 == 0 : ce += 1 else : co += 1 s += i  if s % 2 == 0 : print ( ce ) else : print ( co ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_826_A_3075",
            "java_code": "import java . util . * ; class GFG { static void maximumArea ( int l , int b , int x , int y ) { int left , right , above , below ; left = x * b ; right = ( l - x - 1 ) * b ; above = l * y ; below = ( b - y - 1 ) * l ; System . out . print ( Math . max ( Math . max ( left , right ) , Math . max ( above , below ) ) ) ; } public static void main ( String [ ] args ) { int L = 8 , B = 8 ; int X = 0 , Y = 0 ; maximumArea ( L , B , X , Y ) ; } }",
            "python_code": "def maximumArea ( l , b , x , y ) : NEWLINE INDENT left , right , above , below = 0 , 0 , 0 , 0 NEWLINE left = x * b NEWLINE right = ( l - x - 1 ) * b NEWLINE above = l * y NEWLINE below = ( b - y - 1 ) * l NEWLINE print ( max ( max ( left , right ) , max ( above , below ) ) ) NEWLINE DEDENT l = 8 NEWLINE b = 8 NEWLINE x = 0 NEWLINE y = 0 NEWLINE maximumArea ( l , b , x , y ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_535_B_3076",
            "java_code": "import java . io . * ; import java . util . ArrayList ; import java . util . Collections ; import java . util . StringTokenizer ;",
            "python_code": "s = input ( ) ans = 0 n = len ( s ) for i in range ( 1 , n ) : ans += pow ( 2 , i ) for i in range ( 0 , n ) : if ( s [ i ] == '7' ) : ans += pow ( 2 , n - 1 - i ) print ( ans + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1610_A_3077",
            "java_code": "import java . io . * ; class GFG { static int findSum ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) ans += ( i / j ) ; return ans ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( findSum ( N ) ) ; } }",
            "python_code": "def findSum ( N ) : NEWLINE INDENT ans = 0 NEWLINE for i in range ( 1 , N + 1 ) : NEWLINE INDENTINDENT for j in range ( 1 , N + 1 ) : NEWLINE INDENTINDENTINDENT ans += i // j NEWLINE DEDENT DEDENT return ans NEWLINE DEDENT N = 2 NEWLINE print ( findSum ( N ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3174_A_3078",
            "java_code": "class GFG { static int ways ( int n ) { return n / 2 ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( ways ( n ) ) ; } }",
            "python_code": "def ways ( n ) : NEWLINE INDENT return n // 2 NEWLINE DEDENT n = 2 NEWLINE print ( ways ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1692_A_3079",
            "java_code": "class GFG { static int rev_num = 0 ; static int base_pos = 1 ; static int reversDigits ( int num ) { if ( num > 0 ) { reversDigits ( num / 10 ) ; rev_num += ( num % 10 ) * base_pos ; base_pos *= 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( reversDigits ( num ) ) ; } }",
            "python_code": "rev_num = 0 NEWLINE base_pos = 1 NEWLINE def reversDigits ( num ) : NEWLINE INDENT global rev_num NEWLINE global base_pos NEWLINE if ( num > 0 ) : NEWLINE INDENTINDENT reversDigits ( ( int ) ( num / 10 ) ) NEWLINE rev_num += ( num % 10 ) * base_pos NEWLINE base_pos *= 10 NEWLINE DEDENT return rev_num NEWLINE DEDENT num = 4562 NEWLINE print ( \"Reverse of no. is \" , reversDigits ( num ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4522_A_3080",
            "java_code": "class GFG { static String allBitsSetInTheGivenRange ( int n , int l , int r ) { int num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) ; int new_num = n & num ; if ( num == new_num ) return \"Yes\" ; return \"No\" ; } public static void main ( String [ ] args ) { int n = 22 ; int l = 2 , r = 3 ; System . out . print ( allBitsSetInTheGivenRange ( n , l , r ) ) ; } }",
            "python_code": "def allBitsSetInTheGivenRange ( n , l , r ) : NEWLINE INDENT num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) NEWLINE new_num = n & num NEWLINE if ( num == new_num ) : NEWLINE INDENTINDENT return \"Yes\" NEWLINE DEDENT return \"No\" NEWLINE DEDENT n , l , r = 22 , 2 , 3 NEWLINE print ( allBitsSetInTheGivenRange ( n , l , r ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3485_A_3081",
            "java_code": "import java . util . Collections ; import java . util . Arrays ; public class GfG { public static int getMinCost ( Integer arr [ ] , int n ) { int min_ele = Collections . min ( Arrays . asList ( arr ) ) ; return min_ele * ( n - 1 ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 4 , 2 , 5 } ; int n = arr . length ; System . out . println ( getMinCost ( arr , n ) ) ; } }",
            "python_code": "def getMinCost ( arr , n ) : NEWLINE INDENT min_ele = min ( arr ) NEWLINE return min_ele * ( n - 1 ) NEWLINE DEDENT arr = [ 4 , 2 , 5 ] NEWLINE n = len ( arr ) NEWLINE print ( getMinCost ( arr , n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4411_A_3082",
            "java_code": "import java . util . * ; class solution { static int findSum ( int N ) { return ( 2 * N * ( N + 1 ) * ( 4 * N + 17 ) + 54 * N ) / 6 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( findSum ( N ) ) ; } }",
            "python_code": "def findSum ( N ) : NEWLINE INDENT return ( 2 * N * ( N + 1 ) * ( 4 * N + 17 ) + 54 * N ) / 6 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT N = 4 NEWLINE print ( findSum ( N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_282_B_3083",
            "java_code": "import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;",
            "python_code": "a = int ( input ( ) ) sumA = 0 sumG = 0 s = '' for i in range ( a ) : c , d = map ( int , input ( ) . split ( ) ) if sumA + c - 500 > sumG : s += 'G' sumG += d else : s += 'A' sumA += c  if abs ( sumA - sumG ) > 500 : print ( - 1 ) else : print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_895_A_3084",
            "java_code": "import java . util . * ; public class Solution {  public static void main ( String [ ] args ) {",
            "python_code": "import osimport sysfrom math import * from collections import *  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_919_A_3085",
            "java_code": "import java . util . Scanner ;  public class Supermarket { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , m = in . nextInt ( ) ; double c = Double . POSITIVE_INFINITY ;  while ( n -- > 0 ) { double a = in . nextDouble ( ) , b = in . nextDouble ( ) ; if ( a / b < c ) { c = a / b ; } } in . close ( ) ; System . out . println ( c * m ) ; } }",
            "python_code": "import sys  def main ( ) : inp = sys . stdin . read ( ) . strip ( ) . split ( '\\n' ) n , m = map ( int , inp [ 0 ] . split ( ) ) t = [ ] for s in inp [ 1 : ] : a , b = map ( int , s . split ( ) ) t . append ( a / b * m ) return min ( t ) print ( main ( ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1505_B_3086",
            "java_code": "import java . util . * ; public class root { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; System . out . println ( ( n - 1 ) % 9 + 1 ) ; } }",
            "python_code": "n = int ( input ( ) ) NEWLINE if ( n <= 9 ) : NEWLINE INDENT print ( n ) NEWLINE DEDENT else : NEWLINE INDENT while ( n > 9 ) : NEWLINE INDENTINDENT m = n NEWLINE s = 0 NEWLINE while ( m != 0 ) : NEWLINE INDENTINDENTINDENT a = m % 10 NEWLINE s += a NEWLINE m = m // 10 NEWLINE DEDENT n = s NEWLINE DEDENT print ( s ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2035_A_3087",
            "java_code": "class GFG { static int minPower ( int n , int x ) { if ( x == 1 ) return n ; int ans = 0 ; while ( n > 0 ) { ans += ( n % x ) ; n /= x ; } return ans ; } public static void main ( String [ ] args ) { int n = 5 , x = 3 ; System . out . println ( minPower ( n , x ) ) ; } }",
            "python_code": "def minPower ( n , x ) : NEWLINE INDENT if ( x == 1 ) : NEWLINE INDENTINDENT return n NEWLINE DEDENT ans = 0 NEWLINE while ( n > 0 ) : NEWLINE INDENTINDENT ans += ( n % x ) NEWLINE n //= x NEWLINE DEDENT return ans NEWLINE DEDENT n = 5 NEWLINE x = 3 NEWLINE print ( minPower ( n , x ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1037_A_3088",
            "java_code": "import java . util . * ; import java . io . * ; public class Main { public static int mod = 1000000007 ; public static void solve ( InputReader in ) { int n = in . readInt ( ) ; int ans = 0 ; while ( n > 1 ) { ans ++ ; n /= 2 ; } System . out . println ( ans + 1 ) ; } public static void main ( String [ ] args ) {",
            "python_code": "def solve ( num ) : ans = 0 power = 0 while ans < num : ans += 2 ** power power += 1 return power print ( solve ( int ( input ( ) ) ) )  NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_931_A_3089",
            "java_code": "  import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner puttingvaluesinside = new Scanner ( System . in ) ; int a = puttingvaluesinside . nextInt ( ) ; int b = puttingvaluesinside . nextInt ( ) ; int diff = ( int ) Math . abs ( a - b ) ; int step = diff / 2 ; step *= step + 1 ; if ( diff % 2 == 1 ) step += diff / 2 + 1 ; System . out . println ( step ) ; } }",
            "python_code": "a = int ( input ( ) ) b = int ( input ( ) )  if a < b : small = a large = b d = b - aelse : small = b large = a d = a - b  center = small + d // 2  s1 = 0 s2 = 0  for i in range ( 1 , ( d // 2 ) + 1 ) : s1 += i  for i in range ( 1 , ( large - center ) + 1 ) : s2 += i  print ( s1 + s2 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_358_A_3090",
            "java_code": "import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class A358 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;",
            "python_code": "n = int ( input ( ) )  arr = list ( map ( int , input ( ) . split ( ) ) ) for i in range ( n - 1 ) : for j in range ( i + 1 , n - 1 ) : a = min ( arr [ i ] , arr [ i + 1 ] ) b = max ( arr [ i ] , arr [ i + 1 ] ) c = min ( arr [ j ] , arr [ j + 1 ] ) d = max ( arr [ j ] , arr [ j + 1 ] ) if a < c < b < d or c < a < d < b : print ( \"yes\" ) exit ( ) print ( 'no' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1987_A_3091",
            "java_code": "import java . io . * ; class GFG { static int countBits ( int n ) { int count = 0 ; while ( n > 0 ) { count ++ ; n >>= 1 ; } return count ; } public static void main ( String [ ] args ) { int n = 32 ; System . out . println ( \"Minimum value of K is = \" + countBits ( n ) ) ; } }",
            "python_code": "def countBits ( n ) : NEWLINE INDENT count = 0 ; NEWLINE while ( n ) : NEWLINE INDENTINDENT count += 1 ; NEWLINE n >>= 1 ; NEWLINE DEDENT return count ; NEWLINE DEDENT n = 32 ; NEWLINE print ( \"Minimum value of K is =\" , countBits ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4511_A_3092",
            "java_code": "class GFG { static int swapBits ( int x , int p1 , int p2 , int n ) { int set1 = ( x > > p1 ) & ( ( 1 << n ) - 1 ) ; int set2 = ( x > > p2 ) & ( ( 1 << n ) - 1 ) ; int xor = ( set1 ^ set2 ) ; xor = ( xor << p1 ) | ( xor << p2 ) ; int result = x ^ xor ; return result ; } public static void main ( String [ ] args ) { int res = swapBits ( 28 , 0 , 3 , 2 ) ; System . out . println ( \"Result = \" + res ) ; } }",
            "python_code": "def swapBits ( x , p1 , p2 , n ) : NEWLINE INDENT set1 = ( x >> p1 ) & ( ( 1 << n ) - 1 ) NEWLINE set2 = ( x >> p2 ) & ( ( 1 << n ) - 1 ) NEWLINE xor = ( set1 ^ set2 ) NEWLINE xor = ( xor << p1 ) | ( xor << p2 ) NEWLINE result = x ^ xor NEWLINE return result NEWLINE DEDENT res = swapBits ( 28 , 0 , 3 , 2 ) NEWLINE print ( \"Result =\" , res ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_2615_A_3093",
            "java_code": "class GFG { static int maxHandshake ( int n ) { return ( n * ( n - 1 ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( maxHandshake ( n ) ) ; } }",
            "python_code": "def maxHandshake ( n ) : NEWLINE INDENT return int ( ( n * ( n - 1 ) ) / 2 ) NEWLINE DEDENT n = 10 NEWLINE print ( maxHandshake ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_201_A_3094",
            "java_code": " import java . util . Scanner ;  public class A201 { public static void main ( String [ ] args ) { new A201 ( ) . run ( ) ; }  private void run ( ) { Scanner scanner = new Scanner ( System . in ) ; int x = scanner . nextInt ( ) ;  int r2 = x * 2 - 1 ;  int i = 1 ; while ( i * i < r2 ) { i += 2 ; }  if ( x == 3 ) { System . out . println ( 5 ) ; } else { System . out . println ( i ) ; }  } }",
            "python_code": "x = int ( input ( ) )  if x == 3 : print ( 5 ) exit ( )  for i in range ( 50 ) : if ( 4 * i * i + 4 * i + 3 ) // 2 >= x : print ( 2 * i + 1 ) break NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3079_A_3095",
            "java_code": "class GFG { static long mulmod ( long a , long b , long mod ) { long res = 0 ; a = a % mod ; while ( b > 0 ) { if ( b % 2 == 1 ) { res = ( res + a ) % mod ; } a = ( a * 2 ) % mod ; b /= 2 ; } return res % mod ; } public static void main ( String [ ] args ) { long a = 9223372036854775807L , b = 9223372036854775807L ; System . out . println ( mulmod ( a , b , 100000000000L ) ) ; } }",
            "python_code": "def mulmod ( a , b , mod ) : NEWLINE INDENT res = 0 ; NEWLINE a = a % mod ; NEWLINE while ( b > 0 ) : NEWLINE INDENTINDENT if ( b % 2 == 1 ) : NEWLINE INDENTINDENTINDENT res = ( res + a ) % mod ; NEWLINE DEDENT a = ( a * 2 ) % mod ; NEWLINE b //= 2 ; NEWLINE DEDENT return res % mod ; NEWLINE DEDENT a = 9223372036854775807 ; NEWLINE b = 9223372036854775807 ; NEWLINE print ( mulmod ( a , b , 100000000000 ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_285_B_3096",
            "java_code": "import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {",
            "python_code": "n , s , t = map ( int , input ( ) . split ( ) ) P = list ( map ( int , input ( ) . split ( ) ) ) operations = 0 L = list ( range ( 1 , n + 1 ) ) for i in range ( n ) : if s == t : print ( i ) exit ( ) s = P [ s - 1 ] print ( - 1 )     NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4747_A_3097",
            "java_code": "class GFG { static int fun ( int n ) { return n & ( n - 1 ) ; } public static void main ( String arg [ ] ) { int n = 7 ; System . out . print ( \"The number after unsetting \" + \"the rightmost set bit \" + fun ( n ) ) ; } }",
            "python_code": "def fun ( n ) : NEWLINE INDENT return n & ( n - 1 ) NEWLINE DEDENT n = 7 NEWLINE print ( \"The number after unsetting the rightmost set bit\" , fun ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_510_A_3098",
            "java_code": "import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; for ( int i = 1 ; i <= a ; i ++ ) { if ( i % 2 == 0 ) { if ( i % 4 == 0 ) { System . out . print ( \"#\" ) ; for ( int j = 0 ; j < b - 1 ; j ++ ) { System . out . print ( \".\" ) ; } } else if ( i % 2 == 0 ) {",
            "python_code": "a , b = map ( int , input ( ) . split ( ) ) od = \"\" evf = \"\" evl = \"\" sw = Truefor i in range ( b ) : od += \"#\" if i == b - 1 : evl += \"#\" else : evl += \".\" if i == 0 : evf += \"#\" else : evf += \".\" for i in range ( a ) : if i % 2 == 0 : print ( od ) else : if sw : print ( evl ) sw = False else : print ( evf ) sw = True NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5100_A_3099",
            "java_code": "class GFG { static int getHCF ( int x , int y ) { int minimum = Math . min ( x , y ) ; if ( x % minimum == 0 && y % minimum == 0 ) return minimum ; for ( int i = minimum / 2 ; i >= 2 ; i -- ) { if ( x % i == 0 && y % i == 0 ) return i ; } return 1 ; } public static void main ( String [ ] args ) { int x = 16 , y = 32 ; System . out . println ( getHCF ( x , y ) ) ; } }",
            "python_code": "def getHCF ( x , y ) : NEWLINE INDENT minimum = min ( x , y ) NEWLINE if ( x % minimum == 0 and y % minimum == 0 ) : NEWLINE INDENTINDENT return minimum NEWLINE DEDENT for i in range ( minimum // 2 , 1 , - 1 ) : NEWLINE INDENTINDENT if ( x % i == 0 and y % i == 0 ) : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT DEDENT return 1 NEWLINE DEDENT x , y = 16 , 32 NEWLINE print ( getHCF ( x , y ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1398_A_3100",
            "java_code": "import java . util . * ; class GFG { static int getHermiteNumber ( int n ) { if ( n == 0 ) return 1 ; else if ( n == 1 ) return 1 ; else return - 2 * ( n - 1 ) * getHermiteNumber ( n - 2 ) ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( getHermiteNumber ( n ) ) ; } }",
            "python_code": "def getHermiteNumber ( n ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 1 NEWLINE DEDENT if n == 1 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT else : NEWLINE INDENTINDENT return ( - 2 * ( n - 1 ) * getHermiteNumber ( n - 2 ) ) NEWLINE DEDENT DEDENT n = 6 NEWLINE print ( getHermiteNumber ( n ) ) ; NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_175_A_3101",
            "java_code": "class GFG { static long difference ( long M , long N ) { return M + N ; } public static void main ( String [ ] args ) { long M = 999999999 ; long N = 1000000000 ; System . out . print ( difference ( M , N ) + \"\\n\" ) ; } }",
            "python_code": "def difference ( M , N ) : NEWLINE INDENT return M + N NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT M = 999999999 NEWLINE N = 1000000000 NEWLINE print ( difference ( M , N ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_339_A_3102",
            "java_code": "public class GFG { static int Rank ( int Edges , int Vertices ) { int result = 0 ; result = Edges - Vertices + 1 ; return result ; } public static void main ( String [ ] args ) { int Edges = 7 , Vertices = 5 ; System . out . println ( \"Circuit Rank = \" + Rank ( Edges , Vertices ) ) ; } }",
            "python_code": "def Rank ( Edges , Vertices ) : NEWLINE INDENT result = Edges - Vertices + 1 NEWLINE return result NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT Edges , Vertices = 7 , 5 NEWLINE print ( \"Circuit Rank =\" , Rank ( Edges , Vertices ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3541_A_3103",
            "java_code": "class GFG { static int maxPrimes ( int n ) { return n / 2 ; } public static void main ( String [ ] args ) { int n = 17 ; System . out . println ( maxPrimes ( n ) ) ; } }",
            "python_code": "def maxPrmimes ( n ) : NEWLINE INDENT return n // 2 NEWLINE DEDENT n = 17 NEWLINE print ( maxPrmimes ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_612_B_3104",
            "java_code": "import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; ",
            "python_code": "n = int ( input ( ) ) lst = list ( map ( int , input ( ) . strip ( ) . split ( ' ' ) ) ) l = [ ] for j in range ( n ) : l . append ( [ lst [ j ] , j ] ) l . sort ( key = lambda x : x [ 0 ] ) c = 0 for i in range ( 1 , n ) : c += abs ( l [ i ] [ 1 ] - l [ i - 1 ] [ 1 ] ) print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_260_A_3105",
            "java_code": "import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; public static void main ( String args [ ] ) throws IOException { int t = 1 ;",
            "python_code": "a , b , n = map ( int , input ( ) . split ( ) ) x = str ( a ) flag = 0 for i in range ( 10 ) : if int ( str ( a ) + str ( i ) ) % b == 0 : x += str ( i ) flag = 1 breakif flag == 0 : print ( - 1 ) else : for i in range ( n - 1 ) : x += \"0\" print ( x ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5024_A_3106",
            "java_code": "class GFG { static void findNthTerm ( int n ) { if ( n % 2 == 0 ) { n = n / 2 ; n = 2 * ( n - 1 ) ; System . out . println ( n / 2 ) ; } else { n = ( n / 2 ) + 1 ; n = 2 * ( n - 1 ) ; System . out . println ( n ) ; } } public static void main ( String args [ ] ) { int X = 10 ; findNthTerm ( X ) ; X = 7 ; findNthTerm ( X ) ; } }",
            "python_code": "def findNthTerm ( n ) : NEWLINE INDENT if ( n % 2 == 0 ) : NEWLINE INDENTINDENT n = n // 2 NEWLINE n = 2 * ( n - 1 ) NEWLINE print ( n // 2 ) NEWLINE DEDENT else : NEWLINE INDENTINDENT n = ( n // 2 ) + 1 NEWLINE n = 2 * ( n - 1 ) NEWLINE print ( n ) NEWLINE DEDENT DEDENT if __name__ == \"__main__\" : NEWLINE INDENT X = 10 NEWLINE findNthTerm ( X ) ; NEWLINE X = 7 ; NEWLINE findNthTerm ( X ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_194_B_3107",
            "java_code": "import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . Comparator ; import java . util . StringTokenizer ;",
            "python_code": "input ( ) a = [ int ( x ) for x in input ( ) . split ( ) ] for n in a : i = 1 while i * n * ( n + 1 ) % ( n * 4 ) != 0 : i += 1 print ( i * n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1382_B_3108",
            "java_code": " import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;",
            "python_code": "for _ in range ( int ( input ( ) ) ) : n = int ( input ( ) ) arr = [ int ( x ) for x in input ( ) . split ( ) ] k = 0 while k < n and arr [ k ] == 1 : k += 1 if ( k % 2 == 1 ) : if n == k : print ( \"First\" ) else : print ( \"Second\" ) else : if n == k : print ( \"Second\" ) else : print ( \"First\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1487_B_3109",
            "java_code": "import java . util . * ; public class CodeForces1487B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = input . nextInt ( ) ; int k = input . nextInt ( ) - 1 ; if ( n % 2 == 0 ) { System . out . println ( ( k % n ) + 1 ) ; } else { int m = k / ( n / 2 ) ; System . out . println ( ( k + m ) % n + 1 ) ; } } } }",
            "python_code": "for __ in range ( int ( input ( ) ) ) : n , k = [ int ( e ) for e in input ( ) . split ( ) ] ; k -= 1 ; print ( ( k + n % 2 * k // ( n // 2 ) ) % n + 1 ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_500_B_3110",
            "java_code": "import java . util . * ; import java . io . * ; public class Solution { public static class Suffix implements Comparable < Suffix > { int index ; int rank ; int next ; public Suffix ( int ind , int r , int nr ) { index = ind ; rank = r ; next = nr ; }",
            "python_code": "import sys , os , ioimport math , bisect , operatorinf , mod = float ( 'inf' ) , 10 ** 9 + 7 NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1163_A_3111",
            "java_code": "import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int res = 0 ; if ( m == 0 || m == 1 ) res = 1 ; else if ( m <= n / 2 ) res = m ; else res = n - m ; System . out . println ( res ) ; } }",
            "python_code": "from math import ceiln , m = list ( map ( int , input ( ) . split ( ) ) ) if m == 0 : print ( 1 ) elif m <= ( n // 2 ) : print ( m ) else : if n % 2 != 0 and m == ceil ( n / 2 ) : print ( n // 2 ) else : print ( n - m ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_851_A_3112",
            "java_code": "import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int k = s . nextInt ( ) ; int t = s . nextInt ( ) ; int count = 0 ; if ( t <= k ) count = t ; else if ( t > k && t < n ) count = k ; else if ( t >= n ) { count = k - ( t - n ) ; } else if ( n == k && k == t ) count = n ; System . out . println ( count ) ; } }",
            "python_code": "n , k , t = map ( int , input ( ) . split ( ) )           if t < k : print ( t ) elif t > n : NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4734_A_3113",
            "java_code": "class GFG { static int CountSetBits ( int n ) { if ( n == 0 ) return 0 ; if ( ( n & 1 ) == 1 ) return 1 + CountSetBits ( n > > 1 ) ; else return CountSetBits ( n > > 1 ) ; } public static void main ( String [ ] args ) { int n = 21 ; System . out . println ( CountSetBits ( n ) ) ; } }",
            "python_code": "def CountSetBits ( n ) : NEWLINE INDENT if ( n == 0 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT if ( ( n & 1 ) == 1 ) : NEWLINE INDENTINDENT return 1 + CountSetBits ( n >> 1 ) ; NEWLINE DEDENT else : NEWLINE INDENTINDENT return CountSetBits ( n >> 1 ) ; NEWLINE DEDENT DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 21 ; NEWLINE print ( CountSetBits ( n ) ) ; NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_918_A_3114",
            "java_code": "import java . io . * ; class GFG { static long gcd ( long a , long b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static long powGCD ( long a , long n , long b ) { for ( int i = 0 ; i < n ; i ++ ) a = a * a ; return gcd ( a , b ) ; } public static void main ( String [ ] args ) { long a = 10 , b = 5 , n = 2 ; System . out . println ( powGCD ( a , n , b ) ) ; } }",
            "python_code": "def gcd ( a , b ) : NEWLINE INDENT if ( a == 0 ) : NEWLINE INDENTINDENT return b NEWLINE DEDENT return gcd ( b % a , a ) NEWLINE DEDENT def powGCD ( a , n , b ) : NEWLINE INDENT for i in range ( 0 , n + 1 , 1 ) : NEWLINE INDENTINDENT a = a * a NEWLINE DEDENT return gcd ( a , b ) NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT a = 10 NEWLINE b = 5 NEWLINE n = 2 NEWLINE print ( powGCD ( a , n , b ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3643_A_3115",
            "java_code": "import java . io . * ; class GFG { static float findRadiusOfcircumcircle ( float n , float a ) { if ( n < 0 || a < 0 ) return - 1 ; float radius = ( float ) ( a / Math . sqrt ( 2 - ( 2 * Math . cos ( 360 / n ) ) ) ) ; return radius ; } public static void main ( String [ ] args ) { float n = 5 , a = 6 ; System . out . println ( findRadiusOfcircumcircle ( n , a ) ) ; } }",
            "python_code": "from math import * NEWLINE def findRadiusOfcircumcircle ( n , a ) : NEWLINE INDENT if n < 0 or a < 0 : NEWLINE INDENTINDENT return - 1 NEWLINE DEDENT radius = a / sqrt ( 2 - ( 2 * cos ( 360 / n ) ) ) NEWLINE return radius NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n , a = 5 , 6 NEWLINE print ( round ( findRadiusOfcircumcircle ( n , a ) , 5 ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_791_A_3116",
            "java_code": "import java . util . Scanner ;  public class BearAndBigBrother { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; short a = scanner . nextByte ( ) , b = scanner . nextByte ( ) ; byte count = 0 ; while ( a <= b ) { count ++ ; a *= 3 ; b *= 2 ; } System . out . println ( count ) ; } }",
            "python_code": "num_array = input ( ) . split ( ) b = int ( num_array [ 0 ] ) m = int ( num_array [ 1 ] ) c = 0 while ( b <= m ) : b = b * 3 m = m * 2 c += 1 print ( c ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3501_A_3117",
            "java_code": "class GFG { static void printFun ( int test ) { if ( test < 1 ) return ; else { System . out . printf ( \"%d \" , test ) ; printFun ( test - 1 ) ; System . out . printf ( \"%d \" , test ) ; return ; } } public static void main ( String [ ] args ) { int test = 3 ; printFun ( test ) ; } }",
            "python_code": "def printFun ( test ) : NEWLINE INDENT if ( test < 1 ) : NEWLINE INDENTINDENT return NEWLINE DEDENT else : NEWLINE INDENTINDENT print ( test , end = \" \" ) NEWLINE printFun ( test - 1 ) NEWLINE print ( test , end = \" \" ) NEWLINE return NEWLINE DEDENT DEDENT test = 3 NEWLINE printFun ( test ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_270_A_3118",
            "java_code": "import java . util . Scanner ;  public class n270A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int a ; for ( int i = 0 ; i < n ; i ++ ) { a = scanner . nextInt ( ) ; if ( 360 % ( 180 - a ) == 0 ) System . out . println ( \"YES\" ) ; else System . out . println ( \"NO\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) for i in range ( n ) : a = int ( input ( ) ) x = 360 / ( 180 - a ) if x == int ( x ) : print ( 'YES' ) else : print ( 'NO' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_755_B_3119",
            "java_code": "import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ; public class Cat_Furrier { public static void main ( String [ ] args ) {",
            "python_code": "temp = input ( ) . split ( \" \" ) n = int ( temp [ 0 ] ) m = int ( temp [ 1 ] )  nli = [ ] mli = [ ]  for _ in range ( n ) : nli . append ( input ( ) )  for _ in range ( m ) : mli . append ( input ( ) )  res = n - mcount = 0 for x in mli : if x in nli : count += 1  res = res + ( count % 2 ) if res > 0 : print ( \"YES\" )  else : print ( \"NO\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_740_A_3120",
            "java_code": "import java . util . * ; class GFG { static double countdigits ( int n , int k ) { if ( n == 0 ) return 0 ; int digit = n % 10 ; if ( digit == k ) return 1 + countdigits ( n / 10 , k ) ; return countdigits ( n / 10 , k ) ; } public static void main ( String [ ] args ) { int n = 1000 ; int k = 0 ; System . out . println ( countdigits ( n , k ) ) ; } }",
            "python_code": "def countdigits ( n , k ) : NEWLINE INDENT if n == 0 : NEWLINE INDENTINDENT return 0 NEWLINE DEDENT digit = n % 10 NEWLINE if digit == k : NEWLINE INDENTINDENT return 1 + countdigits ( n / 10 , k ) NEWLINE DEDENT return countdigits ( n / 10 , k ) NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 1000 ; NEWLINE k = 0 ; NEWLINE print ( countdigits ( n , k ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1158_A_3121",
            "java_code": "import java . util . * ; public class Main { final static int maxn = ( int ) 1e5 + 10 ; static int b [ ] = new int [ maxn ] ; static int g [ ] = new int [ maxn ] ; public static void main ( String args [ ] ) {",
            "python_code": "I = lambda : map ( int , input ( ) . split ( ) ) n , m = I ( ) a , b = sorted ( I ( ) , reverse = 1 ) , sorted ( I ( ) ) s = sum ( b ) for i in range ( 1 , n ) : s += a [ i ] * mif a [ 0 ] > min ( b ) : s = - 1 elif a [ 0 ] != b [ 0 ] : s += a [ 0 ] - a [ 1 ] print ( s ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3368_A_3122",
            "java_code": "public class minFlips { static int findFlips ( String str , int n ) { char last = ' ' ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( last != str . charAt ( i ) ) res ++ ; last = str . charAt ( i ) ; } return res / 2 ; } public static void main ( String [ ] args ) { String str = \"00011110001110\" ; int n = str . length ( ) ; System . out . println ( findFlips ( str , n ) ) ; } }",
            "python_code": "def findFlips ( str , n ) : NEWLINE INDENT last = ' ' NEWLINE res = 0 NEWLINE for i in range ( n ) : NEWLINE INDENTINDENT if ( last != str [ i ] ) : NEWLINE INDENTINDENTINDENT res += 1 NEWLINE DEDENT last = str [ i ] NEWLINE DEDENT return res // 2 NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT str = \"00011110001110\" NEWLINE n = len ( str ) NEWLINE print ( findFlips ( str , n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_552_B_3123",
            "java_code": "import java . util . * ;  public class a { public static void main ( String [ ] arg ) { Scanner in = new Scanner ( System . in ) ; long x = in . nextLong ( ) ; long at = 0 , aux = x , u = 1 , cnt = 1 ; while ( aux >= 10 ) { at += x - u ; aux /= 10 ; u *= 10 ; cnt ++ ; } at += ( x - u + cnt ) ;  System . out . printf ( \"%d\\n\" , at ) ; } }",
            "python_code": "n = int ( input ( ) ) p = ni = 1 l = 1 sd = 0 s = 0j = 1 while ( n > 9 ) : n = int ( n / 10 ) i *= 10 l += 1 if p > 9 : while i != 1 : s = p - i if j == 1 : s = s + 1 sd += s * l p = i i = i / 10 l -= 1 j += 1 p = 9 print ( int ( p + sd ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1036_A_3124",
            "java_code": "import java . util . * ; import java . io . * ; import java . math . * ; public class Main {",
            "python_code": "n , k = map ( int , input ( ) . split ( ) ) print ( ( k + n - 1 ) // n ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_1740_A_3125",
            "java_code": "import java . util . * ; import java . lang . * ; public class GfG { public static int first ( int a , int b , int c ) { a %= b ; for ( int i = 1 ; i <= b ; i ++ ) { a = a * 10 ; if ( a / b == c ) return i ; a %= b ; } return - 1 ; } public static void main ( String argc [ ] ) { int a = 1 , b = 4 , c = 5 ; System . out . println ( first ( a , b , c ) ) ; } }",
            "python_code": "def first ( a , b , c ) : NEWLINE INDENT a %= b NEWLINE for i in range ( 1 , b + 1 ) : NEWLINE INDENTINDENT a = a * 10 NEWLINE if int ( a / b ) == c : NEWLINE INDENTINDENTINDENT return i NEWLINE DEDENT a %= b NEWLINE DEDENT return - 1 NEWLINE DEDENT a = 1 NEWLINE b = 4 NEWLINE c = 5 NEWLINE print ( first ( a , b , c ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_56_A_3126",
            "java_code": "import java . util . * ; public class Bar {  public static void main ( String [ ] args ) {",
            "python_code": "arr = \"ABSINTH, BEER, BRANDY, CHAMPAGNE, GIN, RUM, SAKE, TEQUILA, VODKA, WHISKEY, WINE\" . split ( ', ' ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4570_A_3127",
            "java_code": "class GFG { static int minAbsDiff ( int n ) { int mod = n % 4 ; if ( mod == 0 || mod == 3 ) { return 0 ; } return 1 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( minAbsDiff ( n ) ) ; } }",
            "python_code": "def minAbsDiff ( n ) : NEWLINE INDENT mod = n % 4 ; NEWLINE if ( mod == 0 or mod == 3 ) : NEWLINE INDENTINDENT return 0 ; NEWLINE DEDENT return 1 ; NEWLINE DEDENT if __name__ == \"__main__\" : NEWLINE INDENT n = 5 ; NEWLINE print ( minAbsDiff ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1391_A_3128",
            "java_code": "import java . util . * ; public class Main { static Scanner in = new Scanner ( System . in ) ; static int N = 110 ; public static void main ( String [ ] args ) { int t = in . nextInt ( ) ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; for ( int i = n ; i >= 1 ; i -- ) System . out . print ( i + \" \" ) ; System . out . println ( ) ; } } }",
            "python_code": "cases = int ( input ( ) ) NEWLINE while cases : NEWLINE INDENT cases -= 1 NEWLINE n = int ( input ( ) ) NEWLINE print ( * list ( range ( n , 0 , - 1 ) ) ) NEWLINE NL DEDENT ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_5014_A_3129",
            "java_code": "class GFG { static int nthTerm ( int N ) { return ( 2 * N + 3 ) * ( 2 * N + 3 ) - 2 * N ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }",
            "python_code": "def nthTerm ( N ) : NEWLINE INDENT return ( ( 2 * N + 3 ) * ( 2 * N + 3 ) - 2 * N ) ; NEWLINE DEDENT n = 4 NEWLINE print ( nthTerm ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_765_A_3130",
            "java_code": "import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; String h = sc . next ( ) ; String [ ] d = new String [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { d [ i ] = sc . next ( ) ; } if ( t % 2 == 0 ) { System . out . println ( \"home\" ) ; } else { System . out . println ( \"contest\" ) ; } } }",
            "python_code": "n = int ( input ( ) ) home = str ( input ( ) ) for i in range ( n ) : li1 = list ( map ( str , input ( ) . split ( ) ) ) if n % 2 == 0 : print ( \"home\" ) else : print ( \"contest\" ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_3001_A_3131",
            "java_code": "import java . io . * ; class GFG { static long calculateSum ( int n ) { long sum = 0 ; for ( int row = 0 ; row < n ; row ++ ) { sum = sum + ( 1 << row ) ; } return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( \"Sum of all elements:\" + calculateSum ( n ) ) ; } }",
            "python_code": "def calculateSum ( n ) : NEWLINE INDENT sum = 0 NEWLINE for row in range ( n ) : NEWLINE INDENTINDENT sum = sum + ( 1 << row ) NEWLINE DEDENT return sum NEWLINE DEDENT n = 10 NEWLINE print ( \"Sum of all elements:\" , calculateSum ( n ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_CodeForces_1445_B_3132",
            "java_code": "import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; System . out . println ( Math . max ( ( a + b ) , ( c + d ) ) ) ; } } }",
            "python_code": "for _ in range ( int ( input ( ) ) ) : a , b , c , d = map ( int , input ( ) . split ( ) ) NEWLINE print ( max ( ( a + b ) , ( c + d ) ) ) NEWLINE NL ENDMARKER"
        },
        {
            "id": "java-python_GeeksForGeeks_4688_A_3133",
            "java_code": "import java . util . * ; import java . lang . * ; class GFG { public static int summation ( int n ) { return ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( summation ( n ) ) ; } }",
            "python_code": "def summation ( n ) : NEWLINE INDENT return ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 NEWLINE DEDENT if __name__ == '__main__' : NEWLINE INDENT n = 10 NEWLINE print ( summation ( n ) ) NEWLINE NL DEDENT ENDMARKER"
        }
    ]
}