import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*;import java.util.stream.IntStream;import javafx.util.Pair; public class Main{     static void sort(long a[])    {        Random ran = new Random();        for (int i = 0; i < a.length; i++) {            int r = ran.nextInt(a.length);            long temp = a[r];            a[r] = a[i];            a[i] = temp;        }         Arrays.sort(a);    }     public static void main(String[] args) throws IOException    {        Scanner input = new Scanner(System.in);        int t1,t2,t3,t4,t5;        t1 = input.nextInt();        t2 = input.nextInt();        t3 = input.nextInt();        t4 = input.nextInt();        t5 = input.nextInt();        int result = t1+t2+t3+t4+t5;     int min = result;      TreeMap<Integer,Integer> map = new TreeMap<>();      map.put(t1,map.getOrDefault(t1, 0)+1);      map.put(t2,map.getOrDefault(t2, 0)+1);      map.put(t3,map.getOrDefault(t3, 0)+1);      map.put(t4,map.getOrDefault(t4, 0)+1);      map.put(t5,map.getOrDefault(t5, 0)+1);            for (Map.Entry<Integer, Integer> entry : map.entrySet()) {            Integer key = entry.getKey();            Integer value = entry.getValue();            if(value==2)            {                min = Math.min(min, result-key*2);            }            else if(value>=3)            {                min = Math.min(min, result-key*3);            }                    }            System.out.println(min);    }      }
