import sysimport mathclass DictList(dict):    def __setitem__(self, key, value):        try:            # Assumes there is a list on the key            self[key].append(value)        except KeyError: # If it fails, because there is no key            super(DictList, self).__setitem__(key, value)        except AttributeError: # If it fails because it is not a list            super(DictList, self).__setitem__(key, [self[key], value])Â def fn(n,m,a):        if n>=3*m:        for i in range(3*m):            a[i] = [a[i], i%3 + 1]                a.sort()        for i in range(n):            print(a[i][1], end=' ')                else:        m1 = [[0]*3 for i in range(m)]        k=0        for i in range(m):            for j in range(3):                m1[i][j]= a[k]                k=k+1        c= dict()        k=0        for i in range(m):            for j in range(3):                if m1[i][j] in c:                    if (j==0):                        k1=1                        k2=2                    elif (j==1):                        k1=0                        k2=2                    elif (j==2):                        k1=0                        k2=1                    c[m1[i][k1]] = c[m1[i][j]]+1                    c[m1[i][k2]] = c[m1[i][j]]+2                                        break                else:                    c[m1[i][j]] =  j%3 + 1        for i in range(n):            if c[i+1]>3:                c[i+1]= c[i+1]%3            if c[i+1]==0:                c[i+1]=3            print(c[i+1],end=' ')                                            if __name__ == '__main__':        input = sys.stdin.read()    data = list(map(int, input.split()))    n = (data[0])    m =data[1]    a= data[2:]    (fn(n,m,a))
