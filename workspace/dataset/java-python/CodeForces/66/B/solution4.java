import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}		public static void main(String[] args){				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				int n = io.nextInt();				int ht[] = new int[n];				for(int i = 0; i < n; i++) {			ht[i] = io.nextInt();		}				int max_range = 1;				for(int i = 0; i < n; i++) {						int lr = left_range(ht, i);			int rr = right_range(ht, i);						max_range = Math.max(lr + rr + 1, max_range);		}		System.out.println(max_range);	}		static int left_range(int ht[], int i) {				int count = 0;		while(i > 0) {			if(ht[i - 1] <= ht[i]) {				count++;				i--;			}			else {				break;			}		}				return count;	}		static int right_range(int ht[], int i) {				int count = 0;				while(i < ht.length - 1) {						if(ht[i + 1] <= ht[i]) {				count++;				i++;			}			else {				break;			}		}				return count;	}}
