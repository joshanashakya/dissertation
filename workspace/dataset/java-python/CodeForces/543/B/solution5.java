 import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.util.ArrayList;import java.util.Arrays; public class s {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        String[] in = br.readLine().split(" ");        int n = Integer.parseInt(in[0]);        int m = Integer.parseInt(in[1]);        ArrayList<Integer>[] lists = new ArrayList[n];        for (int i = 0; i < lists.length; i++) {            lists[i] = new ArrayList<>();        }        for (int i = 0; i < m; i++) {            String[] city = br.readLine().split(" ");            int c1 = Integer.parseInt(city[0]) - 1 ;            int c2 = Integer.parseInt(city[1]) - 1 ;            lists[c1].add(c2);            lists[c2].add(c1);        }        String[] q1 = br.readLine().split(" ");        int s1 = Integer.parseInt(q1[0]) - 1;        int t1 = Integer.parseInt(q1[1]) - 1;        int l1 = Integer.parseInt(q1[2]);        String[] q2 = br.readLine().split(" ");        int s2 = Integer.parseInt(q2[0]) - 1;        int t2 = Integer.parseInt(q2[1]) - 1;        int l2 = Integer.parseInt(q2[2]);        int[] queue = new int[1000000];        int[][] len = new int[n][n];         for (int i = 0; i < n; i++) {            Arrays.fill(len[i], Integer.MAX_VALUE);            len[i][i] = 0;            int head = 0,tail = 0;            queue[tail++] = i;            while (head < tail) {                int f = queue[head++];                for (int to : lists[f]) {                    if (len[i][to] > len[i][f] + 1) {                        len[i][to] = len[i][f] + 1;                        queue[tail++] = to;                    }                }            }        }        int ac = 0;        int ans = 10000000;        if (len[s1][t1] <= l1 && len[s2][t2] <= l2) {            ans = Math.min(ans, len[s1][t1] + len[s2][t2]);        }         for (int i = 0; i < n; i++) {            for (int j = 0; j < n; j++) {                int l = len[i][j];                 int d1 = len[s1][i] + len[t1][j];                int d2 = len[s2][i] + len[t2][j];                if (d1 + l <= l1 && d2 + l <= l2)                    ans = Math.min(ans, d1 + d2 + l);                 d1 = len[s1][i] + len[t1][j];                d2 = len[s2][j] + len[t2][i];                if (d1 + l <= l1 && d2 + l <= l2)                    ans = Math.min(ans, d1 + d2 + l);            }        }        System.out.println(ans == 10000000 ? -1 : m - ans);    }} 				     				  	 		 	  			  			
