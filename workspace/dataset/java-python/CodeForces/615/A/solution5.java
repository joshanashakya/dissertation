import java.io.*;import java.util.*; public class Prb2 {     static PrintWriter pw;    static Scanner sc;    static long mod = 1000000000+7;     static void print(final String arg) {      pw.write(arg);      pw.flush();          }          static int ni(){        return sc.nextInt();    }    static long nl(){        return sc.nextLong();    }     static void runFile() throws Exception {       sc = new Scanner(new FileReader("input.txt"));      pw = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));    }     static void runIo() throws Exception  {       pw =new PrintWriter(System.out);      sc = new Scanner(System.in);    }         static boolean sv[] = new boolean[1000002];     static void seive() {        //true -> not prime        // false->prime         sv[0] = sv[1] = true;         sv[2] = false;        for(int i = 0; i< sv.length; i++) {            if( !sv[i] && (long)i*(long)i < sv.length ) {                for ( int j = i*i; j<sv.length ; j += i ) {                                    sv[j] = true;                }            }        }     }        static class Pair {        int a ,b;        Pair(int a, int b){            this.a = a;            this.b = b;        }    }            public static void main(String[] args)  throws Exception {          // runFile();         runIo();            // int t =  sc.nextInt();        int t = 1;        while( t-- > 0 ) {                     int n = ni();            int m = ni();            boolean ar[] = new boolean[m+1];             for(int i = 0 ; i<n; i++) {                int xi = ni();                for(int j = 0; j<xi; j++) {                     int yi = ni();                     ar[yi] = true;                }             }             boolean flag = true;            for(int i = 1; i<=m; i++){                if( !ar[i] ){                    flag = false;                    break;                }            }             if( flag    )                print("YES\n");            else                print("NO\n");                 }             }               }   
