from sys import stdin,stdout,setrecursionlimitsetrecursionlimit(10**5)from collections import defaultdictnmbr = lambda: int(stdin.readline())lst = lambda: list(map(int,stdin.readline().split()))PI=float('inf')def dfs(src):    vis[src]=1    for neigh in g[src]:        if neigh<src:            if not vis[neigh]:dfs(neigh)            dp[src]=max(dp[src],1+dp[neigh])for _ in range(1):#nmbr()):    n,eg=lst()    g=defaultdict(list)    for i in range(eg):        u,v=lst()        g[u]+=[v]        g[v]+=[u]    dp=[1]*(1+n)    vis=[0]*(1+n)    for node in range(1,n+1):        if not vis[node]:dfs(node)    print(max(len(g[node])*dp[node] for node in range(1,n+1)))
