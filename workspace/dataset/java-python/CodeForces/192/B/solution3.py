import sysimport mathfrom heapq import *;input = sys.stdin.readlinefrom functools import cmp_to_key; def pi():    return(int(input()))def pl():    return(int(input(), 16))def ti():    return(list(map(int,input().split())))def ts():    s = input()    return(list(s[:len(s) - 1]))def invr():    return(map(int,input().split()))mod = 1000000007;f = [];def fact(n,m):    global f;    f = [1 for i in range(n+1)];    f[0] = 1;    for i in range(1,n+1):        f[i] = (f[i-1]*i)%m; def fast_mod_exp(a,b,m):    res = 1;    while b > 0:        if b & 1:            res = (res*a)%m;        a = (a*a)%m;        b = b >> 1;    return res; def inverseMod(n,m):    return fast_mod_exp(n,m-2,m); def ncr(n,r,m):    if n < 0 or r < 0 or r > n: return 0;    if r == 0: return 1;    return ((f[n]*inverseMod(f[n-r],m))%m*inverseMod(f[r],m))%m; def main():    B(); def B():    n = pi();    a = ti();    dp = [0 for i in range(n)];    dp[0] = a[0];    for i in range(1,n):        if i == 1: dp[i] = min(a[i],a[i-1]);        else:            dp[i] = max(min(a[i],dp[i-1]), min(a[i],dp[i-2]));     print(dp[n-1]);     main();
