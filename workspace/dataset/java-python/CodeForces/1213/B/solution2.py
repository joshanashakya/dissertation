import sys,math,itertoolsfrom collections import Counter,deque,defaultdictfrom bisect import bisect_left,bisect_right from heapq import heappop,heappush,heapifyfrom copy import deepcopymod = 10**9+7INF = float('inf')def inp(): return int(sys.stdin.readline())def inpl(): return list(map(int, sys.stdin.readline().split()))def inpl_1(): return list(map(lambda x:int(x)-1, sys.stdin.readline().split()))def inps(): return sys.stdin.readline()def inpsl(x): tmp = sys.stdin.readline(); return list(tmp[:x])def err(x): print(x); exit()Â for _ in range(inp()):    n = inp()    a = inpl()    res = 0    mi = INF    for i in range(n)[::-1]:        mi = min(mi, a[i])        if i==0: break        if a[i-1] > mi:            res += 1    print(res)
