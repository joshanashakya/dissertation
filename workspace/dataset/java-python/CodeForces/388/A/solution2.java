import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     int N;    int[] a;     void run(FastScanner in, PrintWriter out) {         N = in.nextInt();        a = new int[N];        for (int i = 0; i < N; i++) {            a[i] = in.nextInt();        }         Arrays.sort(a);        go(N-1);        int ret = 0;        for (int v : heights.values()) {            ret += v;        }        System.out.println(ret);    }     TreeMap<Integer, Integer> heights = new TreeMap<>();     void go(int i) {        if (i == 0) {            heights.put(1, heights.getOrDefault(1, 0)+1);            return;        }         int myval = a[i];        go(i-1);         Map.Entry<Integer, Integer> floor = heights.floorEntry(myval);        if (floor != null) {            heights.put(floor.getKey()+1, heights.getOrDefault(floor.getKey()+1, 0)+1);            if (floor.getValue() == 1) heights.remove(floor.getKey());            else heights.put(floor.getKey(), floor.getValue()-1);        } else {            heights.put(1, heights.getOrDefault(1, 0)+1);        }    }       static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
