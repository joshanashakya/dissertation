import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*; public class Main{       static boolean visited[];    static int a[];    static int count=0;    static int n;    public static void Dfs(int i )    {        visited[i] = true;        count++;        for (int j = i+1; j < n; j++) {            if(!visited[j]&&count<=a[j])            {                Dfs(j);            }        }            }    static void sort(int a[])    {        Random ran = new Random();        for (int i = 0; i < a.length; i++) {            int r = ran.nextInt(a.length);            int temp = a[r];            a[r] = a[i];            a[i] = temp;        }                Arrays.sort(a);    }    public static void main(String args[])    {        FastScanner input = new FastScanner();        n = input.nextInt();        a = new int[n];        for (int i = 0; i < n; i++) {            a[i] = input.nextInt();        }        sort(a);        visited = new boolean[n];        int ans=0;        for (int i = 0; i < n; i++) {                        if(!visited[i])            {                count=0;                ans++;                Dfs(i);            }        }        System.out.println(ans);            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
