import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskB solver = new TaskB();        solver.solve(1, in, out);        out.close();    }     static class TaskB {        public void solve(int testNumber, InputReader in, PrintWriter out) {            double a = in.nextDouble();            double d = in.nextDouble();            int n = in.nextInt();            double len = 0;            for (int i = 0; i < n; i++) {                len += d;                len %= 4 * a;                out.println(square(len, a));            }        }         String square(double len, double a) {            long n = (long) (len / a);            double rem = len % a;            if (n % 4 == 0) {                return rem + " 0";            } else if (n % 4 == 1) {                return a + " " + rem;            } else if (n % 4 == 2) {                return (a - rem) + " " + a;            } else if (n % 4 == 3) {                return "0 " + (a - rem);            }            return "err";        }     }     static class InputReader {        private BufferedReader reader;        private StringTokenizer stt;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream));        }         public String nextLine() {            try {                return reader.readLine();            } catch (IOException e) {                return null;            }        }         public String next() {            while (stt == null || !stt.hasMoreTokens()) {                stt = new StringTokenizer(nextLine());            }            return stt.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public double nextDouble() {            return Double.parseDouble(next());        }     }} 
