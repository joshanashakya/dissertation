#########################################################################################################\############################################################################################################################################The_Apurv_Rathore####################################################################################################################################################################################################################################################################### import sys,os,iofrom math import log, gcd, ceilfrom collections import defaultdict, deque, Counterfrom heapq import heappush, heappopfrom sys import stdin import math    def ncr(n, r, p):  #using fermat's little theorem    num = den = 1    for i in range(r):        num = (num * (n - i)) % p        den = (den * (i + 1)) % p    return (num * pow(den,                      p - 2, p)) % p   def primeFactors(n):     l = []    while n % 2 == 0:         l.append(2)        n = n / 2              for i in range(3,int(math.sqrt(n))+1,2):                    while n % i== 0:             l.append(int(i))            n = n / i     if n > 2:         l.append(n)    return list(set(l))    def power(x, y, p) : 	res = 1	x = x % p 	if (x == 0) : 		return 0	while (y > 0) : 		if ((y & 1) == 1) : 			res = (res * x) % p 		y = y >> 1	 # y = y/2 		x = (x * x) % p 			return res   def si():    return input() # input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline def prefix_sum(arr):    r = [0] * (len(arr)+1)    for i, el in enumerate(arr):        r[i+1] = r[i] + el    return r def divideCeil(n,x):    if (n%x==0):        return n//x    return n//x+1 def ii():    return int(input()) def li():    return list(map(int,input().split())) def ws(s): sys.stdout.write(s + '\n')def wi(n): sys.stdout.write(str(n) + '\n')def wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\n')  if(os.path.exists('input.txt')):    sys.stdin = open("input.txt","r")    sys.stdout = open("output.txt","w")  # input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline mod = 998244353    t = 1# t = ii()for _ in range(t):    n,m = li()    c  = 'abcdefghijklmnopqrstuvwxyz'    l = []    d = defaultdict(lambda:0)    ans = ''    p = ''    y = []    for j in range(n):        s = input()        srev = s[::-1]        if (s==srev):            p = s        if (srev in l):            y.append(s)        else:            l.append(s)    for i in y:        ans+=i    ans = ans + p + ans[::-1]    print(len(ans))    print(ans)     
