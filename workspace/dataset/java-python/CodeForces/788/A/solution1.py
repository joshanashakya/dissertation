import sys,os,ioimport math,bisect,operatorinf,mod = float('inf'),10**9+7# sys.setrecursionlimit(10 ** 6)from itertools import groupby,accumulatefrom heapq import heapify,heappop,heappushfrom collections import deque,Counter,defaultdictinput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__Neo = lambda : list(map(int,input().split()))test, = Neo()n = testA = Neo()def maxSubArray(A):    curSum = maxSum = A[0]    for num in A[1:]:        curSum = max(num, curSum + num)        maxSum = max(maxSum, curSum)    return maxSumA1 = [-10**9]A2 = [abs(A[0]-A[1])]for i in range(1,n-1):    t = abs(A[i]-A[i+1])    if i%2:        A1.append(t)        A2.append(-t)    else:        A1.append(-t)        A2.append(t)print(max(maxSubArray(A1),maxSubArray(A2)))                
