import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.*;import java.math.*;import java.util.*; public class Main {     static FastReader in;    static PrintWriter o;     public static void solve() {        int n = in.nextInt();        long[] arr = new long[n];        for (int i = 0; i < n; i++) {            arr[i] = in.nextInt();        }        long[] arr1 = new long[n-1];        long[] arr2 = new long[n-1];        for (int i = 0; i < n - 1; i++) {            arr1[i] = Math.abs(arr[i] - arr[i+1]);            arr2[i] = Math.abs(arr[i] - arr[i+1]);            if (i % 2 == 0) {                arr1[i] = -1 * arr1[i];            }            if (i % 2 == 1) {                arr2[i] = -1 * arr2[i];            }        }        long max = 0;        long sum = 0;        for (int i = 0; i < n - 1; i++) {            sum += arr1[i];            max = Math.max(sum, max);            if (sum < 0) sum = 0;        }        sum = 0;        for (int i = 0; i < n - 1; i++) {            sum += arr2[i];            max = Math.max(sum, max);            if (sum < 0) sum = 0;        }        o.println(max);        o.close();        return;     }     public static void main(String[] args) {        in = new FastReader();        o = new PrintWriter(System.out);        solve();        return;    }      static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long[] readLongArray(int n) {            long[] a = new long[n];            for (int i = 0; i < n; i++) a[i] = nextLong();            return a;        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    } }
