def func1(
        n, ):  # Solve and output    """        Approach 1 - Naive        n = a*2020 + b*2021, where a>0 and b>0. Check if this is possible        OK, n = 2020(a+b) + b. So subtract 2020 as much as you can.        It takes a+b steps to make n=b. What about b, it should be consistent with a+b.        Simply, a+b >= b. If this doesn't hold show "NO"        TC - O(n)     # steps = 0    # while n >=2020:    #     n-=2020    #     steps+=1    # # n = b now    # if steps >= n:    #     print('YES')    # else:    #     print('NO')     """     """        Approach 2        n = a*2020 + b*2021 = 2020(a+b) + b        Divide by 2020. If quotient(a+b) >= remainder(b) done. Perform truncated division.        O(1) solution, I'm really stupid.        Equality comes for a=0. i.e. n = 2021b = (2020 + 1)*b*k. Any k will do.    """    if n//2020 >= n % 2020:        print("YES")    else:        print("NO")    pass if __name__ == '__main__':    cases = 1 ; cases = int(input())    for i in range(cases):        n,_, *_ = [*map(int, filter(len, input().split(' '))), None]        func1(n,) 
