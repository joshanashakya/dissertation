from __future__ import print_function # for PyPy2from collections import Counter, OrderedDictfrom itertools import permutations as permfrom fractions import Fractionfrom collections import dequefrom sys import stdinfrom bisect import *from heapq import *from math import * g   = lambda : stdin.readline().strip()gl  = lambda : g().split()gil = lambda : [int(var) for var in gl()]gfl = lambda : [float(var) for var in gl()]gcl = lambda : list(g())gbs = lambda : [int(var) for var in g()]mod = int(1e9)+7 n, = gil()s = g()ans = s def solve(s):	ans = s	t = []	for i in range(10):		for c in s :			v = int(c)+i			if v > 9 : v -= 10			t.append(str(v))		# print(t)		ans = min(ans, ''.join(t))		t.clear()	return ans  for i in range(n):	ans = min(ans, solve(s[i:] + s[:i])) print(ans)
