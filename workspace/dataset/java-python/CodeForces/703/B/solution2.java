import java.util.Scanner; public class test65 {     private static long Calc(int n, int k, int[] c, int[] d) {        long cost = 0;        long sum = 0;        for (int i = 0; i < n; i++) {            if (i == n - 1) {                cost += c[i] * c[0];            } else {                cost += c[i] * c[i + 1];            }            sum += c[i];        }        for (int i = 0, m = 0; i < n; i++) {            if (i==0&&m ==0 && d[m] == 1) {                cost += c[0] * (sum - (c[0] + c[1] + c[n - 1]));                sum -= c[0];                m++;            }             else if (i<n-1&&m < k && d[m] == i + 1) {                    if (m > 0 && d[m - 1] == i&&d[m]==i+1) {                        if (sum >= c[i] + c[i + 1]) {                            cost += c[d[m] - 1] * (sum - (c[i] + c[i + 1]));                        }                    } else if (sum >= c[i] + c[i + 1] + c[i - 1]) {                        cost += c[d[m] - 1] * (sum - (c[i] + c[i + 1] + c[i - 1]));                    }                    sum -= c[i];                    m++;                }            else if (i==n-1&&m ==k-1 && d[m] == n) {                if (d[0] == 1) {                    if (d[m - 1] == i && sum >= c[i]) {                        cost += c[i] * (sum - (c[i]));                    } else if (sum >= c[i] + c[i-1]) {                        cost += c[i] * (sum - (c[i] + c[i-1]));                    }                } else if(d[0] > 1){                    if (m>0&&d[m - 1]== i && sum >= c[0] + c[n - 1]) {                         cost += c[i] * (sum - (c[0] + c[i]));                    } else if (sum >= c[0] + c[i] + c[i-1]) {                        cost += c[i] * (sum - (c[0] + c[i] + c[i-1]));                    }                }                break;            }                     }        return cost;    }     public static void main(String[] args) {        Scanner input = new Scanner(System.in);        int n = input.nextInt();        int k = input.nextInt();        int c[] = new int[n];        for (int i = 0; i < n; i++) {            c[i] = input.nextInt();        }        int d[] = new int[k];        for (int i = 0; i < k; i++) {            d[i] = input.nextInt();        }        System.out.println(Calc(n, k, c, d));     }}
