 import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStream;import java.io.PrintWriter;import java.util.StringTokenizer; import javax.management.RuntimeErrorException; public class Main {		public static void main(String[] args) {		InputStream inputStream = System.in;		OutputStream outputStream = System.out;		InputReader in = new InputReader(inputStream);		PrintWriter out = new PrintWriter(outputStream);		TaskA solver = new TaskA();		solver.solve(in, out);		out.close();	}		static class TaskA{		public void solve(InputReader in, PrintWriter out) {			int t = in.nextInt();			while(t--!=0) {				int sumbun = in.nextInt(), sumbeef = in.nextInt(), sumchi = in.nextInt();				int valbeef = in.nextInt(), valchi = in.nextInt();				int ans = 0;				if(valbeef>valchi) {					if(sumbun / 2 > sumbeef) {						ans += sumbeef * valbeef;						sumbun -= sumbeef * 2;					}else {						ans += sumbun / 2 * valbeef;						sumbun = 0;					}					if(sumbun/2>sumchi) {						ans += sumchi * valchi;					}else {						ans += sumbun/2*valchi;					}				}else {					if(sumbun/2>sumchi) {						ans += sumchi * valchi;						sumbun -= sumchi*2;					}else {						ans += sumbun/2*valchi;						sumbun = 0;					}					if(sumbun/2>sumbeef) {						ans += sumbeef * valbeef;					}else {						ans += sumbun/2*valbeef;					}				}				out.println(ans);			}		}	}		static class InputReader{		public BufferedReader reader;		public StringTokenizer tokenizer;		public InputReader(InputStream stream){			reader = new BufferedReader(new InputStreamReader(stream));			tokenizer = null;		}		public String next() {			while(tokenizer==null|| !tokenizer.hasMoreElements()) {				try {					tokenizer = new StringTokenizer(reader.readLine());				}catch (IOException e) {					throw new RuntimeException(e);				}			}			return tokenizer.nextToken();		}		public int nextInt() {			return Integer.parseInt(next());		}	}}
