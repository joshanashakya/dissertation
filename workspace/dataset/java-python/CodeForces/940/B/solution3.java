 import java.io.*;import java.util.*;import java.util.ArrayList;  public class CryOut {    public static void main(String[] args) {    InputStream stream = System.in;    PrintWriter out = new PrintWriter(System.out);    FastReader sc = new FastReader(stream);    //int t = sc.nextInt();    Solver solver = new Solver();    int t = 1;    while(t-->0) {      solver.solve(sc,out);    }    out.close();  }    static class Solver {    public void solve(FastReader sc, PrintWriter out) {      long n = sc.nextLong();      long k = sc.nextLong();      long A = sc.nextLong();      long B = sc.nextLong();      if(k==1) {        out.println((n-1)*A);        return;      }      long ans = 0;      while(n>1) {        if(n%k==0) {          long to = n/k;          long diff = n-to;          long subCost = diff*A;          ans += Math.min(subCost,B);          n = to;        } else {          long to = next(n,k);          ans += (n-to)*A;          n = to;        }      }      out.println(ans);    }        public long next(long n, long k) {      if(n<k) return 1;      return n/k*k;    }  }    static class FastReader {    InputStream stream;    byte[] buf = new byte[1024];    int curChar, numChars;    public FastReader(InputStream stream) {      this.stream = stream;    }        public int read() {      if(numChars==-1) {        throw new InputMismatchException();      }      if(curChar>=numChars) {        curChar = 0;        try {          numChars = stream.read(buf);        } catch(IOException e) {          throw new InputMismatchException();        }        if(numChars<=0) {          return -1;        }      }      return buf[curChar++];    }        public int nextInt() {      int c = read();      while(isWhiteSpace(c)) c = read();      int sign = 1;      if(c == '-') {        sign = -1;        c = read();      }      int res = 0;      do {        if(c < '0' || c > '9') {          throw new InputMismatchException();        }        res *= 10;        res += c-'0';        c = read();      } while(!isWhiteSpace(c));      return res*sign;    }        public long nextLong() {      int c = read();      while(isWhiteSpace(c)) c = read();      int sign = 1;      if(c == '-') {        sign = -1;        c = read();      }      long res = 0;      do {        if(c < '0' || c > '9') {          throw new InputMismatchException();        }        res *= 10;        res += c-'0';        c = read();      } while(!isWhiteSpace(c));      return res*sign;    }        public String next() {      int c = read();      while(isWhiteSpace(c)) c = read();      StringBuilder res = new StringBuilder();      do {        if(Character.isValidCodePoint(c)) {          res.appendCodePoint(c);        }        c = read();;      } while(!isWhiteSpace(c));      return res.toString();    }        public boolean isWhiteSpace(int c) {      return c == ' ' || c == '\n' ||             c == '\r' || c == '\t' ||             c == -1;    }  }}
