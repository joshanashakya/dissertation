import java.lang.*;import java.util.*;import java.util.stream.Collectors;import java.io.*; public class pblm3 {	static int a;	static int b;	static int k;	static HashMap<Integer,Long> map;		public static long steps(int n)		{			//System.out.println(n);			if(n==1)return 0;			if(map.containsKey(n))return map.get(n);			long step=0;			if(n%k==0)			{				if(b<=a)				{					step = b + (long)steps(n/k);				}				else				{					step = (long)Math.min(b+ (long)steps(n/k), (long)a*(k-1)*(n/k) + (long)steps(n/k));				}			}			else if(n>k)			{				int div = n/k;				int sub = n-k*div;				//System.out.println(n+" not div by "+k+" factor "+div+" sub "+sub);				step = (long)a*(sub) + (long)steps(k*div);			}			else				step = (long)a*(n-1);						//System.out.println(n+" "+(long)step);			map.put(n, step);			return step;		}		public static void main(String[] args) throws IOException {						Scanner sc = new Scanner(System.in);			int n = sc.nextInt();			k = sc.nextInt();			a = sc.nextInt();			b = sc.nextInt();			map = new HashMap<Integer,Long>();			if(k!=1)				System.out.println((long)steps(n));			else			{				long ans = (long)a*(n-1);				System.out.println((long)ans);			}							//System.out.println(map.toString());				}}				  
