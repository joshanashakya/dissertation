 import java.util.*;import java.io.*;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStreamReader;  		  public class sol { public static void backtrack(List<List<Integer>>list,List<Integer>templist,int []nums) {		 		 if(templist.size() == nums.length) {			 list.add(new ArrayList<>(templist));		 }else {			 			 for(int i = 0; i < nums.length; i++) {				 if(templist.contains(nums[i])) continue;					 templist.add(nums[i]);					 backtrack(list,templist,nums);					 templist.remove(templist.size()-1);				 				 			 }		 }	 }	 public static List<List<Integer>>permute(int []nums){		 List<List<Integer>>list = new ArrayList<>();		 backtrack(list,new ArrayList<>(),nums);		 return list;	 }	 	 static int LCSubStr(String s,String t,             int n,int m){  // Create DP tableint dp[][]=new int[2][m+1];int res=0; for(int i=1;i<=n;i++){ for(int j=1;j<=m;j++) {     if(s.charAt(i-1)==t.charAt(j-1))     {         dp[i%2][j]=dp[(i-1)%2][j-1]+1;         if(dp[i%2][j]>res)             res=dp[i%2][j];     }     else dp[i%2][j]=0; }}return res;}    public static void main (String args[])throws IOException{	        	    	  Scanner sc = new Scanner(System.in);    	    int t = sc.nextInt();        while(t --> 0) {    	int n = sc.nextInt();    	String s = sc.next();    	char []ar = s.toCharArray();        	int first = -1;    	int last = -1;    	for(int i = 0; i < n; i++) {    		  if(ar[i] == '1' && first == -1) {    			  first = i;    		  }    		  if(ar[i] == '0') {    			  last = i;    		  }    	}    	      if(last < first || first == -1 || last == -1) {    	  System.out.println(s);      }else {    	  String ans = "";    	  for(int i = 0; i < first; i++) {    		  String str = String.valueOf(ar[i]);    		  ans += str;    	  }    	  ans += '0';    	  for(int i = last+1; i < n; i++) {    		  String str= String.valueOf(ar[i]);    		  ans += str;    	  }    	  System.out.println(ans);    	        }    }    }}  		  	    
