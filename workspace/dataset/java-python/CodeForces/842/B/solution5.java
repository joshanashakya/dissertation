import java.io.*;import java.util.*; import static java.lang.Double.*;import static java.lang.Integer.*; public class B {    public static void main(String[] args) throws IOException {        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        PrintWriter pw = new PrintWriter(System.out);        StringTokenizer st;        st = new StringTokenizer(in.readLine());        int res = 0;        double r = parseDouble(st.nextToken()), d = parseDouble(st.nextToken());        int n = parseInt(in.readLine());        for (int i = 0; i < n; i++) {            st = new StringTokenizer(in.readLine());            double xi = parseDouble(st.nextToken()), yi = parseDouble(st.nextToken()), ri = parseDouble(st.nextToken());            if (solve(r, d, xi, yi, ri)) res++;        }        pw.println(res);        pw.close();    }     static boolean solve(double r, double d, double xi, double yi, double ri) {        double dis = Math.sqrt(((xi * xi) + (yi * yi)));        if ((r - d) <= (dis - ri) && r >= (dis + ri)) return true;        return false;    }}
