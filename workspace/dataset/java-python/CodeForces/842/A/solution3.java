import sun.text.resources.fr.FormatData_fr; import java.io.*;import java.math.BigInteger;import java.util.*; public class Main {    static class FastScanner {//用于快速读入大量数据        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in), 16384);            eat("");        }         public void eat(String s) {            st = new StringTokenizer(s);        }         public String nextLine() {            try {                return br.readLine();            } catch (IOException e) {                return null;            }        }         public boolean hasNext() {            while (!st.hasMoreTokens()) {                String s = nextLine();                if (s == null) return false;                eat(s);            }            return true;        }         public String next() {            hasNext();            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public double nextDouble() {            return Double.parseDouble(next());        }         public long nextLong() {            return Long.parseLong(next());        }     }     static FastScanner in = new FastScanner(System.in);    static PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));     static int n, m;    static char[] arr;    static String str;     public static void main(String[] args) {        long l, r, x, y, k;        boolean flag = false;        l = in.nextLong();        r = in.nextLong();        x = in.nextLong();        y = in.nextLong();        k = in.nextLong();        if (r < x) {            out.println("NO");            out.flush();            return;        }         for (long i = x; i <= y; ++i) {            if (i * k < l || i * k > r) continue;            else {                out.println("YES");                 flag = true;                break;            }        }        if (!flag) out.println("NO");        out.flush();    }}            			 	   	  	 		 					
