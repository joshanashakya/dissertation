import java.util.Collection;import java.util.Collections;import java.util.PriorityQueue;import java.util.Scanner; public class Main { 	public static void main(String[] args) {		Scanner s = new Scanner(System.in);		PriorityQueue<Long> pq = new PriorityQueue<Long>(Collections.reverseOrder());		long n = s.nextLong(), k = s.nextLong();		long no = 0;		while(n > 0) {			if(n % 2 == 1) {				pq.add(no);			}			no++;			n /= 2;		}		if(pq.size() > k) {			System.out.println("No");			return;		}		while(pq.size() < k) {			long curr = pq.poll();			pq.add(curr - 1);			pq.add(curr - 1);		}		System.out.println("Yes");		long y = pq.peek(), count = 0;		StringBuffer str = new StringBuffer();		PriorityQueue<Long> pq2 = new PriorityQueue<Long>();		while(pq.size() > 0) {			pq2.add(pq.poll());		}		long curr = pq2.poll();		while(pq2.size() > 0) {			if(y != curr && pq2.size() > 0 && pq2.peek() == curr) {				pq2.poll();				curr++;			} else {				pq.add(curr);				curr = pq2.poll();			}		}		pq.add(curr);		while(pq.size() > 1) {			str.append(pq.poll() + " ");			count++;		}		pq2.add(pq.poll());		while(pq2.size() + count < k) {			curr = pq2.poll();			pq2.add(curr - 1);			pq2.add(curr - 1);		}		while(pq2.size() > 0) {			pq.add(pq2.poll());		}		while(pq.size() > 0) {			str.append(pq.poll() + " ");		}		System.out.println(str);	} }
