import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader;import java.util.Arrays;import java.util.Scanner; import java.util.StringTokenizer;import java.util.ArrayList;import java.util.TreeSet;import java.util.Collections;import java.util.List;  public class Hello{     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }       public static void main(String[] args)     {         FastReader in=new FastReader();                         //start code here        char s[] = in.next().toCharArray();        int n=s.length;        int dp[][][]=new int [26][n][26];        List<Integer> a[]=new List[26];        for(int i=0;i<26;++i)        	a[i]=new ArrayList<Integer>();        for(int i=0;i<n;++i)        {        	a[s[i]-'a'].add(i);        	for(int j=0;j<n;++j)        		++dp[s[i]-'a'][j][s[(i+j)%n]-'a'];        }        int res=0;        for(int i=0;i<26;++i)        {        	int m=0;        	for(int j=0;j<n;++j)        	{        		int ct=0;        		for(int k=0;k<26;++k)        			if(dp[i][j][k]==1)        				++ct;        		m=Math.max(m, ct);        	}        	res+=m;        }        System.out.print((double)res/n);    }} 
