import java.util.*;import java.io.*;import java.math.BigInteger;public class Red {    static FastScanner f;    static PrintWriter pw = new PrintWriter(System.out);    static long mod = 1000_000_007;    static int oo = (int)2e9;     public static void solve()throws IOException {        int n = f.ni(); int m = f.ni();        int min = oo , ans = -oo;        for (int i = 0; i < n; ++i) {            int currMin = oo;            for (int j = 0; j < m; ++j) {                int x = f.ni();                currMin = Math.min(currMin , x);            }            ans = Math.max(ans , currMin);        }        pn(ans);    }        public static void main(String args[])throws IOException {        go();        boolean test_cases = false;        int t = test_cases ? f.ni() : 1;        while (t --> 0) solve();        pw.flush();        pw.close();     }     public static void go()throws IOException {        if (System.getProperty("ONLINE_JUDGE") == null) {            f = new FastScanner("");        }        else f = new FastScanner(System.in);    }     public static class FastScanner {        StringTokenizer st;        BufferedReader br;         public FastScanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public FastScanner(String str) {            try {                br = new BufferedReader(new FileReader("inp.txt"));            }            catch (Exception e) {                e.printStackTrace();            }        }         public String next()throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int ni() throws IOException {return Integer.parseInt(next());}         public long nl() throws IOException {return Long.parseLong(next());}         public String nextLine() throws IOException {return br.readLine();}         public double nd() throws IOException {return Double.parseDouble(next());}    }     public static long mul(long a , long b) {        return ((a % mod) * (b % mod)) % mod;    }     public static void sort(int a[]) {        ArrayList<Integer> x = new ArrayList<>();        for (int i : a) x.add(i);        Collections.sort(x);        for (int i = 0; i < a.length; ++i) a[i] = x.get(i);    }        public static void sort(long a[]) {        ArrayList<Long> x = new ArrayList<>();        for (Long i : a) x.add(i);        Collections.sort(x);        for (int i = 0; i < a.length; ++i) a[i] = x.get(i);    }     public static void sort(ArrayList<Integer> arr) {Collections.sort(arr);}     public static void pn(Object o){pw.println(o);}            public static void p(Object o){pw.print(o);}            public static void pni(Object o){pw.println(o);pw.flush();}     static int gcd(int x , int y) {        if (y == 0) return Math.abs(x);        return gcd(y , x % y);    }}
