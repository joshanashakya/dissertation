import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.StringTokenizer;import java.util.StringJoiner;import java.util.stream.IntStream;import java.io.PrintWriter;//import java.util.Arrays;Â public class A { 	public static FastScanner fs = new FastScanner();	public static PrintWriter out = new PrintWriter(System.out); 	public static void main(String[] args) {		solve();	}		public static void solve(){		long n = fs.nextLong(),l = 0L,m = 0L;		for (int i = 0;i < n;i++){			l += fs.nextLong();			m += fs.nextLong();			l += fs.nextLong();			m += fs.nextLong();		}		out.println(l/n+" " + m/n);		out.flush();	}			static void array_space(int[] A){		StringJoiner sj = new StringJoiner(" ");		IntStream.of(A).forEach(x -> sj.add(String.valueOf(x)));		System.out.println(sj.toString());	}		static void sort(int[] a) {		ArrayList<Integer> l=new ArrayList<>();		for (int i:a) l.add(i);		Collections.sort(l);		for (int i=0; i<a.length; i++) a[i]=l.get(i);	}		static class FastScanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer("");		String next() {			while (!st.hasMoreTokens())				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}		int[] readArray(int n) {			int[] a=new int[n];			for (int i=0; i<n; i++) a[i]=nextInt();			return a;		}		long nextLong() {			return Long.parseLong(next());		}	}}
