import java.util.*;import java.lang.*;import java.io.*; public final class new_year{    public static void main(String[] args) throws java.lang.Exception{        Reader r = new Reader();        r.init(System.in);        int n = r.nextInt();        int[] x = new int[n];        int[] y = new int[n];        int[] a = new int[n];        int[] b = new int[n];        // ∑(tx,ty) = (∑x+∑a,∑y+∑b)        long tx = 0;        long ty =0;        for(int i=0;i<n;i++){            x[i] = r.nextInt();            y[i] = r.nextInt();            tx+=x[i];            ty+=y[i];        }        for(int j=0;j<n;j++){            a[j] = r.nextInt();            b[j] = r.nextInt();            tx += a[j];            ty += b[j];        }                    System.out.println((tx/n)+" "+(ty/n));         }     static int gcd(int a, int b){        if(a==0) return b;        return gcd(b%a, a);    }     /** Class for buffered reading int and double values */    static class Reader {        static BufferedReader reader;        static StringTokenizer tokenizer;            /** call this method to initialize reader for InputStream */        static void init(InputStream input) {            reader = new BufferedReader(                        new InputStreamReader(input) );            tokenizer = new StringTokenizer("");        }            /** get next word */        static String next() throws IOException {            while ( ! tokenizer.hasMoreTokens() ) {                //TODO add check for eof if necessary                tokenizer = new StringTokenizer(                    reader.readLine() );            }            return tokenizer.nextToken();        }            static int nextInt() throws IOException {            return Integer.parseInt( next() );        }            static double nextDouble() throws IOException {            return Double.parseDouble( next() );        }    }}
