import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.InputMismatchException;import java.io.IOException;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author Pranay2516 */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastReader in = new FastReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        A24Game solver = new A24Game();        solver.solve(1, in, out);        out.close();    }     static class A24Game {        public void solve(int testNumber, FastReader in, PrintWriter out) {            int n = in.nextInt();            if (n <= 3) {                out.println("NO");            } else {                out.println("YES");                if (n % 2 == 0) {                    int ones = 0;                    for (int i = n; i > 4; i -= 2) {                        out.println(i + " - " + (i - 1) + " = 1");                        ones++;                    }                    out.println("4 * 3 = 12");                    out.println("12 * 2 = 24");                    out.println("24 * 1 = 24");                    for (int i = 0; i < ones; ++i) {                        out.println("24 * 1 = 24");                    }                } else {                    int ones = 0;                    for (int i = n; i > 5; i -= 2) {                        out.println(i + " - " + (i - 1) + " = 1");                        ones++;                    }                    out.println("5 * 3 = 15");                    out.println("4 * 2 = 8");                    out.println("15 + 8 = 23");                    out.println("23 + 1 = 24");                    for (int i = 0; i < ones; ++i) {                        out.println("24 * 1 = 24");                    }                }            }        }     }     static class FastReader {        private InputStream stream;        private byte[] buf = new byte[1024];        private int curChar;        private int numChars;        private FastReader.SpaceCharFilter filter;         public FastReader(InputStream stream) {            this.stream = stream;        }         public int read() {            if (numChars == -1) throw new InputMismatchException();            if (curChar >= numChars) {                curChar = 0;                try {                    numChars = stream.read(buf);                } catch (IOException e) {                    throw new InputMismatchException();                }                if (numChars <= 0) return -1;            }            return buf[curChar++];        }         public int nextInt() {            int c = read();            while (isSpaceChar(c)) c = read();            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                if (c < '0' || c > '9') throw new InputMismatchException();                res *= 10;                res += c - '0';                c = read();            }            while (!isSpaceChar(c));            return res * sgn;        }         public boolean isSpaceChar(int c) {            if (filter != null) return filter.isSpaceChar(c);            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         public interface SpaceCharFilter {            public boolean isSpaceChar(int ch);         }     }} 
