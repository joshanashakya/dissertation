import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Arrays;import java.util.Comparator;import java.util.StringTokenizer; public class Lala_Land {    static class FastReader    {        BufferedReader br;        StringTokenizer st;        public FastReader()        {            br=new BufferedReader(new InputStreamReader(System.in));        }        String next()        {            while(st==null || !st.hasMoreElements())            {                try {                    st=new StringTokenizer(br.readLine());                } catch(IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }        int nextInt()        {            return(Integer.parseInt(next()));        }        long nextLong()        {            return(Long.parseLong(next()));        }    }     public static void main(String[] args) {        FastReader in = new FastReader();        int n=in.nextInt();        Apple a[]=new Apple[n];        for(int i=0;i<n;i++){            int pos=in.nextInt();            int app=in.nextInt();            a[i]=new Apple(pos,app);        }        Arrays.sort(a, new Sort());        int mid=-1;        int neg=0;        int pos=0;long sum=0;        for(int i=0;i<n;i++){            if(a[i].pos<0){                neg++;            }else{                if(mid==-1)                    mid=i;                pos++;            }            sum+=a[i].tot;        }        int min=Math.min(neg,pos);        if(pos!=neg) {            sum = 0;            //System.out.println(mid);            if(min>0){            if (min == neg) {                for (int i = 0; i < mid; i++) {                    sum += a[i].tot;                }                for (int i = mid; i <= mid + neg; i++) {                    sum += a[i].tot;                }            } else {                 for (int i = mid; i < n; i++) {                    sum += a[i].tot;                }                for (int i = mid - 1; i >= mid - pos-1 ; i--) {                    sum += a[i].tot;                }             }}            else{                if(pos==0){                    sum=a[n-1].tot;                }else{                    sum=a[0].tot;                }            }        }        System.out.println(sum);    }}class Apple{    int pos;    int tot;    public Apple (int pos ,int tot){        this.pos=pos;        this.tot=tot;    }}class Sort implements Comparator<Apple>{    @Override    public int compare(Apple apple, Apple t1) {        return apple.pos-t1.pos;    }}
