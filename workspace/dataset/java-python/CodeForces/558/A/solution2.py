import sys,mathsys.setrecursionlimit(10**8)'''def fun():    for i in range(16):        for j in range(4):            if i&(1<<j):                print(j,end='')        print()import binarytreefrom collections import dequebst = binarytree.tree(height=4,is_perfect=True)print(bst)def s(bst):    if bst:        bst.left,bst.right = bst.right,bst.left        s(bst.right)        s(bst.left)s(bst)print(bst)'''t = int(input())pos = [None]*(pow(10,5)+1)neg = [None]*(pow(10,5)+1)pp,nn = 0,0for _ in range(t):    x,a = map(int,input().split())    if x<0:        neg[abs(x)] = a        nn+=1    else:        pos[x] = a        pp+=1if nn<pp:    pp = nn+1    i = 0    s1,s2 =0 ,0    while nn!=0:        if neg[i] !=None:            s1+=neg[i]            nn-=1        i+=1    i=0    while pp!=0:        if pos[i] !=None:            s2+=pos[i]            pp-=1        i+=1    print(s1+s2)elif nn>pp:    nn = pp+1    i = 0    s1,s2 =0,0    while nn!=0:        if neg[i] !=None:            s1+=neg[i]            nn-=1        i+=1    i=0    while pp!=0:        if pos[i] !=None:            s2+=pos[i]            pp-=1        i+=1    print(s1+s2)else:    nn = pp    i = 0    s1,s2 =0,0    while nn!=0:        if neg[i] !=None:            s1+=neg[i]            nn-=1        i+=1    i=0    while pp!=0:        if pos[i] !=None:            s2+=pos[i]            pp-=1        i+=1    print(s1+s2)Â 
