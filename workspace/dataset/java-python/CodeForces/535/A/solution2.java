import java.util.*; public class CF10 {    public static void main(String[] args) {        //boolean[] primes=new ICPC().primes(100000);        Scanner sc = new Scanner(System.in);        String s=sc.next();        String ar[]={"zero","one","two","three","four","five","six","seven","eight","nine"};        String ar1[]={"ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"};        int num=Integer.parseInt(s);        if(num>=0&&num<=9){            System.out.println(ar[num]);        }else if(num>=10 &&num<=19){            System.out.println(ar1[num-10]);        }else if(num==20){            System.out.println("twenty");        }else if(num==30){            System.out.println("thirty");        }else if(num==40){            System.out.println("forty");        }else if(num==50){            System.out.println("fifty");        }else if(num==60){            System.out.println("sixty");        }else if(num==70){            System.out.println("seventy");        }else if(num==80){            System.out.println("eighty");        }else if(num==90){            System.out.println("ninety");        }else if(num<30){            System.out.println("twenty-"+ar[num%10]);        }        else if(num<40){            System.out.println("thirty-"+ar[num%10]);        }else if(num<50){            System.out.println("forty-"+ar[num%10]);         }else if(num<60){            System.out.println("fifty-"+ar[num%10]);        }else if(num<70){            System.out.println("sixty-"+ar[num%10]);        }else if(num<80){            System.out.println("seventy-"+ar[num%10]);        }else if(num<90){            System.out.println("eighty-"+ar[num%10]);        }else if(num<100){            System.out.println("ninety-"+ar[num%10]);        }       }     static int countSetBits(int n) {        int count = 0;        while (n > 0) {            count += n & 1;            n >>= 1;        }        return count;    }     public List<Integer> getDivisors(int n) {        List<Integer> list = new ArrayList<>();        for (int d = 2; d * d <= n; d++) {            while (n % d == 0) {                list.add(d);                n /= d;            }        }        if (n > 1) {            list.add(n);        }        return list;    }     public int lcm(int n1, int n2) {        int gcd = 1;        for (int i = 1; i <= n1 && i <= n2; ++i) {            // Checks if i is factor of both integers            if (n1 % i == 0 && n2 % i == 0)                gcd = i;        }         int lcm = (n1 * n2) / gcd;        return lcm;    }     public boolean[] primes(int n) {        boolean[] p = new boolean[n + 1];        p[0] = false;        p[1] = false;        for (int i = 2; i <= n; i++) {            p[i] = true;        }         for (int i = 2; i * i <= n; i++) {            for (int j = i * i; j <= n; j += i) {                p[j] = false;            }        }        return p;    }      public int primeFactor(int n) {        int c = 0;         while (n % 2 == 0) {            n /= 2;            c++;        }        //  System.out.println(n);        return c;     }}  		 	   	 			 			 				   	 		 	
