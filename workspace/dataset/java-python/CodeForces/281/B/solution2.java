//package practice; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; public class Main {	 static class FastReader  	    { 	        BufferedReader br; 	        StringTokenizer st; 	  	        public FastReader() 	        { 	            br = new BufferedReader(new	                     InputStreamReader(System.in)); 	        } 	  	        String next() 	        { 	            while (st == null || !st.hasMoreElements()) 	            { 	                try	                { 	                    st = new StringTokenizer(br.readLine()); 	                } 	                catch (IOException  e) 	                { 	                    e.printStackTrace(); 	                } 	            } 	            return st.nextToken(); 	        } 	  	        int nextInt() 	        { 	            return Integer.parseInt(next()); 	        } 	  	        long nextLong() 	        { 	            return Long.parseLong(next()); 	        } 	  	        double nextDouble() 	        { 	            return Double.parseDouble(next()); 	        } 	  	        String nextLine() 	        { 	            String str = ""; 	            try	            { 	                str = br.readLine(); 	            } 	            catch (IOException e) 	            { 	                e.printStackTrace(); 	            } 	            return str; 	        }	    }	 static void ruffleSort(int[] a) {			//ruffle			int n=a.length;			Random r=new Random();			for (int i=0; i<a.length; i++) {				int oi=r.nextInt(n), temp=a[i];				a[i]=a[oi];				a[oi]=temp;			}						//then sort			Arrays.sort(a);		}	 static boolean prime[] = new boolean[1000001]; 	 	 static void sieveOfEratosthenes() 	    { 	       int n=1000000;	       Arrays.fill(prime, true);	        prime[0]=false;prime[1]=false;	        for(int p = 2; p*p <=n; p++) 	        { 	            // If prime[p] is not changed, then it is a prime 	            if(prime[p] == true) 	            { 	                // Update all multiples of p 	                for(int i = p*p; i <= n; i += p) 	                    prime[i] = false; 	            } 	        } 	      	    } 	 			public static void main(String[] args) throws IOException  {		FastReader in=new FastReader();		   double x = in.nextInt();	       double y = in.nextInt();	       int n = in.nextInt();	       int a=0,b=0;	       double max=10000001;	       for(int den=1;den<=n;den++) {	    	   double num=(x/y)*den;	    	   num=Math.floor(num+0.499999);	    	   if(Math.abs((x/y)-(num/den))<max) {	    		   a=(int)num;	    		   b=den;	    		   max=Math.abs(x/y-num/den);	    	   }	       }	       	       System.out.println(a+"/"+b);	}}    
