import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.HashMap;import java.util.StringTokenizer; /* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */ /** * * @author Andy Phan */public class b {    public static void main(String[] args) {        FS in = new FS(System.in);        PrintWriter out = new PrintWriter(System.out);         String s;        while(!((s = in.next()).equals("end"))) {            if(s.equals("mistake")) return;            long min = 0, max = 0;            out.println("? 0 1");            out.flush();            s = in.next();            if(s.equals("x")) {                out.println("! 1");                out.flush();                continue;            }            for(int i = 0; i < 30; i++) {                out.println("? " + (1l<<i) + " " + (1l<<(i+1)));                out.flush();                s = in.next();                if(s.equals("e")) return;                if(s.equals("y")) continue;                min = (1l<<i);                max = (1l<<(i+1));                break;            }            for(int i = 30; i >= 0; i--) {                long tmp = min+(1l<<i);                if(tmp >= max) continue;                out.println("? " + min + " " + tmp);                out.flush();                s = in.next();                if(s.equals("e")) return;                if(s.equals("y")) min = tmp;            }            out.println("! " + (min+1));            out.flush();        }         out.close();    }        static class FS {         BufferedReader in;        StringTokenizer token;                public FS(InputStream str) {            in = new BufferedReader(new InputStreamReader(str));        }                public String next() {            if (token == null || !token.hasMoreElements()) {                try {                    token = new StringTokenizer(in.readLine());                } catch (IOException ex) {                }                return next();            }            return token.nextToken();        }                public int nextInt() {            return Integer.parseInt(next());        }    }}
