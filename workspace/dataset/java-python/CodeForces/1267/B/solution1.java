import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class b {	public static void main(String[] args) {		FastScanner scan=new FastScanner();		PrintWriter out=new PrintWriter(System.out);				char[] a=scan.next().toCharArray();		int n=a.length;		int l=0, r=n-1;		boolean bad=false;		int res=0;				while(r>l) {			char target=a[l];			if(a[l]!=a[r]) {				bad=true;				break;			}			int ct=0;			while(r>=l&&a[l]==target) {				l++;				ct++;			}			while(r>=l&&a[r]==target) {				r--;				ct++;			}			if(r>=l&&ct<3) {				bad=true;				break;			}			if(r<l&&ct+1<3) {				bad=true;				break;			}			if(r<l) {				res=ct+1;				break;			}		}		out.println(bad?0:res);		out.close();	}	static class FastScanner {		BufferedReader br;		StringTokenizer st; 		public FastScanner() {			try	{				br = new BufferedReader(new InputStreamReader(System.in));				st = new StringTokenizer(br.readLine());			} catch (Exception e){e.printStackTrace();}		} 		public String next() {			if (st.hasMoreTokens())	return st.nextToken();			try {st = new StringTokenizer(br.readLine());}			catch (Exception e) {e.printStackTrace();}			return st.nextToken();		} 		public int nextInt() {return Integer.parseInt(next());} 		public long nextLong() {return Long.parseLong(next());} 		public double nextDouble() {return Double.parseDouble(next());} 		public String nextLine() {			String line = "";			if(st.hasMoreTokens()) line = st.nextToken();			else try {return br.readLine();}catch(IOException e){e.printStackTrace();}			while(st.hasMoreTokens()) line += " "+st.nextToken();			return line;		}	}}
