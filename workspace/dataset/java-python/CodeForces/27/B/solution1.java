import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				static int gcd(int a, int b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				int n = io.nextInt();				int mf[] = new int[n + 1];		int wf[] = new int[n + 1];				for(int i = 1; i <= (n * (n - 1) / 2) - 1; i++) {			int x1 = io.nextInt();			int y1 = io.nextInt();						mf[x1]++;			mf[y1]++;						wf[x1]++;		}				int player[] = new int[2];		int idx = 0;		for(int i = 1; i < n + 1; i++) {						if(mf[i] != n - 1) {				player[idx++] = i;			}		}				if(wf[player[0]] > wf[player[1]]) {			System.out.println(player[0] + " " + player[1]);		}		else {			System.out.println(player[1] + " " + player[0]);		} 	}}
