import java.lang.*;import java.util.*;import java.io.*;Â public class Compressing {		public static void main(String[] args) {				Scanner sc = new Scanner(System.in);					int n  = sc.nextInt();			Map<Integer,List<Integer>> map = new HashMap<Integer,List<Integer>>();			Map<Integer,List<Integer>> win = new HashMap<Integer,List<Integer>>();			List<Integer> temp;			int tot = n*(n-1)/2;			for(int i=0;i<tot-1;i++)			{				int x = sc.nextInt();int y = sc.nextInt();				if(map.containsKey(x))map.get(x).add(y);				else				{					temp = new ArrayList<Integer>();temp.add(y);					map.put(x, temp);				}				if(map.containsKey(y))map.get(y).add(x);				else				{					temp = new ArrayList<Integer>();temp.add(x);					map.put(y, temp);				}								if(win.containsKey(x))win.get(x).add(y);				else				{					temp = new ArrayList<Integer>();temp.add(y);					win.put(x, temp);				}							}			//System.out.println(map.toString());			int p1=0,p2=0;			for(int key : map.keySet())			{				if(map.get(key).size() <  (n-1))				{					for(int i=1;i<=n;i++) {						if(i==key)continue;						if(!map.get(key).contains(i)) {p1=key;p2=i;break;}					}					break;				}			}			int first=0;			if(win.containsKey(p1))			{			for(int val : win.get(p1))			{				if(win.containsKey(val) && win.get(val).contains(p2)) {first=1;break;}			}			}						if(win.containsKey(p2))			{						for(int val : win.get(p2))			{				if(win.containsKey(val) && win.get(val).contains(p1)) {first=0;break;}			}			}			if(first==1)System.out.println(p1+" "+p2);			else System.out.println(p2+" "+p1);	}}
