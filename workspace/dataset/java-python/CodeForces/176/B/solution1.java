import java.util.*;import java.io.*;//import java.math.*; public class Task{        //  ..............code begins here.............. static long mod=(long)1e9+7;static long a=0,b=0;static void kmp(String s1,String s2){        String s=s2+"#"+s1+s1;        int n=s.length(),n1=s1.length();        int[] p=new int[n];        for(int i=1;i<n-1;i++){            int j=p[i-1];            char c1=s.charAt(j),c2=s.charAt(i);            while(j>0&&c1!=c2){                j=p[j-1];c1=s.charAt(j);            }            if(c1==c2) j++;            p[i]=j;            if(p[i]==n1)a++;        }        b=n1-a;  }static void solve() throws  IOException {        String s1=read(),s2=read();        int k=int_v(read());        kmp(s1,s2);        long[] dp1=new long[k+1],dp2=new long[k+1];        if(s1.equals(s2)) dp1[0]=1;        else dp2[0]=1;        for(int i=1;i<=k;i++){            dp1[i]=dp1[i-1]*Math.max(0,a-1)+dp2[i-1]*a;            dp2[i]=dp2[i-1]*Math.max(0,b-1)+dp1[i-1]*b;            dp1[i]%=mod; dp2[i]%=mod;        }        out.write(dp1[k]+"");}   public static void main(String[] args) throws  IOException{                assign();                int t=1;//int_v(read()),cn=1;                while(t--!=0){                    solve();                }                out.flush();} // taking inputs static BufferedReader s1;static BufferedWriter out;static String read() throws IOException{String line="";while(line.length()==0){line=s1.readLine();continue;}return line;}static int int_v (String s1){return Integer.parseInt(s1);}static long long_v(String s1){return Long.parseLong(s1);}static void sort(int[] a){List<Integer> l=new ArrayList<>();for(int x:a){l.add(x);}Collections.sort(l);for(int i=0;i<a.length;i++){a[i]=l.get(i);}}static int[] int_arr() throws IOException{String[] a=read().split(" ");int[] b=new int[a.length];for(int i=0;i<a.length;i++){b[i]=int_v(a[i]);}return b;}static long[] long_arr() throws IOException{String[] a=read().split(" ");long[] b=new long[a.length];for(int i=0;i<a.length;i++){b[i]=long_v(a[i]);}return b;}static void assign(){s1=new BufferedReader(new InputStreamReader(System.in));out=new BufferedWriter(new OutputStreamWriter(System.out));}//static String setpreciosion(double d,int k){BigDecimal d1 = new BigDecimal(Double.toString(d));return d1.setScale(k,RoundingMode.HALF_UP).toString();}//UP DOWN HALF_UPstatic int gcd(int a,int b){if(b==0){return a;}return gcd(b,a%b);}static long Modpow(long a,long p,long m){long res=1;while(p>0){if((p&1)!=0){res=(res*a)%m;}p >>=1;a=(a*a)%m;}return res%m;}static long Modmul(long a,long b,long m){return ((a%m)*(b%m))%m;}static long ModInv(long a,long m){return Modpow(a,m-2,m);}//static long nck(int n,int r,long m){if(r>n){return 0l;}return Modmul(f[n],ModInv(Modmul(f[n-r],f[r],m),m),m);}//static long[] f;}
