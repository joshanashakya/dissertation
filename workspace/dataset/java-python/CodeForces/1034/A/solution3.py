# -*- coding: utf-8 -*-import sys from math import gcdread = sys.stdin.buffer.readreadline = sys.stdin.buffer.readlinereadlines = sys.stdin.buffer.readlinesN = int(readline())A = list(map(int, readline().split()))M = max(A) + 1## 1- indexMinFactor = [0] * MMinFactor[1] = 1commondivisor = [0] * M def seive():    for i in range(2, M):        if not MinFactor[i]:            for j in range(i * 2, M, i):                if not MinFactor[j]: #���ꂠ�邱�Ƃōŏ��̈��q�ƂȂ�                    MinFactor[j] = i    for i in range(2, M):        if not MinFactor[i]:            MinFactor[i] = i            gc = A[0]for i in range(1, N):    gc = gcd(gc, A[i])seive()mi = -1 for i in range(N):    a = A[i] // gc    while a > 1:        div = MinFactor[a]        commondivisor[div] += 1        while a % div == 0:            a //= div        mi = max(mi, commondivisor[div])if mi == -1:    print(-1)else:    print(N - mi)
