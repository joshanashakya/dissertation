import java.io.*;import java.math.BigInteger;import java.util.*;import java.util.StringTokenizer; public class Main2 {     public static void main(String[] args) throws IOException {        FastReader fr = new FastReader();        PrintWriter pw = new PrintWriter(System.out);         int N = fr.nextInt();        HashMap<String, String> map = new HashMap<>();         for (int i = 0; i < N; ++i) {            String first = fr.next(), second = fr.next();            if (map.get(first) == null)                map.put(second, first);            else {                String old = map.get(first);                map.put(second, old);                map.put(first, null);            }        }         int n = 0;        for (String s : map.keySet())            if (map.get(s) != null)                n++;            pw.println(n);         for (String s : map.keySet())            if (map.get(s) != null)                pw.println(map.get(s) + " " + s);         pw.close();    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            st = null;            return str;        }    } }	 	 	    		 		 	    							   	
