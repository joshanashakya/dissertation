import java.lang.*;import java.util.*;import java.util.stream.Collectors;import java.io.*; public class Fridge   { 	public static boolean isRing(LinkedList[] adj, int n)	{		for(int i=1;i<=n;i++)		{			if(adj[i].size()!=2)return false;		}		return true;	}	public static boolean isBus(LinkedList[] adj, int n)	{		int endp=0;		for(int i=1;i<=n;i++)		{			if(adj[i].size()==1)endp++;		}		if(endp!=2)return false;		int midp=0;		for(int i=1;i<=n;i++)		{			if(adj[i].size()==2)midp++;		}				if(midp != n-2)return false;				return true;	}	public static boolean isStar(LinkedList[] adj, int n)	{		int maxconn=0 , maxnode=0;		for(int i=1;i<=n;i++)		{			if(adj[i].size() > maxconn)			{				maxconn = adj[i].size();				maxnode = i;			}		}				if(maxconn != (n-1))return false;				for(int i=1;i<=n;i++)		{			if(i==maxnode)continue;			if(adj[i].size()!=1)return false;		}				return true;	}		public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		int n = sc.nextInt();		int m = sc.nextInt();		LinkedList[] adj = new LinkedList[n+1];		for(int i=1;i<=n;i++)adj[i]=new LinkedList();		int highnode =0,maxconn=0;		for(int i=0;i<m;i++) {			int u = sc.nextInt();int v = sc.nextInt();			adj[u].add(v);adj[v].add(u);			if(maxconn <  adj[u].size())			{				highnode= u;				maxconn = adj[u].size();			}		}				//for(int i=1;i<=n;i++)System.out.println(adj[i].toString());				if(isRing(adj,n))System.out.println("ring topology");		else if(isBus(adj,n))System.out.println("bus topology");		else if(isStar(adj,n))System.out.println("star topology");		else System.out.println("unknown topology");										}} 
