import java.io.InputStreamReader;import java.io.IOException;import java.io.BufferedReader;import java.io.OutputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.math.BigInteger;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * @author AlexFetisov */public class Main {	public static void main(String[] args) {		InputStream inputStream = System.in;		OutputStream outputStream = System.out;		InputReader in = new InputReader(inputStream);		PrintWriter out = new PrintWriter(outputStream);		TaskA solver = new TaskA();		solver.solve(1, in, out);		out.close();	}} class TaskA {    public void solve(int testNumber, InputReader in, PrintWriter out) {        int qSize = 0;        int maxQSize = 0;        int timeLast = 0;        int n = in.nextInt();        for (int i = 0; i < n; ++i) {            int time = in.nextInt();            int am = in.nextInt();            if (timeLast <= time) {                qSize = 0;            } else {                qSize = timeLast - time;            }            timeLast = Math.max(time + am, timeLast + am);            qSize += am;            maxQSize = Math.max(maxQSize, qSize);        }        out.println(timeLast +  " " + maxQSize);    }} class InputReader {    private BufferedReader reader;    private StringTokenizer stt;     public InputReader(InputStream stream) {        reader = new BufferedReader(new InputStreamReader(stream));    }     public String nextLine() {        try {            return reader.readLine();        } catch (IOException e) {            return null;        }    }     public String nextString() {        while (stt == null || !stt.hasMoreTokens()) {            stt = new StringTokenizer(nextLine());        }        return stt.nextToken();    }     public int nextInt() {        return Integer.parseInt(nextString());    } } 
