import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				// T.C. -> O(log N) N = max(a, b) 		static long gcd(long a, long b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO in = new FastIO();		PrintWriter out = new PrintWriter(System.out);				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				int n = in.nextInt();		int m = in.nextInt();				int rc[] = new int[n];		int rw[] = new int[m];				int max_rc = 0;		int min_rc = (int)1e9;				for(int i = 0; i < n; i++) {			rc[i] = in.nextInt();			max_rc = Math.max(max_rc, rc[i]);						min_rc = Math.min(min_rc, rc[i]);		}				int min_rw = (int)1e9;				for(int i = 0; i < m; i++) {			rw[i] = in.nextInt();			min_rw = Math.min(min_rw, rw[i]);		}				int pa = Math.max(max_rc, min_rc * 2);						if(pa < min_rw) {			out.println(pa);		}				else {			out.print(-1);		}				out.flush();		out.close();	}}
