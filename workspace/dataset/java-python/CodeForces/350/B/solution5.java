// Name: William James// Date: Feb 7, 2019// Description: import java.util.*;import java.io.*; public class Main {     public static void main(String[] args) throws Exception {        in.init(System.in);        PrintWriter out = new PrintWriter(System.out);         boolean debug = false;         int numObjects = in.nextInt();        int[] objects = new int[numObjects + 1];        int[] arr = new int[numObjects + 1];        int[] paths = new int[numObjects + 1];        for (int i = 1; i < numObjects + 1; i++) {            objects[i] = in.nextInt();            if (debug) {                out.println(objects[i]);            }        }        if (debug) {            out.println("Printing paths...");        }        for (int i = 1; i < numObjects + 1; i++) {            int number = in.nextInt();            arr[i] = number;            paths[number]++;         }        int streak = 0;        int longestStreak = 0;        int holder = 0;        for (int i = numObjects; i >= 1; --i) {            if (debug) {                out.println("There are " + (objects.length - 1) + " objects to check.");                out.println("Currently checking position " + i);                out.println("Object type for position " + i + ": " + objects[i]);                out.println("Number paths for position " + i + ": " + paths[i]);                out.println("Streak: " + streak);                out.println("Longest streak: " + longestStreak);                out.println();            }            if (objects[i] == 1) {                int start = i;                streak = 1;                while (arr[start] != 0 && paths[arr[start]] <= 1) {                    start = arr[start];                    streak++;                }                if (streak > longestStreak) {                    longestStreak = streak;                    holder = i;                }            }         } //        if (debug) {//            out.println("Longest start: " + longestStart);//            out.println("Longest finish: " + longestFinish);//        }//        out.println(longestStreak);//        for (int i = longestStart; i < longestFinish; i++) {//            out.print(i + " ");//        }        out.println(longestStreak);        int count = 0;        int[] output = new int[numObjects];        while (count < longestStreak) {            output[count++] = holder;            holder = arr[holder];        }        for (int i = longestStreak - 1; i >= 0; i--) {            out.print(output[i] + " ");        }         out.println();        out.close();    } } /** * Class for buffered reading integer and double values */class in {     static BufferedReader reader;    static StringTokenizer tokenizer;     static void init(InputStream input) {        reader = new BufferedReader(new InputStreamReader(input));        tokenizer = new StringTokenizer("");    }     static String next() throws IOException {        while (!tokenizer.hasMoreTokens()) {            tokenizer = new StringTokenizer(reader.readLine());        }        return tokenizer.nextToken();    }     static int nextInt() throws IOException {        return Integer.parseInt(next());    }     static double nextDouble() throws IOException {        return Double.parseDouble(next());    }     static String nextLine() throws IOException {        return reader.readLine();    }     static long nextLong() throws IOException {        return Long.parseLong(next());    }}
