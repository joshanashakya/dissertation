import java.io.*;import java.lang.*;import java.io.InputStream;import java.io.InputStreamReader;import java.io.BufferedReader;import java.io.OutputStream;import java.io.PrintWriter;import java.io.IOException;import java.util.StringTokenizer;import java.util.Random;import java.util.Arrays;import java.util.ArrayList;import java.util.Collections;import java.util.TreeMap; public class Rating1600_837B {    static InputReader in = new InputReader(System.in);    static PrintWriter out = new PrintWriter(System.out);     public static void main(String[] args) {        int n = in.nextInt();        int m = in.nextInt();        String[][] arr = new String[n][m];        for(int i = 0; i<n; i++){            String s = in.next();            for(int j = 0; j<m; j++){                arr[i][j] = s.substring(j,j+1);            }        }        if(n<=2 && m<=2){            out.println("NO");        }        else if(check1(arr)){            boolean doit = true;            for(int i = 0; i<arr[0].length; i++){                String check = arr[0][i];                boolean escape = false;                for(int j = 1; j<arr.length; j++){                    if(!check.equals(arr[j][i])){                        out.println("NO");                        escape = true;                        break;                    }                }                if(escape){                    doit = false;                    break;                }            }            if(doit){                out.println("YES");            }        }        else if(check2(arr)){            boolean doit = true;            for(int i = 0; i<arr.length; i++){                String check = arr[i][0];                boolean escape = false;                for(int j = 1; j<arr[0].length; j++){                    if(!check.equals(arr[i][j])){                        out.println("NO");                        escape = true;                        break;                    }                }                if(escape){                    doit = false;                    break;                }            }            if(doit){                out.println("YES");            }        }        else{            out.println("NO");        }        out.close();    }     public static boolean check1(String[][] arr){        int blue = 0;        boolean vb = false;        int red = 0;        boolean vr = false;        int green = 0;        boolean vg = false;        String previous = arr[0][0];        if(previous.equals("R")){              ++red;        }        else if(previous.equals("G")){            ++green;        }        else{            ++blue;        }        for(int i = 1; i<arr[0].length; i++){            String temp = arr[0][i];            if(temp.equals("R")){                if(vr){                    return false;                }                else if(!temp.equals(previous)){                    ++red;                    if(previous.equals("G")){                        vg = true;                    }                    else{                        vb = true;                    }                }                else{                    ++red;                }            }            else if(temp.equals("G")){                if(vg){                    return false;                }                else if(!temp.equals(previous)){                    ++green;                    if(previous.equals("R")){                        vr = true;                    }                    else{                        vb = true;                    }                }                else{                    ++green;                }            }            else{                if(vb){                    return false;                }                else if(!temp.equals(previous)){                    ++blue;                    if(previous.equals("G")){                        vg = true;                    }                    else{                        vr = true;                    }                }                else{                    ++blue;                }            }            previous = arr[0][i];        }        if(blue==green && green==red){            return true;        }        else{            return false;        }    }    public static boolean check2(String[][] arr){        int blue = 0;        boolean vb = false;        int red = 0;        boolean vr = false;        int green = 0;        boolean vg = false;        String previous = arr[0][0];        if(previous.equals("R")){              ++red;        }        else if(previous.equals("G")){            ++green;        }        else{            ++blue;        }        for(int i = 1; i<arr.length; i++){            String temp = arr[i][0];            if(temp.equals("R")){                if(vr){                    return false;                }                else if(!temp.equals(previous)){                    ++red;                    if(previous.equals("G")){                        vg = true;                    }                    else{                        vb = true;                    }                }                else{                    ++red;                }            }            else if(temp.equals("G")){                if(vg){                    return false;                }                else if(!temp.equals(previous)){                    ++green;                    if(previous.equals("R")){                        vr = true;                    }                    else{                        vb = true;                    }                }                else{                    ++green;                }            }            else{                if(vb){                    return false;                }                else if(!temp.equals(previous)){                    ++blue;                    if(previous.equals("G")){                        vg = true;                    }                    else{                        vr = true;                    }                }                else{                    ++blue;                }            }            previous = arr[i][0];        }        if(blue==green && green==red){            return true;        }        else{            return false;        }    }    static class InputReader {        public BufferedReader reader;        public StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }        public long nextLong()        {            return Long.parseLong(next());        }        public double nextDouble()        {            return Double.parseDouble(next());        }        public String nextLine()        {            try            {                return reader.readLine();            }            catch(Exception e)            {                e.printStackTrace();            }            return null;        }        public boolean hasNext()        {            String next=null;            try            {                next=reader.readLine();            }            catch(Exception e)            {            }            if(next==null)            {                return false;            }            tokenizer=new StringTokenizer(next);            return true;        }    }}
