def find_company(friends, d):     def mergesort_tuples(tuples, index):         def merge(A, B):            i, j = 0, 0            result = []            while i < len(A) and j < len(B):                if A[i][index] < B[j][index]:                    result.append(A[i])                    i += 1                else:                    result.append(B[j])                    j += 1             result += A[i:]            result += B[j:]             return result         def divide(tuples):            if len(tuples) > 1:                middle = len(tuples) // 2                return merge(divide(tuples[:middle]), divide(tuples[middle:]))             return tuples         return divide(tuples)     def solve(friends, d):        friends = mergesort_tuples(friends, 0)        left_ptr = 0        right_ptr = 0        current_friendship = 0        max_friendship = 0        while right_ptr < len(friends):            if friends[right_ptr][0] - friends[left_ptr][0] < d:                current_friendship += friends[right_ptr][1]                right_ptr += 1            else:                max_friendship = max(current_friendship, max_friendship)                current_friendship -= friends[left_ptr][1]                left_ptr += 1         max_friendship = max(current_friendship, max_friendship)         return max_friendship     return solve(friends, d)  if __name__ == "__main__":    n, d = [int(x) for x in input().split()]    friends = []    for _ in range(n):        friends.append(tuple([int(x) for x in input().split()]))    print(find_company(friends, d))
