import java.io.*;import java.util.*;	public class C {		static HashSet<Integer> g[];	static int[] vis;	public static void main(String[] args)throws IOException 	{			FastReader f=new FastReader();		StringBuffer sb = new StringBuffer();				int n=f.nextInt();		int m=f.nextInt();				g=new HashSet[n+1];		for(int i=0;i<=n;i++)			g[i]=new HashSet<>();		vis=new int[n+1];				List<String> list=new ArrayList<>();		for(int i=0;i<m;i++)		{			int x=f.nextInt();			int y=f.nextInt();						g[x].add(y);			g[y].add(x);			list.add(x+" "+y);		}		int min=Integer.MAX_VALUE;		for(String s : list)		{			String str[]=s.split(" ");			int x=Integer.parseInt(str[0]);			int y=Integer.parseInt(str[1]);						for(int i=1;i<=n;i++)			{				if(g[i].contains(x) && g[i].contains(y))				{					int val=g[x].size()+g[y].size()+g[i].size();					val-=6;					min=Math.min(min, val);				}			}		}				System.out.println(min==Integer.MAX_VALUE?-1:min);	}		static class FastReader 	{ 	    BufferedReader br; 	    StringTokenizer st; Â 	    public FastReader() {	    	br = new BufferedReader(new	                 InputStreamReader(System.in)); 	    }	    String next() { 	        while (st == null || !st.hasMoreElements()) { 	            try{ 	                st = new StringTokenizer(br.readLine()); 	            } 	            catch (IOException  e) { 	                e.printStackTrace(); 	            } 	        } 	        return st.nextToken(); 	    } 	    int nextInt() { 	        return Integer.parseInt(next()); 	    } 	    long nextLong() { 	        return Long.parseLong(next()); 	    } 	    double nextDouble() { 	        return Double.parseDouble(next()); 	    } 	    String nextLine() { 	        String str = ""; 	        try{ 	            str = br.readLine(); 	        } 	        catch (IOException e) { 	            e.printStackTrace(); 	        } 	        return str; 	    } 	} }
