import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Comparator;import java.util.PriorityQueue;import java.util.StringTokenizer; public class CF574A {    public static void main(String[] args) {        FastReader input = new FastReader();        PrintWriter pw = new PrintWriter(System.out);         int n = input.nextInt();        int[] arr =  new int[n];         PriorityQueue<Integer> pq = new PriorityQueue<Integer>(new Comparator<Integer>() {            @Override            public int compare(Integer o1, Integer o2) {                if(o1 == o2)                return 0;                else if(o1 < o2)                    return 1;                else                    return -1;            }        });        for(int i = 0;i < n;i++){            arr[i] = input.nextInt();            if(i > 0)                pq.add(arr[i]);        }         int got = arr[0];        int ans = 0;         while (true){            int top = pq.poll();            if(got > top){                break;            }            else{                got++;                top--;                ans++;                pq.add(top);            }        }        pw.println(ans);         pw.flush();        pw.close();    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
