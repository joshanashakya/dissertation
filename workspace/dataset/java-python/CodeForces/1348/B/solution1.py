import math # n, m ,k = map(int, input().rstrip().split())# l = list(map(int, input().split("+")))# n=int(input())# l = list(map(int, input().rstrip().split()))# n, k = map(int, input().rstrip().split())# l = list(map(int, input().split()))# A Better (than Naive) Solution to find all divisiors# for _ in range(int(input())):## n = int(input())# s = list(input()) # N = 1000005# mod = (int)(1e9 + 7)## factorial = [0] * N# modinverse = [0] * N### def power(a, m1):#     if (m1 == 0):#         return 1#     elif (m1 == 1):#         return a#     elif (m1 == 2):#         return (a * a) % mod#     elif (m1 & 1):#         return (a * power(power(a, m1 // 2), 2)) % mod#     else:#         return power(power(a, m1 // 2), 2) % mod### def factorialfun():#     factorial[0] = 1#     for i in range(1, N):#         factorial[i] = (factorial[i - 1] * i) % mod### def modinversefun():#     modinverse[N - 1] = power(factorial[N - 1],#                               mod - 2) % mod##     for i in range(N - 2, -1, -1):#         modinverse[i] = (modinverse[i + 1] *#                          (i + 1)) % mod### def binomial(n, r):#     if (r > n):#         return 0#     a = (factorial[n] * modinverse[n - r]) % mod##     a = (a * modinverse[r]) % mod#     return a### def ways(x, y):#     if ((2 * x - y) % 3 == 0 and#             (2 * y - x) % 3 == 0):#         m = (2 * x - y)#         n = (2 * y - x)#         return binomial(n + m, n)### import math### # from mpmath import *### # Function for calculating factorial# def stirlingFactorial(n):#     if (n == 1):#         return 1##     e = 2.71#     z = (math.sqrt(2 * 3.14 * n) % mod * math.pow((n / e), n) % mod)#     return math.floor(z) # x="qwertyuiopasdfghjkl;zxcvbnm,./"# s=input()# j=-1# if s=="R":#     j=1# l=list(input())# for i in range(len(l)):  # ze=s.count("0")# on=s.count("1")# if ze==0:#     print(1)# elif on==0:#     print(1)# else:#     j=0#     while(j<len(s)):# from numpy import sign def solve(n, k, l):    x=list(set(l))    # x.sort(reverse=True)    if k==1 and len(x)>1:        print(-1)    elif len(x)>k:        print(-1)    else:        if len(x)<k:            while(len(x)<k):                x.append(1)        ans=x*(n)        print(len(x)*(n))        print(*ans)  for i in range(int(input())):    n, k = map(int, input().rstrip().split())    l = list(map(int, input().rstrip().split()))    solve(n, k, l)     # curr = -1    # f=True    # j = 0    # sel=set(l)    # while j<len(l):    #     print()    #     x = []    #     for i in range(j, j + k):    #         if i<len((l)):    #             if l[i]>k:    #                 f=False    #                 break    #             if l[i] not in x:    #                 x.append(l[i])    #             else:    #                 for z in sel:    #                     if z not in x:    #                         l.insert(i, z)    #         else:    #             j=len(l)+1    #         print(l)    #         j += 1    # if f:    #     print(len(l))    #     print(*l)    # else:    #     print(-1)     # else:    #     for z in range(n):    #         if x[z]==0:    #             ans.inse
