import java.io.*;import java.util.*;import java.math.*;                       /* Noah            date : 7-03-2021  */public class Main {     static FastReader in;    static PrintWriter o;     public static void solve(){        int t = in.nextInt();        while (t-- > 0) {            char[] ch = in.next().toCharArray();            char[] ch1 = new char[ch.length];            Arrays.fill(ch1, '1');            int ans = Integer.MAX_VALUE;            for (int i = ch.length - 1; i >= 0; i--) {                ch1[i] = '0';                int diff = 0;                for (int j = 0; j < ch.length; j++) {                    if (ch[j] != ch1[j]) {                        diff++;                    }                }                ans = Math.min(ans, diff);            }            Arrays.fill(ch1, '0');            for (int i = ch.length - 1; i >= 0; i--) {                ch1[i] = '1';                int diff = 0;                for (int j = 0; j < ch.length; j++) {                    if (ch[j] != ch1[j]) {                        diff++;                    }                }                ans = Math.min(ans, diff);            }            int diff = 0;            for (int i = 0; i < ch.length; i++) {                if (ch[i] != '0') {                    diff++;                }            }            ans = Math.min(ans, diff);            diff = 0;            for (int i = 0; i < ch.length; i++) {                if (ch[i] != '1') {                    diff++;                }            }            ans = Math.min(ans, diff);            o.println(ans);        }        o.close();    }     public static void main(String[] args) {        in = new FastReader();        o = new PrintWriter(System.out);        solve();        return;    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long[] readLongArray(int n) {            long[] a = new long[n];            for (int i = 0; i < n; i++) a[i] = nextLong();            return a;        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }         boolean isReady() throws Throwable{            return br.ready();        }     } }
