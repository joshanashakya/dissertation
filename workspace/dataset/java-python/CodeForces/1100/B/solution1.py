from collections import defaultdict, deque, Counterfrom sys import stdin, stdoutfrom heapq import heappush, heappopimport mathimport ioimport osimport mathimport bisect #?############################################################  def isPrime(x):    for i in range(2, x):        if i*i > x:            break        if (x % i == 0):            return False    return True #?############################################################  def ncr(n, r, p):    num = den = 1    for i in range(r):        num = (num * (n - i)) % p        den = (den * (i + 1)) % p    return (num * pow(den, p - 2, p)) % p  #?############################################################ def primeFactors(n):    l = []    while n % 2 == 0:        l.append(2)        n = n / 2    for i in range(3, int(math.sqrt(n))+1, 2):        while n % i == 0:            l.append(int(i))            n = n / i    if n > 2:        l.append(n)    return list(set(l))  #?############################################################ def power(x, y, p):    res = 1    x = x % p    if (x == 0):        return 0    while (y > 0):        if ((y & 1) == 1):            res = (res * x) % p        y = y >> 1        x = (x * x) % p    return res #?############################################################  def sieve(n):    prime = [True for i in range(n+1)]    p = 2    while (p * p <= n):        if (prime[p] == True):            for i in range(p * p, n+1, p):                prime[i] = False        p += 1    return prime  #?############################################################ def digits(n):    c = 0    while (n > 0):        n //= 10        c += 1    return c #?############################################################  def ceil(n, x):    if (n % x == 0):        return n//x    return n//x+1 #?############################################################  def mapin():    return map(int, input().split()) #?############################################################  # input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline# python3 15.py<in>opn, m = mapin()l = [int(x) for x in input().split()]x = 0f = [0]*mdd = [0]*nfor i in range(m):    if(dd[l[i]-1] == 0):        dd[l[i]-1] = 1        x+=1    else:        dd[l[i]-1] +=1    if(x == n):        f[i] = 1        x = 0        for j in range(n):            dd[j]-=1            if(dd[j] >0):                x+=1 for i in f:    print(i, end = "")print("")     
