import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter; public class CF411B {    public static int[] processor(int[][] instructions, int n, int m, int k) {        int[] lockedCycle = new int[n];        int[] cells = new int[k];        reset(cells);         for (int i = 0; i < m; i++) {            for (int j = 0; j < n; j++) {                int cell = instructions[j][i] - 1;                if (cell == -1) // do nothing                    continue;                int cycle = i + 1;                int core = j;                 if (lockedCycle[core] != 0) // already locked, ignore command                    continue;                 if (cells[cell] == -1) // free                    cells[cell] = core;                else {                    lockedCycle[core] = cycle;                    if (cells[cell] != -2) { // first time to lock the cell in this cycle                        int prevCore = cells[cell]; // update lock status of previos core                        if (lockedCycle[prevCore] == 0)                            lockedCycle[prevCore] = cycle;                        cells[cell] = -2;                    }                }            }            reset(cells); // reset cell if not locked        }         return lockedCycle;    }     public static void reset(int[] arr) {        for (int i = 0; i < arr.length; i++) {            if (arr[i] != -2)                arr[i] = -1;        }    }     public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        PrintWriter pw = new PrintWriter(System.out);         String[] line = br.readLine().split(" ");        int n = Integer.parseInt(line[0]);        int m = Integer.parseInt(line[1]);        int k = Integer.parseInt(line[2]);         int[][] instructions = new int[n][m];        for (int i = 0; i < n; i++) {            line = br.readLine().split(" ");            for (int j = 0; j < m; j++)                instructions[i][j] = Integer.parseInt(line[j]);        }         int[] output = processor(instructions, n, m, k);        for (int i : output)            pw.println(i);         pw.flush();    }}
