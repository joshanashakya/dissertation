import java.util.*;import java.math.*;import java.io.*;import java.lang.*;public class Main {	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (final IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (final IOException e) {				e.printStackTrace();			}			return str;		} 		int[] nextIntArray(final int n) {			final int a[] = new int[n];			for (int i = 0; i < n; i++) {				a[i] = Integer.parseInt(next());			}			return a;		} 	} 	private static long startTime = System.currentTimeMillis(); 	public static void main(final String[] args) {		FastReader sc =new FastReader();		int n=sc.nextInt();		int a[]=sc.nextIntArray(n);		int min=Integer.MAX_VALUE;		for(int i=1;i<=n;i++)		{			//max j value can be either n-i; if we are in starting;			int option1=n-i;			int option2=i-1; //if i=n then j will be 1, so its n-1;			int div=Math.max(option1,option2);			min=Math.min(min,a[i-1]/div);		}		System.out.println(min);		//Here  	}	}  //Templates for Comparator and Classes - @jagrit_07/*class Pair	{				long i; //index;		long l; //left;		long c; //cost;		public Pair(long x,long y,long z)		{			this.i=x;			this.l=y;			this.c=z;		}		public String toString()		{			return this.i+" "+this.l+" "+this.c;		}	}class Comp implements Comparator<Pair>	{		public int compare(Pair p1, Pair p2)		{			if(p1.c!=p2.c)			{				return (int)(p1.c-p2.c); //sort acc to cost;			}			else{				return (int)(p1.i-p2.i); //sort acc to index;			}					}	}*/ /*  HashMap - Put template - d.put(a1,d.getOrDefault(a1,0)+1);*/
