def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()):  #CODE def solve(n):    d = []    i = 1    while i * i <= n :        if n % i == 0 :            if n // i == i :                d.append(i)            else:                d += [i , n // i]        i +=1     return d  n = INT()d = solve(n)d.sort(reverse= True) for i in d :    f = True    for j in range(33):        if (((2 ** j) - 1) * (2 **(j - 1))) == i :            print(i)            exit(0)   
