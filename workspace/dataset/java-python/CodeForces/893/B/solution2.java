import java.io.*;import java.util.*; public class Main {    static ArrayList<Integer> factors = new ArrayList<Integer>();    static ArrayList<Integer> factors2 = new ArrayList<Integer>();    public static void main(String[] args) throws Exception {        Scanner scan = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        factorization(scan.nextInt());        //System.out.println(factors);        label1: for (int i = factors.size()-1; i >= 0; i--) {            for (int j = 0; j < 17; j++) {                if(factors.get(i) == (int)((Math.pow(2,j)-1) * Math.pow(2,j-1)) ){                    pw.println(factors.get(i));                    break label1;                }            }        }        pw.flush();        pw.close();    }    public static void factorization(int num){        for(int i = 1; i*i <= num ; i ++){            if(num % i == 0){                factors.add(i);                if(i*i != num)                    factors2.add(0,num/i);            }        }        factors.addAll(factors2);    }    static long fastPower(long base, long exp){        long res = 1;        while(exp > 0){            if(exp %2 == 1)                res = res * base;            base = base * base;            exp = exp  / 2;        }        return res;    }     static int gcd(int m , int n)    {        if(m == 0)            return n;        return gcd(n % m, m);    }    static class Scanner    {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));}         public String next() throws IOException        {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int nextInt() throws IOException {return Integer.parseInt(next());}         public long nextLong() throws IOException {return Long.parseLong(next());}         public String nextLine() throws IOException {return br.readLine();}         public double nextDouble() throws IOException        {            String x = next();            StringBuilder sb = new StringBuilder("0");            double res = 0, f = 1;            boolean dec = false, neg = false;            int start = 0;            if(x.charAt(0) == '-')            {                neg = true;                start++;            }            for(int i = start; i < x.length(); i++)                if(x.charAt(i) == '.')                {                    res = Long.parseLong(sb.toString());                    sb = new StringBuilder("0");                    dec = true;                }                else                {                    sb.append(x.charAt(i));                    if(dec)                        f *= 10;                }            res += Long.parseLong(sb.toString()) / f;            return res * (neg?-1:1);        }         public boolean ready() throws IOException {return br.ready();}     }}
