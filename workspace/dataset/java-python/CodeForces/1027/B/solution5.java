import java.io.BufferedReader;import java.io.InputStreamReader;import java.util.StringTokenizer; public class B {    public static void main(String args[])throws Exception{        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer(br.readLine());        StringBuilder sb=new StringBuilder();        int n=Integer.parseInt(st.nextToken());        int q=Integer.parseInt(st.nextToken());        for(int i=0;i<q;i++){            st=new StringTokenizer(br.readLine());            int x=Integer.parseInt(st.nextToken());            int y=Integer.parseInt(st.nextToken());            long sum=(long)x+y;            if(sum%2==0){                //calculate effective index                sb.append((1+(long)(fun(x,y,n,sum)-1))+"\n");             }else{                //calculate effective index                long k=n;                k=k*k;                k=(k+1)/2;                k++;                sb.append((k+(long)(fun(x,y,n,sum)-1))+"\n");            }        }        System.out.print(sb);    }    public static long fun(int x,int y,int n,long sum){        long row_count=x-1;        if(n%2==0){            row_count=row_count*(n/2);            row_count+=(y+1)/2;         }else if(sum%2==0){            long k=row_count;            row_count=((row_count)*((n)/2));            // row_count=row_count+((k-(k+1/2))*(n+1)/2);             row_count+=(k+1)/2;            row_count+=(y+1)/2;        }        else if(sum%2!=0){            long k=row_count;            row_count=((row_count)*((n)/2));           // row_count=row_count+((k-(k+1/2))*(n+1)/2);                row_count+=k/2;                row_count+=(y+1)/2;          }       //System.out.println(row_count);        return row_count;    }}
