#include <iostream>#include <stdio.h>#include <stdlib.h>#include <algorithm>#include <math.h>#include <queue>#include <string>#include <set>#include <string.h>#include <map>#include <vector>#include <fstream>using namespace std;#define N 1024#define M 1100000//#define MAXN 1125899906842624L#define MAXVAL 130000000#define MAXN 520*520#define MOD 998244353int n, m, ans;int a[10];bool vis[10];bool use[10][10];struct ac {	int x, y;	ac(int x0, int y0) {		x = x0;		y = y0;	}};vector<ac> vec;int b[10];int wf() {	int i, k = 0;	memset(use, 0, sizeof(use));	for (i = 0; i < vec.size(); i++) {		int x = vec[i].x;		int y = vec[i].y;		x = a[x];		y = a[y];		if (!use[x][y]) {			k++;			use[x][y] = use[y][x] = 1;		}	}	return k;}void dfs(int dep) {	if (dep == n + 1) {		int k = wf();		if (k > ans) {			ans = k;		}		return;	}	int i, j, k = 0;	for (i = 1; i <= 6; i++) {		a[dep] = i;		b[i]++;		k = 0;		for (j = 1; j <= 7; j++) {			if (b[j] >= 2) {				k++;			}		}		if (k <= 1) {			dfs(dep + 1);		}		b[i]--;	}}void solve() {	int i, j, k, x, y;	vec.clear();	memset(vis, 0, sizeof(vis));	memset(b, 0, sizeof(b));	for (i = 0; i < m; i++) {		scanf("%d %d", &x, &y);		vec.push_back(ac(x, y));	}	ans = 0;	if (n <= 6) {		for (i = 1; i <= n; i++) {			a[i] = i;		}		ans = wf();	}	else {		dfs(1);	}	printf("%d\n", ans);}int main() {	int tc;	while (scanf("%d %d", &n, &m) != EOF) {		solve();	}	return 0;}
