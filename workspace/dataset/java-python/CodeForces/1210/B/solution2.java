import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=1;        while(T-->0)        {            int n=input.nextInt();            HashSet<Integer> a[]=new HashSet[n];            for(int i=0;i<n;i++)            {                long v=input.nextLong();                HashSet<Integer> set=new HashSet<>();                while(v>0)                {                    int x=(int)(Math.log(v)/Math.log(2));                    set.add(x);                    v=v-(long)Math.pow(2L,(long)x);                }                a[i]=set;            }            /*            for(int i=0;i<n;i++)            {                out.println(a[i]);            }            */            long b[]=new long[n];            for(int i=0;i<n;i++)            {                b[i]=input.nextLong();            }            HashSet<Integer> set=new HashSet<>();            for(int i=0;i<n-1;i++)            {                if(!set.contains(i))                {                    for(int j=i+1;j<n;j++)                    {                        if(a[i].size()==a[j].size())                        {                            int flag=0;                            Iterator it=a[i].iterator();                            while(it.hasNext())                            {                                int v=(int)it.next();                                if(!a[j].contains(v))                                {                                    flag=1;                                    break;                                }                            }                            if(flag==0)                            {                                set.add(i);                                set.add(j);                            }                        }                    }                }            }            if(set.isEmpty())            {                out.println(0);            }            else            {                for(int i=0;i<n;i++)                {                    if(!set.contains(i))                    {                        Iterator it=set.iterator();                        while(it.hasNext())                        {                            int in=(int)it.next();                            if(a[i].size()<=a[in].size())                            {                                int flag=0;                                Iterator ite=a[i].iterator();                                while(ite.hasNext())                                {                                    int v=(int)ite.next();                                    if(!a[in].contains(v))                                    {                                        flag=1;                                        break;                                    }                                }                                if(flag==0)                                {                                    set.add(i);                                    break;                                }                            }                        }                    }                }                long sum=0;                Iterator it=set.iterator();                while(it.hasNext())                {                    int in=(int)it.next();                    sum+=b[in];                }                out.println(sum);            }        }        out.close();    }    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }}
