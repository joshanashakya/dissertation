import java.io.*;import java.math.BigInteger;import java.util.*;public class Codeforces {    public static void main(String[] args) throws UnsupportedEncodingException, IOException, Exception {        StringBuilder out = new StringBuilder();        StringTokenizer tk;        Reader.init(System.in);        Scanner sc = new Scanner(System.in);        //  ArrayList<Integer> arr = new ArrayList<>();        int n = Reader.nextInt();        int k = Reader.nextInt();        int[] arr = new int[n];        for (int i = 0; i < n; i++) {            arr[i] = Reader.nextInt();        }        int sum = 0;        for (int i = 0; i <k ; i++) {            int f=0,s=0;            for (int j = i; j <n; j+=k) {               if(arr[j]==1){                   f++;                }               else{                   s++;               }             }            sum+=Math.min(f,s);        }        System.out.println(sum);    }}  class Reader {     static BufferedReader reader;    static StringTokenizer tokenizer;     static void init(InputStream input) throws UnsupportedEncodingException {        reader = new BufferedReader(                new InputStreamReader(input, "UTF-8"));        tokenizer = new StringTokenizer("");    }     static String next() throws IOException {        while (!tokenizer.hasMoreTokens()) {            //TODO add check for eof if necessary            tokenizer = new StringTokenizer(                    reader.readLine());        }        return tokenizer.nextToken();    }     static String nextLine() throws IOException {        return reader.readLine();    }     static int nextInt() throws IOException {        return Integer.parseInt(next());    }     static double nextDouble() throws IOException {        return Double.parseDouble(next());    }     static long nextLong() throws IOException {        return Long.parseLong(next());    } }
