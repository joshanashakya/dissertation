import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{     public static void main(String[] args)    {        FastScanner input = new FastScanner();         long a, b;        a = input.nextLong();        b = input.nextLong();        if (a == b) {            System.out.println("0");        } else {            int checka[] = new int[6];            int checkb[] = new int[6];            int i = 2;            while (a % i == 0) {                checka[2]++;                a /= i;            }            i = 3;            while (a % i == 0) {                checka[3]++;                a /= i;            }            i = 5;            while (a % i == 0) {                checka[5]++;                a /= i;            }            i = 2;            while (b % i == 0) {                checkb[2]++;                b /= i;            }            i = 3;            while (b % i == 0) {                checkb[3]++;                b /= i;            }            i = 5;            while (b % i == 0) {                checkb[5]++;                b /= i;            }            if(a!=b)            {                System.out.println("-1");                return;            }            else            {                System.out.println(Math.abs(checka[2]-checkb[2])+Math.abs(checka[3]-checkb[3])+Math.abs(checka[5]-checkb[5]));            }         }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
