import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Scanner;import java.util.StringTokenizer;import java.util.TreeSet;  public class vk18{    public static void main(String[] stp) throws Exception    {        Scanner scan = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer(br.readLine());        int n=Integer.parseInt(st.nextToken()),i;        Pair pair[]=new Pair[n+1];        TreeSet<Integer> ts=new TreeSet<>();        for(i=1;i<=n;i++)        {            st=new StringTokenizer(br.readLine());            pair[i] = new Pair(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));            if(pair[i].d==0) ts.add(i);        }        while(ts.size()!=1)        {            int index=ts.pollFirst();            int right=index;            while(pair[right].g!=0)            {                right=pair[right].g;            }            pair[right].g=ts.first();            pair[ts.first()].d=right;        }        for(i=1;i<=n;i++) pw.println(pair[i].d+" "+pair[i].g);        pw.flush();    }    static class Pair implements Comparable<Pair>    {        int d,g;        public Pair(int d,int g)        {            this.d = d;            this.g = g;        }        public int compareTo(Pair p)        {            return -Integer.compare(this.d,p.d);        }    }  }
