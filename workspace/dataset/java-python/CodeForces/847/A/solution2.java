import java.io.*;import java.math.*;import java.util.*; public class Main {	static final long MOD = 1000000007L;	static final int INF = 50000000;	public static void main(String[] args) {		FastScanner sc = new FastScanner();		PrintWriter pw = new PrintWriter(System.out);				int N = sc.ni();		int[][] nums = new int[N][2];		ArrayDeque<Integer>[] ads = new ArrayDeque[N];		ArrayDeque<int[]> bfs = new ArrayDeque<int[]>();		for (int i = 0; i < N; i++) {			nums[i] = new int[] {sc.ni()-1,sc.ni()-1};			if (nums[i][0]==-1) {				bfs.add(new int[] {i,i});				ads[i] = new ArrayDeque<Integer>();			}		}		while (!bfs.isEmpty()) {			int[] first = bfs.pollFirst();			ads[first[1]].add(first[0]);			int[] next = new int[] {nums[first[0]][1],first[1]};			if (next[0] >= 0) {				bfs.add(next);			}		}		ArrayList<Integer> ans = new ArrayList<Integer>();		ans.add(-1);		for (int i = 0; i < N; i++) {			if (ads[i] != null) {				ans.addAll(ads[i]);			}		}		ans.add(-1);				int[][] print = new int[N][2];		for (int i = 1; i <= N; i++) {			print[ans.get(i)][0] = 1+ans.get(i-1);			print[ans.get(i)][1] = 1+ans.get(i+1);		}		for (int[] pair: print) {			pw.println(pair[0] + " " + pair[1]);		}				pw.close();	}Â 	    static class FastScanner {         BufferedReader br;         StringTokenizer st;           public FastScanner() {             br = new BufferedReader(new InputStreamReader(System.in));         }           String next() {             while (st == null || !st.hasMoreElements()) {                 try {                     st = new StringTokenizer(br.readLine());                } catch (IOException  e) {                     e.printStackTrace();                 }             }             return st.nextToken();         }                int ni() {             return Integer.parseInt(next());         }          long nl() {             return Long.parseLong(next());         }           double nd() {             return Double.parseDouble(next());         }           String nextLine() {            String str = "";             try {                 str = br.readLine();             } catch (IOException e) {                e.printStackTrace();             }             return str;        }    }}
