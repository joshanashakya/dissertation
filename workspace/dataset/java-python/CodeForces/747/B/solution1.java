import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BMammothsGenomeDecoding solver = new BMammothsGenomeDecoding();        solver.solve(1, in, out);        out.close();    }     static class BMammothsGenomeDecoding {        int n;        char[] arr;         public void readInput(Scanner sc) {            n = sc.nextInt();            arr = sc.next().toCharArray();        }         public void solve(int testNumber, Scanner sc, PrintWriter pw) {            int q = 1;            while (q-- > 0) {                readInput(sc);                if (n % 4 == 0) {                    int[] count = new int[26];                    count[0] = n / 4;                    count['C' - 'A'] = n / 4;                    count['G' - 'A'] = n / 4;                    count['T' - 'A'] = n / 4;                    for (char c : arr) {                        if (c == '?')                            continue;                        count[c - 'A']--;                    }                    for (int i = 0; i < n; i++) {                        if (arr[i] == '?') {                            for (int j = 0; j < 26; j++)                                if (count[j] > 0) {                                    count[j]--;                                    arr[i] = (char) ('A' + j);                                    break;                                }                        }                    }                    for (int i = 0; i < 26; i++) {                        if (count[i] != 0) {                            pw.println("===");                            return;                        }                    }                    pw.println(new String(arr));                } else {                    pw.println("===");                }            }        }     }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() {            try {                while (st == null || !st.hasMoreTokens())                    st = new StringTokenizer(br.readLine());                return st.nextToken();            } catch (Exception e) {                throw new RuntimeException(e);            }        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
