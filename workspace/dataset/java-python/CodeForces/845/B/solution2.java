import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{           public static void main(String args[])    {        FastScanner input = new FastScanner();        String  s = input.next();        int left[] = new int[3];        int right[] = new int[3];        int first=0;        for (int i = 0; i < 3; i++) {            left[i] = s.charAt(i)-'0';            first+=left[i];        }        int last = 0;        for (int i = 0; i < 3; i++) {            right[i] = s.charAt(i+3)-'0';            last+=right[i];        }        if(first==last)        {            System.out.println("0");            return;        }        int add[] = new int[6];        if(first>last)        {            for (int i = 0; i < 3; i++) {                add[i] = left[i];            }            for (int i = 0; i < 3; i++) {                add[i+3] = 9-right[i];            }//            Arrays.sort(add);//            System.out.println(Arrays.toString(add));        }        else         {             for (int i = 0; i < 3; i++) {                add[i] = 9-left[i];            }            for (int i = 0; i < 3; i++) {                add[i+3] = right[i];            }           //            System.out.println(Arrays.toString(add));        }         Arrays.sort(add);        int dif  = Math.abs(last-first);        int  i =5;        int count=0;        while(dif>0&&i>=0)        {            count++;            dif-=add[i];            i--;        }        System.out.println(count);    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
