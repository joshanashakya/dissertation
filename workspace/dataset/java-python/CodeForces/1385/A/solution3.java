import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Arrays;import java.util.Random;import java.util.StringTokenizer;import java.util.List;import java.util.Collections;import java.util.Map;import java.util.HashMap;import java.util.Comparator;import java.util.stream.IntStream;import java.util.ArrayDeque;import java.util.PriorityQueue;import java.util.Set;import java.util.HashSet;public class Main { 	private static FastScanner fs=new FastScanner(); 	private static PrintWriter out = new PrintWriter(System.out);	public static void main(String[] args) {		int n = fs.nextInt();		while(n-->0)		{			int x = fs.nextInt(),y = fs.nextInt(),z = fs.nextInt(); 			int arr[] = new int [] {x,y,z};			Arrays.sort(arr);			if(arr[1] != arr[2])			{				System.out.println("NO");			}			else 				{	System.out.println("YES");					System.out.println(arr[0]+" "+arr[0]+" "+arr[2]);		}		}   					}	static class Node implements Comparable<Node>	{		Integer start;		Integer end;		public int compareTo(Node a)		{			int v = start.compareTo(a.start);			// if(v==0) return end.compareTo(a.end);			return v;		} 	} 	static final Random random=new Random();		static void ruffleSort(int [] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n); int temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	} 	static class FastScanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer("");		String next() {			while (!st.hasMoreTokens())				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}		int[] readArray(int n) {			int[] a=new int[n];			for (int i=0; i<n; i++) a[i]=nextInt();			return a;		}		long nextLong() {			return Long.parseLong(next());		}		int [] sort(int [] arr)		{			List<Integer> list = new ArrayList<>();			for(int i : arr) list.add(i);						Collections.sort(list);			int res[] = new int[arr.length];			for(int i=0;i<arr.length;i++) res[i] = list.get(i);			 			return res;		}		void debug(int a)		{			System.out.println("This is var "+a);		}	}}
