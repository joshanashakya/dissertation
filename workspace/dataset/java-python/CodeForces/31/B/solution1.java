 import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				static int gcd(int a, int b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				String str = io.next();		if(str.charAt(0) == '@' || str.charAt(str.length() - 1) == '@') {			System.out.println("No solution");			return;		}				ArrayList<String> ans = new ArrayList<>();				int at_freq = 0;		int n = str.length();				int tf = 0;		String A = "", B = "";		for(int i = 0; i < n; i++) {						if(str.charAt(i) != '@' && at_freq == 0) {				A = A + str.charAt(i);			}			if(str.charAt(i) == '@') {				at_freq++;				tf++;			}			if(str.charAt(i) != '@' && at_freq == 1) {				if(A.length() == 0) {					System.out.println("No solution");					return;				}				B = B + str.charAt(i);				ans.add(A + "@" + B);				B = "";				A = "";				at_freq = 0;			}			if(at_freq > 1) {				System.out.println("No solution");				return;			}		}		if(tf == 0) {			System.out.println("No solution");			return;		}		int idx = -1;		for(int i = str.length() - 1; i >= 0; i--) {			if(str.charAt(i) == '@') {				idx = i;				break;			}		}				if(idx < str.length() - 2) {			String toAdd = ans.get(ans.size() - 1) + str.substring(idx + 2);			ans.remove(ans.size() - 1);			ans.add(toAdd);		}				for(int i = 0; i < ans.size(); i++) {			if(i == ans.size() - 1) {				System.out.print(ans.get(i));			}				else {				System.out.print(ans.get(i) + ",");			}		} 	}}
