import java.io.*;import java.util.*; public class WormEvolution_Edu31 {  public static void main(String[] args) throws IOException{    FastReader fr = new FastReader();    PrintWriter pr = new PrintWriter(new OutputStreamWriter(System.out));    int n = fr.nextInt();    int[] arr = new int[n];     for (int i = 0; i < n; i++) {      arr[i] = fr.nextInt();    }     // run a complete search    for (int i = 0; i < n - 2; i++) {      for (int j = i + 1; j < n - 1; j++) {        for (int k = j + 1; k < n; k++) {          if (arr[i] + arr[j] == arr[k]) {            pr.println((k + 1) + " " + (i + 1) + " " + (j + 1));            pr.close();            return;          } else if (arr[j] + arr[k] == arr[i]) {            pr.println((i + 1) + " " + (j + 1) + " " + (k + 1));            pr.close();            return;              } else if (arr[i] + arr[k] == arr[j]) {            pr.println((j + 1) + " " + (k + 1) + " " + (i + 1));            pr.close();            return;            }        }      }    }     pr.println(-1);    pr.close();  }   static class Pair {      int x, y;      public Pair(int x, int y) {          this.x = x;          this.y = y;      }  }   static int toInt(String s) {    return Integer.parseInt(s);  }   static class FastReader   {       BufferedReader br;       StringTokenizer st;        public FastReader() throws FileNotFoundException       {           br = new BufferedReader(new InputStreamReader(System.in));       }        String next()       {           while (st == null || !st.hasMoreElements())           {               try              {                   st = new StringTokenizer(br.readLine());               }               catch (IOException  e)               {                   e.printStackTrace();               }           }           return st.nextToken();       }        int nextInt()       {           return Integer.parseInt(next());       }        long nextLong()       {           return Long.parseLong(next());       }        double nextDouble()       {           return Double.parseDouble(next());       }        String nextLine()       {           String str = "";           try          {               str = br.readLine();           }           catch (IOException e)           {               e.printStackTrace();           }           return str;       }   }}
