//package practice;import java.io.BufferedReader;import java.lang.*;import java.io.FileReader;import java.io.IOException;import java.math.BigInteger; import java.io.IOException;import java.io.InputStreamReader;import java.math.BigDecimal;import java.math.BigInteger;import java.math.MathContext;import java.util.*;import java.util.LinkedList;import java.util.stream.IntStream; public class Main{		 static class FastReader  	    { 	        BufferedReader br; 	        StringTokenizer st; 	  	        public FastReader() 	        { 	            br = new BufferedReader(new	                     InputStreamReader(System.in)); 	        } 	  	        String next() 	        { 	            while (st == null || !st.hasMoreElements()) 	            { 	                try	                { 	                    st = new StringTokenizer(br.readLine()); 	                } 	                catch (IOException  e) 	                { 	                    e.printStackTrace(); 	                } 	            } 	            return st.nextToken(); 	        } 	  	        int nextInt() 	        { 	            return Integer.parseInt(next()); 	        } 	  	        long nextLong() 	        { 	            return Long.parseLong(next()); 	        } 	  	        double nextDouble() 	        { 	            return Double.parseDouble(next()); 	        } 	  	        String nextLine() 	        { 	            String str = ""; 	            try	            { 	                str = br.readLine(); 	            } 	            catch (IOException e) 	            { 	                e.printStackTrace(); 	            } 	            return str; 	        } 	    } 		 public static void main(String[] args) throws java.lang.Exception		   { 		FastReader sc=new FastReader();		int n=sc.nextInt();		int arr[]=new int[n];		for(int i=0;i<n;i++) {			arr[i]=sc.nextInt();		}		int min=Integer.MAX_VALUE;		int max=Integer.MIN_VALUE;		int i1=0,i2=0;		for(int i=0;i<n;i++) {			if(arr[i]<min) {				min=arr[i];				i1=i;			}			if(arr[i]>max) {				max=arr[i];				i2=i;			}		}		int left=0,right=0;		if(i1<i2) {			left=i1;			right=i2;		}		else {		left=i2;		right=i1;		}		left++;		right++;		int ans=Math.max(Math.abs(right-1), Math.abs(left-n));		System.out.println(ans);	}}	   
