def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counterfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#for tt in range(INT()): def solve(s):    if s == s[::-1]:        return True    return False s = STR()i = 0ans = 1while i < len(s):    x = s[i]    j = 0    while j <= len(s):        s.insert(j , x)        if solve(s):            ans = ''.join(s)        s.pop(j)        j+=1     if ans != 1 :        break    i+=1 #print(ans)if ans != 1 :    print(ans)else:    print('NA')
