import java.io.*;import java.util.*; public class B { 	static HashSet<Integer> set; 	public static void main(String[] args) {         FastScanner in = new FastScanner();        PrintWriter out = new PrintWriter(System.out);        int n = in.nextInt();        set = new HashSet<>();        Pair a[] = new Pair[n];                 for(int i=0;i<n;i++){        	a[i] = new Pair(in.nextInt(), in.nextInt());        }        primeFactorisation(a[0].first());        primeFactorisation(a[0].second());        int ans = -1;        for(int factor : set){        	boolean valid = true;        	for(int i=0;i<n;i++){        		if(a[i].first()%factor!=0&&a[i].second()%factor!=0){        			valid = false; break;        		}        	}        	if(valid){        		ans = factor; break;        	}        }        out.println(ans);        out.flush();	} 	static void primeFactorisation(int m){		for(int i=2;i*i<=m;i++){        	if(isPrime(i)&&(m%i)==0){        		set.add(i);        		while(m%i==0) m /= i;        	}        }        if(m>1) set.add(m);	} 	static boolean isPrime(int n){		for(int i=2;i<n;i++){			if(n%i==0) return false;		}		return true;	}			static class Pair{		int x, y;		Pair(int a, int b){ x = a; y = b; }		int first(){ return x; }		int second(){ return y; }	} 	static int gcd(int a, int b){		if(b==0) return a;		else return gcd(b,a%b);	}		static class FastScanner {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer("");				String next() {			while(!st.hasMoreTokens())				try { st = new StringTokenizer(br.readLine()); }				catch(IOException e) {}			return st.nextToken();		}				String nextLine(){			try{ return br.readLine(); } 			catch(IOException e) { } return "";		}				int nextInt() {			return Integer.parseInt(next());		}				long nextLong() {			return Long.parseLong(next());		}				int[] readArray(int n) {			int a[] = new int[n];			for(int i=0;i<n;i++) a[i] = nextInt();			return a;		}	} 	static final Random random = new Random(); 	static void ruffleSort(int[] a){		int n = a.length;		for(int i=0;i<n;i++){			int j = random.nextInt(n), temp = a[j];			a[j] = a[i]; a[i] = temp;		}		Arrays.sort(a); 		}}
