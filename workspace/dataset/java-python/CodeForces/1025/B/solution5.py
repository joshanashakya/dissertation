# import sys# sys.stdin  = open("input.in","r")from sys import stdininput = stdin.readlinefrom heapq import heapify,heappush,heappop,heappushpopfrom collections import defaultdict as dd, deque as dq,Counter as Cfrom math import factorial as f ,ceil,gcd,sqrt,logfrom bisect import bisect_left as bl ,bisect_right as brfrom itertools import combinations as c,permutations as pfrom math import factorial as f ,ceil,gcd,sqrt,logmp = lambda : map(int,input().split())it = lambda: int(input())ls = lambda : list(input().strip())mt = lambda  r : [ list(mp()) for _ in range(r)]mod = 1000000007def isprime(n):	for j in range(3,int(sqrt(n))+1,2):		if n%j==0:			return 0	return 1def factors(n):	s = set()	# s.add(1)	s.add(n)	for j in range(2,int(sqrt(n))+1):		if n%j==0:			s.add(j)			s.add(n//j)	return sdef pfactors(n):	pm = set()	flg =0	while n%2==0:		flg =1		n//=2	if flg:pm.add(2)	for cc in range(3,int(sqrt(n))+1,2):		if n%cc==0:			pm.add(cc)			while n%cc==0:				n//=cc	if n>1:		pm.add(n)	return pmÂ k = mt(it())fc = pfactors(k[0][0])fc.update(pfactors(k[0][1]))out =-1for ele in fc :	ans = ele	for fs,scd in list(k):		if fs%ele and scd%ele :			ans = 0			break	if ans:		out = ans		breakprint(out)
