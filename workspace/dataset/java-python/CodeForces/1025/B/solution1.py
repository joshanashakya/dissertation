import os, sysfrom io import BytesIO, IOBasefrom math import sqrt,ceil,gcd BUFSIZE = 8192  class FastIO(IOBase):    newlines = 0     def __init__(self, file):        self._fd = file.fileno()        self.buffer = BytesIO()        self.writable = "x" in file.mode or "r" not in file.mode        self.write = self.buffer.write if self.writable else None     def read(self):        while True:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            if not b:                break            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines = 0        return self.buffer.read()     def readline(self):        while self.newlines == 0:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            self.newlines = b.count(b"\n") + (not b)            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines -= 1        return self.buffer.readline()     def flush(self):        if self.writable:            os.write(self._fd, self.buffer.getvalue())            self.buffer.truncate(0), self.buffer.seek(0)  class IOWrapper(IOBase):    def __init__(self, file):        self.buffer = FastIO(file)        self.flush = self.buffer.flush        self.writable = self.buffer.writable        self.write = lambda s: self.buffer.write(s.encode("ascii"))        self.read = lambda: self.buffer.read().decode("ascii")        self.readline = lambda: self.buffer.readline().decode("ascii") def dtb(n):    return bin(n).replace("0b", "")sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)input = lambda: sys.stdin.readline().rstrip("\r\n") def lcm(a,b):    return a*b//gcd(a,b) n=int(input())ans=0a,b=0,0for _ in range(n):    a,b=map(int,input().split())    ans=gcd(ans,lcm(a,b))if ans<=1:    print(-1)else:    ck = 0    i = 2    t = sqrt(a)    while i < a and i <= t:        if a % i==0:            if ans % i==0:                ck = i                break            while a % i==0:                a //= i        i += 1    if not ck:        if ans % a==0:            ck = a    if not ck:         i=2        t=sqrt(b)        while i<b and i<=t:            if b%i==0:                if ans%i==0:                    ck=i                    break                while b%i==0:                    b//=i            i+=1        if not ck:            if ans%b==0:                ck=b    print(ck)
