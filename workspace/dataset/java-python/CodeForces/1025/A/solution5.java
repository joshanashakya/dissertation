import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author El Mehdi ASSALI */public class Main {  public static void main(String[] args) {    InputStream inputStream = System.in;    OutputStream outputStream = System.out;    InputReader in = new InputReader(inputStream);    PrintWriter out = new PrintWriter(outputStream);    ADoggoRecoloring solver = new ADoggoRecoloring();    solver.solve(1, in, out);    out.close();  }   static class ADoggoRecoloring {    public void solve(int testNumber, InputReader in, PrintWriter out) {      int n = in.nextInt();      int[] count = new int['z' + 1];      String s = in.next();      for (int i = 0; i < n; i++) {        count[s.charAt(i)]++;        if (count[s.charAt(i)] > 1) {          out.println("Yes");          return;        }      }      out.println(n == 1 ? "Yes" : "No");    }   }   static class InputReader {    private BufferedReader reader;    private StringTokenizer tokenizer;     public InputReader(InputStream inputStream) {      reader = new BufferedReader(new InputStreamReader(inputStream));    }     public String next() {      while (tokenizer == null || !tokenizer.hasMoreTokens()) {        try {          tokenizer = new StringTokenizer(reader.readLine());        } catch (IOException e) {          e.printStackTrace();        }      }      return tokenizer.nextToken();    }     public int nextInt() {      return Integer.parseInt(next());    }   }} 
