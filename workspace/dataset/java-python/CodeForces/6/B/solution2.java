import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class B6{     static int mod=(int)(1e9+7);    static long MOD=(long)(1e9+7);    static FastReader in=new FastReader();    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));        static HashSet<Character> hs;    static int n,m;    static char ch[][];    public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {			n=in.nextInt();			m=in.nextInt();			char prez=in.next().charAt(0);			//pr.println(prez);			ch=new char[n][m];			hs=new HashSet<>();						for(int i=0;i<n;i++)			{				ch[i]=in.nextLine().toCharArray();						}						int hs=-1,he=-1,vs=-1,ve=-1;			int ans=0;						for(int i=0;i<n;i++)			{				for(int j=0;j<m;j++)				{										if(ch[i][j]==prez)					{											ans+=check(i+1,j,prez);						ans+=check(i-1,j,prez);						ans+=check(i,j-1,prez);						ans+=check(i,j+1,prez);																	}									}											}			pr.println(ans);														                   }        pr.flush();            }    		static int check(int i,int j,int prez)	{		//out.println(i+" "+j);		if(i<0||j<0||i>=n||j>=m)return 0;		if(hs.contains(ch[i][j]))return 0;		if(ch[i][j]=='.'||ch[i][j]==prez)return 0;				hs.add(ch[i][j]);		return 1;									}		          static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }   
