import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Collections;import java.util.Comparator;import java.util.PriorityQueue;import java.util.Scanner;import java.util.StringTokenizer; public class Main { 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	public static void main(String[] args) {		// Scanner sc = new Scanner(System.in);		FastReader sc = new FastReader();		PrintWriter pw = new PrintWriter(System.out);		int N = 200007;		int n,k,q,left,right,i;		int[] arr = new int[N];		int[] c = new int[N];				n = sc.nextInt();		k = sc.nextInt();		q = sc.nextInt();				for(i=0;i<n;i++) {			 left = sc.nextInt();			 right = sc.nextInt();			arr[left]++;			arr[right+1]--;		}		for(i=1;i<N;i++) {			arr[i]+=arr[i-1];						if(arr[i]>=k) {				c[i]+=c[i-1]+1;			}			else {				c[i]+=c[i-1];			}		}		for(i=0;i<q;i++){			 left = sc.nextInt();			 right = sc.nextInt();			 System.out.println(c[right]-c[left-1]); 			}		} }   	 		 	  	  	 	   	 	  		  		
