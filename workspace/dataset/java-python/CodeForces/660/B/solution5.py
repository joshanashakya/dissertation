def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()):  #CODE n , m = MAP() odd = []even =[]for i in range(1 , m + 1):    if i % 2 == 0 :        even.append(i)    else:        odd.append(i) a = []b = [] for i in range(n):    a.append([]) for i in range(n):    b.append([]) j = 0for i in range(len(odd)):    if i == n:        j = 0        a[j].append(odd[i])        j+=1     else:        a[j].append(odd[i])        j+=1 #print(a) j = 0for i in range(len(even)):    if i == n:        j = 0        b[j].append(even[i])        j+=1     else:        b[j].append(even[i])        j+=1 #print(b) res = []flag = 0for i in range(n):        x = a[i]        y = b[i]        x = list(reversed(x))        y = list(reversed(y))        for i in x :            res.append(i)        for i in y :            res.append(i)  print(*res)  
