import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer;Â /** * @author Don Li */public class OnCorruptionNumbers {    void solve() {        int T = in.nextInt();        while (T-- > 0) {            int n = in.nextInt(), l = in.nextInt(), r = in.nextInt();            long t = n / l;            long lb = t * l, ub = t * r;            if(lb<=n && n<=ub) out.println("Yes");            else out.println("No");        }    }        public static void main(String[] args) {        in = new FastScanner(new BufferedReader(new InputStreamReader(System.in)));        out = new PrintWriter(System.out);        new OnCorruptionNumbers().solve();        out.close();    }        static FastScanner in;    static PrintWriter out;        static class FastScanner {        BufferedReader in;        StringTokenizer st;                public FastScanner(BufferedReader in) {            this.in = in;        }                public String nextToken() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(in.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }                public int nextInt() {            return Integer.parseInt(nextToken());        }                public long nextLong() {            return Long.parseLong(nextToken());        }                public double nextDouble() {            return Double.parseDouble(nextToken());        }    }}
