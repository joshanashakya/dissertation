import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.IOException;import java.io.PrintWriter;import java.util.StringTokenizer; public class B397{	public static void main(String[] args){		InputReader in = new InputReader();		PrintWriter out = new PrintWriter(System.out);		final long start = System.currentTimeMillis();		new Task1().solve(in, out);		final long duration = System.currentTimeMillis()-start;		out.close();	} 	static class Task1{		public void solve(InputReader in, PrintWriter out){			int t=in.nextInt();			while(t-->0){				long n=in.nextInt(), l=in.nextInt(), r=in.nextInt();				if(n<l){					out.println("No");					continue;				} 				long rem = n%l;				long quo = n/l;				long lim = quo*r;				if(n<=lim){					out.println("Yes");					continue;				}				out.println("No");			}		}	} 	static class InputReader{		private BufferedReader reader;		private StringTokenizer tokenizer;				public InputReader(){			reader = new BufferedReader(new InputStreamReader(System.in));			tokenizer = null;		} 		public String next(){			while(tokenizer==null || !tokenizer.hasMoreTokens()){				try{					tokenizer = new StringTokenizer(reader.readLine());				} catch (IOException e){					throw new RuntimeException(e);				}			}			return tokenizer.nextToken();		} 		public int nextInt(){			return (int)Integer.parseInt(next());		} 		public long nextLong(){			return (long)Long.parseLong(next());		} 		public double nextDouble(){			return (double)Double.parseDouble(next());		} 		public String nextLine(){			String s = null;			try{				s = reader.readLine();			} catch(Exception e){				throw new RuntimeException(e);			}			return s;		}	}}
