n = int(input())p = list(map(int, input().split()))odd = (n + 1) // 2memo = {}def best(i, odd_count, last):    if i == n:        return 0    key = (i, odd_count, last)    if key in memo:        return memo[key]    poss = range(2) if p[i] == 0 else [p[i] % 2]    res = 10 ** 9    for parity in poss:        new_odd_count = odd_count - parity        new_even_count = n - i - odd_count - (parity ^ 1)        if new_odd_count < 0 or new_even_count < 0:            continue        res = min(res, best(i + 1, new_odd_count, parity) + (1 if i > 0 and last != parity else 0))    memo[key] = res    return resprint(best(0, odd, 0))
