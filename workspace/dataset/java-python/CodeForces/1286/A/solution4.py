def abc(l,odd,even,i,x):    try:        return dp[i,odd,even,x]    except:        pass    if i==len(l):        return 0    if l[i]:        c=0        if x!=l[i]%2:            c+=1        return c+abc(l,odd,even,i+1,l[i]%2)    ans=n    if odd:        c=0        if not x%2:            c+=1        ans=min(ans,c+abc(l,odd-1,even,i+1,1))    if even:        c=0        if x%2:            c+=1        ans=min(ans,c+abc(l,odd,even-1,i+1,0))    dp[i,odd,even,x]=ans    return ansn=int(input())l=list(map(int,input().split()))dp={}odd=0even=0d=[0]*(n+1)for i in l:    d[i]+=1for i in range(1,n+1):    if i%2 and not d[i]:        odd+=1    if not i%2 and not d[i]:        even+=1if l[0]:    print(abc(l,odd,even,1,l[0]%2))else:    ans=n    if odd:        ans=min(ans,abc(l,odd-1,even,1,1))    if even:                ans=min(ans,abc(l,odd,even-1,1,0))    print(ans)
