import java.util.*; public class BalancedSubstrings {	public static void main(String[] args) {		Scanner input = new Scanner(System.in); 		int n = input.nextInt();		input.nextLine();		String s = input.nextLine(); 		input.close(); 		int[] pre = new int[n + 1];		for (int i = 1; i <= n; i++) {			if (s.charAt(i - 1) == '0') {				pre[i] = pre[i - 1] + 1;			} else {				pre[i] = pre[i - 1] - 1;			}		} 		int[] mp = new int[2 * n + 1];		mp[0] = 0;		for (int i = 1; i <= n; i++) {			if (pre[i] < 0) {				if (mp[n + pre[i]] == 0) {					mp[n + pre[i]] = i;				}			} else if (pre[i] > 0) {				if (mp[pre[i]] == 0) {					mp[pre[i]] = i;				}			}		} 		int ans = 0;		for (int i = 1; i <= n; i++) {			if (pre[i] < 0) {				ans = Math.max(ans, i - mp[n + pre[i]]);			} else {				ans = Math.max(ans, i - mp[pre[i]]);			}		} 		System.out.println(ans);	}}
