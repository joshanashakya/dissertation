import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{           public static void main(String args[])    {        FastScanner input = new FastScanner();        int n = input.nextInt();        String s = input.next();        int left = 0;        int right = n-1;        int zero=0;        int one = 0;        long ans = 0;          HashMap<Integer,Integer> map = new HashMap<>();                    for (int i = 0; i <n ; i++) {            if(s.charAt(i)=='0')                zero++;            else                one++;            if(one-zero==0)            {                ans = Math.max(ans, i+1);            }            else if(map.containsKey(one-zero))            {                ans  = Math.max(ans, i-map.get(one-zero));            }            else                map.put(one-zero, i);        }                System.out.println(ans);            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
