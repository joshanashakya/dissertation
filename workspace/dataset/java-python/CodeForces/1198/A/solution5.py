from math import ceil, log2from collections import Counterdef read(): return [int(i) for i in input().split()]#t = int(input())for _ in range(1):    n,x = read()    d = Counter(list(read()))    l = list(d.keys())    l.sort()    dis=  K = len(l)    while(ceil(log2(K))*n>x*8):        K-=1    K = dis-K    #print(d, l, dis, K)    s = sum([d[l[i]] for i in range(dis-K, dis)])    c = s    #print(s)    for i in range(K):        c = c+d[l[i]]-d[l[-K+i]]        s = min(s, c)    print(s)Â     
