import osimport sysfrom io import BytesIO, IOBasefrom collections import Counterimport math# region fastioBUFSIZE = 8192class FastIO(IOBase):    newlines = 0     def __init__(self, file):        self._fd = file.fileno()        self.buffer = BytesIO()        self.writable = "x" in file.mode or "r" not in file.mode        self.write = self.buffer.write if self.writable else None     def read(self):        while True:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            if not b:                break            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines = 0        return self.buffer.read()     def readline(self):        while self.newlines == 0:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            self.newlines = b.count(b"\n") + (not b)            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines -= 1        return self.buffer.readline()     def flush(self):        if self.writable:            os.write(self._fd, self.buffer.getvalue())            self.buffer.truncate(0), self.buffer.seek(0)  class IOWrapper(IOBase):    def __init__(self, file):        self.buffer = FastIO(file)        self.flush = self.buffer.flush        self.writable = self.buffer.writable        self.write = lambda s: self.buffer.write(s.encode("ascii"))        self.read = lambda: self.buffer.read().decode("ascii")        self.readline = lambda: self.buffer.readline().decode("ascii")  sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout) def input(): return sys.stdin.readline().rstrip("\r\n")def getint(): return int(input())def getints(): return list(map(int, input().split()))def getint1(): return list(map(lambda x: int(x) - 1, input().split())) def main():    ###CODE    n,I = getints()    I = 8*I    k = I//n    K = pow(2,k)    a = Counter(getints())    curr = len(a)    if curr<=K:        print(0)    else:        a1 = sorted(list(a.keys()))        a2 = [0]*(curr+1)        for i in range(curr):            a2[i+1]=a2[i]+a[a1[i]]        a1 = curr-K        a = 0        for i in range(a1):            a = max(a,a2[i+K]-a2[i])        print(n-a) if __name__ == "__main__":    main()
