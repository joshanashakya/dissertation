/* */ import java.io.*;import java.math.*;import java.util.*; public class Main {	public static void main(String[] args) throws IOException {		FastReader scan = new FastReader();		PrintWriter out = new PrintWriter(System.out);		Task solver = new Task();		ans = new StringBuilder();		int T = 1;		for (int tt = 0; tt < T; tt++)			solver.solve(tt, scan, out);		out.close();	} 	static StringBuilder ans; 	static class Task {		public void solve(int testNumber, FastReader scan, PrintWriter out) {			int q = scan.nextInt();			while (q-- > 0) {				int n = scan.nextInt();				double s = 0;				for (int i = 0; i < n; i++)					s += scan.nextDouble();				out.println((int) Math.ceil(s / n));			}		}	} 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		public FastReader(String s) throws FileNotFoundException {			br = new BufferedReader(new FileReader(new File(s)));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	}}
