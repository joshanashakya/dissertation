import java.util.*;public class Test112000000000000008 {public static final int MaxNum = 1000 * 1000 * 1000;public static void main(String[] args) {Scanner input = new Scanner(System.in);int n = input.nextInt();Set<Integer> countedSet = new HashSet<>();if (n == MaxNum){countedSet.add(n);}for (int i = 0; i < 10; i++) {for (int j = i + 1; j < 10; j++) {dfs(n, 0, 1, i, j, countedSet);}}System.out.println(countedSet.size());}public static void dfs(int n, int curSum, int curBaseNum, int firstNum,int secondNum, Set<Integer> countedSet){if (curSum > n){return;}if (!countedSet.contains(curSum) && curSum > 0){countedSet.add(curSum);}if (curBaseNum < MaxNum){dfs(n, curSum + firstNum * curBaseNum, curBaseNum * 10, firstNum, secondNum, countedSet);dfs(n, curSum + secondNum * curBaseNum, curBaseNum * 10, firstNum, secondNum, countedSet);}}} 		 	 							   				  	 		 			
