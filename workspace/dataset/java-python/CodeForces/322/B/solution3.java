import java.io.*;import java.util.*;  public class CielandFlowers {     public static void main(String args[]) {         FastReader sc = new FastReader();        PrintWriter out = new PrintWriter(System.out);         int t, n, i, j;        String s;         int r= sc.nextInt();        int g= sc.nextInt();        int b= sc.nextInt();        long count=0;         int temp=Math.min(r,Math.min(g,b));        r-=temp;g-=temp;b-=temp;        count+=temp;         if (((g%3==2 && b%3==2) ||(r%3==2 && b%3==2) || (r%3==2&& g%3==2)) && count!=0)            count++;         count+=r/3;        count+=g/3;        count+=b/3;         out.println(count);         out.close();    }      /*		FASTREADER	*/    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }         /*DEFINED BY ME         */        int[] readArray(int n) {             int arr[] = new int[n];             for (int i = 0; i < n; i++)                arr[i] = nextInt();             return arr;        }         void sort(int arr[]) {            ArrayList<Integer> l = new ArrayList<>();            for (int i : arr)                l.add(i);            Collections.sort(l);            for (int i = 0; i < arr.length; i++)                arr[i] = l.get(i);        }    }}
