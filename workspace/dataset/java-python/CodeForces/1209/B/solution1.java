import java.io.*;import java.util.*; public class Solution {	 public static void main(String[] args) throws Exception    {		     FastReader fr=new FastReader();             int n=fr.nextInt();             String lights=fr.next();             char ch[]=lights.toCharArray();             int maxons=Integer.MIN_VALUE;                          int period[]=new int[n];             int glow[]=new int[n];             for(int i=0;i<n;i++) {            	 period[i]=fr.nextInt();            	 glow[i]=fr.nextInt();            	              }                          for(int i=1;i<=1000;i++) {            	 int ons=0;            	 for(int j=0;j<n;j++) {            		if(ch[j]=='1')            			ons++;            		if(i==glow[j]) {            			if(ch[j]=='1')            				ch[j]='0';            			else            				ch[j]='1';            			glow[j]+=period[j];            		}            	 }            	 //System.out.println(i+" "+ons);            	 maxons=Math.max(ons,maxons);             }             System.out.println(maxons);                                     	            	                                }	 	     }	 		 	  class Pair{	 int x;	 int y;	 Pair(int x,int y){		 this.x=x;		 this.y=y;	 }	  }    class FastReader{    BufferedReader br;    StringTokenizer st;     public FastReader()    {        br = new BufferedReader(new                InputStreamReader(System.in));    }     String next()    {        while (st == null || !st.hasMoreElements())        {            try            {                st = new StringTokenizer(br.readLine());            }            catch (IOException e)            {                e.printStackTrace();            }        }        return st.nextToken();    }     int nextInt()    {        return Integer.parseInt(next());    }     long nextLong()    {        return Long.parseLong(next());    }     double nextDouble()    {        return Double.parseDouble(next());    }     String nextLine()    {        String str = "";        try        {            str = br.readLine();        }        catch (IOException e)        {            e.printStackTrace();        }        return str;    }} 
