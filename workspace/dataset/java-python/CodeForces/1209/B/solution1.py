def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()): #Code n = INT()s = STR()l = [] for i in range(n):    a , b = MAP()    l.append([b , a]) k = []for i in range(1,10000+9):    cnt = s.count('1')    k.append(cnt)    for j in range(n):        if (i - l[j][0] >= 0):            if ((i - l[j][0]) % l[j][1]) == 0 :                if s[j] == '1':s[j] = '0'                else:s[j] = '1' print(max(k)) 
