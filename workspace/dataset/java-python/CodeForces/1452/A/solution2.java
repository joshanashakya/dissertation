import java.io.*;import java.util.*; public class tr1 {	static PrintWriter out;	static StringBuilder sb;	static long mod = (long) 1e9 + 7;	static Boolean[][][] memo;	static int[][][] memo1;	static int n, m, mo;	static ArrayList<long[]>[] ad;	static HashMap<Integer, Integer>[] going;	static long inf = Long.MAX_VALUE;	static char[][] g;	static boolean[] vis;	static int[] a, mods;	static int hh;	static HashMap<Integer, Integer> hmC, hmG; 	public static void main(String[] args) throws Exception {		Scanner sc = new Scanner(System.in);		out = new PrintWriter(System.out);		int t = sc.nextInt();		while (t-- > 0) {			int x = sc.nextInt();			int y = sc.nextInt();			int ans = Math.min(x, y) * 2;			int u = Math.max(x, y) - Math.min(x, y);			out.println(ans +Math.max(0, u * 2 - 1));		}		out.flush();	} 	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream system) {			br = new BufferedReader(new InputStreamReader(system));		} 		public Scanner(String file) throws Exception {			br = new BufferedReader(new FileReader(file));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public String nextLine() throws IOException {			return br.readLine();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public char nextChar() throws IOException {			return next().charAt(0);		} 		public Long nextLong() throws IOException {			return Long.parseLong(next());		} 		public int[] nextArrInt(int n) throws IOException {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = nextInt();			return a;		} 		public long[] nextArrLong(int n) throws IOException {			long[] a = new long[n];			for (int i = 0; i < n; i++)				a[i] = nextLong();			return a;		} 		public int[] nextArrIntSorted(int n) throws IOException {			int[] a = new int[n];			Integer[] a1 = new Integer[n];			for (int i = 0; i < n; i++)				a1[i] = nextInt();			Arrays.sort(a1);			for (int i = 0; i < n; i++)				a[i] = a1[1].intValue();			return a;		} 		public long[] nextArrLongSorted(int n) throws IOException {			long[] a = new long[n];			Long[] a1 = new Long[n];			for (int i = 0; i < n; i++)				a1[i] = nextLong();			Arrays.sort(a1);			for (int i = 0; i < n; i++)				a[i] = a1[1].longValue();			return a;		} 		public boolean ready() throws IOException {			return br.ready();		} 		public void waitForInput() throws InterruptedException {			Thread.sleep(3000);		}	}}
