import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class NationalProject {	private static final FastReader in=new FastReader();	private static final PrintWriter pw=new PrintWriter(System.out); 	public static void main(String[] args) {		Solver sol=new Solver();		int tt=1;		for (int qq=in.nextInt(); tt<=qq; tt++)			sol.solve(tt);		pw.close();	} 	private static class Solver {		public void solve(int testCase) {			long n=Long.parseLong(in.next()), g=Long.parseLong(in.next()), b=Long.parseLong(in.next());			// if (n<=g) {			// 	pw.println(n);			// } else {				long halfQuality=(n+1)/2;				long fullQuality=(halfQuality-1)/g*(g+b);				if(halfQuality%g!=0) {					fullQuality+=halfQuality%g;				} else {					fullQuality+=g;				}				pw.println(Math.max(fullQuality, n));			// }		}	} 	private static class FastReader {		private StringTokenizer st;		private BufferedReader br;		public FastReader() {			br=new BufferedReader(new InputStreamReader(System.in));			st=null;		} 		public String next() {			while (st==null || !st.hasMoreTokens()) {				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					throw new RuntimeException(e);				}			}			return st.nextToken();		} 		public int nextInt() {			return Integer.parseInt(next());		}	}}
