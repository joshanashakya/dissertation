import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.PrintWriter;import java.util.Arrays;import java.util.List;import java.util.Scanner;import java.util.stream.Collectors;public class _p001131A {    static public void main(final String[] args) throws IOException {        p001131A._main(args);    }//begin p001131A.javastatic private class p001131A extends Solver{public p001131A(){nameIn="p001131A.in";singleTest=true;}int w1;int h1;int w2;int h2;@Override protected void solve(){pw.println(w1+2*h1+w2+2*h2+4+Math.abs(w1-w2));}@Override public void readInput()throwsIOException{w1=sc.nextInt();h1=sc.nextInt();w2=sc.nextInt();h2=sc.nextInt();if(sc.hasNextLine()){sc.nextLine();}}static public void _main(String[]args)throws IOException{new p001131A().run();}}//end p001131A.java//begin net/leksi/contest/Solver.javastatic private abstract class Solver{protected String nameIn=null;protected StringnameOut=null;protected boolean singleTest=false;protected boolean preprocessDebug=false;protected boolean doNotPreprocess=false;protected Scanner sc=null;protectedPrintWriter pw=null;private void process()throws IOException{if(!singleTest){intt=lineToIntArray()[0];while(t-->0){readInput();solve();}}else{readInput();solve();}}abstract protected void readInput()throws IOException;abstract protected voidsolve()throws IOException;protected int[]lineToIntArray()throws IOException{returnArrays.stream(sc.nextLine().trim().split("\\s+")).mapToInt(Integer::valueOf).toArray();}protected long[]lineToLongArray()throws IOException{return Arrays.stream(sc.nextLine().trim().split("\\s+")).mapToLong(Long::valueOf).toArray();}protected String intArrayToString(final int[]a){return Arrays.stream(a).mapToObj(Integer::toString).collect(Collectors.joining(" "));}protected String longArrayToString(final long[]a){return Arrays.stream(a).mapToObj(Long::toString).collect(Collectors.joining(" "));}protected List<Long>longArrayToList(final long[]a){return Arrays.stream(a).mapToObj(Long::valueOf).collect(Collectors.toList());}protected List<Integer>intArrayToList(final int[]a){returnArrays.stream(a).mapToObj(Integer::valueOf).collect(Collectors.toList());}protectedList<Long>intArrayToLongList(final int[]a){return Arrays.stream(a).mapToObj(Long::valueOf).collect(Collectors.toList());}protected void run()throws IOException{try{try(FileInputStream fis=new FileInputStream(nameIn);PrintWriter pw0=select_output();){sc=new Scanner(fis);pw=pw0;process();}}catch(IOException ex){try(PrintWriterpw0=select_output();){sc=new Scanner(System.in);pw=pw0;process();}}}private PrintWriterselect_output()throws FileNotFoundException{if(nameOut !=null){return new PrintWriter(nameOut);}return new PrintWriter(System.out);}}//end net/leksi/contest/Solver.java}
