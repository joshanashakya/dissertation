import mathimport sysimport bisect  # https://pythonworld.ru/moduli/modul-bisect.htmlfrom heapq import heapify, heappop, heappushfrom itertools import *  # https://pythonworld.ru/moduli/modul-itertools.htmlfrom collections import deque, OrderedDictfrom pprint import pprintsys.setrecursionlimit(10 ** 6)# f = open('input.txt')# f.close()II = lambda: sys.stdin.readline()  # f.readline()inp = lambda: int(II())inpm = lambda: map(int, II().split())inpl = lambda: list(inpm())DEBUG = Falsedef set_debug(deb:bool=True):    global DEBUG    DEBUG = debdef debug(**kwargs):    if DEBUG:        arr = []        for k, w in kwargs.items():            arr.append(f'{k}: {w}')        print(*arr, sep=', ') WHITE, GREY, BLACK, RED = 0, 1, 2, 3EPS = 1e-9INF = int(1e18)MOD = int(1e9) + 7  # 998244353N = 2000009 # set_debug()def solve():    x, y = inpm()    if x - y < -1 or x % 2 == y % 2 or (y <= 1 and x > 0):        print('No')    else:        print('Yes')  # set_debug()''' ''' def main():    t = 1 #  inp()  # 1  #    for i in range(t):        solve()        # print()main()
