import java.util.*;import java.io.*; public class Main {	public static void main(String args[]) {new Main().run();}		FastReader in = new FastReader();	PrintWriter out = new PrintWriter(System.out);	void run(){	    out.println(work());	    out.flush();	}	long mod=998244353L;	long work() {	    long m=in.nextLong();	    long h1=in.nextLong();	    long a1=in.nextLong();	    long x1=in.nextLong();	    long y1=in.nextLong();	    long h2=in.nextLong();	    long a2=in.nextLong();	    long x2=in.nextLong();	    long y2=in.nextLong();	    	    long n1=-1,r1=-1;	    long n2=-1,r2=-1;	    long[] map1=new long[(int)m];	    long[] map2=new long[(int)m];	    Arrays.fill(map1,-1);	    Arrays.fill(map2,-1);	    for(long c=h1,s=0;;s++){	        if(c==a1&&r1==-1){	            r1=s;	        }	        if(map1[(int)c]>-1){	            if(r1==-1){	                return -1;	            }else if(map1[(int)c]<=map1[(int)a1]){	                n1=s-map1[(int)c];	            }	            break;	        }	        map1[(int)c]=s;	        c=(x1*c+y1)%m;	    }	    	    for(long c=h2,s=0;;s++){	        if(c==a2&&r2==-1){	            r2=s;	        }	        if(map2[(int)c]>-1){	            if(r2==-1){	                return -1;	            }else if(map2[(int)c]<=map2[(int)a2]){	                n2=s-map2[(int)c];	            }	            break;	        }	        map2[(int)c]=s;	        c=(x2*c+y2)%m;	    }	   // out.println(n1+",,"+r1);	   // out.println(n2+",,"+r2);	    if(n1==-1||n2==-1){	        if(r1==r2){	            return r1;	        }	        if(n2!=-1&&r1>r2&&(r1-r2)%n2==0){	            return r1;	        }	        if(n1!=-1&&r2>r1&&(r2-r1)%n1==0){	            return r2;	        }	        return -1;	    }	   // out.println(n1+",,"+r1);	   // out.println(n2+",,"+r2);	    long[] map3=new long[(int)n1];	    long ret=-1;	    long cur=r2;	    while(true){	        long r=(cur-r1)%n1;	        if(r<0) r+=n1;	        if((cur-r1)%n1==0){	            ret=cur;	            break;	        }	        if(map3[(int)r]>0){	            break;	        }	        map3[(int)r]=1;	        cur=cur+n2;	    }	    return ret;	}	}class FastReader{	BufferedReader br;	StringTokenizer st; 	public FastReader()	{	    br=new BufferedReader(new InputStreamReader(System.in));	} 	public String next() 	{	    if(st==null || !st.hasMoreElements())	    {	        try {                st = new StringTokenizer(br.readLine());            } catch (IOException e) {                e.printStackTrace();            }	    }	    return st.nextToken();	} 	public int nextInt() 	{	    return Integer.parseInt(next());	} 	public long nextLong()	{	    return Long.parseLong(next());	}}
