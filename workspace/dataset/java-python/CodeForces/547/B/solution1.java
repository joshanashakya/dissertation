import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayDeque;import java.util.Arrays;import java.util.Comparator;import java.util.StringTokenizer; public class Codeforces {    public  void solve(){        FastScanner fs = new FastScanner();        StringBuilder print = new StringBuilder();        int n = fs.nextInt();        int[]ar = new int[n];        for(int i=0;i<n;i++)ar[i] = fs.nextInt();         ArrayDeque<Integer> stack = new ArrayDeque<>();        int[]l = new int[n];        int[]r = new int[n];        for(int i=0;i<n;i++){            while (!stack.isEmpty() && ar[stack.peek()] > ar[i]){                r[stack.poll()] = i;            }            stack.push(i);        }        while (!stack.isEmpty())r[stack.poll()] = n;        for(int i=n-1;i>=0;i--){            while (!stack.isEmpty() && ar[stack.peek()] >ar[i]){                l[stack.pop()] = i;            }            stack.push(i);        }        while (!stack.isEmpty())l[stack.pop()] = -1;        int[]ans = new int[n+1];        for(int i=0;i<n;i++){            int len = r[i]-l[i]-1;            ans[len] = Math.max(ans[len],ar[i]);        }        for(int i=n-1;i>0;i--){            ans[i] = Math.max(ans[i],ans[i+1]);        }        for(int i=1;i<=n;i++)print.append(ans[i]).append(" ");        System.out.println(print);    }    public static void main(String[]args){        try{            new Codeforces().solve();        }catch (Exception e){            e.printStackTrace();        }    }    class FastScanner {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");        String next() {            while (!st.hasMoreTokens())                try {                    st=new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }        String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }         int nextInt() {            return Integer.parseInt(next());        }        long nextLong() {            return Long.parseLong(next());        }    } } 
