import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}		public static void main(String[] args){				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				String str = io.next();		int k = io.nextInt();				int w[] = new int[26];				for(int i = 0; i < 26; i++) {			w[i] = io.nextInt();		}				int max = -(int)1e9;		for(int i = 0; i < 26; i++) {			max = Math.max(max, w[i]);		}				int max_val = 0;				for(int i = 0; i < str.length(); i++) {			max_val += (i + 1) * w[str.charAt(i) - 'a'];		}				while(k > 0) {						max_val += max * (str.length() + k);			k--;		}				System.out.println(max_val);	}}
