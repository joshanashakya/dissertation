import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{          public static void main(String args[])    {        FastScanner input = new FastScanner();       int  n= input.nextInt();       HashMap<Long,Long> map = new HashMap<>();       long a[] = new long[n];        for (int i = 0; i < n; i++) {            a[i] =input.nextLong();                        map.put(i-a[i], map.getOrDefault(i-a[i], 0L)+a[i]);                    }        Long ans = Long.MIN_VALUE;        for (Map.Entry<Long, Long> entry : map.entrySet()) {            Long key = entry.getKey();            Long value = entry.getValue();            ans = Math.max(ans, value);                    }        System.out.println(ans);                     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
