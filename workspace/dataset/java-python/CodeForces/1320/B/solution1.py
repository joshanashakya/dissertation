import sys input = sys.stdin.readlinefrom collections import deque  def bfs(root):    visit = [0] * (n+1)    queue = [root, -1]    queue = deque(queue)    visit[root] = 1    d = 0    while len(queue) != 1:        element = queue.popleft()        if element == -1:            queue.append(-1)            d += 1            continue        visit[element] = 1        store[element] = d        for i in r_graph[element]:            if not visit[i]:                queue.append(i)                visit[i] = 1  n,m=map(int,input().split())r_graph=[[] for i in range(n+1)]graph=[[] for i in range(n+1)]for i in range(m):    a,b=map(int,input().split())    graph[a].append(b)    r_graph[b].append(a)k=int(input())c=list(map(int,input().split()))store=[0]*(n+1)bfs(c[-1])maxi,mini,count=0,0,0for i in range(k-1):    if(store[c[i]]<store[c[i+1]]+1):        maxi+=1        mini+=1    else:        count=0        for j in graph[c[i]]:            if(store[c[i]]==store[j]+1):                count+=1        if(count>=2):            maxi+=1print(mini,maxi)
