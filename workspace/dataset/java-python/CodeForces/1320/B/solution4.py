import sysinput=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)from queue import dequen,m=[int(x) for x in input().split()] adj=[[] for _ in range(n+1)]rev=[[] for _ in range(n+1)]for _ in range(m):    u,v=[int(x) for x in input().split()]    adj[u].append(v)    rev[v].append(u) k=int(input())p=[int(x) for x in input().split()]  inf=float('inf')sp=[inf for _ in range(n+1)] #shortest path q=deque([[0,p[k-1]]])while q:    d,node=q.popleft()    if sp[node]==inf: #not visited        sp[node]=d        for nex in rev[node]:            if sp[nex]==inf:                q.append([d+1,nex]) minn=0maxx=0for i in range(k-1):    node=p[i]    nex=p[i+1]    if sp[node]-1!=sp[nex]:        minn+=1        maxx+=1    else:        matches=0        for i in adj[node]:            if sp[i]+1==sp[node]:                matches+=1        if matches>1:            maxx+=1print('{} {}'.format(minn,maxx))
