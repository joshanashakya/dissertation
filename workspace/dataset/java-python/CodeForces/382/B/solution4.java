import java.io.*;import java.util.ArrayList;import java.util.StringTokenizer; public class D { 	public static void main(String[] args) throws Exception { 		Scanner sc = new Scanner(System.in);		PrintWriter out = new PrintWriter(System.out); 		int a = sc.nextInt(), b = sc.nextInt(), w = sc.nextInt();		int x = sc.nextInt(), c = sc.nextInt(); 		ArrayList<Integer> ch = new ArrayList<>();		boolean[] vis = new boolean[w + 1];		int crossCount = 0;		while(!vis[b])		{			ch.add(b);			vis[b] = true;			b -= x;			if(b < 0) { ++crossCount; b += w; }		}  		long ans = -1, lo = 0, hi = (long)1e16;		while(lo <= hi)		{			long t = (lo + hi) / 2;			long A = t / ch.size() * crossCount;			long end = t % ch.size();			for(int i = 0; i < end; ++i)				if(ch.get(i) < x)					++A;			if(c - t <= a - A)			{				ans = t;				hi = t - 1;			}			else				lo = t + 1;		}		out.println(ans);		out.close();	} 	static class Scanner	{		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));} 		public Scanner(FileReader s) throws FileNotFoundException {	br = new BufferedReader(s);} 		public String next() throws IOException		{			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {return Integer.parseInt(next());} 		public long nextLong() throws IOException {return Long.parseLong(next());} 		public String nextLine() throws IOException {return br.readLine();} 		public double nextDouble() throws IOException { return Double.parseDouble(next()); } 		public boolean ready() throws IOException {return br.ready();}	}}
