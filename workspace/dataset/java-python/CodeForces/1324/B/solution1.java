import java.util.*; public class Main {     public boolean isPalindromicSubsequence(int[] nums) {        if (nums == null || nums.length < 3)            return false;         Map<Integer, List<Integer>> numToIndices = new HashMap<>();        for (int i = 0; i < nums.length; i++) {            numToIndices.putIfAbsent(nums[i], new ArrayList<>());            numToIndices.get(nums[i]).add(i);        }         for (Map.Entry<Integer, List<Integer>> entry : numToIndices.entrySet()) {            if (entry.getValue().size() >= 3)                return true;            else if (entry.getValue().size() == 2) {                if (entry.getValue().get(0) != entry.getValue().get(1) - 1) // Checking if 0th and 1st index are adjacent                    return true;            }        }         return false;    }     public static void main(String[] args) {        Main main = new Main();        Scanner sc = new Scanner(System.in);        int tests = sc.nextInt();        for (int t = 0; t < tests; t++) {            int n = sc.nextInt();            int[] nums = new int[n];            for (int i = 0; i < n; i++) {                nums[i] = sc.nextInt();            }            boolean isPalindrome = main.isPalindromicSubsequence(nums);            if (isPalindrome)                System.out.println("YES");            else                System.out.println("NO");        }    }}
