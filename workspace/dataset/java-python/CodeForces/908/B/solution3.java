/*If you want to aim high, aim highDon't let that studying and grades consume youJust live life young******************************If I'm the sun, you're the moonBecause when I go up, you go down*******************************I'm working for the day I will surpass youhttps://www.a2oj.com/Ladder16.html*/import java.util.*;import java.io.*;import java.math.*;Â    public class B   {      public static void main(String omkar[]) throws Exception      {         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));           StringTokenizer st = new StringTokenizer(infile.readLine());         int N = Integer.parseInt(st.nextToken());         int M = Integer.parseInt(st.nextToken());         char[][] grid = new char[N][M];         for(int i=0; i < N; i++)            grid[i] = infile.readLine().toCharArray();         String input = infile.readLine();         int[] arr = new int[input.length()];         int Nn = arr.length;         for(int i=0; i < Nn; i++)            arr[i] = Integer.parseInt(input.substring(i,i+1));         //solve         int sx = -1;         int sy = -1;         for(int i=0; i < N; i++)            for(int j=0; j < M; j++)               if(grid[i][j] == 'S')               {                  sx = i;                  sy = j;                  break;               }         int res = 0;         for(int a=0; a < 4; a++)            for(int b=0; b < 4; b++)               for(int c=0; c < 4; c++)                  for(int d=0; d < 4; d++)                     if(a != b && a != c && a != d && b != c && b != d && c != d)                     {                        int[] ins = new int[Nn];                        for(int i=0; i < Nn; i++)                        {                           if(arr[i] == 0)                              ins[i] = a;                           else if(arr[i] == 1)                              ins[i] = b;                           else if(arr[i] == 2)                              ins[i] = c;                           else                              ins[i] = d;                        }                        if(found(sx,sy,grid,ins))                           res++;                     }         System.out.println(res);      }      public static boolean found(int sx, int sy, char[][] grid, int[] ins)      {         int N = grid.length;         int M = grid[0].length;         for(int x: ins)         {            if(x == 0)               sx--;            else if(x == 1)               sx++;            else if(x == 2)               sy++;            else               sy--;            if(sx < 0 || sy < 0 || sx >= N || sy >= M)               return false;            if(grid[sx][sy] == '#')               return false;            if(grid[sx][sy] == 'E')               return true;         }         return false;      }   }
