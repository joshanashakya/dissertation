import java.util.*;import java.io.*;Â public class GoodBye2017_B {		static int n, m;	static char[][] grid;		public static boolean isValid(int x, int y) {		return x >= 0 && x < n && y >= 0 && y < m && grid[x][y] != '#';	}		public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		PrintWriter pw = new PrintWriter(System.out);		StringTokenizer st;				n = sc.nextInt();		m = sc.nextInt();		grid = new char[n][m];		for(int i = 0; i < n; i++)			grid[i] = sc.next().toCharArray();		String s = sc.next();						int xs = 0, ys = 0, xf = 0, yf = 0;		for(int i = 0; i < n; i++) {			for(int j = 0; j < m; j++) {				if(grid[i][j] == 'S') {					xs = i;					ys = j;				}				if(grid[i][j] == 'E') {					xf = i;					yf = j;				}			}		}				int c = 0;		TreeMap<Integer, Integer> map;		TreeSet<Integer> set;		for(int i = 0; i < 4; i++) {			for(int j = 0; j < 4; j++) {				for(int k = 0; k < 4; k++) {					for(int l = 0; l < 4; l++) {						set = new TreeSet<>();												set.add(i);						set.add(j);						set.add(k);						set.add(l);						if(set.size() < 4)							continue;												map = new TreeMap<>();						map.put(0, i);						map.put(1, j);						map.put(2, k);						map.put(3, l);																		boolean flag = true;						int x = xs, y = ys;						for(int v = 0; v < s.length(); v++) {							switch(map.get(Integer.parseInt(s.charAt(v) + ""))) {								case 0: x--; break;								case 1: x++; break;								case 2: y++; break;								case 3: y--; break;							}							if((x == xf && y == yf) || !isValid(x, y)) {								flag = false;								break;							}						}												if(x == xf && y == yf)							c++;					}				}			}		}				System.out.println(c);	}}
