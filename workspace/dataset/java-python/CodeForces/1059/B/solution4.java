import java.util.LinkedList;import java.util.Queue;import java.util.Scanner;Â public class Main {	static int[] xarr = {-1,-1,-1,0,1,1,1,0},yarr = {-1,0,1,1,1,0,-1,-1};	static char[][] map,map1;	static boolean[][] vis;	public static void main(String[] args) {		Scanner scanner = new Scanner(System.in);		int n = scanner.nextInt();		int m = scanner.nextInt();		map = new char[n][m];		vis = new boolean[n][m];		map1 = new char[n][m];		for(int i = 0;i < map1.length;i++) {			String string = scanner.next();			for(int j = 0;j < map1[0].length;j++) {				map1[i][j] = string.charAt(j);			}		}		for(int i = 0;i < map1.length;i++) {			for(int j = 0;j < map1[0].length;j++) {				map[i][j] = '.';			}		}		bfs();		for(int i = 0;i < map1.length;i++) {			for(int j = 0;j < map1[0].length;j++) {				if(map[i][j]!=map1[i][j]) {					System.out.println("NO");					System.exit(0);				}			}		}		System.out.println("YES");	}	public static void bfs() {		Queue<node> queue = new LinkedList<node>();		queue.add(new node(1,1));		vis[1][1] = true;		while(queue.size()!=0) {			node node = queue.poll();			f(node.x,node.y);			for(int i = 1;i < xarr.length;i+=2) {				int dx = node.x+xarr[i];				int dy = node.y+yarr[i];				if(dx<=0||dx>=map.length-1||dy<=0||dy>=map[0].length-1||vis[dx][dy])continue;				vis[dx][dy] = true;				queue.add(new node(dx,dy));			}		}	}	public static void f(int x,int y) {		boolean flag = true;		for(int i = 0;i < xarr.length;i++) {			int dx = x+xarr[i];			int dy = y+yarr[i];			if(map1[dx][dy]!='#') {				flag = false;				break;			}		}		if(flag) {			for(int i = 0;i < xarr.length;i++) {				int dx = x+xarr[i];				int dy = y+yarr[i];				map[dx][dy] = '#';			}		}	}}class node{	int x,y;	public node() {};	public node(int x,int y) {		this.x = x;		this.y = y;	}}
