import java.util.*;import java.io.*; public class CheckoutAssistant {    public static long INF = Long.MAX_VALUE/2;    public static void main(String[] args) throws IOException{        BufferedReader f = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));        int n = Integer.parseInt(f.readLine());        Entry[] vals = new Entry[n];        for(int i = 0; i < n; i++){            StringTokenizer st = new StringTokenizer(f.readLine());            int a = Integer.parseInt(st.nextToken())+1;            long b = Long.parseLong(st.nextToken());            vals[i] = new Entry(a, b);        }        Arrays.sort(vals);        long[] dp = new long[4005];        Arrays.fill(dp, INF);        dp[0] = 0;        for(int i = 0; i < n; i++){            for(int j = 4004; j >= 0; j--){                int val = vals[i].num;                if(j+val < 4005) dp[j+val] = Math.min(dp[j+val], dp[j]+vals[i].cost);            }        }        long ans = INF;        for(int i = n; i < 4005; i++) ans = Math.min(ans, dp[i]);        out.println(ans);        out.close();     }    static class Entry implements Comparable<Entry>{        public int num;        public long cost;        public Entry(int num, long cost){            this.num=num;            this.cost=cost;        }        public int compareTo(Entry e){            if(cost < e.cost) return -1;            if(cost > e.cost) return 1;            return 0;        }    }}
