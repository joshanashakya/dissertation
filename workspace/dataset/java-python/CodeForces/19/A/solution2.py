class Info:    # constructor  self <-> this    def __init__(self, newTeamName, newPoints, newGoalDiff, newScoredGoals):        self.teamName = newTeamName        self.points = newPoints        self.goalDiff = newGoalDiff        self.scoredGoals = newScoredGoals     # override toString()    def __str__(self):        template = '\n*****************\n'        template += f'teamName: {self.teamName} \n'        template += f'points: {self.points} \n'        template += f'goalDiff: {self.goalDiff} \n'        template += f'scoredGoals: {self.scoredGoals} \n'        template += '*****************\n'        return template  # end of class here . . .'''        0123456789line = 'abcdQefgQh'''' '''def IndexOf(line: str, item) -> int:    for i in range(len(line)):        if line[i] == item:            return i    return -1'''  def output(cont: list):    for it in cont:        print(it)  def findIndexByName(cont: list, searchName: str) -> int:    for i in range(len(cont)):        if cont[i].teamName == searchName:            return i    return -1  n, cont = int(input()), []for i in range(n):    # obj = Info(input(), 0, 0, 0)    # cont.append(obj)    cont.append(Info(input(), 0, 0, 0)) for i in range(n * (n - 1) // 2):    line = input()    dashIndex = line.index('-')    spaceIndex = line.index(' ')     team1Name = line[:dashIndex]    team2Name = line[dashIndex + 1:spaceIndex]     colonIndex = line.index(':')    goal1 = int(line[spaceIndex + 1: colonIndex])    goal2 = int(line[colonIndex + 1:])     team1Index = findIndexByName(cont, team1Name)    team2Index = findIndexByName(cont, team2Name)     # update points    if goal1 > goal2:        cont[team1Index].points += 3    elif goal1 < goal2:        cont[team2Index].points += 3    else:        cont[team1Index].points += 1        cont[team2Index].points += 1     # update Goal Difference    cont[team1Index].goalDiff += goal1 - goal2    cont[team2Index].goalDiff += goal2 - goal1     # updte Scored Goals    cont[team1Index].scoredGoals += goal1    cont[team2Index].scoredGoals += goal2# end of for loopcont.sort(key=lambda item: (item.points, item.goalDiff, item.scoredGoals), reverse=True)del cont[n // 2:]cont.sort(key=lambda item: item.teamName)# output(cont)for item in cont:    print(item.teamName)
