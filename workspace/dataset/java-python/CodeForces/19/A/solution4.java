import java.util.*;import java.io.*; public class CF {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));         // Store points, scored vs missed, and num scored        int n = Integer.parseInt(br.readLine());        ArrayList<Record> standings = new ArrayList<>();        HashMap<String, Record> map = new HashMap<>();          for (int i = 0; i < n; i++) {            String name = br.readLine();            Record newRecord = new Record(name);            standings.add(newRecord);            map.put(name, newRecord); // points to the same thing        }         for (int i = 0, numLines = (n * n - n) / 2; i < numLines; i++) {            StringTokenizer st = new StringTokenizer(br.readLine());             String[] names = st.nextToken().split("-");             String[] ptsStr = st.nextToken().split(":");            int[] pts = {Integer.parseInt(ptsStr[0]), Integer.parseInt(ptsStr[1])};             if (pts[0] > pts[1]) {                map.get(names[0]).numPoints += 3;            } else if (pts[0] < pts[1]) {                map.get(names[1]).numPoints += 3;            } else {                map.get(names[0]).numPoints += 1;                map.get(names[1]).numPoints += 1;            }             map.get(names[0]).pointDiff += pts[0] - pts[1];            map.get(names[1]).pointDiff += pts[1] - pts[0];             map.get(names[0]).numGoals += pts[0];            map.get(names[1]).numGoals += pts[1];        }         standings.sort((o1, o2) -> {            int diff = -(o1.numPoints - o2.numPoints);            if (diff != 0) return diff;             diff = -(o1.pointDiff - o2.pointDiff);            if (diff != 0) return diff;             return -(o1.numGoals - o2.numGoals);        });         standings.subList(0, n / 2).sort(Comparator.comparing(o -> o.name));         for (int i = 0; i < n / 2; i++) {            pw.println(standings.get(i).name);        }         pw.close();    }     static class Record {        public String name;        public int numPoints, pointDiff, numGoals;         public Record(String name) {            this.name = name;            this.numPoints = 0;            this.pointDiff = 0;            this.numGoals = 0;        }         @Override        public String toString() {            return "Record{" +                    "name='" + name + '\'' +                    ", numPoints=" + numPoints +                    ", pointDiff=" + pointDiff +                    ", numGoals=" + numGoals +                    '}';        }    }}
