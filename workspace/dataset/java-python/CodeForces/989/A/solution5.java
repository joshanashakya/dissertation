import java.io.*;import java.util.*;  public class Main {     private static StringBuilder data = new StringBuilder();    private final static FastReader in = new FastReader();     public static void main(String[] args) {        char[]t =in.line().toCharArray();        int []j;        for (int i = 0; i < t.length-2; i++) {            j = new int[3];            if(t[i]!='.'&&t[i+1]!='.'&&t[i+2]!='.'){                j[t[i]-'A']++;                j[t[i+1]-'A']++;                j[t[i+2]-'A']++;                if(j[0]==1&&j[1]==1&&j[2]==1){                    System.out.println("Yes");                    System.exit(0);                }             }        }        System.out.println("No");      }     static void fileOut(String s) {        File out = new File("output.txt");        try {            FileWriter fw = new FileWriter(out);            fw.write(s);            fw.flush();            fw.close();        } catch (IOException e) {            e.printStackTrace();        }    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         public FastReader(String path) {            try {                br = new BufferedReader(new                        InputStreamReader(new FileInputStream(path)));            } catch (FileNotFoundException e) {                e.printStackTrace();            }        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int inT() {            return Integer.parseInt(next());        }         long lonG() {            return Long.parseLong(next());        }         float floaT() {            return Float.parseFloat(next());        }         double doublE() {            return Double.parseDouble(next());        }          String line() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    } }
