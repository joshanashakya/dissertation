import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.StringTokenizer;   public class A {		    public static void main(String[] args) {        	FastScanner scan = new FastScanner();    	                                                                         	    	int t = 1;//scan.nextInt();    	for(int tt=0; tt<t; tt++) {    		int a = scan.nextInt(), b = scan.nextInt(), c = scan.nextInt(), d = scan.nextInt(), e = scan.nextInt(), f = scan.nextInt();    		    		long cost = 0;    		if(e > f) {    			cost += first(a, d, e);    			d -= Math.min(a, d);    			cost += second(b, c, d, f);    		} else {    			cost += second(b, c, d, f);    			d -= Math.min(b, Math.min(c, d));    			cost += first(a, d, e);    		}    		System.out.println(cost);    	}    }        static int first(int a, int b, int cost) {    	return cost * Math.min(a, b);    }        static int second(int a, int b, int c, int cost) {    	return cost * Math.min(a, Math.min(b, c));    }               public static void sort(int [] a) {    	ArrayList<Integer> b = new ArrayList<>();    	for(int i: a) b.add(i);    	Collections.sort(b);    	for(int i=0; i<a.length; i++) a[i]= b.get(i);    }          static class FastScanner{    	    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    	StringTokenizer st = new StringTokenizer("");    	String next() {    		while(!st.hasMoreTokens())    			try {    				st = new StringTokenizer(br.readLine());    			} catch (IOException e){    				e.printStackTrace();    			}    		return st.nextToken();    	}    	    	int nextInt() {    		return Integer.parseInt(next());    	}    	    	int [] readArray(int n) {    		int [] a = new int[n];    		for(int i=0; i<n ; i++) a[i] = nextInt();    		return a;    	}    	    	long nextLong() {    		return Long.parseLong(next());    	}    	    	    }       } 
