import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.math.BigInteger;import java.util.*; public class Main{     public static boolean check(String s)    {        StringBuilder newS = new StringBuilder(s);        String revs = newS.reverse().toString();        if (s.equals(revs)) {            return true;        }        return false;    }     public static void main(String[] args) throws IOException    {        FastScanner input = new FastScanner();        int n = input.nextInt();        int k = input.nextInt();        int a[] = new int[n];        for (int i = 0; i < n; i++) {            a[i] = input.nextInt();         }        if (n == 1) {            System.out.println("0");            System.out.println(a[0]);        } else if (n == 2) {            System.out.println(Math.max(0, k - (a[0] + a[1])));            System.out.print(a[0] + " ");            System.out.println(a[1] + Math.max(0, k - (a[0] + a[1])));        } else {            int total=0;            int min1=0,min2=0;            for (int i = 1; i < n; i++) {              total+= Math.max(0, k-(a[i]+a[i-1]));              a[i]+=Math.max(0, k-(a[i]+a[i-1]));            }            System.out.println(total);            for (int i : a) {                System.out.print(i+" ");            }            System.out.println("");        }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
