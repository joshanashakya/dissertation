import java.io.*;import java.util.*; public class A {     static final boolean stdin = true;    static final String filename = "";    static FastScanner br;    static PrintWriter pw;     public static void main(String[] args) throws IOException {         if (stdin) {            br = new FastScanner();            pw = new PrintWriter(new OutputStreamWriter(System.out));        } else {            br = new FastScanner(filename + ".in");            pw = new PrintWriter(new FileWriter(filename + ".out"));        }         Solver solver = new Solver();        solver.solve(br, pw);    }     static class Solver {        public void solve(FastScanner br, PrintWriter pw) throws IOException {        	char[] a = br.nextToken().toCharArray(), b = br.nextToken().toCharArray();        	int c = a.length;        	boolean poss = true;        	ArrayList<Character> d = new ArrayList<Character>();        	for(int i = 0; i < c; i++){        		if(a[i] != b[i]){        			if(d.contains(a[i]) || d.contains(b[i])){        				poss = false;        				break;        			}        			d.add(a[i]);        			d.add(b[i]);        			for(int j = 0; j < c; j++){        				if(b[j] == d.get(d.size()-1)){        					b[j] = d.get(d.size()-2);        				}else if(b[j] == d.get(d.size()-2)){        					b[j] = d.get(d.size()-1);        				}        			}        		}        		//System.out.println();        		//System.out.println(new String(a));        		//System.out.println(new String(b));        	}        	if(new String(a).equals(new String(b)) && poss){        		pw.println(d.size()/2);        		for(int i = 0; i < d.size(); i+=2){        			pw.println(d.get(i) + " " + d.get(i+1));        		}        	}else{        		pw.println(-1);        	}            pw.close();        }     }     //fastscanner class    public static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(String s) {            try {                br = new BufferedReader(new FileReader(s));            } catch (FileNotFoundException e) {                e.printStackTrace();            }        }         public FastScanner() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String nextToken() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(nextToken());        }         long nextLong() {            return Long.parseLong(nextToken());        }         double nextDouble() {            return Double.parseDouble(nextToken());        }    } }
