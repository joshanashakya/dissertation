  import java.io.*;import java.util.*;  public class mainJava{     public static void main(String args[]){         Read input = new Read();        String a = input.next(), b = input.next();        boolean ok = true;        int n = a.length();        char table[] = new char[28];        ArrayList< char[] > ans =new ArrayList<>();         for (int i=0;i<n;i++){            char[] aux = new char[2];            aux[0] = a.charAt(i); aux[1] = b.charAt(i);             if (aux[0]!=aux[1]){                 if ((table[aux[0]-'a']!=0 || table[aux[1]-'a']!=0) &&                (table[aux[0]-'a']!=aux[1] || table[aux[1]-'a']!=aux[0])){                    ok = false;                    break;                }                  if (table[aux[0]-'a']==0 && table[aux[1]-'a']==0) ans.add(aux);                table[aux[0]-'a'] = aux[1];                table[aux[1]-'a'] = aux[0];             }         }         for (int i=0;i<n;i++){            char aux[] = new char[2];            aux[0] = a.charAt(i); aux[1] = b.charAt(i);             if (aux[0]!=aux[1] && (table[aux[0]-'a']!=aux[1] || table[aux[1]-'a']!=aux[0]))                    ok  = false;            else if (table[aux[0]-'a']!=0 && table[aux[0]-'a']!=aux[0] && aux[0]==aux[1])                    ok = false;         }         if (ok==false){            System.out.print(-1);            return;        }         System.out.println(ans.size());         for(char[] x : ans){                System.out.print(x[0]);                System.out.print(' ');                System.out.println(x[1]);        }     }     private static class Read{        BufferedReader br;        StringTokenizer tk;         public Read(){            br = new BufferedReader(new InputStreamReader(System.in));        }         String next(){            while (tk==null || !tk.hasMoreElements()){                try {                    tk = new StringTokenizer(br.readLine());                } catch (IOException e){                    e.printStackTrace();                }            }            return tk.nextToken();        }         double nextDouble(){return Double.parseDouble(next());}        int nextInt(){return Integer.parseInt(next());}        long nextLong(){return Long.parseLong(next());}     }   }
