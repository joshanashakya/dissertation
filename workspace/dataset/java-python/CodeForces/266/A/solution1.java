import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastScanner in = new FastScanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        AStonesOnTheTable solver = new AStonesOnTheTable();        solver.solve(1, in, out);        out.close();    }     static class AStonesOnTheTable {        public void solve(int testNumber, FastScanner fs, PrintWriter out) {            int n = fs.nextInt();            char[] c = fs.next().toCharArray();            int ans = 0;            char p = c[0];            for (int i = 1; i < n; i++) {                if (c[i] == p) {                    ans++;                } else {                    p = c[i];                }            }            out.println(ans);        }     }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream inputStream) {            br = new BufferedReader(new InputStreamReader(inputStream));        }         public String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
