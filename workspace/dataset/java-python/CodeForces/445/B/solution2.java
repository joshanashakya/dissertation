import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{       static long count=0;        public static void main(String[] args)    {         FastScanner input = new FastScanner();              int n = input.nextInt();       int m = input.nextInt();       ArrayList<ArrayList<Integer>> a = new ArrayList<>(n+1);       boolean visited[] = new boolean[n+1];        for (int i = 0; i <=n; i++) {            a.add(new ArrayList<>());        }        for (int i = 0; i < m; i++) {            int x = input.nextInt();            int y = input.nextInt();            a.get(x).add(y);            a.get(y).add(x);                                }        long ans = 0;        for (int i = 1; i <=n; i++) {            if(!visited[i])            {                 count=0;                 dfs(visited,a,i);                 ans+=(count-1);            }        }//        for (int i = 1; i <=n; i++) {//            System.out.println(a.get(i));//        }                System.out.println(1L<<ans);     }     private static void dfs(boolean[] visited, ArrayList<ArrayList<Integer>> a, int i)    {        visited[i] = true;        count++;        for (int j = 0; j < a.get(i).size(); j++) {            if(!visited[a.get(i).get(j)])            {                dfs(visited, a, a.get(i).get(j));            }        }    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
