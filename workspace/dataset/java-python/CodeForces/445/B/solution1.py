import bisectimport collectionsimport copyimport functoolsimport heapqimport itertoolsimport mathimport randomimport reimport sysimport timeimport stringfrom typing import List# sys.setrecursionlimit(999999) n,m = map(int,input().split())tree = list(range(n+1))def find(st):    if tree[st]!=st:        tree[st] = find(tree[st])    return tree[st]  for _ in range(m):    u,v = map(int,input().split())    tree[find(u)] = find(tree[v]) cnt = collections.defaultdict(int) for i in range(1,n+1):    cnt[find(i)]+=1 ans = (1<<(sum(v-1 for v in cnt.values())))print(ans)
