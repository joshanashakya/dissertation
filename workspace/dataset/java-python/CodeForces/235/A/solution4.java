import java.util.*;import java.io.*; public class AiseHi {	static class FastReader{         BufferedReader br;         StringTokenizer st;         public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}        String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}         catch (IOException  e){e.printStackTrace();}}return st.nextToken();}        int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}        String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }     }	static FastReader sc = new FastReader();	public static void main (String[] args) {		PrintWriter out = new PrintWriter(System.out);		int t = 1;//    	t = sc.nextInt();    	sieve();    	while(t-->0) {         	long n = sc.nextInt();         	long ans = (n-2*(n%6==0?1:0))*(n-1)*(n-3+(n%2));         	out.write((n>2?ans:n)+"\n");       	}		out.close();	}	static int ceil(int a,int b) {		return a/b + (a%b==0?0:1);	}	static boolean prime[] = new boolean[10000001];	static void sieve() {		prime[0] = true;		prime[1] = true;		int max = 10000000;		for(int i=2;i*i<=max;i++) {			if(!prime[i]) {				for(int j=i*i;j<=max;j+=i)					prime[j] = true;			}		}	}}Â class pair implements Comparable<pair>{	int a;	int b;	pair(int a,int b){		this.a = a;		this.b = b;	}	@Override	public int compareTo(pair o) {		if(this.a!=o.a)			return (int) (this.a - o.a);		else			return (int)(this.b - o.b);	}}
