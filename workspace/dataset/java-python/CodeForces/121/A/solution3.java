import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;  public class A121{            public static void main(String args[])    {           FastReader in=new FastReader();        PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));        int tc=1;             //tc=in.nextInt();        while(tc-->0)        {                        long l=in.nextLong();            long r=in.nextLong();                        long coll[]=new long[1026];            coll[0]=4;            coll[1]=7;            int ind=2;                        for(int i=0;i<512;i++)            {				coll[ind++]=coll[i]*10+4;				coll[ind++]=coll[i]*10+7;			}						long ans=0;			int min=0;			for(int i=0;i<1026;i++)			{				if(l<=coll[i])				{					min=i;					break;				}							}						while(l<=r)			{				if(coll[min]<=r)				{					ans+=coll[min]*(coll[min]-l+1);					l=coll[min]+1;					min++;				}				else				{					ans+=(r-l+1)*coll[min];					break;				}							}						pr.println(ans);			           }        pr.flush();    }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }          String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }
