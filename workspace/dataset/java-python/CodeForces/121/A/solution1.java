import java.io.*;import java.util.*; public class Main {	static class FastReader{         BufferedReader br;         StringTokenizer st;         public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}        String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}         catch (IOException  e){e.printStackTrace();}}return st.nextToken();}        int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}        String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }     }	static FastReader sc = new FastReader();	static List<Integer> g[];	public static void main (String[] args) throws Exception {        PrintWriter out = new PrintWriter(System.out);        int t = 1;//        t = sc.nextInt();        z :while(t-->0) {        	long l = sc.nextLong();        	long r = sc.nextLong();        	TreeSet<Long> s = new TreeSet<>();        	add("",s);        	long ans = 0;        	while(l<=r) {        		long num = s.ceiling(l);        		ans = ans + num*(Math.min(num, r)-l+1);        		l = num+1;        	}        	out.write(ans+"\n");       	}		out.close();	}	private static void add(String s, TreeSet<Long> ts) {		if(s.length()>0 && s.length()<11) ts.add(Long.parseLong(s));		if(s.length()>11) return;		add(s+"4",ts);		add(s+"7",ts);	}	static int ceil(int a,int b) {		return a/b + (a%b==0?0:1);	}}class pair implements Comparable<pair>{	int a;	int b; 	pair(int a,int b){		this.a = a;		this.b = b;	}	@Override    public int compareTo(pair p){        return p.b - this.b;    }}
