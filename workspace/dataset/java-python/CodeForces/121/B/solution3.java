import java.io.*;import java.util.StringTokenizer; /** * 121B * θ(n) time * θ(n) space * * @author artyom */public class _121B implements Runnable {    private BufferedReader in;    private StringTokenizer tok;     private Object solve() throws IOException {        int n = nextInt(), k = nextInt();        char[] s = nextToken().toCharArray();        for (int i = 0, cnt = 0, lim = n - 1; i < lim && cnt < k; i++) {            if (s[i] == '4' && s[i + 1] == '7') {                if ((i & 1) == 0) {                    s[i + 1] = '4';                } else {                    s[i] = '7';                    if (s[i - 1] == '4') {                        if (((k - cnt) & 1) == 0) {                            s[i] = '4';                        }                        break;                    }                }                cnt++;            }        }        return new String(s);    }     //--------------------------------------------------------------    public static void main(String[] args) {        new _121B().run();    }     @Override    public void run() {        try {            in = new BufferedReader(new InputStreamReader(System.in));            tok = null;            System.out.print(solve());            in.close();        } catch (IOException e) {            System.exit(0);        }    }     private String nextToken() throws IOException {        while (tok == null || !tok.hasMoreTokens()) {            tok = new StringTokenizer(in.readLine());        }        return tok.nextToken();    }     private int nextInt() throws IOException {        return Integer.parseInt(nextToken());    }}
