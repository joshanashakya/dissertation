import java.io.*;import java.util.*;public class test{    public static void main(String args[])    {        //System.out.println("Welcome");        inputs in=new inputs(System.in);        int n=in.nextInt(),l=in.nextInt(),m=in.nextInt();        int c1[]=new int[m];        int c2[]=new int[n];        long c3[]=new long[n];        long c4[]=new long[m];                for(int i=0;i<n;i++)        {            c1[in.nextInt()%m]++;        }        for(int i=0;i<n;i++)        {            c2[i]=in.nextInt();        }        for(int i=0;i<n;i++)        {            c3[i]=(long)c2[i]+in.nextInt();        }                long dp[][]=new long[23][m];        long ans[];        int M=1000000007;                TreeSet<Integer> ts=new TreeSet<Integer>();        HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();        for(int i=0;i<=23;i++)        {           ts.add((int)Math.pow(2,i));            hm.put((int)Math.pow(2,i),i);        }                for(int i=0;i<n;i++)        {           dp[0][c2[i]%m]++;            c4[(int)(c3[i]%m)]++;        }                if(l==2)        {            long ans1[]=new long[m];            for(int j=0;j<m;j++)               for(int k=0;k<m;k++)                   { ans1[(j+k)%m]+=(c1[j]*c4[k])%M;                      ans1[(j+k)%m]%=M;                     }                                out(""+ans1[0]);            return;        }                l=l-2;        int bigpval=ts.floor(l);        int bigp=hm.get(bigpval);        l=l-bigpval;                       for(int i=1;i<=bigp;i++)        {           for(int j=0;j<m;j++)               for(int k=0;k<m;k++)                   { dp[i][(j+k)%m]+=(dp[i-1][j]*dp[i-1][k])%M;                      dp[i][(j+k)%m]%=M;                     }        }                ans=dp[bigp];                while(l>0)        {            int pval=ts.floor(l);            int p=hm.get(pval);            l=l-pval;                        long temp[]=new long[m];            for(int j=0;j<m;j++)               for(int k=0;k<m;k++)                   { temp[(j+k)%m]+=(ans[j]*dp[p][k])%M;                      temp[(j+k)%m]%=M;                     }                                ans=temp;                }                long temp[]=new long[m];            for(int j=0;j<m;j++)               for(int k=0;k<m;k++)                   { temp[(j+k)%m]+=(ans[j]*c1[k])%M;                      temp[(j+k)%m]%=M;                     }                                ans=temp;                        temp=new long[m];            for(int j=0;j<m;j++)               for(int k=0;k<m;k++)                   { temp[(j+k)%m]+=(ans[j]*c4[k])%M;                      temp[(j+k)%m]%=M;                     }                                ans=temp;             out(""+ans[0]);                }        static void out(String s)    {        System.out.println(s);    }}Â class inputs{    public BufferedReader reader;    public StringTokenizer token;        inputs(InputStream str)    {        reader=new BufferedReader(new InputStreamReader(str));        token=null;    }        int nextInt()    {        while(token==null||!token.hasMoreTokens())        {            try { token=new StringTokenizer(reader.readLine());   }            catch(IOException e){  throw new RuntimeException(e); }        }        return Integer.parseInt(token.nextToken());    }        String next()    {        while(token==null||!token.hasMoreTokens())        {            try { token=new StringTokenizer(reader.readLine());   }            catch(IOException e){  throw new RuntimeException(e); }        }        return token.nextToken();    }    }
