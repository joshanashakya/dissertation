import java.util.*;import javafx.util.Pair; public class practice {			public static void main(String[] args) {						Scanner scn=new Scanner(System.in);			long n=scn.nextLong(),a,b,c,val=1;			String l,r;			HashMap<String,Long> map=new HashMap<>();			HashMap<Pair,Long> like=new HashMap<>();			for(int i=0;i<n;i++){				l=scn.next();r=scn.next();r=scn.next();				if(map.containsKey(l)==false)map.put(l,val++ );				if(map.containsKey(r)==false)map.put(r,val++);				like.put(new Pair(map.get(l),map.get(r)),(long) 1);			}			a=scn.nextLong();b=scn.nextLong();c=scn.nextLong();			long t=2187,min=a+b+c,max=0; //2187=3^7			long k,v1,v2,v3,tlikes=0,diff;			ArrayList<Long>[] list=new ArrayList[3];			for(int z=0;z<t;z++){								list[0]=new ArrayList<>();				list[1]=new ArrayList<>();				list[2]=new ArrayList<>();				k=z;tlikes=0;v1=0;v2=0;v3=0;				for(int i=1;i<=7;i++){					list[(int) (k%3)].add((long) i);					k/=3;				}				if(list[0].size()>0&&list[1].size()>0&&list[2].size()>0){					v1=a/list[0].size();v2=b/list[1].size();v3=c/list[2].size();					diff=Math.max(v1, Math.max(v2, v3))-Math.min(v1, Math.min(v2, v3));					for(int i=0;i<3;i++){						for(int j=0;j<list[i].size();j++){							for(int p=0;p<list[i].size();p++){								tlikes+= like.containsKey(new Pair(list[i].get(j),list[i].get(p)))?1:0;							}						}					}					if(diff<min){						min=diff;						max=tlikes;					}					else if( diff==min){						max=Math.max(max, tlikes);					}									}			}			System.out.println(min+" "+max);		}	} 
