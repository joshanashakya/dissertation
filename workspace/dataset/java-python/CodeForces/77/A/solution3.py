# -*- coding: utf-8 -*-"""Created on Fri Nov  1 14:28:37 2019 @author: PC-4"""from itertools import combinations, product Teams = [[1, 1, 5],         [1, 2, 4],         [1, 3, 3],         [2, 2, 3]] Names = {}Names["Anka"] = 0Names["Chapay"] = 1Names["Cleo"] = 2Names["Dracul"] = 3Names["Hexadecimal"] = 4Names["Snowy"] = 5Names["Troll"] = 6 graph = [[0] * 7 for _ in range(7)]N = int(input())for _ in range(N):    p, q = input().split(" likes ")    p = Names[p]    q = Names[q]    graph[p][q] = 1 a, b, c = sorted(map(int, input().split()))E_diff_star = float('inf')team_all = []for t1, t2, t3 in Teams:    E = [a//t1, b//t2, c//t3]    E_diff = max(E) - min(E)    if E_diff < E_diff_star:        E_diff_star = E_diff        team_all = [[t1, t2, t3]]    elif E_diff == E_diff_star:        team_all.append([t1, t2, t3]) liking = 0for team in team_all:    for te2 in combinations(set(range(7)), team[2]):        te2 = set(te2)        left = set(range(7)) - te2        L2 = sum(graph[p][q] for p, q in product(te2, te2))        for te1 in combinations(left, team[1]):            te1 = set(te1)            te0 = left - te1            L1 = sum(graph[p][q] for p, q in product(te1, te1))            L0 = sum(graph[p][q] for p, q in product(te0, te0))            L = L2 + L1 + L0            if L > liking:                liking = Lprint(E_diff_star, liking)
