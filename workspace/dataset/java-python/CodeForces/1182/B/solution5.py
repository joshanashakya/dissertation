from collections import *import bisectimport heapqimport sys def ri():    return int(input()) def rl():    return list(map(int, input().split())) h, w = rl()grid = [[x for x in "."*w] for _ in range(h)]stars_row = [0]*hfor i in range(h):	grid[i] = [x for x in input()]	C = Counter(grid[i])	stars_row[i] = C['*']Cr = Counter(stars_row) if Cr[0] + Cr[1] != h - 1:	print("NO")	sys.exit()stars_col = [0]*wfor j in range(w):	for i in range(h):		if grid[i][j] == "*":			stars_col[j] += 1 Cc = Counter(stars_col) if Cc[0] + Cc[1] != w - 1:	print("NO")	sys.exit()  degrees = [[-1]*w for _ in range(h)]d0 = 0d1 = 0d2 = 0d4 = 0d_ = 0for i in range(h):	for j in range(w):		if grid[i][j] == "*":			degrees[i][j] = 0			for di, dj in [(-1,0), (1,0),(0,-1), (0,1)]:				ni = i + di				nj = j + dj				if ni >= 0 and ni < h and nj >= 0 and nj < w:					if grid[ni][nj] == "*":						degrees[i][j] += 1			if degrees[i][j] == 1:				d1 += 1			elif degrees[i][j] == 2:				d2 += 1			elif degrees[i][j] == 4:				d4 += 1			elif degrees[i][j] == 0:				d0 += 1			else:				d_ += 1 # print(d4, d1, d2, d0, d_)# print(degrees) if d4 == 1 and d1 == 4 and d0 == 0 and d_ == 0:	print("YES")else:	print("NO")     
