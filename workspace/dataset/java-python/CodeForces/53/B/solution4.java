import java.io.*;import java.util.*;import java.math.*; public class Solution{ BufferedReader in;PrintWriter out;StringTokenizer ss; String _token()throws IOException{   while (!ss.hasMoreTokens())ss=new StringTokenizer(in.readLine());   return ss.nextToken();}int _int()throws IOException{   return Integer.parseInt(_token());}long _long()throws IOException{   return Long.parseLong(_token());}double _double()throws IOException{   return Double.parseDouble(_token());} void dbg(String s){System.out.println(s);} BigInteger a(BigInteger A, BigInteger B){return A.add(B);}BigInteger m(BigInteger A, BigInteger B){return A.multiply(B);}BigInteger s(BigInteger A, BigInteger B){return A.subtract(B);}BigInteger d(BigInteger A, BigInteger B){return A.divide(B);}  class pair implements Comparable<pair>{  long h, w;  pair(long H, long W){h=H;w=W;}  public int compareTo(pair b)  {     if (h*w > b.h*b.w)      return 1;    if (h*w < b.h*b.w)      return -1;    return h>b.h?1:-1;  }}  long conc(long x, long y){  if (y>=1.25*x)    return (long)(1.25*x);  if (y>=0.8*x)    return y;  return -1;} void RUN()throws IOException{   in = new BufferedReader(new InputStreamReader(System.in));   out = new PrintWriter(System.out);   ss = new StringTokenizer(" ");     long h=_long();   long w=_long();    if (h>1.25*w)     h=(long)(1.25*w);   if (w>1.25*h)     w=(long)(1.25*h);     pair ans=new pair(0,0);   for(long i=1;i<=h || i<=w;i*=2)   {     if (i<=h && ans.compareTo(new pair(i,conc(i,w)))<0)     {       ans=new pair(i,conc(i,w));     }      if (i<=w && ans.compareTo(new pair(conc(i,h),i))<0)     {       ans=new pair(conc(i,h),i);     }   }    out.println(ans.h+" "+ans.w);   out.close();}  public static void main(String[] args)throws Exception{try {new Solution().RUN();}catch (Exception e){System.out.println("RE");};} }
