import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.InputMismatchException;import java.io.IOException;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BlogPhoto solver = new BlogPhoto();        solver.solve(1, in, out);        out.close();    }     static class BlogPhoto {        public void solve(int testNumber, InputReader in, PrintWriter out) {            int h = in.nextInt();            int w = in.nextInt();            long h1 = Integer.highestOneBit(h);            long w1 = Math.min(w, (5 * h1) / 4);            h1 = Math.min(h1, (5 * w1) / 4);            long w2 = Integer.highestOneBit(w);            long h2 = Math.min(h, (5 * w2) / 4);            w2 = Math.min(w2, (5 * h2) / 4);            long area1 = h1 * w1;            long area2 = h2 * w2;             if (area1 == area2) {                if (h1 > h2) {                    out.println(h1 + " " + w1);                } else {                    out.println(h2 + " " + w2);                }                 return;            }             if (area1 > area2) {                out.println(h1 + " " + w1);            } else {                out.println(h2 + " " + w2);            }         }     }     static class InputReader {        private InputStream stream;        private byte[] buf = new byte[1024];        private int curChar;        private int numChars;        private InputReader.SpaceCharFilter filter;         public InputReader(InputStream stream) {            this.stream = stream;        }         public int read() {            if (numChars == -1) {                throw new InputMismatchException();            }            if (curChar >= numChars) {                curChar = 0;                try {                    numChars = stream.read(buf);                } catch (IOException e) {                    throw new InputMismatchException();                }                if (numChars <= 0) {                    return -1;                }            }            return buf[curChar++];        }         public int nextInt() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                if (c < '0' || c > '9') {                    throw new InputMismatchException();                }                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public boolean isSpaceChar(int c) {            if (filter != null) {                return filter.isSpaceChar(c);            }            return isWhitespace(c);        }         public static boolean isWhitespace(int c) {            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         public interface SpaceCharFilter {            public boolean isSpaceChar(int ch);         }     }} 
