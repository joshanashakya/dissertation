import java.util.*;import java.io.*;Â public class _practise {	 		public static void main(String args[])		{	 			FastReader in=new FastReader();			PrintWriter so = new PrintWriter(new BufferedWriter(new  OutputStreamWriter(System.out)));			int t = 1;			while(t-->0)			{				int n = in.nextInt();				int m = in.nextInt();				int k = in.nextInt();				int a[] = new int[n];				for(int i=0 ; i<n ; i++) a[i]=in.nextInt();				Arrays.sort(a);				boolean flag  = false;				int s=0,ans=0;			    for(int i=0 ; i<n ; i++)			    {			    	if(m<=(k+s))			    	{			    		flag=true;			    		break;			    	}			    	if(i==0) 			    	{			    		k-=1;			    		s+=a[n-1-i];			    		ans++;			    	}			    	else			    	{			    		s=s+a[n-1-i]-1;			    		ans++;			    	}			    	//so.println(k+" "+s);			    }			    if(m<=(k+s))		    	{		     	flag=true;		    	}			    if(flag) so.println(ans);			    else so.println("-1");			}			so.flush();			/*String s = in.next();			int a[] = new int[n];			ArrayList<Integer> al = new ArrayList<Integer>(); 			StringBuilder sb = new StringBuilder();			Set<Long> a = new HashSet<Long>();			so.println("HELLO");*/		}	 		static class FastReader		{ 			BufferedReader br; 			StringTokenizer st; 	 			public FastReader() 			{ 				br = new BufferedReader(new InputStreamReader(System.in)); 			} 	 			String next() 			{ 				while (st == null || !st.hasMoreElements()) 				{ 					try					{ 						st = new StringTokenizer(br.readLine()); 					} 					catch (IOException  e) 					{ 						e.printStackTrace(); 					} 				} 				return st.nextToken(); 			} 	 			int nextInt() 			{ 				return Integer.parseInt(next()); 			} 	 			long nextLong() 			{ 				return Long.parseLong(next()); 			} 	 			double nextDouble() 			{ 				return Double.parseDouble(next()); 			} 	 			int[] readIntArray(int n)			{				int a[]=new int[n];				for(int i=0;i<n;i++)a[i]=nextInt();				return a;			}	 			long[] readLongArray(int n)			{				long a[]=new long[n];				for(int i=0;i<n;i++)a[i]=nextLong();				return a;			}	 			String nextLine() 			{ 				String str = ""; 				try				{ 					str = br.readLine(); 				} 				catch (IOException e) 				{ 					e.printStackTrace(); 				} 				return str; 			} 		} 	}
