import mathimport sysimport bisect  # https://pythonworld.ru/moduli/modul-bisect.htmlfrom heapq import heapify, heappop, heappushfrom itertools import *  # https://pythonworld.ru/moduli/modul-itertools.htmlfrom collections import deque, OrderedDictsys.setrecursionlimit(10 ** 6)# f = open('input.txt')# f.close()II = lambda: sys.stdin.readline()  # f.readline()inp = lambda: int(II())inpm = lambda: map(int, II().split())inpl = lambda: list(inpm())arr_mn = lambda _n, _m: [[0 for __ in range(_m)] for _ in range(_n)]arr_nn = lambda _n: arr_mn(_n, _n) EPS = 1e-9INF = int(1e18)MOD = int(1e9) + 7  # 998244353N = 2000009""" """mod = 475def check(p, s):    i = (s // 50) % mod    for _ in range(25):        i = (i * 96 + 42) % mod        if i + 26 == p:            return True    return False def solve():    p, x, y = inpm()    s = x    for q in range(x, y - 1, -50):        if check(p, q):            print(0)            return    for i in range(mod):        if check(p, s + i * 50):            print((i + 1) // 2)            return ''' ''' def main():    t = 1  # inp()  # 1  #    for i in range(t):        solve()        # print()main()
