import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.Collections;import java.util.HashMap;import java.util.PriorityQueue;import java.util.StringTokenizer;import java.util.TreeSet; /* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. */public class b {    static long MOD;    public static void main(String[] args) {        FS in = new FS(System.in);        PrintWriter out = new PrintWriter(System.out);                int n = in.nextInt();        MOD = in.nextLong();        long k = in.nextLong();                HashMap<Long, Integer> map = new HashMap<>();        long tot = 0;        for(int i = 0; i < n; i++) {            long next = in.nextLong();            long res = sub(mult(mult(next, next), mult(next, next)), mult(k, next));            int add = map.getOrDefault(res, 0);            tot += add;            map.put(res, add+1);        }        System.out.println(tot);        out.close();    }        static long mult(long a, long b) {        return (a*b)%MOD;    }    static long add(long a, long b) {        return (a+b)%MOD;    }        static long sub(long a, long b) {        return (a-b+MOD)%MOD;    }        static long gcd(long a, long b) {        return b == 0 ? a : gcd(b, a%b);    }     static class FS {         BufferedReader in;        StringTokenizer token;         public FS(InputStream str) {            in = new BufferedReader(new InputStreamReader(str));        }         public String next() {            if (token == null || !token.hasMoreElements()) {                try {                    token = new StringTokenizer(in.readLine());                } catch (IOException ex) {                }                return next();            }            return token.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public long nextLong() {            return Long.parseLong(next());        }    }}
