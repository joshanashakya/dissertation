/*javac B407.java && java B407*/ import java.io.*;import java.util.*; public class B407 {	public static void main(String[] args) { new B407(); }	FS in = new FS();	PrintWriter out = new PrintWriter(System.out); 	long b1, q, l;	int m;	int[] a;		B407() {		b1 = in.nextLong();		q = in.nextLong();		l = in.nextLong(); 		m = in.nextInt();		a = new int[m];		for (int i = 0; i < m; i++)			a[i] = in.nextInt();		if (abs(b1) > l) {			out.println(0);			out.close();			return;		}				boolean pos = false, neg = false, zer = false;		for (int i = 0; i < m; i++) {			pos |= (a[i] == b1);			neg |= (a[i] == -b1);			zer |= (a[i] == 0);		}		if (zer && q == 0 && b1 != 0) out.println((pos ? 0 : 1));		else if (b1 == 0) out.println((zer ? 0 : "inf"));		else if (zer && q == 0) out.println(0);		else if (q == 0) out.println("inf");		if (b1 == 0 || q == 0) {			out.close();			return;		} 		if (pos && q == 1) out.println(0);		else if (q == 1) out.println("inf");		else if (q == -1) {			if (pos && neg) out.println(0);			else out.println("inf");		}		else {			int ptr = 0;			long[] gen = new long[64];			gen[0] = b1;			while (abs(gen[ptr]) <= l)				gen[++ptr] = q * gen[ptr - 1];			int cnt = 0;			for (int i = 0; i < m; i++)				for (int j = 0; j < ptr; j++) {					if (abs(gen[j]) > l) continue;					if (a[i] == gen[j]) cnt++;				}			out.println(ptr - cnt);		}		out.close();	} 			int abs(int x) { if (x < 0) return -x; return x; }	long abs(long x) { if (x < 0) return -x; return x; }	int max(int x, int y) { if (x < y) return y; return x; }	int min(int x, int y) { if (x > y) return y; return x; }	long max(long x, long y) { if (x < y) return y; return x; }	long min(long x, long y) { if (x > y) return y; return x; }	int gcd(int x, int y) { while (y != 0) { x = y^(x^(y = x)); y %= x; } return x; }	long gcd(long x, long y) { while (y != 0) { x = y^(x^(y = x)); y %= x; } return x; }	long lcm(int x, int y) { long xy = x; xy *= y; return xy / gcd(x, y); }	long lcm(long x, long y) { return x * (y / gcd(x, y)); } 	class FS {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer("");		String next() {			while (!st.hasMoreTokens()) {				try { st = new StringTokenizer(br.readLine()); }				catch (Exception e) {}			} return st.nextToken();		}		int nextInt() { return Integer.parseInt(next()); }		long nextLong() { return Long.parseLong(next()); }		double nextDouble() { return Double.parseDouble(next()); }	}} 
