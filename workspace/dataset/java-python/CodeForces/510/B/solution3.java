import java.util.Scanner; public class TwoDots {     private static int rows, cols;    private static String[] board;    private static boolean[][] visited;     public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        rows = sc.nextInt();        cols = sc.nextInt();         board = new String[rows];        for (int i = 0; i < rows; i++) {            board[i] = sc.next();        }         if (isCyclic(board)) System.out.println("Yes");        else System.out.println("No");    }     public static boolean isCyclic(String[] board) {        for (int i = 0; i < rows; i++) {            for (int j = 0; j < cols; j++) {                visited = new boolean[rows][cols];                char color = board[i].charAt(j);                if (findCycle(color, -1, -1, i, j, visited)) return true;            }        }        return false;    }     /*    * BBBB    * BBBB    * BBBB    *    * ABA    * AAA    * ABA    *     * AA    * AN    * AA    *    * AAAB    * AAAB    * BBBB    * BBBB    *    * AAABA    * ABBAA    * AABAA    *    * AABB    * ACCB    * AABB    *     * AABB    * ACBB    * DADB    *    * BBAA    * BBAD    * BDBD    */    public static boolean findCycle(char color, int xant, int yant, int i, int j, boolean[][] visited) {       visited[i][j] = true;        visited[i][j] = true;        if (i < rows-1 && color == board[i+1].charAt(j) && (xant != i+1 || yant != j)) {           if(!visited[i+1][j])  findCycle(color, i, j, i+1, j, visited);           else return true;       }        if (i > 0 && color == board[i-1].charAt(j) && (xant != i-1 || yant != j)) {           if(!visited[i-1][j]) findCycle(color, i, j, i-1, j, visited);           else return true;       }        if (j > 0 && color == board[i].charAt(j-1) && (xant != i || yant != j-1)) {           if(!visited[i][j-1]) findCycle(color, i, j, i, j-1, visited);           else return true;       }        if (j < cols-1 && color == board[i].charAt(j+1) && (xant != i || yant != j+1)) {           if(!visited[i][j+1])  findCycle(color, i, j, i, j+1, visited);           else return true;        }        return false;   }}
