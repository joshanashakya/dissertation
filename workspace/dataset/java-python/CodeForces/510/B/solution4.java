import java.util.*; public class Main {    public static boolean[][] isUsed;    public static boolean flag = false;     public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        String[] split = sc.nextLine().split(" ");        int n = Integer.valueOf(split[0]);        int m = Integer.valueOf(split[1]);         char[][] arr = new char[n + 2][m + 2];        for (int i = 1; i <= n; i++) {            int ind = 0;            char[] chars = sc.nextLine().toCharArray();            for (int j = 1; j <= m; j++) {                arr[i][j] = chars[ind++];            }         }         for (int i = 1; i <= n; i++) {            for (int j = 1; j <= m; j++) {                isUsed = new boolean[n + 2][m + 2];                int iStart = i;                int jStart = j;                fun(arr, i, j, 0, iStart, jStart);                if (flag) {                    System.out.println("Yes");                    return;                }             }        }        System.out.println("No");      }     private static void fun(char[][] arr, int x, int y, int tot, int aimx, int aimy) {        if (x == aimx && y == aimy && tot >= 4) {            flag = true;            return;        }        if (flag) {            return;        }        if (arr[x + 1][y] == arr[x][y] && !isUsed[x + 1][y]) {            isUsed[x + 1][y] = true;            fun(arr, x + 1, y, tot + 1, aimx, aimy);            isUsed[x + 1][y] = false;        }        if (arr[x][y + 1] == arr[x][y] && !isUsed[x][y + 1]) {            isUsed[x][y + 1] = true;            fun(arr, x, y + 1, tot + 1, aimx, aimy);            isUsed[x][y + 1] = false;        }        if (arr[x - 1][y] == arr[x][y] && !isUsed[x - 1][y]) {            isUsed[x - 1][y] = true;            fun(arr, x - 1, y, tot + 1, aimx, aimy);            isUsed[x - 1][y] = false;        }        if (arr[x][y - 1] == arr[x][y] && !isUsed[x][y - 1]) {            isUsed[x][y - 1] = true;            fun(arr, x, y - 1, tot + 1, aimx, aimy);            isUsed[x][y - 1] = false;        }     }}    	  	   	 		     			   	 			  	
