import java.util.*;import java.io.*;//import java.math.*; public class Task{        //  ..............code begins here.............. static long mod=(long)1e9+7;static long res=0;static int[] ss;static void dfs(List<Integer>[] g, int s,int pp,long pre,int l){    long min=2000000000;    for(int c:g[s]){        if(c!=pp){            min=Math.min(min,ss[c-1]);        }    }    if(l%2==1&&ss[s-1]-pre<0){        res=-(long)1e15; return;    }    if(l%2==0&&pre>min){        res=-(long)1e15; return;    }    if(l%2==1)res+=ss[s-1]-pre;    else if(min!=2000000000){        res+=min-pre;    }    for(int c:g[s]){        if(c!=pp){            if(l%2==1){                dfs(g,c,s,ss[s-1],l+1);            }            else{                dfs(g,c,s,min,l+1);            }        }    }}static void solve() throws  IOException {            int n=int_v(read());            List<Integer>[] g=new ArrayList[n+1];            for(int i=0;i<=n;i++) g[i]=new ArrayList<>();            int[] a=int_arr();            for(int i=0;i<n-1;i++){               g[a[i]].add(i+2);               g[i+2].add(a[i]);            }            ss=int_arr();            dfs(g,1,-1,0,1);            if(res<0) out.write("-1");            else out.write(res+"\n");}   public static void main(String[] args) throws  IOException{                assign();                int t=1;//int_v(read());                while(t--!=0) solve();                out.flush();} // taking inputsstatic long pow1(long a,int p){long res=1;while(p>0){if((p&1)!=0){res=(res*a);}p >>=1;a=(a*a);}return res;} static BufferedReader s1;static BufferedWriter out;static String read() throws IOException{String line="";while(line.length()==0){line=s1.readLine();continue;}return line;}static int int_v (String s1){return Integer.parseInt(s1);}static long long_v(String s1){return Long.parseLong(s1);}static void sort(int[] a){List<Integer> l=new ArrayList<>();for(int x:a){l.add(x);}Collections.sort(l);for(int i=0;i<a.length;i++){a[i]=l.get(i);}}static int[] int_arr() throws IOException{String[] a=read().split(" ");int[] b=new int[a.length];for(int i=0;i<a.length;i++){b[i]=int_v(a[i]);}return b;}static long[] long_arr() throws IOException{String[] a=read().split(" ");long[] b=new long[a.length];for(int i=0;i<a.length;i++){b[i]=long_v(a[i]);}return b;}static void assign(){s1=new BufferedReader(new InputStreamReader(System.in));out=new BufferedWriter(new OutputStreamWriter(System.out));}//static String setpreciosion(double d,int k){BigDecimal d1 = new BigDecimal(Double.toString(d));return d1.setScale(k,RoundingMode.HALF_UP).toString();}//UP DOWN HALF_UPstatic int gcd(int a,int b){if(b==0){return a;}return gcd(b,a%b);}static long Modpow(long a,long p,long m){long res=1;while(p>0){if((p&1)!=0){res=(res*a)%m;}p >>=1;a=(a*a)%m;}return res%m;}static long Modmul(long a,long b,long m){return ((a%m)*(b%m))%m;}static long ModInv(long a,long m){return Modpow(a,m-2,m);}//static long nck(int n,int r,long m){if(r>n){return 0l;}return Modmul(f[n],ModInv(Modmul(f[n-r],f[r],m),m),m);}//static long[] f;}
