import java.util.*;import java.io.*; public class P203B {   private static void solve() {    int n = nextInt();    int[][] board = new int[n][n];     int m = nextInt();     for (int i = 0; i < m; i++) {      board[nextInt() - 1][nextInt() - 1] = i + 1;    }     int ans = -1;    for (int i = 0; i < n; i++) {      for (int j = 0; j < n; j++) {        int black = 0;        int max = 0;        for (int k = 0; k < 3; k++) {          for (int l = 0; l < 3; l++) {            if (i + k < n && j + l < n && board[i + k][j + l] != 0) {              black++;              max = Math.max(board[i + k][j + l], max);            }          }        }         if (black == 9 && (ans == -1 || ans > max)) {          ans = max;        }      }    }     System.out.println(ans);  }   private static void run() {    br = new BufferedReader(new InputStreamReader(System.in));    out = new PrintWriter(System.out);     solve();     out.close();  }   private static StringTokenizer st;  private static BufferedReader br;  private static PrintWriter out;   private static String next() {    while (st == null || !st.hasMoreElements()) {      String s;      try {        s = br.readLine();      } catch (IOException e) {        return null;      }      st = new StringTokenizer(s);    }    return st.nextToken();  }   private static int nextInt() {    return Integer.parseInt(next());  }   private static long nextLong() {    return Long.parseLong(next());  }   public static void main(String[] args) {    run();  }}
