import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.io.PrintWriter;import java.util.StringTokenizer; public class Main {	public static void main(String[] args) throws FileNotFoundException, IOException {		InputReader in = new InputReader(System.in);		PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));		TaskB solver = new TaskB();		solver.solve(1, in, out);		out.flush();		out.close(); 	}} class Circles {	Pair point;	double second; 	Circles(Pair point, double second) {		this.point = point;		this.second = second;	}} class Pair {	double first;	double second; 	Pair(double first, double second) {		this.first = first;		this.second = second;	} } // pair problem can be done using stackclass TaskB {	int MAXN = (int) 1e9 + 7; 	void solve(int testNumber, InputReader in, PrintWriter pw) {		int n = in.nextInt();		n = Math.abs(n);		int sum = 0;		for (int i = 0;; ++i) {			sum += i;			if (sum >= n && (sum % 2 == n % 2)) {				pw.println(i);				break;			}		}	} 	long pow(int n, int m) {		if (m == 0)			return 1;		long ans = pow(n, m / 2);		ans = (ans * ans);		if (m % 2 == 1) {			ans = (ans * n);		}		return ans;	} 	double pow(double n, int m) {		if (m == 0)			return 1;		double ans = pow(n, m / 2);		ans = (ans * ans);		if (m % 2 == 1) {			ans = (ans * n);		}		return ans;	}} class InputReader {	BufferedReader br;	StringTokenizer st; 	public InputReader(InputStream in) {		br = new BufferedReader(new InputStreamReader(in));		st = null;	} 	public String next() {		while (st == null || !st.hasMoreTokens()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException e) {				throw new RuntimeException(e);			}		}		return st.nextToken();	} 	public int nextInt() {		return Integer.parseInt(next());	} 	public long nextLong() {		return Long.parseLong(next());	} 	public double nextDouble() {		return Double.parseDouble(next());	}}
