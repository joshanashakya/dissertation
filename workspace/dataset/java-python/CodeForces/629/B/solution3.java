import java.util.*;import java.io.*;/** * * @author alanl */public class Main{    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));    static StringTokenizer st;    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    public static void main(String[] args) throws IOException{        int n = readInt();        edge[]arr = new edge[n];        for(int i = 0; i<n; i++){            String s = next();            int a = readInt(), b =readInt();            arr[i] = new edge(s, a, b);        }        int ans = Integer.MIN_VALUE;        for(int i = 1; i<=366; i++){            int m = 0, f = 0, cnt = 0;            for(int j = 0; j<n; j++){                if(arr[j].s<=i && i<=arr[j].e){                    cnt++;                    if(arr[j].v.equals("M"))m++;                    else f++;                }            }            if(m==f)ans = Math.max(ans, cnt);            else{                ans = Math.max(ans, Math.min(m, f)*2);            }        }        println(ans);    }    static class edge{        String v;        int s, e;        edge(String v0, int s0, int e0){            v = v0;            s = s0;            e = e0;        }    }    static String next () throws IOException {        while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(input.readLine().trim());        return st.nextToken();    }    static long readLong () throws IOException {        return Long.parseLong(next());    }    static int readInt () throws IOException {        return Integer.parseInt(next());    }    static double readDouble () throws IOException {        return Double.parseDouble(next());    }    static char readChar () throws IOException {        return next().charAt(0);    }    static String readLine () throws IOException {        return input.readLine().trim();    }    static void print(Object b) {        System.out.print(b);    }    static void println(Object b) {        System.out.println(b);    }    static void println() {        System.out.println();    }}
