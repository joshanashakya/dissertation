import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.HashMap;import java.util.Map;import java.util.Scanner; public class Codeforces {     private static final Scanner sc = new Scanner(System.in);    private static final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    private static final long MOD = (long) (1e9 + 7);    private static PrintWriter out = new PrintWriter(System.out);     static boolean isValid(int[] a,int mid,int n){        int c = 0;        for (int i=0;i<a.length;i++){            int x = mid - 1;            while (i + 1 < a.length && x > 0 && a[i] == a[i+1]){                i++;                x--;            }            if (x == 0){                c++;            }        }        return c >= n;    }    public static void solve(int T) throws IOException {        int n = sc.nextInt();        int m = sc.nextInt();        Map<Integer,Integer> mp = new HashMap<>();        int[] a = new int[m];        for (int i = 0; i < m; i++) {            a[i] = sc.nextInt();            mp.put(a[i],mp.getOrDefault(a[i],0) + 1);        }        Arrays.sort(a);        int l = 1;        int r = m / n;        int ans = 0;        while (l <= r){            int mid = l + (r - l)/2;//            System.out.println(mid);            if (isValid(a,mid,n)){                ans = mid;                l = mid + 1;            }            else{                r = mid - 1;            }        }        System.out.println(ans);    }     public static void main(String[] args) throws IOException {        int t;//        t = sc.nextInt();        t = 1;        while (t-- > 0){            solve(t);        }        System.gc();    }}       	   			  		 	 	 				  	 		
