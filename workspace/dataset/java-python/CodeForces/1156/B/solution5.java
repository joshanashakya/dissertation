import java.util.*;import java.io.*;public class Solution implements Runnable {    FastScanner sc;    PrintWriter pw;    final class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner() {            try {                br = new BufferedReader(new InputStreamReader(System.in));                st = new StringTokenizer(br.readLine());            } catch (Exception e) {                e.printStackTrace();            }        }         public long nlo() {            return Long.parseLong(next());        }         public String next() {            if (st.hasMoreTokens()) return st.nextToken();            try {                st = new StringTokenizer(br.readLine());            } catch (Exception e) {                e.printStackTrace();            }            return st.nextToken();        }         public int ni() {            return Integer.parseInt(next());        }         public String nli() {            String line = "";            if (st.hasMoreTokens()) line = st.nextToken();            else try {                return br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            while (st.hasMoreTokens()) line += " " + st.nextToken();            return line;        }         public double nd() {            return Double.parseDouble(next());        }    }    public static void main(String[] args) throws Exception    {        new Thread(null,new Solution(),"codeforces",1<<28).start();    }    public void run()    {        sc=new FastScanner();        pw=new PrintWriter(System.out);        try{        solve();}        catch(Exception e)        {            pw.println(e);        }        pw.flush();        pw.close();    }    public long gcd(long a,long b)    {        return b==0L?a:gcd(b,a%b);    }    public long ppow(long a,long b,long mod)    {        if(b==0L)        return 1L;        long tmp=1;        while(b>1L)        {            if((b&1L)==1)            tmp*=a;            a*=a;            a%=mod;            tmp%=mod;            b>>=1;        }        return (tmp*a)%mod;    }    public long pow(long a,long b)    {        if(b==0L)        return 1L;        long tmp=1;        while(b>1L)        {            if((b&1L)==1)            tmp*=a;            a*=a;            b>>=1;        }        return (tmp*a);    }    public  int gcd(int x,int y)    {        return y==0?x:gcd(y,x%y);    }       //////////////////////////////////    /////////////  LOGIC  ///////////    ////////////////////////////////        public void solve() throws Exception{      int t=sc.ni();      while(t-->0){          int[] frr=new int[26];          char[] arr=sc.next().toCharArray();          for(char ch:arr)          frr[ch-'a']++;          char[] prr=new char[4];          int p=0;          StringBuilder str=new StringBuilder();          for(int i=0;i<26;i++)          {              if(frr[i]>0){                  if(p==1&&frr[i-1]==0){                      str.append(prr[0]);                      prr[0]=(char)(i+'a');                      continue;                  }                  prr[p++]=(char)(i+'a');                  if(p==4){                      str.append(prr[2]);str.append(prr[0]);str.append(prr[3]);str.append(prr[1]);                      p=0;                  }              }          }          String ans="";          if(p==1){              ans+=String.valueOf(prr[0]);              ans+=str.toString();          }          else if(p==2){              ans+=String.valueOf((char)(prr[0]));              ans+=str.toString();              ans+=String.valueOf((char)(prr[1]));          }          else if(p==3){              char ch=prr[2];              prr[2]=prr[1];              prr[1]=ch;              ans+=String.valueOf((char)(prr[0]));              ans+=String.valueOf((char)(prr[1]));              ans+=str.toString();              ans+=String.valueOf((char)(prr[2]));          }          else          ans=str.toString();          str=new StringBuilder();          for(int i=0;i<ans.length();i++){              int x =(int)(ans.charAt(i)-'a');              while(frr[x]-->0)              str.append(ans.charAt(i));          }          if(f(str))          pw.println(str);          else          pw.println("No answer");      }    }    public boolean f(StringBuilder s){        char[] arr = s.toString().toCharArray();        for(int i=1;i<arr.length;i++){            int p = (int)(arr[i-1]-'a');            int c = (int)(arr[i]-'a');            if(((p-1) == c)||((p+1) == c))            return false;        }        return true;    }}
