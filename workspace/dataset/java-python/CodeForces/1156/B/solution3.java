import java.io.*;import java.util.*; public class UglyPairs {	public static void main(String args[]){		FScanner in = new FScanner();		PrintWriter out = new PrintWriter(System.out);		int t = in.nextInt();		while(t-->0) { 			String s=in.next();			int len=s.length();			StringBuffer se=new StringBuffer();			StringBuffer so=new StringBuffer();			StringBuffer str=new StringBuffer();            int ind1=0,ind2=0;			for(int i=0;i<len;i++)			{				char x=s.charAt(i);				int a=(int)x;				if(a %2==0)					se.append(x);				else					so.append(x);			}			String s1=se.toString();String s2=so.toString();			char odd[]=s2.toCharArray();			char even[]=s1.toCharArray();			Arrays.sort( odd);Arrays.sort( even);			char x=' ',y=' ';			if(odd.length==0||even.length==0)			{				for(int i=0;i<odd.length;i++)					out.print(odd[i]);				for(int i=0;i<even.length;i++)					out.print(even[i]);			}			else{			 x=even[even.length-1];		 y=odd[0];			int f1=0,f2=0;            			int x1=(int) x;int y1=(int)y;			if(Math.abs(( x1)-(y1))==1)				f1=1;			char z1=even[0];char z2=odd[odd.length-1];			int z=(int) z1;int z3=(int) z2;			if(Math.abs(( z)-( z3))==1)				f2=1;			if(f1==1&&f1==f2)				out.print("No answer");			else if(f1==1||f2==0)			{				for(int i=0;i<odd.length;i++)					out.print(odd[i]);				for(int i=0;i<even.length;i++)					out.print(even[i]);			}			else			{				for(int i=0;i<even.length;i++)					out.print(even[i]);				for(int i=0;i<odd.length;i++)					out.print(odd[i]);			}		}			out.println();					}		out.close();	} 	static class FScanner {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer sb = new StringTokenizer(""); 		String next(){			while(!sb.hasMoreTokens()){				try{					sb = new StringTokenizer(br.readLine());				} catch(IOException e){ }			}			return sb.nextToken();		}		String nextLine(){			try{ return br.readLine(); } 			catch(IOException e) { } return "";		} 		int nextInt(){			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		int[] readArray(int n) {			int a[] = new int[n];			for(int i=0;i<n;i++) a[i] = nextInt();			return a;		} 		float nextFloat(){		return Float.parseFloat(next());		}				double nextDouble(){		return Double.parseDouble(next());		}	}}
