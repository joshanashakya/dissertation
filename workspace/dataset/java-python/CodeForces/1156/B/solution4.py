import mathimport bisectfrom collections import defaultdictfrom collections import OrderedDictfrom itertools import combinations for _ in range(int(input())):      #n,s = map(int,input().split())    p = '0123456789'    n = list(input())    ans = ''     freq = {}        #ar = list(map(int,input().split()))     n.sort()    l = len(n)    for i in n:        if i in freq:            freq[i] += 1        else:            freq[i] = 1     f = []         for i in freq.keys():        f.append([i,freq[i]])     #print(f)    ans1 = ''     for i in range(0,len(f),2):        ans += f[i][0]*f[i][1]     #print(ans)     for j in range(1,len(f),2):        ans1 += f[j][0]*f[j][1]     ans_e = ans + ans1    ans_o = ans1 + ans     def chk(ans):        l = len(ans)         for i in range(l-1):            if ord(ans[i]) + 1 == ord(ans[i+1]) or ord(ans[i]) == ord(ans[i+1])+1 :                return False                         return True     if chk(ans_e) == True:        print(ans_e)    elif chk(ans_o) == True:        print(ans_o)    else:        print('No answer')                                                                                   """stuff you should look for    * int overflow, array bounds    * special cases (n=1?)    * do smth instead of nothing and stay organized    * WRITE STUFF DOWN    * DON'T GET STUCK ON ONE APPROACH"""    
