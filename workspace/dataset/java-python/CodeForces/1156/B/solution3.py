'''    Auther: ghoshashis545 Ashis Ghosh    College: jalpaiguri Govt Enggineering College '''from os import pathfrom io import BytesIO, IOBaseimport sysfrom heapq import heappush,heappopfrom functools import cmp_to_key as ctkfrom collections import deque,Counter,defaultdict as dd from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_rightfrom itertools import permutationsfrom datetime import datetimefrom math import ceil,sqrt,log,gcddef ii():return int(input())def si():return input().rstrip()def mi():return map(int,input().split())def li():return list(mi())abc='abcdefghijklmnopqrstuvwxyz'mod=1000000007#mod=998244353inf = float("inf")vow=['a','e','i','o','u']dx,dy=[-1,1,0,0],[0,0,1,-1] def bo(i):    return ord(i)-ord('0') file = 1def ceil(a,b):    return (a+b-1)//b    def solve():      for _ in range(ii()):                s = si()        s1 = list(set(s))         s1.sort()        # print(s1)        if len(s1)==1:            print(s)                    elif len(s1)==2:            if ord(s1[0])+1 != ord(s1[1]):                print(s)            else:                print("No answer")        elif len(s1)==3:            if ord(s1[0])+2 == ord(s1[1])+1 == ord(s1[2]):                print("No answer")            else:                s = list(s)                 if ord(s1[0])+1==ord(s1[1]):                    print(s1[0]*s.count(s1[0])+s1[2]*s.count(s1[2])+s1[1]*s.count(s1[1]))                else:                    print(s1[2]*s.count(s1[2])+s1[0]*s.count(s1[0])+s1[1]*s.count(s1[1]))        else:            s = list(s)            l = 0            r = len(s1)-1            idx = (r-l+1)//2            f = 0            res = s1[idx]*s.count(s1[idx])            s1.remove(s1[idx])            r-=1            while l <= r:                if f == 0:                    res += s1[l]*s.count(s1[l])                    l+=1                else:                    res += s1[r]*s.count(s1[r])                    r-=1                f ^= 1            print(res)                                                    if __name__ =="__main__":     if(file):         if path.exists('input.txt'):            sys.stdin=open('input.txt', 'r')            sys.stdout=open('output.txt','w')        else:            input=sys.stdin.readline    solve()
