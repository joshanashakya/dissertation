import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Scanner;import java.util.StringTokenizer;import java.util.TreeSet;  public class vk18{    public static void main(String[] stp) throws Exception    {        Scanner scan = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer(br.readLine());        int n=Integer.parseInt(st.nextToken()),m=Integer.parseInt(st.nextToken()),i,j,flat=0,floor=0;        Pair[] pair=new Pair[m];        TreeSet<Integer> ts=new TreeSet<>();        for(i=0;i<m;i++)        {            st=new StringTokenizer(br.readLine());            pair[i]=new Pair(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));        }        for(i=1;i<=100;i++)        {            boolean flag=true;            for(j=0;j<m;j++)            {                floor=(pair[j].d+i-1)/i;                if(floor != pair[j].g) { flag=false; break;}            }            if(flag) { ts.add((int)((n+i-1)/i)); if(ts.size()>1) {pw.println(-1); pw.flush(); System.exit(0); }      }        }        pw.println(ts.pollFirst());        pw.flush();    }    static class Pair implements Comparable<Pair>    {        int d,g;        public Pair(int d,int g)        {            this.d = d;            this.g = g;        }        public int compareTo(Pair p)        {            return -Integer.compare(this.d,p.d);        }    }  }
