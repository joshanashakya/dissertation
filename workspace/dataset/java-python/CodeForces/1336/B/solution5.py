#minimize (x−y)2+(y−z)2+(z−x)2 def calc(a,bb,cc):    return (a-bb)**2+(bb-cc)**2+(cc-a)**2 def findMin(x,y,z,nx,ny,nz): #x will be the pivot    possibilities=[]    for i in range(nx):        a=x[i]                b=ny        j=-1        while b>0:            while j+b<ny and y[j+b]<=a:                j+=b            b//=2                b=nz        k=-1        while b>0:            while k+b<nz and z[k+b]<=a:                k+=b            b//=2                if 0<=j:            if 0<=k:                possibilities.append(calc(a,y[j],z[k]))            if k+1<nz:                possibilities.append(calc(a,y[j],z[k+1]))        if j+1<ny:            if 0<=k:                possibilities.append(calc(a,y[j+1],z[k]))            if k+1<nz:                possibilities.append(calc(a,y[j+1],z[k+1]))        return min(possibilities) t=int(input())for _ in range(t):    nr,ng,nb=[int(x) for x in input().split()]    r=[int(x) for x in input().split()]    g=[int(x) for x in input().split()]    b=[int(x) for x in input().split()]        r.sort()    g.sort()    b.sort()        ans=min(findMin(r,g,b,nr,ng,nb),            findMin(g,r,b,ng,nr,nb),            findMin(b,r,g,nb,nr,ng))    print(ans)
