from sys import stdin,stdoutfrom math import gcd,sqrt,factorial,pi,inffrom collections import deque,defaultdictinput=stdin.readlineR=lambda:map(int,input().split())I=lambda:int(input())S=lambda:input().rstrip('\n')L=lambda:list(R())P=lambda x:stdout.write(str(x)+'\n')lcm=lambda x,y:(x*y)//gcd(x,y)hg=lambda x,y:((y+x-1)//x)*xpw=lambda x:1 if x==1 else 1+pw(x//2)chk=lambda x:chk(x//2) if not x%2 else True if x==1 else Falsesm=lambda x:(x**2+x)//2N=10**9+7 def lower(a,r,x):	l=0	r-=1	ans=-1	while l<=r:		m=(l+r)//2		if a[m]<=x:			l=m+1			ans=a[m]		else:			r=m-1	return ans def upper(a,r,x):	r-=1	l=0	ans=-1	while l<=r:		m=(l+r)//2		if a[m]>=x:			r=m-1			ans=a[m]		else:			l=m+1	return ans def solve(a,b,c,x,y,z):	ans=inf	for i in a:		j=lower(b,y,i)		k=upper(c,z,i)		if j>-1 and k>-1:ans=min(ans,(i-j)**2+(i-k)**2+(k-j)**2)	return ans for _ in range(I()):	x,y,z=R()	r=sorted(R()) #x	g=sorted(R()) #y	b=sorted(R()) #z	print(min(solve(r,g,b,x,y,z),solve(r,b,g,x,z,y),solve(b,r,g,z,x,y),solve(b,g,r,z,y,x),solve(g,r,b,y,x,z),solve(g,b,r,y,z,x)))
