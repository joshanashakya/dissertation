import heapqimport sys input = sys.stdin.readline  n, k = map(int, input().split())adj = [[] for _ in range(n)]for _ in range(n - 1):    u, v = map(int, input().split())    u -= 1    v -= 1    adj[u].append(v)    adj[v].append(u)size = [1] * n s = []s.append((0, -1, True))while s:    u, p, open = s.pop()    if open:        s.append((u, p, False))        for v in adj[u]:            if v != p:                s.append((v, u, True))    else:        for v in adj[u]:            if v != p:                size[u] += size[v] q = []heapq.heappush(q, (-(size[0] - 1), 0, -1, 0))res = 0for _ in range(n - k):    if not q:        break    d, u, p, a = heapq.heappop(q)    res += -d    for v in adj[u]:        if v != p:            a2 = a + 1            heapq.heappush(q, (-(size[v] - a2 - 1), v, u, a2))print(res)
