import sysimport threadingfrom collections import defaultdict n,k=list(map(int,input().split()))adj=defaultdict(list)for _ in range(n-1):    a,b=list(map(int,input().split()))    adj[a].append(b)    adj[b].append(a)li=[]  def fun(node,par,ht):    size=1    for ch in adj[node]:        if ch != par:              size+=fun(ch,node,ht+1)    li.append(ht-size)    return size def main():    fun(1,-1,1)    li.sort(reverse=True)    print(sum(li[:k]))if __name__=="__main__":    sys.setrecursionlimit(10**6)    threading.stack_size(10**8)    t = threading.Thread(target=main)    t.start()    t.join() 
