import java.io.*;import java.util.*; public class p39{    static class FastReader{        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }     static int[] length(long num){        int n = 0;        long temp = num;        while(num>0){            n++;            num/=10L;        }        int[] res = new int[n];        while(temp>0){            res[--n] = (int)(temp%10L);            temp/=10;        }        return res;    }     public static void main(String[] args){        FastReader sc = new FastReader();        long l = sc.nextLong();        long r = sc.nextLong();        long res = 0;        int[] arr1 = length(l), arr2 = length(r);        int lenl = arr1.length, lenr = arr2.length;         if(lenl != lenr){            for(int k=lenl+1;k<lenr;k++){                res += 9L*(long)Math.pow(10, k-2);            }             // System.out.println(res);             if(lenl==1){                res+=(10-l);            }else{                for(int i=0;i<lenl-1;i++){                    res += (9-arr1[i])*(long)Math.pow(10, lenl-2-i);                }                res+=(arr1[0]>=arr1[lenl-1]?1:0);            }             // System.out.println(res);             if(lenr==1){                res += r;            }else{                for(int i=0;i<lenr-1;i++){                    res += ((long)(i==0?arr2[i]-1:arr2[i])) * (long)Math.pow(10, lenr-2-i);                }                res+=(arr2[0]<=arr2[lenr-1]?1:0);            }             // System.out.println(res);        }else{            if(lenl==1){                res+=(r-l+1);            }else{                res += 9L*(long)Math.pow(10, lenl-2);                // System.out.println(res);                for(int i=0;i<lenl-1;i++){                    res -= ((long)(i==0?arr1[i]-1:arr1[i])) * (long)Math.pow(10, lenl-2-i);                }                res -= (arr1[0]<arr1[lenl-1]?1:0);                 // System.out.println(res);                for(int i=0;i<lenr-1;i++){                    res -= (9-arr2[i])*(long)Math.pow(10, lenr-2-i);                }                res -= (arr2[0]>arr2[lenr-1]?1:0);                // System.out.println(res);            }        }         System.out.println(res);    }}
