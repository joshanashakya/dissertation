import java.io.*;import java.util.*; public class p40{     static class Pair{        int a,b;        Pair(int a1, int a2){            a = a1;            b = a2;        }    }     static class FastReader{        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }     public static void main(String[] args){        FastReader sc = new FastReader();        Map<Integer,Pair> map = new HashMap<>();        int n = sc.nextInt();        for(int i=0;i<n;i++){            int a = sc.nextInt();            Pair pair = map.getOrDefault(a, new Pair(0,0));            pair.a += 1;            pair.b += 1;            map.put(a, pair);             int b = sc.nextInt();            if(a==b)                continue;            a = b;            pair = map.getOrDefault(a, new Pair(0,0));            pair.a += 1;            map.put(a, pair);        }        int cnt = (n+1)/2;        int ans = Integer.MAX_VALUE;        for(Map.Entry<Integer, Pair> cur : map.entrySet()){            Pair p = cur.getValue();            if(p.a>=cnt){                ans = Math.min(ans, (cnt-p.b));            }        }         ans = Math.max(0, ans);         System.out.println(ans==Integer.MAX_VALUE?-1:ans);    }}
