import java.io.BufferedReader; import java.io.*;import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.*;import java.math.*;public class Main {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()        {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()        {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();            }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }    public static void main(String args[])    {        Scanner sc=new Scanner(System.in);        PrintWriter pw=new PrintWriter(System.out);        int t=1;//sc.nextInt();        while(t-->0)        {            int n=sc.nextInt();            String a=sc.next(),b=sc.next(),c=sc.next();            Map<Character,Integer> h1=new HashMap<>(),h2=new HashMap<>(),h3=new HashMap<>();            for(char ch:a.toCharArray())            {                if(!h1.containsKey(ch))                h1.put(ch,1);                else h1.put(ch,h1.get(ch)+1);            }            for(char ch:b.toCharArray())            {                if(!h2.containsKey(ch))                h2.put(ch,1);                else h2.put(ch,h2.get(ch)+1);            }            for(char ch:c.toCharArray())            {                if(!h3.containsKey(ch))                h3.put(ch,1);                else h3.put(ch,h3.get(ch)+1);            }            int m1=Collections.max(h1.values()),m2=Collections.max(h2.values()),m3=Collections.max(h3.values());            int max1=Math.min(m1+n,a.length());            int max2=Math.min(m2+n,b.length());            int max3=Math.min(m3+n,c.length());            if(n==1 && m1==a.length()) max1--;            if(n==1 && m2==b.length()) max2--;            if(n==1 && m3==c.length()) max3--;            if(max1>max2 && max1>max3) pw.println("Kuro");            else if(max2>max1 && max2>max3) pw.println("Shiro");            else if(max3>max1 && max3>max2) pw.println("Katie");            else pw.println("Draw");        }           pw.close();    } }  
