 import java.util.Arrays;import java.util.Scanner; import java.util.Hashtable;import java.util.List;import java.util.Map; public class Queue_B {     public static void main(String[] args) {         Scanner console = new Scanner(System.in);         int n = console.nextInt();        int[] pArr = new int[n];         int secN = 1, lsecN = 0, beforeN = 0, lbeforeN = 0, i, j;        Hashtable<Integer, Integer> hashtableF = new Hashtable<>();        Hashtable<Integer, Integer> hashtableB = new Hashtable<>();         while (n-- > 0) {            i = console.nextInt();            j = console.nextInt();            hashtableF.put(i, j);            hashtableB.put(j, i);        }        for (Map.Entry<Integer, Integer> entry : hashtableF.entrySet()) {            if (!hashtableB.containsKey(entry.getKey())) {                lbeforeN = entry.getKey();                pArr[lsecN] = lbeforeN;                lsecN += 2;                break;            }        }        for (int x = 0; x <= pArr.length - 1; x += 2) {            if (lsecN <= pArr.length - 1) {                pArr[lsecN] = hashtableF.get(lbeforeN);                lbeforeN = pArr[lsecN];            }            if (secN <= pArr.length - 1) {                pArr[secN] = hashtableF.get(beforeN);                beforeN = pArr[secN];            }             secN += 2;            lsecN += 2;            System.out.print(pArr[x]);            if (x + 1 <= pArr.length - 1) {                System.out.print(" " + pArr[x + 1]);            }            if (x != pArr.length - 1) {                System.out.print(" ");            }        }    }}
