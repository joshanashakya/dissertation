import java.util.*; public class VisTrain {     public static Scanner in = new Scanner(System.in);     public static int solve(int prev, int n) {        int min = Integer.MAX_VALUE;         char[] a = String.valueOf(n).toCharArray();        for (int i = 1; i <= 2; i++) {            a[0] = String.valueOf(i + "").charAt(0);            StringBuilder build = new StringBuilder();            build.append(a[0]);            build.append(a[1]);            build.append(a[2]);            build.append(a[3]);            int cur = Integer.valueOf(build.toString());             if (prev != -1) {                if (cur >= 1000 && cur <= 2011 && cur >= prev) {                     min = Math.min(min, cur);                }            } else {                if (cur >= 1000 && cur <= 2011) {                     min = Math.min(min, cur);                }            }        }        a = String.valueOf(n).toCharArray();        for (int i = 0; i <= 9; i++) {            a[1] = String.valueOf(i + "").charAt(0);            StringBuilder build = new StringBuilder();            build.append(a[0]);            build.append(a[1]);            build.append(a[2]);            build.append(a[3]);            int cur = Integer.valueOf(build.toString());            if (prev != -1) {                if (cur >= 1000 && cur <= 2011 && cur >= prev) {                     min = Math.min(min, cur);                }            } else {                if (cur >= 1000 && cur <= 2011) {                     min = Math.min(min, cur);                }            }        }        a = String.valueOf(n).toCharArray();        for (int i = 0; i <= 9; i++) {            a[2] = String.valueOf(i + "").charAt(0);            StringBuilder build = new StringBuilder();            build.append(a[0]);            build.append(a[1]);            build.append(a[2]);            build.append(a[3]);            int cur = Integer.valueOf(build.toString());             if (prev != -1) {                if (cur >= 1000 && cur <= 2011 && cur >= prev) {                     min = Math.min(min, cur);                }            } else {                if (cur >= 1000 && cur <= 2011) {                     min = Math.min(min, cur);                }            }        }        a = String.valueOf(n).toCharArray();        for (int i = 0; i <= 9; i++) {            a[3] = String.valueOf(i + "").charAt(0);            StringBuilder build = new StringBuilder();            build.append(a[0]);            build.append(a[1]);            build.append(a[2]);            build.append(a[3]);            int cur = Integer.valueOf(build.toString());             if (prev != -1) {                if (cur >= 1000 && cur <= 2011 && cur >= prev) {                     min = Math.min(min, cur);                }            } else {                if (cur >= 1000 && cur <= 2011) {                     min = Math.min(min, cur);                }            }        }        return min;    }     public static void main(String[] args) {        int n = in.nextInt();        int[] z = new int[n];        for (int i = 0; i < n; i++) {            z[i] = in.nextInt();        }        z[0] = solve(-1, z[0]);        boolean ans = true;        for (int i = 1; i < n; i++) {            z[i] = solve(z[i - 1], z[i]);            if (z[i] == Integer.MAX_VALUE) {                ans = false;                break;            }        }        if (ans) {            for (int val : z) {                System.out.println(val);            }        } else {            System.out.println("No solution");        }    } }  	  		     		 	 		    		 						
