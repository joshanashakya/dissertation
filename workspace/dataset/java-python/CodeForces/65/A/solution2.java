import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        a65 solver = new a65();        solver.solve(1, in, out);        out.close();    }     static class a65 {        public void solve(int testNumber, InputReader in, PrintWriter out) {            int a = in.nextInt();            int b = in.nextInt();            int c = in.nextInt();            int d = in.nextInt();            int e = in.nextInt();            int f = in.nextInt();            int next = b * d * f;            int prev = a * c * e;            if (c == 0 && d > 0) {                out.println("Ron");                return;            }            if (a == 0 && b > 0 && d > 0) {                out.println("Ron");                return;            }            if (prev >= next) {                out.println("Hermione");                return;            }            out.println("Ron");        }     }     static class InputReader {        private BufferedReader reader;        private StringTokenizer stt;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream));        }         public String nextLine() {            try {                return reader.readLine();            } catch (IOException e) {                return null;            }        }         public String next() {            while (stt == null || !stt.hasMoreTokens()) {                stt = new StringTokenizer(nextLine());            }            return stt.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
