from heapq import *from sys import stdin, stdoutinput = stdin.readlinedef BinSearch(li, x, len):    i = 1    j = len    while i < j:        m = int((i+j)/2)        if x > li[m]:            i = m+1        else:            j = m                if li[j] == x:        return j    else:        return None            n, m = map(int, input().split()) dist = [10**20 for i in range(n+1)]G = [[] for i in range(n+1)]T = [[None]] for i in range(m):    u, v, w = map(int, input().split())       G[u].append((v, w))    G[v].append((u, w))    for i in range(n):    x = list(map(int, input().split()))    T.append(x)    unused = [(0, 1)] parent = [-1 for i in range(n+1)]dist[1] = 0min_dist = 0nex = 1 while unused:    t, nex = heappop(unused)        if T[nex][0] != 0:        j = BinSearch(T[nex], t, T[nex][0])        if j != None:            while j <= T[nex][0] and t == T[nex][j]:                t += 1                j += 1            for edge in G[nex]:        to = edge[0]        wt = edge[1]                if t + wt < dist[to]:            dist[to] = t + wt            #parent[to] = nex            heappush(unused, (dist[to], to))             if dist[n] == 10**20:    print(-1)    else:    print(dist[n])
