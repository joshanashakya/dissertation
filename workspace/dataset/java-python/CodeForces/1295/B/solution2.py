import sys,math,itertoolsfrom collections import Counter,deque,defaultdictfrom bisect import bisect_left,bisect_right from heapq import heappop,heappush,heapify, nlargestmod = 10**9+7INF = float('inf')def inp(): return int(sys.stdin.readline())def inpl(): return list(map(int, sys.stdin.readline().split())) for _ in range(inp()):    n,X = inpl()    s = list(sys.stdin.readline()); s = s[:n]    cnt = [-1] * n    now = 0    for i,x in enumerate(s):        if x == '0': now += 1        else: now -= 1        cnt[i] = now    las = now    if las == 0:        if X == 0 or cnt.count(X): print(-1)        else: print(0)        continue    res = 0    for i,x in enumerate(cnt):        now = X-x        if now*las < 0: continue        if abs(now)%abs(las)==0: res += 1    if X == 0: res += 1    print(res)
