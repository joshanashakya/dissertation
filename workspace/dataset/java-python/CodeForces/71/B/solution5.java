import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.StringTokenizer; public class Main {    public static void main(String[] args) {        FastReader in = new FastReader();        PrintWriter out = new PrintWriter(System.out);        int n = in.nextInt();        int k = in.nextInt();        int t = in.nextInt();        int s = n * k * t / 100;               int r = s % k;               int p = s / k;        StringBuilder sb = new StringBuilder();        for (int i = 0; i < p; i++) {            sb.append(k).append(' ');        }        if (p < n) {            sb.append(r).append(' ');        }        for (int i = p + 1; i < n; i++) {            sb.append(0).append(' ');        }        out.print(sb);        out.close();     }     public static long factorial(int m) {        if (m == 0)            return 1;        return (m * factorial(m - 1));    }     public static long GCD(long a, long b) {        if (b == 0)            return a;        return GCD(b, a % b);    }} class FastReader {     private BufferedReader br;    private StringTokenizer st;     public FastReader() {        InputStreamReader inr = new InputStreamReader(System.in);        br = new BufferedReader(inr);     }     String next() {        while (st == null || !st.hasMoreElements()) {            try {                st = new StringTokenizer(br.readLine());            } catch (IOException e) {                e.printStackTrace();            }        }        return st.nextToken();    }     int nextInt() {        return Integer.parseInt(next());    }     double nextDouble() {        return Double.parseDouble(next());     }     long nextLong() {        return Long.parseLong(next());    }     String nextLine() {        String str = "";        try {            str = br.readLine();        } catch (IOException e) {            e.printStackTrace();        }        return str;    } } 
