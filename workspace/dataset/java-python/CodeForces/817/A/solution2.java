import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class A187{    static int mod=(int)(1e9+7);   static long MOD=(long)(1e9+7);   static FastReader in=new FastReader();   static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));            public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {                        int x1=in.nextInt();            int y1=in.nextInt();            int x2=in.nextInt();            int y2=in.nextInt();           			int m1=Math.abs(x2-x1);			int m2=Math.abs(y2-y1);						int x=in.nextInt();			int y=in.nextInt();						if(m1%x!=0||m2%y!=0)			{				pr.println("NO");				continue;			}						int cx=m1/x;			int cy=m2/y;						if(cx%2==cy%2)							pr.println("YES");			else pr.println("NO");			        }        pr.flush();    }  	static int gcd(int a, int b)	{		if(a==0)return b;				if(b==0)return a;				return gcd(b%a,a);	}             static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }  
