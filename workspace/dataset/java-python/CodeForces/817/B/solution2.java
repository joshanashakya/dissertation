import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import java.math.BigDecimal;import java.math.BigInteger;import java.nio.ByteBuffer;import java.util.ArrayDeque;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.Comparator;import java.util.HashMap;import java.util.HashSet;import java.util.LinkedList;import java.util.List;import java.util.Map;import java.util.PriorityQueue;import java.util.Stack; public class Main {   public static void main(String[] args) throws IOException {     BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));    int n = Integer.parseInt(br.readLine());    String[] in = br.readLine().split(" ");    Integer[] a = new Integer[n];    HashMap<Integer, Integer> H = new HashMap<>();    for (int i = 0; i < n; i++) {      a[i] = Integer.parseInt(in[i]);      if (!H.containsKey(a[i])) H.put(a[i], 1);      else H.put(a[i], 1 + H.get(a[i]));    }    Arrays.sort(a);    long val = 0;    if (H.get(a[0]) >= 3) {      val = H.get(a[0]);      val = 1l * val * (val - 1) * (val - 2);      val /= 6;    } else if (H.get(a[0]) >= 2) {      val = H.get(a[0]);      val = 1l * val * (val - 1);      val = 1l * val * H.get(a[2]);      val /= 2;    } else if (H.get(a[1]) >= 2) {      val = H.get(a[1]);      val = 1l * val * (val - 1);      val = 1l * val * H.get(a[0]);      val /= 2;    } else {      val = H.get(a[0]);      val = 1l * val * H.get(a[1]);      val = 1l * val * H.get(a[2]);    }    bw.append(val + "\n");    bw.close();  }}
