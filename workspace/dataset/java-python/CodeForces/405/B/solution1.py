class Stack():	def __init__(self):		self.stack = []		self.len = 0 	def top(self):		assert not self.empty()		return self.stack[self.len - 1] 	def pop(self):		assert not self.empty()		self.len -= 1		return self.stack.pop() 	def push(self, x):		self.len += 1		self.stack.append(x) 	def empty(self):		return self.len == 0 def calc(n, pos):	st = Stack()	last_pos = -1	ans = 0	for i in range(n):		if pos[i] == "R":			if st.empty():				ans += i - last_pos - 1			st.push(i)		elif pos[i] == "L":			if st.empty():				last_pos = i			else:				left_R = st.pop();				ans += (i - left_R + 1) % 2				last_pos = i	if st.empty():		ans += n - last_pos - 1	return ans  n=int(input())pos=str(input())print(calc(n, pos)) 	  				 	  		  		 			 	 		  	
