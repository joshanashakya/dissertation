// 25-Feb-2021import java.util.*;import java.io.*; public class PIN {	static class FastReader { 		BufferedReader br;		StringTokenizer st; 		private FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		int[] nextIntArray(int n) {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = nextInt();			return a;		} 		int[] nextIntArrayOne(int n) {			int[] a = new int[n + 1];			for (int i = 1; i < n + 1; i++)				a[i] = nextInt();			return a;		} 		long[] nextLongArray(int n) {			long[] a = new long[n];			for (int i = 0; i < n; i++)				a[i] = nextLong();			return a;		} 		long[] nextLongArrayOne(int n) {			long[] a = new long[n + 1];			for (int i = 1; i < n + 1; i++)				a[i] = nextLong();			return a;		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	public static void main(String[] args) {		FastReader s = new FastReader();		StringBuilder str = new StringBuilder(); 		int t = s.nextInt(); 		while (t-- > 0) {			int n = s.nextInt();			int arr[] = s.nextIntArray(n);			Set<Integer> set = new HashSet<>();			int change = 0;			StringBuilder sub = new StringBuilder();						for(int p : arr) {				if(!set.contains(p)) {					set.add(p);					if(p < 10) {						sub.append("000"+p+"\n");					}					else if(p < 100) {						sub.append("00"+p+"\n");					}else if(p < 1000) {						sub.append("0"+p+"\n");					}else						sub.append(p + "\n");				}else {					for(int i = 0; i < 10; i++) {						int num = (p / 10) * 10 + i;						if(!set.contains(num) && arrDoesntContain(num,arr)) {							set.add(num);							change++;							if(num < 10) {								sub.append("000"+num+"\n");							}							else if(num < 100) {								sub.append("00"+num+"\n");							}else if(num < 1000) {								sub.append("0"+num+"\n");							}else								sub.append(num + "\n");							break;						}					}				}			}						str.append(change+"\n");			str.append(sub+"\n");								}		System.out.println(str);	} 	private static boolean arrDoesntContain(int num, int[] arr) {		for(int p  : arr) {			if(p == num) {				return false;			}		}		return true;	} }
