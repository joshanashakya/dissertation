import java.lang.reflect.Array;import java.util.*;import java.io.*; public class Main {    static int n=10,m=10;    static char[][]s;    static boolean check(){        boolean ans=false;        for (int i =0;i<n;i++){            for (int j =0;j<m;j++){                if (s[i][j]=='X'){                    ans|=getrow(i,j);                    ans|=getcol(i,j);                    ans|=getdiag(i,j);                }            }        }        return ans;    }    static boolean getrow(int i,int j){        int cur=0;        while (j<m&&s[i][j]=='X'){            cur++;            j++;        }        return cur>=5;    }    static boolean getcol(int i,int j){        int cur=0;        while (i<n&&s[i][j]=='X'){            cur++;            i++;        }        return cur>=5;    }    static boolean getdiag(int i,int j){        int cur=0;        int i2=i;        int j2=j;        int cur2=0;        while (j<m&&i<n&&s[i][j]=='X'){            cur++;            j++;            i++;        }        i=i2;        j=j2;        while (j>=0&&i<n&&s[i][j]=='X'){            cur2++;            j--;            i++;        }        return cur>=5||cur2>=5;    }    public static void main(String[] args) throws IOException {        Scanner sc = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        s= new char[10][10];        for (int i =0;i<n;i++)            s[i]=sc.next().toCharArray();        boolean ans=false;        for (int i =0;i<n;i++){            for (int j =0;j<m;j++){                if(s[i][j]=='.'){                    s[i][j]='X';                    ans|=check();                    s[i][j]='.';                }            }        }        pw.println(ans?"YES":"NO");        pw.close();     }       static class Scanner {        BufferedReader br;        StringTokenizer st;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int nextInt() throws IOException {            return Integer.parseInt(next());        }         public long nextLong() throws IOException {            return Long.parseLong(next());        }         public double nextDouble() throws IOException {            return Double.parseDouble(next());        }         public int[] nextIntArr(int n) throws IOException {            int[] arr = new int[n];            for (int i = 0; i < n; i++) {                arr[i] = Integer.parseInt(next());            }            return arr;        }     } }
