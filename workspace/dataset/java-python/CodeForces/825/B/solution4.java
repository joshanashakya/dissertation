import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.FileReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BFiveInARow solver = new BFiveInARow();        solver.solve(1, in, out);        out.close();    }     static class BFiveInARow {        char[][] arr;         public void solve(int testNumber, Scanner sc, PrintWriter pw) {            arr = new char[10][10];            for (int i = 0; i < 10; i++)                arr[i] = sc.next().toCharArray();            for (int i = 0; i < 10; i++)                for (int j = 0; j < 10; j++) {                    if (arr[i][j] == '.') {                        arr[i][j] = 'X';                        if (check() || checkDia()) {                            pw.println("YES");                            return;                        }                        arr[i][j] = '.';                    }                }            pw.println("NO");        }         private boolean checkDia() {            boolean f = false;            for (int i = 0; i < 10; i++)                for (int j = 0; j < 10; j++) {                    if (arr[i][j] == 'X') {                        int c = 0;                        for (int k = 0; k < 5 && k + j < 10 && k + i < 10; k++) {                            if (arr[i + k][j + k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && j - k >= 0 && i + k < 10; k++) {                            if (arr[i + k][j - k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && i - k >= 0 && j - k > 10; k++) {                            if (arr[i - k][j - k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && i - k < 10 && j + k > 10; k++) {                            if (arr[i - k][j + k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                    }                }            return f;        }         private boolean check() {            boolean f = false;            for (int i = 0; i < 10; i++)                for (int j = 0; j < 10; j++) {                    if (arr[i][j] == 'X') {                        int c = 0;                        for (int k = 0; k < 5 && k + j < 10; k++) {                            if (arr[i][j + k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && j - k >= 0; k++) {                            if (arr[i][j - k] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && i - k >= 0; k++) {                            if (arr[i - k][j] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                        c = 0;                        for (int k = 0; k < 5 && i + k < 10; k++) {                            if (arr[i + k][j] != 'X') {                                break;                            }                            c++;                        }                        f |= c == 5;                    }                }            return f;        }     }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return st.nextToken();        }     }} 
