def bfs(node,target):     visited[node]=1    queue=[node]     while queue:         a=queue.pop(0)         for j in adj[a]:            if visited[j]==0:                queue.append(j)                visited[j]=1                if j==target:                    return 1    return 0 import sys input = sys.stdin.readline  n= int(input()) t = list(map(int,input().split())) s=  list(map(int,input().split()))   adj=[set() for i in range(n+1)]  for j in range(1,n+1):     u=s[j-1]     a=(j-u)    b=j+u     if 1<=a<=n:        adj[j].add(a)        adj[a].add(j)     if 1<=b<=n:        adj[j].add(b)        adj[b].add(j)  h=0for i in range(n):     visited=[0]*(n+1)     if i+1==t[i]:        continue    else:        a=bfs(i+1,t[i])        if a==0:        print('NO')        h+=1        break if h==0:    print('YES')  
