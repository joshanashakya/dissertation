n,m = map(int,input().split()) s = []for i in range(n):    a = map(int,input().split())    a = list(a)    s.append(a)s_chet = []for i in range(1,n-1,2):            #Проход  по  четным  гвоздям    q = abs((s[i][0]-s[i-1][0])+(s[i][1]-s[i-1][1])) + abs((s[i][0]-s[i+1][0])+(s[i][1]-s[i+1][1]))    s_chet.append((i + 1, q))q = abs((s[-1][0]-s[-2][0])+(s[-1][1]-s[-2][1])) + abs((s[-1][0]-s[0][0])+(s[-1][1]-s[0][1]))s_chet.append((n, q)) s_nechet = []for i in range(2,n-1,2):            #Проход  по  нечетным  гвоздям    q = abs((s[i][0]-s[i-1][0])+(s[i][1]-s[i-1][1])) + abs((s[i][0]-s[i+1][0])+(s[i][1]-s[i+1][1]))    s_nechet.append((i + 1, q))q = abs((s[-1][0]-s[0][0])+(s[-1][1]-s[0][1])) + abs((s[1][0]-s[0][0])+(s[1][1]-s[0][1]))s_nechet.append((1, q)) ss = map(int, input().split())ss = [[i + 1, ss_i] for i, ss_i in enumerate(ss)] s_chet.sort(key=lambda x: x[1])s_nechet.sort(key=lambda x: x[1])ss.sort(key=lambda x: x[1]) prut_chet = [-1] * nchet = Truej = 0for i in range(len(s_chet)):    while j < len(ss) and ss[j][1] < s_chet[i][1]:        j += 1    if j == len(ss) or ss[j][1] > s_chet[i][1]:        chet = False        break    if s_chet[i][1] == ss[j][1]:        prut_chet[s_chet[i][0] - 1] = ss[j][0]        j += 1        continueif chet:    print('YES')    print(" ".join(map(str,prut_chet))) else:    prut_nechet = [-1] * n    nechet = True    j = 0    for i in range(len(s_nechet)):        while j < len(ss) and ss[j][1] < s_nechet[i][1]:            j += 1        if j == len(ss) or ss[j][1] > s_nechet[i][1]:            nechet = False            break        if s_nechet[i][1] == ss[j][1]:            prut_nechet[s_nechet[i][0] - 1] = ss[j][0]            j += 1            continue    if nechet:        print('YES')        print(" ".join(map(str, prut_nechet)))    else:        print('NO')
