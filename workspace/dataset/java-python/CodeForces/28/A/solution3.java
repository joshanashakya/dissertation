import java.util.ArrayList;import java.util.Scanner;Â public class Main {	static boolean[] book;	static int[] res_set;	static int n,m;	static double[] rod;	static int num;	public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		n = sc.nextInt();		m = sc.nextInt();		int res = 0;		res_set = new int[n + 1];		v[] al = new v[n + 1];		rod = new double[m + 1];		book = new boolean[m+1];		for(int i = 1; i <= n; i ++) {			al[i] = new v(0,0);			al[i].x = sc.nextDouble();			al[i].y = sc.nextDouble();		}		for(int i = 1; i <= m; i ++) {			rod[i] = sc.nextDouble();		}		for(int i = 1; i <= 2; i ++) {			num = i;			int flag = 1;			for(int k = 0; k <= n; k ++) {				res_set[k] = -1;			}			for(int k = 0; k <= m; k ++) {				book[k] = false;			}			for(int j = i; j <= n; j += 2) {								int pre = j - 1;				if(pre < 1)					pre = n;				int last = j + 1;				if(last > n)					last = 1;				double dis_pre = Math.sqrt( (Math.pow(al[j].x - al[pre].x, 2) + Math.pow(al[j].y - al[pre].y, 2)) );				double dis_last = Math.sqrt( (Math.pow(al[j].x - al[last].x, 2) + Math.pow(al[j].y - al[last].y, 2)) );				double dis = dis_pre + dis_last;				if (find_rod(dis,num) == false) {					flag = 0;					break;				}			}			if(flag == 1) {				res ++;				break;			}		}		if(res == 0)			System.out.println("NO");		else {			System.out.println("YES");			for(int i = 1; i <= n; i ++) {				System.out.print(res_set[i] + " ");			}		}			}	public static boolean find_rod(double dis,int number) {		for(int i = 1; i <= m; i ++) {			if(book[i] == false) {				if(dis == rod[i]) {					book[i] = true;					res_set[number] = i;					num += 2;					return true;				}			}		}		return false;	}}class v{	public double x;	public double y;	v(double x,double y){		this.x = x;		this.y = y;	}}
