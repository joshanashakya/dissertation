import sys      def solve():    n = int(sys.stdin.readline())    g = [set() for _ in range(n+1)]    count = 0    for _ in range (n-1):        a, b = map(int, sys.stdin.readline().split(' '))        g[a].add(b)        g[b].add(a)    red, blue = set(), set()    nodes = [1]    #we can do this because it's a tree    while nodes:        node = nodes.pop()        if (node not in red and node not in blue) or node in red:            red.add(node)            for other_node in g[node]:                if other_node not in blue:                    blue.add(other_node)                    nodes.append(other_node)        else:            for other_node in g[node]:                if other_node not in red :                    red.add(other_node)                    nodes.append(other_node)    for red_node in red:        count += (len(blue)) - len(g[red_node])    sys.stdout.write(str(count))      if __name__ == "__main__":    solve()
