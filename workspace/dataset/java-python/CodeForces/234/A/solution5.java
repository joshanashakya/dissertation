import java.io.*;import java.math.*;import java.security.*;import java.text.*;import java.util.*;import java.util.concurrent.*;import java.util.regex.*;import java.util.Arrays;import java.util.ArrayList;import java.lang.Math;    public class project {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }                   String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }          static int binarySearch(int a[],int k,int l,int h){                while(l<=h){         int mid = (l+h)/2;         if(a[mid]==k) return mid;         else if(a[mid]>k) h=mid-1;         else if(a[mid]<k) l =mid+1;    }                return -1;    }       static String reverse(String input)      {         char[] a = input.toCharArray();         int l, r = 0;         r = a.length - 1;           for (l = 0; l < r; l++, r--)         {             // Swap values of l and r              char temp = a[l];             a[l] = a[r];             a[r] = temp;         }         return String.valueOf(a);     }         static int gcd(int a, int b)     {         // Everything divides 0          if (a == 0)           return b;         if (b == 0)           return a;                       if (a == b)             return a;                       if (a > b)             return gcd(a-b, b);         return gcd(a, b-a);     }                            public static void main(String[] args) throws Exception     {           Scanner sc = new Scanner(new File("input.txt"));        PrintWriter out = new PrintWriter(new File("output.txt"));        // OutputStream outputStream = System.out;        // PrintWriter w = new PrintWriter(outputStream);               int i,j=0;                int n = sc.nextInt();	sc.nextLine();        String s = sc.nextLine();        int a[] = new int[n+1];         for(i=0;i<n;i++){            if(s.charAt(i) =='R') a[i+1]=2;            else a[i+1]=1;        }        j=n/2;        for(i=1;i<=j;i++){              if(a[i]==2 && a[j+i]==1)                    out.println((j+i)+" "+i);             else                    out.println(i+" "+(j+i));        }        out.close();    }        }
