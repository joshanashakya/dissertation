import java.io.BufferedReader;import java.io.File;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.math.BigInteger;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.HashMap;import java.util.HashSet;import java.util.List;import java.util.PriorityQueue;import java.util.Random;import java.util.Scanner;import java.util.StringTokenizer;  public class Alchemy {		static boolean submit=true;	static final String filename="input";	static class Pair implements Comparable<Pair> {		int x, y; 		Pair(int x, int y) {			this.x = x;			this.y = y;		} 		@Override		public int compareTo(Pair o) {			return Integer.compare(this.x, o.x);		} 	}		private static void solve(Scanner sc, PrintWriter out) {	    int n = sc.nextInt(),k = sc.nextInt();	    ArrayList<Pair> lis = new ArrayList<Alchemy.Pair>();	    for(int i=0; i<n; i++) {	    	int a = sc.nextInt();	    	lis.add(new Pair(a, i+1));	    }	    Collections.sort(lis);	    int min = -1;	    ArrayList<Integer> res = new ArrayList<Integer>();	    for(int i=n-k; i<n; i++) {	    	if(i == n-k)min = lis.get(i).x;	    	res.add(lis.get(i).y);	    }	    	    out.println(min);	    Collections.sort(res);	    for(int e : res)out.print(e+" ");	    out.println();		out.close();	} 	public static void main(String[] args) throws FileNotFoundException {		if (submit) {			solve(new Scanner(new File(filename+".txt")), new PrintWriter(new File("output"+".txt")));		}		else {			solve(new Scanner(System.in), new PrintWriter(System.out));		}	}  		} 
