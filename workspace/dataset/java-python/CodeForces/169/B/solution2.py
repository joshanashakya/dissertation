import math,sys#from itertools import permutations, combinations;import heapq,random;from collections import defaultdict,dequeimport bisect as bidef yes():print('YES')def no():print('NO')#sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');def I():return (int(sys.stdin.readline()))def In():return(map(int,sys.stdin.readline().split()))def Sn():return sys.stdin.readline().strip()#sys.setrecursionlimit(1500)def dict(a):    d={}     for x in a:        if d.get(x,-1)!=-1:            d[x]+=1        else:            d[x]=1    return ddef find_gt(a, x):    'Find leftmost value greater than x'    i = bi.bisect_left(a, x)    if i != len(a):        return i    else:                    return -1def main():    try:        t=Sn()        l=list(t)        s=list(Sn())        t1={}        s1={}        for x in l:            if t1.get(int(x),-1)!=-1:                t1[int(x)]+=1            else:                t1[int(x)]=1        for x in s:            if s1.get(int(x),-1)!=-1:                s1[int(x)]+=1            else:                s1[int(x)]=1        n=len(l)        for x in range(n):            temp=int(l[x])            ma=temp            for i in range(temp,10):                if s1.get(i,-1)!=-1:                    ma=i            if ma!=temp:                s1[ma]-=1                l[x]=str(ma)                if s1[ma]==0:                    s1.pop(ma)        print(''.join(l))      except:        pass        M = 998244353P = 1000000007 if __name__ == '__main__':    # for _ in range(I()):main()    for _ in range(1):main()#End# #        ******************* All The Best *******************   # 					 		  					  				  			 	 	
