import java.util.*;Â public class CF529B {    public static void main (String[] args) {        Scanner scan = new Scanner(System.in);        int n = scan.nextInt();        int[] w = new int[n];        int[] h = new int[n];        for (int i = 0; i < n; ++i) {            w[i] = scan.nextInt();            h[i] = scan.nextInt();        }        int ans = -1;        for (int H = 1; H <= 1000; ++H) {            int W = 0, rem = (int)n/2, ok = 1;            List<Integer> delta = new ArrayList<>();;            for (int i = 0; i < n; ++i) {                if (h[i] > H && w[i] > H) { // failed either way                    ok = 0;                    break;                }                else if (h[i] > H) { // && w[i] <= H // must lie down                    W += h[i];                    --rem;                }                else if (w[i] <= H) { // && h[i] <= H // can lie down                    W += w[i];                    delta.add(h[i] - w[i]);                }                else { // w[i] > H && h[i] <= H // cannot lie down                    W += w[i];                }            }            if (ok == 0 || rem < 0)                continue;            Collections.sort(delta); // sort by possible reduction in width            for (int d : delta) { // lie down the first rem people                if (--rem < 0 || d > 0)                    break;                W += d;            }            if (W*H < ans || ans == -1)                ans = W*H;        }        System.out.println(ans);    }}
