/**  _ _ * \(^.^\) *  ( 8 ;) *  ( __;) *   V  V * by Abril */ import java.io.*;import java.util.*; public class Main {		class E implements Comparable<E> {		int v;		int id;				E(int v, int id) {			this.v = v;			this.id = id;		} 		@Override		public int compareTo(E o) {			return Integer.compare(v, o.v);		}	}		void solve() {		int n = in.nextInt();		int[][] a = new int[n][2];		for (int i = 0; i < n; i++) {			a[i][0] = in.nextInt(); // w -> h			a[i][1] = in.nextInt(); // h -> w		}		boolean[] caido = new boolean[n];		int respuesta = (int)1e9;		for (int t = 0; t < 2; t++) {			for (int i = 0; i < n; i++) {				int caidos = 0;				Arrays.fill(caido, false);				if (t == 0) {					caidos++;					caido[i] = true;				}				for (int j = 0; j < n; j++) {					if (j == i) {						continue;					}					if (a[j][1] > a[i][t]) {						caidos++;						caido[j] = true;					}				}				if (caidos > n / 2) {					continue;				}				ArrayList<E> lista = new ArrayList<>();				for (int j = 0; j < n; ++j) {					if (j == i || caido[j]) {						continue;					}					if (a[j][0] <= a[i][t] && a[j][1] < a[j][0]) {						lista.add(new E(a[j][1] - a[j][0], j));					}				}				Collections.sort(lista);				for (int j = 0; j < lista.size(); ++j) {					if (caidos < n / 2) {						++caidos;						caido[lista.get(j).id] = true;					}				}				int W = 0, H = 0;				for (int j = 0; j < n; ++j) {					int w = a[j][0];					int h = a[j][1];					if (caido[j]) {						int tmp = w;						w = h;						h = tmp;					}					W += w;					H = Math.max(H, h);				}				respuesta = Math.min(respuesta, W * H);			}		}		out.println(respuesta);	}		void run() {		in = new InputReader(System.in);		out = new PrintWriter(System.out);		solve();		out.close();	}		InputReader in;	PrintWriter out;		class InputReader {		BufferedReader br;		StringTokenizer st;				InputReader(InputStream is) {			br = new BufferedReader(new InputStreamReader(is));			st = null;		}				String next() {			while (st == null || !st.hasMoreTokens()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					throw new RuntimeException(e);				}			}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}	}		public static void main(String[] args) {		new Main().run();	}}
