import bisectimport collectionsimport copyimport functoolsimport heapqimport itertoolsimport mathimport randomimport reimport sysimport timeimport stringfrom typing import Listsys.setrecursionlimit(99999) for _ in range(int(input())):    n = int(input())    s = input()    t = input()    f = True    for i in range(n):        if s[i]>t[i]:            f = False            break    if not f:        print(-1)        continue        tree = {}    def find(st):        tree.setdefault(st,st)        if tree[st]!=st:            tree[st] = find(tree[st])        return tree[st]     d = [[0]*26 for _ in range(26)]     for i in range(n):        if s[i]<t[i]:            tree[find(s[i])] = find(t[i])         cnt = [0]*26    for i,c in enumerate(string.ascii_lowercase):        cnt[ ord(find(c) )- ord('a')]+=1    ans = 0    for i in range(26):        if cnt[i]:            ans+= cnt[i]-1;    print(ans) 
