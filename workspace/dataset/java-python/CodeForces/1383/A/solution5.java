import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=input.nextInt();        while(T-->0)        {            int n=input.nextInt();            String a=input.next();            String b=input.next();            int flag=0;            ArrayList<Integer> adj[]=new ArrayList[20];            for(int i=0;i<20;i++)            {                adj[i]=new ArrayList<>();            }            for(int i=0;i<n;i++)            {                if(b.charAt(i)<a.charAt(i))                {                    flag=1;                }                else                {                    adj[(int)a.charAt(i)-97].add((int)b.charAt(i)-97);                    adj[(int)b.charAt(i)-97].add((int)a.charAt(i)-97);                }            }            if(flag==1)            {                out.println(-1);            }            else            {                ArrayList<ArrayList<Integer>> list=connectedComponents(adj);                int c=0;                for(int i=0;i<list.size();i++)                {                    c+=list.get(i).size()-1;                }                out.println(c);            }        }        out.close();    }    static void DFSUtil(int v, boolean[] visited,ArrayList<Integer> adj[],ArrayList<Integer> l)    {        visited[v] = true;        l.add(v);        for (int x : adj[v]) {            if (!visited[x])                DFSUtil(x, visited,adj,l);        }    }    static ArrayList<ArrayList<Integer>> connectedComponents(ArrayList<Integer> adj[])    {        ArrayList<ArrayList<Integer>> list=new ArrayList<>();        boolean[] visited = new boolean[20];        for (int v = 0; v < 20; ++v) {            if (!visited[v]) {                ArrayList<Integer> l=new ArrayList<>();                DFSUtil(v, visited,adj,l);                list.add(l);            }        }        return list;    }    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }}
