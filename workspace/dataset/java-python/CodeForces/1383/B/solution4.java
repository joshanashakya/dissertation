import java.io.*;import java.util.*; public class A { 	static PrintWriter out;		static class FIO {		BufferedReader in;		StringTokenizer st = null;		FIO() throws IOException{			in = new BufferedReader(new InputStreamReader(System.in));			out = new PrintWriter(System.out);			st = null;		}		FIO(String s) throws IOException {			in = new BufferedReader(new FileReader(s + ".in"));			out = new PrintWriter(new FileWriter(s + ".out"));			st = null;		}		String next() {			while (st == null || !st.hasMoreTokens()) {				try {					st = new StringTokenizer(in.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		}		int nextInt() {			return Integer.parseInt(next());		}		long nextLong() {			return Long.parseLong(next());		}		double nextDouble() {			return Double.parseDouble(next());		}	}	static FIO in;	public static void main(String[] args) throws IOException {		in = new FIO();		int tc = in.nextInt();		while (tc-- > 0)			new solver();				out.close();			}	static class solver {		void p1() {			out.println("WIN");		}		void p2() {			out.println("LOSE");		}		solver() {			int N = in.nextInt();			long[] ar = new long[N];			for (int i = 0; i < N; ++i)				ar[i] = in.nextLong();			for (int i = 31; i >= 0; --i) {				int oc = 0;				for (long x : ar)					oc += ((x & (1 << i)) == 0 ? 0 : 1);				if (oc%4 == 1) {					p1();					return;				}				if (oc%4 == 3) {					if ((N - oc)%2 == 1)						p1();					else						p2();					return;				}			}			out.println("DRAW");											}			}	 }/*141 0 1 6     */
