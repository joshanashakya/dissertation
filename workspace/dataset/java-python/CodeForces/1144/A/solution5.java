import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskA solver = new TaskA();        solver.solve(1, in, out);        out.close();    }     static class TaskA {        public void solve(int testNumber, InputReader in, PrintWriter out) {            int t = in.nextInt();            for (int cas = 1; cas <= t; cas++) {                String s = in.next();                //out.println(s);                int[] inx = new int[26];                boolean flg = true;                for (int i = 0; i < s.length(); i++) {                    inx[s.charAt(i) - 'a']++;                    if (inx[s.charAt(i) - 'a'] > 1) flg = false;                }                if (flg == true) {                    int start = -1;                    for (int i = 0; i < 26; i++) {                        if (inx[i] != 0) {                            start = i;                            break;                        }                    }                    for (int i = start; i < 26; i++) {                        if (inx[i] != 0) {                            start = i;                        } else break;                    }                    for (int i = start + 1; i < 26; i++) {                        if (inx[i] != 0) flg = false;                    }                }                 if (flg) out.println("Yes");                else out.println("No");            }        }     }     static class InputReader {        public BufferedReader reader;        public StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public boolean hasNext() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    String line = reader.readLine();                    if (line == null) return false;                    tokenizer = new StringTokenizer(line);                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return true;        }         public String next() {            if (hasNext())                return tokenizer.nextToken();            return null;        }         public int nextInt() {            return Integer.parseInt(next());        }     }}
