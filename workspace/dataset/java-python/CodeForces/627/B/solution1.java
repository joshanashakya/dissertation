#include <bits/stdc++.h> #define  ll   long long#define  pii pair<ll ,ll>#define  pll pair<ll,ll>#define  For(i, n) for(ll i = 0; i < (n); ++i)#define  lsb(x) ((x) & (-x))#define  PI acos(-1)#define  getbit(n, i) (((n) & (1LL << (i))) != 0)#define  resetbit(n, i) ((n) & (~(1LL << (i))))#define  setbit(n, i) ((n) | (1LL << (i)))#define  togglebit(n, i) ((n) ^ (1LL << (i)))#define  gap " " using namespace std;const int N = 2e5 + 10;int ta[N * 4], tb[N * 4], n, a, b, k, q;void update(int at, int left, int right, int idx, int val, int cs) {    if (right < idx || left > idx) return;    if (left >= idx && right <= idx) {        if (cs) ta[at] = min(ta[at] + val, a);        else tb[at] = min(tb[at] + val, b);        return;    }    update(at * 2, left, (left + right) / 2, idx, val, cs);    update(at * 2 + 1, (left + right) / 2 + 1, right, idx, val, cs);    if (cs) ta[at] = ta[at * 2] + ta[at * 2 + 1];    else tb[at] = tb[at * 2] + tb[at * 2 + 1];}int query(int at, int left, int right, int start, int end, int cs) {    if (start > end) return 0;    if (left > end || right < start) return 0;    if (left >= start && right <= end) {        if (cs) return ta[at];        else return tb[at];    }  return  query(at * 2, left, (left + right) / 2, start, end, cs) + query(at * 2 + 1, (left + right) / 2 + 1, right, start, end, cs);Â }int  main() {    ios_base::sync_with_stdio(false);    cin.tie(nullptr);  cout.tie(nullptr);    cin >> n >> k >> a >> b >> q;    while (q--) {        int tcase; cin >> tcase;        if (tcase == 1) {            int di, ai; cin >> di >> ai;            update(1, 1, n, di, ai, 1);            update(1, 1, n, di, ai, 0);        }        else {            int di;            cin >> di;            ll sum = query(1, 1, n, 1, di - 1, 0);            sum += query(1, 1, n, di + k, n, 1);            cout << sum << "\n";        }    }}
