# https://codeforces.com/problemset/problem/996/A # variation of unbounded knapsack and also has greedy appraoch to it # O(Nd) time - TLE for 10^9 input# def lottery(total, coins):#     dp = [float("inf")] * (total + 1)#     dp[0] = 0#     for coin in coins:#         for amount in range(1, total + 1):#             if coin <= amount:#                 dp[amount] = min(dp[amount], 1 + dp[amount - coin]) #     return dp[total]  # n = int(input())# coins = [1, 5, 10, 20, 100]# print(lottery(n, coins))  # O(k) - for fixed lenght of demoninationsn = int(input())a = 0for i in [100, 20, 10, 5, 1]:    a += n // i    n %= iprint(a)  # print(n // 100 % 100 // 10)
