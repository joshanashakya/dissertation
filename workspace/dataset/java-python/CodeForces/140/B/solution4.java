import java.io.*;import java.lang.reflect.Array;import java.security.cert.TrustAnchor;import java.util.*; /** * Created by noureldin on 2/20/17. */ public class main {       public static void main(String[] args) throws Exception{        IO io = new IO(null,null);        int n = io.getNextInt();        int [] [] I = new int[n+1][n];        int [] [] pos = new int[n+1][n];        for (int i = 0;i <= n;i++) {            for (int j = 0; j < n; j++) {                I[i][j] = io.getNextInt() - 1;                pos[i][I[i][j]] = j;            }        }        int cur = -1,prv = -1;        int [] ans = new int[n];        boolean [] done = new boolean[n];        int [] best = new int[n];        int [] secondBest = new int[n];        for (int i = 0;i < n;i++){            if(prv == -1 || pos[n][i] < pos[n][prv]) prv = i;            if(cur == -1 || pos[n][prv] < pos[n][cur]) {                int x = prv,y = cur;                prv = y; cur = x;            }            best[i] = cur;            secondBest[i] = prv;        }         for (int i = 0;i < n;i++){            int t = -1,choice = -1;            for (int j = 0;j < n;j++){                int q = best[j];                if(best[j] == i) q = secondBest[j];                if(choice == -1 || pos[i][q] < pos[i][choice]) {                    choice = q;                    t = j + 1;                }            }            ans[i] = t;        }        for (int i = 0;i < n;i++) io.print(ans[i] + " ");        io.println("");        io.close();    }}  class item implements Comparable<item>{    int price,time;    public item(int time,int price){        this.price = price;        this.time = time;    }    @Override    public int compareTo(item o){        return this.price - o.price;    }} class IO{    private BufferedReader br;    private StringTokenizer st;    private PrintWriter writer;    private String inputFile,outputFile;     public String getNext() throws FileNotFoundException, IOException{        while(st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());        return st.nextToken();    }     public String getNextLine() throws FileNotFoundException, IOException{        return br.readLine();    }     public int getNextInt() throws FileNotFoundException, IOException{        return Integer.parseInt(getNext());    }    public long getNextLong() throws FileNotFoundException, IOException{        return Long.parseLong(getNext());    }     public void print(double x,int num_digits) throws  IOException{        writer.printf("%." + num_digits + "f" ,x);    }    public void println(double x,int num_digits) throws  IOException{        writer.printf("%." + num_digits + "f\n" ,x);    }    public void print(Object o) throws  IOException{        writer.print(o.toString());    }     public void println(Object o) throws  IOException{        writer.println(o.toString());    }    public IO(String x,String y) throws FileNotFoundException, IOException{        inputFile = x;        outputFile = y;        if(x != null) br = new BufferedReader(new FileReader(inputFile));        else br = new BufferedReader(new InputStreamReader(System.in));        if(y != null) writer = new PrintWriter(new BufferedWriter(new FileWriter(outputFile)));        else writer = new PrintWriter(new OutputStreamWriter(System.out));    }     protected void close() throws IOException{        br.close();        writer.close();    }}
