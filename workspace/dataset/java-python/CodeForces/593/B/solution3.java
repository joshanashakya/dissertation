import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.PriorityQueue;import java.util.StringTokenizer; public class AntonAndLines {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        int n = Integer.parseInt(br.readLine());        StringTokenizer st = new StringTokenizer(br.readLine());        int x1 = Integer.parseInt(st.nextToken());        int x2 = Integer.parseInt(st.nextToken());        PriorityQueue<Line> pq = new PriorityQueue<>();        for (int i = 0; i < n; i++) {            st = new StringTokenizer(br.readLine());            long k = Integer.parseInt(st.nextToken());            long b = Integer.parseInt(st.nextToken());            long y1 = k * x1 + b;            long y2 = k * x2 + b;            pq.add(new Line(y1, y2));        }         Line x = new Line(1, 2);        Line y = new Line(1, 1);        Line prev = pq.poll();        while (!pq.isEmpty()) {            Line cur = pq.poll();            if (prev.y2 > cur.y2) {                System.out.println("YES");                return;            }            prev = cur;        }        System.out.println("NO");    }     static class Line implements Comparable<Line> {        long y1, y2;         public Line(long Y1, long Y2) {            y1 = Y1;            y2 = Y2;        }         @Override        public int compareTo(Line o) {            if (this.y1 == o.y1) {                return Long.compare(this.y2, o.y2);            }            return Long.compare(this.y1, o.y1);        }    }}
