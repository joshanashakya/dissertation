// 19-Feb-2021import java.util.*;import java.io.*; public class KK {	static class FastReader { 		BufferedReader br;		StringTokenizer st; 		private FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		int[] nextIntArray(int n) {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = nextInt();			return a;		} 		int[] nextIntArrayOne(int n) {			int[] a = new int[n + 1];			for (int i = 1; i < n + 1; i++)				a[i] = nextInt();			return a;		} 		long[] nextLongArray(int n) {			long[] a = new long[n];			for (int i = 0; i < n; i++)				a[i] = nextLong();			return a;		} 		long[] nextLongArrayOne(int n) {			long[] a = new long[n + 1];			for (int i = 1; i < n + 1; i++)				a[i] = nextLong();			return a;		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	public static void main(String[] args) {		FastReader s = new FastReader();		StringBuilder str = new StringBuilder(); 		int n  = s.nextInt();		char arr[] = s.nextLine().toCharArray();				ArrayList<Integer> list[]  = new ArrayList[26];				for(int i = 0; i < 26 ; i++) {			list[i] = new ArrayList<>();		}				int ind = 1;		for(char c : arr) {			list[c - 'a'].add(ind++);		}				int m = s.nextInt();				while(m-- > 0) {			int alpha[] = new int[26];						char sub [] = s.nextLine().toCharArray();																	for(char c : sub) {				alpha[c - 'a']++;			}			int ans = -1;						for(int i = 0; i < 26; i++) {				int count = alpha[i];				if(count > 0) {					ans = Math.max(ans, list[i].get(count - 1));				}							}					str.append(ans +"\n");		} 				System.out.println(str);	} }
