import java.io.BufferedReader;// import java.io.FileInputStream;// import java.io.FileOutputStream;import java.io.InputStream;import java.io.InputStreamReader;import java.io.IOException;import java.io.PrintWriter;import java.util.*; import static java.lang.Math.*;import static java.util.Arrays.copyOf;import static java.util.Arrays.fill;import static java.util.Arrays.sort;import static java.util.Collections.reverseOrder;import static java.util.Collections.sort; public class Main {    private FastScanner in;    private PrintWriter out;     private void solve() throws IOException {        int m = in.nextInt(), n = in.nextInt();        char[][] p = new char[n][];        for (int i = 0; i < n; i++)            p[i] = in.next().toCharArray();         for (int i = 2 * m - 1; i >= 0; i--) {            for (int j = 2 * n - 1; j >= 0; j--)                out.print(p[n - 1 - j / 2][m - 1 - i / 2]);            out.println();        }    }     class FastScanner {        StringTokenizer st;        BufferedReader br;         FastScanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         boolean hasNext() throws IOException {            return br.ready() || (st != null && st.hasMoreTokens());        }         int nextInt() throws IOException {            return Integer.parseInt(next());        }         long nextLong() throws IOException {            return Long.parseLong(next());        }         double nextDouble() throws IOException {            return Double.parseDouble(next());        }         String nextLine() throws IOException {            return br.readLine();        }         boolean hasNextLine() throws IOException {            return br.ready();        }    }     private void run() throws IOException {        in = new FastScanner(System.in); // new FastScanner(new FileInputStream(".in"));        out = new PrintWriter(System.out); // new PrintWriter(new FileOutputStream(".out"));         solve();         out.flush();        out.close();    }     public static void main(String[] args) throws IOException {        new Main().run();    }}
