import java.awt.Point; import java.io.*;import java.math.BigInteger;import java.util.*;import java.util.Map.Entry;import java.util.function.Function;import java.util.function.Supplier; public class tests {	static Scanner in = new Scanner();	static PrintWriter out = new PrintWriter(System.out);	static long mod = 1000 * 1000 * 1000 + 7; 	public static void main(String[] test) throws NumberFormatException, IOException {		int n = in.nextInt();		int k = in.nextInt();		int a[] = new int[n / k];		int b[] = new int[n / k];		for (int i = 0; i < n / k; i++) {			a[i] = in.nextInt();		}		for (int i = 0; i < n / k; i++) {			b[i] = in.nextInt();		}		long ans = 1;		for (int i = 0; i < n / k; i++) {			long total = (long) Math.pow(10, k);			long total_div = (long) Math.ceil(total * 1.0 / a[i]);			long lower = (long) Math.ceil((total *1.0 / 10) * b[i]);			long upper = (long) Math.ceil((total *1.0 / 10) * b[i] + (total *1.0 / 10));			long ret_ = total_div - ((long)Math.ceil(upper *1.0/ a[i]) - (long)Math.ceil(lower *1.0 / a[i]));			//out.println(ret_);			ans *= ret_ ;			ans = ans %mod;		}		out.println(ans);		out.flush();		out.close();	} 	static class Scanner {		BufferedReader br;		StringTokenizer st; 		Scanner() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		Scanner(String file) throws FileNotFoundException {			br = new BufferedReader(new FileReader(file));		} 		String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		int nextInt() throws NumberFormatException, IOException {			return Integer.parseInt(next());		} 		String nextLine() throws IOException {			return br.readLine();		} 		long nextLong() throws NumberFormatException, IOException {			return Long.parseLong(next());		} 	} }
