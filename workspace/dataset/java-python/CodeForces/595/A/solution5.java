import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Arrays;import java.util.HashMap;import java.util.Random;import java.util.StringTokenizer; public class Main { 	public static void main(String[] args) {		FastScanner fs=new FastScanner();// 		int T=fs.nextInt();        int T=1,n,m,k,i,j,l,ans=0;        boolean flag=false;		for (int tt=0; tt<T; tt++) 		{		    n=fs.nextInt();		    m=fs.nextInt();		    int[] a;		        ans=0;		    for(i=0;i<n;i++)		    {		        flag=false;		        a=fs.readArray(2*m);		        for(j=0;j<2*m;j+=2)		        {		            if(a[j]==1||a[j+1]==1)		                ans++;		        }		    }			    System.out.println(ans);		}	} 	static final Random random=new Random();		static void ruffleSort(int[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n), temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}		static class FastScanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer("");		String next() {			while (!st.hasMoreTokens())				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}		int[] readArray(int n) {			int[] a=new int[n];			for (int i=0; i<n; i++) a[i]=nextInt();			return a;		}		long nextLong() {			return Long.parseLong(next());		}	} 	}
