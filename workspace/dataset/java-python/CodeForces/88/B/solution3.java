import java.util.ArrayList;import java.util.List;import java.util.Scanner; public class Main {		public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		class Position{			public Position(int x, int y) {				this.x = x;				this.y = y;			}			int x,y;		}		int n = sc.nextInt(), m = sc.nextInt(), x = sc.nextInt();		ArrayList<Position> map[] = new ArrayList[27];		for(int i = 0 ; i < 27;i++)			map[i] = new ArrayList<Position>();				for(int i = 0 ; i < n ; i++) {			String line = sc.next();			for(int j = 0; j < m ; j++) {				if(line.charAt(j) == 'S')					map[26].add(new Position(i, j));				else					map[line.charAt(j)-'a'].add(new Position(i, j));;			}		}		List<Position> shifts = map[26];		Boolean mem[] = new Boolean[26];		int t = sc.nextInt();		String text = sc.next();		int count = 0;		for(int i = 0 ; i < t ; i++) {			char c = text.charAt(i);			if(map[Character.toLowerCase(c)-'a'].isEmpty()					|| Character.toLowerCase(c) != c && shifts.isEmpty()) {				System.out.println(-1);				sc.close();				return;			}else if(Character.toLowerCase(c) != c) {								List<Position> chars = map[Character.toLowerCase(c)-'a'];				boolean can = false;								if(mem[Character.toLowerCase(c)-'a'] != null) {					can = mem[Character.toLowerCase(c)-'a'];				}else				for(Position shift : shifts) {					for(Position ch : chars) {						double d = Math.sqrt((shift.x-ch.x)*(shift.x-ch.x)+								(shift.y-ch.y)*(shift.y-ch.y));						if(d <= x) {							can = true;							can = true;							break;						}					}					if(can)						break;				}				mem[Character.toLowerCase(c)-'a'] = can;				if(!can)					count++;			}		}		System.out.println(count);		sc.close();	}}
