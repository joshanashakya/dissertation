import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;import java.io.PrintWriter;import java.util.Arrays;import java.util.Deque;import java.util.LinkedList;import java.util.StringTokenizer; public class Main {    static StringTokenizer st;    static BufferedReader in;     public static void main(String[] args) throws IOException {        in = new BufferedReader(new FileReader("input.txt"));        PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));        int n = nextInt();        int[] a = new int[n];        for (int i = 0; i < n; i++) {            a[i] = nextInt();        }        Arrays.sort(a);        int min = Integer.MAX_VALUE;        for (int i = 0; i < n; i++) {            int j = upper_bound(a, i, 2 * a[i]);            min = Math.min(min, i + n - j);        }        pw.println(min);         pw.close();    }     private static int upper_bound(int[] a, int l, int target) {        int r = a.length;        while (l < r) {            int mid = l + (r - l) / 2;            if (a[mid] > target) {                r = mid;            } else {                l = mid + 1;            }        }        return l;    }         private static int nextInt() throws IOException {        return Integer.parseInt(next());    }     private static long nextLong() throws IOException {        return Long.parseLong(next());    }     private static double nextDouble() throws IOException {        return Double.parseDouble(next());    }     private static String next() throws IOException {        while (st == null || !st.hasMoreTokens()) {            st = new StringTokenizer(in.readLine());        }        return st.nextToken();    }}
