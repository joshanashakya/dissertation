import java.io.*;import java.util.StringTokenizer; public class CodeForcesBase {    static boolean local = false;     public static void main(String[] args) throws IOException {        PrintWriter out = new PrintWriter(new File("output.txt"));        Scanner sc = local ? new Scanner(new FileReader("E:\\dev\\project\\JoshOJ\\src\\input")) : new Scanner(new FileInputStream(new File("input.txt")));         while (sc.ready()) {            handle(sc, out);        }         out.flush();        out.close();    }     private static void handle(Scanner sc, PrintWriter out) throws IOException {        int bn = sc.nextInt();        int gn = sc.nextInt();        if (bn > gn) {            out.println(work(bn, gn, 'B', 'G'));        } else {            out.println(work(gn, bn, 'G', 'B'));        }    }     private static String work(int n1, int n2, char c1, char c2) {        StringBuilder sb = new StringBuilder();         while (n2 > 0) {            sb.append(c1);            sb.append(c2);            n1--;            n2--;        }        while (n1 > 0) {            sb.append(c1);            n1--;        }        return sb.toString();    }      private static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens()) {                st = new StringTokenizer(br.readLine());            }            return st.nextToken();        }         public int nextInt() throws IOException {            return Integer.parseInt(next());        }         public long nextLong() throws IOException {            return Long.parseLong(next());        }         public String nextLine() throws IOException {            return br.readLine();        }         public double nextDouble() throws IOException {            return Double.parseDouble(next());        }         public boolean ready() throws IOException {            return br.ready();        }      }}
