import java.io.OutputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.FileInputStream;import java.io.InputStream;import java.io.OutputStream;import java.io.PrintWriter;import java.io.BufferedWriter;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer;import java.io.Writer;import java.io.OutputStreamWriter;import java.io.BufferedReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream;        try {            inputStream = new FileInputStream("input.txt");        } catch (IOException e) {            throw new RuntimeException(e);        }        OutputStream outputStream;        try {            outputStream = new FileOutputStream("output.txt");        } catch (IOException e) {            throw new RuntimeException(e);        }        InputReader in = new InputReader(inputStream);        OutputWriter out = new OutputWriter(outputStream);        ABoysAndGirls solver = new ABoysAndGirls();        solver.solve(1, in, out);        out.close();    }     static class ABoysAndGirls {        public void solve(int testNumber, InputReader in, OutputWriter out) {            int n = in.nextInt();            int m = in.nextInt();            if (n >= m) {                while (m > 0) {                    out.print("BG");                    n--;                    m--;                }                while (n > 0) {                    out.print("B");                    n--;                }            } else {                while (n > 0) {                    out.print("GB");                    n--;                    m--;                }                while (m > 0) {                    out.print("G");                    m--;                }            }        }     }     static class OutputWriter {        private final PrintWriter writer;         public OutputWriter(OutputStream outputStream) {            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));        }         public OutputWriter(Writer writer) {            this.writer = new PrintWriter(writer);        }         public void print(Object... objects) {            for (int i = 0; i < objects.length; i++) {                if (i != 0) {                    writer.print(' ');                }                writer.print(objects[i]);            }        }         public void close() {            writer.close();        }     }     static class InputReader {        BufferedReader reader;        StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
