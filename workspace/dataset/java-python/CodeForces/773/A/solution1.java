#include<bits/stdc++.h>using namespace std;#define int long long #define FAST ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);//#define double      long double#define pb          push_back#define pf          push_front const int MOD = 1e9+7;const int inf=1e18; bool isprime(int n){	if(n==1) return false;	for(int i = 2;i*i<=n;i++){		if(n%i==0) return false;	}	return true;}	int lcm(int a,int b){	return (a*b)/__gcd(a,b);} int gcd(int a, int b){     if (b == 0){    	return a;	}     return gcd(b, a % b);        }  int power(int x, int y) {     int res=1;	x%=MOD;       while(y>0)     {         if(y&1)         res=res*x;         res%=MOD;        y=y>>1;         x=x*x;          x%=MOD;    }     return res; } int inv(int a){    return power(a,MOD-2)%MOD;} int fact[10005]; int ncr(int n,int r){	if(r>n)       return 0;        if(n<0 || r<0)  	return 0;     if(r==0 || n==r)    return 1;     return ((fact[n]%MOD) * ((((inv(fact[r])%MOD)%MOD) * ((inv(fact[n-r])%MOD)%MOD)%MOD))%MOD)%MOD;} vector<int> a[1000001];int vis[1000001],dis[1000001],level[1000001]; void bfs(int ver){	queue<int> q;	q.push(ver);	vis[ver]=1;	dis[ver]=0;		while(!q.empty()){		int temp=q.front();		q.pop();				for(int i=0;i<a[temp].size();i++){			int child=a[temp][i];			if(vis[child] == 0){				vis[child] = 1;				q.push(child);				dis[child] = dis[temp] + 1;				cout<<dis[child]<<endl;				level[dis[child]]++;			}		}	}} Â signed main(){	FAST	int t;	cin>>t;	while(t--){		int x,y,p,q;		cin>>x>>y>>p>>q;				int req = ceil(x/(double)p);		if(p == q && x == y){			cout<<"0"<<endl;		}else if(q-p == 0 || (p == 0 && x>0)){				cout<<"-1"<<endl;		}else{			int t1 = ceil((double)(y-x)/(double)(q-p));			int ans=max(req, t1);						ans = max((int)0, q*ans-y);			cout<<ans<<endl;		}			}	}
