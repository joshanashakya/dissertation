import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws Exception {        FastScanner sc = new FastScanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        int T = sc.nextInt();        for(int ti = 0; ti < T; ti++){            char[] s = sc.next().toCharArray();            char[] t = sc.next().toCharArray();            int nowS = 0;            int nowT = 0;            boolean flg = true;            while(nowS < s.length){                char cs = s[nowS];                int cnt = 0;                while(nowS < s.length && cs == s[nowS]){                    nowS++;                    cnt++;                }                while(nowT < t.length && cs == t[nowT]){                    nowT++;                    cnt--;                }                //pw.println(cnt);                if(cnt > 0){                    flg = false;                    break;                }            }            pw.println(flg && nowT == t.length ? "YES" : "NO");        }        pw.flush();    }     static class GeekInteger {        public static void save_sort(int[] array) {            shuffle(array);            Arrays.sort(array);        }         public static int[] shuffle(int[] array) {            int n = array.length;            Random random = new Random();            for (int i = 0, j; i < n; i++) {                j = i + random.nextInt(n - i);                int randomElement = array[j];                array[j] = array[i];                array[i] = randomElement;            }            return array;        }                public static void save_sort(long[] array) {            shuffle(array);            Arrays.sort(array);        }         public static long[] shuffle(long[] array) {            int n = array.length;            Random random = new Random();            for (int i = 0, j; i < n; i++) {                j = i + random.nextInt(n - i);                long randomElement = array[j];                array[j] = array[i];                array[i] = randomElement;            }            return array;        }     }} class FastScanner {    private BufferedReader reader = null;    private StringTokenizer tokenizer = null;    public FastScanner(InputStream in) {        reader = new BufferedReader(new InputStreamReader(in));        tokenizer = null;    }     public String next() {        if (tokenizer == null || !tokenizer.hasMoreTokens()) {            try {                tokenizer = new StringTokenizer(reader.readLine());            } catch (IOException e) {                throw new RuntimeException(e);            }        }        return tokenizer.nextToken();    }     public String nextLine() {        if (tokenizer == null || !tokenizer.hasMoreTokens()) {            try {                return reader.readLine();            } catch (IOException e) {                throw new RuntimeException(e);            }        }        return tokenizer.nextToken("\n");    }     public long nextLong() {        return Long.parseLong(next());    }     public int nextInt() {        return Integer.parseInt(next());    }     public double nextDouble() {         return Double.parseDouble(next());    }        public String[] nextArray(int n) {        String[] a = new String[n];        for (int i = 0; i < n; i++)            a[i] = next();        return a;    }     public int[] nextIntArray(int n) {        int[] a = new int[n];        for (int i = 0; i < n; i++)            a[i] = nextInt();        return a;    }     public long[] nextLongArray(int n) {        long[] a = new long[n];        for (int i = 0; i < n; i++)            a[i] = nextLong();        return a;    } }
