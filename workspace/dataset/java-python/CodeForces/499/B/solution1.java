import java.io.*;import java.util.*; public class lecture {  public static void main(String[] args) throws IOException{    FastReader fr = new FastReader();    PrintWriter pr = new PrintWriter(new OutputStreamWriter(System.out));    int n = fr.nextInt();    int m = fr.nextInt();     HashMap<String, String> map = new HashMap<>();     for (int i = 0; i < m; i++) {      String[] in = fr.nextLine().split(" ");      map.put(in[0], in[1]);    }     String out = "";     for (int i = 0; i < n; i++) {      String a = fr.next();      if (map.get(a).length() < a.length()) {        out += map.get(a) + " ";      } else {        out += a + " ";      }    }     pr.println(out.substring(0, out.length()));    pr.close();  }   static class Pair {      int x, y;      public Pair(int x, int y) {          this.x = x;          this.y = y;      }  }   static int toInt(String s) {    return Integer.parseInt(s);  }   static class FastReader   {       BufferedReader br;       StringTokenizer st;        public FastReader() throws FileNotFoundException       {           br = new BufferedReader(new InputStreamReader(System.in));       }        String next()       {           while (st == null || !st.hasMoreElements())           {               try              {                   st = new StringTokenizer(br.readLine());               }               catch (IOException  e)               {                   e.printStackTrace();               }           }           return st.nextToken();       }        int nextInt()       {           return Integer.parseInt(next());       }        long nextLong()       {           return Long.parseLong(next());       }        double nextDouble()       {           return Double.parseDouble(next());       }        String nextLine()       {           String str = "";           try          {               str = br.readLine();           }           catch (IOException e)           {               e.printStackTrace();           }           return str;       }   }}
