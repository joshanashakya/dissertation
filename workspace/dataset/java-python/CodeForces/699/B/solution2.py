import math,sys,bisect,heapqfrom collections import defaultdict,Counter,dequefrom itertools import groupby,accumulate#sys.setrecursionlimit(200000000)input = iter(sys.stdin.buffer.read().decode().splitlines()).__next__ilele = lambda: map(int,input().split())alele = lambda: list(map(int, input().split()))def list2d(a, b, c): return [[c] * b for i in range(a)]def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]#MOD = 1000000000 + 7def Y(c):  print(["NO","YES"][c])def y(c):  print(["no","yes"][c])def Yy(c):  print(["No","Yes"][c])    n,m = ilele()A= []for i in range(n):    B = input()    A.append(B)c = 0k1,k2 = -1,-1for i in range(n):    for j in range(m):        if A[i][j] == "*":            c+= 1            k1,k2 = i,jif c == 0:    Y(1)    print(1,1)    exit(0)            def fun(i,j):    d = 0    for l in range(n):        if A[l][j] == "*":            d += 1    for l in range(m):        if A[i][l] == "*":            d += 1    if A[i][j] == "*":        d-=1    return dÂ F = [k1,k2]for i in range(n):    for j in range(m):        if i in F or j in F:            d = fun(i,j)            if c == d:                Y(1)                print(i+1,j+1)                exit(0)Y(0)
