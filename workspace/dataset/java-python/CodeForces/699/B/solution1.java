import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{          public static void main(String[] args)    {         FastScanner input = new FastScanner();         int n, m;        n = input.nextInt();        m = input.nextInt();        char a[][] = new char[n][m];        for (int i = 0; i < n; i++) {            a[i] = input.next().toCharArray();        }        int row[] = new int[n];        int col[] = new int[m];        int total = 0;        for (int i = 0; i < n; i++) {             for (int j = 0; j < m; j++) {                if (a[i][j] == '*') {                    row[i]++;                    col[j]++;                    total++;                }            }         }        int x=-1,y=-1;        o:        for (int i = 0; i < n; i++) {            for (int j = 0; j < m; j++) {                if(row[i]+col[j]+((a[i][j]=='*')?-1:0)==total)                {                    x = i;                    y=j;                    break o;                }            }        }        if(x==-1)        {            System.out.println("NO");        }        else        {            System.out.println("YES");            System.out.println((x+1)+" "+(y+1));        }             }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
