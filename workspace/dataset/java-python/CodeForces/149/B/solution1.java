import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.BufferedReader;import java.io.FileReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BMartianClock solver = new BMartianClock();        solver.solve(1, in, out);        out.close();    }     static class BMartianClock {        public void solve(int testNumber, Scanner sc, PrintWriter pw) {            int t = 1;            // t= sc.nextInt();            while (t-- > 0) {                StringTokenizer st = new StringTokenizer(sc.nextLine(), ":");                char[] a = st.nextToken().toCharArray();                char[] b = st.nextToken().toCharArray();                int ans = 0;                StringBuilder sb = new StringBuilder();                for (int i = 1; i < 1000; i++) {                    if (check(a, b, i)) {                        ans++;                        sb.append(i + " ");                    }                 }                //pw.println(sb.toString());                if (ans == 0) pw.println(0);                else if (ans > 500) pw.println(-1);                else                    pw.println(sb.toString());            }        }         boolean check(char[] a, char[] b, int x) {            long l = 0;            long r = 0;            int c = 0;            for (int i = a.length - 1; i >= 0; i--) {                if (get(a[i]) >= x) return false;                l += power(x, c) * (get(a[i]));                c++;            }            c = 0;            for (int i = b.length - 1; i >= 0; i--) {                if (get(b[i]) >= x) return false;                r += power(x, c) * (get(b[i]));                c++;            }            return (l < 24 && r < 60);        }         int get(char c) {            if (c >= '0' && c <= '9') return c - '0';            else return 10 + (c - 'A');        }         long power(long x, long y) {            // Initialize result            long res = 1;             while (y > 0) {                // If y is odd,                // multiply                // x with result                if ((y & 1) == 1)                    res = res * x;                 // n must be even now                y = y >> 1; // y = y/2                x = x * x; // Change x to x^2            }            return res;        }     }     static class Scanner {        BufferedReader br;         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String nextLine() {            try {                return br.readLine();            } catch (Exception e) {                throw new RuntimeException(e);            }        }     }} 
