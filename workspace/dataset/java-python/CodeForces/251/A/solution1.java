import java.util.*;import java.lang.*;// import java.math.*;import java.io.*;public class Main{    public static int mod=(int)Math.pow(10,9) + 7;    public static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));    public static PrintWriter ot=new PrintWriter(System.out);    public static int[] take_arr(int n){        int a[]=new int[n];        try {            String s[]=br.readLine().trim().split(" ");            for(int i=0;i<n;i++)            a[i]=Integer.parseInt(s[i]);        } catch (Exception e) {            e.printStackTrace();        }        return a;    }	public static void main (String[] args) throws java.lang.Exception	{		try{            int t=1;//Integer.parseInt(br.readLine().trim());            while(t-->0)            {                String qq[]=br.readLine().trim().split(" ");                int n=Integer.parseInt(qq[0]);                int k=Integer.parseInt(qq[1]);                int a[]=new int[n];                String s[]=br.readLine().trim().split(" ");                for(int i=0;i<n;i++) a[i]=Integer.parseInt(s[i]);                                ot.println(find(a,n,k));                           }            ot.close();            br.close();                    }catch(Exception e){            e.printStackTrace();            return;        }    }    public static long find(int a[],int n,int k){        long ans=0;        for(int i=0;i<n-2;i++)        {            long temp=search(a,a[i],k,i+1,n-1)-i;            // ot.println(i+" "+temp);            temp=(temp*(temp-1))/2;            ans+=temp;        }        return ans;    }    public static int search(int a[],int ai,int k,int low,int high){        while(low<=high)        {            int mid=(low+high)/2;            // ot.println(mid+" "+(a[mid]-ai));            if((a[mid]-ai)<=k)            low=mid+1;            else            high=mid-1;        }        // ot.println(high +  "   "+ high);        return high;    }}    
