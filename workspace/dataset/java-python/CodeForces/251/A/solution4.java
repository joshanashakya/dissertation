import java.util.ArrayList;import java.util.Arrays;import java.util.HashMap;import java.util.LinkedHashMap;import java.util.Map;import java.util.Scanner;import java.util.*;import java.util.stream.Collectors;Â public class absolute {		public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner sc=  new Scanner(System.in);		int n = sc.nextInt();		int d = sc.nextInt();		int[] ar = new int[n];		for(int i=0;i<n;i++)ar[i]=sc.nextInt();		long count=0;		int j=0,nums=0;		for(int i=0;i<n;i++)		{			int st=j,end=n-1,maxpos=-1;			while(st<=end)			{				int mid = st + (end-st)/2;				if(ar[mid]-ar[i]<=d) {					maxpos=mid;					st=mid+1;				}				else {					end=mid-1;				}			}						if(maxpos==-1 || maxpos==j)continue;						if(j==0)			{				count += nCr(maxpos-i+1,3);			}			else			{				count += nCr(j-i+1,2)*nCr(maxpos-j,1);				count += nCr(j-i+1,1)*nCr(maxpos-j,2);				count += nCr(j-i+1,0)*nCr(maxpos-j,3);			}			//System.out.println(i+" "+" "+j+" "+maxpos+" "+count);			j=maxpos;			}				System.out.println((long)count);				}	public static long nCr(int n, int r)	{		if(r>n)return 0;		if(r==3) return (long)n*(n-1)*(n-2)/6;		else if(r==2)return (long)n*(n-1)/2;		else if(r==1)return n;		return 1;	}	 }
