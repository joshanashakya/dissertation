   import java.io.*;import java.math.*;import java.security.*;import java.text.*;import java.util.*;import javafx.util.Pair; public  class CodeForce {static	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));static StringBuilder sb = new StringBuilder(); 	static boolean flag = false;	 	static int next(String [] sr,int ind)	{		return Integer.parseInt(sr[ind]);	} 	public static void main(String[] args) throws IOException {		 	String[] sr=br.readLine().split(" ");		int n=next(sr,0);	int m=next(sr,1);	int x=next(sr,2);	int y=next(sr,3);	node[] req=new node[n];	node[] act=new node[m];	sr=br.readLine().split(" ");		for(int i=0;i<n;i++)	{		req[i]=new node(next(sr,i),i+1);	}	sr=br.readLine().split(" ");	for(int i=0;i<m;i++)	{		act[i]=new node(next(sr,i),i+1);	}	Arrays.sort(req);	Arrays.sort(act);	ArrayList<node> list=new ArrayList<>();	int i=0,j=0;	int count=0;	while(j<n&&i<m)	{		if(act[i].val>=req[j].val-x&&act[i].val<=req[j].val+y)		{list.add(new node(req[j].rank,act[i].rank));			i++;j++;count++;					}		else if(act[i].val<req[j].val-x)			i++;		else						j++;			}	System.out.println(count);	for(int l=0;l<list.size();l++)	{		node p=list.get(l);		System.out.println(p.val+" "+p.rank);	} 							}}     class node implements Comparable<node>{	int val;int rank;	node(int a,int b)	{		val=a;rank=b;	}	public int compareTo(node js)	{if(val==js.val)		return rank-js.rank;		return val-js.val;			}}
