import java.lang.*;import java.util.*;import java.util.stream.Collectors;import java.io.*; public class Fridge   {     	public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		int T = sc.nextInt();		while(T-->0)		{			int n = sc.nextInt();			int m = sc.nextInt();			Map<Integer,Integer> cost = new HashMap<Integer,Integer>(); 			for(int i=1;i<=n;i++)			{				cost.put(i,sc.nextInt());			}						Map<Integer, Integer> sortedcost = cost.entrySet().stream()	                .sorted(Map.Entry.comparingByValue())	                .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue,	                 (oldValue, newValue) -> oldValue, LinkedHashMap::new));						List<Integer> nodes = new ArrayList<Integer>(sortedcost.keySet());			int sum=0;			String k="";			List<String> ans = new ArrayList<String>();			if(m>=n && n>2)			{				for(int i=0;i<nodes.size()-1;i++)				{					if(i==0)						sum += sortedcost.get(nodes.get(1))+sortedcost.get(nodes.get(n-1));					else						sum += sortedcost.get(nodes.get(i-1))+sortedcost.get(nodes.get(i+1));					k = Integer.toString(nodes.get(i))+" "+nodes.get(i+1);					ans.add(k);				}				k=Integer.toString(nodes.get(n-1))+" "+nodes.get(0);				ans.add(k);				sum += sortedcost.get(nodes.get(0))+sortedcost.get(nodes.get(n-2));								System.out.println(sum);				for(String ch : ans)System.out.println(ch);							}			else				System.out.println(-1);												}								}}
