import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class B47{    static int mod=(int)(1e9+7);   static long MOD=(long)(1e9+7);   static FastReader in=new FastReader();   static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));            public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {                   	        	String S1=in.nextLine();        	String S2=in.nextLine();        	String S3=in.nextLine();        	        				int a,b,c;			a=b=c=0;        	        	HashMap<Character,Integer> hm=new HashMap<>();						hm.put('A',1);						hm.put('B',1);			hm.put('C',1);        	        	        	if(S1.charAt(1)=='<')        	{				hm.put(S1.charAt(2),hm.get(S1.charAt(2))*2);											}			else 				hm.put(S1.charAt(0),hm.get(S1.charAt(0))*2);						if(S2.charAt(1)=='<')			{				hm.put(S2.charAt(2),hm.get(S2.charAt(2))*2);											}			else 				hm.put(S2.charAt(0),hm.get(S2.charAt(0))*2);									if(S3.charAt(1)=='<')			{								hm.put(S3.charAt(2),hm.get(S3.charAt(2))*2);											}			else 				hm.put(S3.charAt(0),hm.get(S3.charAt(0))*2);						a=hm.get('A');			b=hm.get('B');			c=hm.get('C');						//pr.println(a+" "+b+" "+c);			if(a<b&&b<c)			{				pr.println("ABC");				continue;			}			else if(b<a&&a<c)			{				pr.println("BAC");				continue;			}			else if(c<a&&a<b)			{				pr.println("CAB");				continue;							}			else if(c<b&&b<a)			{				pr.println("CBA");				continue;							}			else if(a<c&&c<b)			{				pr.println("ACB");								continue;							}			else if(b<c&&c<a)			{				pr.println("BCA");				continue;			}												pr.println("Impossible");									        	        	        	        	        	        }        pr.flush();    }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }  
