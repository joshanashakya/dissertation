import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class A {	static PrintWriter out = new PrintWriter(System.out); 		public static void main(String[] args) {		FS in = new FS();		int n = in.nextInt();		double l = in.nextDouble();		double v1 = in.nextDouble();		double v2 = in.nextDouble();		int k = in.nextInt();		int numTrips = (n+k-1)/k;				double lo = 0, hi = l/v1;								for(int iter = 0; iter < 1000; iter++) {			double mid = (lo+hi)/2.0; 						double timeOnBus = (l-v1*mid)/(v2-v1);			double goBackTime = (v2-v1)*timeOnBus/(v2+v1);						double totalBusTime = timeOnBus*numTrips + goBackTime*(numTrips-1);						if(totalBusTime > mid) lo = mid;			else hi = mid;					}			out.println(lo);		out.close();	}		static class FS{		BufferedReader br;		StringTokenizer st;		public FS() {			br = new BufferedReader(new InputStreamReader(System.in));		}		String next() {			while(st == null || !st.hasMoreElements()) {				try {st = new StringTokenizer(br.readLine());}				catch(Exception e) { throw null;}			}			return st.nextToken();		}		int nextInt() { return Integer.parseInt(next());}		double nextDouble() { return Double.parseDouble(next());}		long nextLong() { return Long.parseLong(next());}		int[] NIA(int n) {			int r[] = new int[n];			for(int i = 0; i < n; i++) r[i] = nextInt();			return r;		}		long[] NLA(int n) {			long r[] = new long[n];			for(int i = 0; i < n; i++) r[i] = nextLong();			return r;		}		char[][] grid(int r, int c){			char res[][] = new char[r][c];			for(int i = 0; i < r; i++) {				char l[] = next().toCharArray();				for(int j = 0; j < c; j++) {					res[i][j] = l[j];				}			}			return res;		}	}	}
