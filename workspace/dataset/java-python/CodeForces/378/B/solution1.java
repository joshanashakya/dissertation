import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.List;import java.util.Scanner;import java.util.Collections;import java.util.ArrayList; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main{    public static void main(String[] args)    {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskB solver = new TaskB();        solver.solve(1, in, out);        out.close();    }     static class TaskB    {        public void solve(int testNumber, Scanner in, PrintWriter out)        {            int T = 1;            while (T-- > 0)            {                solveOne(in, out);            }        }         private void solveOne(Scanner in, PrintWriter out)        {            int N = in.nextInt();            int R[][] = CPUtils.readIntMatrix(N, 2, in);            List<Integer> l = new ArrayList<>(N * 2);             for (int i = 0; i < N; i++)            {                l.add(R[i][0]);                l.add(R[i][1]);            }            Collections.sort(l);            int cut = l.get(N - 1);             StringBuilder sa = new StringBuilder();            StringBuilder sb = new StringBuilder();            int cnt = 0;            for (int i = 0; i < N; i++)            {                cnt++;                if (cnt * 2 <= N)                {                    sa.append(1);                    sb.append(1);                    continue;                }                if (R[i][0] <= cut)                {                    sa.append(1);                } else                {                    sa.append(0);                }                if (R[i][1] <= cut)                {                    sb.append(1);                } else                {                    sb.append(0);                }            }            out.println(sa.toString());            out.println(sb.toString());        }     }     static class CPUtils    {        public static int[] readIntArray(int size, Scanner in)        {            int[] array = new int[size];            for (int i = 0; i < size; i++)            {                array[i] = in.nextInt();            }            return array;        }         public static int[][] readIntMatrix(int rows, int columns, Scanner in)        {            int[][] matrix = new int[rows][columns];            for (int i = 0; i < rows; i++)            {                matrix[i] = CPUtils.readIntArray(columns, in);            }            return matrix;        }     }} 
