#input()#int(input())#[s for s in input().split()]#[int(s) for s in input().split()]#for t in range(t): import mathimport collectionsimport bisect def arrPrint(a):    return " ".join([str(i) for i in a]) def gridPrint(a):    return "\n".join([" ".join([str(j) for j in a[i]]) for i in range(len(a))]) def isPalindrome(s):    for i in range(len(s)//2):        if not s[i] == s[-i-1]:            return False    return True def solve(points):    new = []    for i in range(3):        newX = points[i][0]        newY = points[i][1]        for j in range(3):            if not i == j:                newX += points[j][0] - points[i][0]                newY += points[j][1] - points[i][1]        new.append([newX, newY])    print(3)    for i in range(3):        print(arrPrint(new[i]))    points = []for i in range(3):    points.append([int(s) for s in input().split()])solve(points)
