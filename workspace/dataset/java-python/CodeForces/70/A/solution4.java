import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.StringTokenizer; public class V { 	static class FastReader {		BufferedReader bf;		StringTokenizer st; 		public FastReader()  {			bf = new BufferedReader(new InputStreamReader(System.in));					}		String next() {			while(st == null || !st.hasMoreElements())				try {					st = new StringTokenizer(bf.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		}		int nextInt()  {			return Integer.parseInt(next());		}		long nextLong()  {			return Long.parseLong(next());		}		double nextDouble()  {			return Double.parseDouble(next());		}		String nextLine() throws IOException {			return bf.readLine();		}		boolean ready() throws IOException {			return bf.ready() || (st != null && st.hasMoreElements());		}	} 	public static void main(String[] args) {		FastReader fr = new FastReader();		int n = fr.nextInt() - 1;		if (n < 0) System.out.println(1);		else {			BigInteger result = new BigInteger("3");			BigInteger mod = new BigInteger("1000003");			BigInteger exp = new BigInteger(Integer.toString(n));			result = result.modPow(exp, mod);			System.out.println(result.toString());		}			}}
