import java.io.*;import java.util.*; // :%s/Abeta64/"name"/// if (debug)  public class Abeta64 {	public static void main(String[] args) { new Abeta64(); }	FS in = new FS();	PrintWriter out = new PrintWriter(System.out); 	int t;	int n, mod = 1_000_003; 	boolean debug = !true, multi = !true; 	Abeta64() {		if (multi) t = in.nextInt();		do {			if (multi) if (z(t--)) break; 			n = in.nextInt();			int ans = 1;			while (n > 1) {				ans *= 3;				ans %= mod;				n--;			}			out.println(ans);				} while (debug || multi);		out.close();	} 	 	int min(int a, int b) { if (a < b) return a; return b; }		int max(int a, int b) { if (a > b) return a; return b; }		long min(long a, long b) { if (a < b) return a; return b; }		long max(long a, long b) { if (a > b) return a; return b; }	 	boolean z(int x) { if (x == 0) return true; return false; }		boolean z(long x) { if (x == 0) return true; return false; }	 	void sort(int[] arr) {		int szArr = arr.length;		Random r = new Random();		for (int i = 0; i < szArr; i++) {			int j = r.nextInt(szArr);			arr[i] = arr[j]^(arr[i]^(arr[j] = arr[i]));		}		Arrays.sort(arr);	} 	class FS {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer("");		String next() {			while (!st.hasMoreTokens()) {				try { st = new StringTokenizer(br.readLine()); }				catch (Exception e) {}			} return st.nextToken();		}		int nextInt() { return Integer.parseInt(next()); }		long nextLong() { return Long.parseLong(next()); }		double nextDouble() { return Double.parseDouble(next()); }	}}
