import java.io.BufferedReader;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*;        public class Main { 	public static boolean gsd(long x , int y) {		for(int i = 2 ; i <= Math.min(y, x) ; i ++ ) {			if (x%i == 0 && y%i == 0 ) return true;		}		return false;	}	public static int s(long x) {		int sum = 0 ; 		do {			sum += x%10 ; 			x /= 10;		}while(x >0 );		return sum;	}	public static int right(String s) {		int c = 0 ; 		for(int i = s.length()-1 ; i>=0; i -- ) {			if(s.charAt(i) == 'a') c++ ; 			else break;		}		return c; 	}	public static int left(String s) {		int c = 0 ; 		for(int i = 0 ; i<s.length(); i ++ ) {			if(s.charAt(i) == 'a') c++ ; 			else break;		}		return c; 	}	public static boolean onlyas (String s) {		for (int i = 0 ; i < s.length() ; i ++ ) {			if (s.charAt(i) != 'a') return false ; 		}return true;	}	public static String convert(String s) {		StringBuilder sb = new StringBuilder();		for (int i = 0 ; i < s.length() ; i ++ ) {			if (s.charAt(i) == '1') sb.append("0"); 			else sb.append("1");		}		return sb.toString();	}	public static void main(String[] args)  throws IOException, InterruptedException{		PrintWriter pw = new PrintWriter(System.out);		Scanner sc = new Scanner (System.in); 		int  n  = sc.nextInt();		Integer [] arr = new Integer[n];				for(int i = 0 ; i < n ; i ++ ) {					arr[i] =  sc.nextInt();					}				Arrays.sort(arr);								TreeMap<Integer, Integer> tm = new TreeMap<Integer, Integer>();				for(int i = 0 ; i < n ; i ++ ) {					tm.put(arr[i], i );									}								int q = sc.nextInt();				for (int i = 0 ; i < q ; i ++ ) {					int x = sc.nextInt();					if (tm.lowerKey(x+1)== null) pw.println(0); else 					pw.println(tm.get(tm.lowerKey(x+1))+1);				}				pw.close ();	}	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		} 		public Scanner(String file) throws FileNotFoundException {			br = new BufferedReader(new FileReader(file));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		}		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public String nextLine() throws IOException {			return br.readLine();		}		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public boolean ready() throws IOException {			return br.ready();		} 	}  } 	   	  	 	  		 				  				 	  	
