import math,sys,bisect,heapqfrom collections import defaultdict,Counter,dequefrom itertools import groupby,accumulate#sys.setrecursionlimit(200000000)int1 = lambda x: int(x) - 1input = iter(sys.stdin.buffer.read().decode().splitlines()).__next__ilele = lambda: map(int,input().split())alele = lambda: list(map(int, input().split()))ilelec = lambda: map(int1,input().split())alelec = lambda: list(map(int1, input().split()))def list2d(a, b, c): return [[c] * b for i in range(a)]def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]#MOD = 1000000000 + 7def Y(c):  print(["NO","YES"][c])def y(c):  print(["no","yes"][c])def Yy(c):  print(["No","Yes"][c]) m,b = ilele()#y = b - x/mAns = 0def fun(x,y):    return ((y*(y+1))//2)*(x+1) for y in range(b,-1,-1):    x= m*(b - y)    a= fun(x,y) + fun(y,x)    Ans = max(Ans,a)print(Ans)
