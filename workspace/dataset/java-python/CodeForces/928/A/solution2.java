//package algoprog.level3.d.a; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.HashSet;import java.util.Map;import java.util.Set; public class LoginCheck {     public static void main(String[] args) throws IOException {        final BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        final String loginToCheck = br.readLine();        int n = Integer.parseInt(br.readLine());         Set<String> existedLogins = new HashSet<>();        for (int i = 0; i < n; i++) {            existedLogins.add(normalize(br.readLine()));        }         if (existedLogins.contains(normalize(loginToCheck))) {            System.out.println("No");        } else {            System.out.println("Yes");        }    }     // l -> 1    // L -> 1    // i -> 1    // I -> 1    // O -> 0    // o -> 0    // ABC -> abc    static String normalize(String s) {        StringBuilder sb = new StringBuilder();         for (char c : s.toCharArray()) {            if (pairs.containsKey(c)) {                c = pairs.get(c);            } else if (c >= 'A' && c <= 'Z') {                c = (char) (c - 'A' + 'a');            }            sb.append(c);        }        return sb.toString();    }     static Map<Character, Character> pairs = new HashMap<>();     static {        pairs.put('O', '0');        pairs.put('o', '0');        pairs.put('L', '1');        pairs.put('l', '1');        pairs.put('I', '1');        pairs.put('i', '1');    }}
