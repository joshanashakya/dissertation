import java.io.*;import java.util.*; public class LoginVer {     static class InputReader {        BufferedReader reader;        StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public long nextLong() {            return Long.parseLong(next());        }         public double nextDouble() {            return Double.parseDouble(next());        }    }     static InputReader r = new InputReader(System.in);    static PrintWriter pw = new PrintWriter(System.out);     public static void main(String[] args) {                   // convert all O, o to 0        // convert all l, L, i, I to 1        // then, uppercase everything         String s = convert(r.next());        int n = r.nextInt();        String[] arr = new String[n];        for(int i = 0; i < n; i++){            arr[i] = convert(r.next());        }                pw.println(check(s, arr) ? "Yes" : "No");          pw.close();    }     public static boolean check(String s, String[] arr){        for(String str : arr){            if(s.equals(str)){                return false;            }        }        return true;    }     public static String convert(String s){        StringBuilder sb = new StringBuilder();        for(int i = 0; i < s.length(); i++){            char c = s.charAt(i);            if(c == 'O' || c == 'o'){                sb.append('0');            } else if(c == 'l' || c == 'L' || c == 'i' || c == 'I'){                sb.append('1');            } else{                sb.append(c);            }        }        return sb.toString().toUpperCase();    }} /***                _        _                 _                                                *               | |      | |               | |                                               *   ___ ___   __| | ___  | |__  _   _    __| | __ _ _ __ _ __ ___ _ __     _   _  __ _  ___  *  / __/ _ \ / _` |/ _ \ | '_ \| | | |  / _` |/ _` | '__| '__/ _ \ '_ \   | | | |/ _` |/ _ \ * | (_| (_) | (_| |  __/ | |_) | |_| | | (_| | (_| | |  | | |  __/ | | |  | |_| | (_| | (_) |*  \___\___/ \__,_|\___| |_.__/ \__, |  \__,_|\__,_|_|  |_|  \___|_| |_|   \__, |\__,_|\___/ *                                __/ |                               ______ __/ |            *                               |___/                               |______|___/              */
