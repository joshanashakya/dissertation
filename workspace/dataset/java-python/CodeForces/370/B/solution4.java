import java.util.ArrayList;import java.util.Collections;import java.util.HashSet;import java.util.Scanner; public class bingo {	static class Joe implements Comparable<Joe>{		ArrayList<Integer> list;		int ogIndex;		public Joe(ArrayList<Integer> list, int ogIndex){			this.list=list;			this.ogIndex=ogIndex;		}				@Override		public int compareTo(Joe other) {			int min = Math.min(list.size(), other.list.size());			for(int i=0;i<min;i++){				if(list.get(i)!=other.list.get(i))					return list.get(i)-other.list.get(i);			}						return other.list.size()-list.size();		}				public boolean isSuperSet(Joe in){			if(in.list.size()>list.size())				return false;			HashSet<Integer> inSet = new HashSet<Integer>();			for(int e:list)				inSet.add(e);			for(int e:in.list)				if(!inSet.contains(e))					return false;			return true;				}				public String toString(){return list.toString();}	}		public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner scan = new Scanner(System.in);		int len = scan.nextInt();		ArrayList<Joe> list = new ArrayList<Joe>(len);		for(int i=0;i<len;i++){			int size = scan.nextInt();			ArrayList<Integer> cur = new ArrayList<Integer>(size);			for(int k=0;k<size;k++)				cur.add(scan.nextInt());			Collections.sort(cur);			list.add(new Joe(cur,i));		}//		Collections.sort(list);//		System.out.println(list);		boolean[] ans = new boolean[len];		for(int i=0;i<list.size();i++){			Joe cur = list.get(i);			boolean works=true;			for(int j=0;j<len;j++){				if(j!=i)				if(cur.isSuperSet(list.get(j))){					works=false;					break;				}			}			ans[i]=works;		}		for(boolean e:ans){			if(e)				System.out.println("YES");			else				System.out.println("NO");					}		//		System.out.println(list);//		System.out.println(list.get(0).isSuperSet(list.get(1)));//		System.out.println(list.get(1).isSuperSet(list.get(0))); 					} }
