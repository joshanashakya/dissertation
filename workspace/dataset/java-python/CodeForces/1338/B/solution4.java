import java.io.*;import java.util.*;public class Main {    public static PrintWriter out;    public static ArrayList<Integer>[] adjacencyList;    public static  void main(String[] args){        MyScanner sc = new MyScanner();        out = new PrintWriter(new BufferedOutputStream(System.out));        int n=sc.nextInt();        adjacencyList=new ArrayList[n];        for(int i=0;i<n;i++)adjacencyList[i]=new ArrayList<>();        for(int i=0;i<n-1;i++){            int u=sc.nextInt(),v=sc.nextInt();            u--;v--;adjacencyList[u].add(v);adjacencyList[v].add(u);        }        int minn=1,maxx=n-1;int root=0;        for(int i=0;i<n;i++){            if(adjacencyList[i].size()==1){root=i;break;}        }        if(dfs(root,root,0))minn=3;        int c=1;        for(int i=0;i<n;i++){            if(adjacencyList[i].size()==1)continue;            c=0;            for(int j:adjacencyList[i]){                if(adjacencyList[j].size()==1)c++;            }            if(c>0)            maxx-=(c-1);        }        out.println(minn+" "+maxx);        out.close();    }    public static boolean dfs(int root,int prnt,int ht){        boolean flg=false;        boolean haschild=false;        for(int i=0;i<adjacencyList[root].size();i++){            if(adjacencyList[root].get(i)==prnt)continue;            haschild=true;            flg=flg|| dfs(adjacencyList[root].get(i),root,ht+1);        }        if(!haschild)flg=flg || (ht%2==1);        return flg;    }    //-----------MyScanner class for faster input----------    public static class MyScanner {        BufferedReader br;        StringTokenizer st;         public MyScanner() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine(){            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }     }}
