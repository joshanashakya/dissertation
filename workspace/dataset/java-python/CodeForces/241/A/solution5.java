import java.util.Arrays;import java.util.Scanner;import java.util.ArrayList; public class Main {    	public static void main(String[] args) {        Scanner sc = new Scanner(System.in);		int n= 25; // sedes 		n = sc.nextInt();		n++;		//System.out.println("N " + n);        int k= 3; //horas        k = sc.nextInt();        int[] distancia= {11,8,8,12,17,4,4,25,39,37,31,32,38,34,29,29,34,39,39,39,17,9,24,6}; //distancia        int[] galones= {3,5,4,3,3,3,4,3,4,3,3,3,3,4,3,3,4,3,4,3,3,3,3,3}; // galones         distancia = new int[n];        galones = new int[n];        for(int i = 0; i < n-1; i++) distancia[i] = sc.nextInt();        for(int i = 0; i < n-1; i++) galones[i] = sc.nextInt();                int tiempominimo=0;         int[] vecestanque= new int[n-1]; // veces que se recargo el tanque en la sede                 int tanqueactual= 0;        int galonmayor=galones[0];        int indicegalonmayor= 0;                 long startTime = System.nanoTime();        for(int i=0; i<n-1  ;i++){                       tanqueactual= tanqueactual + galones[i];            vecestanque[i]= vecestanque[i] + 1 ;            int distanciaarecorrer= distancia[i];                       if (galones[i] > galonmayor){                galonmayor= galones[i];                indicegalonmayor=i;            }                        if (tanqueactual >= distanciaarecorrer){                tiempominimo= tiempominimo + distancia[i];                tanqueactual = tanqueactual - distanciaarecorrer;            }                        else{                int falta= distanciaarecorrer - tanqueactual;                double faltaaux = (double) falta;                double galonaux = (double) galonmayor;                double division = faltaaux/galonaux;                int veces=(int) Math.ceil(division);                tanqueactual= tanqueactual + (galonmayor*veces) - distanciaarecorrer;                tiempominimo= tiempominimo + distancia[i] + k*veces;                vecestanque[indicegalonmayor]= vecestanque[indicegalonmayor] + veces;            }        }        long endTime = System.nanoTime();         //System.out.println("Tiempo que le tomÃ³ al programa resolver el problema: " + (endTime-startTime)+" nanosegundos\n");		System.out.println(tiempominimo);		//int i = 0;		//while(i < n-1){			//System.out.print("Se recargÃ³ " + vecestanque[i]+ " veces en la estaciÃ³n " + (i+1) + "\n");			//i++;		//}		//System.out.println("\n");    }}
