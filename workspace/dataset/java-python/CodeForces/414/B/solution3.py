import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger; import java.util.*;import javafx.util.Pair; public class Main{    static long mod = (long) (1e9+7);    public static void main(String args[])    {        FastScanner input = new FastScanner();       int n = input.nextInt();       int size = input.nextInt();       int len = Math.max(n, size)+1;       long dp[][] = new long[len][len];        for (int i = 1; i <=n; i++) {            dp[1][i] = 1;        }        for (int i = 1; i <len; i++) {            for (int j = 1; j <len; j++) {                for (int k = j; k <len; k+=j) {                    dp[i][k] = (dp[i][k]+dp[i-1][j])%mod;                }            }        }        long ans= 0;        for (int i = 1; i <=n; i++) {            ans+=(dp[size][i]);            ans  = ans %mod;        }        System.out.println(ans                );            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
