from collections import namedtuple Pos = namedtuple('Pos', 'x y') s = input()g = {}  def add(last, pos):    if last not in g:        g[last] = set()    g[last].add(pos)     if pos not in g:        g[pos] = set()    g[pos].add(last)  start = Pos(100, 100)last = startok = True for ch in s:    pos = Pos(0, 0)    if ch == 'L':        pos = Pos(last.x - 1, last.y)    elif ch == 'R':        pos = Pos(last.x + 1, last.y)    elif ch == 'U':        pos = Pos(last.x, last.y - 1)    elif ch == 'D':        pos = Pos(last.x, last.y + 1)     if pos == start:        ok = False        break     if pos in g:        ok = False        break     p1 = Pos(pos.x - 1, pos.y)    p2 = Pos(pos.x + 1, pos.y)    p3 = Pos(pos.x, pos.y + 1)    p4 = Pos(pos.x, pos.y - 1)      def not_good(pc):        return pc != last and pc in g      if not_good(p1) or not_good(p2) or not_good(p3) or not_good(p4):        ok = False        break     add(last, pos)    last = pos    # print(pos) # print(g)print('OK' if ok else 'BUG') # def var(s, c):#     if c == 0:#         for k in range(10):#             s1 = str(s) + str(k)#             print(s1)#     else:#         for k in range(10):#             s1 = str(s) + str(k)#             var(s1, c - 1)### def var0():#     for k in range(10):#         var(k, 3)### var0()
