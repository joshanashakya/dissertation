import java.util.*;import java.math.*;import java.io.*;import java.lang.*;public class bearandreverseradewoosh {	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		} 		int[] nextIntArray(int n) {			int a[] = new int[n];			for (int i = 0; i < n; i++) {				a[i] = Integer.parseInt(next());			}			return a;		} 	}		private static long startTime = System.currentTimeMillis();	public static void main(String[] args) {		FastReader sc =new FastReader();		int n = sc.nextInt(); int c = sc.nextInt();		int[] p = sc.nextIntArray(n); int[] t = sc.nextIntArray(n); int l = 0; int r = 0; int sum1 = 0; int sum2 = 0;		for (int i = 0; i < n; i++) {			sum1+=t[i]; sum2+=t[n-i-1];			l+=Math.max(p[i]-sum1*c, 0);			r+=Math.max(p[n-1-i]-sum2*c, 0);		}		if(l>r) System.out.println("Limak");		else if(l==r) System.out.println("Tie");		else System.out.println("Radewoosh");		  	}}
