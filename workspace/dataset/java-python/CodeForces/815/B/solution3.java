// practice with rainboyimport java.io.*;import java.util.*; public class CF815B extends PrintWriter {	CF815B() { super(System.out, true); }	Scanner sc = new Scanner(System.in);	public static void main(String[] $) {		CF815B o = new CF815B(); o.main(); o.flush();	} 	static final int MD = 1000000007;	int d_, x_, y_;	void gcd_(int a, int b) {		if (b == 0) {			d_ = a; x_ = 1; y_ = 0;		} else {			gcd_(b, a % b);			int t = x_ - a / b * y_; x_ = y_; y_ = t;		}	}	int inv(int a) {		gcd_(a, MD);		if (x_ < 0)			x_ += MD;		return x_;	}	int[] ff, gg;	void init(int n) {		ff = new int[n];		gg = new int[n];		int f = 1;		for (int i = 0; i < n; i++) {			ff[i] = f;			gg[i] = inv(f);			f = (int) ((long) f * (i + 1) % MD);		}	}	int ch(int n, int k) {		return (int) ((long) ff[n] * gg[k] % MD * gg[n - k] % MD);	}	void main() {		int n = sc.nextInt();		int[] aa = new int[n];		for (int i = 0; i < n; i++)			aa[i] = sc.nextInt();		if (n == 1) {			println(aa[0]);			return;		}		if (n % 2 == 1) {			n--;			for (int i = 0; i < n; i++)				aa[i] = (i % 2 == 0 ? aa[i] + aa[i + 1] : aa[i] - aa[i + 1] + MD) % MD;		}		init(n / 2);		long a = 0, b = 0;		int m = n / 2 - 1;		for (int i = 0; i <= m; i++) {			a = (a + (long) ch(m, i) * aa[i << 1]) % MD;			b = (b + (long) ch(m, i) * aa[i << 1 | 1]) % MD;		}		println((n % 4 == 2 ? a + b : a - b + MD) % MD);	}}
