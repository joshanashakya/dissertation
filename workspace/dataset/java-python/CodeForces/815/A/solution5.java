import java.util.*;import java.lang.*;import java.io.*;import java.math.*;public class Prac{         static class InputReader {         private final InputStream stream;        private final byte[] buf = new byte[8192];        private int curChar, snumChars;        public InputReader(InputStream st) {            this.stream = st;        }         public int read() {            if (snumChars == -1)                throw new InputMismatchException();            if (curChar >= snumChars) {                curChar = 0;                try {                    snumChars = stream.read(buf);                }                 catch (IOException e) {                    throw new InputMismatchException();                }                if (snumChars <= 0)                    return -1;            }            return buf[curChar++];        }        public int ni() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public long nl() {            int c = read();            while (isSpaceChar(c)) {            c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            long res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public int[] nia(int n) {            int a[] = new int[n];            for (int i = 0; i < n; i++) {                a[i] = ni();            }            return a;        }         public String rs() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                    c = read();            } while (!isSpaceChar(c));            return res.toString();        }        public String nextLine() {            int c = read();            while (isSpaceChar(c))                c = read();            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                c = read();            } while (!isEndOfLine(c));            return res.toString();        }         public boolean isSpaceChar(int c) {            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         private boolean isEndOfLine(int c) {            return c == '\n' || c == '\r' || c == -1;        }     }    public static class Key {         private final int x;        private final int y;         public Key(int x, int y) {            this.x = x;            this.y = y;        }         @Override        public boolean equals(Object o) {            if (this == o) return true;            if (!(o instanceof Key)) return false;            Key key = (Key) o;            return x == key.x && y == key.y;        }         @Override        public int hashCode() {            int result = x;            result = 31 * result + y;            return result;        }     }    static class Pair{        String s;        int x;        public Pair(String s,int x){            this.s=s;            this.x=x;        }    }        static PrintWriter w = new PrintWriter(System.out);    static long mod=998244353L,mod1=1000000007,res;    static int arr[][],n,m;    static ArrayList<Pair> ans;    static void row(){        for(int i=0;i<n;i++){            int min=500;            for(int j=0;j<m;j++)min=Math.min(arr[i][j],min);            for(int j=0;j<m;j++)arr[i][j]-=min;            for(int j=0;j<min;j++)ans.add(new Pair("row",i+1));        }    }    static void col(){        for(int i=0;i<m;i++){            int min=500;            for(int j=0;j<n;j++)min=Math.min(arr[j][i],min);            for(int j=0;j<n;j++)arr[j][i]-=min;            for(int j=0;j<min;j++)ans.add(new Pair("col",i+1));        }    }    public static void main(String [] args){        InputReader sc=new InputReader(System.in);        n=sc.ni();        m=sc.ni();        arr=new int[n][m];        ans=new ArrayList<>();        for(int i=0;i<n;i++){            for(int j=0;j<m;j++){                arr[i][j]=sc.ni();            }        }        if(n>m){            col();            row();          }        else{            row();            col();        }        boolean f=false;        for(int i=0;i<n;i++){            for(int j=0;j<m;j++){                if(arr[i][j]!=0)f=true;            }        }        if(f)w.println(-1);        else{            w.println(ans.size());            for(Pair p:ans)w.println(p.s+" "+p.x);        }        w.close();    }}
