import java.io.*;import java.util.*; public class Main {    InputReader in; PrintWriter out;    void solve() {        int n = in.nextInt();        StringBuilder sb = new StringBuilder();        for (int i = 0; i < n; i++) {            sb.append("<3");            sb.append(in.next());        }        sb.append("<3");        String shouldSend = sb.toString();        String sended = in.next();        int point = 0;        boolean ans = false;        for (int i = 0; i < sended.length(); i++) {            if (sended.charAt(i) == shouldSend.charAt(point)) {                point++;            }            if (point == shouldSend.length()) {                ans = true;                break;            }        }        out.println(ans ? "yes" : "no");    }     Main(){        boolean oj = System.getProperty("ONLINE_JUDGE") != null;        try {            if (oj) {                in = new InputReader(System.in);                out = new PrintWriter(System.out);            }            else {                Writer w = new FileWriter("output.txt");                in = new InputReader(new FileReader("input.txt"));                out = new PrintWriter(w);            }        } catch(Exception e) {            throw new RuntimeException(e);        }        solve();        out.close();    }    public static void main(String[] args){        new Main();    }} class InputReader {    private BufferedReader reader;    private StringTokenizer tokenizer;     public InputReader(InputStream stream) {        reader = new BufferedReader(new InputStreamReader(stream));        tokenizer = null;    }     public InputReader(FileReader fr) {        reader = new BufferedReader(fr);        tokenizer = null;    }     public String next() {        while (tokenizer == null || !tokenizer.hasMoreTokens()) {            try {                tokenizer = new StringTokenizer(reader.readLine());            } catch (IOException e) {                throw new RuntimeException(e);            }        }        return tokenizer.nextToken();    }    public int nextInt() {        return Integer.parseInt(next());    }    public long nextLong() {        return Long.parseLong(next());    }    public double nextDouble() {        return Double.parseDouble(next());    } }
