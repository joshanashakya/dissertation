import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				static int gcd(int a, int b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				int n = io.nextInt();		int pos[] = new int[n];				for(int i = 0; i < n; i++) {			pos[i] = io.nextInt();		}				if(n <= 2) {			System.out.println("no");			return;		}		else {			for(int i = 2; i < n; i++) {				for(int j = i - 1; j >= 1; j--) {										int a = pos[i];					int b = pos[i - 1];										int min = Math.min(pos[j], pos[j - 1]);					int max = Math.max(pos[j], pos[j - 1]);										if((min < a && max > a) && (min > b || max < b)) {						System.out.println("yes");						return;					}					if((min < b && max > b) && (min > a || max < a)) {						System.out.println("yes");						return;					}				}			}			System.out.println("no");		}	}}
