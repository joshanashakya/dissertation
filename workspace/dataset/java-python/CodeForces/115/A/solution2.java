import java.util.*; public final class Party {  public static int maxDepth = 1;   public static void main(String[] args) {    Scanner sc = new Scanner(System.in);    int n = sc.nextInt();    ArrayList<Integer>[] adj = new ArrayList[n];    int[] visited = new int[n];    for(int i=0;i<n;i++) {      int superior = sc.nextInt()-1;      if(superior >= 0) {        if(adj[superior] == null){          adj[superior] = new ArrayList<>();        }        // System.out.println("superior: "+superior+", list: "+ adj[superior]);        adj[superior].add(i);      }    }     // for(int i=0;i<n;i++) {    //   System.out.println(adj[i]);    // }    for(int i=0;i<n;i++) {      dfs(i, adj, 1);    }     System.out.println(maxDepth);  }   public static void dfs(int vertex, ArrayList<Integer>[] adj, int depth) {    boolean isleaf = true;      if(adj[vertex] != null) {        for(Integer next : adj[vertex]) {          // System.out.println("vertex: "+vertex+", Depth"+ depth);          dfs(next,adj, depth+1);          isleaf = false;        }      }      if(isleaf) {        maxDepth = Math.max(maxDepth, depth);      }  }}
