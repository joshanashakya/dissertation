import java.math.*;import java.util.*;import java.io.*; public class B{ 	public static void main( String[] args ) throws Exception	{		Scanner in = new Scanner(System.in);		int test = 10;		if(test == 0) in = new Scanner(new FileReader(file));		String[] str = in.nextLine().split(" ");		int m = Integer.valueOf(str[0]), n = Integer.valueOf(str[1]);		String[] grid = new String[m];		int[] start = new int[m], end = new int[m];		Arrays.fill(start, -1);		for ( int i = 0; i < m; i++ )		{			grid[i] = in.nextLine();			for(int j = 0; j < n; j++)			{				if(grid[i].charAt(j) == 'W')				{					if(start[i] == -1) start[i] = j;					end[i] = j;				}			}		}		while(m > 0 && start[m - 1] < 0) m--;		// System.out.println(Arrays.toString(start));		// System.out.println(Arrays.toString(end));		// decide for each row		int[] pos = {0, 0};		int dir = 1, re = 0;		for(int i = 0; i < m; i++)		{			if(start[i] >= 0)			{				// look at direction and move to that position				if(dir > 0)				{					re += end[i] - pos[1];					pos[1] = end[i];				}				else				{					re += pos[1] - start[i];					pos[1] = start[i];				}			}			// move to next level and change direction			dir = 1 - dir;			if(i + 1 < m)			{				re++;							if(start[i + 1] < 0) continue;				if(dir > 0)				{					if(start[i + 1] < pos[1])					{						re += pos[1] - start[i + 1];						pos[1] = start[i + 1];					}				}				else				{					if(end[i + 1] > pos[1])					{						re += end[i + 1] - pos[1];						pos[1] = end[i + 1];					}				}			}		}		System.out.println(re);	} 	static int dfs(int c, int[] p, int[] v)	{		if(v[c] > 0) return v[c];		return v[c] = 1 + dfs(p[c], p, v);	} 	static String file = "c:/users/rutter/desktop/java/codeforces/in";}
