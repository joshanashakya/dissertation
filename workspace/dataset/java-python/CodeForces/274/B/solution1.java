import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.StringTokenizer;Â public class Solveaproblem {    private static long[] arr;    private static ArrayList<Integer>[] graph;    private static long[] dfs(int item, int prev) {        long min = 0, max = 0;        for (int elem:graph[item]) {            if (elem==prev) continue;            long[] next = dfs(elem, item);            min = Math.min(min, next[0]);            max = Math.max(max, next[1]);        }        long x = arr[item] + min + max;        if (x>0) min-=x;        else max-=x;        return new long[]{min, max};    }    public static void main(String[] args) throws IOException {        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));        int n = Integer.parseInt(reader.readLine());        graph = new ArrayList[n];        for (int i=0; i<n; i++) graph[i] = new ArrayList<>();        for (int i=1; i<n; i++) {            StringTokenizer sToken = new StringTokenizer(reader.readLine());            int x = Integer.parseInt(sToken.nextToken()) - 1;            int y = Integer.parseInt(sToken.nextToken()) - 1;            graph[x].add(y); graph[y].add(x);        }        arr = new long[n];        StringTokenizer sToken = new StringTokenizer(reader.readLine());        for (int i=0; i<n; i++) arr[i] = Integer.parseInt(sToken.nextToken());        long[] res = dfs(0, -1);        System.out.println((res[0]*(-1))+res[1]);    }}
