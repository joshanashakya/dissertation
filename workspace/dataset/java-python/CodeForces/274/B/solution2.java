import java.util.*;import java.io.*; public class Main {	static int n;	static long dec[], inc[], cur[], ans = 0;	static ArrayList<Integer>[] graph; 	public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		PrintWriter out = new PrintWriter(System.out);		n = sc.nextInt();		graph = new ArrayList[n];		for (int i = 0; i < n; i++)			graph[i] = new ArrayList<Integer>();		for (int i = 1; i < n; i++) {			int u = sc.nextInt() - 1, v = sc.nextInt() - 1;			graph[u].add(v);			graph[v].add(u);		}		inc = new long[n];		dec = new long[n];		cur = new long[n];		for (int i = 0; i < n; i++)			cur[i] = sc.nextInt();		dfs1(0, -1);		out.println(inc[0] + dec[0]);		out.close();	} 	private static void dfs1(int u, int p) {		for (int v : graph[u])			if (v != p) {				dfs1(v, u);				dec[u] = Math.max(dec[u], dec[v]);				inc[u] = Math.max(inc[u], inc[v]);			}		cur[u] += inc[u] - dec[u];		if (cur[u] > 0)			dec[u] += cur[u];		else			inc[u] -= cur[u];	} 	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		} 		public Scanner(String s) throws FileNotFoundException {			br = new BufferedReader(new FileReader(s));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public int[] nextIntArray(int n) throws IOException {			int[] ans = new int[n];			for (int i = 0; i < n; i++)				ans[i] = nextInt();			return ans;		} 		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public String nextLine() throws IOException {			return br.readLine();		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public boolean ready() throws IOException {			return br.ready();		} 	}}
