import java.util.*;import java.io.*;import java.lang.*;public class Main{        static class FastReader{                BufferedReader br;                StringTokenizer st;                public FastReader()throws IOException{                  br=new BufferedReader(new InputStreamReader(System.in));                }                public FastReader(String s)throws IOException{                  br=new BufferedReader(new FileReader(new File(s)));                }                String next(){                  while(st==null || !st.hasMoreElements()){                    try{                       st=new StringTokenizer(br.readLine());                    }                    catch(Exception e){                      e.printStackTrace();                    }                                    }                  return st.nextToken();                }                String nextLine(){                String str="";                  try{                    str=br.readLine();                  }                 catch(Exception e){                   e.printStackTrace();                 }                return str;                }               int nextInt(){                 return Integer.parseInt(next());                }              long nextLong(){               return Long.parseLong(next());             }             double nextDouble(){               return Double.parseDouble(next());             }         }       private static void dfs(int [][]a,boolean b[],int from){         for(int i=0;i<b.length;i++){             if(a[from][i]==1 && !b[i]){                b[i]=true;                dfs(a,b,i);             }                  }                }         public static void main(String[] args) throws IOException {        FastReader in=new FastReader();         int n=in.nextInt();        int m=in.nextInt();        int a[][]=new int[n][n];         for(int i=0;i<m;i++){           int from=in.nextInt()-1;           int to=in.nextInt()-1;           a[from][to]=1;           a[to][from]=1;         }         boolean b[]=new boolean[n];         boolean vis=true;         dfs(a,b,0);         for(int  i=0;i<n;i++)            if(!b[i])               vis=false;             if(n==m && vis)              System.out.println("FHTAGN!");             else              System.out.println("NO");    }}     
