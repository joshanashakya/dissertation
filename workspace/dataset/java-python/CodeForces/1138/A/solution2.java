import java.util.*;import java.io.*;import java.lang.*;import java.math.*; public class cp{    static BufferedReader br;    static StringTokenizer st;     public static void main(String[] args)throws IOException{         br = new BufferedReader(new InputStreamReader(System.in));         st = readLine();        int n = tokenInt();        st = readLine();        int[] seq = new int[n];        int i=0;        while(st.hasMoreTokens()){            seq[i] = tokenInt();            i++;        }        System.out.println(new Solver().solve(n, seq));     }     static StringTokenizer readLine() throws IOException { return new StringTokenizer(br.readLine()); }    static int tokenInt() { return Integer.parseInt(st.nextToken()); }    static long tokenLong(){ return Long.parseLong(st.nextToken()); }    static double tokenDouble(){ return Double.parseDouble(st.nextToken()); }    static char[] tokenChar(){ return st.nextToken().toCharArray(); } }  class Solver{    public int solve(int n, int[] seq) throws IOException{        int counter=0;        int sign = seq[0];        List<Integer> arrList = new ArrayList<Integer>();        for (int i=0; i<n; i++ ) {            if (seq[i] == sign){                counter++;            }            else{                arrList.add(counter);                sign = seq[i];                counter = 1;            }        }        arrList.add(counter);         int max = -1;        int min = 0;        for (int i=0; i<arrList.size()-1;i++) {            min = Math.min(arrList.get(i), arrList.get(i+1));            max = Math.max(min, max);        }                return max*2;    }}
