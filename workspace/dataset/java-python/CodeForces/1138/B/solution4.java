import java.util.*;import java.io.*; public class Circus { 	// https://codeforces.com/contest/1138/problem/B		public static void main(String[] args) throws IOException, FileNotFoundException {		BufferedReader in = new BufferedReader(new InputStreamReader(System.in));		//BufferedReader in = new BufferedReader(new FileReader("Circus")); 		int n = Integer.parseInt(in.readLine());		char[] one = in.readLine().toCharArray();		char[] two = in.readLine().toCharArray();		ArrayList<Integer> doubles = new ArrayList<>();		ArrayList<Integer> none = new ArrayList<>();		ArrayList<Integer> c = new ArrayList<>();		ArrayList<Integer> a = new ArrayList<>();		for (int i=0; i<n; i++) {			if (one[i] == '0' && two[i] == '0') none.add(i);			else if (one[i] == '1' && two[i] == '1') doubles.add(i);			else if (one[i] == '1' && two[i] == '0') c.add(i);			else a.add(i);		}				for (int aa=0; aa<=a.size(); aa++) {			for (int cc=0; cc<=c.size(); cc++) {				if ((doubles.size() + a.size() - aa - cc) % 2 != 0) continue;				int dd = (doubles.size() + a.size() - aa - cc)/2;				int nn = n/2 - dd - cc - aa;								if (nn < 0 || nn > none.size()) continue;				if (dd < 0 || dd > doubles.size()) continue;								ArrayList<Integer> first = new ArrayList<>();				for (int i=0; i<aa; i++) {					first.add(a.get(i));				}				for (int i=0; i<cc; i++) {					first.add(c.get(i));				}				for (int i=0; i<dd; i++) {					first.add(doubles.get(i));				}				for (int i=0; i<nn; i++) {					first.add(none.get(i));				}								if (first.size() == n/2) {					for (int i=0; i<n/2; i++) {						System.out.print((first.get(i)+1) + " ");					}					return;				}							}		}				System.out.println(-1);			}} /*int min=(doubles.size()+1)/2;int max = n/2;while (min < max) {	int middle = (min + max+1)/2;	if (check(middle, doubles, none, a, c)) {		min = middle;	}	else max = middle-1;} int needed = 2*min - doubles.size();while (needed>0 && a.size() > 0 && c.size()>0) {	first.add(c.get(c.size()-1));	c.remove(c.size()-1);	needed--;	if (needed==0) break;	a.remove(a.size()-1);	needed--;}while (needed>0) {	if (c.size()>0) {		first.add(c.get(c.size()-1));		c.remove(c.size()-1);		needed--;	}	else if (a.size()>0) {		a.remove(a.size()-1);		needed--;	}	else {		System.out.println(-1);		return;	}}for (int i=first.size(); i<min; i++) {	if (doubles.size() == 0) {		System.out.println(-1);		return;	}	first.add(doubles.get(doubles.size()-1));	doubles.remove(doubles.size()-1);} for (int i=a.size()-1; i>=0; i--) {	first.add(a.get(a.size()-1));	a.remove(a.size()-1);}for (int i=first.size(); i<n/2; i++) {	first.add(none.get(none.size()-1));	none.remove(none.size()-1);} if (first.size()!=n/2) {	System.out.println(-1);} else {	for (int i=0; i<n/2; i++ ) {		System.out.print((first.get(i)+1) + " " );	}} 	public static boolean check(int num, ArrayList<Integer> doubles, ArrayList<Integer> none, ArrayList<Integer> a, ArrayList<Integer> c) {		int t = num*2 - doubles.size();		return a.size() + c.size() >= t;	} */
