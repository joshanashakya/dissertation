import java.io.*;import java.math.BigInteger;import java.util.*;public class C {	static BufferedReader br;	static int cin() throws Exception	{		return Integer.valueOf(br.readLine());	}	static int[] split() throws Exception	{		String[] cmd=br.readLine().split(" ");		int[] ans=new int[cmd.length];		for(int i=0;i<cmd.length;i++)		{			ans[i]=Integer.valueOf(cmd[i]);		}		return ans;	}	static long p=1000000007;	static long power(long x, long y)     {         long res = 1;              x = x % p;         if (x == 0) return 0;        while (y > 0)         {             if((y & 1)==1)                 res = (res * x) % p;             y = y >> 1;              x = (x * x) % p;          }         return res;     } 	public static void main(String[] args) throws Exception{		// TODO Auto-generated method stub		br=new BufferedReader(new InputStreamReader(System.in));		int cases=1;		while(cases!=0)		{			cases--;			int n=cin();			char[]ch1=br.readLine().toCharArray();			char[]ch2=br.readLine().toCharArray();			ArrayList<Integer>none=new ArrayList<>();			ArrayList<Integer>both=new ArrayList<>();			ArrayList<Integer>clown=new ArrayList<>();			ArrayList<Integer>acro=new ArrayList<>();			for(int i=0;i<n;i++)			{				if(ch1[i]=='0' && ch2[i]=='0')					none.add(i);				else if(ch1[i]=='0' && ch2[i]=='1')					acro.add(i);				else if(ch1[i]=='1' && ch2[i]=='0')					clown.add(i);				else					both.add(i);			}			int x=clown.size();			int y=acro.size();			int z=both.size();			int z1=none.size();			boolean b=false;			for(int a1=0;a1<=y;a1++)			{				for(int c1=0;c1<=x;c1++)				{					int s=(n/2)-a1-c1;					int t=y+z-a1-c1;					if(t%2==0)					{						int b1=t/2;						int n1=s-b1;						if(b1>=0 && b1<=z && n1>=0 && n1<=z1)						{							b=true;							for(int i=0;i<a1;i++)							{								System.out.print(acro.get(i)+1+" ");							}							for(int i=0;i<c1;i++)							{								System.out.print(clown.get(i)+1+" ");							}							for(int i=0;i<b1;i++)							{								System.out.print(both.get(i)+1+" ");							}							for(int i=0;i<n1;i++)							{								System.out.print(none.get(i)+1+" ");							}							break;						}					}									}				if(b)					break;			}			if(!b)				System.out.println(-1);		}	}}
