s = input()sx = ord(s[0]) - ord('a') + 1sy = 9 - int(s[1])t = input()tx = ord(t[0]) - ord('a') + 1ty = 9 - int(t[1]) diff_row = ty - sydiff_col = tx - sxpath = '' if diff_row >= 0 and diff_col >= 0:    path += 'RD\n' * min(diff_row, diff_col)    diff_row, diff_col = diff_row - min(diff_row, diff_col), diff_col - min(diff_row, diff_col)if diff_row < 0 and diff_col >= 0:    path += 'RU\n' * min(-diff_row, diff_col)    diff_row, diff_col = diff_row + min(-diff_row, diff_col), diff_col - min(-diff_row, diff_col)if diff_row >= 0 and diff_col < 0:    path += 'LD\n' * min(diff_row, -diff_col)    diff_row, diff_col = diff_row - min(diff_row, -diff_col), diff_col + min(diff_row, -diff_col)if diff_row < 0 and diff_col < 0:    path += 'LU\n' * min(-diff_row, -diff_col)    diff_row, diff_col = diff_row + min(-diff_row, -diff_col), diff_col + min(-diff_row, -diff_col) if diff_row == 0:    if diff_col >= 0:        path += 'R\n' * diff_col    else:        path += 'L\n' * -diff_colelse:    if diff_row >= 0:        path += 'D\n' * diff_row    else:        path += 'U\n' * -diff_row step = len(list(path.split()))print(step)print(path)
