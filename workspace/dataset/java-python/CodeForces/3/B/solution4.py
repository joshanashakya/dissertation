'''Jana Goodman Lorry     use distribution of types of boats    x + 2y <= volume where x, y = #kayaks, #catamarans ''' import timeimport itertools KAYAK = 1CATAMARAN = 2 def get_boats(num_boats):    kayaks, catamarans = list(), list()    for boat_num in range(1, num_boats + 1):        type_boat, cap = map(int, input().strip().split(' '))        if type_boat == KAYAK:            kayaks.append((cap, boat_num))        else:            catamarans.append((cap, boat_num))    kayaks.sort(reverse=True)    catamarans.sort(reverse=True)    return kayaks, catamarans def get_maxes(kayaks, catamarans, dists):# running totals of capacity for each type of boat    cap_kayaks = [0] + list(itertools.accumulate([cap for cap, i in kayaks]))    cap_catamarans = [0] + list(itertools.accumulate([cap for cap, i in catamarans]))     max_capacity, max_x_y = -1, None    for x, y in dists:        capacity = cap_kayaks[x] + cap_catamarans[y]        if capacity > max_capacity:            max_capacity = capacity            max_x_y = (x, y)    print(max_capacity)     x, y = max_x_y    max_boats = [i for cap, i in kayaks[0:x]] \                + [i for cap, i in catamarans[0:y]]    print(''.join(str(cap) + ' ' for cap in max_boats))  if __name__ == '__main__':#    start = time.time()    num_boats, mx_vol = map(int, input().strip().split(' '))    kayaks, catamarans = get_boats(num_boats)    get_maxes(kayaks, catamarans,              [(x, min(len(catamarans), (mx_vol - x) >> 1))                for x in range(0, min(len(kayaks), mx_vol) + 1)])#    print(f'Time elapsed: {time.time() - start}')
