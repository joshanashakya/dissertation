import java.io.*;import java.util.*; public class Main {     static long len[] = new long[(int) (1e5+1)];    static String stem = "What are you doing at the end of the world? Are you busy? Will you save us?";    static String string = "What are you doing while sending \"\"? Are you busy? Will you send \"\"?";    static String p1 = "What are you doing while sending \"";    static String p2 = "\"? Are you busy? Will you send \"";    static String p3 = "\"?";     public static void main(String[] args) throws Exception {        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(System.out);        len[0] = stem.length();        for (int i = 1; i < 55; i++) {            len[i] = len[i-1]*2 + string.length();            //System.out.println(len[i]);        }        int q = Integer.parseInt(in.readLine());        for (int i = 0; i < q; i++) {            StringTokenizer st = new StringTokenizer(in.readLine());            int n = Integer.parseInt(st.nextToken());            long k = Long.parseLong(st.nextToken());            //out.print(recur(n, k));            char c = ' ';            while (true) {                //System.out.println("N=" + n + " K=" + k);                if (n >= 55) {                    if (1 <= k && k <= p1.length()) {                        c = p1.charAt((int) (k-1));                        break;                    } else {                        //return recur(n-1, k-p1.length());                        n--;                        k = k-p1.length();                        continue;                    }                }                //System.out.println(len[n] +  " is len");                if (k > len[n]) {                    c = '.';                    break;                }                if (n == 0) {                    c = stem.charAt((int) (k-1));                    break;                }                if (1 <= k && k <= p1.length()) {                    c = p1.charAt((int) (k-1));                    break;                }                if (p1.length()+1 <= k && k <= p1.length()+len[n-1]) {                    //return recur(n-1, k-p1.length());                    n--;                    k = k-p1.length();                    continue;                }                if (p1.length()+len[n-1]+1 <= k && k <= p1.length()+len[n-1]+p2.length()) {                    c = p2.charAt((int) (k-(p1.length()+len[n-1]+1)));                    break;                }                if (p1.length()+len[n-1]+p2.length()+1 <= k && k <= p1.length()+len[n-1]+p2.length()+len[n-1]) {                    //return recur(n-1, k-(p1.length()+len[n-1]+p2.length()));                    k = k-(p1.length()+len[n-1]+p2.length());                    n--;                    continue;                }                if (p1.length()+len[n-1]+p2.length()+len[n-1]+1 <= k && k <= p1.length()+len[n-1]+p2.length()+len[n-1]+p3.length()) {                    c = p3.charAt((int) (k-(p1.length()+len[n-1]+p2.length()+len[n-1]+1)));                    break;                }            }            out.print(c);        }        out.print('\n');        out.close();    } }/*  */
