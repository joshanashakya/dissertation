import java.util.*;import java.lang.*;import java.io.*;import java.math.*;public class Prac{         static class InputReader {         private final InputStream stream;        private final byte[] buf = new byte[8192];        private int curChar, snumChars;        public InputReader(InputStream st) {            this.stream = st;        }         public int read() {            if (snumChars == -1)                throw new InputMismatchException();            if (curChar >= snumChars) {                curChar = 0;                try {                    snumChars = stream.read(buf);                }                 catch (IOException e) {                    throw new InputMismatchException();                }                if (snumChars <= 0)                    return -1;            }            return buf[curChar++];        }        public int ni() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public long nl() {            int c = read();            while (isSpaceChar(c)) {            c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            long res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public int[] nia(int n) {            int a[] = new int[n];            for (int i = 0; i < n; i++) {                a[i] = ni();            }            return a;        }         public String rs() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                    c = read();            } while (!isSpaceChar(c));            return res.toString();        }        public String nextLine() {            int c = read();            while (isSpaceChar(c))                c = read();            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                c = read();            } while (!isEndOfLine(c));            return res.toString();        }         public boolean isSpaceChar(int c) {            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         private boolean isEndOfLine(int c) {            return c == '\n' || c == '\r' || c == -1;        }     }    public static class Key {         private final int x;        private final int y;         public Key(int x, int y) {            this.x = x;            this.y = y;        }         @Override        public boolean equals(Object o) {            if (this == o) return true;            if (!(o instanceof Key)) return false;            Key key = (Key) o;            return x == key.x && y == key.y;        }         @Override        public int hashCode() {            int result = x;            result = 31 * result + y;            return result;        }     }    static class Pair{        int x,y;        public Pair(int x,int y){            this.y=y;            this.x=x;        }    }          static PrintWriter w = new PrintWriter(System.out);    static long mod=998244353L,mod1=1000000007;    static long ar[]=new long[100001];    static String a="What are you doing at the end of the world? Are you busy? Will you save us?";    static String b="What are you doing while sending ";    static String c="? Are you busy? Will you send ";    static String d="?";           static void init(){        ar[0]=a.length();        for(int i=1;i<100001;i++){            ar[i]=Math.min(2*ar[i-1]+68L,(long)3e18);        }    }    static char ans(int n,long k){        if(n==0)return a.charAt((int)(k-1));        else if(k<=33)return b.charAt((int)k-1);        else if(k==34||k==(35+ar[n-1])||k==(66+ar[n-1])||k==(67+2*ar[n-1]))return '"';        else if(k==ar[n])return '?';        else if(k>(35+ar[n-1])&&k<=(65+ar[n-1]))return c.charAt((int)(k-35-ar[n-1]-1));        else if((k>34&&k<=(34+ar[n-1]))||(k>=(long)2e18))return ans(n-1,k-34);        else return ans(n-1,k-66-ar[n-1]);    }    public static void main(String [] args){        InputReader sc=new InputReader(System.in);        init();                int q=sc.ni();        while(q-->0){                        int n=sc.ni();            long k=sc.nl();            if(k>ar[n]){                w.print(".");            }            else{                char res=ans(n,k);                w.print(res);                            }                    }        w.println();        w.close();    }}
