import java.util.Scanner; public class Chess {		static  void moveKnight(boolean[] visited, int knight) {		for (int i = -1; i < 3; i+=2 ) { // on traites les attaques du chevalier \\erreur mauvaise gestion des débordements			for (int j = -1; j <3; j+=2) {				for (int k = 1; k <3; k++) {					if ((knight+i*k+8)/8==(knight+8)/8 && (knight + j*(3-k)*8)<64 && (knight + j*(3-k)*8)>=0) {						visited[knight + i*k + j*(3-k)*8]|= true;					}					}				}			}	} 	public static void main(String[] args) {		Scanner in = new Scanner(System.in);		String temp = in.next();		int rook = (temp.charAt(0)-'a')*8+temp.charAt(1)-49;		temp =in.next();		int knight = (temp.charAt(0)-'a')*8+temp.charAt(1)-49;		boolean[] impossiblePlaces = new boolean[64];		impossiblePlaces[knight]=true;		for (int i =0; i<8; i++) { //On traite les attaques de la tour			impossiblePlaces[rook%8+8*i] |=true;			impossiblePlaces[(rook/8)*8+i]|=true;		}		moveKnight(impossiblePlaces,rook);		moveKnight(impossiblePlaces,knight);		int res = 0;		for (boolean test : impossiblePlaces) {			if (!test) {res++;}		}		System.out.println(res);		in.close();	} }
