import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader; import java.util.*; public class Main{       public static void main(String args[])    {        FastScanner input = new FastScanner();       int n = input.nextInt();       ArrayList<Integer> ans= new ArrayList<>();       int count =0;       HashSet<Integer> set = new HashSet<>();       HashSet<Integer> q = new HashSet<>();        for (int i = 0; i < n; i++) {            int value = input.nextInt();            if(value<0&&!set.contains(-value))            {                System.out.println("-1");                return;            }            if(value>0&&set.contains(value))            {                System.out.println("-1");                return;            }             if(value>0)            {                q.add(value);                set.add(value);            }            else            {                value =-value;                q.remove(value);                if(q.isEmpty())                {                    ans.add(set.size()*2);                    set.clear();                                   }            }        }        if(!q.isEmpty())        {            System.out.println("-1");            return;        }        StringBuilder result = new StringBuilder();        result.append(ans.size()+"\n");        for (Integer an : ans) {           result.append(an+" ");        }        result.append("\n");        System.out.println(result);    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
