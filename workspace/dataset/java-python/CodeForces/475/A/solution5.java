import java.util.*;import java.util.stream.*;Â /* * First col numOccupied = 0; * if k >= 1, numOccupied++; * numOccupied += (k - 4 + 2) / 3 * Second col, same * numOccupied += (k - 4 + 1) / 3 * Third aisle, k >= 3 * Fourth, same * numOccupied += (k - 4) / 3 */public class BayanBus {  private static final int numRowsWithoutBack = 10;    public static void main(String[] args) {    Scanner in = new Scanner(System.in);    int k = in.nextInt();    System.out.println(solve(k));  }    private static String solve(int k) {    StringBuilder sb = new StringBuilder();    String edge = makeEdge(numRowsWithoutBack + 2);    sb.append(edge + "\n");        // Number of occupied in aisles 1, 2, and 4.    int[] aisles = new int[4];    aisles[0] = getNumOccupied(1, 2, k);    aisles[1] = getNumOccupied(2, 1, k);    aisles[3] = getNumOccupied(4, 0, k);        aisles[2] = 0;    if (k >= 3) {      aisles[2] = 1;    }        boolean aisle3Occ = k >= 3;        sb.append(constructAisle(aisles[0], numRowsWithoutBack + 1, "O.", "#.", "|D|)\n"));    sb.append(constructAisle(aisles[1], numRowsWithoutBack + 1, "O.", "#.", "|.|\n"));    sb.append(constructThirdAisle(k >= 3, numRowsWithoutBack + 1, "O.", "#.", "..", "|\n"));    sb.append(constructAisle(aisles[3], numRowsWithoutBack + 1, "O.", "#.", "|.|)\n"));    sb.append(edge);        return sb.toString();  }    private static String makeEdge(int numRows) {    StringBuilder sb = new StringBuilder();    sb.append("+");        Arrays.stream(new int[numRows])      .forEach(i -> sb.append("--"));        sb.append("+");    return sb.toString();  }    private static int getNumOccupied(int backRow, int toAdd, int k) {    int toReturn = Math.max((k - 4 + toAdd) / 3, 0);    if (k >= backRow) {      return toReturn + 1;    }    return toReturn;  }    private static String constructAisle(int occupied, int numRows,                                       String occStr, String unoccStr, String end) {    StringBuilder sb = new StringBuilder();    sb.append("|");        Arrays.stream(new int[occupied])      .forEach(i -> sb.append(occStr));    Arrays.stream(new int[numRows - occupied])      .forEach(i -> sb.append(unoccStr));        sb.append(end);    return sb.toString();  }    private static String constructThirdAisle(boolean occ, int numRows,                                            String occSeat, String emptySeat, String remainder, String end) {    StringBuilder sb = new StringBuilder();    sb.append("|");        if (occ) {      sb.append(occSeat);    } else {      sb.append(emptySeat);    }        Arrays.stream(new int[numRows])      .forEach(i -> sb.append(remainder));    sb.append(end);    return sb.toString();  }}
