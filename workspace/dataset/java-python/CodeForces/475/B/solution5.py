import math,sys,bisect,heapqfrom collections import defaultdict,Counter,dequefrom itertools import groupby,accumulate#sys.setrecursionlimit(200000000)int1 = lambda x: int(x) - 1#def input(): return sys.stdin.readline().strip()input = iter(sys.stdin.buffer.read().decode().splitlines()).__next__ilele = lambda: map(int,input().split())alele = lambda: list(map(int, input().split()))ilelec = lambda: map(int1,input().split())alelec = lambda: list(map(int1, input().split()))def list2d(a, b, c): return [[c] * b for i in range(a)]def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]#MOD = 1000000000 + 7def Y(c):  print(["NO","YES"][c])def y(c):  print(["no","yes"][c])def Yy(c):  print(["No","Yes"][c])Â n,m = ilele()s1 = input()s2 = input()Y((s1[0] == '<' and s1[-1] == '>' and s2[0] == 'v' and s2[-1] == '^' )or(s1[0] == '>' and s1[-1] == '<' and s2[0] == '^' and s2[-1] == 'v'))
