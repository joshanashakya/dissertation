import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;  public class B632{            public static void main(String args[])    {           FastReader in=new FastReader();        PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));        int tc=1;             //tc=in.nextInt();        while(tc-->0)        {                    	int n=in.nextInt();			long arr[]=new long[n];						for(int i=0;i<n;i++)			{				arr[i]=in.nextLong();			}						long bobin=0;						char ch[]=in.nextLine().toCharArray();						for(int i=0;i<n;i++)			{				if(ch[i]=='B')				{					bobin+=arr[i];				}			}			long max=bobin;			long sum1=0;			long sum2=0;			for(int i=0;i<n;i++)			{				if(ch[i]=='A')				{					sum1+=arr[i];				}				else sum2+=arr[i];				max=Math.max(max,bobin+sum1-sum2);			}			sum1=0;			sum2=0;						for(int i=n-1;i>=0;i--)			{								if(ch[i]=='A')				{					sum1+=arr[i];				}				else sum2+=arr[i];				max=Math.max(max,bobin+sum1-sum2);							}					pr.println(max);                   }        pr.flush();    }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }          String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }
