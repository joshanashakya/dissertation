//package com.codeforces.EducationalRound78; import java.io.*;import java.util.Arrays;import java.util.StringTokenizer; public class Div2A {     static class FastReader {         BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            }            catch (IOException e) {                e.printStackTrace();            }            return str;        }    }     public static void main(String[] args) {         PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));         FastReader fsr = new FastReader();          int pLength;        int hLength;         String p;        String h;         boolean found1;        boolean found2;         int[] pcharIndex = new int[26];        int[] hcharIndex = new int[26];          int T = fsr.nextInt();          for (int i = 1; i <= T; i++) {             found2 = false;             p = fsr.nextLine();            h = fsr.nextLine();             pLength = p.length();            hLength = h.length();             Arrays.fill(pcharIndex, 0);             for (int j = 0; j < pLength; j++) {                pcharIndex[p.charAt(j) - 97]++;            }             for (int j = 0; j + pLength <= hLength; j++) {                 found1 = true;                 Arrays.fill(hcharIndex, 0);                 for (int k = j; k < j + pLength; k++) {                    hcharIndex[h.charAt(k) - 97]++;                }                 for (int k = 0; k < 26; k++) {                    if (hcharIndex[k] != pcharIndex[k]) {                        found1 = false;                        break;                    }                }                 if (found1) {                    out.println("YES");                    found2 = true;                    break;                }            }             if (!found2) out.println("NO");        }          out.flush();        out.close();    }}
