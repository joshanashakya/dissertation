import math N = 10**6+5spf = [-1]*(N+1)for i in range(N+1):    spf[i] = ifor i in range(2, int(math.sqrt(N))+1):    if spf[i] == i:        for j in range(i*2, N+1, i):            if spf[j] == j:                spf[j] = i def factorize(n):    d = {}    while n != 1:        p = spf[n]        if p in d:            d[p] += 1        else:            d[p] = 1        n //= p    return d table = [0]*31table[0] = 1for i in range(1, 31):    table[i] = table[i-1]*2 import bisectn = int(input())d = factorize(n)ans = 1for k in d.keys():    ans *= kcnt = 0while True:    cnt1 = 0    cnt_e = 0    max_v = 0    for k, v in d.items():        if v == 1:            cnt1 += 1        if v%2 == 0:            cnt_e += 1        max_v = max(max_v, v)    if cnt1 == len(d):        break    if cnt_e == len(d):        for k, v in d.items():            d[k] = v//2        cnt += 1    else:        j = bisect.bisect_left(table, max_v)        b = table[j]        for k in d.keys():            d[k] = b        cnt += 1print(ans, cnt)
