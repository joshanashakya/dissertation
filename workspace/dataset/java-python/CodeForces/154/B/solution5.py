import random, math, sysfrom copy import deepcopy as dcfrom bisect import bisect_left, bisect_rightfrom collections import Counter input = sys.stdin.readline  # Function to call the actual solutiondef solution(li, n, m):	s = [[] for i in range(n)]	for j in range(2, n, 2):		s[j] = [2]	for i in range(3, n, 2):		if s[i]:			continue		for j in range(i, n, i):			s[j].append(i)	p, d, r = {}, set(), [''] * m	for j in range(len(li)):		t = li[j][0]		i = int(li[j][1])		if t[0] == '+':			if i in d:				r[j] = 'Already on'				continue			for q in s[i]:				if q in p:					r[j] = 'Conflict with ' + str(p[q])					break			else:				r[j] = 'Success'				d.add(i)				for q in s[i]: p[q] = i		else:			if i in d:				r[j] = 'Success'				for q in s[i]: p.pop(q)				d.remove(i)			else:				r[j] = 'Already off'	return r   # Function to take inputdef input_test():	# for _ in range(int(input())):		# n = int(input())		n, m = map(int, input().strip().split(" "))		quer = []		for i in range(m):			qu = list(map(str, input().strip().split(" ")))			quer.append(qu)		# a, b, c = map(int, input().strip().split(" "))		# li = list(map(int, input().strip().split(" ")))		out = solution(quer, n+1, m)		for i in out:			print(i) # Function to test my codedef test():	pass # seive()input_test()# test()
