import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastI in = new FastI(inputStream);        PrintWriter out = new PrintWriter(outputStream);        ACommonPrefixes solver = new ACommonPrefixes();        solver.solve(1, in, out);        out.close();    }     static class ACommonPrefixes {        public void solve(int testNumber, FastI sc, PrintWriter out) {            int t = sc.nextInt();            while (t > 0) {                t--;                int n = sc.nextInt();                int[] a = new int[n];                for (int i = 0; i < n; i++) {                    a[i] = sc.nextInt();                }                String[] o = new String[n + 1];                for (int i = 0; i < n + 1; i++) {                    o[i] = "";                }                char c = 'a';                for (int j = 0; j < 200; j++) {                    o[0] += c;                }                for (int i = 0; i < n; i++) {                     for (int j = 0; j < a[i]; j++) {                        o[i + 1] += o[i].charAt(j);                    }                    c = (char) ((o[i].charAt(a[i]) - 'a' + 1) % 26 + 'a');                    for (int j = 0; j < 200 - a[i]; j++) {                        o[i + 1] += c;                    }                }                for (String i : o) {                    out.println(i);                }            }        }     }     static class FastI {        BufferedReader br;        StringTokenizer st;         public FastI(InputStream inputStream) {            br = new BufferedReader(new                    InputStreamReader(inputStream));         }         public String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
