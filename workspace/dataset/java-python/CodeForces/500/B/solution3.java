import java.util.*;import java.io.*; public class Main2 {	static class FastReader{         BufferedReader br;         StringTokenizer st;         public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}        String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}         catch (IOException  e){e.printStackTrace();}}return st.nextToken();}        int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}        String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }     }	static FastReader sc = new FastReader();	static PrintWriter out = new PrintWriter(System.out);	public static void main (String[] args) {		int z = 1;//    	z = sc.nextInt();    	while(z-->0) {    		int n = sc.nextInt();    		int a[] = new int[n+1];    		for(int i=1;i<=n;i++) a[i] = sc.nextInt();    		DSU d = new DSU(n+1);    		for(int i=1;i<=n;i++) {    			String s = sc.next();    			for(int j=1;j<=n;j++) {    				char c = s.charAt(j-1);    				if(c == '1') d.join(i, j);    			}    		}    		for(int i=1;i<=n;i++) {    			for(int j=i+1;j<=n;j++) {    				if(d.findPar(i) == d.findPar(j)) {    					if(a[i]>a[j]) {    						int temp = a[i];    						a[i] = a[j];    						a[j] = temp;    					}    				}    			}    		}    		for(int i=1;i<=n;i++) {    			int val = a[i];    			out.write(val+" ");    		}		}		out.write("\n");		out.close();	}}class DSU {	int par[];	int size[];	DSU(int n) {		par = new int[n];		size = new int[n];		Arrays.fill(size, 1);		for(int i=0;i<n;i++) par[i] = i;	}	int findPar(int x) {		if(x == par[x]) return x;				return par[x] = findPar(par[x]);	}	boolean join(int u,int v) {		int fu = findPar(u);		int fv = findPar(v);		if(fu!=fv) {			if(size[fu]>size[fv]) {				par[fv] = fu;				size[fu] += size[fv];			}			else {				par[fu] = fv;				size[fv] += size[fu];			}			return true;		}		else return false;	}}
