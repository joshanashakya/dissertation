import java.io.*;import java.math.*;import java.util.*; public class Main {	static final long MOD = 1000000007L;	static final int INF = 50000000;	public static void main(String[] args) {		FastScanner sc = new FastScanner();		PrintWriter pw = new PrintWriter(System.out);				int N = sc.ni();		int K = sc.ni();		ArrayList<Integer>[] tree = new ArrayList[N];		for (int i = 0; i < N; i++)			tree[i] = new ArrayList<Integer>();		for (int i = 1; i <= K; i++) {			tree[0].add(i);		}		for (int i = 1; i < N-K; i++) {			tree[i].add(i+K);		}		int span = (N-1)/K;		if ((N-1)%K==0) {			pw.println(2*span);		} else if ((N-1)%K==1) {			pw.println(2*span+1);		} else {			pw.println(2*span+2);		}		for (int i = 0; i < N; i++) {			for (int j: tree[i])				pw.println((i+1) + " " + (j+1));		}		pw.close();	}Â 	    static class FastScanner {         BufferedReader br;         StringTokenizer st;           public FastScanner() {             br = new BufferedReader(new InputStreamReader(System.in));         }           String next() {             while (st == null || !st.hasMoreElements()) {                 try {                     st = new StringTokenizer(br.readLine());                } catch (IOException  e) {                     e.printStackTrace();                 }             }             return st.nextToken();         }                int ni() {             return Integer.parseInt(next());         }          long nl() {             return Long.parseLong(next());         }           double nd() {             return Double.parseDouble(next());         }           String nextLine() {            String str = "";             try {                 str = br.readLine();             } catch (IOException e) {                e.printStackTrace();             }             return str;        }    }}
