import java.io.*;import java.util.*;  public class Main {    static int[] arr;    static double percent;    static int size;    static double low = 0;    static double high = 1000;    public static void main(String[] args) throws Exception{        Scanner scan = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        size = scan.nextInt();        percent = scan.nextInt();        arr = new int[size];        for (int i = 0; i < size ; i++) {            arr[i] = scan.nextInt();        }        pw.println(binarySearch());        pw.flush();        pw.close();    }    static double binarySearch(){        double mid;        double result = -1;        for (int i = 0; i < 100 ; i++) {            mid = low + ((high - low) / 2);            if(isPossible(mid)){                result = mid;                low = mid + 1;            }else{                high = mid - 1;            }        }        return result;    }    static boolean isPossible(double num){        double take = 0;        double give = 0;         for (int i = 0; i < size; i++) {            if(arr[i] > num){                take +=  (arr[i] - num);            }else if(arr[i] < num){                give += (num - arr[i]);            }        }        double canGive = take * ((100 - percent)/100);        if(canGive >= give)            return true;        else            return false;    }     static class Scanner    {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));}         public String next() throws IOException        {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int nextInt() throws IOException {return Integer.parseInt(next());}         public long nextLong() throws IOException {return Long.parseLong(next());}         public String nextLine() throws IOException {return br.readLine();}         public double nextDouble() throws IOException        {            String x = next();            StringBuilder sb = new StringBuilder("0");            double res = 0, f = 1;            boolean dec = false, neg = false;            int start = 0;            if(x.charAt(0) == '-')            {                neg = true;                start++;            }            for(int i = start; i < x.length(); i++)                if(x.charAt(i) == '.')                {                    res = Long.parseLong(sb.toString());                    sb = new StringBuilder("0");                    dec = true;                }                else                {                    sb.append(x.charAt(i));                    if(dec)                        f *= 10;                }            res += Long.parseLong(sb.toString()) / f;            return res * (neg?-1:1);        }         public boolean ready() throws IOException {return br.ready();}     }}
