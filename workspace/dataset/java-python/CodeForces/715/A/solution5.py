#include<iostream>#include<stack>#include<string>#include<map>#include<algorithm>#include<vector>#include<queue>#include<list>#include<ctime>#include<math.h>#include<functional>#include<cstring>#include<iomanip>#include<set>#include<utility>#include<limits.h>#include<stdio.h>typedef long long ll;//using namespace std;const int maxn = 1e5+10;const int mod = 1e9 + 7;const int inf = 0x3fffffff; /*ll gcd(ll a, ll b)//���Լ��{return b == 0 ? a : gcd(b, a%b);}ll fast_pow(ll a, ll k)//������{ll ans = 1;while (k != 0){if (k & 1) ans = (ans*a) % mod;k >>= 1;a = (a*a) % mod;}return ans;}ll C(ll n, ll m)//��������ж�{ll ans = 1;for (int i = 1;i <= m;i++)ans = ans*(n - m + i) / i;return ans;}bool is_prime(ll x)//�����ж�{	if (x == 2 || x == 3) return true;	if (x % 6 != 1 && x % 6 != 5) return false;	ll temp = sqrt(1.0*x);	for (ll i = 5;i <= temp;i += 6)		if (x%i == 0 || x % (i + 2) == 0) return false;	return true;}int prime[maxn], pnum = 0;//������pnum������bool p[maxn] = { 0 };//�����ɸ������Ϊtruevoid Find_Prime()//�����ɸѡ��������һ���������Ͱ����ı���ȫ��ɸ��{	for (int i = 2;i < maxn;i++)	{		if (p[i] == false)//�����Ͳ���һ����һ�������ж�������		{			prime[pnum++] = i;			for (int j = i + i;j < maxn;j += i)//ɸ�������ı���				p[j] = true;		}	}}*/ll n;int main(){	cin >> n;	ll temp = 2;	for (ll i = 1;i <= n;i++)	{		ll k = (i * (i + 1)*(i + 1) - temp);		cout << k << endl;		temp = i;	}	return ~~(0 - 0);}
