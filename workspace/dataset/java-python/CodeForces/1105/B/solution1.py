#Author : Zahin uddin#Github : https://github.com/Zahin52  from sys import *#import math#import queuefrom collections import defaultdictinput=stdin.readlinelistInput=lambda:list(map(int,input().strip().split()))lineInput= lambda:map(int,input().strip().split())# sJoin=lambda a,sep : f'{sep}'.join(a)# arrJoin=lambda a,sep : f'{sep}'.join(map(str,a))#print=stdout.writedef isPrime(n):    if(n <= 1):        return False    if(n <= 3):        return True    if(n % 2 == 0 or n % 3 == 0):        return False    for i in range(5,int(math.sqrt(n) + 1), 6):        if(n % i == 0 or n % (i + 2) == 0):            return False    return Truedef main():    d=defaultdict(int)    n,k=lineInput()    s=input().strip()    i=0    while i<len(s):               temp=s[i]        c=0        #print("i1",i,temp,c)        #i+=1                        while i<len(s):            #print("i2",i,temp,c)                        if s[i]==temp:                c+=1                i+=1                if c==k:                    d[s[i-1]]+=1                    c=1                    break            else:                #i-=1                break    #print(d.values())    ans=max(d.values()) if len(d.values())!=0 else 0    print ( ans )        if __name__ == "__main__":    main()
