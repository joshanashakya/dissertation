import java.util.Scanner;import java.util.Queue;import java.util.LinkedList; public class Review6 { 	public static void main(String[] args) {		Scanner UserInput = new Scanner(System.in);		int num = UserInput.nextInt();		int size = UserInput.nextInt();		int[] moments = new int[num];		int[] times = new int[num];		for (int i = 0; i < num; i++) {			moments[i] = UserInput.nextInt();			times[i] = UserInput.nextInt();		}		Queue<Integer> queries = new LinkedList<>();		Queue<Long> output = new LinkedList<>();		Queue<Integer> wrongs = new LinkedList<>();		long next = moments[0] + times[0];		output.add(next);		for (int i = 1; i < num; i++) {			if (moments[i] < next) {				if (queries.size() < size) {					queries.add(i);				} else {					wrongs.add(output.size() + queries.size());				}			} else {				queries.add(i);				while (moments[i] >= next) {					int temp = queries.remove();					if (queries.isEmpty()) {						next = moments[i] + times[i];					} else						next = next + times[temp];					output.add((long)next);				}			}		}		int count = 0;		while (!output.isEmpty()) {			while (!wrongs.isEmpty() && wrongs.peek() == count) {				System.out.print(-1 + " ");				wrongs.remove();			}			System.out.print(output.remove() + " ");			count++;		}		while (!queries.isEmpty()) {			while (!wrongs.isEmpty() && wrongs.peek() == count) {				System.out.print(-1 + " ");				wrongs.remove();			}			next += times[queries.remove()];			System.out.print(next + " ");			count++;		}		while (!wrongs.isEmpty() && wrongs.peek() == count) {			System.out.print(-1 + " ");			wrongs.remove();		}		UserInput.close();	} }
