import java.util.*; public class Main {     public static void main(String[] args) {        Scanner reader = new Scanner(System.in);        int n = reader.nextInt();        int b = reader.nextInt();        int[] t = new int[n];        int[] d = new int[n];        for (int i = 0; i < n; i++){            t[i] = reader.nextInt();            d[i] = reader.nextInt();        }        // O(3n)        Queue<Integer> queue = new LinkedList<>();        long[] result = new long[n];        int resultIdx = 0;        long finish = t[0];        for (int i = 0; i < n; i++){            if (t[i] >= finish){                while (!queue.isEmpty()){                    finish+= queue.remove();                     while(result[resultIdx] == -1) resultIdx++;                    result[resultIdx] = finish;                    resultIdx++;                     if (t[i] < finish){                        break;                    }                }                if (t[i] >= finish){                    finish= t[i] + d[i];                     while(result[resultIdx] == -1) resultIdx++;                    result[resultIdx] = finish;                    resultIdx++;                } else {                    queue.add(d[i]);                }            } else {                if (queue.size() < b){                    queue.add(d[i]);                } else {                    result[i] = -1;                }            }        }        // Process all waiting requests in queue        while (!queue.isEmpty()){            finish+= queue.remove();            while(result[resultIdx] == -1) resultIdx++;            result[resultIdx] = finish;            resultIdx++;        }        // Print result        for (int i = 0; i < n; i++){            System.out.print(result[i] + " ");        }    }}
