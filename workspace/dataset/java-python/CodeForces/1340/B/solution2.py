def b_d(x):    dec = 0    for i in x:        dec = 2 * dec + int(i)    return dec  n, c = map(int, input().split())a = []for i in range(n):    st = input()    a.append(st)b = [[] for i in range(n + 1)]cc = "1111111"count = 0bina = ["1110111", "0010010", "1011101", "1011011", "0111010", "1101011", "1101111", "1010010", "1111111", "1111011"]for i in range(n):    for j in range(10):        if (b_d(a[i]) & b_d(bina[j]) == b_d(a[i])):            e = bin((b_d(a[i]) ^ b_d(cc)) & (b_d(bina[j]))).replace("0b", "")            count = 0            for l in e:                if (l == "1"):                    count += 1            b[i].append([j, count]) store = [[0] * 10 for i in range(n + 1)]dp = [[-1] * (c + 1) for i in range(n + 1)]dp[n][c] = cd = []for i in range(n, 0, -1):    d = b[i - 1]    for j in range(c + 1):        if (dp[i][j] >= 0):            for k in d:                if (k[1] <= j):                    dp[i - 1][j - k[1]] = max(k[0], dp[i - 1][j - k[1]])                    if (k[0] >= dp[i-1][j - k[1]]):                        store[i - 1][k[0]] = k[1]if (dp[0][0] == -1):    print(-1)else:    i = 0    ans = ""    j = 0    while (i < n):        ans += str(dp[i][j])        j += store[i][dp[i][j]]        i += 1    print(ans)
