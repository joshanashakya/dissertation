import java.io.*;import java.util.*;public class Ishu{    static class Node    {    int[] a;    Node() {}    Node(int[] a)        {        this.a = a;        }    }    static Scanner scan = new Scanner(System.in);    static BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));         static void tc() throws Exception    {    int n = scan.nextInt();    int k   = scan.nextInt();    int i,j,l,m;    boolean pos = true;    String[] str = new String[n];    String[] digit = new String[]{                                    "1110111",                                      "0010010",                                      "1011101",                                     "1011011",                                     "0111010",                                     "1101011",                                     "1101111",                                     "1010010",                                     "1111111",                                     "1111011"                                        };                                        int[][] can = new int[n][10];    for(i=0;i<n;++i)        {        str[i] = scan.next();        Arrays.fill(can[i], -1);        }    for(i=0;i<n;++i)        {        String cur = str[i];        for(j=0;j<=9;++j)            {            String temp = digit[j];            boolean flag = true;            for(l=0;l<7;++l)                if(temp.charAt(l) == '0' && cur.charAt(l) == '1')                    {                    flag = false;                    break;                    }                                if(flag)                {                int cnt = 0;                for(l=0;l<7;++l)                    if(temp.charAt(l) == '1' && cur.charAt(l) == '0')                        ++cnt;                                        can[i][j] = cnt;                }            }        }            boolean[][] dp = new boolean[n+1][k+1];    for(j=0;j<10;++j)        if(can[n-1][j] != -1 && can[n-1][j] <= k)            dp[n][can[n-1][j]] = true;                for(i=n-1;i>=1;--i)        {        for(j=0;j<10;++j)            {            if(can[i-1][j] != -1)                {                for(l=0;l<=k;++l)                    if(dp[i+1][l] && l + can[i-1][j] <= k)                        dp[i][l+can[i-1][j]] = true;                }            }        }            char[] ans = new char[n];    for(i=0;i<n;++i)        {        for(j=9;j>=0;--j)            {            if(can[i][j] == -1)                continue;            int oper = can[i][j];            if(i + 2 > n)                {                if(k == oper)                    {                    ans[i] = (char)('0' + j);                    break;                    }                }            else if(k - oper >= 0 && dp[i+2][k - oper])                {                k -= oper;                ans[i] = (char)('0' + j);                break;                }            }        if(j < 0)            {            pos = false;            break;            }         }    if(!pos)        {        output.write("-1\n");        output.flush();        return;        }    for(i=0;i<n;++i)        output.write(String.valueOf(ans[i]));    output.write("\n");    output.flush();    }        public static void main(String[] args) throws Exception    {    int t = 1;    //t = scan.nextInt();    while(t-- > 0)        tc();    }}
