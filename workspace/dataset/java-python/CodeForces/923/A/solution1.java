import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        long start=System.currentTimeMillis();        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=1;        while(T-->0)        {            int x2=input.nextInt();            ArrayList<Integer> list=primeFactors(x2);            int p=list.get(list.size()-1);            int y=x2/p;            y--;            int l=y*p+1;            int r=x2;            int min=Integer.MAX_VALUE;            for(int i=l;i<=r;i++)            {                list=primeFactors(i);                if(list.size()>1)                {                    p=list.get(list.size()-1);                    y=i/p;                    y--;                    int l1=y*p+1;                    min=Math.min(min,l1);                }            }            out.println(min);        }        long end= System.currentTimeMillis();        //out.println(end-start);        out.close();    }    public static ArrayList<Integer> primeFactors(int n)    {        ArrayList<Integer> list=new ArrayList<>();        while(n%2==0)        {            list.add(2);            n/=2;        }        for(int i=3;i<=Math.sqrt(n);i+=2)        {            while(n%i==0)            {                list.add(i);                n/=i;            }        }        if(n>2)        {            list.add(n);        }        return list;    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {             return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
