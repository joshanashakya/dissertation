import java.io.*;import java.util.*;  /** * Created by Katushka on 08.02.2020. */public class PrimalSport {     private static int maxPrimeDivs(int n) {        int d = 2;        int result = 0;         while (d * d <= n) {            if (n % d == 0) {                n /= d;                if (result < d) {                    result = d;                }            } else {                d++;            }        }        if (n != 1) {            result = Math.max(result, n);        }        return result;    }     public static void main(String[] args) throws FileNotFoundException {        InputReader in = new InputReader(System.in);        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));         int x = in.nextInt();         boolean[] erats = new boolean[x + 1];        for (int j = 2; j < erats.length; ++j) {            if (!erats[j]) {                for (long k = ((long) j) * j; k < erats.length; k += j) {                    erats[(int) k] = true;                }            }        }         int ans = x;        int maxPrimeDiv = maxPrimeDivs(x);         for (int i = x - 1; i >= x - maxPrimeDiv + 1; i--) {            if (!erats[i]) {                ans = Math.min(ans, i);            } else {                int p = maxPrimeDivs(i);                ans = Math.min(ans, i - p + 1);            }        }        out.println(ans);        out.close();    }     private static class InputReader {        public BufferedReader reader;        public StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public String nextString() {            try {                return reader.readLine();            } catch (IOException e) {                throw new RuntimeException(e);            }        }         public int nextInt() {            return Integer.parseInt(next());        }         public long nextLong() {            return Long.parseLong(next());        }         public char nextChar() {            return next().charAt(0);        }    }}
