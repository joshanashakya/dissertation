//package graphs;import java.util.*; public class PW { 	public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner s=new Scanner(System.in);				//int a=s.nextInt();		//lon n=s.nextLong();		int n=s.nextInt();		long k=s.nextInt();		long c=0,ans=0;		List<Long> l=new ArrayList<>();		for(int i=0;i<n;i++)		{			long a=s.nextLong();			long b=s.nextLong();						ans+=Math.min(a, b);						l.add(Math.min(2*a, b)-Math.min(a, b));					}				Collections.sort(l);						for(int i=l.size()-1;i>=0;i--)		{			if(c<k)			{				ans+=l.get(i);				c++;			}						}				System.out.println(ans);			}				public static long solve(int n, int r)    {          long p = 1, k = 1;        if (n - r < r) {            r = n - r;        }         if (r != 0) {            while (r > 0) {                p *= n;                k *= r;                 long m = __gcd(p, k);                                 p /= m;                k /= m;                 n--;                r--;            }                    }        else {            p = 1;        }                 //System.out.println(p);        return p;    }			public static long gcd(long a,long b)	{		if(a==0||b==0)			return a+b;		return gcd(b,(a%b));	}		public static long __gcd(long n1, long n2)    {        long gcd = 1;         for (int i = 1; i <= n1 && i <= n2; ++i) {            // Checks if i is factor of both integers            if (n1 % i == 0 && n2 % i == 0) {                gcd = i;            }        }        return gcd;    }		public static boolean prime(int n)	{		if(n<=2)			return true;				for(int i=2;i<=Math.sqrt(n);i++)		{			if(n%i==0)				return false;		}				return true;			}}class pair{	//public:		long f;		long s;		pair(long x,long y)		{			f=x;			s=y;		}        }
