/*If you want to aim high, aim highDon't let that studying and grades consume youJust live life young******************************If I'm the sun, you're the moonBecause when I go up, you go down*******************************I'm working for the day I will surpass youhttps://www.a2oj.com/Ladder16.html*/import java.util.*;import java.io.*;import java.math.*;Â    public class B   {      public static void main(String omkar[]) throws Exception      {         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));           StringTokenizer st = new StringTokenizer(infile.readLine());         int N = Integer.parseInt(st.nextToken());         ArrayList<Thing> ls = new ArrayList<Thing>();         for(int i=0; i < 2*N-1; i++)         {            st = new StringTokenizer(infile.readLine());            int a = i+2;            for(int b=1; b < a; b++)            {               int v = Integer.parseInt(st.nextToken());               ls.add(new Thing(a,b,v));            }         }         Collections.sort(ls);         HashSet<Integer> seen = new HashSet<Integer>();         int[] res = new int[2*N+1];         for(Thing t: ls)         {            if(seen.contains(t.a) || seen.contains(t.b))               continue;            seen.add(t.a);            seen.add(t.b);            res[t.a] = t.b;            res[t.b] = t.a;         }         StringBuilder sb = new StringBuilder();         for(int i=1; i <= 2*N; i++)            sb.append(res[i]+" ");         System.out.println(sb);      }   }   class Thing implements Comparable<Thing>   {      public int a;      public int b;      public int val;            public Thing(int x, int y, int z)      {         a = x;         b = y;         val = z;      }      public int compareTo(Thing oth)      {         return oth.val-val;      }   }
