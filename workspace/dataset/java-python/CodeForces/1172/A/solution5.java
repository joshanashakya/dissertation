import java.io.BufferedReader;import java.io.File;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class A1172 {  public static void main(String[] args) throws IOException {    Scanner sc = new Scanner(System.in);    PrintWriter pw = new PrintWriter(System.out);     int n = sc.nextInt();    int[] seenAfterNSteps = new int[n+1];    for (int i = 0; i < n; i++) {      seenAfterNSteps[sc.nextInt()] = 0;    }    int[] pile = new int[n];    for (int i = 0; i < n; i++) {      pile[i] = sc.nextInt();      seenAfterNSteps[pile[i]] = i+1;    }     boolean canUseSetup = seenAfterNSteps[1] != 0;    int nextNumber = pile[n-1]+1;     if(canUseSetup) {      int pos1 = seenAfterNSteps[1]-1;      for (int i = pos1+1; i < n; i++) {        if (pile[i] != pile[i-1] + 1)          canUseSetup = false;      }      for (int i = nextNumber; i <= n; i++) {        if (seenAfterNSteps[i] > (i-nextNumber))          canUseSetup = false;      }    }     if(canUseSetup) {      pw.println(n-nextNumber+1);    } else {      int max = -1;      for (int i = 1; i <= n; i++) {        max = Math.max(max, seenAfterNSteps[i] - (i-1));      }      pw.println(max+n);    }     pw.flush();    pw.close();  }  static class Scanner  {    StringTokenizer st; BufferedReader br;    public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));}    public Scanner(String s) throws FileNotFoundException {	br = new BufferedReader(new FileReader(new File(s)));}    public String next() throws IOException {while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());return st.nextToken();}    public int nextInt() throws IOException {return Integer.parseInt(next());}    public long nextLong() throws IOException {return Long.parseLong(next());}    public String nextLine() throws IOException {return br.readLine();}    public boolean ready() throws IOException {return br.ready();}  }}
