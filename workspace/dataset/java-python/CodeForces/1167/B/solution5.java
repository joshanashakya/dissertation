import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     void run(FastScanner in, PrintWriter out) {         int product1, product2;        System.out.println(String.format("? %d %d", 1, 2));        System.out.flush();        product1 = in.nextInt();         System.out.println(String.format("? %d %d", 2, 3));        System.out.flush();        product2 = in.nextInt();         int[] ret = new int[6];        int i = 0;        for (int num : nums(product1, product2)) {            ret[i++] = num;        }         System.out.println(String.format("? %d %d", 4, 5));        System.out.flush();        product1 = in.nextInt();         System.out.println(String.format("? %d %d", 5, 6));        System.out.flush();        product2 = in.nextInt();         for (int num : nums(product1, product2)) {            ret[i++] = num;        }         System.out.print("! ");        for (int num : ret) System.out.print(num + " ");        System.out.println();    }     int[] nums(int product1, int product2) {        int[] ret = new int[3];        Set<Integer> s1 = options(product1);        Set<Integer> s2 = options(product2);        s1.retainAll(s2);        for (int num : s1) ret[1] = num;        ret[0] = product1/ret[1];        ret[2] = product2/ret[1];        return ret;    }     Set<Integer> options(int product) {        if (product % 23 == 0) {            return new HashSet<>(Arrays.asList(23, product/23));        } else if (product % 7 == 0) {            return new HashSet<>(Arrays.asList(42, product/42));        } else if (product % 5 == 0) {            return new HashSet<>(Arrays.asList(15, product/15));        } else if (product == 32) {            return new HashSet<>(Arrays.asList(8, 4));        } else {            return new HashSet<>(Arrays.asList(16, product/16));        }    }      static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
