import java.io.*;import java.util.*;import java.math.*; public class A293 {    static char[] sarr;    public static void main(String[] args) throws IOException {        FastScanner fs=new FastScanner();        PrintWriter out = new PrintWriter(System.out);        // int T = 1;         // int T=fs.nextInt();        // for (int tt=0; tt<T; tt++) {        // }        String s = fs.next();        String t = fs.next();        int n = s.length();        int i=0;        while (i<n && s.charAt(i)==t.charAt(i)) {            i++;        }        if (i==n) {            out.println("No such string");        }        else {            String l=getNext(s);            if (l.equals(t)) {                out.println("No such string");            }            else {                out.println(l);            }            // int diff = 0;            // for (int j=i; j<n; j++) {            //     diff+=t.charAt(j)-s.charAt(j);            //     out.println(diff);            // }            // if (t.charAt(i)-s.charAt(i)==1) {            //     out.println("No such string");            // }            // else {            //     out.println(s.substring(0,i)+)            // }        }        out.close();    }     static String getNext(String s) {        int i = s.length()-1;        StringBuilder sb = new StringBuilder();        while (s.charAt(i)=='z') {            sb.append('a');            i--;        }        sb.append((char)(s.charAt(i)+1));        i--;        while (i>=0) {            sb.append(s.charAt(i));            i--;        }        return sb.reverse().toString();    }     static final Random random=new Random();        static void ruffleSort(int[] a) {        int n=a.length;//shuffle, then sort         for (int i=0; i<n; i++) {            int oi=random.nextInt(n), temp=a[oi];            a[oi]=a[i]; a[i]=temp;        }        Arrays.sort(a);    }        static class FastScanner {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");        String next() {            while (!st.hasMoreTokens())                try {                    st=new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }                int nextInt() {            return Integer.parseInt(next());        }        int[] readArray(int n) {            int[] a=new int[n];            for (int i=0; i<n; i++) a[i]=nextInt();            return a;        }        long nextLong() {            return Long.parseLong(next());        }    } }
