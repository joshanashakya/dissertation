import java.util.Arrays;import java.util.BitSet;import java.util.Scanner; /** * Created by jouke on 8/23/15. */public class CF_549B {   public static void main(String[] args) {    try (Scanner s = new Scanner(System.in)) {      int n = s.nextInt();      BitSet[] contacts = new BitSet[n];       for(int i = 0; i<n; i++) {        contacts[i] = bitSetFromString(s.next());      }       int[] guess = new int[n];      for (int i = 0; i < n; i++) {        guess[i] = s.nextInt();      }       BitSet invitees = new BitSet(n);       //in the trivial case solution is already complete      boolean trivial = true;      for (int i = 0; i < n; i++) {        if (guess[i] == 0) {          trivial = false;          break;        }      }       if (!trivial) {         BitSet open = new BitSet(n); //set of not yet solved potential invitees        for (int i = 0; i < n; i++ ) {          open.set(i);        }        int[] calls = new int[n];         while(open.cardinality() > 0) {          boolean flag = false;           for (int i = open.nextSetBit(0); i >= 0; i = open.nextSetBit(++i)) {            if (calls[i] == guess[i]) {              open.clear(i);              invitees.set(i);              for (int j = contacts[i].nextSetBit(0); j >= 0; j = contacts[i].nextSetBit(++j)) {                calls[j]++;              }              flag = true;            } else if (calls[i] > guess[i]) {              open.clear(i);            }          }           if (!flag) {            break;          }        }      }        System.out.println(invitees.cardinality());      for (int i = invitees.nextSetBit(0); i >= 0; i = invitees.nextSetBit(++i)) {        System.out.print((i+1) + " ");      }    }  }   public static BitSet bitSetFromString(String string) {    BitSet bs = new BitSet(string.length());     for (int i = 0; i < string.length(); i++) {      if (string.charAt(i) == '1') {        bs.set(i);      }    }     return bs;  }}
