import sys, mathimport

copyimport
heapq from collections import
    dequeinput = sys.stdin.readline   # inputdef ip(): return int(input())def sp(): return str(input().rstrip()) def mip(): return map(int, input().split())def msp(): return map(str, input().split()) def lmip(): return list(map(int, input().split()))def lmsp(): return list(map(str, input().split())) #gcd, lcmdef gcd(x, y):    while y:        x, y = y, x % y    return x def lcm(x, y):    return x * y // gcd(x, y) #primedef isprime(x):    if x==1: return False    for i in range(2, int(x**0.5)+1):        if x%i==0:            return False    return True # Union Find# p = {i:i for i in range(1, n+1)}def find(x):    if x == p[x]:        return x    q = find(p[x])    p[x] = q    return q def union(x, y):    global n    x = find(x)    y = find(y)     if x != y:        p[y] = x ############### Main! ############### t = ip()while t:    t-=1    n,m,k = mip()    a=1;b=1    i=-1    while n%2==0:        n//=2        a*=2    while m%2==0:        m//=2        b*=2    print("NO" if a*b<k else "YES") ######## Priest W_NotFoundGD ########
