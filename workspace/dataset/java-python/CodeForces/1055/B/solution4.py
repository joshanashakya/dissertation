import sys  def Find(parent, x):    if parent[x] != x:        parent[x] = Find(parent, parent[x])    return parent[x]    def Union(parent, rank, x, y):    x_root = Find(parent, x)    y_root = Find(parent, y)        if x_root == y_root:        return            if rank[x_root] < rank[y_root]:        parent[x_root] = y_root    elif rank[x_root] > rank[y_root]:        parent[y_root] = x_root    else:        parent[x_root] = y_root        rank[y_root] += 1     hair_n, request_n, fav = map(int, sys.stdin.readline().split())hair = [-1] + list(map(int, sys.stdin.readline().split()))parent_list = [i for i in range(hair_n + 1)]rank_list = [0 for i in range(hair_n + 1)]ans = 0 for i in range(1,hair_n):    if hair[i] > fav and hair[i+1] > fav:        Union(parent_list, rank_list, i, i+1)for i in range(1,hair_n+1):    if i == parent_list[i] and hair[i] > fav:        ans += 1        for r in range(request_n):    query = list(map(int, sys.stdin.readline().split()))    if query[0] == 1:        growing_hair = query[1]        change = query[2]        prev_hair = hair[growing_hair]        hair[growing_hair] += change                if hair[growing_hair] > fav and prev_hair <= fav:            ans += 1            if hair[growing_hair - 1] > fav:                ans -= 1            if growing_hair < hair_n:                if hair[growing_hair + 1] > fav:                    ans -= 1    else:        print(ans)
