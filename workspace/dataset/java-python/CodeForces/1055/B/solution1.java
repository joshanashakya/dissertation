/*If you want to aim high, aim highDon't let that studying and grades consume youJust live life young******************************What do you think? What do you think?1st on Billboard, what do you think of itNext is a Grammy, what do you think of itHowever you think, I’m sorry, but shit, I have no fcking interest*******************************I'm standing on top of my Monopoly boardThat means I'm on top of my game and it don't stoptil my hip don't hop anymorehttps://www.a2oj.com/Ladder16.html*******************************Shining through the city with a little funk and soul*/import java.util.*;import java.io.*;import java.math.*;    public class B   {      public static void main(String hi[]) throws Exception      {         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));         StringTokenizer st = new StringTokenizer(infile.readLine());         int N = Integer.parseInt(st.nextToken());         int M = Integer.parseInt(st.nextToken());         int L = Integer.parseInt(st.nextToken());         long[] arr = new long[N];         st = new StringTokenizer(infile.readLine());         for(int i=0; i < N; i++)            arr[i] = Long.parseLong(st.nextToken());         StringBuilder sb = new StringBuilder();         boolean[] cut = new boolean[N];         for(int i=0; i < N; i++)            if(arr[i] > L)               cut[i] = true;         int res = 0;         boolean lol = cut[0];         for(int i=1; i < N; i++)            if(lol != cut[i])            {               if(lol)                  res++;               lol = cut[i];            }         if(lol)            res++;         while(M-->0)         {            st = new StringTokenizer(infile.readLine());            int tag = Integer.parseInt(st.nextToken());            if(tag == 0)               sb.append(res+"\n");            else            {               int dex = Integer.parseInt(st.nextToken())-1;               int val = Integer.parseInt(st.nextToken());               boolean small = arr[dex] <= L;               arr[dex] += val;               if(small && arr[dex] > L)               {                  if(N == 1)                     res++;                  else                  {                     if(dex == 0 && N >= 2 && !cut[1])                        res++;                     else if(dex == N-1 && dex > 0 && !cut[dex-1])                        res++;                     else if(dex > 0 && dex < N-1)                     {                        boolean a = cut[dex-1];                        boolean b = cut[dex+1];                        if(a && b)                           res--;                        else if(!a && !b)                           res++;                     }                  }                  cut[dex] = true;               }            }         }         System.out.print(sb);      }   }
