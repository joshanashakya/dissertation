//package testing;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.HashMap;import java.util.Random;import java.util.StringTokenizer;import java.util.TreeSet;  import java.util.*; public class A {	static public class Pair{		int a,b,c;		public Pair(int a,int b,int c) {			this.a = a;			this.b = b;			this.c = c;		}	}	static class cmp implements Comparator<Pair>{		public int compare(Pair p,Pair q) {			if(p.a<q.a) {				return -1;			}			return 1;		}	}	public static void main(String[] args) {		FastScanner fs = new FastScanner();		PrintWriter out = new PrintWriter(System.out);		int t = 1;		outer:		while(t-->0) {	 	       int n,x,y;	       n = fs.nextInt();	       int ans = 0;	       ArrayList<Integer>l = new ArrayList<>();	       for(int i=0;i<n;i++) {	    	   int a;	    	   a = fs.nextInt();	    	   l.add(a);	       }	       Collections.sort(l);	       int j = 1;	       for(int i=0;i<n;i++) {	    	   if(l.get(i)>=j) {	    		   ans++;	    		   j++;	    	   }	       }	       out.println(ans);	       					}		out.close();	    		    	} 	static class FastScanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer(""); 		String next() {			while (!st.hasMoreTokens())				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		int[] readArray(int n) {			int[] a=new int[n];			for (int i=0; i<n; i++)				a[i]=nextInt();			return a;		} 		long nextLong() {			return Long.parseLong(next());		}	} }
