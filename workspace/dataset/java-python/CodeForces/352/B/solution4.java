import java.util.*; public class Problem_352B {//    static int count = 0;    public static int isAP(ArrayList<Integer> numList) {        Collections.sort(numList);        int diff = 0;//        System.out.println("List is " + numList);        for(int i = 1; i < numList.size(); i++) {            int curr = numList.get(i);            int prev = numList.get(i - 1);            if(diff == 0)                diff = curr - prev;            else if(curr - prev != diff)                return -1;        }//        count++;        return diff;    }     public static void main(String[] args) {        Scanner s = new Scanner(System.in);        TreeMap<Integer, ArrayList<Integer>> num2IdxList = new TreeMap<>();        int n = s.nextInt();        for(int i = 0; i < n; i++) {            int num = s.nextInt();            if(num2IdxList.containsKey(num)) {                int currIdx = i;                num2IdxList.computeIfPresent(num, (K, V) -> {                    V.add(currIdx); return V;                });            } else {                ArrayList<Integer> idxList = new ArrayList<Integer>();                idxList.add(i);                num2IdxList.put(num, idxList);            }        }        StringBuilder results = new StringBuilder();        int count = 0;        for(Map.Entry<Integer, ArrayList<Integer>> entry : num2IdxList.entrySet()) {            int num = entry.getKey();            ArrayList<Integer> list = entry.getValue();            int apDiff = isAP(list);            if(apDiff != -1) {                count++;                results.append(num).append(" ").append(apDiff).append("\n");            }        }        System.out.println(count);        System.out.print(results.toString());    } }
