import java.util.*;import java.io.*; public class tr0 {	static PrintWriter out;	static StringBuilder sb;	static int mod = 1000000007;	static long inf = (long) 1e18 + 1;	static int[] col;	static ArrayList<Integer>[] ad;	static long[][][] memo;	static HashSet<Integer> h; 	public static void main(String[] args) throws Exception {		Scanner sc = new Scanner(System.in);		out = new PrintWriter(System.out);		int n = sc.nextInt();		long ch = sc.nextLong();		long[] fib = new long[51];		fib[0] = 1;		fib[1] = 1;		for (int i = 2; i < 51; i++)			fib[i] = fib[i - 1] + fib[i - 2];		for (int i = 1; i <= n; i++) {			long fc = fib[n - i];			if(ch<=fc)				out.print(i+" ");			else {				ch-=fc;				out.print((i+1)+" "+i+" ");				i++;			}		}		out.flush();	} 	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream system) {			br = new BufferedReader(new InputStreamReader(system));		} 		public Scanner(String file) throws Exception {			br = new BufferedReader(new FileReader(file));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public String nextLine() throws IOException {			return br.readLine();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public char nextChar() throws IOException {			return next().charAt(0);		} 		public Long nextLong() throws IOException {			return Long.parseLong(next());		} 		public int[] nextArrInt(int n) throws IOException {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = nextInt();			return a;		} 		public long[] nextArrLong(int n) throws IOException {			long[] a = new long[n];			for (int i = 0; i < n; i++)				a[i] = nextLong();			return a;		} 		public boolean ready() throws IOException {			return br.ready();		} 		public void waitForInput() throws InterruptedException {			Thread.sleep(3000);		}	}}
