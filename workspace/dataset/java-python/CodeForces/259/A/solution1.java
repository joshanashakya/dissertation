import java.io.*;import java.lang.reflect.Array;import java.util.Scanner;import java.util.*; public class Main{    public static void main(String[] args) throws NoSuchElementException, IOException {        Scanner sc = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        int black = 0, white = 0;        boolean flag = false;        for(int i = 0; i<8;i++){            String[] arr = sc.nextLine().split("");            for(int j = 0; j<8;j++){                if(arr[j].equals("B")){                    black++;                }else{                    white++;                }                if(j != 7){                    if(arr[j].equals(arr[j+1])){                        if(flag){                            System.out.println("NO");                            System.exit(0);                        }else{                            flag = true;                        }                    }                }            }            if(white != black){                System.out.println("NO");                System.exit(0);            }         }        System.out.println("YES");            }    static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int nextInt() throws IOException {            return Integer.parseInt(next());        }         public long nextLong() throws IOException {            return Long.parseLong(next());        }         public String nextLine() throws IOException {            return br.readLine();        }         public double nextDouble() throws IOException {            String x = next();            StringBuilder sb = new StringBuilder("0");            double res = 0, f = 1;            boolean dec = false, neg = false;            int start = 0;            if (x.charAt(0) == '-') {                neg = true;                start++;            }            for (int i = start; i < x.length(); i++)                if (x.charAt(i) == '.') {                    res = Long.parseLong(sb.toString());                    sb = new StringBuilder("0");                    dec = true;                } else {                    sb.append(x.charAt(i));                    if (dec)                        f *= 10;                }            res += Long.parseLong(sb.toString()) / f;            return res * (neg ? -1 : 1);        }         public long[] nextlongArray(int n) throws IOException {            long[] a = new long[n];            for (int i = 0; i < n; i++)                a[i] = nextLong();            return a;        }         public Long[] nextLongArray(int n) throws IOException {            Long[] a = new Long[n];            for (int i = 0; i < n; i++)                a[i] = nextLong();            return a;        }         public int[] nextIntArray(int n) throws IOException {            int[] a = new int[n];            for (int i = 0; i < n; i++)                a[i] = nextInt();            return a;        }         public Integer[] nextIntegerArray(int n) throws IOException {            Integer[] a = new Integer[n];            for (int i = 0; i < n; i++)                a[i] = nextInt();            return a;        }         public boolean ready() throws IOException {            return br.ready();        }     } }
