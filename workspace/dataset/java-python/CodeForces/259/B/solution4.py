"""    https://codeforces.com/problemset/problem/259/B"""import fileinput def sommeColonne(t, col):    res = 0    for i in range(3):        res += t[i][col]    return res def sommeLigne(t, lig):    res = 0    for i in range(3):        res += t[lig][i]    return res def sommeDiag1(t):    return t[0][0] + t[1][1] + t[2][2] def sommeDiag2(t):    return t[0][2] + t[1][1] + t[2][0] def valide(v):    return v >= 1 and v <= 100000 def cherche(t):    """        Recherche par force brute...        Un candidat est un triplet de nombres (la diagonale).    """    # Fixer la première valeur de la diagonale fixe les autres    for t[0][0] in range(1, 100001):        s = sommeLigne(t, 0)        t[1][1] = s - t[1][0] - t[1][2]        t[2][2] = s - t[2][0] - t[2][1]        # Solution ?        if (valide(t[1][1]) and valide(t[2][2])) \            and (sommeColonne(t, 0) == s or sommeColonne(t, 1) == s or sommeColonne(t, 2) == s) \            and (sommeDiag1(t) ==s and sommeDiag2(t) == s):            return 'YES'    return 'NO'  def saisie():    t = [[], [], []]    for i in range(3):        t[i] = list(map(int, input().rstrip().split(' ')))    return t def printSquare(t):    for lig in range(3):        print(t[lig][0], t[lig][1], t[lig][2]) t = saisie()#t = [[0, 3, 6], [5, 0, 5], [4, 7, 0]]#t = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]sol = cherche(t)if sol == 'YES':    printSquare(t)else:    print('pas de solution trouvée')
