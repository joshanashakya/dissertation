def func1(n,t,): # Solve and output#     /* Requirements:#         1. Have n digits#         2. Should be divisible by t.#     */#    // n <=200, so long, 2^64 => 10^18, not working. long long, 10^36#    // use Python3 #     // max possible number < t. Impossiblilty#     if (n!=1 && t > pow(10, n - 1))#         cout << -1;#     else // least possible number, pow(10, n) - 1 + add to it the extras#         cout << int(pow(10, n - 1)) + t - int(pow(10, n - 1)) % t;    if n!=1 and t > 10**(n-1):        print(-1)    elif n==1 and t>9:        print(-1)    else:        print(10**(n-1)+t-(10**(n-1))%t)    pass if __name__ == '__main__':    cases = 1 #; cases = int(input())    for i in range(cases):        n,t,_, *_ = [*map(int, filter(len, input().split(' '))), None]        func1(n,t,) 
