import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.InputMismatchException;import java.io.IOException;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author T.C.D */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastInputReader in = new FastInputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskB solver = new TaskB();        solver.solve(1, in, out);        out.close();    }     static class TaskB {        public void solve(int testNumber, FastInputReader in, PrintWriter out) {            int n = in.nextInt();            int[] a = new int[n];            int min = Integer.MAX_VALUE;            int min1 = Integer.MAX_VALUE;            int left=0,right =0;            for (int i = 0; i < n; i++) {                a[i] = in.nextInt();                if (a[i] < min) {                    min = a[i];                    left = i;                }                if (a[i] <= min1) {                    min1 = a[i];                    right = i;                }            }            long ans = 1l * min * n;            int pre = -1;            int max = 0;            for (int i = 0; i < n; i++) {                if (a[i] == min) {                    if (pre != -1) {                        max = Math.max(i - pre - 1, max);                    }                     pre = i;                }            }            max = Math.max(max, left + n - right - 1);            out.println(ans + max);        }     }     static class FastInputReader {        static InputStream is;        static private byte[] buffer;        static private int lenbuf;        static private int ptrbuf;         public FastInputReader(InputStream stream) {            is = stream;            buffer = new byte[1024];            lenbuf = 0;            ptrbuf = 0;        }         private int readByte() {            if (lenbuf == -1)                throw new InputMismatchException();            if (ptrbuf >= lenbuf) {                ptrbuf = 0;                try {                    lenbuf = is.read(buffer);                } catch (IOException e) {                    throw new InputMismatchException();                }                if (lenbuf <= 0)                    return -1;            }            return buffer[ptrbuf++];        }         public int nextInt() {            int num = 0, b;            boolean minus = false;            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))                ;            if (b == '-') {                minus = true;                b = readByte();            }             while (true) {                if (b >= '0' && b <= '9') {                    num = num * 10 + (b - '0');                } else {                    return minus ? -num : num;                }                b = readByte();            }        }     }}
