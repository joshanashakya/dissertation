import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=1;        while(T-->0)        {            int n=input.nextInt();            int a[][]=new int[n][2];            int min=Integer.MAX_VALUE;            for(int i=0;i<n;i++)            {                a[i][0]=input.nextInt();                a[i][1]=i;                if(a[i][0]>=0)                {                    a[i][0]=-a[i][0]-1;                }                min=Math.min(min,a[i][0]);            }            if(n%2==0)            {                for(int i=0;i<n;i++)                {                    out.print(a[i][0]+" ");                }            }            else            {                int flag=0;                for(int i=0;i<n;i++)                {                    if(flag==0)                    {                        if(a[i][0]==min)                        {                            out.print((-a[i][0]-1)+" ");                            flag=1;                        }                        else                        {                            out.print(a[i][0]+" ");                        }                    }                    else                    {                        out.print(a[i][0]+" ");                    }                }            }        }        out.close();    }    public static void mergeSort(int a[][],int p,int r)    {        if(p<r)        {            int q=(p+r)/2;            mergeSort(a,p,q);            mergeSort(a,q+1,r);            merge(a,p,q,r);        }    }    public static void merge(int a[][],int p,int q,int r)    {        int n1=q-p+2;        int L[][]=new int[n1][2];        int n2=r-q+1;        int R[][]=new int[n2][2];        for(int i=p;i<=q;i++)        {            L[i-p]=a[i];        }        L[n1-1][0]=Integer.MAX_VALUE;        for(int i=q+1;i<=r;i++)        {            R[i-q-1]=a[i];        }        R[n2-1][0]=Integer.MAX_VALUE;        int x=0,y=0;        for(int i=p;i<=r;i++)        {            if(L[x][0]<=R[y][0])            {                a[i]=L[x];                x++;            }            else            {                a[i]=R[y];                y++;            }        }    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {             return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
