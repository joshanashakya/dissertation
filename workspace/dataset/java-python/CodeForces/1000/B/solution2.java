 import java.util.ArrayList;import java.util.Scanner; public class B { 	public static void main(String[] args) { 		Scanner nik = new Scanner(System.in);		int n = nik.nextInt();		int m = nik.nextInt(); 		int[] a = new int[n + 2]; 		int max = 0; 		for (int i = 1; i <= n; i++) {			a[i] = nik.nextInt();		}		a[0] = 0;		a[n + 1] = m; 		// Approach		// 1/////////////////////////////////////////////////////////////////////////////////////////////////////		// int sum = findsum(a);		// System.out.println(sum);		////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 		// second approch		int sum = findsum2(a, n);		System.out.println(sum); 	} 	private static int findsum2(int[] a, int n) { 		int[][] presum = new int[2][a.length]; 		++n; // n =n+1 		for (int i = 1; i <= n; i++) {			presum[0][i] = presum[0][i - 1];			presum[1][i] = presum[1][i - 1];			presum[i & 1][i] += (a[i] - a[i - 1]);		} 		int res = presum[1][n];		for (int i = 1; i <= n; i++) { 			int temp = presum[1][i - 1] + (presum[0][n] - presum[0][i]) + (a[i] - a[i - 1] - 1);			res = Math.max(temp, res);		}		return res;	} 	private static int findsum(int[] a) { 		int n = a.length - 2;		int off = 0;		int on = 0;		boolean b = false; // off ka count karoonga 		int gain = 0;		if (n % 2 == 0) {			b = true;		}		int idx = n + 1;		int max1 = Integer.MIN_VALUE;		for (int i = n + 1; i > 0; i--) { 			int temp = a[i] - a[i - 1]; 			if (!b) {				off += temp;			} else {				on += temp;			} 			if (off > on) { 				int temp1 = off - on;				if (temp1 > max1) {					max1 = temp1;					gain = off - 1;					idx = i - 1;				}			}			b = !b;		}		int sum = gain + a[1];		for (int i = 2; i < idx; i += 2) {			sum += (a[i + 1] - a[i]);		}		return (sum);	} }
