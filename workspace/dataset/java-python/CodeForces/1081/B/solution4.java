import java.io.*;import java.util.*; public class FarewellParty { 	public static void main(String[] args) {        FastScanner in = new FastScanner();        PrintWriter out = new PrintWriter(System.out);        int n = in.nextInt();        int a[] = in.readArray(n);        int b[] = new int[n];        for(int i=0;i<n;i++)         	b[i] = n - a[i];        int vis[] = new int[n];        int ans[] = new int[n];        int k = 1;        boolean verdict = true;        for(int i=0;i<n;i++) {        	int cnt = 0;        	if(vis[i]!=1) {        		for(int j=i;j<n;j++) {            		if(b[j]==b[i]&&vis[j]!=1) {            			cnt++;            			ans[j] = k;            			vis[j] = 1;            			//out.println(cnt);            		}            		if(cnt==b[i])            			break;            	}        		if(cnt!=b[i]) {            		//out.println(cnt);            		verdict = false;break;            	}        		k++;        	}        }        if(verdict) {        	out.println("Possible");        	for(int i : ans) out.print(i+" ");        }        else         	out.println("Impossible");        out.flush();	}		static class FastScanner {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer("");				String next() {			while(!st.hasMoreTokens())				try {					st = new StringTokenizer(br.readLine());				}catch(IOException e) {					e.printStackTrace();				}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}				long nextLong() {			return Long.parseLong(next());		}				int[] readArray(int n) {			int a[] = new int[n];			for(int i=0;i<n;i++) a[i] = nextInt();			return a;		}				long[] readArray(int n,long x) {			long a[] = new long[n];			for(int i=0;i<n;i++) a[i] = nextLong();			return a;		}			}		static boolean arrayEquals(char a[], char b[]) {		int n = a.length;		boolean verdict = true;		for(int i=0;i<n;i++) {			if(a[i]!=b[i]) {				verdict = false;break;			}		}		return verdict;	}		static long lcm(long a, long b) {		return (a*b)/gcd(a,b);	}		static long gcd(long a, long b) {		if(b==0) return a;		else return gcd(b,a%b);	}}
