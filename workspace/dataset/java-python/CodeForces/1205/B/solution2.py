import sysreadline = sys.stdin.readlinefrom collections import deque N = int(readline())A = list(map(int, readline().split()))A = [a for a in A if a]limit = 32table = [0]*limit for a in A:    for i in range(limit):        if a & (1<<i):            table[i] += 1 if max(table) > 2:    print(3) else:    INF = 10**18+3    N = len(A)    Edge = [set() for _ in range(N)]    for i in range(N):        for j in range(i):            if A[i]&A[j]:                Edge[i].add(j)                Edge[j].add(i)        ans = INF    for st in range(N):        for en in Edge[st].copy():            Edge[st].remove(en)            Edge[en].remove(st)                        dist = [INF]*N            dist[st] = 0            Q = deque([st])            while Q:                vn = Q.pop()                for vf in Edge[vn]:                    if dist[vf] == INF:                        dist[vf] = 1 + dist[vn]                        Q.appendleft(vf)            ans = min(ans, 1 + dist[en])                            Edge[st].add(en)            Edge[en].add(st)        if ans >= INF:        ans = -1    print(ans)
