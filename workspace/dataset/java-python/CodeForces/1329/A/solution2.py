def main():        n,m=readIntArr()    l=readIntArr()        # For each turn, a subarray of length l[i] is painted starting from p[i].    # Paint in a sequence of positions 1,2,3 and ensure that it doesn't exceed n.    p=[0 for _ in range(m)]    left=1    ok=True    for i in range(m):        right=l[i]+left-1        if right>n: #trying to color out of range            ok=False            break        p[i]=left        left+=1    if ok: #need to try to spread p out so that the full array is colored        #iterate from right to left        furthestRightCovered=n+1        for i in range(m-1,-1,-1):            newLeft=furthestRightCovered-1+1-l[i]            p[i]=max(p[i],newLeft) #p[i] was the minimum possible p[i] to ensure previous colors are all not fully painted over            furthestRightCovered=p[i]        if p[0]==1: #can cover fully            oneLineArrayPrint(p)        else: #cannot cover fully            print(-1)    else:        print(-1)        return    #import sys#input=sys.stdin.buffer.readline #FOR READING PURE INTEGER INPUTS (space separation ok)import sysinput=lambda: sys.stdin.readline().rstrip("\r\n") #FOR READING STRING/TEXT INPUTS. def oneLineArrayPrint(arr):    print(' '.join([str(x) for x in arr]))def multiLineArrayPrint(arr):    print('\n'.join([str(x) for x in arr]))def multiLineArrayOfArraysPrint(arr):    print('\n'.join([' '.join([str(x) for x in y]) for y in arr])) def readIntArr():    return [int(x) for x in input().split()] inf=float('inf')MOD=10**9+7 main()
