import java.io.BufferedOutputStream;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.List;import java.util.StringTokenizer; public class DreamoonLikesColoring {    public static PrintWriter out;    public static void main(String[] args) {        MyScanner sc = new MyScanner();        out = new PrintWriter(new BufferedOutputStream(System.out));       // out.print("heelo");        /*      int n      = sc.nextInt();        // read input as integer      long k     = sc.nextLong();     // read input as long      double d   = sc.nextDouble();     // read input as double      String str = sc.next();           // read input as String      String s   = sc.nextLine();       // read whole line as String       int result = 3*n;      out.println(result);                    // print via PrintWriter      */        int n = sc.nextInt();        int m = sc.nextInt();        long[] list = new long[100002];        long sum=0;        long[] pre = new long[100002];        int flg=0;        for(int i =0;i<m;i++) {list[i] = sc.nextLong(); sum+=list[i];            if(list[i]+i>n)flg=1;        }        if(sum<n || flg==1){            out.println("-1");            out.flush();            return ;        }        pre[m]=0;        //pre[n-1]=list[n-1];        for(int i=m-1;i>=0;i--){            pre[i]= pre [i+1] + list[i];        }        for(int i=0;i<m;i++){            out.print(Math.max(i+1, n-pre[i]+1));            if(i!=m)out.print(" ");        }                out.flush();     }    //-----------MyScanner class for faster input----------    public static class MyScanner {        BufferedReader br;        StringTokenizer st;         public MyScanner() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine(){            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }     }}
