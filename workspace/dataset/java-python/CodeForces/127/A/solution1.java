import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class WastedTime {    public static void main(String[] args) {        FastReader fs = new FastReader();        StringBuilder sb = new StringBuilder();        int t = fs.nextInt();        int k = fs.nextInt();        int prevX = 0;        int prevY = 0;        int currX = 0;        int currY = 0;        double sum = 0;        for(int tt = 0; tt < t; tt++) {            if(tt == 0) {                prevX = fs.nextInt();                prevY = fs.nextInt();            }else {                currX = fs.nextInt();                currY = fs.nextInt();                sum += dist(currX, prevX, currY, prevY);                prevX = currX;                prevY = currY;            }        }        System.out.println(k * sum / 50.0);    }     public static double dist(int x1, int x2, int y1, int y2) {        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));    }     static class FastReader {        BufferedReader br;        StringTokenizer st;        public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while(st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         float nextFloat() {            return Float.parseFloat(next());        }    }}
