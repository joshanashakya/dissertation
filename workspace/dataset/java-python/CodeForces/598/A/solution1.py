def power_of_num(num):    for i in range(1000):        yield num ** i  def sum_of_powers(n, power):    powers = power_of_num(power)    power = next(powers)    sum_of_powers = []    while n >= power:        sum_of_powers.append(power)        power = next(powers)    return sum(sum_of_powers)  def calculate_sum(n, power):    sum_of_pow = sum_of_powers(n, power)    if n % 2 == 0:        normal_sum = n // 2 * (n + 1)    else:        normal_sum = n // 2 * (n + 1) + (n + 1) // 2     tricky_sum = normal_sum - 2 * sum_of_pow    print(tricky_sum)  power = 2t = int(input())for _ in range(t):    n = int(input())    calculate_sum(n, power)
