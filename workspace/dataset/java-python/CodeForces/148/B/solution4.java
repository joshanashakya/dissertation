import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Escape {    public static void main(String[] args) {        FastReader fs = new FastReader();        StringBuilder sb = new StringBuilder();        int vp = fs.nextInt();        int vd = fs.nextInt();        int t = fs.nextInt();        int f = fs.nextInt();        int c = fs.nextInt();        if(vd <= vp) {            System.out.println(0);            return;        }        int bijous = 0;        double distance = vp * t;        double time = 0;        while(Double.compare(c, distance) > 0) {            time = distance / (vd - vp);            distance = time * vd;            if(Double.compare(c, distance) <= 0) break;            bijous++;            distance += ((distance / vd) + f) * vp;        }        System.out.println(bijous);    }     static class FastReader {        BufferedReader br;        StringTokenizer st;        public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while(st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         float nextFloat() {            return Float.parseFloat(next());        }    }}
