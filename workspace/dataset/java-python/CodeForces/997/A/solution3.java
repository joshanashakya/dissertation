import java.awt.*;import java.io.*;import java.util.*; public class B {    static int gcd(int a, int b) {        if (a == 0)            return b;        return gcd(b % a, a);    }    public static void main(String[] args)throws IOException {        Scanner sc = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        int n = sc.nextInt();        int a = sc.nextInt();        int b = sc.nextInt();        String s = sc.next();        if(a<b){            boolean t = false;            int c = 0;            for(int i=s.length()-1;i>=0;i--){                if(s.charAt(i)=='0'){                    t = true;                }else{                    if(t){                        c++;                    }                    t = false;                }            }            if(t)c++;            if(c==0){                pw.println(0);            }else{                pw.println(Math.max(0,c-1)*1l*a+b);            }        }else{            boolean t = false;            int c = 0;            for(int i=s.length()-1;i>=0;i--){                if(s.charAt(i)=='0'){                    t = true;                }else{                    if(t){                        c++;                    }                    t = false;                }            }            if(t)c++;            pw.println(c*1l*b);        }        pw.flush();        pw.close();    }     static class Pair implements Comparable<Pair>{        long x;        int index;        public Pair(long x,int index){            this.x= x;            this.index = index;        }        public int compareTo(Pair p){            if(this.x==p.x)return Integer.compare(this.index,p.index);            return Long.compare(this.x,p.x);        }     }    static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int nextInt() throws IOException {            return Integer.parseInt(next());        }         public long nextLong() throws IOException {            return Long.parseLong(next());        }         public String nextLine() throws IOException {            return br.readLine();        }         public double nextDouble() throws IOException {            String x = next();            StringBuilder sb = new StringBuilder("0");            double res = 0, f = 1;            boolean dec = false, neg = false;            int start = 0;            if (x.charAt(0) == '-') {                neg = true;                start++;            }            for (int i = start; i < x.length(); i++)                if (x.charAt(i) == '.') {                    res = Long.parseLong(sb.toString());                    sb = new StringBuilder("0");                    dec = true;                } else {                    sb.append(x.charAt(i));                    if (dec)                        f *= 10;                }            res += Long.parseLong(sb.toString()) / f;            return res * (neg ? -1 : 1);        }         public boolean ready() throws IOException {            return br.ready();         }    }}
