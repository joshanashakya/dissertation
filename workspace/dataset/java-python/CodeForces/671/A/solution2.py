import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.List;import java.util.Random;import java.util.StringTokenizer; public class Main implements Runnable { 	int sz[];	int id[];	List<Integer> edges[];	long tree[]; 	private void solve() throws IOException {		long ax = nextLong();		long ay = nextLong();		long bx = nextLong();		long by = nextLong();		long tx = nextLong();		long ty = nextLong();		int n = nextInt();		long d1[] = new long[n];		long d2[] = new long[n];		long d3[] = new long[n];		for (int i = 0; i < n; ++i) {			long x = nextLong();			long y = nextLong();			d1[i] = (x - tx) * (x - tx) + (y - ty) * (y - ty);			d2[i] = (x - ax) * (x - ax) + (y - ay) * (y - ay);			d3[i] = (x - bx) * (x - bx) + (y - by) * (y - by);		}		double min1, min2, smin1, smin2;		min1 = min2 = smin1 = smin2 = 1e13;		int ind1 = -1, ind2 = -1, ind3 = -1, ind4 = -1;		double tot = 0.0d;		for (int i = 0; i < n; ++i) {//			System.err.println(d1[i]);			tot += Math.sqrt(d1[i]);			double dis = Math.sqrt(d2[i]) - Math.sqrt(d1[i]);//			System.err.println(dis);			if (dis < min1) {				min2 = min1;				ind2 = ind1;				min1 = dis;				ind1 = i;			} else if (dis < min2) {				min2 = dis;				ind2 = i;			}		}//		System.err.println(min1 + " " + min2);		for (int i = 0; i < n; ++i) {			double dis = Math.sqrt(d3[i]) - Math.sqrt(d1[i]);//			System.err.println(dis);			if (dis < smin1) {				smin2 = smin1;				ind4 = ind3;				smin1 = dis;				ind3 = i;			} else if (dis < smin2) {				smin2 = dis;				ind4 = i;			}		}//		System.err.println(ind1 + " " + ind2);		double tot2 = 0.0d;		if (ind1 == ind3) {			if (smin2 == 1e9)				smin2 = 0;			if (min2 == 1e9)				min2 = 0;			tot2 = Math.min(min1 + smin2, min2 + smin1);		} else {			tot2 = min1 + smin1;		}		tot *= 2;		double ans = Math.min(tot + min1, tot + smin1);		ans = Math.min(ans, tot + tot2);		pw.printf("%.20f", ans);	} 	void test() throws IOException {		Random rnd = new Random();		for (int i = 0; i < 5; ++i) {			int n = rnd.nextInt(10) + 1;			int a[] = new int[n];			System.err.println(n);			for (int j = 0; j < n; ++j) {				a[j] = rnd.nextInt(20) + 1;				System.err.print(a[j] + " ");			}//			solve(n, a);			System.err.println();		}	} 	BufferedReader br;	StringTokenizer st;	PrintWriter pw; 	public static void main(String args[]) {		new Main().run();	} 	public void run() {		try {			br = new BufferedReader(new InputStreamReader(System.in), 32768);			pw = new PrintWriter(System.out);			st = null;			solve();			pw.flush();			pw.close();			br.close();		} catch (IOException e) {			e.printStackTrace();			System.exit(1);		}	} 	int nextInt() throws IOException {		return Integer.parseInt(next());	} 	long nextLong() throws IOException {		return Long.parseLong(next());	} 	double nextDouble() throws IOException {		return Double.parseDouble(next());	} 	String next() throws IOException {		while (st == null || !st.hasMoreTokens()) {			st = new StringTokenizer(br.readLine());		}		return st.nextToken();	}}
