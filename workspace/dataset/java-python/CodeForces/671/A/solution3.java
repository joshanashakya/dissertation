import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer;Â public class Problem {    public static void main(String[] args) throws IOException {        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer sToken = new StringTokenizer(reader.readLine());        long ax = Integer.parseInt(sToken.nextToken());        long ay = Integer.parseInt(sToken.nextToken());        long bx = Integer.parseInt(sToken.nextToken());        long by = Integer.parseInt(sToken.nextToken());        long tx = Integer.parseInt(sToken.nextToken());        long ty = Integer.parseInt(sToken.nextToken());        int n = Integer.parseInt(reader.readLine());        double sum = 0.0;        double[][] res = new double[n][2];        for (int i=0; i<n; i++) {            sToken = new StringTokenizer(reader.readLine());            long x = Integer.parseInt(sToken.nextToken());            long y = Integer.parseInt(sToken.nextToken());            double lt = Math.sqrt(((tx-x)*(tx-x))+((ty-y)*(ty-y)));            double la = Math.sqrt(((ax-x)*(ax-x))+((ay-y)*(ay-y)));            double lb = Math.sqrt(((bx-x)*(bx-x))+((by-y)*(by-y)));            sum+=lt+lt;            res[i][0] = lt - la;            res[i][1] = lt - lb;        }        if (n==1) {            System.out.println(Math.min(sum - res[0][0], sum - res[0][1]));            System.exit(0);        }        double max = Double.MIN_VALUE, secmax = Double.MIN_VALUE;        double ans = Double.MAX_VALUE;        for (int i=0; i<n; i++) {            double elem = res[i][1];            ans = Math.min(ans, sum - elem);            if (elem>max) {                secmax = max; max = elem;            } else if (elem<=max) {                secmax = Math.max(secmax, elem);            }        }        for (int i=0; i<n; i++) {            ans = Math.min(ans, sum - res[i][0]);            if (res[i][1]==max) {                ans = Math.min(ans, sum - res[i][0] - secmax);            } else ans = Math.min(ans, sum - res[i][0] - max);        }        System.out.println(ans);    }}
