import java.text.DecimalFormat;import java.io.*;import java.util.*;import java.math.*;public class Main{   		static InputReader in=new  InputReader(System.in);      static PrintWriter out= new PrintWriter(System.out);    static int n=0,m=0;    static int max=0,min=0;    static int[] num=new int[500010];    public static void main(String[] args) throws IOException {    		    	n=in.nextInt();    	m=in.nextInt();    	    	long mon=0;    	for(int i=1;i<=n;++i) {    		num[i]=in.nextInt();    		mon+=num[i];    	}    	Arrays.sort(num,1,n+1);    	    	int l=num[1]-1,r=num[n]+1,mid=0;    	    	while(r-l>1) {    		mid=(l+r)/2;    		if(check(mid)) {    			l=mid;    		}else {    			r=mid;    		}    	}    	max=r;    	    	l=num[1]-1;    	r=num[n]+1;    	mid=0;    	    	while(r-l>1) {    		mid=(l+r)/2;    		if(check2(mid)) {    			r=mid;    		}else {    			l=mid;    		}    	}    	min=l;    	    	if(max>min)    	out.println(max-min);    	else {    		if(mon%n==0)System.out.println(0);    		else System.out.println(1);    	}    	out.close();    	    	    	    	    	    		    }        static boolean check2(int a) {    	int l=1,r=n,mid=0;    	while(r-l>1) {    		mid=(l+r)/2;    		if(num[mid]>a) {    			r=mid;    		}else {    			l=mid;    		}    	}    	long sum=0;    	for(int i=1;i<=l;++i) {    		sum+=a-num[i];    	}    	if(sum>m)return true;    	else return false;    }            static boolean check(int a) {    	int l=1,r=n,mid=0;    	while(r-l>1) {    		mid=(l+r)/2;    		if(num[mid]<a) {    			l=mid;    		}else {    			r=mid;    		}    	}    	long sum=0;    	for(int i=r;i<=n;++i) {    		sum+=num[i]-a;    	}    	if(sum>m)return true;    	else return false;    }                       static class InputReader {          BufferedReader br;            public InputReader(InputStream stream) {              br = new BufferedReader(new InputStreamReader(stream));          }            public int nextInt() throws IOException {              int c = br.read();              while (c <= 32) {                  c = br.read();              }              boolean negative = false;              if (c == '-') {                  negative = true;                  c = br.read();              }              int x = 0;              while (c > 32) {                  x = x * 10 + c - '0';                  c = br.read();              }              return negative ? -x : x;          }            public long nextLong() throws IOException {              int c = br.read();              while (c <= 32) {                  c = br.read();              }              boolean negative = false;              if (c == '-') {                  negative = true;                  c = br.read();              }              long x = 0;              while (c > 32) {                  x = x * 10 + c - '0';                  c = br.read();              }              return negative ? -x : x;          }            public String next() throws IOException {              int c = br.read();              while (c <= 32) {                  c = br.read();              }              StringBuilder sb = new StringBuilder();              while (c > 32) {                  sb.append((char) c);                  c = br.read();              }              return sb.toString();          }            public double nextDouble() throws IOException {              return Double.parseDouble(next());          }      }  } 
