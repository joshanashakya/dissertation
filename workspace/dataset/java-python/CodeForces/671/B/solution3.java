import java.util.*;import java.io.*; public class Main {	public static void main(String args[]) {new Main().run();} 	FastReader in = new FastReader();	PrintWriter out = new PrintWriter(System.out);	void run(){		work();		out.flush();	}	long mod=1000000007L;	long inf=Long.MAX_VALUE;	long gcd(long a,long b) {		return a==0?b:gcd(b%a,a);	}	void work() {		int n=ni(),k=ni();		long[] A=na(n);		Arrays.sort(A);		long l1=0,r1=1000000000;		while(l1<r1) {			long m=(l1+r1)/2;			long s=0;			for(int i=0;i<n;i++) {				if(m<A[i])break;				s+=m-A[i];			}			if(s<=k) {				l1=m+1;			}else {				r1=m;			}		}		long l2=0,r2=1000000000;		while(l2<r2) {			long m=(l2+r2)/2;			long s=0;			for(int i=n-1;i>=0;i--) {				if(m>A[i])break;				s+=A[i]-m;			}			if(s>k) {				l2=m+1;			}else {				r2=m;			}		}		if(l1-1<l2) {			out.println(l2-l1+1);			return;		}		long l=0,r=1000000000;		while(l<r) {			long m=(l+r)/2;			long s1=0;			for(int i=0;i<n;i++) {				if(m<A[i])break;				s1+=m-A[i];			}			long s2=0;			for(int i=n-1;i>=0;i--) {				if(m>A[i])break;				s2+=A[i]-m;			}			if(s1==s2) {				out.println(0);				return;			}else if(s1<s2){				l=m+1;;			}else {				r=m;			}		}		out.println(1);	}			//input	@SuppressWarnings("unused")	private ArrayList<Integer>[] ng(int n, int m) {		ArrayList<Integer>[] graph=(ArrayList<Integer>[])new ArrayList[n];		for(int i=0;i<n;i++) {			graph[i]=new ArrayList<>();		}		for(int i=1;i<=m;i++) {			int s=in.nextInt()-1,e=in.nextInt()-1;			graph[s].add(e);			graph[e].add(s);		}		return graph;	} 	private ArrayList<long[]>[] ngw(int n, int m) {		ArrayList<long[]>[] graph=(ArrayList<long[]>[])new ArrayList[n];		for(int i=0;i<n;i++) {			graph[i]=new ArrayList<>();		}		for(int i=1;i<=m;i++) {			long s=in.nextLong()-1,e=in.nextLong()-1,w=in.nextLong();			graph[(int)s].add(new long[] {e,w,i});			graph[(int)e].add(new long[] {s,w});		}		return graph;	} 	private int ni() {		return in.nextInt();	} 	private long nl() {		return in.nextLong();	}		private String ns() {		return in.next();	} 	private long[] na(int n) {		long[] A=new long[n];		for(int i=0;i<n;i++) {			A[i]=in.nextLong();		}		return A;	}	private int[] nia(int n) {		int[] A=new int[n];		for(int i=0;i<n;i++) {			A[i]=in.nextInt();		}		return A;	}}	 class FastReader{	BufferedReader br;	StringTokenizer st; 	public FastReader()	{		br=new BufferedReader(new InputStreamReader(System.in));	}  	public String next() 	{		while(st==null || !st.hasMoreElements())//回车，空行情况		{			try {				st = new StringTokenizer(br.readLine());			} catch (IOException e) {				e.printStackTrace();			}		}		return st.nextToken();	} 	public int nextInt() 	{		return Integer.parseInt(next());	} 	public long nextLong()	{		return Long.parseLong(next());	}}
