from collections import Counter,defaultdict,deque#from heapq import *#import itertools#from operator import itemgetter#from itertools import count, islice#from functools import reduce#alph = 'abcdefghijklmnopqrstuvwxyz'#dirs = [[1,0],[0,1],[-1,0],[0,-1]]#from math import factorial as fact#a,b = [int(x) for x in input().split()]#sarr = [x for x in input().strip().split()]#import mathfrom math import *import sysinput=sys.stdin.readline#sys.setrecursionlimit(2**30)#mod = 10**9+7 def solve():    n,k = [int(x) for x in input().split()]    res = n-k+n-1    for m in range(k):        p = 0        cur = [int(x) for x in input().split()]        if cur[1]==1:            i = 1            while i<cur[0]:                if cur[i]==cur[i+1]-1:                    res-=2                else:                    break                i+=1    print(res)        tt = 1#int(input())for test in range(tt):    solve()                #
