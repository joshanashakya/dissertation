import java.io.*;import java.util.*;public class Lvl3Taser {Â 	public static void main(String[] args) throws IOException{		// TODO Auto-generated method stub		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer(br.readLine());		int N = Integer.parseInt(st.nextToken());		int U = Integer.parseInt(st.nextToken());		st = new StringTokenizer(br.readLine());		double arr[] = new double[N];		for(int i = 0; i < N; i++) {			arr[i] = Double.parseDouble(st.nextToken());		}		double max = Integer.MIN_VALUE;		for(int i = 0; i < N-2; i++) {			int dex = binarySearchLess(arr[i] + U, arr, i, N-1);			if(dex == i || dex == i+1 || dex == -1) {				continue;			}			double ratio = (arr[dex]-arr[i+1])/(arr[dex]-arr[i]);			max = Math.max(max, ratio);		}		if(max == Integer.MIN_VALUE) {			System.out.println(-1);		}else {			System.out.println(max);		}	}	private static int binarySearchLess(double lookfor, double[] arr, int min, int max) {		// TODO Auto-generated method stub		//System.out.println(min + " awe " + max);		if(lookfor < arr[0]) {			return -1;		}		int mid = (min+max)/2;		if(min == max) {			return mid;		}else if(min +1 == max) {			if(arr[max] <= lookfor) {				return max;			}			return min;			//return mid;		}		if(arr[mid] == lookfor) {			return mid;		}		if(arr[mid] > lookfor) {			return binarySearchLess(lookfor, arr, min, mid);		}else {			return binarySearchLess(lookfor, arr, mid, max);		}	}}
