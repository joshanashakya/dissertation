import java.io.*;import java.util.*; public class Main {	static class FastReader{         BufferedReader br;         StringTokenizer st;         public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}        String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}         catch (IOException  e){e.printStackTrace();}}return st.nextToken();}        int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}        String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }     }	static FastReader sc = new FastReader();	static long mod = (long)(1e9+7);	public static void main (String[] args) throws Exception {        PrintWriter out = new PrintWriter(System.out);        int t = 1;        t = sc.nextInt();        z :while(t-->0) {        	int n = sc.nextInt();			long a[] = new long[n];			for (int i = -1; ++i < n;)				a[i] = sc.nextInt();			Arrays.sort(a);			long m1=a[n-1]*a[n-2]*a[n-3]*a[1]*a[0],m2=a[0]*a[1]*a[2]*a[3]*a[n-1],m3=a[n-1]*a[n-2]*a[n-3]*a[n-4]*a[n-5];			System.out.println(Math.max(m1, Math.max(m2, m3)));       	}		out.close();	}}class pair implements Comparable<pair>{	int a;	long b; 	pair(int a,long b){		this.a = a;		this.b = b;	}	@Override    public int compareTo(pair p){        return (int) (p.b - this.b);    }}
