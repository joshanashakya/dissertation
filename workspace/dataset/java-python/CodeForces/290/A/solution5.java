import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class A { 	public static void main(String[] args) throws IOException {		FastScanner scan = new FastScanner();		PrintWriter out = new PrintWriter(System.out);		String[] a = {"Washington", "Adams", "Jefferson", "Madison", "Monroe", "Adams", "Jackson", "Van Buren", "Harrison", "Tyler", "Polk", "Taylor", "Fillmore", "Pierce", "Buchanan", "Lincoln", "Johnson", "Grant", "Hayes", "Garfield", "Arthur", "Cleveland", "Harrison", "Cleveland", "McKinley", "Roosevelt", "Taft", "Wilson", "Harding", "Coolidge", "Hoover", "Roosevelt", "Truman", "Eisenhower", "Kennedy", "Johnson", "Nixon", "Ford", "Carter", "Reagan"};		out.println(a[scan.nextInt()-1]);		out.close();	} 	static class FastScanner {		BufferedReader br;		StringTokenizer st; 		public FastScanner() {			try	{				br = new BufferedReader(new InputStreamReader(System.in));				st = new StringTokenizer(br.readLine());			} catch (Exception e){e.printStackTrace();}		} 		public String next() {			if (st.hasMoreTokens())	return st.nextToken();			try {st = new StringTokenizer(br.readLine());}			catch (Exception e) {e.printStackTrace();}			return st.nextToken();		} 		public int nextInt() {return Integer.parseInt(next());} 		public long nextLong() {return Long.parseLong(next());} 		public double nextDouble() {return Double.parseDouble(next());} 		public String nextLine() {			String line = "";			try {line = br.readLine();} 			catch (Exception e) {e.printStackTrace();}			return line;		} 		public int[] nextIntArray(int n) {			int[] a = new int[n];			for(int i = 0; i < n; i++) a[i] = nextInt();			return a;		} 		public long[] nextLongArray(int n){			long[] a = new long[n];			for(int i = 0; i < n; i++) a[i] = nextLong();			return a;		} 		public double[] nextDoubleArray(int n){			double[] a = new double[n];			for(int i = 0; i < n; i++) a[i] = nextDouble();			return a;		} 		public char[][] nextGrid(int n, int m){			char[][] grid = new char[n][m];			for(int i = 0; i < n; i++) grid[i] = next().toCharArray();			return grid;		}	} }
