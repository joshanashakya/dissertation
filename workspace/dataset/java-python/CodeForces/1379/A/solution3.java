import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        Main m = new Main();        int t = in.nextInt();        while (t-- > 0) {            m.run(in, out);        }         out.close();    }     public static long mod = 17352642619633L;     static char[] cat = "abacaba".toCharArray();    static int[] kmp(char[] ca) {        int[] kmp = new int[ca.length];        int N = ca.length;        for (int i = 1; i < N; i++) {            int p = kmp[i-1];            while (p > 0 && ca[p] != ca[i]) {                p = kmp[p-1];            }            if (ca[p] == ca[i]) p++;            kmp[i] = p;        }        return kmp;    }    static int[] kmp = kmp(cat);      void run(FastScanner in, PrintWriter out) {         int N = in.nextInt();        char[] ca = in.next().toCharArray();         // try to match starting at pos        // 0123456        for (int start = 0; start+cat.length-1 < N; start++) {             char[] check = Arrays.copyOfRange(ca, 0, N);            boolean can = true;            for (int i = 0; i < cat.length && can; i++) {                if (check[start+i] == '?') {                    check[start+i] = cat[i];                } else if (check[start+i] != cat[i]) {                    can = false;                }            }            if (!can) continue;             int matches = getMatches(check, cat);            if (matches == 1) {                out.println("Yes");                for (int i = 0; i < N; i++) {                    if (check[i] == '?') check[i] = 'd';                }                out.println(new String(check));                return;            }        }        out.println("No");    }     int getMatches(char[] ca, char[] cat) {        int p = 0;        int matches = 0;        for (int i = 0; i < ca.length; i++) {             while (p > 0 && ca[i] != cat[p]) {                p = kmp[p-1];            }            if (ca[i] == cat[p]) p++;            if (p == cat.length) {                p = kmp[cat.length-1];                matches++;            }        }        return matches;    }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
