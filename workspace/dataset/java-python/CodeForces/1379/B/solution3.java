// 03-Feb-2021import java.util.*;import java.io.*; public class B {	static class FastReader { 		BufferedReader br;		StringTokenizer st; 		private FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		int[] nextIntArray(int n) {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = nextInt();			return a;		} 		int[] nextIntArrayOne(int n) {			int[] a = new int[n + 1];			for (int i = 1; i < n + 1; i++)				a[i] = nextInt();			return a;		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	public static void main(String[] args) {		FastReader s = new FastReader();		StringBuilder str = new StringBuilder(); 		int t = s.nextInt(); 		while (t-- > 0) {			long l = s.nextLong(), r = s.nextLong(), m = s.nextLong();									long min = m - (r - l);			long max = m + (r - l);						for(long  a = l; a <= r; a++) {								long n = max / a;				long temp = n * a;								if(n > 0 &&  temp >= min && temp <= max) {					str.append(a + " ");					long bc = m - temp;											if(bc == 0) {						str.append( l + " " + l + "\n");					}else if(bc < 0) {						str.append(l + " " + (l - bc) + "\n");					}else {						str.append(r + " " + (r  - bc) + "\n");					}								break;				}																											}					}		System.out.println(str);	} }
