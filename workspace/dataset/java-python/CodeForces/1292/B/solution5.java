// package Quarantine; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.StringTokenizer; public class AromaFunction {    public static void main(String[] args)throws IOException {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer(br.readLine());        long x0=Long.parseLong(st.nextToken());        long y0=Long.parseLong(st.nextToken());        int ax=Integer.parseInt(st.nextToken());        int ay=Integer.parseInt(st.nextToken());        long bx=Long.parseLong(st.nextToken());        long by=Long.parseLong(st.nextToken());        st=new StringTokenizer(br.readLine());        long xs=Long.parseLong(st.nextToken());        long ys=Long.parseLong(st.nextToken());        long time=Long.parseLong(st.nextToken());        ArrayList<Long> x=new ArrayList<>();        ArrayList<Long> y=new ArrayList<>();        long limit=(long)Math.pow(10,16)*2;        while(x0<=limit&&y0<=limit){            x.add(x0);            y.add(y0);            x0=x0*ax+bx;            y0=y0*ay+by;        }        int ans=0;        for(int i=0;i<x.size();i++){            for(int j=i;j<x.size();j++){                long d=Math.abs(x.get(j)-x.get(i))+Math.abs(y.get(j)-y.get(i));                long l=Math.abs(xs-x.get(i))+Math.abs(ys-y.get(i));                long r=Math.abs(x.get(j)-xs)+Math.abs(ys-y.get(j));                long min=Math.min(l,r);                d+=min;                if(d<=time){                    ans=Math.max(ans,j-i+1);                }            }        }        System.out.println(ans);    }}
