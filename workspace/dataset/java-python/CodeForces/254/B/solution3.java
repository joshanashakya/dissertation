import java.io.*;import java.util.*; public class JurySize {    public static void main(String[] args) throws IOException {        Scanner in = new Scanner("input.txt");        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("output.txt")));         int n = in.nextInt();        int[] cal = new int[465];        while (n-- > 0) {            int m = in.nextInt();            int d = in.nextInt();            int p = in.nextInt();            int t = in.nextInt();            int idx = findNum(m, d);            for (int i = idx - 1; i >= idx - t; i--) {                cal[i] += p;            }        }         int max = 0;        for (int i : cal) {            if (i > max) {                max = i;            }        }        out.println(max);        out.close();    }     static int findNum(int m, int d) {        switch (m) {            case 1:                return d + 99;            case 2:                return d + 130;            case 3:                return d + 158;            case 4:                return d + 189;            case 5:                return d + 219;            case 6:                return d + 250;            case 7:                return d + 280;            case 8:                return d + 311;            case 9:                return d + 342;            case 10:                return d + 372;            case 11:                return d + 403;            case 12:                return d + 433;        }        return 0;    }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public Scanner(String s) {            try {                br = new BufferedReader(new FileReader(s));            } catch (FileNotFoundException e) {                e.printStackTrace();            }        }         public String next() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }         public long nextLong() {            return Long.parseLong(next());        }         public double nextDouble() {            return Double.parseDouble(next());        }    }}
