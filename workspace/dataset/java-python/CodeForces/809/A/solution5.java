import java.util.Arrays;import java.util.Random;import java.util.Scanner; public class adoyouwantadate {    public static void main (String[] args){        Scanner scanner = new Scanner(System.in);        int base = 1000000007;        int n = scanner.nextInt();        int[] a = new int[n];        int[] st = new int[n + 1];        long res = 0;        for (int i =0; i < n; i++){            a[i] = scanner.nextInt();        }        st[0] = 1;        for (int i = 1; i <=n; i++){            st[i] = (st[i-1] * 2) % base;        }         quicksort(a);         for (int j = 0; j < n-1; j++){            int pl = a[j+1] - a[j];            long plam = (((((long)st[j+1] - 1) * ((long)st[n-j -1 ] -1)) % base) * pl) % base;            res = (res + plam) % base;        }         System.out.println(res);    }     private static void swap(int[] a, int x, int y) {        int temp = a[x];        a[x] = a[y];        a[y] = temp;    }      private static void quicksort(int[] a) {        qsp(a, 0, a.length - 1);    }     private static void qsp(int[] a, int l, int h) {        int p = 0;        if (l < h) {            p = partition(a, l, h);            qsp(a, l, p - 1);            qsp(a, p + 1, h);        }    }     private static int partition(int[] a, int l, int h) {        Random random = new Random();        int pivotx = random.nextInt(h - l + 1) + l;        int pivot = a[pivotx];        swap(a, pivotx, h);        pivotx = h;        int i = l - 1;        for (int j = l; j < h; j++) {            if (a[j] < pivot) {                i++;                int temp = a[i];                a[i] = a[j];                a[j] = temp;            }        }         swap(a, pivotx, i + 1);        return i + 1;    }}
