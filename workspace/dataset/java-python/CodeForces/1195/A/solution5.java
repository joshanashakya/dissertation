import java.io.BufferedOutputStream;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStream;import java.util.Arrays;import java.util.Comparator;import java.util.HashMap;import java.util.SortedSet;import java.util.StringTokenizer;import java.util.TreeSet; import org.omg.PortableInterceptor.INACTIVE; public class Main {     public static void main(String[] args) throws IOException {	//	OutputStream out = new BufferedOutputStream(System.out);	FastReader sc = new FastReader();	int n = sc.nextInt(), k = sc.nextInt(), a[] = new int[k + 1];	for (int i = 0; i < n; i++) {	    a[sc.nextInt()]++;	}	Arrays.sort(a);	int o = 0, ans = 0;	for (int i = k; i >= 0; i--) {	    if (a[i] != 0) {		if (a[i] % 2 == 0)		    ans += a[i];		else {		    o++;		    ans += a[i] - 1;		}	    } else {		break;	    }	}	ans += o / 2;	if (o % 2 != 0) {	    ans++;	}	out.write((ans+"\n").getBytes());	out.flush();    }     static class FastReader { 	BufferedReader br;	StringTokenizer st; 	public FastReader() {	    br = new BufferedReader(new InputStreamReader(System.in));	} 	String next() {	    while (st == null || !st.hasMoreElements()) {		try {		    st = new StringTokenizer(br.readLine());		} catch (IOException e) { 		}	    }	    return st.nextToken();	} 	int nextInt() {	    return Integer.parseInt(next());	} 	long nextLong() {	    return Long.parseLong(next());	} 	double nextDouble() {	    return Double.parseDouble(next());	}     }}
