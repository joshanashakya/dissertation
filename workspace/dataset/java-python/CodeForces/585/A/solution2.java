import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Arrays;import java.util.Random;import java.util.StringTokenizer;Â public class Solution{				    public static void main(String[] args) throws IOException {         	FastScanner fs = new FastScanner();    	PrintWriter out = new PrintWriter(System.out);    	    		    		    	int tt = 1;    	while(tt-->0) {    		    		int n = fs.nextInt();    		long[][] arr = new long[n][3];    		    		for(int i=0;i<n;i++) {    			arr[i][0] = fs.nextLong();    			arr[i][1] = fs.nextLong();    			arr[i][2] = fs.nextLong();    		}    		    		    		ArrayList<Integer> list = new ArrayList<Integer>();    		    		    		for(int i=0;i<n;i++) {    			if(arr[i][2]<0) continue;    			list.add(i+1);    			long offcry = arr[i][0];    			long corcry = 0;    			int ind = 0;    			for(int j=i+1;j<n;j++) {    				if(arr[j][2]<0) continue;    				arr[j][2] -= Math.max(0, offcry-(ind++)) + corcry;    				if(arr[j][2]<0) corcry += arr[j][1];    			}    		}    		    		out.println(list.size());    		for(int a: list) out.print(a+" ");    		    		    		    	}    	    		    		    		    	out.close();    		    }                                                 static final Random random=new Random();    	    static void ruffleSort(int[] a) {    	int n=a.length;//shuffle, then sort     	for (int i=0; i<n; i++) {    		int oi=random.nextInt(n); int temp=a[oi];    		a[oi]=a[i]; a[i]=temp;    	}    	Arrays.sort(a);    }             	    	    static class FastScanner{    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    	StringTokenizer st = new StringTokenizer("");         	public String next(){    		while(!st.hasMoreElements()){    			try{    				st = new StringTokenizer(br.readLine());    			} catch(IOException e){    				e.printStackTrace();    			}    		}    		return st.nextToken();    	}    		    	public String nextLine() throws IOException {    		return br.readLine();    	}    		    	public int nextInt(){    		return Integer.parseInt(next());    	}         	public int[] readArray(int n){    		int[] a = new int[n];    		for(int i=0;i<n;i++)    			a[i] = nextInt();    		return a;    	}    		    	public long nextLong() {    		return Long.parseLong(next());    	}    		    	public char nextChar() {    		return next().toCharArray()[0];    	}    }   	}
