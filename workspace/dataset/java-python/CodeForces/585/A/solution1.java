import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.math.BigInteger;import java.util.*; public class Main{     public static void main(String[] args)    {        FastScanner input = new FastScanner();        ArrayList<Integer> ans = new ArrayList<>();        int n = input.nextInt();        long v[] = new long[n];        long d[] = new long[n];        long p[] = new long[n];        ArrayList<Integer> queue=  new ArrayList<>();                for (int i = 0; i < n; i++) {            v[i] = input.nextLong();            d[i] = input.nextLong();            p[i] = input.nextLong();            queue.add(i);        }//        System.out.println(queue);       long decrease=0;       long extra=0;        while(!queue.isEmpty())        {            int value = queue.remove(0);            ans.add(value+1);            decrease=v[value];            extra=0;            int j=0;            while(j<queue.size())            {                int k = queue.get(j);                p[k]-=(decrease+extra);                if(decrease>0)                    decrease--;               if(p[k]<0)               {                   queue.remove(j);                   extra+=d[k];                                 }               else               {                    j++;               }            }                                    }        System.out.println(ans.size());        for (Integer integer :ans) {            System.out.print(integer+" ");        }    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }    } }
