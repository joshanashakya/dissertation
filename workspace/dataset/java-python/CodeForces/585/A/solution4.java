import java.io.*;import java.util.*; public class Main {     public static void main(String[] args) throws Exception {        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(System.out);        int n = Integer.parseInt(in.readLine());        int[] vs = new int[n];        int[] ds = new int[n];        int[] ps = new int[n];        for (int i = 0; i < n; i++) {            StringTokenizer st = new StringTokenizer(in.readLine());            vs[i] = Integer.parseInt(st.nextToken());            ds[i] = Integer.parseInt(st.nextToken());            ps[i] = Integer.parseInt(st.nextToken());        }        int res = 0;        Queue<Integer> q = new LinkedList<>();        boolean[] gone = new boolean[n];        for (int i = 0; i < n; i++) {            if (ps[i] < 0) {                continue;            }            q.offer(i+1);            res++;            int delta = vs[i];            PriorityQueue<Integer> cry = new PriorityQueue<>();            for (int j = i+1; j < n; j++) {                if (delta < 0) break;                if (gone[j]) continue;                ps[j] -= delta;                delta--;                if (ps[j] < 0) {                    cry.offer(j);                    gone[j] = true;                }            }            while (!cry.isEmpty()) {                int j = cry.poll();                for (int k = j+1; k < n; k++) {                    if (gone[k]) continue;                    ps[k] -= ds[j];                    if (ps[k] < 0) {                        cry.offer(k);                        gone[k] = true;                    }                }            }        }         out.println(res);        while (!q.isEmpty()) {            out.print(q.poll() + " ");        }        out.println('\n');        out.close();    } }/*   */
