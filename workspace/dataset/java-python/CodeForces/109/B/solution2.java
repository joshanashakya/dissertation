// practice with rainboyimport java.io.*;import java.util.*; public class CF109B extends PrintWriter {	CF109B() { super(System.out, true); }	Scanner sc = new Scanner(System.in);	public static void main(String[] $) {		CF109B o = new CF109B(); o.main(); o.flush();	} 	static final int A = 1000000000;	long lucky(int i) {		return i == 1 ? 0 : lucky(i / 2) * 10 + (i % 2 == 0 ? 4 : 7);	}	int intersect(int al, int ar, int bl, int br) {		int l = Math.max(al, bl);		int r = Math.min(ar, br);		return l <= r ? r - l + 1 : 0;	}	void main() {		int ul = sc.nextInt();		int ur = sc.nextInt();		int vl = sc.nextInt();		int vr = sc.nextInt();		int k = sc.nextInt();		int[] qq = new int[1024];		int cnt = 0;		qq[cnt++] = 0;		long a;		for (int i = 2; (a = lucky(i)) <= A; i++)			qq[cnt++] = (int) a;		qq[cnt++] = A + 1;		long cnt_ = 0;		for (int i = 1, j; (j = i + k - 1) < cnt - 1; i++) {			int pl = qq[i - 1] + 1;			int pr = qq[i];			int ql = qq[j];			int qr = qq[j + 1] - 1;			cnt_ += (long) intersect(ul, ur, pl, pr) * intersect(vl, vr, ql, qr);			cnt_ += (long) intersect(ul, ur, ql, qr) * intersect(vl, vr, pl, pr);			if (i == j && ul <= qq[i] && qq[i] <= ur && vl <= qq[i] && qq[i] <= vr)				cnt_--;		}		printf("%.9f\n", (double) cnt_ / (ur - ul + 1) / (vr - vl + 1));	}}
