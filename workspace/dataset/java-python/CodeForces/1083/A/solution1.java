import java.awt.Point;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.Arrays;import java.util.StringTokenizer; public class D21195 {    static int [] w;    static long res, dp [];    static ArrayList<Point> [] adj;    static void dfs(int u, int p){        dp[u] = w[u];        for(Point e:adj[u])            if(e.x != p){                dfs(e.x, u);                res = Math.max(res, dp[u] + dp[e.x] - e.y);                dp[u] = Math.max(dp[u], dp[e.x] - e.y + w[u]);            }        res = Math.max(res,	dp[u]);    }    public static void main(String[] args) throws NumberFormatException, IOException {        Scanner sc = new Scanner();        PrintWriter out = new PrintWriter(System.out);        int n = sc.nextInt();        w = new int[n];        for (int i = 0; i < w.length; ++i) {            w[i] = sc.nextInt();        }        adj = new ArrayList[n];        for (int i = 0; i < adj.length; ++i) {            adj[i] = new ArrayList<>();        }        for (int i = 0; i < n-1; ++i) {            int u = sc.nextInt()-1, v = sc.nextInt()-1, c = sc.nextInt();            adj[u].add(new Point(v, c));            adj[v].add(new Point(u, c));        }        dp = new long[n+1];        dfs(0, -1);        out.println(res);        out.close();    }      static class Scanner {        BufferedReader br;        StringTokenizer st;         public Scanner() {            br = new BufferedReader(new InputStreamReader(System.in));        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens()) {                st = new StringTokenizer(br.readLine());            }            return st.nextToken();        }         public int nextInt() throws NumberFormatException, IOException {            return Integer.parseInt(next());        }        public long nextLong() throws NumberFormatException, IOException {            return Long.parseLong(next());        }    } }
