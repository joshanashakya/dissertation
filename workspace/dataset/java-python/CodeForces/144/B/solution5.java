import java.util.Arrays;import java.util.HashSet;import java.util.List;import java.util.Scanner; public class Meeting { 	public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner input = new Scanner(System.in);				int xa = input.nextInt();		int ya = input.nextInt();		int xb = input.nextInt();		int yb = input.nextInt();				int n = input.nextInt();				HashSet<List<Integer>> s = new HashSet<List<Integer>>();						long pointNum = 0;		for(int i = 0; i < n; i++){			int x = input.nextInt();			int y = input.nextInt();			int r = input.nextInt();						for(int j = Math.min(xa, xb); j <= Math.max(xa, xb); j++){				if(calcDist(j, ya, x, y) <= r*r)					s.add(Arrays.asList(j, ya));								if(calcDist(j, yb, x, y) <= r*r)					s.add(Arrays.asList(j, yb));								if(i==0) pointNum +=2;			}						for(int j = Math.min(ya, yb)+1; j < Math.max(ya, yb); j++){				if(calcDist(xa, j, x, y) <= r*r)					s.add(Arrays.asList(xa, j));								if(calcDist(xb, j, x, y) <= r*r)					s.add(Arrays.asList(xb, j));								if(i==0) pointNum +=2;			}								}				System.out.println(pointNum - s.size());	}		static double calcDist(int x1, int y1, int x2, int y2){		return Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2);	} }
