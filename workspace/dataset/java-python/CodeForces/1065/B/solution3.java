import java.lang.*;import java.util.*;import java.util.stream.Collectors;import java.io.*; public class Fridge   { 	static Set<Integer> set;	static long tmin;	static int[] ar;	static boolean[] visited;	public static void dfs(HashMap[] adj, int u,long curcost)	{		if(set.contains(u) || curcost>tmin) {			if(curcost<tmin) {				tmin=curcost;			}			return;		}		visited[u]=true;	//	System.out.println(u);		Map<Integer,Integer> map = adj[u];		for(Map.Entry<Integer, Integer> entry: map.entrySet())		{			int v = entry.getKey();			if(!visited[v])				dfs(adj,v,curcost+entry.getValue());		}	}			public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		long n = sc.nextLong();		long m = sc.nextLong();				long maxconn = Math.min(n, m*2);		long i=0;		while(i*(i-1)/2 < m)i++;		System.out.println((long)(n-maxconn)+" "+(long)(n-i));			}} 
