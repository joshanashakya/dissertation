import math,sysfrom collections import defaultdict,dequeimport bisect as bidef yes():print('YES')def no():print('NO')def I():return (int(sys.stdin.readline()))def In():return(map(int,sys.stdin.readline().split()))def Sn():return sys.stdin.readline().strip()def Pr(x): sys.stdout.write(str(x)+'\n')#sys.setrecursionlimit(1500)def dict(a):    d={}     for x in a:        if d.get(x,-1)!=-1:            d[x]+=1        else:            d[x]=1    return d #  Find leftmost value >= x #def find_gte(a, x):    i = bi.bisect_left(a, x)    if i != len(a):        return i    else:                    return -1def main():    try:        a,b=In()        if b-a==0:            print(a)        elif b-a==1:            print(b) if b&1 else print(a)        else:            s,t=bin(a)[2:],bin(b)[2:]            for i in range(len(t)-len(s)):                s='0'+s            ans=[]            ok=0            for i in range(len(t)):                if t[i]=='1' and s[i]=='0':                    ans.append('0')                    for j in range(len(t)-len(ans)):                        ans.append('1')                    ok=1                    break                if ok:                    break                else:                    ans.append(t[i])            if t.count('1')>ans.count('1'):                print(b)                return                        ans=int(''.join(ans),2)            print(ans)     except:        pass        M = 998244353P = 1000000007 if __name__ == '__main__':    for _ in range(I()):main()    #for _ in range(1):main()#End# #        ******************* All The Best *******************   #
