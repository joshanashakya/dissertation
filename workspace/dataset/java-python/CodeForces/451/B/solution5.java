import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class pre464 {    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }    public static void main(String[] args){        FastReader obj = new FastReader();        int n = obj.nextInt(),arr[] = new int[n],copy[] = new int[n];        for(int i=0;i<n;i++) {            arr[i] = obj.nextInt();            copy[i] = arr[i];        }        int start = 0,end = 0;        for(int i=0;i<n-1;i++){            if(arr[i]>arr[i+1]){                start = i;                break;            }        }        for(int i=n-1;i>0;i--){            if(arr[i]<arr[i-1]){                end = i;                break;            }        }        int u = start;        for(int i=end;i>=start;i--){            copy[u++] = arr[i];        }        boolean flag = true;        for(int i=0;i<n-1;i++){            if(copy[i]>copy[i+1]){                flag = false;                break;            }        }        System.out.println((flag)?"yes\n"+((start<end)?(start+1)+" "+(end+1):(end+1)+" "+(start+1)):"no");    }}
