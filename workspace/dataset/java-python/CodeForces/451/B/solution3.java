import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class B451M2{     static int mod=(int)(1e9+7);    static long MOD=(long)(1e9+7);    static FastReader in=new FastReader();    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));            public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {			int n=in.nextInt();			int arr[]=in.readIntArray(n);						int ind1=-1;			for(int i=1;i<n;i++)			{				if(arr[i]<arr[i-1])				{					ind1=i-1;					break;				}							}			if(ind1==-1)			{				pr.println("yes\n1 1");				continue tcloop;			}						int ind2=n-1;			for(int i=ind1;i<n-1;i++)			{				if(arr[i]<arr[i+1])				{					ind2=i;					break;				}			}						for(int i=ind1;i<=(ind1+ind2)/2;i++)			{				int temp=arr[i];				arr[i]=arr[ind2-i+ind1];				arr[ind2-i+ind1]=temp;											}						for(int i=0;i<n-1;i++)			{				if(arr[i]>arr[i+1])				{					pr.println("no");					continue tcloop;									}			}			ind1++;			ind2++;			pr.println("yes\n"+ind1+" "+ind2);																		           }        pr.flush();            }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }   
