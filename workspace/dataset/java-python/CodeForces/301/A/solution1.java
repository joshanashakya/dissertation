import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     int N;    int[] a;    void run(FastScanner in, PrintWriter out) {         // when n is odd, we can achieve any state we need        // eg n=5        // our selection choices are        // 5 0        // 4 1        // 3 2        // 2 3        // 1 4        // 0 5        // since the diference between 2/3, 3/2 is 1, we can use that to flip any bit         // when n == 6        // our choices are        // 6 0        // 5 1        // 4 2        // 3 3        // 2 4        // 1 5        // 0 6        // we can only make them all positive when the number of negative is initially 0         int N = in.nextInt();        int numNeg = 0;        int[] a = new int[2*N-1];        int sum = 0;        for (int i = 0; i < 2*N-1; i++) {            int aa = in.nextInt();            a[i] = Math.abs(aa);            sum += a[i];            if (aa < 0) numNeg++;        }         Arrays.sort(a);         if ((N%2) == 0 && (numNeg%2) == 1) out.println(sum - 2*a[0]);        else out.println(sum);     }      static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
