import java.util.*; import java.io.*; public class Main {		public static int mod = 1000000007;		public static void solve(InputReader in) {		int n = in.readInt();		int a[] = new int[n]; 		int b[] = new int[n]; 		int t[] = new int[n]; 		int i , j; 		for( i = 0; i<n-1; i++)			a[i] = in.readInt(); 				for( i = 0; i<n-1; i++)			b[i] = in.readInt();				for(int x = 0; x < 4; ++x){	        boolean flag = true;	        t[0] = x;	        for( i = 0; i < n - 1; ++i){	            for( j = 0; j < 4; ++j){	                if(a[i] == (t[i] | j) && b[i] == (t[i] & j)){	                    t[i+1] = j;	                    break;	                }	            }	            if(j >= 4){	                flag = false;	                break;	            }	        }	        	        if(flag){	            System.out.println("YES"); 	            for( i = 0; i < n; ++i)System.out.print(t[i] + " ");	            System.out.println();	            return ;	        }	    }	 	    System.out.println("NO"); 	} 	public static void main(String[] args) {		InputReader in = new InputReader(System.in);		int t = 1;		while (t-- > 0)			solve(in);	}}  class InputReader{	private InputStream stream;	private byte[] buf = new byte[1024];	private int curChar;	private int numChars;	private SpaceCharFilter filter; 	 public InputReader(InputStream stream) {		this.stream = stream;	}      public int read() {		if (numChars == -1)			throw new InputMismatchException();		if (curChar >= numChars) {			curChar = 0;			try {				numChars = stream.read(buf);			} catch (IOException e) {				throw new InputMismatchException();			}			if (numChars <= 0)				return -1;		}		return buf[curChar++];	}      public int readInt() {		int c = read();		while (isSpaceChar(c))			c = read();		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		int res = 0;		do {			if (c < '0' || c > '9')				throw new InputMismatchException();			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}      public String readString() {		int c = read();		while (isSpaceChar(c))			c = read();		StringBuilder res = new StringBuilder();		do {			res.appendCodePoint(c);			c = read();		} while (!isSpaceChar(c));		return res.toString();	}      public long readLong() {		int c = read();		while (isSpaceChar(c)) {			c = read();		}		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		long res = 0;		do {			if (c < '0' || c > '9') {				throw new InputMismatchException();			}			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}	     public boolean isSpaceChar(int c) {		if (filter != null)			return filter.isSpaceChar(c);		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;	}          public String next() {		return readString();	}         public interface SpaceCharFilter {		public boolean isSpaceChar(int ch);	}}
