#include <iostream>#include <vector>#include <cmath>#include <algorithm>#include <string>#include <queue>#include <set>#include <iomanip> using namespace std;typedef long long ll;typedef unsigned long long ull;typedef vector<ll> vl;typedef vector<vl> vvl;typedef vector<bool> vb;typedef vector<ull> vul;typedef vector<pair<ll, ll>> vpl;typedef pair<ll, ll> pl;#define For(i, n) for(ll i = 0; i < n; i++)#define len(n) (ll)(n).size()#define Sort(a) sort(a.begin(), a.end())bool dp[100010][4];ll path[100010][4];int main() {	ios_base::sync_with_stdio(0);	cin.tie(0);	cout.tie(0);	ll n;	cin >> n;	vl a(n);	For(i, n - 1) cin >> a[i];	vl b(n);	For(i, n - 1) cin >> b[i];	dp[1][0] = true;	dp[1][1] = true;	dp[1][2] = true;	dp[1][3] = true;	for (ll i = 2; i <= n; i++) {		For(j, 4) {			For(j1, 4) {				if (((j1 | j) == a[i - 2]) && ((j1 & j) == b[i - 2]) && dp[i - 1][j1]) {					dp[i][j] = true;					path[i][j] = j1;					//cout << i << ' ' << j << ' ' << j1 << endl;				}			}		}	}	if (dp[n][0] | dp[n][1] | dp[n][2] | dp[n][3]) {		cout << "YES" << endl;		ll prev;		if (dp[n][0]) {			prev = 0;		}		else if (dp[n][1]) {			prev = 1;		}		else if (dp[n][2]) {			prev = 2;		}		else {			prev = 3;		}		vl ans;		ans.push_back(prev);		for (ll i = n; i > 1; i--) {			prev = path[i][prev];			ans.push_back(prev);		}		reverse(ans.begin(), ans.end());		for (ll i : ans) {			cout << i << ' ';		}	}	else {		cout << "NO";	}	return 0;}
