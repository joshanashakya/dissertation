import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Main {     private static int[] a,b,t;    private static int n;     public static void main(String[] args) throws IOException{        n = Reader.readint();        a = new int[n];        b = new int[n];        t = new int[n + 1];        for(int i = 1;i < n;i ++){            a[i] = Reader.readint();        }         for(int i = 1;i < n;i ++){            b[i] = Reader.readint();        }         if(dfs(1)){            StringBuilder res = new StringBuilder();            for(int i  = 1;i <= n;i ++){                res.append(t[i]);                if(i == n){                    res.append('\n');                }                else{                    res.append(' ');                }            }            System.out.println("YES");            System.out.print(res);        }        else{            System.out.println("NO");        }     }     private static boolean dfs(int pos){        if(pos == n + 1){            return true;        }        else if(pos == 1){            for(int i = 0;i <= 3;i ++){                t[1] = i;                if(dfs(pos + 1))                    return true;            }        }        else{            for(int i = 0;i <= 3;i ++){                if((i & t[pos - 1]) == b[pos - 1] && (i | t[pos - 1]) == a[pos - 1]){                    t[pos] = i;                    if(dfs(pos + 1))                        return true;                }            }        }        return false;    }}class Reader{    private static BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));    private static StringTokenizer stringTokenizer = new StringTokenizer("");    public static String readline() throws IOException{        return bufferedReader.readLine();    }    static int readint() throws IOException{        if(!stringTokenizer.hasMoreTokens()){            stringTokenizer = new StringTokenizer(bufferedReader.readLine());        }        return Integer.parseInt(stringTokenizer.nextToken());    } }
