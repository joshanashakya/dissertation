import sysimport mathdef gcd(a, b):    	c = max(a,b)    	d = min(a,b)    	r = c%d    	if r==0:    		return d    	return gcd(d,r)    	def lcm(a, b):    def gcd_naive(a, b):    	c = max(a,b)    	d = min(a,b)    	r = c%d    	if r==0:    		return d    	return gcd_naive(d,r)Â     return int(a*b/gcd_naive(a,b))Â def fn(a,b,c,d):    k1 = lcm(a,c)    k2= lcm(b,d)    f = k1//a    b1 = b*f    f2 = k1//c    d1 = d*f2    if b1==d1:        print("0/1")        return 0    elif b1>d1:        nu = b1-d1        de = b1    else:        f1 = k2//b        a1 = f1*a        f3 = k2//d        c1 = f3*c        nu = a1-c1        de = a1        g = gcd(nu,de)    nu=int(nu//g)    de=int(de//g)    print(str(nu)+"/"+str(de))                if __name__ == '__main__':        input = sys.stdin.read()    data = list(map(float, input.split()))    a = (data[0])    b = data[1]    c = data[2]    d= data[3]    (fn(a,b,c,d))
