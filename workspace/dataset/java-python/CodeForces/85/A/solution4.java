import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class A { 	public static void main(String[] args) throws IOException 	{		Scanner sc = new Scanner(System.in);		PrintWriter out = new PrintWriter(System.out);				int n = sc.nextInt();		char[][] grid = new char[4][n];		int c = 0;		for(int i = 0; i + 1 < n; i += 2, c = (c + 1)%26)		{			grid[1][i] = grid[1][i + 1] = (char) ((c + 1)%26 + 'a');			grid[0][i] = grid[0][i + 1] = (char) (c + 'a');		}		if((n & 1) == 1)			grid[0][n - 1] = grid[1][n - 1] = (char) ((c + 1)%26 + 'a');				c = 0;		for(int i = 1; i + 1 < n; i += 2, c = (c + 1)%26)		{			grid[2][i] = grid[2][i + 1] = (char) ((char) c + 'a');			grid[3][i] = grid[3][i + 1] = (char) ((c + 1)%26 + 'a');		}		grid[2][0] = grid[3][0] = 'z';		if((n & 1) == 0)		{			c = 'a';			while(c == grid[1][n - 1] || n > 1 && (c == grid[2][n - 2] || c == grid[3][n - 2]))				++c;			grid[2][n - 1] = grid[3][n - 1] = (char) c;		}				for(char[] x: grid)			out.println(x);		out.close();	} 	static class Scanner 	{		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));} 		public Scanner(FileReader r){	br = new BufferedReader(r);} 		public String next() throws IOException 		{			while (st == null || !st.hasMoreTokens()) 				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {return Integer.parseInt(next());} 		public long nextLong() throws IOException {return Long.parseLong(next());} 		public String nextLine() throws IOException {return br.readLine();} 		public double nextDouble() throws IOException { return Double.parseDouble(next()); } 		public boolean ready() throws IOException {return br.ready();}  	}}
