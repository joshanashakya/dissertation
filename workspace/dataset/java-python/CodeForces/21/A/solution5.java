import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Arrays;import java.util.StringTokenizer;import java.util.regex.Matcher;import java.util.regex.Pattern; import javax.print.attribute.standard.Finishings; public class Main {  	static boolean good_user_name(String username) {		if (username.isEmpty() || username.length() > 16) return false;		Pattern p = Pattern.compile("[^A-Za-z0-9_]+");		Matcher m = p.matcher(username);		if (m.find()) return false;		return true;	} 	static boolean good_end(String s) {		Pattern p = Pattern.compile("\\.$");		Matcher m = p.matcher(s);		if (m.find()) return false;		return true;	}	 	static boolean solve(StringTokenizer tk) {		if(tk.countTokens() != 2) return false; 		String username = tk.nextToken();		if (!good_user_name(username)) return false;				String second_part = tk.nextToken();				String temp[] = second_part.split("/"); 		if (temp[0].length() > 32 || temp[0].isEmpty()) return false;		String hostname[] = temp[0].split("\\.");  		if (!good_end(temp[0])) return false;		for(int i= 0; i < hostname.length;  i++) {			if (!good_user_name(hostname[i])) return false;		}		if (temp.length > 2) return false;		if (temp.length == 1) return true;		String resource = temp[1];		if (!resource.isEmpty() && !good_user_name(resource)) 			return false;		return true;	}   	public static void main(String[] args) throws IOException {		BufferedReader bf= new BufferedReader(new InputStreamReader(System.in));		String in = bf.readLine();		Pattern p = Pattern.compile("^@|@$|^\\.|\\.$|/$");		Matcher m = p.matcher(in);		if (m.find()) System.out.println("NO");		else  {			StringTokenizer tk = new StringTokenizer(in,"@");			System.out.println(solve(tk)?"YES":"NO");		} 	}}   		   		 	  	     			  	    		
