import java.util.*;import java.io.*;public class A{      public static void main(String ar[]) throws Exception      {            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));            String s1[]=br.readLine().split(" ");            int n=Integer.parseInt(s1[0]);            int m=Integer.parseInt(s1[1]);                        int a[][]=new int[n][m];            for(int i=0;i<n;i++)            {                  String s2[]=br.readLine().split(" ");                  for(int j=0;j<m;j++)                   a[i][j]=Integer.parseInt(s2[j]);            }                        int r1[][]=new int[n][m];            int r2[][]=new int[n][m];            int c1[][]=new int[n][m];            int c2[][]=new int[n][m];            int b[][]=new int[n][m];                        for(int i=0;i<n;i++)            {                  TreeMap<Integer,ArrayList<Integer>> tm=new TreeMap<Integer,ArrayList<Integer>>();                  TreeMap<Integer,ArrayList<Integer>> tm1=new TreeMap<Integer,ArrayList<Integer>>();                   for(int j=0;j<m;j++)                  {                        if(tm.containsKey(a[i][j]))                        { tm.get(a[i][j]).add(j);  tm1.get(a[i][j]).add(j); }                        else                        {                              ArrayList<Integer> al=new ArrayList<Integer>();                              ArrayList<Integer> al1=new ArrayList<Integer>();                              al.add(j);                              al1.add(j);                              tm.put(a[i][j],al);                              tm1.put(a[i][j],al1);                        }                  }                                    int t=0;                  while(!tm.isEmpty())                  {                        ArrayList<Integer> al=tm.get(tm.lastKey());                        tm.remove(tm.lastKey());                        for(int j=0;j<al.size();j++)                         r1[i][al.get(j)]=t;                        t++;                  }                                    t=0;                  while(!tm1.isEmpty())                  {                        ArrayList<Integer> al=tm1.get(tm1.firstKey());                        tm1.remove(tm1.firstKey());                        for(int j=0;j<al.size();j++)                         r2[i][al.get(j)]=t;                        t++;                  }            }                        for(int j=0;j<m;j++)            {                  TreeMap<Integer,ArrayList<Integer>> tm=new TreeMap<Integer,ArrayList<Integer>>();                  TreeMap<Integer,ArrayList<Integer>> tm1=new TreeMap<Integer,ArrayList<Integer>>();                   for(int i=0;i<n;i++)                  {                        if(tm.containsKey(a[i][j]))                        { tm.get(a[i][j]).add(i);  tm1.get(a[i][j]).add(i); }                        else                        {                              ArrayList<Integer> al=new ArrayList<Integer>();                              ArrayList<Integer> al1=new ArrayList<Integer>();                              al.add(i);                              al1.add(i);                              tm.put(a[i][j],al);                              tm1.put(a[i][j],al1);                        }                  }                                    int t=0;                  while(!tm.isEmpty())                  {                        ArrayList<Integer> al=tm.get(tm.lastKey());                        tm.remove(tm.lastKey());                        for(int i=0;i<al.size();i++)                         c1[al.get(i)][j]=t;                        t++;                  }                                    t=0;                  while(!tm1.isEmpty())                  {                        ArrayList<Integer> al=tm1.get(tm1.firstKey());                        tm1.remove(tm1.firstKey());                        for(int i=0;i<al.size();i++)                         c2[al.get(i)][j]=t;                        t++;                  }            }                        StringBuffer sb=new StringBuffer();            for(int i=0;i<n;i++)            {                  for(int j=0;j<m;j++)                  {                        b[i][j]=1+Math.max(r1[i][j],c1[i][j])+Math.max(r2[i][j],c2[i][j]);                        sb.append(b[i][j]).append(" ");                  }                  sb.append("\n");            }            System.out.println(sb);      }}
