import java.util.*;import java.io.*; public class B1137 { 	static int[] prefixFunction(char[] s) // O(n)	{		int n = s.length, pi[] = new int[n];		for (int i = 1, j = 0; i < n; ++i) // j = pi[i-1] at the beginning of every iteration		{			while (j > 0 && s[i] != s[j])				j = pi[j - 1];			if (s[i] == s[j])				++j;			pi[i] = j;		}		return pi;	} 	public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		PrintWriter pw = new PrintWriter(System.out);		char[] s = sc.next().toCharArray();		char[] t = sc.next().toCharArray();		int f = prefixFunction(t)[t.length - 1];		int[] cnt = new int[2];		for (char c : s) {			cnt[c - '0']++;		}		char[] ans = new char[s.length];		int j = 0;		for (int i = 0; i < ans.length; i++) {			if (cnt[0] == 0) {				ans[i] = '1';			} else if (cnt[1] == 0) {				ans[i] = '0';			} else {				ans[i] = t[j++];				if (j == t.length) {					j = f;				}			}			cnt[ans[i] - '0']--;		}		pw.println(new String(ans));		pw.close();	} 	static class Scanner {		BufferedReader br;		StringTokenizer st; 		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		} 		public Scanner(FileReader f) {			br = new BufferedReader(f);		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public int[] nextIntArr(int n) throws IOException {			int[] arr = new int[n];			for (int i = 0; i < n; i++) {				arr[i] = Integer.parseInt(next());			}			return arr;		} 	} }
