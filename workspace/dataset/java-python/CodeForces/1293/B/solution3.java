//package codeforces.problem; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; /*6  */public class B1293 {      static void solve() {        int n = FS.nextInt();        double s = 0;        while (true) {            if (n > 1) {                s += 1d / n;                n--;            } else {                s += 1;                break;            }        }        FS.pt.printf("%.12f\n", s);    }     public static void main(String[] args) {//        int T = FS.nextInt();//        for (int tt = 0; tt < T; tt++) {        solve();//        }        FS.pt.close();    }     static class FS {        private static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        private static StringTokenizer st = new StringTokenizer("");        static PrintWriter pt = new PrintWriter(System.out);         static String next() {            while (!st.hasMoreTokens())                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         static int nextInt() {            return Integer.parseInt(next());        }         static int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         static int[][] read2Array(int m, int n) {            int[][] a = new int[m][n];            for (int i = 0; i < m; i++) {                for (int j = 0; j < n; j++) {                    a[i][j] = nextInt();                }            }            return a;        }         static void printArr(int[] arr) {            for (int value : arr) {                pt.print(value);                pt.print(" ");            }            pt.println();        }         static void print2Arr(int[][] arr, int m, int n) {            for (int i = 0; i < m; i++) {                for (int j = 0; j < n; j++) {                    pt.print(arr[i][j]);                    pt.print(" ");                }                pt.println();            }            pt.println();        }         static void close() {            pt.close();        }         static long nextLong() {            return Long.parseLong(next());        }    }}
