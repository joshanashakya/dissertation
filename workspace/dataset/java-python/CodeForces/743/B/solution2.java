import java.util.*;  public class Main {	public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		int n = sc.nextInt();		long k = sc.nextLong();		long sz = 1;//最终序列长度		for(int i = 1;i < n;i ++) {//求序列长度			sz = sz * (long)2 + (long)1;		}		System.out.println(dfs(1,sz,k,n));	}  	private static int dfs(long l, long r, long k, int n) {		long mid = l + (r - l) / (long)2;//取传进来序列的中间位置,且中间这个数是当前序列的最大值		if(k < mid) {			return dfs(l, mid - 1, k, n - 1);//缩短序列为[l,mid-1]，且此时这个序列最大值为n-1		}else if(k > mid) {			return dfs(mid + 1, r, k, n - 1);//缩短序列为[mid+1,l]，且此时这个序列最大值为n-1		}else {			return n;//返回最终结果		}	 	} }
