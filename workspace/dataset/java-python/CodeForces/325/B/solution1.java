//325B import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.List; public class StadiumAndGames {	public static void main(String[] args) throws IOException {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));				long n = Long.parseLong(br.readLine());				List<Long> res = new ArrayList<Long>();				for (int k = 0; k <= 64-Long.numberOfLeadingZeros(n-1)+1; k++) {						// Binsearch over x			// FIXME check overflow			long a = 0;			long b = 2000000002;			// f(x) (monotonous) = x*(1 << k - 1) + x*(x-1)/2 = n			for (long m = (a+b)/2; a+1 < b; m = (a+b)/2) {				if ((2L << k) - 3L + m <= 2L * n / m) {					a = m;				}				else {					b = m;				}			}			if (a%2L == 0L) continue;			if (a * ((1L << k) - 1L) + a * (a - 1L) / 2L == n) {				res.add(a*(1L << k));			}		}				if (res.size() == 0) {			System.out.println(-1);			return;		}				Collections.sort(res);		for (Long r : res) {			System.out.println(r);		}	}}
