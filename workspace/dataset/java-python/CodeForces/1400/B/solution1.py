from math import gcdimport sys  def input():    return sys.stdin.readline().rstrip()  def func(M, sord_left, axe_left, s, w):    #taks all sord    ans = 0    if M >= sord_left * s:        ans = max(ans, min((M - sord_left * s)//w, axe_left) + sord_left)     else:        ans = max(ans, M//s)     if M >= axe_left * w:        ans = max(ans, axe_left + min((M - axe_left * w)//s, sord_left))     else:        ans = max(ans, M//w)     return ans  def slv():    p, f = map(int, input().split())    cnt_s, cnt_w = map(int, input().split())    s, w = map(int, input().split())    ans = 0    for sord in range(cnt_s + 1):        if sord*s > f:            continue        taken_axe = min(cnt_w, (f - s*sord)//w)        tmpans = sord + taken_axe + \            func(p, cnt_s - sord, cnt_w - taken_axe, s, w)        ans = max(tmpans, ans)    print(ans)    return  def main():    t = int(input())    for _ in range(t):        slv()    return  if __name__ == "__main__":    main()
