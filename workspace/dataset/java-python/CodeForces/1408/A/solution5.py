#   When in doubt, collections.Counter() #   input()#   int(input())#   input().split()#   list(map(int, input().split()))#   for _ in range(t): import mathimport collectionsimport bisect def arrPrint(a):    return " ".join([str(i) for i in a]) def gridPrint(a):    return "\n".join([" ".join([str(j) for j in a[i]]) for i in range(len(a))]) def isPalindrome(s):    for i in range(len(s)//2):        if not s[i] == s[-i-1]:            return False    return True def primeCheck(n):    for i in range(2, int(math.sqrt(n))+1):        if n%i == 0:            return False    return True def solve(n, a, b, c):    ans = [a[0]]    for i in range(1, n-1):        if a[i] == ans[i-1]:            if b[i] == ans[i-1]:                ans.append(c[i])            else:                ans.append(b[i])        else:            ans.append(a[i])    if a[-1] == ans[-1] or a[-1] == ans[0]:        if b[-1] == ans[-1] or b[-1] == ans[0]:            ans.append(c[-1])        else:            ans.append(b[-1])    else:        ans.append(a[-1])    return arrPrint(ans) t = int(input())for _ in range(t):    n = int(input())    a = list(map(int, input().split()))    b = list(map(int, input().split()))    c = list(map(int, input().split()))    print(solve(n, a, b, c))
