//package practice; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.text.SimpleDateFormat;import java.time.Instant;import java.time.LocalDate;import java.time.LocalDateTime;import java.time.LocalTime;import java.util.*;  public class Main {			 static class FastReader  	    { 	        BufferedReader br; 	        StringTokenizer st; 	  	        public FastReader() 	        { 	            br = new BufferedReader(new	                     InputStreamReader(System.in)); 	        } 	  	        String next() 	        { 	            while (st == null || !st.hasMoreElements()) 	            { 	                try	                { 	                    st = new StringTokenizer(br.readLine()); 	                } 	                catch (IOException  e) 	                { 	                    e.printStackTrace(); 	                } 	            } 	            return st.nextToken(); 	        } 	  	        int nextInt() 	        { 	            return Integer.parseInt(next()); 	        } 	  	        long nextLong() 	        { 	            return Long.parseLong(next()); 	        } 	  	        double nextDouble() 	        { 	            return Double.parseDouble(next()); 	        } 	  	        String nextLine() 	        { 	            String str = ""; 	            try	            { 	                str = br.readLine(); 	            } 	            catch (IOException e) 	            { 	                e.printStackTrace(); 	            } 	            return str; 	        } 	    }	 		public static void main(String[] args) throws IOException {      FastReader sc=new FastReader();      int t=sc.nextInt();      while(t-->0) {          int n=sc.nextInt();          int arr[]=new int[n];          Map<Integer,Integer> map=new HashMap<>();          for(int i=0;i<n;i++) {        	  arr[i]=sc.nextInt();          }          for(int e:arr) {        	  if(map.get(e)==null) {        		  map.put(e, 1);        	  }        	  else {        		  map.put(e, map.get(e)+1);        	  }          }          int element=0;          boolean flag=false;                              TreeMap<Integer, Integer> sorted = new TreeMap<>();          sorted.putAll(map);          Set<Map.Entry<Integer, Integer>> set=sorted.entrySet();          for(Map.Entry<Integer, Integer> ss:set) {        	  int key=ss.getKey();        	  int value=ss.getValue();        	  if(value==1) {        		  flag=true;        		  element=key;        		  break;        	  }          }          if(flag) {        	  for(int i=0;i<n;i++) {        		  if(arr[i]==element) {        			  System.out.println(i+1);        			  break;        		  }        	  }          }          else {        	  System.out.println("-1");          }      }	} }
