import bisectimport mathp, k = map(int, input().split()) if p < k:    print(1)    print(p)    exit(0) powK = []ans = []curr = 1while curr <= 1e18:    powK.append(curr);    curr *= kpowK.append(curr) curr = plast = -1for i in range(1, len(powK), 2):    curr += (k - 1) * powK[i]while curr > 0:    n = bisect.bisect(powK, curr) - 1    if last == -1:        last = n        ans = [0] * (last + 1);    u = int(math.floor(curr / powK[n]))    ans[n] = u    curr -= (u * powK[n]) res = []for i in range(0, len(ans)):    if i % 2 == 0:        res.append(ans[i])    else:        res.append(k - 1- ans[i])        while res[-1] == 0:    res.pop() print(len(res))for x in res:    print(x, end=" ")      
