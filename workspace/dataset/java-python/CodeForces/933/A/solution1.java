import java.io.*;import java.util.*;public class Ishu{    static Scanner scan = new Scanner(System.in);    static BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));     static void tc() throws Exception    {    int n = scan.nextInt();    int[] a = new int[n + 1];    int i;    for(i=1;i<=n;++i)        a[i] = scan.nextInt();            int[] one = new int[n + 2];    int[] two = new int[n + 2];     int[][] pre = new int[2][n + 2];    int[][] suf = new int[2][n + 2];    int[][] prede = new int[2][n + 2];        for(i=1;i<=n;++i)        {        if(a[i] == 1)            {            one[i] = one[i-1] + 1;            two[i] = two[i-1];            }        else            {            one[i] = one[i-1];            two[i] = two[i-1] + 1;            }        }    for(i=1;i<=n;++i)            {        if(a[i] == 1)            {            pre[0][i] = pre[0][i-1] + 1;            pre[1][i] = pre[1][i-1];            }        else            {            pre[0][i] = pre[0][i-1];             pre[1][i] = Math.max(pre[0][i-1], pre[1][i-1]) + 1;            }        }            for(i=n;i>=1;--i)           {        if(a[i] == 1)            {            prede[0][i] = Math.max(prede[0][i+1], prede[1][i+1]) + 1;            prede[1][i] = prede[1][i+1];            }        else            {            prede[0][i] = prede[0][i+1];            prede[1][i] = prede[1][i+1] + 1;            }        }            int ans = 0;    int T = 0;    int O = 0;    for(int l=1;l<=n;++l)            {        T = 0;        O = 0;        for(int r=l;r<=n;++r)            {            if(a[r] == 1)                O = Math.max(T, O) + 1;            else                ++T;                            int cr = 0;            cr += pre[0][l-1];            cr += one[r] - one[l-1];            cr += Math.max(prede[0][r+1], prede[1][r+1]);            ans = Math.max(ans, cr);                        cr = 0;            cr += pre[0][l-1];            cr += Math.max(T, O);            cr += prede[1][r+1];            ans = Math.max(ans, cr);                        cr = 0;            cr += Math.max(pre[0][l-1], pre[1][l-1]);            cr += two[r] - two[l-1];            cr += prede[1][r+1];            ans = Math.max(ans, cr);            }        }    output.write(ans + "\n");    output.flush();    }    public static void main(String[] args) throws Exception    {    int t = 1;    //t = scan.nextInt();    while(t-- > 0)        tc();    }}
