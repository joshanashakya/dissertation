import java.io.*;import java.util.*;import java.math.*; public class Main {     FastScanner in;    PrintWriter out;     static class FastScanner {         BufferedReader br;        StringTokenizer st;         FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         String nextLine() throws IOException {            if (st == null || !st.hasMoreTokens())                return br.readLine();            StringBuilder result = new StringBuilder(st.nextToken());            while (st.hasMoreTokens()) {                result.append(" ");                result.append(st.nextToken());            }            return result.toString();        }         int nextInt() throws IOException {            return Integer.parseInt(next());        }         long nextLong() throws IOException {            return Long.parseLong(next());        }         double nextDouble() throws IOException {            return Double.parseDouble(next());        }     }     void run() throws IOException {        in = new FastScanner(System.in);        out = new PrintWriter(System.out, false);        solve();        out.close();    }     public static void main(String[] args) throws IOException{        new Main().run();    }     public void printArr(int[] arr){        for(int i = 0; i < arr.length; i++){            out.print(arr[i] + " ");        }        out.println();    }     public long gcd(long a, long b){        if(a == 0) return b;        return gcd(b % a, a);    }      public void solve() throws IOException{         int n = in.nextInt(), m = in.nextInt(), s = in.nextInt(), f = in.nextInt();        int dir = Math.abs(f - s) / (f - s);        int prevT = 0;         for(int i = 0; i < m; i++){             int t = in.nextInt(), l = in.nextInt(), r = in.nextInt();             //out.print("Time: " + t + " Cur: " + s+ " Res : ");                        int window = t - prevT - 1;            if(window >= Math.abs(f - s)){                out.print(String.join("", Collections.nCopies(Math.abs(f - s), (dir == -1 ? "L" : "R"))));                return;            }else{                out.print(String.join("", Collections.nCopies(Math.abs(window), (dir == -1 ? "L" : "R"))));                s += dir * window;            }             if((s >= l && s <= r) || ((s + dir) >= l && (s + dir) <= r)){                out.print("X");            }else{                out.print((dir == -1 ? "L" : "R"));                s += dir;            }             prevT = t;            //out.println();         }         out.print(String.join("", Collections.nCopies(Math.abs(f - s), (dir == -1 ? "L" : "R"))));        return;     }  }
