import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayDeque;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.HashMap;import java.util.HashSet;import java.util.Objects;import java.util.Random;import java.util.StringTokenizer;import java.util.TreeMap;import java.util.TreeSet;Â public class Solution{		    public static void main(String[] args) throws IOException {         	FastScanner fs = new FastScanner();    	PrintWriter out = new PrintWriter(System.out);    	    	    		    	int tt = 1;    	while(tt-->0) {    		    		int n = fs.nextInt();    		    		if(n==0) {    			out.println("YES");    			out.println(1); out.println(1); out.println(3); out.println(3);    			out.flush(); return;    		}    		    		if(n==1) {    			int a = fs.nextInt();    			out.println("YES");    			out.println(a); out.println(3*a); out.println(3*a);    			out.flush();    			return;    		}    		    		if(n==2) {    			int a = fs.nextInt(), b = fs.nextInt();    			if(a>b) { int temp = a; a = b; b = temp;}    			if(b>3*a) {    				out.println("NO");    				out.flush();     				return;    			}    			else if(b==3*a) {    				out.println("YES");    				out.println(a); out.println(b); out.flush();    				return;    			}    			else {    				out.println("YES");    				out.println(4*a - b); out.println(3*a); out.flush();    				return;    			}    		}    		    		if(n==3) {    			int[] a = fs.readArray(3); Arrays.sort(a);    			if(a[1]+a[2]==4*a[0]) {    				out.println("YES"); out.println(3*a[0]); out.flush(); return;    			}    			if(a[2]==3*a[0]) {    				out.println("YES"); out.println(4*a[0]-a[1]); out.flush(); return;    			}    			if((a[0]+a[1])%4==0 && a[2]%3==0 && (a[0]+a[1])/4==a[2]/3 && a[2]/3<=a[0]) {    				out.println("YES"); out.println(a[2]/3); out.flush(); return;    			}    			out.println("NO"); out.flush(); return;    		}    		    		int[] a = fs.readArray(4); Arrays.sort(a);    		    		if((a[1]+a[2])==4*a[0] && a[3]==3*a[0]) {    			out.println("YES");    		}    		else {    			out.println("NO");    		}    		    		    	}    	    		    		    		    	out.close();    		    }                                   static final Random random=new Random();    	    static void ruffleSort(int[] a) {    	int n=a.length;//shuffle, then sort     	for (int i=0; i<n; i++) {    		int oi=random.nextInt(n); int temp=a[oi];    		a[oi]=a[i]; a[i]=temp;    	}    	Arrays.sort(a);    }             static void reverse(int[] arr, int l, int r) {    	for(int i=l;i<l+(r-l)/2;i++){    		int temp = arr[i]; arr[i] = arr[r-i+l-1]; arr[r-i+l-1] = temp;    	}    }        	    	    static class FastScanner{    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    	StringTokenizer st = new StringTokenizer("");         	public String next(){    		while(!st.hasMoreElements()){    			try{    				st = new StringTokenizer(br.readLine());    			} catch(IOException e){    				e.printStackTrace();    			}    		}    		return st.nextToken();    	}    		    	public String nextLine() throws IOException {    		return br.readLine();    	}    		    	public int nextInt(){    		return Integer.parseInt(next());    	}         	public int[] readArray(int n){    		int[] a = new int[n];    		for(int i=0;i<n;i++)    			a[i] = nextInt();    		return a;    	}    		    	public long nextLong() {    		return Long.parseLong(next());    	}    		    	public char nextChar() {    		return next().toCharArray()[0];    	}    }   	}
