import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     void run(FastScanner in, PrintWriter out) {         int N = in.nextInt();         if (N == 0) {            out.println("YES");            int[] a = {1,2,2,3};            for (int x : a) out.println(x);            return;        }         if (N == 4) {            int[] a = new int[4];            for (int i = 0; i < 4; i++) a[i] = in.nextInt();            Arrays.sort(a);            if (range(a) != median(a) || median(a) != avg(a)) NO();            else out.println("YES");        }         if (N == 1) {            int a = in.nextInt();            // (b+c) = 2*x = 4*a            // d = 3*a            // b = a+1            // c = 4*a-(a+1) = 3*a-1            // a < b < c < d            int d = 3*a;            int b = a+1;            int c = 3*a-1;            out.println("YES");            out.println(b);            out.println(c);            out.println(d);        }         if (N == 2) {            int[] a = new int[4];            boolean found = false;            for (int i = 0; i < N; i++) a[i] = in.nextInt();            for (int three = 1; three <= 1500 && !found; three++) {                a[2] = three;                for (int four = 1; four <= 1500 && !found; four++) {                    a[3] = four;                    if (median(a) == range(a) && range(a) == avg(a)) {                        out.println("YES");                        out.println(three);                        out.println(four);                        found = true;                    }                }            }            if (!found) NO();        }         if (N == 3) {            int[] a = new int[4];            boolean found = false;            for (int i = 0; i < N; i++) a[i] = in.nextInt();            for (int four = 1; four <= 1500 && !found; four++) {                a[3] = four;                if (median(a) == range(a) && range(a) == avg(a)) {                    out.println("YES");                    out.println(four);                    found = true;                }            }            if (!found) NO();        }            // if (N == 2) {        //     int a = in.nextInt();        //     int b = in.nextInt();        //     if (a > b) {        //         int temp = a;        //         a = b;        //         b = temp;        //     }        //     if (3*a < b) NO();        //     out.println("YES");        //     out.println(4*a-b);        //     out.println(3*a);        // }         // if (N == 3) {        //     int[] a = new int[4];        //     for (int i = 0; i < 3; i++) a[i] = in.nextInt();        //     a[3] = 1000;        //     Arrays.sort(a);        //     if (3*a[0] < a[2]) NO();         //     a[3] = 3*a[0];        //     if (range(a) == median(a) && median(a) == avg(a)) {        //         out.println("YES");        //         out.println(3*a[0]);        //     } else {        //         a[3] = a[2];        //         a[2] = 4*(a[3]-a[0]) - a[0] - a[1] - a[3];        //         if (range(a) == median(a) && median(a) == avg(a)) {        //             out.println("YES");        //             out.println(a[2]);        //         } else NO();        //     }        // }     }      void NO() {        System.out.println("NO");        System.exit(0);    }     int avg(int[] a) {        int sum = a[0] + a[1] + a[2] + a[3];        if (sum%4 != 0) return -1;        return sum/4;    }    int median(int[] a) {        int max = 0;        int min = Integer.MAX_VALUE;        int sum = 0;        for (int i = 0; i < 4; i++) {            min = Math.min(min, a[i]);            max = Math.max(max, a[i]);            sum += a[i];        }         sum = sum - min - max;        if (sum%2 != 0) return -1;        return sum/2;    }    int range(int[] a) {        int max = 0;        int min = Integer.MAX_VALUE;        for (int i = 0; i < 4; i++) {            min = Math.min(min, a[i]);            max = Math.max(max, a[i]);        }        return max-min;    }         static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
