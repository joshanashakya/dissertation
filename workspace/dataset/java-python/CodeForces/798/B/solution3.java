import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{     public static void main(String[] args)    {         FastScanner input = new FastScanner();        int n = input.nextInt();        StringBuilder s[] = new StringBuilder[n];                for (int i = 0; i < n; i++) {            s[i] = new StringBuilder(input.next());                    }//        System.out.println(main);                long minAns = Integer.MAX_VALUE;        for (int j = 0; j < n; j++) {                        StringBuilder main = new StringBuilder(s[j]+""+s[j]);            int MaxIndex= 0;            for (int i = 0; i < n; i++) {            int index = main.indexOf(s[i].toString());            if(index==-1)            {                System.out.println("-1");                return;            }            else            {                MaxIndex = Math.max(MaxIndex, index);            }        }        long ans = 0;        for (int i = 0; i < n; i++) {            ans+=(MaxIndex-main.indexOf(s[i].toString()));        }        minAns = Math.min(ans,minAns);        }        System.out.println(minAns);             }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
