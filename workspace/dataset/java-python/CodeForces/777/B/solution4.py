n = int(input())str_sher = str(input())str_mor = str(input()) num_sher = [0] * 10num_mor = [0] * 10num_sher.append(-1)num_mor.append(-1) for s in str_sher:    num_sher[ord(s) - ord('0')]+=1 for s in str_mor:    num_mor[ord(s) - ord('0')]+=1 def next_value(nums, p):    if (p > 10): return p    while (nums[p] == 0):        p += 1    nums[p] -= 1    return p def calc_hits(num_sher, num_mor, is_min_strategy):    shift = 0    if (not is_min_strategy):        shift = 1    p_sher = 0    num = 0    p_sher = next_value(num_sher, p_sher)    p_mor = next_value(num_mor, p_sher + shift)     while (p_sher < 10 and p_mor < 10):        num += (p_sher <= p_mor)        p_sher = next_value(num_sher, p_sher)        p_mor = next_value(num_mor, p_sher + shift)     if (is_min_strategy):        return n - num    else:        return num print(calc_hits(num_sher.copy(), num_mor.copy(), True))print(calc_hits(num_sher.copy(), num_mor.copy(), False))
