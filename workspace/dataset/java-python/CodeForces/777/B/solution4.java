import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{          public static void main(String[] args)    {         FastScanner input = new FastScanner();        int n = input.nextInt();        String s = input.next();        String m = input.next();        char sherlock1[]   = s.toCharArray();        char sherlock2[]   = s.toCharArray();        char moriaty1[] = m.toCharArray();        char moriaty2[] = m.toCharArray();        Arrays.sort(sherlock1);        Arrays.sort(sherlock2);        Arrays.sort(moriaty1);        Arrays.sort(moriaty2);                int count=0;        for (int i = 0; i < n; i++) {            for (int j = 0; j < n; j++) {                if((sherlock1[i]-'0')<=(moriaty1[j]-'0'))                {                    count++;                    moriaty1[j]='0';                    break;                }            }        }        int acount=0;        for (int i = 0; i < n; i++) {            for (int j = 0; j < n; j++) {                if((sherlock2[i]-'0')<(moriaty2[j]-'0'))                {                    acount++;                    moriaty2[j]='0';                    break;                }            }        }                        System.out.println((n-count)+"\n"+acount);            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
