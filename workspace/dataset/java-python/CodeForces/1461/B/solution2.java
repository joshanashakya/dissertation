import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class Zad1461B { 	public static void main(String[] args) {		// TODO Auto-generated method stub		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out);				int test = sc.nextInt();		while(test-->0) {			int n = sc.nextInt();			int m = sc.nextInt();			char[][] mat = new char[n][m];			int[][] mat1 = new int[n][m];						for(int i = 0;i<n;i++) {				String s = sc.next();				for(int j = 0;j<m;j++) {					mat[i][j] = s.charAt(j);					if(mat[i][j]=='*') {						mat1[i][j] = 1;					}				}			}			long[][] prefSumm = new long[n][m+1];			for(int i = 0;i<n;i++) {				for(int j = 0;j<m;j++) {					prefSumm[i][j+1] = prefSumm[i][j]+mat1[i][j];				}			}			long answer = 0;			for(int i = 0;i<n;i++) {				for(int j = 0;j<m;j++) {					boolean isGood = true;					int l = j+1;					int r = j-1;					if(mat[i][j]=='*')for(int k = i;k<n;k++) {						if(l-1>=0 && r+1<m) {							l--; r++;							if(prefSumm[k][r+1]-prefSumm[k][l]!=r-l+1) {								isGood = false;								break;							}							if(!isGood) break;							else answer++;						} else {							break;						}					}				}			}			out.println(answer);		}		out.close();	}	static class FastReader {				StringTokenizer st;		BufferedReader br;				public FastReader() {			br = new BufferedReader(					new InputStreamReader(System.in));		}				String next() {			while(st==null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}				long nextLong() {			return Long.parseLong(next());		}				double nextDouble() { 			return Double.parseDouble(next()); 		} 				String nextLine() {			String s = "";			while(st==null || st.hasMoreElements()) {				try {					s = br.readLine();				} catch (IOException e) {					e.printStackTrace();				}			}			return s;		}	}}
