import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.List;import java.util.stream.Collectors;import java.util.stream.Stream; public class Codeforces914B { 	public static void main(String[] args) throws NumberFormatException, IOException {		// TODO Auto-generated method stub 		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		int n = Integer.parseInt(br.readLine());		int[] a1= new int[100006];		List<Integer> list = Stream.of(br.readLine().split(" ")).mapToInt(Integer::parseInt).boxed().collect(Collectors.toList()); 		int [] a=list.stream().mapToInt(i->i).toArray();		for(int i=0;i<a.length;i++) {			a1[a[i]]++;		}		int flag=0;		for(int i=0;i<100006;i++) {			if(a1[i]%2==1) {				System.out.println("Conan");				flag=1;				break;			}				}		if(flag==0)			System.out.println("Agasa");		/*		 * List<Integer> list =		 * Stream.of(br.readLine().split(" ")).mapToInt(Integer::parseInt).boxed().		 * collect(Collectors.toList()); int [] a=		 * list.stream().mapToInt(i->i).toArray();		 * 		 * PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());		 * pq.addAll(list);		 * 		 * int count=0; while(true) { if(!pq.isEmpty()) { int k = pq.poll(); pq =new		 * PriorityQueue<>(Collections.reverseOrder()); list.remove(new Integer(k));		 * list=list.stream().filter(t->t>=k).collect(Collectors.toList());		 * pq.addAll(list); count++; } else { break; } }		 * 		 * if(count%2==1) { System.out.println("Conan"); } else {		 * System.out.println("Agasa"); }		 */	} }
