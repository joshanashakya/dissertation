/**	Author: CrazyDoctor*	*	File: A.java*	*	Date: 09:08:01, 02.04.2021*/ import java.io.*;import java.util.*; public class A {	public static void main(String args[]) {		FastScanner sc = new FastScanner();		FastPrinter fp = new FastPrinter();				int n = sc.nextInt();		Trip[] p = new Trip[n];		int c = 0;		for (int i = 0; i < n; i++) {			int k = sc.nextInt();			if (k % 2 == 0) {				p[i] = new Trip(k / 2,k / 2, true);			} else {				c++;				p[i] = new Trip((int)Math.floor((float)k / 2.0), (int)Math.floor((float)k / 2.0) + 1, false);			}		} 		int ch = c / 2; 		for (int i = 0; i < n; i++) {			if (p[i].even) {				fp.println(p[i].max);			} else {				fp.println((ch-- > 0 ? p[i].min : p[i].max));			}		} 		fp.close();	} 	static class Trip {		int min;		int max;		boolean even;		Trip(int min, int max, boolean even) {			this.min = min;			this.max = max;			this.even = even;		}	} 	static class FastPrinter extends PrintWriter { 		FastPrinter() {			super(System.out);		} 		void println(int n, int[] a) {			for (int i = 0; i < n; i++) {				this.print(a[i] + (i == n - 1 ? "\n" : " "));			}		} 		void println(int n, long[] a) {			for (int i = 0; i < n; i++) {				this.print(a[i] + (i == n - 1 ? "\n" : " "));			}		} 		void println(int n, double[] a) {			for (int i = 0; i < n; i++) {				this.print(a[i] + (i == n - 1 ? "\n" : " "));			}		} 		void println(ArrayList<Object> a) {			int n = a.size();			for (int i = 0; i < n; i++) {				this.print(a.get(i) + (i == n - 1 ? "\n" : " "));			}		}	} 	static class FastScanner {		BufferedReader br;		StringTokenizer st;				public FastScanner() {			br = new BufferedReader(new InputStreamReader(System.in));		}				String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt() {			return Integer.parseInt(next());		}				long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		int[] nextIntA(int n) {			int[] a = new int[n];			for (int i = 0; i < n; i++)				a[i] = this.nextInt();			return a;		} 		long[] nextLongA(int n) {			long[] a = new long[n];			for (int i = 0; i < n; i++)				a[i] = this.nextLong();			return a;		} 		double[] nextDoubleA(int n) {			double[] a = new double[n];			for (int i = 0; i < n; i++)				a[i] = this.nextDouble();			return a;		} 		ArrayList<Integer> nextIntAL(int n) {			ArrayList<Integer> a = new ArrayList<Integer>(n);			for (int i = 0; i < n; i++)				a.add(this.nextInt());			return a;		} 		ArrayList<Long> nextLongAL(int n) {			ArrayList<Long> a = new ArrayList<Long>(n);			for (int i = 0; i < n; i++)				a.add(this.nextLong());			return a;		} 		ArrayList<Double> nextDoubleAL(int n) {			ArrayList<Double> a = new ArrayList<Double>(n);			for (int i = 0; i < n; i++)				a.add(this.nextDouble());			return a;		} 		ArrayList<String> nextStringAL(int n) {			ArrayList<String> a = new ArrayList<String>(n);			for (int i = 0; i < n; i++)				a.add(this.next());			return a;		}	}}
