def basechange(n, base):  new_number = []  q = n  while (q >= base):    new_number.append(q%base)    q = q//base  new_number.append(q)  return new_number def to_base_10(n, base):  string_n = str(n)  total = 0  for i, number in enumerate(string_n[::-1]):    total += (base**i) * int(number)  return total  number1, number2 = map(int, input().strip().split(' '))max_n = max(max(str(number1)), max(str(number2)))# smallest base possible is max_n + 1print(len(basechange(to_base_10(number1, int(max_n) + 1) + to_base_10(number2, int(max_n) + 1), int(max_n) + 1)))		   						     			   	   		
