import java.util.*;import java.util.stream.*;import java.io.*;import java.math.*; public class Main {         static boolean FROM_FILE = false;        static class FastReader {         BufferedReader br;         StringTokenizer st;         public FastReader() {             if (FROM_FILE) {                try {                    br = new BufferedReader(new FileReader("input.txt"));                 } catch (IOException error) {                }               } else {                br = new BufferedReader(new InputStreamReader(System.in));                }        }        String next() {             while (st == null || !st.hasMoreElements()) {                 try {                     st = new StringTokenizer(br.readLine());                 } catch (IOException  e) {                     e.printStackTrace();                 }             }             return st.nextToken();         }        int nextInt() {             return Integer.parseInt(next());         }        long nextLong() {             return Long.parseLong(next());         }          double nextDouble() {             return Double.parseDouble(next());         }         String nextLine() {             String str = "";             try {                 str = br.readLine();             } catch (IOException e) {                 e.printStackTrace();             }             return str;         }     }    static int max(int... nums) {        int res = Integer.MIN_VALUE;        for (int num: nums) res = Math.max(res, num);        return res;    }    static int min(int... nums) {        int res = Integer.MAX_VALUE;        for (int num: nums) res = Math.min(res, num);        return res;    }    static long max(long... nums) {        long res = Long.MIN_VALUE;        for (long num: nums) res = Math.max(res, num);        return res;    }    static long min(long... nums) {        long res = Long.MAX_VALUE;        for (long num: nums) res = Math.min(res, num);        return res;    }        static FastReader fr = new FastReader();    static PrintWriter out;        public static void main(String[] args) {         if (FROM_FILE) {            try {                out = new PrintWriter(new FileWriter("output.txt"));            } catch (IOException error) {                            }        } else {            out = new PrintWriter(new OutputStreamWriter(System.out));        }        new Main().run();        out.flush();        out.close();    }      void run() {        char[] s = fr.nextLine().toCharArray();        int res = 0, n = s.length;        for(int i = 0; i < n; i += 1) { // 枚举所有情况下?对字符串的影响            int cnt1 = 0, cnt2 = 0; // cnt1把?看作)未匹配数量,cnt2把?看作(未匹配数量             for(int j = i; j < n; j += 1) {                if (s[j] == '(') {                    cnt1 += 1;                    cnt2 += 1;                } else if (s[j] == ')') {                    cnt1 -= 1;                    cnt2 -= 1;                } else {                    cnt1 -= 1;                    cnt2 += 1;                }                if (cnt1 < 0 && cnt2 > 0) {                    cnt1 += 2; //当把?看成)导致cnt1<0时再把?看成(，这样未匹配数量又为1了                }                 if (cnt2 < 0) break;                if (cnt1 == 0) res += 1;            }        }        out.println(res);    }}
