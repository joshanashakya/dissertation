import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     void run(FastScanner in, PrintWriter out) {         char[] ca = in.next().toCharArray();        int n = ca.length;         int cnt = 0;        for (int l = 0; l < n; l++) {             int score = 0;            int qmarks = 0;            for (int r = l; r < n; r++) {                char c = ca[r];                if (c == ')') score--;                if (c == '(') score++;                if (c == '?') qmarks++;                 if (qmarks > 0 && qmarks > score) {                    // if all qmarks were closed, we would reach negative                    // increase score, decrease qmarks                    qmarks--;                    score++;                }                if (score < 0) break;                 if (qmarks >= score && (r-l+1)%2 == 0) {                    // System.out.println(l + " " + r + " " + score + " " + qmarks);                    cnt++;                }             }         }         out.println(cnt);     }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
