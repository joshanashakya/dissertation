import java.io.*;import java.util.*;import java.lang.*; public class Rextester{    static class Contestants implements Comparable<Contestants>{        String name;        int score;        public Contestants(String n,int s){            name = n;            score = s;        }                @Override        public int compareTo(Contestants o){            return o.score - this.score;        }                @Override        public String toString(){            return name+" "+score;        }    }    static class Region{        int V;        int x;        Contestants[] p;        public Region(int V){            this.V = V;            this.x = 0;            p = new Contestants[V];        }                public void add(Contestants o){            p[x++]=o;        }    }     public static void main(String[] args)throws IOException{        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer(br.readLine());        int n = new Integer(st.nextToken());        int r = new Integer(st.nextToken());        Region[] regions = new Region[r];        String[] names = new String[n];        int[] ra = new int[n];        int[] q = new int[r];        int[] p = new int[n];        for(int i=0;i<n;i++){            StringTokenizer st1 = new StringTokenizer(br.readLine());            names[i] = st1.nextToken();            ra[i] = new Integer(st1.nextToken())-1;            p[i] = new Integer(st1.nextToken());            q[ra[i]]++;        }        br.close();        for(int i=0;i<r;i++){            regions[i]=new Region(q[i]);        }        for(int i=0;i<n;i++){            regions[ra[i]].add(new Contestants(names[i],p[i]));        }        StringBuffer sb = new StringBuffer();        for(int i=0;i<r;i++){            Arrays.sort(regions[i].p);            if(regions[i].V>2){                if(regions[i].p[1].score==regions[i].p[2].score){                    sb.append("?\n");                }                else{                    sb.append(regions[i].p[0].name).append(" ").append(regions[i].p[1].name).append("\n");                }            }            else{                sb.append(regions[i].p[0].name).append(" ").append(regions[i].p[1].name).append("\n");            }        }        System.out.println(sb);    }}        
