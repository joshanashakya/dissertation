import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author HussienMoustafa */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        FSagheerAndCrossroads solver = new FSagheerAndCrossroads();        solver.solve(1, in, out);        out.close();    }     static class FSagheerAndCrossroads {        public void solve(int testNumber, Scanner s, PrintWriter out) {            int l1, l2, l3, l4, r1, r2, r3, r4, s1, s2, s3, s4, p1, p2, p3, p4;             l1 = s.nextInt();            s1 = s.nextInt();            r1 = s.nextInt();            p1 = s.nextInt();             l2 = s.nextInt();            s2 = s.nextInt();            r2 = s.nextInt();            p2 = s.nextInt();             l3 = s.nextInt();            s3 = s.nextInt();            r3 = s.nextInt();            p3 = s.nextInt();             l4 = s.nextInt();            s4 = s.nextInt();            r4 = s.nextInt();            p4 = s.nextInt();             if (p1 == 1 && (r1 == 1 || l1 == 1 || l2 == 1 || r4 == 1 || s3 == 1 || s1 == 1)) {                out.println("YES");            } else if (p2 == 1 && (r2 == 1 || l2 == 1 || l3 == 1 || r1 == 1 || s4 == 1 || s2 == 1)) {                out.println("YES");            } else if (p3 == 1 && (r3 == 1 || l3 == 1 || l4 == 1 || r2 == 1 || s1 == 1 || s3 == 1)) {                out.println("YES");            } else if (p4 == 1 && (r4 == 1 || l4 == 1 || l1 == 1 || r3 == 1 || s2 == 1 || s4 == 1)) {                out.println("YES");            } else out.println("NO");        }     }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }}
