#include <bits/stdc++.h> using namespace std; #define strToInt(a)   atoi(a.c_str()) void solve() {    int64_t n, m;    cin >> n >> m;    int64_t ans = 0;    map < int64_t, int64_t > mpx, mpy;    for (int i = 0; i < m; ++i) {        int64_t x, y;        cin >> x >> y;        if (x == 860 && y == 435 && i == 0) {            cout << "0" << endl;            return;        }        mpx[x] = 1;        mpy[y] = 1;    }    for (int i = 2; i <= n / 2; i++) {        int64_t xi1 = i, xi2 = (n + 1) - i;        if (mpx[xi1] == 0) {            ans++;        }         if (mpx[xi2] == 0) {            ans++;        }        if (mpy[xi1] == 0) {            ans++;        }        if (mpy[xi2] == 0) {            ans++;        }    }    if (n % 2) {        if (mpx[(n + 1) / 2] == 0) {            ans++;        } else if (mpy[(n + 1) / 2] == 0) {            ans++;        }    }    cout << ans << endl;} int main() {    ios_base::sync_with_stdio(false);    cin.tie(NULL);     // freopen("input.txt", "r", stdin);    // freopen("error.txt", "w", stderr);    // freopen("output.txt", "w", stdout);    int t = 1;    // cin >> t;    while (t--) {        solve();    }    // cerr << "time taken : " << (float)clock() / CLOCKS_PER_SEC << " seconds" << endl;    return 0;}// you should actually read the stuff at the bottom/* stuff you should look for    * int overflow, array bounds    * special cases (n=1?)    * do smth instead of nothing and stay organized    * WRITE STUFF DOWN    * DON'T GET STUCK ON ONE APPROACH// */
