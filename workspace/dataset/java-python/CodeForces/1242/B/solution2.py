def find(u):     if parent[u]==u:        return u     parent[u]=find(parent[u])    return parent[u]     def union(a,b):    if find(a)!=find(b):        u=parent[a]        v=parent[b]         if size[u]>size[v]:            parent[v]=u            size[u]+=size[v]            del size[v]         else:            parent[u] = v            size[v] += size[u]            del size[u]       return     n,m=map(int,input().split())adj=[[] for i in range(n+1)]for j in range(m):    u,v=map(int,input().split())    if u<v:        adj[v].append(u)     else:        adj[u].append(v) size=dict()parent=[i for i in range(n+1)]for v in range(1,n+1):    req=[]    d1=dict()    for j in adj[v]:        f=find(j)        req.append(f)        if f in d1:            d1[f]+=1        else:            d1[f]=1     res=[j for j in size]     size[v]=1      for i in res:        if i not in d1:            union(i,v)         elif d1[i]<size[i]:            union(i, v) print(len(size)-1)     
