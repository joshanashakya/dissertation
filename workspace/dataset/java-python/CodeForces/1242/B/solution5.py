n, m = map(int, input().split())adj = [[] for i in range(n)]used = [0 for i in range(n)]mark = [0 for i in range(n)]S = [i for i in range(n)] for i in range(m):    u, v = map(int, input().split())    u, v = u - 1, v - 1    adj[u].append(v)    adj[v].append(u)    def dfs(v):    global S    used[v] = 1    S2, S3 = [], []        for to in adj[v]:        mark[to] = 1        for to in S:        if mark[to] == 0:            S3.append(to)        else:            S2.append(to)                for to in adj[v]:        mark[to] = 0                S = S2.copy()            for to in S3:        dfs(to)        ans = -1    for i in range(n):    if not used[i]:        S.remove(i)        ans += 1        dfs(i) print(ans)
