import sys,os,ioimport math,bisect,operatorinf,mod = float('inf'),10**9+7# sys.setrecursionlimit(10 ** 6)from itertools import groupby,accumulatefrom heapq import heapify,heappop,heappushfrom collections import deque,Counter,defaultdictinput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__Neo = lambda : list(map(int,input().split()))test, = Neo()n = tests = set()def primeFactors(n):     while n % 2 == 0:         s.add(2)        n = n // 2    for i in range(3,int(math.sqrt(n))+1,2):                    while n % i== 0:             s.add(i)             n = n // i     if n > 2:        s.add(n)primeFactors(n)# print(s)if len(s) == 1:    t = s.pop()    print(t) else:    print(1)
