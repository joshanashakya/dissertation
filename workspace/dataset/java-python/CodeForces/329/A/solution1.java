//      これを翻訳している間、あなたはあなたの人生のいくつかの貴重な瞬間を無駄にしました  import java.io.*;import java.math.BigDecimal;import java.math.BigInteger;import java.util.*;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;  public class Solution {    static PrintWriter fop = new PrintWriter(System.out);     public static void main(String[] args) {        FastScanner fsca = new FastScanner();          int n = fsca.nextInt();        char a[][] = new char[n][n] ;        for (int i = 0; i <n ; i++) {            String s = fsca.next() ;            for (int j = 0; j <n ; j++) {                a[i][j] = s.charAt(j) ;            }        }         boolean flag = true ;        for (int i = 0; i <n ; i++) {            boolean f1 = false ;            for (int j = 0; j <n ; j++) {                if (a[i][j] == '.') {                    f1 = true ; break;}            }            if (!f1){                flag = false ;                break;            }        }        boolean r = flag ;         if (!flag) {            flag = true ;            for (int i = 0; i < n; i++) {                boolean f1 = false ;                for (int j = 0; j < n; j++) {                    if (a[j][i] == '.'){                        f1 = true;                        break;                    }                }                if (!f1){                    flag = false ;                    break;                }            }         }         if (!flag)            System.out.println(-1);        else {            if (r){                for (int i = 0; i <n ; i++)                    for (int j = 0; j <n ; j++)                        if (a[i][j] == '.'){                            fop.append((i+1) + " " + (j+1) + "\n") ;                            break;                        }            }            else {                for (int i = 0; i <n ; i++)                    for (int j = 0; j <n ; j++)                        if (a[j][i] == '.'){                            fop.append((j+1) + " " + (i+1) + "\n") ;                            break;                        }              }           }                                fop.flush();        fop.close();      }    /*-----------------------------------------------------------------------------------------------------------------------------------------------*/    // template starts from here :     static long gcd(long a, long b) {        return (b == 0) ? a : gcd(b, a % b);    }     static int gcd(int a, int b) {        return (b == 0) ? a : gcd(b, a % b);    }      static final Random random = new Random();     static void ruffleSort(int[] a) {        int n = a.length;//shuffle, then sort        for (int i = 0; i < n; i++) {            int oi = random.nextInt(n), temp = a[oi];            a[oi] = a[i];            a[i] = temp;        }        Arrays.sort(a);    }     static void ruffleSort(long[] a) {        int n = a.length;//shuffle, then sort        for (int i = 0; i < n; i++) {            int oi = random.nextInt(n);            long temp = a[oi];            a[oi] = a[i];            a[i] = temp;        }        Arrays.sort(a);    }      static class FastScanner {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next() {            while (!st.hasMoreTokens())                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         int[][] readMat(int n, int m) {            int a[][] = new int[n][m];            for (int i = 0; i < n; i++)                for (int j = 0; j < m; j++)                    a[i][j] = nextInt();            return a;        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long[] readLongArray(int n) {            long[] a = new long[n];            for (int i = 0; i < n; i++)                a[i] = nextLong();            return a;        }         long nextLong() {            return Long.parseLong(next());        }    }     static void print(int a[], int n) {        for (int i = 0; i < n; i++)            fop.append((a[i]) + " ");        // fop.append("\n") ;    }     static void print(long a[], int n) {        for (int i = 0; i < n; i++)            fop.append((a[i]) + " ");        // fop.append("\n") ;    }}        
