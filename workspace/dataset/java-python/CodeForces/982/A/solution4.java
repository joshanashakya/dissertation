import java.util.*;import java.io.*; public class Div688A {     public static void main(String[] args) throws IOException {        Scanner sc = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        int n = sc.nextInt();        char[]s = sc.nextLine().toCharArray();        boolean ans = true;        for (int i =0;i<n;i++) {            if (i<n-1&&s[i] == s[i + 1] && s[i] == '1')                ans = false;            if (s[i]=='0'&&(i==0||s[i-1]=='0')&&(i==n-1||s[i+1]=='0'))                ans=false;        }        pw.println(ans?"Yes":"No");         pw.flush();    }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         public int[] nextIntArr(int n) throws IOException {            int[] a = new int[n];            for (int i = 0; i < n; i++) {                a[i] = nextInt();            }            return a;        }         public int nextInt() throws IOException {            return Integer.parseInt(next());        }         public long nextLong() throws IOException {            return Long.parseLong(next());        }         public String nextLine() throws IOException {            return br.readLine();        }         public double nextDouble() throws IOException {            String x = next();            StringBuilder sb = new StringBuilder("0");            double res = 0, f = 1;            boolean dec = false, neg = false;            int start = 0;            if (x.charAt(0) == '-') {                neg = true;                start++;            }            for (int i = start; i < x.length(); i++)                if (x.charAt(i) == '.') {                    res = Long.parseLong(sb.toString());                    sb = new StringBuilder("0");                    dec = true;                } else {                    sb.append(x.charAt(i));                    if (dec)                        f *= 10;                }            res += Long.parseLong(sb.toString()) / f;            return res * (neg ? -1 : 1);        }         public boolean ready() throws IOException {            return br.ready();        }    } }
