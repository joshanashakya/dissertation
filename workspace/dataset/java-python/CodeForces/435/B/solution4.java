import java.util.*; import java.io.*; public class Main {		public static void solve(InputReader in, OutputWriter out) {		char s[] = in.readString().toCharArray(); 		int k  = in.readInt();		int a[] = new int[s.length]; 		for(int i = 0; i<s.length; i++) {			a[i] = s[i] - '0'; 		}		for(int i = 0; i<s.length; i++) {			int max = a[i]; 			int p = 0; 			for(int j = i+1; j < s.length && j <= i+k; j++) {				if(a[j] > max) {					max = a[j]; 					p = j; 				}			}			for(int j = p; j>=i+1; j--) {				int temp = a[j]; a[j] = a[j-1]; a[j-1] = temp; 				k--; 			}		}		for(int i : a) out.print(i);	}		public static void main(String[] args) {		InputReader in = new InputReader(System.in); 		OutputWriter out = new OutputWriter(System.out); 		int t = 1;		while (t-- > 0) 			solve(in , out);				out.flush();		out.close();	}}  class InputReader{	private InputStream stream;	private byte[] buf = new byte[1024];	private int curChar;	private int numChars;	private SpaceCharFilter filter; 	 public InputReader(InputStream stream) {		this.stream = stream;	}      public int read() {		if (numChars == -1)			throw new InputMismatchException();		if (curChar >= numChars) {			curChar = 0;			try {				numChars = stream.read(buf);			} catch (IOException e) {				throw new InputMismatchException();			}			if (numChars <= 0)				return -1;		}		return buf[curChar++];	}      public int readInt() {		int c = read();		while (isSpaceChar(c))			c = read();		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		int res = 0;		do {			if (c < '0' || c > '9')				throw new InputMismatchException();			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}      public String readString() {		int c = read();		while (isSpaceChar(c))			c = read();		StringBuilder res = new StringBuilder();		do {			res.appendCodePoint(c);			c = read();		} while (!isSpaceChar(c));		return res.toString();	}      public long readLong() {		int c = read();		while (isSpaceChar(c)) {			c = read();		}		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		long res = 0;		do {			if (c < '0' || c > '9') {				throw new InputMismatchException();			}			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}	     public boolean isSpaceChar(int c) {		if (filter != null)			return filter.isSpaceChar(c);		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;	}          public String next() {		return readString();	}         public interface SpaceCharFilter {		public boolean isSpaceChar(int ch);	}} class OutputWriter {	private final PrintWriter writer; 	public OutputWriter(OutputStream outputStream) {		writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));	} 	public OutputWriter(Writer writer) {		this.writer = new PrintWriter(writer);	} 	public void print(Object... objects) {		for (int i = 0; i < objects.length; i++) {			if (i != 0)				writer.print(' ');			writer.print(objects[i]);		}	} 	public void println(Object... objects) {		print(objects);		writer.println();	} 	public void close() {		writer.close();	} 	public void flush() {		writer.flush();	}}
