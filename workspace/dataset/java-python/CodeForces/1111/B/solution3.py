import sysimport mathimport collectionsimport bisectimport itertoolsimport decimalimport heapq  # sys.setrecursionlimit(10000001)INF = 10 ** 20MOD = 10 ** 9 + 7# MOD = 998244353  def ni(): return int(sys.stdin.buffer.readline())def ns(): return map(int, sys.stdin.buffer.readline().split())def na(): return list(map(int, sys.stdin.buffer.readline().split()))def na1(): return list(map(lambda x: int(x)-1, sys.stdin.buffer.readline().split()))def flush(): return sys.stdout.flush()  def nicf(): return int(sys.stdin.readline())def nscf(): return map(int, sys.stdin.readline().split())def nacf(): return list(map(int, sys.stdin.readline().split()))def na1cf(): return list(map(lambda x: int(x)-1, sys.stdin.readline().split()))  # ===CODE===def main():    n, k, m = ns()    a = na()     a.sort()    total = sum(a)     ans = total/n    if m >= n:        ans = a[-1]+max(0, min(k, m-(n-1)))    else:        for i in range(m):            ans = max(ans, (total+min(k*(n-i), m-i))/(n-i))            total -= a[i]            ans = max(ans, total/(n-i-1))    print("{:.20f}".format(ans))  if __name__ == '__main__':    main()
