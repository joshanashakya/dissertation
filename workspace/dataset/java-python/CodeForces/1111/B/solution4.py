import sys,math,itertoolsfrom collections import Counter,deque,defaultdictfrom bisect import bisect_left,bisect_right from heapq import heappop,heappush,heapify, nlargestfrom copy import deepcopymod = 10**9+7INF = float('inf')def inp(): return int(sys.stdin.readline())def inpl(): return list(map(int, sys.stdin.readline().split()))def inpl_1(): return list(map(lambda x:int(x)-1, sys.stdin.readline().split()))Â n,k,m = inpl()a = inpl(); a.sort()aa = [0]for x in a:    aa.append(aa[-1]+x)res = (aa[-1]+min(m,k*n))/nfor i in range(1,n):    if i > m: break    su = aa[-1]-aa[i]    N = n-i    now = (su+min(m-i,k*N))/N    res = max(res, now)print(res)
