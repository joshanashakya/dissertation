// package com.codeforces.algoshots.rating1000.SuperHeroTransformation; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Solution {    public static void main(String[] args) {        FastScanner fs = new FastScanner();        String s = fs.next(), t = fs.next();        if (s.length() != t.length()) {            System.out.println("No");            return;        }        for (int i=0; i<s.length(); ++i) {            if (s.charAt(i) == t.charAt(i)) {                continue;            }            boolean sCharVowel = isVowel(s.charAt(i));            boolean tCharVowel = isVowel(t.charAt(i));            if (sCharVowel ^ tCharVowel) {                System.out.println("No");                return;            }        }        System.out.println("Yes");    }     private static boolean isVowel(char c) {        return c == 'a' || c == 'e' || c == 'i' || c == 'u' || c == 'o';    }     static class FastScanner {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next() {            while (!st.hasMoreTokens())                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long nextLong() {            return Long.parseLong(next());        }    }}
