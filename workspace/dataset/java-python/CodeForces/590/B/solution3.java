import java.io.*;import java.nio.charset.Charset;import java.nio.file.Files;import java.nio.file.Paths;import java.util.*;public class Main {    public static void main(String[] args)throws IOException {        BufferedReader sc = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer(sc.readLine());        int x1, y1, x2, y2;        x1 = Integer.parseInt(st.nextToken());        y1 = Integer.parseInt(st.nextToken());        x2 = Integer.parseInt(st.nextToken());        y2 = Integer.parseInt(st.nextToken());        y2 = y1 - y2;        x2 = x1 - x2;        st = new StringTokenizer(sc.readLine());        int v = Integer.parseInt(st.nextToken());        int t = Integer.parseInt(st.nextToken());        int fvx, fvy, svx, svy;        st = new StringTokenizer(sc.readLine());        fvx = Integer.parseInt(st.nextToken());        fvy = Integer.parseInt(st.nextToken());        st = new StringTokenizer(sc.readLine());        svx = Integer.parseInt(st.nextToken());        svy = Integer.parseInt(st.nextToken());        double l = 0;        double r = 1e18;        for(int i = 0; i < 1000; ++i) {            double mid = (l + r) / 2;            if (is_possible(mid, x2, y2, v, t, fvx, fvy, svx, svy)) {                r = mid;            } else {                l = mid;            }        }        PrintWriter pw = new PrintWriter(System.out);        pw.print(l);        pw.print("\n");        pw.close();    }    public static boolean is_possible(double cur_time, double x, double y, double speed, double time, double fvx, double fvy, double svx, double svy){        if(cur_time >= time){            x += time * fvx;            y += time * fvy;            x += (cur_time - time) * svx;            y += (cur_time - time) * svy;            if(Math.sqrt(x * x + y * y) < cur_time * speed){                return true;            }            else{                return false;            }        }        else{            x += cur_time * fvx;            y += cur_time * fvy;            if(Math.sqrt(x * x + y * y) < cur_time * speed){                return true;            }            else{                return false;            }        }    }Â }
