import sys,math,itertoolsfrom collections import Counter,deque,defaultdictfrom bisect import bisect_left,bisect_right from heapq import heappop,heappush,heapify, nlargestfrom copy import deepcopymod = 10**9+7INF = float('inf')def inp(): return int(sys.stdin.readline())def inpl(): return list(map(int, sys.stdin.readline().split()))def inpl_1(): return list(map(lambda x:int(x)-1, sys.stdin.readline().split()))def inps(): return sys.stdin.readline()def inpsl(x): tmp = sys.stdin.readline(); return list(tmp[:x])def err(x): print(x); exit()Â for _ in range(inp()):    n = inp()    data = []    for i in range(n):        l,r = inpl()        data.append((l,r))    res = [0]*n    idx = 0    q = deque()    for t in range(1,5010):        while idx<n:            if data[idx][0] <= t:                q.append(idx)                idx += 1            else: break        while q:            i = q.popleft()            if t <= data[i][1]:                res[i] = t                break    print(*res)
