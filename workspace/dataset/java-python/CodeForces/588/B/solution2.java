import java.io.*;import java.util.*; public class B {    static ArrayList<Long> power = new ArrayList<>();    static ArrayList<Long> divisors = new ArrayList<>();    public static void main(String[] args) throws IOException {        Scanner in = new Scanner(System.in);        PrintWriter pw = new PrintWriter(System.out);        dp();        long n = in.nextLong();        divisor(n);        // debug(divisors.size());        pw.println(solve());        pw.close();    }    static long solve() {        for (int i = divisors.size() - 1; i >= 0; i--) {            // debug(i,divisors.get(i), power.get(j));            boolean good = true;            for ( int j = 0; divisors.get(i) >= power.get(j); j++) {                // debug(divisors.get(i), power.get(j));                if (divisors.get(i) % power.get(j) == 0) {                    good = false;                    break;                }            }            if (good)return divisors.get(i);        }        return 1;    }    static void divisor(long n) {        for (long i = 1; i * i <= n; i++) {            if (n % i == 0) {                divisors.add(i);                if (i != (n / i)) divisors.add((n / i));            }        }        Collections.sort(divisors);    }    static void dp() {        for (long i = 2; i * i <= (long)1e12; i++) {            power.add(i * i);        }    }      static void debug(Object... obj) {        System.err.println(Arrays.deepToString(obj));    } }
