import java.awt.Point;import java.util.*;import java.io.*;import static java.lang.Math.*; public class PracticeProblem{    /*     * This FastReader code is taken from GeeksForGeeks.com     * https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/     *     * The article was written by Rishabh Mahrsee     */    public static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException  e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }     public static FastReader in = new FastReader();    public static PrintWriter out = new PrintWriter(System.out);    public static final int MOD = (int)1e9 + 7;     public static void main(String[] args)    {        solve();         out.close();    }     public static void solve()    {        int m = in.nextInt();        int minDisc = Integer.MAX_VALUE;        for (int i = 0; i < m; i++)            minDisc = min(minDisc, in.nextInt());         int n = in.nextInt();         Integer[] arr = new Integer[n];        int totalPrice = 0;         for (int i = 0; i < n; i++)        {            arr[i] = in.nextInt();            totalPrice += arr[i];        }         Arrays.sort(arr);         int totalSaved = 0;         int i = n;        i -= minDisc + 1;         while (i >= 0)        {            totalSaved += arr[i];            if (i - 1 >= 0)            {                totalSaved += arr[--i];            }             i -= minDisc + 1;        }         out.println(totalPrice - totalSaved);    } }
