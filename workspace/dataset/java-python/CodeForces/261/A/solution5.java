import java.util.*;import java.lang.*;import java.math.*;import java.io.*;import java.util.HashSet;import java.util.Scanner;import java.util.Set;import java.util.ArrayList;import java.util.Collections;import java.util.HashMap;import java.util.Map;import java.text.DecimalFormat;import java.lang.Math;import java.util.Iterator; public class C47{    static class Pair implements Comparable<Pair>{		int v;		int i;		public Pair(int v, int i) {			this.v = v;			this.i = i;		}		@Override		public int compareTo(Pair o) {			// TODO Auto-generated method stub			return this.v-o.v;		}	}	public static boolean isPrime(long n){	    if(n < 2){	        return false;	    }	    if(n%2==0){	        return n==2;	    }	    if(n%3==0){	        return n==3;	    }	    long i = 5;	    long h = (long)Math.floor(Math.sqrt(n)+1);	    while(i <= h){	        if(n%i==0){	            return false;	        }	        if(n%(i+2)==0){	            return false;	        }	        i += 6;	    }	    return true;	}	public static int gcd(int a, int b){	    return b==0? a:gcd(b, a%b);	}	public static long bSearch(int n,ArrayList<Long> A){	    int s = 0;	    int e = A.size()-1;	    while(s<=e){	        int m = s+(e-s)/2;	        if(A.get(m)==(long)n){	            return A.get(m);	        }	        else if(A.get(m)>(long)n){	            e = m-1;	        }	        else{	            s = m+1;	        }	    }	    return A.get(s);	}	static class Point implements Comparable<Point>{		int x;		int y;		public Point(int x, int y){			this.x = x;			this.y = y;		}		@Override		public int compareTo(Point o) {			// TODO Auto-generated method stub			if(this.x==o.x){			    return this.y-o.y;			}			return this.x-o.x;		}	}	public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		int m = sc.nextInt();		int[] q = new int[m];		for(int i = 0; i < m; i++){		    q[i] = sc.nextInt();		}		Arrays.sort(q);		int n = sc.nextInt();		int[] a = new int[n];		for(int i = 0; i < n; i++){		    a[i] = sc.nextInt();		}		Arrays.sort(a);		long ans = 0;		for(int i = 0; i < n; i++){		    if(i%(q[0]+2)<q[0]){		        ans += a[n-i-1];		    }		}		System.out.println(ans);	}}Â 
