import java.math.BigDecimal;import java.math.BigInteger;import java.util.*;Â public class Main {  static final int N = 110;    static int n, m;  static long sum = 0;  static long[][][] d = new long[N][N][N];  static long[] cnt = new long[N];  static int[] a = new int[N];  static BigInteger[] big = new BigInteger[N];    public static void main(String[] args) {    Scanner reader = new Scanner(System.in);    n = reader.nextInt();        for (int i = 1;i <= n; ++i) {      a[i] = reader.nextInt();      sum += a[i];    }    m = reader.nextInt();        if (sum <= m) {      System.out.println(n);      return ;    }        for (int i = 1;i <= n; ++i)      d[i][0][0] = 1;    for (int o = 1;o <= n; ++o) {    for (int i = 1;i <= n; ++i) {      if (i == o) continue ;      for (int j = i - 1;j >= 0; --j)        for (int k = m;k >= 0; --k) {          if (k + a[i] > m)            cnt[j + 1] += d[o][k][j];          else            d[o][k + a[i]][j + 1] += d[o][k][j];        }    }    }    //    for (int i = 0;i <= n; ++i) {//      for (int j = 0;j <= m; ++j)//        System.out.print(d[j][i] + " ");//      System.out.println();//    }        big[0] = new BigInteger(String.valueOf(1));    for (int i = 1;i <= n; ++i)      big[i] = big[i - 1].multiply(BigInteger.valueOf(i));        BigInteger ans = new BigInteger("0");    for (int i = 1;i <= n; ++i)      for (int j = 0;j <= m; ++j)        for (int k = 1;k < n; ++k)          if (j + a[i] > m)            ans = ans.add(BigInteger.valueOf(d[i][j][k]).multiply(big[k]).multiply(big[n - k - 1]).multiply(BigInteger.valueOf(k)));        BigDecimal p = new BigDecimal(ans);    BigDecimal q = new BigDecimal(big[n]);    System.out.println(p.divide(q, 9, BigDecimal.ROUND_UP));  }}
