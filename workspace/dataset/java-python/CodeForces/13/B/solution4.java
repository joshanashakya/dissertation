import java.util.Scanner;  public class letterA {	static class Point{		int x;		int y;		public Point(int x, int y) {			this.x=x;			this.y=y;		}		}			static class Segment{	Point p1;	Point p2;	public Segment(Point p1, Point p2) {		this.p1=p1;		this.p2=p2;	}		}		public static double Distance(Point p1, Point p2){	return  Math.hypot(p2.x-p1.x,p2.y-p1.y);    }	public static boolean co_linear(Point a, Point b, Point c) {		/*the area of the triangle that is composed by three vertices is 0*/		return (a.x * (b.y- c.y) + b.x * (c.y - a.y) + c.x * (a.y-b.y)) == 0;	}		/*The third segment divides each of the first two segments in proportion not less than 1/4*/	public static boolean segments_proportion(Segment cross, Segment a) {		if (co_linear(cross.p1,a.p1,a.p2)){	        double magnitude = Distance(a.p1,a.p2);	        double dist_a = Distance(a.p1,cross.p1);	        double dist_b = Distance(a.p2,cross.p1);	        if(dist_a > magnitude || dist_b > magnitude){	            return false; 	        }	        double dist_ratio = dist_a/magnitude;	        return dist_ratio >= 0.2 && dist_ratio <= 0.8;	    }	    if (co_linear(cross.p2,a.p1,a.p2)){	        double magnitude = Distance(a.p1,a.p2);	        double dist_a = Distance(a.p1,cross.p2);	        double dist_b = Distance(a.p2,cross.p2);	        if(dist_a > magnitude || dist_b > magnitude){	            return false;	        }	        double dist_ratio = dist_a/magnitude;	        return dist_ratio >= 0.2 && dist_ratio <= 0.8;	    }	    return false;	}		/*dotproduct to determine the angle is acute or not*/	public static long dotproduct(Point p1, Point p2, Point p3) {		if(co_linear(p1,p2,p3)) return -1;	    Point vec1 = new Point(p2.x - p1.x,p2.y - p1.y);	    Point vec2 = new Point(p2.x - p3.x,p2.y - p3.y);	    return (long)vec1.x*(long)vec2.x + (long)vec1.y*(long)vec2.y;	}		/*1.Two segments have common endpoint	 * 2.The angle between the first and the second segments is greater than 0 and do not exceed 90 degrees.*/	 public static boolean FirstTwoSegments(Segment a, Segment b){	    if(a.p1.x == b.p1.x && a.p1.y == b.p1.y){	        return dotproduct(a.p2,a.p1,b.p2) >= 0; 	    }	    if(a.p1.x == b.p2.x && a.p1.y == b.p2.y){	        return dotproduct(a.p2,a.p1,b.p1) >= 0;	    }	    if(a.p2.x == b.p1.x && a.p2.y == b.p1.y){	        return dotproduct(a.p1,a.p2,b.p2) >= 0;	    }	    if(a.p2.x == b.p2.x && a.p2.y == b.p2.y){	        return dotproduct(a.p1,a.p2,b.p1) >= 0;	    }	    return false;	}		public static boolean isA(Segment a, Segment b, Segment c){	    return FirstTwoSegments(a,b) && segments_proportion(c,a) && segments_proportion(c,b);	}		public static void main(String[] args) {		Scanner scan = new Scanner(System.in);		 		int n= scan.nextInt();						for(int i = 1; i <= n ;i++){			int x1 = scan.nextInt();			int y1 = scan.nextInt();			Point p1 = new Point(x1,y1);					int x2 = scan.nextInt();			int y2 = scan.nextInt();			Point p2 = new Point(x2,y2);			int x3 = scan.nextInt();			int y3 = scan.nextInt();			Point p3 = new Point(x3,y3);					int x4 = scan.nextInt();			int y4 = scan.nextInt();			Point p4 = new Point(x4,y4);			int x5 = scan.nextInt();			int y5 = scan.nextInt();			Point p5 = new Point(x5,y5);					int x6 = scan.nextInt();			int y6= scan.nextInt();			Point p6= new Point(x6,y6);			Segment s1 = new Segment(p1,p2);			Segment s2 = new Segment(p3,p4);			Segment s3 = new Segment(p5,p6);	        boolean is_an_a = (isA(s1,s2,s3) || isA(s1,s3,s2) || isA(s3,s2,s1));	        System.out.println((is_an_a ? "YES" : "NO"));	    }	    	}		}  
