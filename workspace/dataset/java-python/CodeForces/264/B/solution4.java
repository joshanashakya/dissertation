import java.util.*;import java.io.*;import static java.lang.Math.*; public class PracticeProblem{    /*     * This FastReader code is taken from GeeksForGeeks.com     * https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/     *     * The article was written by Rishabh Mahrsee     */    public static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException  e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }     public static FastReader in = new FastReader();    public static PrintWriter out = new PrintWriter(System.out);    public static final int N = (int)1e5;     public static void main(String[] args)    {        int n = in.nextInt();        int[] divisorAns = new int[N + 1];        int answer = 1;        for (int i = 0; i < n; i++)        {            int a = in.nextInt();            int max = 0;            for (int j = 1; j * j <= a; j++)            {                if (a % j == 0)                {                    if (j != 1) max = max(max, divisorAns[j]);                    if (a != 1) max = max(max, divisorAns[a / j]);                }            }             max++;            answer = max(answer, max);             for (int j = 1; j * j <= a; j++)            {                if (a % j == 0)                {                    if (j != 1) divisorAns[j] = max(divisorAns[j], max);                    if (a != 1) divisorAns[a / j] = max(divisorAns[a / j], max);                }            }        }        out.println(answer);        out.close();    }  }
