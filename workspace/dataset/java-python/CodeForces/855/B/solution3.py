import sysn,p,q,r = list(map(int,input().strip().split()))arr = list(map(int,input().strip().split()))def find_pref_sum(array):    maxm = -2**63    pref_sum = [0]*n    for i in range(0,n):        pref_sum[i] = max(maxm,array[i]*p)        maxm = max(maxm,array[i]*p)    return pref_sum def find_suff_sum(array):    maxm = -2**63    suff_sum = [0]*n    for j in reversed(range(n)):        suff_sum[j] = max(maxm,array[j]*r)        maxm = max(maxm,array[j]*r)    return suff_sum pref_sum = find_pref_sum(arr)suff_sum = find_suff_sum(arr)  def find_max_expression(p,q,r,arr):    max_exp = -2**63    for i in range(0,n):        max_exp = max(max_exp,max(p*arr[i],pref_sum[i])+arr[i]*q+max(r*arr[i],suff_sum[i]))    return max_exp max_expression_val = find_max_expression(p,q,r,arr)print(max_expression_val)
