import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.HashSet;import java.util.LinkedList;import java.util.Queue;import java.util.Stack;import java.util.StringTokenizer;   public class Main { 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	}		public static boolean check(String st) {		Stack<Character> stck = new Stack<Character>();		for(char c: st.toCharArray()) {			if(c == '(') {				stck.push(')');			}			else if(c == '[') {				stck.push(']');			}			else if(stck.isEmpty() || c != stck.pop()) {								return false;			}		}		return stck.isEmpty();			} 		public static void main(String[] args) {		PrintWriter pw = new PrintWriter(System.out);		FastReader sc = new FastReader();		int t = sc.nextInt();		HashSet<String> hs = new HashSet<String>();						while(t-->0) {		String str = sc.nextLine();								if(hs.contains(str)) {					System.out.println("YES");				}				else {					hs.add(str);					System.out.println("NO");				}				}	}}			 	 	  			 	 	 		 		 				 			
