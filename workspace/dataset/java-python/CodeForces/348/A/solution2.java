import java.io.*;import java.util.*; public class Main {	static class FastReader{         BufferedReader br;         StringTokenizer st;         public FastReader(){br = new BufferedReader(new InputStreamReader(System.in));}        String next(){while (st == null || !st.hasMoreElements()){try{st = new StringTokenizer(br.readLine());}         catch (IOException  e){e.printStackTrace();}}return st.nextToken();}        int nextInt(){ return Integer.parseInt(next());}long nextLong(){return Long.parseLong(next());}double nextDouble(){return Double.parseDouble(next());}        String nextLine(){String str = ""; try{str = br.readLine(); } catch (IOException e) {e.printStackTrace();} return str; }     }	static FastReader sc = new FastReader();	static long mod = (long)(1e9+7);		public static void main (String[] args) throws Exception {        PrintWriter out = new PrintWriter(System.out);        int t = 1;//        t = sc.nextInt();        z :while(t-->0) {        	int n = sc.nextInt();        	long a[] = new long[n];        	long sum = 0, max = 0;        	for(int i=0;i<n;i++) {        		a[i] = sc.nextLong();        		sum += a[i];        		max = Math.max(max, a[i]);        	}        	long ans = (sum)/(n-1);        	if(sum%(n-1)!=0) ans++;        	if(ans<max) ans = max;        	out.write(ans+"\n");       	}		out.close();	}}class pair implements Comparable<pair>{	int a;	long b; 	pair(int a,long b){		this.a = a;		this.b = b;	}	@Override    public int compareTo(pair p){        return (int) (p.b - this.b);    }}
