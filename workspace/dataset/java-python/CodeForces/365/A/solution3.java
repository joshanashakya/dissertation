import java.util.*; public class ICPC {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);       int n=sc.nextInt();       int k=sc.nextInt();       int c=0;      process: for(int i=1;i<=n;i++){           String[] s=sc.next().split("");           boolean[] ar=new boolean[k+1];           for(String s1:s){               int num=Integer.parseInt(s1);               if (num >k) {                   //continue process;               }else {                   ar[num]=true;               }           }            for(int j=0;j<=k;j++){               if(!ar[j]){                   continue process;               }           }           c++;       }        System.out.println(c);        }          public List<Integer> getDivisors(int n) {        List<Integer> list = new ArrayList<>();        for (int d = 2; d * d <= n; d++) {            while (n % d == 0) {                list.add(d);                n /= d;            }        }        if (n > 1) {            list.add(n);        }        return list;    }     public int gcd(int n1, int n2) {        int gcd = 1;        for (int i = 1; i <= n1 && i <= n2; ++i) {            // Checks if i is factor of both integers            if (n1 % i == 0 && n2 % i == 0)                gcd = i;        }         // int lcm = (n1 * n2) / gcd;        return gcd;    }}  			    			 	 		 	      	 	  	
