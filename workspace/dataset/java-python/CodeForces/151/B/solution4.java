import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*; public class Main{     public static int check(String s)    {        if ((s.charAt(0) == s.charAt(1)) && (s.charAt(1) == s.charAt(3)) && (s.charAt(3) == s.charAt(4)) && (s.charAt(4) == s.charAt(6)) && (s.charAt(6) == s.charAt(7))) {            return 1;        } else if (((s.charAt(0) - '0' > s.charAt(1) - '0') && (s.charAt(1) - '0' > s.charAt(3) - '0') && (s.charAt(3) - '0' > s.charAt(4) - '0') && (s.charAt(4) - '0' > s.charAt(6) - '0') && (s.charAt(6) - '0' > s.charAt(7) - '0'))) {            return 2;        } else {            return 3;        }    }     public static void main(String[] args) throws IOException    {        FastScanner input = new FastScanner();         int n = input.nextInt();        String names[] = new String[n];        int taxi[][] = new int[n][2];        int pizza[][] = new int[n][2];        int girls[][] = new int[n][2];         for (int i = 0; i < n; i++) {            int numbers = input.nextInt();            names[i] = input.next();            taxi[i][0] = i;            pizza[i][0] = i;            girls[i][0] = i;            for (int j = 0; j < numbers; j++) {                String num = input.next();                if (check(num) == 1) {                     taxi[i][1]++;                } else if (check(num) == 2) {                     pizza[i][1]++;                } else {                     girls[i][1]++;                }             }         }//        System.out.println("taxi:");//        for (int i = 0; i < n; i++) {//            System.out.println(taxi[i][0]+" "+taxi[i][1]);//        }//        System.out.println("pizza:");//        for (int i = 0; i < n; i++) {//               System.out.println(pizza[i][0]+" "+pizza[i][1]);//        }//        System.out.println("girls:");//        for (int i = 0; i < n; i++) {//            System.out.println(girls[i][0]+" "+girls[i][1]);//        }//        System.out.println("after:");        Arrays.sort(taxi, new Comparator<int[]>()        {            @Override            public int compare(int[] t, int[] t1)            {                return t1[1] - t[1];            }         });        Arrays.sort(pizza, new Comparator<int[]>()        {            @Override            public int compare(int[] t, int[] t1)            {                return t1[1] - t[1];            }         });        Arrays.sort(girls, new Comparator<int[]>()        {            @Override            public int compare(int[] t, int[] t1)            {                return t1[1] - t[1];            }         });        String t ="";                    int max = taxi[0][1];            int i=0;            while (i<n&&max == taxi[i][1]) {                if (t.isEmpty()) {                                        t+=(" "+names[taxi[i][0]]);                }                else                {                    t+=(",");                       t+=(" "+names[taxi[i][0]]);                }                i++;                            }            t+=(".");                 String p = "";                    max = pizza[0][1];           i=0;            while (i<n&&max == pizza[i][1]) {                if (p.isEmpty()) {                                       p+=(" "+names[pizza[i][0]]);                }                else                {                     p+=(",");                       p+=(" "+names[pizza[i][0]]);                }                i++;                            }            p+=(".");                 String g = "";                   max = girls[0][1];            i=0;            while (i<n&&max == girls[i][1]) {                if (g.isEmpty()) {                                       g+=(" "+names[girls[i][0]]);                }                else                {                     g+=(",");                       g+=(" "+names[girls[i][0]]);                }                i++;                            }            g+=(".");                         System.out.print("If you want to call a taxi, you should call:");        System.out.println(t);        System.out.print("If you want to order a pizza, you should call:");        System.out.println(p);        System.out.print("If you want to go to a cafe with a wonderful girl, you should call:");        System.out.println(g);//System.out.println("pizza:");//        for (int i = 0; i < n; i++) {//            System.out.println(pizza[i][0] + " " + pizza[i][1]);//        }//        System.out.println("girls:");//        for (int i = 0; i < n; i++) {//            System.out.println(girls[i][0] + " " + girls[i][1]);//        }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         int[] readArray(int n)        {            int[] a = new int[n];            for (int i = 0; i < n; i++) {                a[i] = nextInt();            }            return a;        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }    } }
