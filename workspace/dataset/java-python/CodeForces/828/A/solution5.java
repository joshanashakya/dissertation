//package main; import java.awt.Point;import java.io.*;import java.util.*; public final class Main {    BufferedReader br;    StringTokenizer stk;     public static void main(String[] args) throws Exception {        new Main().run();    }        {        stk = null;        br = new BufferedReader(new InputStreamReader(System.in));    }        long mod = 1000_000_000 + 7;        void run() throws Exception {        int n = ni(), a = ni(), b = ni(), c = 0, ans = 0;        for(int i = 0; i < n; i++) {            int cur = ni();            if(cur == 1) {                if(a > 0) {                    a--;                } else if(b > 0) {                    b--;                    c++;                } else if(c > 0) {                    c--;                } else {                    ans++;                }            } else {                if(b > 0) {                    b--;                } else {                    ans += 2;                }            }        }        System.out.println(ans);    }        //Reader & Writer    String nextToken() throws Exception {        if (stk == null || !stk.hasMoreTokens()) {            stk = new StringTokenizer(br.readLine(), " ");        }        return stk.nextToken();    }     String nt() throws Exception {        return nextToken();    }     int ni() throws Exception {        return Integer.parseInt(nextToken());    }     long nl() throws Exception {        return Long.parseLong(nextToken());    }        double nd() throws Exception {        return Double.parseDouble(nextToken());    }        //Some Misc methods    long get(int l, int r, long[] a) {        return l == 0 ? a[r] : a[r] - a[l - 1];    }        void shuffle(long[] a) {        Random r = new Random();        for(int i = 0; i < a.length; i++) {            int idx = r.nextInt(a.length);            long temp = a[i];            a[i] = a[idx];            a[idx] = temp;        }    }}
