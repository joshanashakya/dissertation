import java.util.Arrays;import java.util.Scanner;     public class Main {    static double binarySearch(int arr[], int l, int r , double x) {         if (r >= l) {            int mid = l;             if ((arr[mid] - arr[mid - 1]) / 2.0 > x) {                x = (arr[mid] - arr[mid - 1]) / 2.0;             }             return binarySearch(arr, mid + 1, r, x);        }         // We reach here when element is not present        // in array        return x;    }    // Driver method to test above    public static void main(String args[]) {        Scanner in = new Scanner(System.in);        int n = in.nextInt();        int l = in.nextInt();        int arr[] = new int[n];        double max = 0;        for (int i = 0; i < n; i++) {            arr[i] = in.nextInt();        }        Arrays.sort(arr);        if (arr.length == 1 || arr[0] != 0) {            max = arr[0] - 0;        } else {            max = (arr[1] - arr[0]) / 2.0;        }         double result = binarySearch(arr, 2, n - 1, max);         if(arr[n-1] != l){            if (l- arr[n-1] > result) {                result = l- arr[n-1];             }         }        System.out.println(result);     }}
