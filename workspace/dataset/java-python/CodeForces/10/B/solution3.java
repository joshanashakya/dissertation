import java.util.Arrays;import java.util.Scanner;public class B10 {    static int distance(int xc, int yc, int x, int left, int right) {        int result = 0;        for (int i = left; i <= right; i++) {            result += (Math.abs(xc - x) + Math.abs(yc - i));        }        return result;    }    public static void main(String[] args) {        try (Scanner scan=new Scanner(System.in)) {            int N=scan.nextInt();            int K=scan.nextInt();            int[][] cinema=new int[K][K];                        int xc = K / 2 + 1;                      int yc = xc;            int seats, min, right, left;             int[] request = new int[N]; //getting input for nr of requested seats                       for (int i = 0; i < N; i++) {                request[i] = scan.nextInt();            }             for (int i = 0; i < K; i++)                for (int j = 0; j < K; j++)                    cinema[i][j] = K - j;             for (int i = 0; i < N; i++) {                 seats = request[i];                 min = Integer.MAX_VALUE;                 right = 0; left = 0; //moving from right-down corner                                for (int r = K - 1; r >= 0; r--) {                    for (int c = K - 1; c >= 0; c--) {                        if (cinema[r][c] >= seats) {  //r=row,c=column, k+s-1 =number of seats between left side and right side at this row  //with each iteration r is closer to the center and so c  //distance is accepted only if the row can fit the necessary amount of seats                       	                            int distance = distance(xc - 1, yc - 1, r, c, c + seats - 1);  //if the distance is equal smaller than previous distance,it becomes smallest distance                                                       if (min >= distance) {                                right = r;                                left = c;                                min = distance;                            }                        }                    }                } //if the mininimal distance remained as it was,it's displayed "-1" as it can't be fitted                               if (min == Integer.MAX_VALUE) {                    System.out.println(-1); //else it means seats can be placed, because there is enough space                                   } else { //seats are getting a smaller value according to how many seats were occupied   //in order to know how many free seats are in the specific row                    for (int j = 0; j < left; j++)                     if (cinema[right][j] > cinema[right][left])                     	cinema[right][j] -= cinema[right][left]; //occupied seats are assigned as 0,so the next time they aren't available                                       for (int j = left; j < left + seats; j++)                     	cinema[right][j] = 0; //displaying x,yl,yr                                       System.out.println((right + 1) + " " + (left + 1) + " " + (left + request[i]));                }            }        }    } } 
