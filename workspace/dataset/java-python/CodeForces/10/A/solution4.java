import java.io.*;import java.util.*; public class Main {    static final int N = 110;    static int n, p1, p2, p3, t1, t2;    static Node[] arr = new Node[N];    static StreamTokenizer st = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));     static class Node {        int l, r;         public Node(int l, int r) {            this.l = l;            this.r = r;        }    }     public static void main(String[] args) throws IOException {        st.nextToken();        n = (int)st.nval;        st.nextToken();        p1 = (int)st.nval;        st.nextToken();        p2 = (int)st.nval;        st.nextToken();        p3 = (int)st.nval;        st.nextToken();        t1 = (int)st.nval;        st.nextToken();        t2 = (int)st.nval;        int a, b;        for (int i = 0; i < n; ++i) {            st.nextToken();            a = (int)st.nval;            st.nextToken();            b = (int)st.nval;            arr[i] = new Node(a, b);        }        Arrays.sort(arr, 0, n, (o1, o2) -> o1.l - o2.l);        a = arr[0].l;        b = arr[0].r;        int sum = (b - a) * p1;        for (int i = 1; i < n; ++i) {            if (b + t1 < arr[i].l) {                sum += t1 * p1;                b += t1;                if (b + t2 < arr[i].l) {                    sum += t2 * p2;                    b += t2;                    sum += (arr[i].l - b) * p3;                } else {                    sum += (arr[i].l - b) * p2;                }            } else {                sum += (arr[i].l - b) * p1;            }            a = arr[i].l;            b = arr[i].r;            sum += (b - a) * p1;        }        bw.write(sum + "");        bw.close();    }}
