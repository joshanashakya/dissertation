import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.StringTokenizer; public class B { 	public static void main(String[] args) {		FastScanner fs=new FastScanner();		int t=fs.nextInt();		ArrayList<Integer> a = new ArrayList<>();		while(t-->0)		{			int n = fs.nextInt();			if (!a.contains(n))			a.add(n);					}		int ans = -1;		if (a.size()<4)		{			if (a.size()<2)			{				ans = 0;			}			else if (a.size() == 2)			{				if ((a.get(1)-a.get(0))%2 == 0)					ans = Math.abs(((a.get(1)-a.get(0))/2));				else					ans = Math.abs(a.get(1)-a.get(0));				//System.out.println(a); 			}			else			{				int b = a.get(0);				int c = a.get(1);				int d = a.get(2);				int g = Math.max(b, Math.max(c, d));				int e = Math.min(b, Math.min(c, d));				int f = 0;				if (b!=g && b!=e)					f = b;				else if (c!=g && c!=e)					f = c;				else if (d!=g && d!=e)					f = d;				if (f-e == g-f)					ans = f-e;			}		}Â 		System.out.println(ans); 	} 	static class FastScanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer("");		String next() {			while (!st.hasMoreTokens())				try {					st=new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		}		int[] readArray(int n) {			int[] a=new int[n];			for (int i=0; i<n; i++)				a[i]=nextInt();			return a;		}		long nextLong() {			return Long.parseLong(next());		}	} }
