import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     void run(FastScanner in, PrintWriter out) {         int[] cnt = new int[100];        int n = 2*in.nextInt();         int[] a = new int[n];        for (int i = 0; i < n; i++) {            a[i] = in.nextInt();            cnt[a[i]]++;        }         // find repeats        int sz1 = 0;        int sz2 = 0;        int sub1 = 0;        int sub2 = 0;         int[] ret = new int[n];        int[] parity = new int[100];        Arrays.fill(parity, -1);        int overallparity = 0;         for (int i = 0; i < n; i++) {            if (cnt[a[i]] <= 1) continue;             if (parity[a[i]] == 0) {                ret[i] = 1;                parity[a[i]] = 1;                sz1++;            } else if (parity[a[i]] == 1) {                ret[i] = 2;                parity[a[i]] = 0;                sz2++;            } else {                 if (cnt[a[i]]%2 == 0) {                    ret[i] = 1;                    parity[a[i]] = 1;                    sz1++;                    sub1 += cnt[a[i]]/2-1;                    sub2 += cnt[a[i]]/2-1;                    continue;                }                 if (overallparity == 0) {                    ret[i] = 1;                    parity[a[i]] = 1;                    sz1++;                     sub1 += cnt[a[i]]/2;                    sub2 += cnt[a[i]]/2-1;                } else {                    ret[i] = 2;                    parity[a[i]] = 0;                    sz2++;                     sub1 += cnt[a[i]]/2-1;                    sub2 += cnt[a[i]]/2;                }                overallparity ^= 1;            }        }         // System.out.println(sub1 + " " + sub2);        // Arrays.sort(a);        // System.out.println(Arrays.toString(Arrays.copyOfRange(cnt, 10, 21)));        // System.out.println(sub1 + " " + sub2);        int n2 = n/2;        out.println((n2-sub1)*(n2-sub2));        for (int i = 0; i < n; i++) {            if (ret[i] != 0) out.print(ret[i] + " ");            else {                if (sz1 < n2) {                    out.print("1 ");                    sz1++;                } else out.print("2 ");            }        }        out.println();    }     void go() {         int[] a = {10, 14, 18, 12, 12, 19, 19, 13, 13 ,17};        int[] b = {16, 19, 17, 17, 14, 14, 16, 19, 15, 15};        Set<Integer> ss = new HashSet<>();        for(int kk : a) for (int kkk : b) {            ss.add(kk*100 + kkk);        }        System.out.println(ss.size());    }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
