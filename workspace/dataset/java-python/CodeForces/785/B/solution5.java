import java.util.*;import java.util.Scanner;import java.io.*;import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import javax.lang.model.util.ElementScanner6;  public class B785{    static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new                    InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }          String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }              public static void main(String args[])    {          FastReader in=new FastReader();        int t=1;        //t=in.nextInt();        while(t-->0)        {            int n=in.nextInt();            int maxl1=0;            int minr1=Integer.MAX_VALUE;            int maxl2=0;            int minr2=Integer.MAX_VALUE;            for(int i=0;i<n;i++)            {                int a=in.nextInt();                maxl1=Math.max(maxl1,a);                int b=in.nextInt();                minr1=Math.min(minr1,b);            }             int m=in.nextInt();                        for(int i=0;i<m;i++)            { int a=in.nextInt();                maxl2=Math.max(maxl2,a);                int b=in.nextInt();                minr2=Math.min(minr2,b);            }                  long max=0;             max=Math.max(maxl1-minr2,maxl2-minr1);            max=Math.max(max,0);            System.out.println(max);                                             }    }}
