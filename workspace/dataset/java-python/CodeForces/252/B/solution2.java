/*If you want to aim high, aim highDon't let that studying and grades consume youJust live life young******************************What do you think? What do you think?1st on Billboard, what do you think of itNext is a Grammy, what do you think of itHowever you think, I’m sorry, but shit, I have no fcking interest*******************************I'm standing on top of my Monopoly boardThat means I'm on top of my game and it don't stoptil my hip don't hop anymorehttps://www.a2oj.com/Ladder16.html*******************************300IQ as writer = Sad!*/import java.util.*;import java.io.*;import java.math.*;    public class x252B   {      public static void main(String hi[]) throws Exception      {         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));           StringTokenizer st = new StringTokenizer(infile.readLine());         int N = Integer.parseInt(st.nextToken());         int[] arr = new int[N];         st = new StringTokenizer(infile.readLine());         for(int i=0; i < N; i++)            arr[i] = Integer.parseInt(st.nextToken());         HashSet<Integer> set = new HashSet<Integer>();         for(int x: arr)   set.add(x);         if(set.size() == 1)         {            System.out.println(-1);            return;         }         ArrayList<Integer> sorted = new ArrayList<Integer>();         for(int x: arr)   sorted.add(x);         Collections.sort(sorted);         int trials = 6969;         while(trials-->0)         {            int a = (int)(Math.random()*N);            int b = (int)(Math.random()*N);            while(arr[a] == arr[b])               b = (int)(Math.random()*N);            int t = arr[a];            arr[a] = arr[b];            arr[b] = t;            if(works(arr, sorted))            {               a++; b++;               System.out.println(a+" "+b);               return;            }            t = arr[a];            arr[a] = arr[b];            arr[b] = t;         }         System.out.println(-1);      }      public static boolean works(int[] arr, ArrayList<Integer> ls)      {         int cnt = 0;         for(int i=0; i < arr.length; i++)            if(ls.get(i) != arr[i])            {               cnt++;               break;            }         Collections.reverse(ls);         for(int i=0; i < arr.length; i++)            if(ls.get(i) != arr[i])            {               cnt++;               break;            }         return cnt == 2;      }   }
