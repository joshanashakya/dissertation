import math,sysfrom collections import defaultdict,dequeimport bisect as bidef yes():print('YES')def no():print('NO')def I():return (int(sys.stdin.readline()))def In():return(map(int,sys.stdin.readline().split()))def Sn():return sys.stdin.readline().strip()def Pr(x): sys.stdout.write(str(x)+'\n')#sys.setrecursionlimit(1500)def dict(a):    d={}     for x in a:        if d.get(x,-1)!=-1:            d[x]+=1        else:            d[x]=1    return d #  Find leftmost value >= x #def find_gte(a, x):    i = bi.bisect_left(a, x)    if i != len(a):        return i    else:                    return -1def main():    try:        ans=0        n=I()        l=list(In())        for i in range(n):            cnt=l[i]            ans=max(cnt,ans)            for j in range(i+1,n):                cnt^=l[j]                ans=max(cnt,ans)        print(ans)    except:        pass        M = 998244353P = 1000000007 if __name__ == '__main__':    # for _ in range(I()):main()    for _ in range(1):main()#End# #        ******************* All The Best *******************   #
