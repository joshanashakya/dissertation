def calc(optionsList):    unusedDaughter = None    usedKingdoms = [False] * (len(optionsList) + 5)    for daughterIdx, options in enumerate(optionsList):        kingdomFound = False        for option in options:            if not usedKingdoms[option]:                usedKingdoms[option] = True                kingdomFound = True                break        if not kingdomFound:            unusedDaughter = daughterIdx        toImprove = None    if unusedDaughter is not None:        for idx in range(1, len(optionsList)+1):            if not usedKingdoms[idx] and idx not in optionsList[unusedDaughter]:                toImprove = "{} {}".format(unusedDaughter+1, idx)                break     #print(unusedDaughter, usedKingdoms, toImprove)     if toImprove:        print('IMPROVE')        print(toImprove)    else:        print('OPTIMAL')         num_test_cases = int(input())for _ in range(num_test_cases):    num_kingdoms = int(input())    optionsList = []    for _ in range(num_kingdoms):        options = [int(i) for i in input().split(" ")]        options.pop(0)        optionsList.append(options)    calc(optionsList) # calc([#     [2, 3],#     [1, 2],#     [3, 4],#     [3]# ]) # calc([#     [],#     []# ])
