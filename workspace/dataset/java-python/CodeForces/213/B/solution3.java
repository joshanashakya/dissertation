import java.util.*;Â public class test2{	static long dp[][];		 static long mod = 1000000007;	   static long pow(long a , long b , long c)	   {		   		   if(b==0)			   return 1;		   		   long ans = pow(a,b/2,c);		   if(b%2 == 0)			   return ans*ans%c;		   		   return ans*ans%c*a%c;	   }	   	   static long modInverse(long a , long b)	   {		   return pow(a,b-2,mod);	   }	   	   	   static long fact[];	   	   static long ways(int pos , int space , int arr[] , int n)	   {		   if(space < 0)			   return 0;		   		   if(pos == arr.length)		   {			   if(space == 0)				   return 1;			   			   return 0;		   }		   		   if(space < arr[pos])			   return 0;		   		   if(dp[pos][space] != -1)			   return dp[pos][space];		   		   dp[pos][space] = 0;		   for(int i = arr[pos] ; i <= n ; i++)		   {			   if(pos == 0)			   {				   if(i > 0)					   dp[pos][space] += modInverse(fact[i-1],mod)*modInverse(i,mod)%mod*modInverse(n,mod)%mod*(n-i)%mod*ways(pos+1,space-i,arr,n)%mod;				   				   else					   dp[pos][space] = ways(pos+1,space,arr,n);			   }			   			   else				   dp[pos][space] += modInverse(fact[i],mod)*ways(pos+1,space-i,arr,n);			   			   dp[pos][space] %= mod;		   }		   return dp[pos][space];	   }	public static void main(String []args)	{		Scanner sc = new Scanner(System.in);		int n = sc.nextInt();		fact = new long[n+1];		fact[0] = 1;		for(long i = 1 ; i <= n ; i++)		{			fact[(int)i] = fact[(int)i-1]*i%mod;		}				int arr[] = new int[10];		for(int i = 0 ; i <= 9  ;i++)		{			arr[i] = sc.nextInt();		}	dp = new long[10][n+1];	for(int i = 0;  i <= 9 ; i++)	{		for(int j = 0 ; j <= n ; j++)		{		dp[i][j] = -1;			}	}	long ans = 0;	for(int i = 1 ; i <= n ; i++)	{		ans += fact[i]*ways(0,i,arr,i)%mod;		ans %= mod;	}			ans %= mod;	System.out.println(ans);	}}
