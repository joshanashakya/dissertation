import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*; public class Main{     static String original ;    static int n ;    static String smallest;    public static int  Smaller(String s)    {        int value =  smallest.compareTo(s);                return value;    }    public static void main(String args[])    {        FastScanner input = new FastScanner();        int tc = input.nextInt();        while (tc-- > 0) {         n = input.nextInt();        original = input.next();                      smallest = original;        int ans = 1;                int min = original.compareTo(smallest);                int score = 2;        for (int i = 0; i < n-1; i++) {            if((n%2==0&&score%2==0)||(n%2!=0&&score%2!=0))            {                //reverse                StringBuilder ss = new StringBuilder(original.substring(0, i+1));                String temp  = original.substring(i+1)+ss.reverse();//                System.out.println(temp);               if( Smaller(temp)>0)               {                   smallest = temp;                   ans = score;                                  }            }            else if((n%2==0&&score%2!=0)||(n%2!=0&&score%2==0))            {                //serial                                StringBuilder ss = new StringBuilder(original.substring(0, i+1));                                 String temp  = original.substring(i+1)+ss;//                                System.out.println(temp);               if( Smaller(temp)>0)               {                   smallest = temp;                   ans = score;                                   }            }                       score++;                   }                System.out.println(smallest);        System.out.println(ans);           }    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
