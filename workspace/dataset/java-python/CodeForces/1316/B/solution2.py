 import mathfrom math import gcd,floor,sqrt,logdef iin(): return int(input())def sin(): return input().strip()def listin(): return list(map(int,input().strip().split()))def liststr(): return list(map(str,input().strip().split()))def ceill(x): return  int(x) if(x==int(x)) else int(x)+1def ceilldiv(x,d): x//d if(x%d==0) else x//d+1def LCM(a,b): return (a*b)//gcd(a,b)  def solve():	n = iin()	a = sin()	z = []	for k in range(n-1):		if n%2==k%2:			z.append([a[k:] + a[:k],k+1])			continue		z.append([a[k:] + a[:k][::-1],k+1])	z.append([a[::-1],n])	# print(z)	for i in min(z):		print(i)   t = 1 t = int(input()) for hula in range(t):	solve()
