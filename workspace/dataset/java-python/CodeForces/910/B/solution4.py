#------------------------------warmup----------------------------import osimport sysimport mathfrom io import BytesIO, IOBase BUFSIZE = 8192  class FastIO(IOBase):    newlines = 0     def __init__(self, file):        self._fd = file.fileno()        self.buffer = BytesIO()        self.writable = "x" in file.mode or "r" not in file.mode        self.write = self.buffer.write if self.writable else None     def read(self):        while True:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            if not b:                break            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines = 0        return self.buffer.read()     def readline(self):        while self.newlines == 0:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            self.newlines = b.count(b"\n") + (not b)            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines -= 1        return self.buffer.readline()     def flush(self):        if self.writable:            os.write(self._fd, self.buffer.getvalue())            self.buffer.truncate(0), self.buffer.seek(0)  class IOWrapper(IOBase):    def __init__(self, file):        self.buffer = FastIO(file)        self.flush = self.buffer.flush        self.writable = self.buffer.writable        self.write = lambda s: self.buffer.write(s.encode("ascii"))        self.read = lambda: self.buffer.read().decode("ascii")        self.readline = lambda: self.buffer.readline().decode("ascii")  sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)input = lambda: sys.stdin.readline().rstrip("\r\n") #-------------------game starts now----------------------------------------------------n=int(input())a=int(input())b=int(input())c1=4c2=2ch=0rem=0count=0j=4k=2if b>a:    for i in range (2):        s=min(n//b,c2)        c2-=s        rem=n-s*b        c1-=rem//a        if c2<=0:            count=i+1            break    for i in range (4):        if c1<=0:            count+=i            ch=1            break        c1-=n//a    if ch==0:        count+=4    j=0    k=0for i in range (j):    s=min(n//a,c1)    c1-=s    rem=n-s*a    c2-=rem//b    #print(c1,c2)    if c1<=0:        count=i+1        breakfor i in range (k):    if c2<=0:        count+=i        ch=1        break    c2-=n//b    #print(c2)if ch==0 and a>=b:    count+=2if 2*a+b==n:    count=2print(count)
