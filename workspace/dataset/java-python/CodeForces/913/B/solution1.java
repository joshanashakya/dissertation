/* * akshaygupta26 */import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.Random;import java.util.Arrays;import java.util.StringTokenizer; import java.util.ArrayList;import java.util.HashMap;import java.util.HashSet;import java.util.Collections;import java.util.*;public class B {     public static void main(String[] args) 	{ 		FastReader sc=new FastReader(); 		StringBuffer ans=new StringBuffer();		int test=1;		while(test-->0)		{			int n=sc.nextInt();			int par[]=new int[n+1];			int nos[]=new int[n+1];			for(int i=2;i<=n;i++) {				int t=sc.nextInt();				par[i]=t;				nos[t]++;			}			int lc[]=new int[n+1];			for(int i=1;i<=n;i++) {				if(nos[i] != 0)continue;				lc[par[i]]++;			}						for(int i=1;i<=n;i++) {				if(nos[i] != 0) {					if(lc[i]<3) {						System.out.println("No\n");						System.exit(0);					}				}			}									ans.append("Yes\n");										}			    System.out.print(ans);	}         static String convertString(ArrayList<Integer> li) {    	StringBuffer s1=new StringBuffer();    	for(int x:li) s1.append(x+" ");    	return s1.toString().trim();    }        static String getRes(String key,int n) {    	String res="";    	String keys[]=key.split(" ");    	int i=1;    	for(String value:keys) {    		int val =Integer.parseInt(value);    		while(i<val) {    			res+="1";    			++i;    		}    		++i;    		res+="0";    	}    	while(i<=n) {    		res+="1";    		++i;    	}    	return res;    }        static final Random random=new Random();    	static void ruffleSort(int[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n), temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}		static void ruffleSort(long[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n);			long temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}		static class FastReader 	{ 		BufferedReader br; 		StringTokenizer st;  		public FastReader() 		{ 			br = new BufferedReader(new					InputStreamReader(System.in)); 		}  		String next() 		{ 			while (st == null || !st.hasMoreElements()) 			{ 				try				{ 					st = new StringTokenizer(br.readLine()); 				} 				catch (IOException e) 				{ 					e.printStackTrace(); 				} 			} 			return st.nextToken(); 		}  		int nextInt() 		{ 			return Integer.parseInt(next()); 		}  		long nextLong() 		{ 			return Long.parseLong(next()); 		}  		double nextDouble() 		{ 			return Double.parseDouble(next()); 		}  		String nextLine() 		{ 			String str = ""; 			try			{ 				str = br.readLine(); 			} 			catch (IOException e) 			{ 				e.printStackTrace(); 			} 			return str; 		} 	}   } 
