import java.util.*; public class P48B {  public static void main(String[] args) {    Scanner input = new Scanner(System.in);     int n = input.nextInt();    int m = input.nextInt();     int[][] sum = new int[n][m];     for (int i = 0; i < n; i++) {      for (int j = 0; j < m; j++) {        sum[i][j] = input.nextInt();        if (j > 0) {          sum[i][j] += sum[i][j - 1];        }         if (i > 0) {          sum[i][j] += sum[i - 1][j];        }         if (i > 0 && j > 0) {          sum[i][j] -= sum[i - 1][j - 1];        }      }    }     int a = input.nextInt();    int b = input.nextInt();     int ans = Integer.MAX_VALUE;    for (int i = 0; i < n; i++) {      for (int j = 0; j < m; j++) {        if (i + a <= n && j + b <= m) {          int trees = getSum(sum, i, j, i + a - 1, j + b - 1);          if (ans > trees) {            ans = trees;          }        }         if (i + b <= n && j + a <= m) {          int trees = getSum(sum, i, j, i + b - 1, j + a - 1);          if (ans > trees) {            ans = trees;          }        }      }    }     System.out.println(ans);   }   private static int getSum(int[][] sum, int si, int sj, int ei, int ej) {    int ans = sum[ei][ej];     if (si > 0) {      ans -= sum[si - 1][ej];    }     if (sj > 0) {      ans -= sum[ei][sj - 1];    }     if (si > 0 && sj > 0) {      ans += sum[si - 1][sj - 1];    }     return ans;  }}
