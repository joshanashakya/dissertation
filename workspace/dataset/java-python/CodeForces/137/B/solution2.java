import java.util.*; public class ICPC {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);       int n=sc.nextInt();       boolean ar[]=new boolean[5000+1];        for (int i = 0; i < n; i++) {            ar[sc.nextInt()]=true;         }        int c=0;        for (int i = 1; i <=n; i++) {            if(!ar[i]) {                c++;            }         }            System.out.println(c);        }          public List<Integer> getDivisors(int n) {        List<Integer> list = new ArrayList<>();        for (int d = 2; d * d <= n; d++) {            while (n % d == 0) {                list.add(d);                n /= d;            }        }        if (n > 1) {            list.add(n);        }        return list;    }     public int gcd(int n1, int n2) {        int gcd = 1;        for (int i = 1; i <= n1 && i <= n2; ++i) {            // Checks if i is factor of both integers            if (n1 % i == 0 && n2 % i == 0)                gcd = i;        }         // int lcm = (n1 * n2) / gcd;        return gcd;    }}
