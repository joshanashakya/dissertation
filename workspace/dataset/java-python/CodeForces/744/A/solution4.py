from queue import QueueÂ n,m,k=[int(i) for i in input().split()]govt=[0 for i in range(n)]l=[int(i) for i in input().split()]for i in l:    govt[i-1]=1edges=[]adj=[[] for i in range(n)]for i in range(m):    x=[int(i) for i in input().split()]    adj[x[0]-1].append(x[1]-1)    adj[x[1]-1].append(x[0]-1)parent=[-1 for i in range(n)]mx=0ans=0visited=[0 for i in range(n)]total_no_gov_nodes=0extra=0for i in range(n):    num_edges=0    back=0    num_nodes=0    gov_exist=0        if(visited[i]==0):        q=Queue()        q.put(i)        visited[i]=1        while(q.empty()!=True):            num_nodes+=1            tmp=q.get()            if(govt[tmp]==1):                gov_exist=1            for child in adj[tmp]:                if(visited[child]==0):                    num_edges+=1                    q.put(child)                    visited[child]=1                    parent[child]=tmp                elif(parent[tmp]!=child):                    back+=1        num_edges+=(back/2)        num_edges=int(num_edges)        if(gov_exist==1):            mx=max(mx, num_nodes)        add=int((num_nodes*(num_nodes-1))/2)        ans+=(add-num_edges)        if(gov_exist==0):            if(total_no_gov_nodes==0):                total_no_gov_nodes=num_nodes            else:                extra+=(total_no_gov_nodes*num_nodes)                total_no_gov_nodes+=num_nodesans+=extraans+=(mx*total_no_gov_nodes)print(ans)
