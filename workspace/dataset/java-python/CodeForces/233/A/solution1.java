import java.io.*;import java.util.*; public class PerfectPermutation {	public static void main(String args[]){		FScanner in = new FScanner();		PrintWriter out = new PrintWriter(System.out);		int n = in.nextInt();		int arr[]=new int [n+1];		if(n%2!=0)		out.println("-1");	    else	    {	    	for(int i=1;i<=n;i++)	    	{	    		if(i%2!=0)	    			out.print(i+1+" ");	    		else	    			out.print(i-1+" ");	    	}	    }	 		out.close();	}	 	static class FScanner {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer sb = new StringTokenizer(""); 		String next(){			while(!sb.hasMoreTokens()){				try{					sb = new StringTokenizer(br.readLine());				} catch(IOException e){ }			}			return sb.nextToken();		}		String nextLine(){			try{ return br.readLine(); } 			catch(IOException e) { } return "";		} 		int nextInt(){			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		int[] readArray(int n) {			int a[] = new int[n];			for(int i=0;i<n;i++) a[i] = nextInt();			return a;		} 		float nextFloat(){		return Float.parseFloat(next());		}				double nextDouble(){		return Double.parseDouble(next());		}	}}
