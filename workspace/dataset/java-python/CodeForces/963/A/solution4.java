import java.util.*;import java.util.stream.*;import java.io.*;import java.math.*;Â public class Main {         static boolean FROM_FILE = false;        static class FastReader {         BufferedReader br;         StringTokenizer st;         public FastReader() {             if (FROM_FILE) {                try {                    br = new BufferedReader(new FileReader("input.txt"));                 } catch (IOException error) {                }               } else {                br = new BufferedReader(new InputStreamReader(System.in));                }        }        String next() {             while (st == null || !st.hasMoreElements()) {                 try {                     st = new StringTokenizer(br.readLine());                 } catch (IOException  e) {                     e.printStackTrace();                 }             }             return st.nextToken();         }        int nextInt() {             return Integer.parseInt(next());         }        long nextLong() {             return Long.parseLong(next());         }          double nextDouble() {             return Double.parseDouble(next());         }         String nextLine() {             String str = "";             try {                 str = br.readLine();             } catch (IOException e) {                 e.printStackTrace();             }             return str;         }     }    static int max(int... nums) {        int res = Integer.MIN_VALUE;        for (int num: nums) res = Math.max(res, num);        return res;    }    static int min(int... nums) {        int res = Integer.MAX_VALUE;        for (int num: nums) res = Math.min(res, num);        return res;    }    static long max(long... nums) {        long res = Long.MIN_VALUE;        for (long num: nums) res = Math.max(res, num);        return res;    }    static long min(long... nums) {        long res = Long.MAX_VALUE;        for (long num: nums) res = Math.min(res, num);        return res;    }        static FastReader fr = new FastReader();    static PrintWriter out;        public static void main(String[] args) {         if (FROM_FILE) {            try {                out = new PrintWriter(new FileWriter("output.txt"));            } catch (IOException error) {                            }        } else {            out = new PrintWriter(new OutputStreamWriter(System.out));        }        new Main().run();        out.flush();        out.close();    }         long mod = 1000000000 + 9;    long pow(long a, long t) {        long res = 1;        while (t > 0) {            if ((t & 1) != 0) res = (res * a) % mod;            a = a * a % mod;            t >>= 1;        }        return res;    }        void run() {        int n = fr.nextInt(), a = fr.nextInt(), b = fr.nextInt(), k = fr.nextInt();        String str = fr.nextLine();        long ans = 0, r = pow(a, mod - 2) * b % mod, pos = 0;        for (int i = 0; i < k; i += 1) {            ans = (ans + (str.charAt(i) == '+'? 1L : -1L) * pow(a, n - i) % mod * pow(b, i) % mod) % mod;        }        n = (n + 1) / k;        long q = pow(r, k);        if (q == 1L) pos = ans * n % mod;        else pos = ans * (pow(q, n) - 1) % mod * pow(q - 1, mod - 2) % mod;        out.println((pos + mod) % mod);    }}
