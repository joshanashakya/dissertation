import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.InputMismatchException;import java.io.IOException;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author Pranay2516 */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastReader in = new FastReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        APawnChess solver = new APawnChess();        solver.solve(1, in, out);        out.close();    }     static class APawnChess {        public void solve(int testNumber, FastReader in, PrintWriter out) {            char[][] c = new char[8][8];            for (int i = 0; i < 8; ++i) c[i] = in.next().toCharArray();            int ma = 8, mb = 8;            for (int i = 0; i < 8; ++i) {                for (int j = 0; j < 8; ++j) {                    if (c[i][j] == 'W') {                        boolean f = false;                        for (int k = 0; k < i; ++k) {                            if (c[k][j] != '.') {                                f = true;                                break;                            }                        }                        if (f) continue;                        ma = Math.min(ma, i);                    } else if (c[i][j] == 'B') {                        boolean f = false;                        for (int k = i + 1; k < 8; ++k) {                            if (c[k][j] != '.') {                                f = true;                                break;                            }                        }                        if (f) continue;                        mb = Math.min(mb, 7 - i);                    }                }            }            out.println(ma <= mb ? "A" : "B");        }     }     static class FastReader {        private InputStream stream;        private byte[] buf = new byte[1024];        private int curChar;        private int numChars;        private FastReader.SpaceCharFilter filter;         public FastReader(InputStream stream) {            this.stream = stream;        }         public int read() {            if (numChars == -1) throw new InputMismatchException();            if (curChar >= numChars) {                curChar = 0;                try {                    numChars = stream.read(buf);                } catch (IOException e) {                    throw new InputMismatchException();                }                if (numChars <= 0) return -1;            }            return buf[curChar++];        }         public String next() {            int c = read();            while (isSpaceChar(c)) c = read();            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                c = read();            } while (!isSpaceChar(c));            return res.toString();        }         public boolean isSpaceChar(int c) {            if (filter != null) return filter.isSpaceChar(c);            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         public interface SpaceCharFilter {            public boolean isSpaceChar(int ch);         }     }} 
