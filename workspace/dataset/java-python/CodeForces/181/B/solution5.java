import java.util.*; /** * created at 18/04/20 6:21 PM */ public class P181B {  public static void main(String[] args) {    Scanner input = new Scanner(System.in);    int n = input.nextInt();     Set<Point> set = new HashSet<>();    int[][] points = new int[n][2];    for (int i = 0; i < n; i++) {      points[i] = new int[] {input.nextInt(), input.nextInt()};      set.add(new Point(points[i][0], points[i][1]));    }     int ans = 0;    for (int i = 0; i < n; i++) {      for (int j = i + 1; j < n; j++) {        if ((points[i][0] + points[j][0]) % 2 == 0 && (points[i][1] + points[j][1]) % 2 == 0) {          int midi = (points[i][0] + points[j][0]) / 2;          int midj = (points[i][1] + points[j][1]) / 2;                    if (set.contains(new Point(midi, midj))) {            ans++;          }        }      }    }     System.out.println(ans);  }    private static class Point {    private final int first;    private final int second;     public Point(int first, int second) {      this.first = first;      this.second = second;    }     @Override    public int hashCode() {      return Objects.hash(first, second);    }     @Override    public boolean equals(Object o) {      Point that = (Point) o;      return this.first == that.first && this.second == that.second;    }  }}
