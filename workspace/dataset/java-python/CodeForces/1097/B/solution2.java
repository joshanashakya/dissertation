import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Petr_and_a_Combination_Lock {	private static class InputReader {		private final BufferedReader reader;		private StringTokenizer tokenizer; 		public InputReader(InputStream in) {			reader = new BufferedReader(new InputStreamReader(in));		} 		public int nextInt() {			return Integer.parseInt(next());		} 		public String next() {			while (tokenizer == null || !tokenizer.hasMoreTokens()) {				tokenizer = new StringTokenizer(readLine());			}			return tokenizer.nextToken();		} 		public String readLine() {			String line;			try {				line = reader.readLine();			} catch (IOException e) {				throw new RuntimeException(e);			}			return line;		}	}	static boolean isValid(int n,int[] num) {		int x,limit=1<<n;		for(int i = 0; i<limit; i++) {			x = 0;			for(int j = 0; j<n; j++) {				x += ((i & (1 << j)) == 0)?num[j]:-num[j];			}			if(x % 360 == 0)				return true; 		}		return false; 	}	public static void main(String[] args) {		InputReader  sc=new InputReader(System.in);		int t=sc.nextInt();		int[] num=new int[t];		for(int i=0;i<t;i++)			num[i]=sc.nextInt();		System.out.println(isValid(t,num)?"YES":"NO");			}}
