import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Steps {    public static void main(String[] args) {        FastReader fs = new FastReader();        StringBuilder sb = new StringBuilder();        long n = fs.nextLong();        long m = fs.nextLong();        long x = fs.nextLong();        long y = fs.nextLong();        long t = fs.nextLong();        long steps = 0;        for(int tt = 0; tt < t; tt++) {            long dx = fs.nextLong();            long dy = fs.nextLong();            long currX = dx == 0 ? -1 : dx < 0 ? (x - 1) / Math.abs(dx) : (n - x) / Math.abs(dx);            long currY = dy == 0 ? -1 : dy < 0 ? (y - 1) / Math.abs(dy) : (m - y) / Math.abs(dy);            long currStep = 0;            if(currX == -1) currStep = currY;            else if(currY == -1) currStep = currX;            else currStep += Math.min(currX, currY);            steps += currStep;            if(currX != -1) {                x += currStep * dx;            }            if(currY != -1) {                y += currStep * dy;            }        }        System.out.println(steps);    }     static class FastReader {        BufferedReader br;        StringTokenizer st;        public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while(st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         float nextFloat() {            return Float.parseFloat(next());        }    }}
