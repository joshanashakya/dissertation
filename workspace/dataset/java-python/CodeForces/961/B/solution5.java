import java.io.*;import java.util.*; public class FlippingGame{     public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        String nk[] = br.readLine().trim().split(" ");        int n = Integer.parseInt(nk[0]);        int k = Integer.parseInt(nk[1]);        int a[] = new int[n];        int awake[] = new int[n];        int p[] = new int[n];        int p2[] = new int[n];         String ss[] = br.readLine().trim().split(" ");        String x[] = br.readLine().trim().split(" ");         int j=0, max=0;         while (j<n) {            a[j] = Integer.parseInt(ss[j]);            awake[j] = Integer.parseInt(x[j]);            if(j==0){                if(awake[j]==1)p[j] = a[j];                p2[j] = a[j];            }else if(awake[j]==0){                p[j] = p[j-1];                 p2[j] = p2[j-1] + a[j];            }else {                p[j] = p[j-1] + a[j];                p2[j] = p2[j-1] + a[j];            }             j++;        }         for(int i=0;i<n-k+1;i++) {           if(i==0){               max = Math.max(max, p2[i+k-1] + (p[n-1]-p[i+k-1]));           }else{            //    System.out.println((p2[i+k-1] - p2[i-1]));            //    System.out.println((p[n-1] - p[i+k-1]) + p[i-1]);               max = Math.max(max, (p2[i+k-1] - p2[i-1]) + (p[n-1] - p[i+k-1]) + (p[i-1]));           }        }         System.out.println(max);    }}
