import java.io.BufferedReader; import java.io.*;import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.*;import java.math.*;public class Main {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()        {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()        {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();            }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }    public static void main(String args[])    {        Scanner sc=new Scanner(System.in);        PrintWriter pw=new PrintWriter(System.out);        int t=1;//sc.nextInt();        StringBuffer sb=new StringBuffer();        while(t-->0)        {          int n=sc.nextInt(),temp=0;          int k=sc.nextInt();          List<Integer> l=new ArrayList<>();          for(int i=0;i<n;i++)              l.add(sc.nextInt());          if(Collections.max(l)-Collections.min(l)==0)          pw.println(0+" "+0);          else{          for(int i=0;i<k;i++)          {           int max=Collections.max(l);           int min=Collections.min(l);           int ind1=l.indexOf(max);           int ind2=l.indexOf(min);           l.set(ind1,max-1);l.set(ind2,min+1);           sb.append((ind1+1)+" "+(ind2+1)+"\n");           if(Collections.max(l)==Collections.min(l))           {   k=i+1;               break;           }          }          pw.println((Collections.max(l)-Collections.min(l))+" "+k);          pw.println(sb);          }        }        pw.close();    }}  
