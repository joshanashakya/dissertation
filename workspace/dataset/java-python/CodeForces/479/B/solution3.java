import java.io.BufferedReader;import java.io.*;import java.io.InputStreamReader;import java.util.Scanner;import java.util.StringTokenizer;import java.util.*;import java.math.*;public class Main{    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException  e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }    public static void main(String args[])    {        Scanner sc=new Scanner(System.in);        PrintWriter pw=new PrintWriter(System.out);        int t = 1;//sc.nextInt();        while(t-->0)        {            int n = sc.nextInt();            int k = sc.nextInt();                        ArrayList<Integer> l = new ArrayList<>();            for(int i=0;i<n;i++)                l.add(sc.nextInt());                            if(Collections.max(l) == Collections.min(l))                pw.println(0+" " + 0);            else            {                StringBuffer ans = new StringBuffer();                for(int i=1; i<=k; i++)                {                    int maxind = l.indexOf(Collections.max(l));                    int minind = l.indexOf(Collections.min(l));                                        l.set(maxind,l.get(maxind)-1);                    l.set(minind,l.get(minind)+1);                                        ans.append((maxind+1) +" " + (minind+1) +"\n");                                        if(Collections.max(l) == Collections.min(l))                    {                        k = i;                        break;                    }                }                 pw.println((Collections.max(l) - Collections.min(l)) +" " + k);                 pw.println(ans);            }        }        pw.close();    }}
