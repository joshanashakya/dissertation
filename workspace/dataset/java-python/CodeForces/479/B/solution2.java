import java.util.*; public class CodeForces698 {     public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        //long t = sc.nextlong();        //for(long i = 0; i<t; i++)        System.out.println(solve(sc));        sc.close();    }     public static String solve(Scanner sc) {        int n = sc.nextInt();        int k = sc.nextInt();        int times = 1;        int min = Integer.MAX_VALUE;        int[] a = new int[n];        for (int i = 0; i<n; i++)            a[i] = sc.nextInt();         min = a[max(a)] - a[min(a)];        int resTimes = 0;        List<String> moves = new LinkedList<>();        while (times<=k && min>0) {            int maxInd = max(a);            int minInd = min(a);            a[maxInd]--;            a[minInd]++;            moves.add((maxInd+1) + " " + (minInd+1));            int dis = a[max(a)]-a[min(a)];            if (dis<min){                min = dis;                resTimes = times;            }            times++;        }        StringBuilder result = new StringBuilder(min + " " + resTimes + "\n");        for (int i = 0; i<resTimes; i++)            result.append(moves.get(i) + "\n");         return result.toString();    }     public static int max(int [] a){        int max = Integer.MIN_VALUE, maxInd = -1;        for (int i = 0; i<a.length; i++){            if (a[i]>max) {                max = a[i];                maxInd = i;            }        }        return maxInd;    }     public static int min(int [] a){        int max = Integer.MAX_VALUE, maxInd = -1;        for (int i = 0; i<a.length; i++){            if (a[i]<max) {                max = a[i];                maxInd = i;            }        }        return maxInd;    } }
