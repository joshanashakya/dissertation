import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.lang.Math.*;import java.text.DecimalFormat;import java.util.*;  public class Main {    static class FastScanner    {        BufferedReader br;        StringTokenizer st;         public FastScanner()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }    static long gcd(long a,long b)    {        if(b == 0)            return a;        return gcd(b,a%b);    }    static long sumofdigits(long x)    {        long sum = 0;        while (x > 0)        {            sum = sum + x%10;            x /= 10;        }        return sum;    }    public static void main(String[] args) throws java.lang.Exception {       FastScanner fs = new FastScanner();       ArrayList<Integer> al = new ArrayList<>();       int a = fs.nextInt();       int b = fs.nextInt();       int c  = fs.nextInt();       al.add(a+b*c);       al.add(a*(b+c));       al.add(a*b*c);       al.add(a+b+c);       al.add((a*b)+c);       al.add((a+b)*c);       int max = Collections.max(al);        System.out.println(max);    }}
