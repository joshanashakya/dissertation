import java.util.Scanner; public class MAIN {     public static void main(String[] args) {        Scanner in = new Scanner(System.in);        String s = in.nextLine();        in.close();                int res = 0;                if (s!=null && s.length()>0) {            // iterate through all the letters            for (char c = 'A'; c <='Z'; c++) {                int curRes;                int startPos;                                // from left-most odd index                startPos = findHighestPipe(s,c,true);                curRes = findHighestPipe(s,startPos,c);                if (curRes>res) res=curRes;                                startPos = findHighestPipe(s,c,false);                curRes = findHighestPipe(s,startPos,c);                if (curRes>res) res=curRes;            }        }                System.out.println(res);    }        public static int findHighestPipe(String s, char c, boolean odd) {        int startPos = odd ? 1 : 0;        while (startPos<s.length() &&                 !(s.charAt(startPos)==c && startPos%2==(odd?1:0)))             startPos++;        return startPos;    }        public static int findHighestPipe(String s, int pos, char c) {        if (pos>=s.length()) return 0; // there is no such character in the string                int res = 1;        while (true) {            int prePos = pos;            pos++;            while (pos<s.length() &&                    !(s.charAt(pos)==c && (pos-prePos-1)%2==0)){                pos++;            }            if (pos<s.length()) {                res++;            } else {                break;            }        }        return res;    } }
