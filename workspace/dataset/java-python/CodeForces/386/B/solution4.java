import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Arrays;import java.util.StringTokenizer; public class CF386B {     public static void main(String[] args) {        int n = fs.nextInt();        int []array = fs.readArray(n);        int timeInterval = fs.nextInt();        Arrays.sort(array);         int max = Integer.MIN_VALUE;        for (int i = 0; i < n-1; i++) {            int currVal = 1;            for (int j = i+1; j < n; j++) {                if (array[j] - array[i] <= timeInterval) currVal++;                else break;            }            max = Math.max(currVal, max);        }        max = Math.max(max, 1);         System.out.println(max);    }     static class FastScanner {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");         String next() {            while (!st.hasMoreTokens())                try {                    st=new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         int[] readArray(int n) {            int[] a=new int[n];            for (int i=0; i<n; i++) a[i]=nextInt();            return a;        }         long nextLong() {            return Long.parseLong(next());        }    }    static FastScanner fs = new FastScanner();}
