import math,sys#from itertools import permutations, combinations;import heapq,random;from collections import defaultdict,dequeimport bisect as bidef yes():print('YES')def no():print('NO')#sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');def I():return (int(sys.stdin.readline()))def In():return(map(int,sys.stdin.readline().split()))def Sn():return sys.stdin.readline().strip()#sys.setrecursionlimit(1500)def dict(a):    d={}     for x in a:        if d.get(x,-1)!=-1:            d[x]+=1        else:            d[x]=1    return ddef find_gt(a, x):    'Find leftmost value greater than x'    i = bi.bisect_left(a, x)    if i != len(a):        return i    else:                    return -1  def main():    try:        s,n=In()                if n<=32:            l=[0]*(n+1)            l[n]=1            for i in range(n+1,n+60):                total=0                for j in range(i-n,i):                    total+=l[j]                l.append(total)            ans=[]            j=len(l)-1            while s>0:                if l[j]<=s and l[j]!=0:                    ans.append(l[j])                    s-=l[j]                j-=1            if len(ans)==1:                ans.append(0)             print(len(ans))            print(*ans)        else:            ans=[]            j=30            while s:                t=pow(2,j)                if t<=s:                    ans.append(t)                    s%=t                j-=1            if len(ans)==1:                ans.append(0)             print(len(ans))            print(*ans)     except:        pass        M = 998244353P = 1000000007 if __name__ == '__main__':    # for _ in range(I()):main()    for _ in range(1):main()#End# #        ******************* All The Best *******************   # 				 			 			     	 	 	  	 	  	
