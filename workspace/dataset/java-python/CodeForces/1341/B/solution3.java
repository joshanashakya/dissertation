import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.math.BigInteger;import java.util.*; public class Main{     public static void main(String[] args) throws IOException    {         FastScanner input = new FastScanner();        int tc = input.nextInt();        while (tc-- > 0) {            int n = input.nextInt();            int k = input.nextInt();            long a[] = new long[n];            for (int i = 0; i <n; i++) {                a[i] = input.nextLong();             }            int sum[] = new int[n];            for (int i = 1; i < n; i++) {                sum[i] += sum[i - 1];                if (i+1<n&&a[i - 1] < a[i] && a[i] > a[i + 1]) {                    sum[i]++;                }            }//            System.out.println(Arrays.toString(sum));            int maxsplit  = Integer.MIN_VALUE;            int l = -1;            for (int i = 0; i+k-1<n; i++) {               if(maxsplit<(sum[i+k-2]-sum[i]))               {                   maxsplit = (sum[i+k-2]-sum[i]);                   l = i;               }            }            System.out.println((maxsplit+1)+" "+(l+1));         }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
