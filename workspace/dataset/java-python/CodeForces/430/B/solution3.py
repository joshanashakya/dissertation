def count(balls):    stop = False    ans = len(balls)    m = len(balls)    while(not stop and m > 0):        elms2remove = set()        i = 2        stop = True        m = len(balls)        while i < len(balls):            if balls[i] == balls[i - 1] == balls[i - 2]:                elms2remove |= {i, i - 1, i - 2}                stop = False                while i + 1 < m and balls[i + 1] == balls[i]:                    elms2remove.add(i + 1)                    i += 1                 balls = [b for i, b in enumerate(balls) if i not in elms2remove]                break             i += 1     return ans - len(balls) - 1  def main():    n, _k, x = map(int, input().split())    balls = [int(c) for c in input().split()]     ans = 0    i = 0    while i < n - 1:        if balls[i] == x and balls[i + 1] == x:            conf = balls[:i]            conf.append(x)            conf += balls[i:]            ans = max(ans, count(conf))            while i < n - 1 and balls[i] == x:                i += 1         i += 1     print(ans)  if __name__ == "__main__":    main()
