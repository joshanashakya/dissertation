import sys,os,ioimport math,bisect,operatorinf,mod = float('inf'),10**9+7# sys.setrecursionlimit(10 ** 6)from itertools import groupby,accumulatefrom heapq import heapify,heappop,heappushfrom collections import deque,Counter,defaultdictinput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__Neo = lambda : list(map(int,input().split()))# test, = Neo()n, = Neo()arr, cnt, curr_len, curr_sum = [0] * (n+1), [0] * (n+1), 1, 0for _ in range(n):    s = input()    if s[0] == '1':        _, x, y = map(int, s.split())        curr_sum += x*y        cnt[x-1] += y    elif s[0] == '2':        _, x = map(int, s.split())        curr_sum += x        arr[curr_len] = x        curr_len += 1    else:        curr_len -= 1        curr_sum -= arr[curr_len] + cnt[curr_len]        cnt[curr_len-1] += cnt[curr_len]        cnt[curr_len] = 0    print('%.9f' % (curr_sum / curr_len))
