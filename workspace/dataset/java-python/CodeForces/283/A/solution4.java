import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     void run(FastScanner in, PrintWriter out) {         int N = in.nextInt();        ST st = new ST();        while (N-- > 0) {            int q = in.nextInt();            if (q == 1) {                int a = in.nextInt();                long x = in.nextInt();                int min = Math.min(a-1, st.last-1);                st.add(1, 0, min, x);                st.sum += Math.min(a, st.last)*x;            } else if (q == 2) {                int k = in.nextInt();                st.add(1, st.last, st.last, k);                st.sum += k;                st.last++;            } else {                if (st.last != 0) {                    long v = st.get(1, st.last-1);                    st.sum -= v;                    st.add(1, st.last-1, st.last-1, -v);                    st.last--;                }            }             out.println(String.format("%.8f", st.sum / st.last));        }    }     class ST {        int[] lo;        int[] hi;        long[] st;         int last = 1;        double sum = 0;         ST() {            int N = 200_004;            lo = new int[4*N];            hi = new int[4*N];            st = new long[4*N];            getBounds(1, 0, N);        }         void getBounds(int i, int a, int b) {            lo[i] = a;            hi[i] = b;            if (a==b)return;            int m = (a+b)>>1;            getBounds(i<<1, a, m);            getBounds(i<<1|1, m+1, b);        }         void add(int i, int a, int b, long x) {            if (b < lo[i] || a > hi[i]) return;            if (a <= lo[i] && hi[i] <= b) {                st[i] += x;                return;            }             prop(i);            add(i<<1, a, b, x);            add(i<<1|1, a, b, x);        }         void prop(int i) {            if (st[i] == 0) return;            st[i<<1] += st[i];            st[i<<1|1] += st[i];            st[i] = 0;        }         long get(int i, int a) {            if (a < lo[i] || a > hi[i]) return 0;            if (a == lo[i] && a == hi[i]) return st[i];            prop(i);            return get(i<<1, a) + get(i<<1|1, a);        }     }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
