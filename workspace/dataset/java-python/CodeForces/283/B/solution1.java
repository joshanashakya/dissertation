import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     public static long mod = 17352642619633L;     int N;    int[] a;    void run(FastScanner in, PrintWriter out) {         N = in.nextInt();         a = new int[N+3];         for (int i = 2; i <= N; i++) a[i] = in.nextInt();         sum = new long[N+3][2];        onstack = new boolean[N+3][2];        for (long[] d : sum) Arrays.fill(d, -1);         for (int i = 2; i <= N; i++) {            onstack[1][1] = true;            go(i, 0);            go(i, 1);        }         for (int i = 1; i < N; i++) {            a[i] = i;             int x = i+1;            int y = i;             if (sum[x][0] == Integer.MAX_VALUE) {                out.println(-1);            } else {                out.println(y + sum[x][0]);            }        }     }     long[][] sum;    boolean[][] onstack;    // 0 = minus, 1 = plus    void go(long x, int p) {        if (x <= 0 || x > N) {            return;        }        int xx = (int)x;        if (sum[xx][p] != -1) return;         if (onstack[xx][p]) {            sum[xx][p] = Integer.MAX_VALUE;            return;        }        onstack[xx][p] = true;         if (p == 1) {            go(x+a[xx], p^1);            if (x+a[xx] <= N && sum[xx+(int)a[xx]][0] == Integer.MAX_VALUE) {                sum[xx][1] = Integer.MAX_VALUE;            } else {                sum[xx][1] = a[xx] + (x+a[xx] <= N ? sum[xx+(int)a[xx]][0] : 0);             }        }         if (p == 0) {            go(x-a[xx], p^1);            if (x-a[xx] > 0 && sum[xx-(int)a[xx]][1] == Integer.MAX_VALUE) {                sum[xx][0] = Integer.MAX_VALUE;            } else {                sum[xx][0] = a[xx] + (x-a[xx] > 0 ? sum[xx-(int)a[xx]][1] : 0);            }        }         onstack[xx][p] = false;      }       static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
