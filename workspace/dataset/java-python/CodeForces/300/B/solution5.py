n,m=map(int,input().split())a=list(range(n))visited=[-1]*ngraph=[[] for _ in ' '*n]for _ in range(m):    i,j=map(int,input().split())    visited[i-1]=0    visited[j-1]=0    graph[i-1].append(j-1)    graph[j-1].append(i-1)def dfs(v,c,s):    visited[v]=1    c[0]+=1    a.remove(v)    s.append((v+1))    if c[0]>3:        print(-1)        exit(0)    for i in graph[v]:        if visited[i]==0:            dfs(i,c,s)ans=[]for i in range(n):    if visited[i]==1 or visited[i]==-1:        continue    c=[0]    s=[]    if visited[i]==0:        dfs(i,c,s)    ans.append(s)ans_=[]for _ in range(n//3):    if ans:        x=ans.pop(0)        while len(x)<3:            if a:                x.append(a.pop(0)+1)            else:                print(-1)                exit(0)        ans_.append(x)    else:        if len(a)>=3:            h=[]            for i in range(3):                h.append(a.pop(0)+1)            ans_.append(h)        else:            print(-1)            exit(0)for i in ans_:    print(*i)
