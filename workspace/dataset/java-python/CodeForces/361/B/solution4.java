import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{    //odd:    //1 2 3 4 5 6 7 8 9  10 11    //1 3 4 5 6 7 8 9 10 11 2     public static void main(String[] args)    {        FastScanner input = new FastScanner();         int n, k;        n = input.nextInt();        k = input.nextInt();        int ans[] = new int[n + 1];        if (n == k) {            System.out.println("-1");        } else if (n % 2 != 0) {             for (int i = 1; i <= n; i++) {                if (k + 1 >= i) {                    ans[i] = i;                } else if (i == n) {                    ans[i] = k + 2;                } else {                    ans[i] = i + 1;                }            }            if (n - 2 == k) {                ans[1] = n;                ans[n] = 1;            }            for (int i = 1; i <= n; i++) {                System.out.print(ans[i] + " ");            }            System.out.println("");         } else {            for (int i = 1; i <= n; i++) {                if (i % 2 == 0) {                    ans[i] = i - 1;                } else {                    ans[i] = i + 1;                }            }             if(k%2!=0)            {                ans[1]= 1;                ans[2] =2;                            }            k/=2;            int i=3;            while(k-->0)            {                ans[i]=i;                ans[i+1]= i+1;                i+=2;            }            for (int j = 1; j <=n; j++) {                System.out.print(ans[j]+" ");            }            System.out.println("");        }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
