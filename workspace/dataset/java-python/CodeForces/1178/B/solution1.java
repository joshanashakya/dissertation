import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.StringTokenizer; public class CF1178_D2_B {    public static void main(String[] args) {        FastScanner scanner = new FastScanner();        char[] arr = scanner.next().toCharArray();        long a = 0, b = 0, c = 0;        for (int i = 0; i < arr.length; ++i) {            if (arr[i] == 'o') {                b += a;            } else if (i > 0 && arr[i-1] == 'v') {                a++;                c += b;            }        }        System.out.println(c);    }     static long count(String a) {        String b = "wow";        int m = a.length();        int n = b.length();         long lookup[][] = new long[m + 1][n + 1];         for (int i = 0; i <= n; ++i)            lookup[0][i] = 0;         for (int i = 0; i <= m; ++i)            lookup[i][0] = 1;         for (int i = 1; i <= m; i++) {            for (int j = 1; j <= n; j++) {                 if (a.charAt(i - 1) == b.charAt(j - 1))                    lookup[i][j] = lookup[i - 1][j - 1] +                            lookup[i - 1][j];                 else                    lookup[i][j] = lookup[i - 1][j];            }        }        return lookup[m][n];    }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }         int[] nextArray(int n) {            int[] arr = new int[n];            for (int i = 0; i < n; i++) {                arr[i] = nextInt();            }            return arr;        }         Integer[] nextArray(int n, boolean object) {            Integer[] arr = new Integer[n];            for (int i = 0; i < n; i++) {                arr[i] = nextInt();            }            return arr;        }    }}
