def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()from heapq import heappop , heappushfrom bisect import *from collections import deque , Counterfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#for tt in range(INT()):  s = STRING()g = s[::-1]v = 'CODEFORCES's2 = list(s)if s2[-1] != 'S' and  s[0] != 'C':    print('NO')    exit(0) if s.startswith('C') and s.endswith('ODEFORCES'):    print('YES')elif s.startswith('CO') and s.endswith('DEFORCES'):    print('YES')elif s.startswith('COD') and s.endswith('EFORCES'):    print('YES')elif s.startswith('CODE') and s.endswith('FORCES'):    print('YES')elif s.startswith('CODEF') and s.endswith('ORCES'):    print('YES')elif s.startswith('CODEFO') and s.endswith('RCES'):    print('YES')elif s.startswith('CODEFOR') and s.endswith('CES'):    print('YES')elif s.startswith('CODEFORC') and s.endswith('ES'):    print('YES')elif s.startswith('CODEFORCE') and s.endswith('S'):    print('YES')elif s.startswith('CODEFORCES') or g.startswith('SECROFEDOC'):    print('YES')else:    print('NO')      
