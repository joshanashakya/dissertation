/* * akshaygupta26 */import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.Random;import java.util.Arrays;import java.util.StringTokenizer; import java.util.ArrayList;import java.util.HashMap;import java.util.HashSet;import java.util.Collections; public class A {     public static void main(String[] args) 	{ 		FastReader sc=new FastReader(); 		StringBuffer ans=new StringBuffer();		int test=1;		while(test-->0)		{			int n=sc.nextInt();			long even=0;			long odd =0;			long mod =(long)(1e9+7);						long dp[]=new long[n+1];			long sum=0l;			for(int i=n;i>=1;i--) {				if(i == n) dp[i] = 1;				else if(i == n-1) dp[i]=2;				else {					dp[i] =1;					if(i%2 == 0) dp[i]=(dp[i]+odd)%mod;					else dp[i]=(dp[i]+even)%mod;				}								if(i%2 == 0) even=(even+dp[i])%mod;				else odd=(odd+dp[i])%mod;								sum=(sum+dp[i])%mod;			}						ans.append(sum+"\n");				}			    System.out.print(ans);	}         static final Random random=new Random();    	static void ruffleSort(int[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n), temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}		static void ruffleSort(long[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n);			long temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}		static class FastReader 	{ 		BufferedReader br; 		StringTokenizer st;  		public FastReader() 		{ 			br = new BufferedReader(new					InputStreamReader(System.in)); 		}  		String next() 		{ 			while (st == null || !st.hasMoreElements()) 			{ 				try				{ 					st = new StringTokenizer(br.readLine()); 				} 				catch (IOException e) 				{ 					e.printStackTrace(); 				} 			} 			return st.nextToken(); 		}  		int nextInt() 		{ 			return Integer.parseInt(next()); 		}  		long nextLong() 		{ 			return Long.parseLong(next()); 		}  		double nextDouble() 		{ 			return Double.parseDouble(next()); 		}  		String nextLine() 		{ 			String str = ""; 			try			{ 				str = br.readLine(); 			} 			catch (IOException e) 			{ 				e.printStackTrace(); 			} 			return str; 		} 	}   } 
