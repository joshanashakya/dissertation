import java.util.*; public class Example {    static int[] dp;     public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        //  int t=sc.next        int n =sc.nextInt();int[]  boys= new int[n];        for(int i=0;i<n;i++){            boys[i]=sc.nextInt();        }        int m = sc.nextInt();        int[] girls=new int[m];         for(int i=0;i<m;i++){            girls[i]=sc.nextInt();        }             Arrays.sort(boys);        Arrays.sort(girls);       int[][]  dp =new int[n][m];       for(int i=0;i<n;i++){           for(int j=0;j<m;j++){               dp[i][j]=-1;           }       }       int a=getAnswer(dp,n-1,m-1,boys,girls);        System.out.println(a);     }     private static int getAnswer(int[][] dp, int i, int i1, int[] boys, int[] girls) {        if(i<0 || i1<0)            return 0;        if(dp[i][i1]!=-1)            return dp[i][i1];         if(Math.abs(boys[i]-girls[i1])<=1){            return dp[i][i1]=getAnswer(dp,i-1,i1-1,boys,girls)+1;        }else        {            return dp[i][i1]=Math.max(getAnswer(dp,i-1,i1,boys,girls),getAnswer(dp,i,i1-1,boys,girls));        }      }      private static int lohN(int a) {        return (int)(Math.log(a) / Math.log(2));    }     private static int lowerBound(List<Integer> list, int left) {        int s = 0;        int e = list.size() - 1;        int ans = -1;        while (s <= e) {            int mid = (s + e) / 2;            if (list.get(mid) <= left) {                s = mid + 1;                ans = list.get(mid);            } else {                e = mid - 1;            }        }        return ans;    }     private static boolean fun(int mid, long area, long w) {        return (mid * w) >= area;     }     private static long Gcd(long a, long n) {        if (n == 0)            return a;        else            return Gcd(n, a % n);    }     private static boolean isPrime(int nextInt) {        for (int i = 2; i * i <= nextInt; i++) {            if (nextInt % i == 0)                return false;        }        return nextInt != 1;    }}
