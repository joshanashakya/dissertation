// Problem : A. Vanya and Table// Contest : Codeforces Round #308 (Div. 2)// URL : https://codeforces.com/contest/552/problem/A// Memory Limit : 256 MB// Time Limit : 2000 ms// Powered by CP Editor (https://github.com/cpeditor/cp-editor) import java.io.*;import java.util.*; public class a {    public static void main(String[] args) throws IOException {        FastReader scan = new FastReader();        //PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("taming.out")));        PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));        Task solver = new Task();        //int t = scan.nextInt();        int t = 1;        for(int i = 1; i <= t; i++) solver.solve(i, scan, out);        out.close();    }    static class Task {        public void solve(int testNumber, FastReader sc, PrintWriter pw) {        	int n = sc.nextInt();        	int[][] arr = new int[105][105];        	for(int i=0;i<n;i++){        		int x1 = sc.nextInt();        		int y1 = sc.nextInt();        		int x2 = sc.nextInt();        		int y2 = sc.nextInt();        		for(int j=x1;j<=x2;j++){        			for(int k=y1;k<=y2;k++){        				arr[j][k]++;        			}        		}        	}        	long sum =0;        	for(int i=0;i<105;i++){        		for(int j=0;j<105;j++){        			sum+=arr[i][j];        		}        	}        	pw.println(sum);        }     }    static class tup implements Comparable<tup>{        int a, b,c;        tup(){};        tup(int a, int b, int c){            this.a=a;            this.b=b;            this.c=c;        }         @Override        public int compareTo( tup o2) {            return o2.b!=b?Integer.compare(o2.b,b):Integer.compare(o2.a,a);        }    }    static void shuffle(long[] a) {        Random get = new Random();        for (int i = 0; i < a.length; i++) {            int r = get.nextInt(a.length);            long temp = a[i];            a[i] = a[r];            a[r] = temp;        }    }    static void shuffle(int[] a) {        Random get = new Random();        for (int i = 0; i < a.length; i++) {            int r = get.nextInt(a.length);            int temp = a[i];            a[i] = a[r];            a[r] = temp;        }    }    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         public FastReader(String s) throws FileNotFoundException {            br = new BufferedReader(new FileReader(new File(s)));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    } }
