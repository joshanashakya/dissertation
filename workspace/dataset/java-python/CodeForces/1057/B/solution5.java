import java.util.*;import java.io.*; public class CF1057B {	static FastReader in = new FastReader(); 	public static void main(String[] args) {		solve();	} 	static void solve() {		int n = in.nextInt();		int[] a = new int[n];		for(int i = 0; i < n; i++)		{			a[i] = in.nextInt();		}		int[] psums = new int[n + 1];		for(int i = 1; i < n + 1; i++)		{			psums[i] = psums[i - 1] + a[i - 1];		}		 		int longest = 0;		for(int i = 1; i < n + 1; i++)		{			for(int j = i; j < n + 1; j++)			{				if(psums[j] - psums[i - 1] > 100 * (j - (i - 1)))					longest = Math.max(longest,  (j - (i - 1)));			}		}				System.out.println(longest);			} 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	}}   
