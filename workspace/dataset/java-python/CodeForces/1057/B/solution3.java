import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStream;import java.io.PrintWriter;import java.util.StringTokenizer; public class DDoS {	public static void main(String[] args) {		InputStream inputStream = System.in;		OutputStream outputStream = System.out;		InputReader in = new InputReader(inputStream);		PrintWriter out = new PrintWriter(outputStream);		Task solver = new Task();		solver.solve(1, in, out);		out.close();	} 	static class Task {		public void solve(int testNumber, InputReader in, PrintWriter out) {			int n = in.nextInt();			int ar[] = new int[n];			int pre[] = new int[n + 1];			for (int i = 0; i < n; ++i) {				ar[i] = in.nextInt();			}			for (int i = 1; i <= n; ++i) {				pre[i] = pre[i - 1] + ar[i - 1];			}			int resp = 0;			for (int i = 1; i <= n; ++i) {				for (int j = i; j <= n; ++j) {					if (pre[j] - pre[i - 1] > 100 * (j - i + 1)) {						resp = max(resp, j - i + 1);					}				}			}			out.println(resp);		} 		private int max(int resp, int i) {			return resp > i ? resp : i;		}	} 	static class InputReader {		public BufferedReader reader;		public StringTokenizer tokenizer; 		public InputReader(InputStream stream) {			reader = new BufferedReader(new InputStreamReader(stream), 32768);			tokenizer = null;		} 		public String next() {			while (tokenizer == null || !tokenizer.hasMoreTokens()) {				try {					tokenizer = new StringTokenizer(reader.readLine());				} catch (IOException e) {					throw new RuntimeException(e);				}			}			return tokenizer.nextToken();		} 		public int nextInt() {			return Integer.parseInt(next());		} 	}}
