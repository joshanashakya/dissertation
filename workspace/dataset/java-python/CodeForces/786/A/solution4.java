import java.util.Scanner; public class Main {	private static final Scanner in = new Scanner(System.in);    public static void main(String[] args) {		int n = in.nextInt();		int k1 = in.nextInt();		int[] s1 = genNums(k1);				int k2 = in.nextInt();		int[] s2 = genNums(k2); 		int[] result1 = new int[n];		int[] result2 = new int[n]; 		for (int i = 0; i < k1; i++) {			result1[n - s1[i]] = 1;		}		for (int i = 0; i < k2; i++) {			result2[n - s2[i]] = 1;		}				result2[0] = -1;		result1[0] = -1; 		boolean changed = true;		while (changed) {			changed = false;			for (int i = n - 1; i > 0; i--) { 				changed = stateChanged(n, k1, s1, result1, result2, changed, i); 				changed = stateChanged(n, k2, s2, result2, result1, changed, i);			}		} 		printRound(n, result1);		System.out.println();		printRound(n, result2);	}        //im lazy	static void printRound(int n, int[] res1) {		for (int i = 1; i < n; i++) {			if (res1[i] == 1) System.out.print("Win ");			else if (res1[i] == -1) System.out.print("Lose ");			else System.out.print("Loop ");		}	} 	static boolean stateChanged(final int n,final int k1,final int[] s1,final int[] res1,final int[] res2, boolean changed, int i) {		if (res1[i] == 0) {			boolean winEverythig = true;			boolean oneLoss = false;			for (int j = 0; j < k1; j++) {				if (res2[(i + s1[j]) % n] == -1) {					oneLoss = true;					break;				}				if (res2[(i + s1[j]) % n] != 1) {					winEverythig = false;				}			}			if (oneLoss) {				res1[i] = 1;				changed = true;			} else if (winEverythig) {				res1[i] = -1;				changed = true;			}		}		return changed;	}            //stop doing next int lots of times	static int[] genNums(int n) {		int[] ar = new int[n];		for (int i = 0; i < n; i++) {			ar[i] = in.nextInt();		}		return ar;	} }
