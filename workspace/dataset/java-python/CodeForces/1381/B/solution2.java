import java.io.BufferedOutputStream;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.List;import java.util.StringTokenizer; /** * Created by darshan on 26/3/21. */public class B1381 {    public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));        StringTokenizer st;        for (int t = Integer.parseInt(br.readLine()); t-- > 0; ) {            int n = Integer.parseInt(br.readLine());            int l = n << 1;            st = new StringTokenizer(br.readLine());            int[] p = new int[l];            for (int i = 0; i < l; i++) {                p[i] = Integer.parseInt(st.nextToken());            }            int end = l;            boolean[] visited = new boolean[l + 1];            List<Integer> sequences = new ArrayList<>();            for (int i = l; i > 0; i--) {                if (visited[i]) {                    continue;                }                for (int j = 0; j < l; j++) {                    if (p[j] == i) {                        sequences.add(end - j);                        int c = j;                        while (c < end) {                            visited[p[c]] = true;                            c++;                        }                        end = j;                        break;                    }                }            }             boolean flag = false;            l = sequences.size();            boolean[][] subsetSum = new boolean[l + 2][n];            subsetSum[0][0] = true;            for (int i = 0; i < l; i++) {                int length = sequences.get(i);                for (int sum = 0; sum < n; sum++) {                    if (subsetSum[i][sum]) {                        if (sum + length > n) {                            continue;                        }                        if (sum + length == n) {                            flag = true;                            i = l;                            break;                        }                        subsetSum[i + 1][sum + length] = true;                    }                }                for (int sum = 0; sum < n; sum++) {                    subsetSum[i + 1][sum] |= subsetSum[i][sum];                }            }            out.println(flag ? "YES" : "NO");        }        out.close();    }}
