import java.io.*;import java.math.BigInteger;import java.util.*;public class Codeforces {    public static void main(String[] args) throws UnsupportedEncodingException, IOException, Exception {        StringBuilder out = new StringBuilder();        StringTokenizer tk;        Reader.init(System.in);        Scanner sc = new Scanner(System.in);        long a = Reader.nextLong();        long b = Reader.nextLong();        int fact1=1;        int fact2=1;         if(a==b){             System.out.println(1);         }       else if(a%10==0 && b%10==0){            System.out.println(0);        }       else if(b-a>=10){             System.out.println(0);         }        else{           a%=10;           b%=10;            for (int i =1; i <=a ; i++) {               fact1*=i;            }            for (int i = 1; i <=b; i++) {                fact2 *=i;            }             System.out.println((fact2/fact1)%10);         }     }} class Reader {     static BufferedReader reader;    static StringTokenizer tokenizer;     static void init(InputStream input) throws UnsupportedEncodingException {        reader = new BufferedReader(                new InputStreamReader(input, "UTF-8"));        tokenizer = new StringTokenizer("");    }     static String next() throws IOException {        while (!tokenizer.hasMoreTokens()) {            //TODO add check for eof if necessary            tokenizer = new StringTokenizer(                    reader.readLine());        }        return tokenizer.nextToken();    }     static String nextLine() throws IOException {        return reader.readLine();    }     static int nextInt() throws IOException {        return Integer.parseInt(next());    }     static double nextDouble() throws IOException {        return Double.parseDouble(next());    }     static long nextLong() throws IOException {        return Long.parseLong(next());    } }
