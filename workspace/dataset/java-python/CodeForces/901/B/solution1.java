import java.util.*;import java.io.*; public class PolyGCD {	static BufferedReader br;	static StringTokenizer tokenizer; 	public static void main(String[] args) throws Exception {		br = new BufferedReader(new InputStreamReader(System.in));		int n = nextInt();		Poly a = new Poly();		Poly b = new Poly();		Poly t = new Poly();		a.coeff.add(1);		b.coeff.add(0);		for(int i = 0; i < n; i++) {			t = a.duplicate();			a.next(b);			b = t;		}				System.out.println(a.coeff.size() - 1);		System.out.println(a);		System.out.println(b.coeff.size() - 1);		System.out.println(b);	} 	public static String next() throws IOException {		while (tokenizer == null || !tokenizer.hasMoreTokens()) {			String line = br.readLine();			if (line == null)				throw new IOException();			tokenizer = new StringTokenizer(line);		}		return tokenizer.nextToken();	} 	public static int nextInt() throws IOException {		return Integer.parseInt(next());	} 	public static long nextLong() throws IOException {		return Long.parseLong(next());	} 	public static double nextDouble() throws IOException {		return Double.parseDouble(next());	}}class Poly {	ArrayList<Integer> coeff;	public Poly() {		coeff = new ArrayList<Integer>();	}	public Poly(ArrayList<Integer> coeff) {		this.coeff = coeff;	}	public void next(Poly r) {		coeff.add(0, 0);		boolean flag = true;		for(int i = 0; i < r.coeff.size(); i++) {			if(coeff.get(i) + r.coeff.get(i) >= 2 ||coeff.get(i) + r.coeff.get(i) <= -2) {				flag = false;				break;			}		}		if(flag) {			for(int i = 0; i < r.coeff.size(); i++)				coeff.set(i, coeff.get(i) + r.coeff.get(i));			return;		}		for(int i = 0; i < r.coeff.size(); i++)			coeff.set(i, coeff.get(i) - r.coeff.get(i));	}	public Poly duplicate() {		ArrayList<Integer> c = new ArrayList<Integer>();		for(int i = 0; i < coeff.size(); i++)			c.add(coeff.get(i));		return new Poly(c);	}	@Override	public String toString() {		String s = "";		for(int i = 0; i < coeff.size(); i++)			s += coeff.get(i) + " ";		s = s.substring(0, Math.max(0, s.length() - 1));		return s;	}}
