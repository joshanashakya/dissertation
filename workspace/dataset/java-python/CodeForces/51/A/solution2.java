import java.io.*;import java.util.*;import java.util.stream.IntStream; public class CodeForces {    public static void main(String[] args) {        FastIO io = FastIO.create();         int n = io.nextInt();         int piles = 0;        Set<String> seen = new HashSet<>();         for (int i = 0; i < n; i++) {            String first = io.nextLine();            String second = io.nextLine();             if (i < n - 1) {                io.nextLine();            }             String complete = "" + first.charAt(0) + first.charAt(1) + second.charAt(1) + second.charAt(0);             if (seen.contains(complete)) {                continue;            }             String full = complete + complete;             for (int j = 0; j < full.length() - 3; j++) {                seen.add(full.substring(j, j + 4));            }             piles++;        }         io.println(piles);         io.close();    }     static class FastIO extends PrintWriter {        BufferedReader br;        StringTokenizer st;         public FastIO(InputStream is, OutputStream os) {            super(new BufferedOutputStream(os));            br = new BufferedReader(new InputStreamReader(is));        }         public static FastIO create() {            return new FastIO(System.in, System.out);        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextToken() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         String nextLine() {            try {                return br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return "";        }    }}
