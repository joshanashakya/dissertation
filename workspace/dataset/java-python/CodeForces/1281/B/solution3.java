import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.Arrays;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author Tarek */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BAzamonWebServices solver = new BAzamonWebServices();        solver.solve(1, in, out);        out.close();    }     static class BAzamonWebServices {        public void solve(int testNumber, InputReader in, PrintWriter out) {            int t = in.nextInt();            while (t-- > 0) {                String a = in.next();                String b = in.next();                out.println(islexsmaller(a, b));             }        }         public static String swapping(String str, int i, int j) {            char[] tempArr = str.toCharArray();            char temp = tempArr[i];            tempArr[i] = tempArr[j];            tempArr[j] = temp;            return String.valueOf(tempArr);        }         static String islexsmaller(String a, String b) {            String ans = a;            if (a.compareTo(b) < 0) {                return a;            }            String temp = a;            char p[] = temp.toCharArray();            Arrays.sort(p);            temp = String.valueOf(p);            int index = -1;            for (int i = 0; i < a.length(); i++) {                if (a.charAt(i) != temp.charAt(i)) {                    index = i;                    break;                }            }            if (index == -1) {                return "---";            }            int j = 0;            for (int i = 0; i < a.length(); i++) {                if (a.charAt(i) == temp.charAt(index))                    j = i;            }            a = swapping(a, index, j);            if (a.compareTo(b) < 0) {                return a;            } else {                return "---";            }        }     }     static class InputReader {        public BufferedReader reader;        public StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
