def run2():    numberOfBits = int(input())    line = input().split(" ")    bits = [int(element) for element in line]    scores = [1 - 2 * element for element in bits]  # maps every 0 and 1 to its score (0, 1) -> (1, -1)     try:        startIndex = scores.index(1)  # index of first 0 (score is 1)    except ValueError:        print(len(bits) - 1)  # if all are 1s just flip the first one        return     additive_scores = calc_additive_scores(scores[startIndex:])    initial_ones = len(list(filter(lambda bit: bit == 1, bits)))    max_gain = max(additive_scores)    print(initial_ones + max_gain)  def calc_additive_scores(scores: list) -> list:    if len(scores) == 0:        return []     result = [scores[0]]    for i in range(1, len(scores)):        result.append(max(0, result[i - 1] + scores[i]))    return result  run2()
