import java.util.*;import java.io.*; public class Main {	public static void main(String[] args) throws IOException {		Scanner sc = new Scanner(System.in);		PrintWriter out = new PrintWriter(System.out);		int[] dx = new int[] {0,0,1,-1};		int[] dy = new int[] {1,-1,0,0};		int[] arr = new int[6];		for(int i=0;i<6;i++)			arr[i]=sc.nextInt();		if(isRight(arr))			out.println("RIGHT");		else {			boolean almost = false;			for(int i=0;i<6;i++) {				arr[i]+=1;				almost|= isRight(arr);				arr[i]-=2;				almost|= isRight(arr);				arr[i]+=1;			}			out.println(almost?"ALMOST":"NEITHER");		}		out.close();	}	static boolean isRight(int[] arr) {		int[] dist = new int[3];		dist[0] = (arr[0] - arr[2])*(arr[0] - arr[2]) + (arr[1] - arr[3])*(arr[1] - arr[3]);		dist[1] = (arr[0] - arr[4])*(arr[0] - arr[4]) + (arr[1] - arr[5])*(arr[1] - arr[5]);		dist[2] = (arr[2] - arr[4])*(arr[2] - arr[4]) + (arr[3] - arr[5])*(arr[3] - arr[5]);		Arrays.parallelSort(dist);		if(dist[0]==0 || dist[1]== 0 || dist[2] == 0)			return false;		return dist[0] + dist[1] == dist[2];	}	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		} 		public Scanner(String s) throws FileNotFoundException {			br = new BufferedReader(new FileReader(s));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public int[] nextIntArray(int n) throws IOException {			int[] ans = new int[n];			for (int i = 0; i < n; i++)				ans[i] = nextInt();			return ans;		} 		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public String nextLine() throws IOException {			return br.readLine();		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public boolean ready() throws IOException {			return br.ready();		} 	}}
