import sys,math,itertoolsfrom collections import Counter,deque,defaultdictfrom bisect import bisect_left,bisect_right from heapq import heappop,heappush,heapify, nlargestfrom copy import deepcopymod = 10**9+7INF = float('inf')def inp(): return int(sys.stdin.readline())def inpl(): return list(map(int, sys.stdin.readline().split()))def inpl_1(): return list(map(lambda x:int(x)-1, sys.stdin.readline().split())) MM = 10**10n,m = inpl()a = inpl()c = inpl()q = [] #(key, ind)for i in range(n):    heappush(q,(c[i]*MM+i,i)) for i in range(m):    t,d = inpl(); t -= 1    res = 0    if not q:         print(res); continue    if a[t] < d:        res += a[t]*c[t]        d -= a[t]        a[t] = 0        while q:            key,ind = heappop(q)            if a[ind] == 0: continue            if a[ind] < d:                res += a[ind]*c[ind]                d -= a[ind]                a[ind] = 0            else:                res += d*c[ind]                a[ind] -= d                d = 0                if a[ind] > 0:                    heappush(q,(key,ind))                break    else:        res += d*c[t]        a[t] -= d        d = 0    if d > 0: print(0)    else: print(res)
