import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.PrintWriter;import java.util.Arrays;import java.util.List;import java.util.Scanner;import java.util.stream.Collectors;public class _p001106A {    static public void main(final String[] args) throws IOException {        p001106A._main(args);    }//begin p001106A.javastatic private class p001106A extends Solver{public p001106A(){nameIn="p001106A.in";singleTest=true;}int n;String[]s;@Override protected void solve(){int res=0;for(int i=1;i<n-1;i++){for(int j=1;j<n-1;j++){if(s[i].charAt(j)=='X'&&s[i-1].charAt(j-1)=='X'&&s[i-1].charAt(j+1)=='X'&&s[i+1].charAt(j-1)=='X'&&s[i+1].charAt(j+1)=='X'){res++;}}}pw.println(res);}@Override public void readInput()throws IOException{n=sc.nextInt();if(sc.hasNextLine()){sc.nextLine();}s=new String[n];for(int _is=0;_is<n;_is++){s[_is]=sc.nextLine().trim();}}static public void _main(String[]args)throws IOException{new p001106A().run();}}//end p001106A.java//begin net/leksi/contest/Solver.javastatic private abstract class Solver{protected String nameIn=null;protected StringnameOut=null;protected boolean singleTest=false;protected boolean preprocessDebug=false;protected boolean doNotPreprocess=false;protected Scanner sc=null;protectedPrintWriter pw=null;private void process()throws IOException{if(!singleTest){intt=lineToIntArray()[0];while(t-->0){readInput();solve();}}else{readInput();solve();}}abstract protected void readInput()throws IOException;abstract protected voidsolve()throws IOException;protected int[]lineToIntArray()throws IOException{returnArrays.stream(sc.nextLine().trim().split("\\s+")).mapToInt(Integer::valueOf).toArray();}protected long[]lineToLongArray()throws IOException{return Arrays.stream(sc.nextLine().trim().split("\\s+")).mapToLong(Long::valueOf).toArray();}protected String intArrayToString(final int[]a){return Arrays.stream(a).mapToObj(Integer::toString).collect(Collectors.joining(" "));}protected String longArrayToString(final long[]a){return Arrays.stream(a).mapToObj(Long::toString).collect(Collectors.joining(" "));}protected List<Long>longArrayToList(final long[]a){return Arrays.stream(a).mapToObj(Long::valueOf).collect(Collectors.toList());}protected List<Integer>intArrayToList(final int[]a){returnArrays.stream(a).mapToObj(Integer::valueOf).collect(Collectors.toList());}protectedList<Long>intArrayToLongList(final int[]a){return Arrays.stream(a).mapToObj(Long::valueOf).collect(Collectors.toList());}protected void run()throws IOException{try{try(FileInputStream fis=new FileInputStream(nameIn);PrintWriter pw0=select_output();){sc=new Scanner(fis);pw=pw0;process();}}catch(IOException ex){try(PrintWriterpw0=select_output();){sc=new Scanner(System.in);pw=pw0;process();}}}private PrintWriterselect_output()throws FileNotFoundException{if(nameOut !=null){return new PrintWriter(nameOut);}return new PrintWriter(System.out);}}//end net/leksi/contest/Solver.java}
