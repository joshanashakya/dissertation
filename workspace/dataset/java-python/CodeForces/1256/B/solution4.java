import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*; public class Main{     public static int smallestIndex(ArrayList<Integer> a, int start)    {        int min = Integer.MAX_VALUE;        for (int i = start; i < a.size(); i++) {            min = Math.min(min, a.get(i));        }        return a.indexOf(min);     }     public static void main(String[] args) throws IOException    {         FastScanner input = new FastScanner();        int tc = input.nextInt();        while (tc-- > 0) {            int n = input.nextInt();            ArrayList<Integer> a = new ArrayList<>();            for (int i = 0; i < n; i++) {                int value = input.nextInt();                a.add(value);             }            int start = 0;             while (start < a.size()) {                int i = smallestIndex(a, start);                                int small = a.get(i);                if(a.get(i)==a.get(start))                {                    start++;                    continue;                }                a.remove(a.get(i));                a.add(start, small);//            System.out.println(a);                start = i;                                if (start == n - 1) {                    break;                }            }            for (Integer integer : a) {                System.out.print(integer+" ");            }            System.out.println("");        }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
