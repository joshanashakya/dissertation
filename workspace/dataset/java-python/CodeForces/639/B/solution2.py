import math,sys,bisect,heapq,osfrom collections import defaultdict,Counter,dequefrom itertools import groupby,accumulatefrom functools import lru_cache#sys.setrecursionlimit(200000000)int1 = lambda x: int(x) - 1def input(): return sys.stdin.readline().rstrip('\r\n')#input = iter(sys.stdin.buffer.read().decode().splitlines()).__next__aj = lambda: list(map(int, input().split()))def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]#MOD = 1000000000 + 7def Y(c):  print(["NO","YES"][c])def y(c):  print(["no","yes"][c])def Yy(c):  print(["No","Yes"][c]) def solve():	n,d,h = aj()	if d > 2*h:		print(-1)	elif d == h == 1:		if n > 2:			print(-1)		else:			print(1,2)	else:		p = 2;n-=1		for i in range(h):			print(i+1,i+2)			p+=1			n-= 1		left = d - h;prev =1		for i in range(left):			print(prev,p)			prev = p			p += 1			n-=1		if h == d:			prev = 2		else:			prev = 1		while n:			print(prev,p)			p+=1			n-=1   try:	#os.system("online_judge.py")	sys.stdin = open('input.txt', 'r') 	sys.stdout = open('output.txt', 'w')except:	pass solve()
