import java.io.*;import java.math.BigInteger;import java.util.*;import java.util.StringTokenizer; public class Main1 {     public static void main(String[] args) throws IOException {        FastReader fr = new FastReader();        PrintWriter pw = new PrintWriter(System.out);         int N = fr.nextInt(), P = 1000000 - fr.nextInt();         List<City> cities = new ArrayList<>();        for (int i = 0; i < N; ++i) {            double a =fr.nextDouble(), b = fr.nextDouble();            int c = fr.nextInt();            cities.add(new City(Math.sqrt(a * a + b * b), c));        }         cities.sort((c1, c2) -> Double.compare(c1.r, c2.r));         for (City c : cities) {            P -= c.count;            if (P <= 0) {                pw.println(c.r);                pw.close();                return;            }        }         pw.println(-1);         pw.close();    }     static class City {        double r;        int count;         public City(double radius, int cnt) {            this.r = radius;            this.count = cnt;        }    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            st = null;            return str;        }    } } 
