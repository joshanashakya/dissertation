import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.Comparator;import java.util.StringTokenizer; public class Laptops {	static FastReader sc = new FastReader(); 	static void input(int a[]) {		for (int i = 0; i < a.length; i++) {			a[i] = sc.nextInt();		}	} 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	static class pair {		int a, b; 		pair(int a, int b) {			this.a = a;			this.b = b;		}	} 	public static void main(String[] args) { 		int n = sc.nextInt();		ArrayList<pair> a = new ArrayList<pair>();		for (int i = 0; i < n; i++) {			int az = sc.nextInt(), bz = sc.nextInt();			pair p = new pair(az, bz);			a.add(p); 		}//		System.out.println(a);		Comparator<pair> c = new Comparator<pair>() {			@Override			public int compare(pair p1, pair p2) {				return p1.a - p2.a;			}		};		Collections.sort(a, c);		boolean ans = false;		for (int i = 1; i < n; i++) { 			if (a.get(i).b < a.get(i - 1).b) {				ans = true;				break;			} 		}		String anss = (ans) ? "Happy Alex" : "Poor Alex";		System.out.println(anss);	} }
