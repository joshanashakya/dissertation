import java.io.*;import java.util.*;import java.lang.Math;public class Solution {    public static int beautifulFunction(int N){        HashSet<Integer> hs = new HashSet<Integer>() ;         HashSet<Integer> inserted = new HashSet<Integer>();        String temp = String.valueOf(N);        if(temp.length()==1)        {           return 9;            }        else         {           inserted.add(N) ;            boolean flag = false;             hs.add(N);            if(N%10==0)            {                flag = true ;                 N = N + 10 ;             }            else            {                flag = false;              }            while(true)            {                if(N%10!=0)                {                    if((N+1)%10!=0)                    {                        inserted.add(N+1);                         N++ ;                     }                     else                    {                         String  temp1 = String.valueOf(N+1);                         String temp2 = temp1.replaceFirst("^0*", "").replaceFirst("0*$", "");                         int alsoFind = Integer.valueOf(temp2) ;                                                  inserted.add(alsoFind);                         N = alsoFind ;                          if(hs.contains(alsoFind))                         {                            if(flag)                                 return inserted.size()+9;                            else                                return inserted.size();                         }                         hs.add(alsoFind);                    }                }                else                {                         String  temp1 = String.valueOf(N);                         String temp2 = temp1.replaceFirst("^0*", "").replaceFirst("0*$", "");                         int alsoFind = Integer.valueOf(temp2) ;                          inserted.add(alsoFind);                         N = alsoFind ;                                              if(hs.contains(alsoFind))                         {                           if(flag)                                 return inserted.size()+9;                            else                                return inserted.size();                         }                         hs.add(alsoFind);                }            }                               }                  }Â     public static void main(String[] args){        Scanner scan = new Scanner(System.in);        int N;        N=scan.nextInt();        int result;        result = beautifulFunction(N);        System.out.print(result);        return ;    }}
