import java.util.*;  import java.io.*;     public class Main {		public static void main(String[] args) throws IOException 	{ 								BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));		StringTokenizer s = new StringTokenizer(br.readLine());		int n=Integer.parseInt(s.nextToken());		int k=Integer.parseInt(s.nextToken());				s = new StringTokenizer(br.readLine());		int ar[]=new int[n];		int last[]=new int[n+1];		int next[]=new int[n+1];		for(int i=0;i<ar.length;i++) {			ar[i]=Integer.parseInt(s.nextToken());		}		Arrays.fill(last, 400005);		for(int i=n-1;i>=0;i--) {			next[i]=last[ar[i]];			last[ar[i]]=i;		} 		Set<Integer>hm=new HashSet<>();		int ans=0;				TreeSet<Pair>ts=new TreeSet<>((a,b)-> b.j-a.j);				for(int i=0;i<ar.length;i++) {				if(hm.contains(ar[i])) {					ts.remove(new Pair(ar[i],i));					ts.add(new Pair(ar[i],next[i]));									}else {					if(ts.size()>=k){						Pair p=ts.first();						int val=p.i;						ts.remove(p);						hm.remove(val);				}					hm.add(ar[i]);					ans++;					ts.add(new Pair(ar[i],next[i]));			}		}		pw.println(ans);				pw.close();			}}class Pair{	int i;	int j;	Pair(int i,int j){		this.i=i;		this.j=j;	}	}
