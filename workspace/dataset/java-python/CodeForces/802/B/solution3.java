import java.util.*;import java.io.*;  public class Task {     static BufferedReader s1;static BufferedWriter out;static String read() throws IOException{String line="";while(line.length()==0){line=s1.readLine();continue;}return line;}static int int_v (String s1){return Integer.parseInt(s1);}static long long_v(String s1){return Long.parseLong(s1);}static int[] int_arr() throws IOException{String[] a=read().split(" ");int[] b=new int[a.length];for(int i=0;i<a.length;i++){b[i]=int_v(a[i]);}return b;}static long[] long_arr() throws IOException{String[] a=read().split(" ");long[] b=new long[a.length];for(int i=0;i<a.length;i++){b[i]=long_v(a[i]);}return b;}static void assign(){s1=new BufferedReader(new InputStreamReader(System.in));out=new BufferedWriter(new OutputStreamWriter(System.out));}static int[] f;static List<Integer>[] map;static int cmp(int a, int b){    return map[b].get(f[b])-map[a].get(f[a]);}  public static void main(String args[]) throws  IOException {        assign();        int[] n1=int_arr();        int n=n1[0],k=n1[1],res=0;        int[] b=int_arr();        f=new int[n+1];        map=new ArrayList[n+1];        for(int i=0;i<=n;i++){map[i]=new ArrayList<>();}        for(int i=0;i<n;i++){            map[b[i]].add(i);        }        for(int i=0;i<n;i++){            map[b[i]].add(1000000);        }        boolean[] have=new boolean[n+1];        TreeSet<Integer> s1=new TreeSet<>((a,b1)-> cmp(a,b1));        for(int i=0;i<n;i++){             if(have[b[i]]){                s1.remove(b[i]);            }            else{                res++;                if(s1.size()==k){have[s1.pollFirst()]=false;}            }                       f[b[i]]++;            s1.add(b[i]);            have[b[i]]=true;        }Â         out.write(res+"\n");             out.flush();    }           }
