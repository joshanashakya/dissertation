import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{    static int colors;    static int min = Integer.MAX_VALUE;    public static int largestDigit(int a[])    {                for (int i = 9; i >=1; i--) {            if(a[i]<=(min+colors))            {                colors-=(a[i]-min);                return i;            }        }        return 0;    }     public static void main(String[] args)    {         FastScanner input = new FastScanner();        String x  = input.next();        String z = input.next();        String y = "";        for (int i = 0; i < x.length(); i++) {            if(x.charAt(i)<z.charAt(i))            {                System.out.println("-1");                return;            }            else            {                y+=(z.charAt(i)+"");            }        }        System.out.println(y);                            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
