//  _     _  ___  _  _         __  _     __   ___  _      __   //// \ \  /| || |_)| || |\ |    ( (`| |_| / /\ | |_)| |\/| / /\  ////  \_\/ |_||_|  |_||_| \|    _)_)|_| |/_/--\|_| \|_|  |/_/--\ ////															   ///////////////////////////////////////////////////////////////////  import java.util.*;import java.io.*; public class cp {     public static void main(String args[]) {     	Scanner sc = new Scanner();           int n = sc.nextInt();           String s = sc.nextLine();           if(n%2!=0)          {            out.println("-1");          }else{             int ar[] = new int[n];             ar[0] = s.charAt(0) == ')' ? -1 : 1;            int as=ar[0];             for(int i=1;i<n;i++)            {                if(s.charAt(i)=='(')                    {as++;                        ar[i] = 1+ar[i-1];                    }                else {as--;                    ar[i]=ar[i-1]-1;                }            }             //   )  )  (  (  (  )  )  (            //   0  1  2  3  4  5  6  7            //   -1 -2 -1 0  1  0 -1  0             int prev = -1;            int ans = 0;                        for(int i=0;i<n;i++)            {                if(ar[i]==0 && ar[i-1]<0)                {                    ans+=i-prev;                    prev = i;                }                if(ar[i]==0 && ar[i-1]>0)                {                    prev = i;                }            }             if(ar[n-1]!=0)                ans+=Math.abs(ar[n-1]);             if(as!=0)                ans=-1;            out.println(ans);         }          out.close();    }     // )  (  ) (  ) (//     -1 0 -1 0 -1 0     static	PrintWriter out=new PrintWriter(System.out);	static class Scanner {		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st=new StringTokenizer("");		String nextLine() {			while (!st.hasMoreTokens())				try {                                         st=new StringTokenizer(br.readLine());				                                               } catch (IOException e) {}			return st.nextToken();		}		int nextInt() {			return Integer.parseInt(nextLine());		}		float nextFloat() {			return Float.parseFloat(nextLine());		}		double nextDouble() {			return Double.parseDouble(nextLine());		}		long nextLong() {			return Long.parseLong(nextLine());		}	} } 
