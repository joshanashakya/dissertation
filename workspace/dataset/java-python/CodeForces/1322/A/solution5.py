import bisectimport collectionsimport copyimport functoolsimport heapqimport itertoolsimport mathimport randomimport reimport sysimport timeimport stringfrom typing import *import operatorsys.setrecursionlimit(99999)  def check(s):    k = 0    for i in range(len(s)):        if s[i] == "(":            k += 1        else:            k -= 1        if k < 0:            return False    return True  def solve(s):    if check(s):        return 0    if s[0] == "(" and s[-1] == ")":        return solve(s[1:len(s) - 1])    return len(s)  n = int(input())s = input()if n & 1 or s.count("(") != n // 2:    print("-1")else:    k = 0    st = 0    ans = 0    for i in range(len(s)):        if s[i] == "(":            k += 1        else:            k -= 1        if k == 0:            ans += solve(s[st:i + 1])            st = i + 1    print(ans)
