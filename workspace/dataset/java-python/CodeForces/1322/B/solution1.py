import sys, mathimport io, os#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readlinefrom bisect import bisect_left as bl, bisect_right as br, insortfrom heapq import heapify, heappush, heappopfrom collections import defaultdict as dd, deque, Counter#from itertools import permutations,combinationsdef data(): return sys.stdin.readline().strip()def mdata(): return list(map(int, data().split()))def outl(var) : sys.stdout.write('\n'.join(map(str, var))+'\n')def out(var) : sys.stdout.write(str(var)+'\n')#from decimal import Decimal#from fractions import Fraction#sys.setrecursionlimit(100000)INF = float('inf')mod=10**9+7  n=int(data())a=mdata()ans=0for i in range(26):    M=[]    for j in a:        M.append(j & ((1<<(i+1))-1))    M.sort()    j1=j2=j3=n-1    cnt=0    for j in range(n):        while j1>=0 and M[j]+M[j1]>=(1<<i):            j1-=1        while j2>=0 and M[j]+M[j2]>=(1<<(i+1)):            j2-=1        while j3>=0 and M[j]+M[j3]>=((1<<i) + (1<<(i+1))):            j3-=1        cnt+=max(j,j2)-max(j,j1)+n-max(j,j3)-1    if cnt%2==1:        ans+=1<<iout(ans)
