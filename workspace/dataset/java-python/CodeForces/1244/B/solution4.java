import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=input.nextInt();        while(T-->0)        {            int n=input.nextInt();            String s=input.next();            int l=-1;            for(int i=0;i<n;i++)            {                if(s.charAt(i)=='1')                {                    l=i;                    break;                }            }            if(l==-1)            {                out.println(n);            }            else            {                int r=-1;                for(int i=n-1;i>=0;i--)                {                    if(s.charAt(i)=='1')                    {                        r=i;                        break;                    }                }                int d1=r+1;                int d2=n-l;                out.println(Math.max(d1*2,d2*2));            }        }        out.close();    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {             return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
