import java.io.*;import java.math.*;import java.security.*;import java.text.*;import java.util.*;import java.util.concurrent.*;import java.util.regex.*;import java.util.Arrays;import java.util.ArrayList;import java.lang.Math;    public class project {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }                   String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }          static int binarySearch(long a[],long k,int l,int h){        int min = Integer.MAX_VALUE;        while(l<=h){         int mid = (l+h)/2;         if(a[mid]==k) return mid;         else if(a[mid]>k) h=mid-1;         else if(a[mid]<k) l =mid+1;    }                return min;    }        static int gcd(int a, int b)     {         // Everything divides 0          if (a == 0)           return b;         if (b == 0)           return a;                // base case         if (a == b)             return a;                // a is greater         if (a > b)             return gcd(a-b, b);         return gcd(a, b-a);     }          public static void main(String[] args) throws Exception     {                 FastReader sc = new FastReader();        int i,j,k;        int n = sc.nextInt();        if(n==0) System.out.print("O"+"-"+"|"+"-"+"O"+"O"+"O"+"O");        while(n!=0){            int r = n%10;            if(r<5){                System.out.print("O"+"-"+"|");                for(i=1;i<=r;i++) System.out.print("O");                System.out.print("-");                int d = 5-r-1;                for(i=1;i<=d;i++) System.out.print("O");            }             else if(r>5){                System.out.print("-"+"O"+"|");                int f = r-5;                for(i=1;i<=f;i++) System.out.print("O");                System.out.print("-");                int d = 5-f-1;                for(i=1;i<=d;i++) System.out.print("O");            }             else if(r==5)            System.out.print("-"+"O"+"|"+"-"+"O"+"O"+"O"+"O");            n=n/10;            System.out.println();        }    } } // System.out.println();                  
