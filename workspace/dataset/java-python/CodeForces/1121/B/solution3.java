import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.StringTokenizer; public class Mike_Child {    static class FastReader {        BufferedReader br;        StringTokenizer st;        public FastReader(){            br = new BufferedReader(new InputStreamReader(System.in));        }        String next(){            while(st==null || !st.hasMoreElements()){                try{                    st = new StringTokenizer(br.readLine());                }catch (IOException e){                    e.printStackTrace();                }            }            return st.nextToken();        }        int nextInt(){            return Integer.parseInt(next());        }        long nextLong(){            return Long.parseLong(next());        }        String nextLine(){            String str = "";            try            {                str = br.readLine();            }catch (IOException e){                e.printStackTrace();            }            return str;        }        double nextDouble(){            return Double.parseDouble(next());        }    }    public static void main(String[] args) {        FastReader in = new FastReader();        int n = in.nextInt();        long arr[] = new long[n];        for(int i = 0; i < n; i++){            arr[i] = in.nextLong();        }        HashMap<Long,Integer> hs = new HashMap<>();        int max = 1;        for(int i = 0; i < n; i++){            for(int j = i + 1; j < n; j++){                long s = arr[i] + arr[j];                if(hs.containsKey(s)){                    int get = hs.get(s);                    ++get;                    max = Math.max(max,get);                    hs.put(s,get);                }else{                    hs.put(s,1);                }            }        }         System.out.println(max);    }}
