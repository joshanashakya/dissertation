	// _________________________RATHOD_____________________________________________________________import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.Scanner; import java.util.StringTokenizer; import java.util.*;  public class Main {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }     public static void main(String[] args)     {         FastReader sc=new FastReader();         int n=sc.nextInt();        int m=sc.nextInt();        int k=sc.nextInt();        int ar[]=new int[n+1];        for(int i=1;i<=n;i++)        ar[i]=sc.nextInt();        int arsch[]=new int[n+1];        int max[]=new int[m+1];        for(int i=1;i<=n;i++)        {            int v=sc.nextInt();            arsch[i]=v;            if(ar[i]>max[v])            max[v]=ar[i];        }        int sol=0;        for(int i=0;i<k;i++)        {            int index=sc.nextInt();            int s=arsch[index];            if(max[s]==ar[index])            continue;            sol++;                    }        System.out.println(sol);    }                       } 
