import java.io.*;import java.util.*;import static java.lang.Math.*; public class Task {    static Reader reader;    static PrintWriter out;     public static void solve() throws IOException {        int n = reader.nextInt();        int[] arr = new int[n];        for (int i = 0; i < n; i++) arr[i] = reader.nextInt();        int sum = 0;        for (int i = 0; i < n; i++) sum += arr[i];        if (sum != 0) {            out.println("YES");            out.println(1);            out.println(1 + " " + n);        } else {            int i = 0;            while (i < n && arr[i] == 0) i++;            if (i == n) {                out.println("NO");            } else {                i++;                out.println("YES");                out.println(2);                out.println(1 + " " + i);                out.println(i + 1 + " " + n);            }        }    }     public static void main(String[] args) throws IOException {        reader = new Reader(System.in);        out = new PrintWriter(System.out);         solve();         reader.close();        out.close();    }} class Math {    public static long gcd(long a, long b) {        if (b == 0) return a;        return gcd(b, a % b);    }     public static long lcm(long a, long b) {        return a * b / gcd(a, b);    }} class Reader implements Closeable {    BufferedReader bufferedReader;    StringTokenizer stringTokenizer;     public Reader(InputStream source) throws IOException {        bufferedReader = new BufferedReader(new InputStreamReader(source));        stringTokenizer = new StringTokenizer("");    }     String next() throws IOException {        while (!stringTokenizer.hasMoreTokens()) {            stringTokenizer = new StringTokenizer(bufferedReader.readLine());        }         return stringTokenizer.nextToken();    }     int nextInt() throws IOException {        return Integer.parseInt(next());    }     long nextLong() throws IOException {        return Long.parseLong(next());    }     @Override    public void close() throws IOException {        bufferedReader.close();    }}
