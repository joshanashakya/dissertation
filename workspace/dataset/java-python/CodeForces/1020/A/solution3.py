import functoolsimport timefrom collections import Counter def timer(func):    @functools.wraps(func)    def wrapper(*args, **kwargs):        stime = time.perf_counter()        res = func(*args, **kwargs)        elapsed = time.perf_counter() - stime        print(f"{func.__name__} in {elapsed:.4f} secs")        return res    return wrapper class solver:    # @timer    def __init__(self):        pass     def __call__(self):        n, h, a, b, k = map(int, input().strip().split())        for _ in range(k):            ta, fa, tb, fb = map(int, input().strip().split())            if ta == tb:                ans = abs(fa - fb)            else:                if fa < fb:                    fa, fb = fb, fa                    ta, tb = tb, ta                if fa >= b:                    if fb <= b:                        ans = abs(ta - tb) + abs(fa - fb)                    else:                        ans = abs(ta - tb) + abs(fa - b) + abs(fb - b)                elif a <= fa and fa < b:                    ans = abs(ta - tb) + abs(fa - fb)                else:                    ans = abs(ta - tb) + abs(fa - a) + abs(fb - a)            print(ans)                      solver()()
