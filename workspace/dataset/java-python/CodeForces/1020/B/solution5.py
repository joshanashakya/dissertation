import functoolsimport timefrom collections import Counter def timer(func):    @functools.wraps(func)    def wrapper(*args, **kwargs):        stime = time.perf_counter()        res = func(*args, **kwargs)        elapsed = time.perf_counter() - stime        print(f"{func.__name__} in {elapsed:.4f} secs")        return res    return wrapper class solver:    # @timer    def __init__(self):        pass     def __call__(self):        n = int(input())        nex = list(map(int, input().strip().split()))        nex = [e - 1 for e in nex]         ans = [0] * n        for i in range(n):            cnt = [0] * n            j = i            while True:                cnt[j] += 1                if cnt[j] >= 2:                    ans[i] = j + 1                    break                j = nex[j]        print(' '.join(map(str, ans)))             solver()()
