import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.ArrayList;import java.util.StringTokenizer; public class CF108A {    public static void main(String[] args) {        FastReader input = new FastReader();        PrintWriter pw = new PrintWriter(System.out);         String s = input.nextLine();         String s1 = s.substring(0,2);        String s2 = s.substring(3,5);         int hr = Integer.parseInt(s1);        int min = Integer.parseInt(s2);         char[] check = new char[4];         int temp1 = hr;        int temp2 = min;         while (true){            min++;            if(min == 60){                min = 0;                hr++;            }            if(hr == 24){                hr = 0;            }            String left = Integer.toString(hr);            String right = Integer.toString(min);            if(left.length() == 1){                check[0] = '0';                check[1] = left.charAt(0);            }            else {                check[0] = left.charAt(0);                check[1] = left.charAt(1);            }            if(right.length() == 1){                check[2] = '0';                check[3] = right.charAt(0);            }            else{                check[2] = right.charAt(0);                check[3] = right.charAt(1);            }            if(check[0] == check[3] && check[1] == check[2]){                break;            }        }         pw.print(check[0]);        pw.print(check[1]);        pw.print(":");        pw.print(check[2]);        pw.println(check[3]);         pw.flush();        pw.close();    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }} 	  	      	 	  	  		 	  			 			
