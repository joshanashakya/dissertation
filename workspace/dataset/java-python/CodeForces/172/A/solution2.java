import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*; public class Main{     public static boolean check(String Number, String Divi)    {        for (int i = 0; i <= 9; i++) {            String ch = i + "";            if (Number.contains(ch) && Divi.contains(ch)) {                return true;            }        }        return false;    }     public static void main(String[] args) throws IOException    {        FastScanner input = new FastScanner();        int n = input.nextInt();        String a[] = new String[n];        for (int i = 0; i < n; i++) {            a[i] = input.next();                        }        for (int i = 0; i <a[0].length(); i++) {            for (int j = 0; j <n-1; j++) {            if(a[j].charAt(i)!=a[j+1].charAt(i))            {                System.out.println(i);                return;            }                   }        }             }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         int[] readArray(int n)        {            int[] a = new int[n];            for (int i = 0; i < n; i++) {                a[i] = nextInt();            }            return a;        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }    } }
