import java.io.*;import java.util.*;  public class Main {     private static StringBuilder data = new StringBuilder();    private final static FastReader in = new FastReader();     public static void main(String[] args) {        int t = in.inT(), n, p = 0;        StringBuilder sb = new StringBuilder();        StringBuilder out = new StringBuilder();        sb.append("989");        for (int i = 2; i < 200000; i++) {            sb.append(p);            p = (p + 1) % 10;        }        for (int i = 0; i < t; i++) {            n = in.inT();            out.append(sb.subSequence(0, n)).append('\n');        }        System.out.print(out.toString());    }     static void fileOut(String s) {        File out = new File("output.txt");        try {            FileWriter fw = new FileWriter(out);            fw.write(s);            fw.flush();            fw.close();        } catch (IOException e) {            e.printStackTrace();        }    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         public FastReader(String path) {            try {                br = new BufferedReader(new                        InputStreamReader(new FileInputStream(path)));            } catch (FileNotFoundException e) {                e.printStackTrace();            }        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int inT() {            return Integer.parseInt(next());        }         long lonG() {            return Long.parseLong(next());        }         float floaT() {            return Float.parseFloat(next());        }         double doublE() {            return Double.parseDouble(next());        }          String line() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    } }
