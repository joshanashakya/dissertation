// Don't place your source in a packageimport java.util.*;import java.lang.*;import java.io.*;import java.math.*;      // Please name your class Mainpublic class Main {    static Scanner in = new Scanner(System.in);    public static void main (String[] args) throws java.lang.Exception {        PrintWriter out = new PrintWriter(System.out);         int T=Int();        for(int t=0;t<T;t++){            int n=Int();            int A[]=new int[n];            for(int i=0;i<n;i++){                A[i]=Int();            }             Solution sol=new Solution();            sol.solution(A);         }        out.flush();    }     public static long Long(){        return in.nextLong();    }    public static int Int(){        return in.nextInt();    }    public static String Str(){        return in.next();    }}  class Solution{    Set<Integer>set=new HashSet<>();    public void solution(int A[]){        if(A.length<3){            System.out.println(0);            return;        }        int res=Integer.MAX_VALUE;        int n=A.length;        int cnt=0;           for(int i=1;i<A.length-1;i++){            if((A[i]>A[i-1]&&A[i]>A[i+1])||(A[i]<A[i-1]&&A[i]<A[i+1])){                set.add(i);                cnt++;            }        }         res=Math.max(res,cnt);         if(set.contains(1)||set.contains(n-2)){            res=Math.min(res,cnt-1);//can change the first/last point to reduce one        }         //change every point        for(int i=1;i<A.length-1;i++){            int old=A[i];             A[i]=A[i-1];            res=Math.min(res,cal(A,i,cnt));             A[i]=A[i+1];            res=Math.min(res,cal(A,i,cnt));             A[i]=A[i-1]+1;            res=Math.min(res,cal(A,i,cnt));             A[i]=A[i-1]-1;            res=Math.min(res,cal(A,i,cnt));             A[i]=A[i+1]+1;            res=Math.min(res,cal(A,i,cnt));             A[i]=A[i+1]-1;            res=Math.min(res,cal(A,i,cnt));             A[i]=old;//reset        }        System.out.println(res);    }     public int cal(int A[],int i,int cnt){        if(set.contains(i-1)){            cnt--;        }        if(set.contains(i+1)){            cnt--;        }        if(set.contains(i)){            cnt--;        }          if((A[i]>A[i-1]&&A[i]>A[i+1])||(A[i]<A[i-1]&&A[i]<A[i+1])){            cnt++;        }         if((i-1>0)&&((A[i-1]>A[i-2]&&A[i-1]>A[i])||(A[i-1]<A[i-2]&&A[i-1]<A[i]))){            cnt++;        }         if((i+1<A.length-1)&&((A[i+1]>A[i+2]&&A[i+1]>A[i])||(A[i+1]<A[i+2]&&A[i+1]<A[i]))){            cnt++;        }         return cnt;    } }
