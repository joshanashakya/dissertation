import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Decoding {	public static void main(String[] args) {		FastReader fs = new FastReader();		int n = fs.nextInt();		String word = fs.nextLine();		if(n == 1) {			System.out.println(word);			return;		}		char[] newWord  = new char[n];		boolean left = n % 2 != 0;		int startPoint = left? (int) Math.ceil(n/2) : (n/2) - 1;		int leftPointer = startPoint - 1;		int rightPointer = startPoint + 1;		newWord[startPoint] = word.charAt(0);		for(int i = 1; i < n; i++) {			if(left && leftPointer >= 0) {				newWord[leftPointer--] = word.charAt(i);				left = !left;			} else {				if(!left && rightPointer < n) {					newWord[rightPointer++] = word.charAt(i); 					left  = !left;				}			}		}		System.out.println(new String(newWord));	} 	static class FastReader {         BufferedReader br;         StringTokenizer st;           public FastReader()  {             br = new BufferedReader(new            		InputStreamReader(System.in));         }          String next() {             while (st == null || !st.hasMoreElements()) {                 try {                     st = new StringTokenizer(br.readLine());                 } catch (IOException  e) {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt() {             return Integer.parseInt(next());         }           long nextLong() {             return Long.parseLong(next());         }           double nextDouble()  {             return Double.parseDouble(next());         }           String nextLine()  {             String str = "";         try {             str = br.readLine();         } catch (IOException e) {             e.printStackTrace();         }         return str;     }	}}
