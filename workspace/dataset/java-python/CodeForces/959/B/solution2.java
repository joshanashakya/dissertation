import java.io.*;import java.util.*; public class Solution{        public static void main(String[] args) throws Exception{        int[] nkm = in.readA();        int n = nkm[0], k = nkm[1], m = nkm[2];        String[] words = in.readLine().split("\\s+");        int[] A = in.readA();        int[] ufds = new int[n];        Arrays.fill(ufds, -1);        Map<String, Integer> map = new HashMap<>();        for(int i = 0; i < n; i++)            map.put(words[i], i);                for(int i = 0; i < k; i++){            int[] group = in.readA();            int parent = group[1]-1;            for(int j = 2; j < group.length; j++){                union(parent, group[j]-1, A, ufds);            }        }         String[] message = in.readLine().split("\\s+");        long ans = 0;        for(int i = 0; i < m; i++){            ans += A[find(map.get(message[i]), ufds)];        }        System.out.println(ans);     }     public static int find(int x, int[] ufds){        if(ufds[x] == -1)   return x;        else return ufds[x] = find(ufds[x], ufds);    }    public static void union(int u, int v, int[] A,int[] ufds){        int x = find(u, ufds), y = find(v, ufds);        if(A[x] < A[y])            ufds[y] = x;        else             ufds[x] = y;    }     static Inputer in;    static {        in = new Inputer();    }     static class Inputer{        BufferedReader br;        Inputer(){            try{                br = new BufferedReader(new InputStreamReader(System.in));            }            catch(Exception e){}        }        public int readInt() throws Exception{            return Integer.parseInt(readLine());        }        public long readLong() throws Exception{            return Long.parseLong(readLine());        }        public int[] readA(String delim) throws Exception{            String[] s = readLine().split(delim);            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public int[] readA() throws Exception{            String[] s = readLine().split("\\s+");            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public long[] readLA() throws Exception{            String[] s = readLine().split("\\s+");            long[] A = new long[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Long.parseLong(s[i]);            return A;        }        public String readLine() throws Exception{            return br.readLine();        }        public int[] copyA(int[] A){            int[] B = new int[A.length];            for(int i= 0 ; i < A.length; i++)                B[i] = A[i];            return B;        }    }    static void shuffle(int[] A){        int n = A.length;        Random rand = new Random();        for(int t = 0; t < A.length; t++){            int i1 = rand.nextInt(n);            int i2 = rand.nextInt(n);            int tmp = A[i1];            A[i1] = A[i2];            A[i2] = tmp;        }    }}
