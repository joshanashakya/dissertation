import java.util.*;import java.io.*;import java.util.Arrays;import java.util.Map.Entry; public class codeforces {		public static void main(String[] args) throws Exception {		int t=1;		while(t-->0) {			int n=sc.nextInt();			TreeSet<Integer>ts=new TreeSet<Integer>();						for (int i = 0; i < n; i++) {				int x=sc.nextInt();				if(x!=0) {					ts.add(x);				}			}			pw.println(ts.size());			pw.println();		}			pw.close();	}		public static long fac(int n) {		if(n==0)return 1;		return n*fac(n-1);	}	public static long summ(long x) {		long sum=0;		while(x!=0) {			sum+=x%10;			x=x/10;		}		return sum;					}		public static void sort2darray(Integer[][]a){		Arrays.sort(a,Comparator.<Integer[]>comparingInt(x -> x[0]).thenComparingInt(x -> x[1])); 	}	static class Scanner {		StringTokenizer st;		BufferedReader br;		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		}		public Scanner(String file) throws FileNotFoundException {			br = new BufferedReader(new FileReader(file));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		}				public int nextInt() throws IOException {			return Integer.parseInt(next());		}		public long nextLong() throws IOException {			return Long.parseLong(next());		}		public String nextLine() throws IOException {			return br.readLine();		}		public double nextDouble() throws IOException {			return Double.parseDouble(next());		}		public boolean ready() throws IOException {			return br.ready();		}		public int[] nextArrint(int size) throws IOException {			int[] a=new int[size];			for (int i = 0; i < a.length; i++) {				a[i]=sc.nextInt();			}			return a;		}		public long[] nextArrlong(int size) throws IOException {			long[] a=new long[size];			for (int i = 0; i < a.length; i++) {				a[i]=sc.nextLong();			}			return a;		}		public int[][] next2dArrint(int rows,int columns) throws IOException{			int[][]a=new int[rows][columns];			for (int i = 0; i < rows; i++) {				for (int j = 0; j < columns; j++) {					a[i][j]=sc.nextInt();				}			}			return a;		}		public long[][] next2dArrlong(int rows,int columns) throws IOException{			long[][]a=new long[rows][columns];			for (int i = 0; i < rows; i++) {				for (int j = 0; j < columns; j++) {					a[i][j]=sc.nextLong();				}			}			return a;		}	}	static Scanner sc=new Scanner(System.in);	static PrintWriter pw=new PrintWriter(System.out);} 
