import java.io.*;import java.util.*;Â public class Main {    public static void main(String []args) throws Exception {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));                String[] sss = br.readLine().split("\\s+");        int n = Integer.parseInt(sss[0]);        int m = Integer.parseInt(sss[1]);        int k = Integer.parseInt(sss[2]);                char[][] map = new char[n][m];        int free = 0;        for(int i = 0; i < n; i++) {            map[i] = br.readLine().toCharArray();            for(int j = 0; j < m; j++) {                if(map[i][j] == '.') {                    free++;                }            }        }                boolean[][] v = new boolean[n][m];        outer:        for(int i = 0; i < n; i++) {            for(int j = 0; j < m; j++) {                if(map[i][j] == '.') {                    recur(i, j, free - k, v, map);                    break outer;                }            }        }                for(int i = 0; i < n; i++) {            for(int j = 0; j < m; j++) {                if(map[i][j] == '.' && !v[i][j]) {                    map[i][j] = 'X';                }            }        }                for(char[] c : map)            System.out.println(new String(c));    }        static int totalCount = 0;    static void recur(int r, int c, int limit, boolean[][] v, char[][] m) {        if(totalCount == limit) return;        if(r < 0 || c < 0 || r >= v.length || c >= v[0].length) return;        if(v[r][c] || m[r][c] != '.') return;        totalCount++;        v[r][c] = true;        recur(r - 1, c, limit, v, m);        recur(r + 1, c, limit, v, m);        recur(r, c - 1, limit, v, m);        recur(r, c + 1, limit, v, m);    }}
