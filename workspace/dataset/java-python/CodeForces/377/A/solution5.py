ROW,COL,k=map(int,input().split())arr = []for i in range(ROW):    arr.append(list(input()))visited = [[False for i in range(COL)] for j in range(ROW)] def isSafe(row,col,visited):    if row>=0 and row<ROW\        and col >= 0 and col < COL and arr[row][col]!='#' and not visited[row][col]:            return True    return False def bfs(row,col,n):    visited[row][col]=True    rowNbr = [1,-1,0,0]    colNbr = [0,0,1,-1]    cnt=1    queue = [[row,col]]    while queue:        row,col = queue.pop()        for i in range(4):            if isSafe(row+rowNbr[i],col+colNbr[i],visited) and cnt<n-k:                cnt+=1                visited[row+rowNbr[i]][col+colNbr[i]]=True                queue.append([row+rowNbr[i],col+colNbr[i]]) n=0for row in range(ROW):    for col in range(COL):        if arr[row][col]=='.':            n+=1flag=Falsefor row in range(ROW):    if flag:        break    for col in range(COL):        if arr[row][col]=='.':            bfs(row,col,n)            flag=True            breakfor row in range(ROW):    for col in range(COL):        if not visited[row][col] and arr[row][col]!='#':            arr[row][col]='X'for i in (arr):    for j in i:        print(j,end='')    print()
