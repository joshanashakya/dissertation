import java.util.*;import java.io.*; public class Main {     private static final FastIO fastIO = new FastIO();    private static final String yes = "YES";    private static final String no = "NO";     public static void main(String[] args) {        long n = fastIO.nextLong();        long ans = 0;         for(long i = 2; i * i <= n; i++){            if(n % i == 0) {                ans = i;                break;            }        }         if(ans == 0)            ans = n;         fastIO.append((n - ans) / 2 + 1);        fastIO.printAll();    }     public static class Node {     }     private static class FastIO {         private final BufferedReader in;        private final StringBuilder out;        private final char LINE_BREAK = '\n';         private StringTokenizer tokens;         public FastIO() {            in = new BufferedReader(new InputStreamReader(System.in));            out = new StringBuilder();        }         public String next() {            while (tokens == null || !tokens.hasMoreElements()) {                try {                    tokens = new StringTokenizer(in.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }             return tokens.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public long nextLong() {            return Long.parseLong(next());        }         public double nextDouble() {            return Double.parseDouble(next());        }         public String nextLine() {            String str = "";             try {                str = in.readLine();            } catch (IOException e) {                e.printStackTrace();            }             return str;        }         public FastIO append(Object... objects){            for(Object o: objects)                out.append(o);            return this;        }         public FastIO appendln(Object... objects){            return append(objects).append(LINE_BREAK);        }         public void printAll(){            System.out.println(out.toString());        }    }}
