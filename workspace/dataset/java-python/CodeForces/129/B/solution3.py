# link: https://codeforces.com/contest/129/problem/Bfrom collections import defaultdictÂ class Graph:    def __init__(self):        self.graph = defaultdict(list)    def insert(self,u,v):        self.graph[u].append(v)        self.graph[v].append(u)    def solve(self):        groups = 0        while True:            array = []            for key in self.graph:                if len(self.graph[key]) == 1:                    array.append(key)            if len(array) == 0:                break                    for i in range(len(array)):                num = array[i]                if len(self.graph[num]):                    first = self.graph[num][0]                    del self.graph[num]                    self.graph[first].remove(num)            if len(array):                groups += 1        return (groups)      if __name__ == "__main__":    n,m = map(int, input().split())    g = Graph()    while m:        u,v = map(int, input().split())        g.insert(u,v)        m -= 1    result = g.solve()    print(result)    
