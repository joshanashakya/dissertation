import java.lang.*;import java.util.*;import java.util.stream.Collectors;import java.io.*;Â public class absolute {	static int[] I = new int[] {0,-1,0,1};	static int[] J = new int[] {-1,0,1,0};	static int[][] mat ;	public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner sc = new Scanner(System.in);		int T = sc.nextInt();		while(T-->0)		{			int n = sc.nextInt();			int m = sc.nextInt();			mat = new int[n][m];			for(int i=0;i<n;i++) 			{				for(int j=0;j<m;j++)					mat[i][j]=sc.nextInt();			}			if(processMat())			{				System.out.println("YES");				for(int i=0;i<n;i++)				{					for(int j=0;j<m;j++)					{						System.out.print(mat[i][j]+" ");					}					System.out.println();				}			}			else			{				System.out.println("NO");			}					}		}		public static boolean processMat()	{		int n =mat.length,m=mat[0].length;		for(int i=0;i<n;i++)		{			for(int j=0;j<m;j++) 			{				int alnb = allowedNB(i,j);				//System.out.println(i+" "+j+" "+mat[i][j]+" "+alnb);				if(mat[i][j]>alnb)return false;				else mat[i][j]=alnb;			}		}		return true;	}	public static int allowedNB(int x, int y)	{		int num=0;		for(int k=0;k<4;k++)		{			int i = I[k]+x;			int j = J[k]+y;			if(i<0 || i>=mat.length || j<0 || j>=mat[0].length)continue;			else num++;		}		return num;	}}
