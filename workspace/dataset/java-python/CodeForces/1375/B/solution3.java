  import java.io.*;import java.math.BigDecimal;import java.math.BigInteger;import java.util.*;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;  public class Main1 {      public static void main(String[] args) {          FastScanner in = new FastScanner();        PrintWriter out = new PrintWriter(System.out);          int t = in.nextInt() ;   outer :     while ( t-- > 0) {        int n = in.nextInt();       int m = in.nextInt();       int A[][] = new int[n][m];        for (int i = 0; i < n; i++)           for (int j = 0; j < m; j++)               A[i][j] = in.nextInt();            if (A[0][0] >2 || A[0][m-1] >2 || A[n-1][m-1] >2 || A[n-1][0] >2){               System.out.println("NO");               continue outer;       }        A[0][0] =2 ;  A[0][m-1] =2 ; A[n-1][m-1] =2  ; A[n-1][0] =2 ;        for (int i = 1; i < m-1; i++) {           if (A[0][i] > 3 || A[n - 1][i] > 3) {               System.out.println("NO");               continue outer;           }           A[0][i] = 3;           A[n - 1][i] = 3;       }        for (int i = 1; i < n - 1; i++) {           if (A[i][0] > 3 || A[i][m - 1] > 3) {               System.out.println("NO");               continue outer;           }           A[i][0] = 3;           A[i][m - 1] = 3;       }         for (int i = 1; i < n - 1; i++) {            for (int j = 1; j < m - 1; j++) {               if (A[i][j] > 4) {                   System.out.println("NO");                   continue outer;               }               A[i][j] = 4 ;           }       }        System.out.println("YES");       for (int i = 0; i <n ; i++) {           for (int j = 0; j <m ; j++) {               System.out.print(A[i][j] + " ");           }           System.out.println();       }          }            out.flush();        out.close();    }      static class FastScanner {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next() {            while (!st.hasMoreTokens())                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }          long nextLong() {            return Long.parseLong(next());        }    }  }        
