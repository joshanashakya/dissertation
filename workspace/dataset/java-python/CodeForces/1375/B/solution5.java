//package Random; import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.lang.reflect.Array;import java.util.*; public class yo {     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }     static int gcd(int a, int b) {        if (b == 0)            return a;        return gcd(b, a % b);    }     public static void main(String[] args) {        FastReader sc = new FastReader();        int t = sc.nextInt();         while(t-->0) {             int n = sc.nextInt();            int m = sc.nextInt();             long[][] grid = new long[n][m];             for(int i=0;i<n;i++){                for(int j=0;j<m;j++){                    grid[i][j]=sc.nextLong();                }            }             boolean flag = false;             for(int i=0;i<n;i++){                for(int j=0;j<m;j++){                     int neighbors =0;                    if(i-1>=0 && i-1<n)neighbors++;                    if(i+1>=0 && i+1<n)neighbors++;                    if(j-1>=0 && j-1<m)neighbors++;                    if(j+1>=0 && j+1<m)neighbors++;                     if(grid[i][j]>neighbors){                        flag=true;                        break;                    }                    else{                        grid[i][j]=neighbors;                    }                }            }             if(flag){                System.out.println("NO");            }            else{                 StringBuilder ans = new StringBuilder("YES \n");                 for(int i=0;i<n;i++){                    for(int j=0;j<m;j++){                        ans.append(grid[i][j]+" ");                    }                    ans.append('\n');                }                 System.out.print(ans);            }           }     }  }
