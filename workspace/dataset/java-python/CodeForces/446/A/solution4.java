import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }      void run(FastScanner in, PrintWriter out) {        int N = in.nextInt();         int[] a = new int[N+1];         for (int i = 0; i < N; i++) a[i] = in.nextInt();         int[] leftDecreasing = new int[N];        int[] rightIncreasing = new int[N];         int l=N, r=N-1;        for (int i = N-1; i >= 0; i--) {            if (i >= l) {                leftDecreasing[i] = i-l+1;            } else {                leftDecreasing[i] = 1;                while (i-leftDecreasing[i] >= 0                        && a[i-leftDecreasing[i]] < a[i-leftDecreasing[i]+1]) {                    leftDecreasing[i]++;                }                l = i-leftDecreasing[i]+1;                r = i;            }        }         l = 0; r = -1;        for (int i = 0; i < N; i++) {            if (i <= r) {                rightIncreasing[i] = r-i+1;            } else {                rightIncreasing[i] = 1;                while (i+rightIncreasing[i] < N                        && a[i+rightIncreasing[i]] > a[i+rightIncreasing[i]-1]) {                    rightIncreasing[i]++;                }                l = i;                r = (i+rightIncreasing[i]-1);            }        }         int max = 0;        for (int i = 0; i < N; i++) {             max = Math.max(max, rightIncreasing[i]);            max = Math.max(max, leftDecreasing[i]);            // a[i] is middle            if (i != N-1) {                max = Math.max(max, 1+rightIncreasing[i+1]);            }            if (i != 0) {                max = Math.max(max, 1+leftDecreasing[i-1]);            }            if (i != N-1 && i != 0 && a[i-1]+1 < a[i+1]) {                max = Math.max(max, 1+leftDecreasing[i-1]+rightIncreasing[i+1]);            }        }         out.println(max);     }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
