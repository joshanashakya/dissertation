import sys,os,ioimport math,bisect,operatorinf,mod = float('inf'),10**9+7# sys.setrecursionlimit(10 ** 6)from itertools import groupby,accumulatefrom heapq import heapify,heappop,heappushfrom collections import deque,Counter,defaultdictinput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__Neo = lambda : list(map(int,input().split()))# test, = Neo()n, = Neo()A = Neo()B = [1]*nC = [1]*nif n == 1:    print(1)    exit()for i in range(1,n):    if A[i] > A[i-1]:        B[i] += B[i-1]for i in range(n-2,-1,-1):    if A[i] < A[i+1]:        C[i] += C[i+1] Ans = max(B[-1],B[-2],C[0],C[1])+1Ans = min(Ans,n)# print(B,C)for i in range(1,n-1):    if A[i] <= A[i-1]:        if A[i+1] > A[i-1]+1:             Ans = max(Ans,B[i-1]+C[i+1]+1)        else:            Ans = max(Ans,B[i-1]+1)    elif A[i] >= A[i+1]:        if A[i+1] > A[i-1]+1:             Ans = max(Ans,B[i-1]+C[i+1]+1)        else:            Ans = max(Ans,C[i+1]+1)    print(Ans)                
