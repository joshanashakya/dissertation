import java.util.*;import java.io.*;import java.lang.*;public class Main{        static class FastReader{                BufferedReader br;                StringTokenizer st;                public FastReader()throws IOException{                  br=new BufferedReader(new InputStreamReader(System.in));                }                public FastReader(String s)throws IOException{                  br=new BufferedReader(new FileReader(new File(s)));                }                String next(){                  while(st==null || !st.hasMoreElements()){                    try{                       st=new StringTokenizer(br.readLine());                    }                    catch(Exception e){                      e.printStackTrace();                    }                                    }                  return st.nextToken();                }                String nextLine(){                String str="";                  try{                    str=br.readLine();                  }                 catch(Exception e){                   e.printStackTrace();                 }                return str;                }               int nextInt(){                 return Integer.parseInt(next());                }              long nextLong(){               return Long.parseLong(next());             }             double nextDouble(){               return Double.parseDouble(next());             }         }       static class Bus implements Comparator<Bus> {        int start, end;         Bus(int start, int end) {            this.start = start;            this.end = end;        }         Bus() {}         @Override        public int compare(Bus bus1, Bus bus2) {            return Integer.compare(bus1.end, bus2.end);        }    }    public static void main(String[] args) throws IOException {        FastReader in=new FastReader();        int n = in.nextInt();        int m = in.nextInt();        Bus[] arr = new Bus[m];        for (int i=0; i<m; i++) {                      int s = in.nextInt();            int t = in.nextInt();            arr[i] = new Bus(s, t);        }        Arrays.sort(arr, new Bus());        HashMap<Integer, ArrayList<Integer>> d = new HashMap<>();        boolean has = false;        ArrayList<Integer> busstops = new ArrayList<>();        busstops.add(0);        for (int i=1; i<=m; i++) {            int x = arr[i-1].end;            if (x==n) has = true;            if (d.get(x)==null) {                busstops.add(x);                d.put(x, new ArrayList<>());            }            ArrayList<Integer> list = d.get(x);            list.add(arr[i-1].start);            d.put(x, list);        }        if (!has) {            System.out.println(0);            return;        }          int len = d.size();        int[] res = new int[len+1];        int[] sum = new int[len+1];        res[0] = 1; sum[0] = 1;        int i = 1;        for (int x:busstops) {            if (x==0) continue;            int summa = 0;            for (int y:d.get(x)) {                int pos = Collections.binarySearch(busstops, y);                if (pos<0) pos = (pos*(-1))-1;                if (busstops.get(pos)>=y) pos-=1;                if (pos==-1) summa+=sum[i-1];                else summa+=sum[i-1]-sum[pos];                if (summa<0) summa+=1000000007;                summa%=1000000007;            }            res[i] = summa;            sum[i] = (sum[i-1]+res[i])%1000000007;            i++;        }        System.out.println(res[len]);    }   }     
