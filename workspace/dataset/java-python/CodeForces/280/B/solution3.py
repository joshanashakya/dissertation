import java.io.*;import java.util.*; public class c{    public static void print(String str,long val){        System.out.println(str+"  "+val);    }     public long gcd(long a, long b) {        if (b==0L) return a;        return gcd(b,a%b);    }     public static void debug(long[][] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.println(Arrays.toString(arr[i]));        }    }    public static void debug(int[][] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.println(Arrays.toString(arr[i]));        }    }    public static void debug(String[] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.println(arr[i]);        }    }     public static void print(int[] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.print(arr[i]+" ");        }        System.out.print('\n');    }     public static void print(Object[] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.print(arr[i]+" ");        }        System.out.print('\n');    }    public static void print(String[] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.print(arr[i]+" ");        }        System.out.print('\n');    }    public static void print(long[] arr){        int len = arr.length;        for(int i=0;i<len;i++){            System.out.print(arr[i]+" ");        }        System.out.print('\n');    }     static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }        public FastReader(String path) throws FileNotFoundException {            br = new BufferedReader(new FileReader(path));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException  e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }     static void sort(long[] arr){        Long[] temp = new Long[arr.length];        for(int i=0;i<arr.length;i++){            temp[i] = arr[i];        }        Arrays.sort(temp);        for(int i=0;i<arr.length;i++){            arr[i] = temp[i];        }    }      public static void main(String[] args)    {        FastReader s=new FastReader();        int n = s.nextInt();        int[] arr = new int[n];        for(int i=0;i<n;i++){            arr[i] = s.nextInt();        }        ArrayDeque<Integer> dq = new ArrayDeque<>();        int ans = arr[0]^arr[1];        for(int i=0;i<n;i++){            while (!dq.isEmpty() && dq.peekLast()<arr[i]){                int k = dq.pollLast();                ans = Math.max(ans,k^arr[i]);            }            if(!dq.isEmpty()){                ans = Math.max(arr[i]^dq.peekLast(),ans);            }            dq.addLast(arr[i]);        }        System.out.println(ans);     }       //    OutputStream out = new BufferedOutputStream( System.out );//        for(int i=1;i<n;i++){//              out.write((arr[i]+" ").getBytes());//         }//        out.flush();//  long start_time = System.currentTimeMillis();//  long end_time = System.currentTimeMillis();//  System.out.println((end_time - start_time) + "ms");   }
