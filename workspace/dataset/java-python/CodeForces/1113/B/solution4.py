def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()):  #CODE def solve(n):    d = []    for i in range(1 , int(sqrt(n)) + 1):        if n % i == 0 :            if n // i == i :                d.append(i)            else:                d += [i , n // i]    return d n = INT()arr = LIST() if len(set(arr)) == 1 :    print(sum(arr))    exit(0) sm = sum(arr)res = smmn = min(arr)indx = arr.index(mn)#print(indx) for i in range(n):    if indx == i :        continue    else:        x = solve(arr[i])        for j in x :            cur = sm - mn - arr[i]            cur += arr[i] // j            cur += mn * j            res = min(res , cur) print(res)  
