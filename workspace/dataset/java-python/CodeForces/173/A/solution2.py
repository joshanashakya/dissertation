import sys rounds=int(sys.stdin.readline().strip('\n')) def Solution():    global rounds    s_A=list(map(str, sys.stdin.readline().rstrip('\n')))    s_B=list(map(str, sys.stdin.readline().rstrip('\n')))     if rounds<=len(s_A):        s_A=s_A[0:rounds]        if rounds<len(s_B):            s_B=s_B[0:rounds]            return Prepare(s_A, s_B)         return Prepare(s_A, s_B)    elif rounds<len(s_B):        s_B=s_B[0:rounds]        if rounds<len(s_B):            s_A=s_A[0:rounds]            return Prepare(s_A, s_B)        return Prepare(s_A, s_B)    else:        return Prepare(s_A, s_B)  def Prepare(s_A, s_B):    if len(s_A)==len(s_B):        return Compare(s_A, s_B)     else:        if len(s_A)>len(s_B):            greater = len(s_A)        else:            greater = len(s_B)         while(True):            if((greater % len(s_A) == 0) and (greater % len(s_B) == 0)):                lcm = greater                break            greater += 1        Alcm=lcm//len(s_A)        Blcm=lcm//len(s_B)        return Compare(s_A*Alcm, s_B*Blcm)   def Compare(s_A, s_B):    global rounds     zipped=list(zip(s_A, s_B))    Nikephoros=0    Polycarpus=0    mult=1    for i in range (0, len(zipped)):        if rounds==i:            return print (Polycarpus*mult, Nikephoros*mult)        elif zipped[i][0]==zipped[i][1]:            pass        elif (zipped[i][0]=="S" and zipped[i][1]=="P") or \        (zipped[i][0]=="R" and zipped[i][1]=="S") or \        (zipped[i][0]=="P" and zipped[i][1]=="R"):            Nikephoros+=1        else:            Polycarpus+=1        if rounds%len(zipped)==0:        mult=rounds//len(zipped)        print (Polycarpus*mult, Nikephoros*mult)     else:        mult=rounds//len(zipped)        Nikephoros_add=0        Polycarpus_add=0        fraction=rounds - (len(zipped)*mult)        iter=0        for i in range (0, len(zipped)):            if iter==fraction:                return print(Polycarpus*mult + Polycarpus_add, Nikephoros*mult+ Nikephoros_add)            elif zipped[i][0]==zipped[i][1]:                iter+=1                pass            elif (zipped[i][0]=="S" and zipped[i][1]=="P") or \            (zipped[i][0]=="R" and zipped[i][1]=="S") or \            (zipped[i][0]=="P" and zipped[i][1]=="R"):                Nikephoros_add+=1                iter+=1            else:                Polycarpus_add+=1                iter+=1           Solution()
