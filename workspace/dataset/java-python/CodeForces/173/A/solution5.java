import java.io.*;import java.math.*;import java.util.*;import java.util.stream.*; @SuppressWarnings("unchecked")public class P173A {   int gcd(int a, int b) {    return ((b > 0) ? gcd(b, a % b) : a);  }   final static int [][] win = {{0, 1, -1}, {-1, 0, 1}, {1, -1, 0}};  final static Map<Character, Integer> ci = new HashMap();  static { ci.put('P', 0); ci.put('R', 1); ci.put('S', 2); }   public void run() throws Exception {    int n = nextInt();    char [] a = next().toCharArray();    char [] b = next().toCharArray();     int l = a.length * b.length / gcd(a.length, b.length);    int k = n / l;    int r = n - l * k;     int nl = 0, pl = 0, nr = 0, pr = 0;    for (int i = 0; (i < l) && (i < n); i++) {      int w = win[ci.get(a[i % a.length])][ci.get(b[i % b.length])];       if (w > 0) {        nl++;        nr += (i < r) ? 1 : 0;      } else if (w < 0) {        pl++;        pr += (i < r) ? 1 : 0;      }    }     println((pl * k + pr) + " " + (nl * k + nr));  }   public static void main(String... args) throws Exception {    br = new BufferedReader(new InputStreamReader(System.in));    pw = new PrintWriter(new BufferedOutputStream(System.out));    new P173A().run();    br.close();    pw.close();    System.err.println("\n[Time : " + (System.currentTimeMillis() - startTime) + " ms]");  }   static long startTime = System.currentTimeMillis();  static BufferedReader br;  static PrintWriter pw;  StringTokenizer stok;   String nextToken() throws IOException {    while (stok == null || !stok.hasMoreTokens()) {      String s = br.readLine();      if (s == null) { return null; }      stok = new StringTokenizer(s);    }    return stok.nextToken();  }   void print(byte b) { print("" + b); }  void print(int i) { print("" + i); }  void print(long l) { print("" + l); }  void print(double d) { print("" + d); }  void print(char c) { print("" + c); }  void print(Object o) {    if (o instanceof int[]) { print(Arrays.toString((int [])o));    } else if (o instanceof long[]) { print(Arrays.toString((long [])o));    } else if (o instanceof char[]) { print(Arrays.toString((char [])o));    } else if (o instanceof byte[]) { print(Arrays.toString((byte [])o));    } else if (o instanceof short[]) { print(Arrays.toString((short [])o));    } else if (o instanceof boolean[]) { print(Arrays.toString((boolean [])o));    } else if (o instanceof float[]) { print(Arrays.toString((float [])o));    } else if (o instanceof double[]) { print(Arrays.toString((double [])o));    } else if (o instanceof Object[]) { print(Arrays.toString((Object [])o));    } else { print("" + o); }  }  void print(String s) { pw.print(s); }  void println() { println(""); }  void println(byte b) { println("" + b); }  void println(int i) { println("" + i); }  void println(long l) { println("" + l); }  void println(double d) { println("" + d); }  void println(char c) { println("" + c); }  void println(Object o) { print(o); println(); }  void println(String s) { pw.println(s); }  int nextInt() throws IOException { return Integer.parseInt(nextToken()); }  long nextLong() throws IOException { return Long.parseLong(nextToken()); }  double nextDouble() throws IOException { return Double.parseDouble(nextToken()); }  char nextChar() throws IOException { return (char) (br.read()); }  String next() throws IOException { return nextToken(); }  String nextLine() throws IOException { return br.readLine(); }  int [] readInt(int size) throws IOException {    int [] array = new int [size];    for (int i = 0; i < size; i++) { array[i] = nextInt(); }    return array;  }  long [] readLong(int size) throws IOException {    long [] array = new long [size];    for (int i = 0; i < size; i++) { array[i] = nextLong(); }    return array;  }  double [] readDouble(int size) throws IOException {    double [] array = new double [size];    for (int i = 0; i < size; i++) { array[i] = nextDouble(); }    return array;  }  String [] readLines(int size) throws IOException {    String [] array = new String [size];    for (int i = 0; i < size; i++) { array[i] = nextLine(); }    return array;  }}
