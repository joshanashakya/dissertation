#------------------------------warmup----------------------------import osimport sysimport mathfrom io import BytesIO, IOBase BUFSIZE = 8192  class FastIO(IOBase):    newlines = 0     def __init__(self, file):        self._fd = file.fileno()        self.buffer = BytesIO()        self.writable = "x" in file.mode or "r" not in file.mode        self.write = self.buffer.write if self.writable else None     def read(self):        while True:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            if not b:                break            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines = 0        return self.buffer.read()     def readline(self):        while self.newlines == 0:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            self.newlines = b.count(b"\n") + (not b)            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines -= 1        return self.buffer.readline()     def flush(self):        if self.writable:            os.write(self._fd, self.buffer.getvalue())            self.buffer.truncate(0), self.buffer.seek(0)  class IOWrapper(IOBase):    def __init__(self, file):        self.buffer = FastIO(file)        self.flush = self.buffer.flush        self.writable = self.buffer.writable        self.write = lambda s: self.buffer.write(s.encode("ascii"))        self.read = lambda: self.buffer.read().decode("ascii")        self.readline = lambda: self.buffer.readline().decode("ascii")  sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)input = lambda: sys.stdin.readline().rstrip("\r\n") #-------------------game starts now----------------------------------------------------def rps(x,y):    res=0    if x==y:        res=0    elif x=='R' and y=='S':        res=1    elif x=='S' and y=='P':        res=1    elif x=='P' and y=='R':        res=1    elif x=='R' and y=='P':        res=2    elif x=='S' and y=='R':        res=2    elif x=='P' and y=='S':        res=2    return resÂ n=int(input())a=input()b=input()l1=len(a)l2=len(b)#print(a,b)lcm=l1*l2//math.gcd(l1,l2)c1=0c2=0for i in range (min(n,lcm)):    x=a[i%l1]    y=b[i%l2]    r=0    r=rps(x, y)    #print(r)    if r==1:        c1+=1    elif r==2:        c2+=1#print(c2,c1)if lcm<n:    t=n//lcm    c1*=t    c2*=t    t=n%lcm    #print(c2,c1)    for i in range (t):        x=a[i%l1]        y=b[i%l2]        r=0        r=rps(x, y)        if r==1:            c1+=1        elif r==2:            c2+=1print(c2,c1)
