import java.util.*; public class SuffixStructure_B {		public static boolean automaton(String s, String t) {		boolean check = true;		int temp = 0;		for(char c:t.toCharArray()) {			boolean found = false;			for(int i = temp; i<s.length(); i++) {				if(s.charAt(i)==c) {					found = true;					temp = i+1;					break;				}			}			if(found==false) {				return false;			}					}		return true;	}		public static boolean isAnagram(String s, String t) {		int arr[] = new int[26];		for(char c:s.toCharArray()) {			int x = (int)c - 97;			arr[x]++;		}		for(char c:t.toCharArray()) {			int x = (int)c - 97;			arr[x]--;		}		boolean check = true;		for(int i = 0; i<26; i++) {			if(arr[i]!=0) {				check = false;				break;			}		}				return check;	}		public static boolean containsDifferent(String s, String t) {		int arr[] = new int[26];		for(char c:s.toCharArray()) {//			System.out.println(c);			int x = (int)c - 97;			arr[x]++;		}		boolean check = false;		for(char c:t.toCharArray()) {//			System.out.println(c);			int x = (int)c - 97;			if(arr[x]==0) {//				System.out.println(c+"jhg");				check = true;				break;			}			arr[x]--;		}		return check;	} 	public static void main(String[] args) {		// TODO Auto-generated method stub		Scanner sc = new Scanner(System.in);		String s = sc.next();		String t = sc.next();		if(s.length()<t.length()) {			System.out.println("need tree");		}		else if(automaton(s,t)) {			System.out.println("automaton");		}		else {			boolean c = isAnagram(s, t);			if(c==true) {				System.out.println("array");			}			else {				if(!containsDifferent(s, t)) {					System.out.println("both");				}				else {					System.out.println("need tree");				}			}					}		 	} }
