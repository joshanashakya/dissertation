import java.util.Arrays;import java.util.Comparator;import java.util.Scanner; /* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * * @author root */public class NeedForBrack {     static class Racer {         String name;        int score;         public Racer(Racer r) {            this.name = r.name;            this.score = r.score;        }         public Racer() {         }    }     public static void main(String argsp[]) {        Scanner in = new Scanner(System.in);        int n = in.nextInt();        Racer[] racers = new Racer[n];        for (int i = 0; i < n; i++) {            Racer racer = new Racer();            racer.name = in.next();            racer.score = in.nextInt();            racers[i] = racer;        }         int m = in.nextInt();        int b[] = new int[m];        for (int i = 0; i < m; i++) {            b[i] = in.nextInt();        }        String vasyaName = in.next();        Arrays.sort(b);        Comparator<Racer> comp = new Comparator<Racer>() {             @Override            public int compare(Racer o1, Racer o2) {                if (o1.score > o2.score) {                    return -1;                } else if (o1.score < o2.score) {                    return 1;                } else {                    return o1.name.compareTo(o2.name);                }            }        };        Arrays.sort(racers, comp);        Racer[] rcrs = new Racer[n];        for (int i = 0; i < racers.length; i++) {            rcrs[i] = new Racer(racers[i]);        }        int vasyaId = 0;        int vasyaScore = 0;        for (int i = 0; i < racers.length; i++) {            if (racers[i].name.equals(vasyaName)) {                vasyaId = i;                vasyaScore = racers[i].score;                break;            }        }         if (b.length == 0) {            System.out.println((vasyaId + 1) + " " + (vasyaId + 1));            return;        }         racers[vasyaId].score += b[b.length - 1];        Arrays.sort(racers, comp);        for (int i = 0; i < racers.length; i++) {            if (racers[i].name.equals(vasyaName)) {                vasyaId = i;                vasyaScore = racers[i].score;                break;            }        }        int bestCase = 0;        int worstCase = 0;        if (b.length - 1 > vasyaId) {            int j = b.length - 2;            for (int i = 0; i < vasyaId; i++) {                racers[i].score += b[j];                j--;            }            for (int i = racers.length - 1; i > vasyaId && j >= 0; i--) {                racers[i].score += b[j];                j--;            }            Arrays.sort(racers, comp);            for (int i = 0; i < racers.length; i++) {                if (racers[i].name.equals(vasyaName)) {                    vasyaId = i;                    vasyaScore = racers[i].score;                    break;                }            }        }        bestCase = vasyaId + 1;        //        int startId = 0;        if(b.length == rcrs.length){           rcrs[vasyaId].score+=b[0];           startId = 1;           Arrays.sort(rcrs,comp);        }        for (int i = 0; i < rcrs.length; i++) {            if (rcrs[i].name.equals(vasyaName)) {                vasyaId = i;                break;            }        }//        for (int i = 0; i < rcrs.length; i++) {//            System.out.print(rcrs[i].name + "[" + rcrs[i].score + "] ");//        }//        System.out.println("");        int j = startId;         for (int i = vasyaId + 1; i < rcrs.length && j < b.length; i++) {//            if ((b[j] + rcrs[i].score < rcrs[vasyaId].score) || (b[j] + rcrs[i].score == rcrs[vasyaId].score && rcrs[i].name.compareTo(vasyaName) > 0)) {            int l = j;            int r = b.length - 1;            int res = j;            while (l < r) {                int mid = (r + l) / 2;                if (b[mid] + rcrs[i].score > rcrs[vasyaId].score) {                    res = mid;                    r = mid;                } else if (b[mid] + rcrs[i].score == rcrs[vasyaId].score) {                    if (rcrs[i].name.compareTo(rcrs[vasyaId].name) < 0) {                        res = mid;                        r = mid;                    } else {                        l = mid + 1;                    }                } else {                    l = mid + 1;                }            }            j = res;//            }            rcrs[i].score += b[res];            j++;        }        Arrays.sort(rcrs, comp);//        for (int i = 0; i < rcrs.length; i++) {//            System.out.print(rcrs[i].name + "[" + rcrs[i].score + "] ");//        }//        System.out.println("");        for (int i = 0; i < rcrs.length; i++) {            if (rcrs[i].name.equals(vasyaName)) {                vasyaId = i;                break;            }        }        worstCase = vasyaId + 1;        System.out.println(bestCase + " " + worstCase);     }}
