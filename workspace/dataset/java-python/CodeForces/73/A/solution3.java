import java.util.*; public class Trying{    public static void main (String[] args)     {        Scanner enter = new Scanner(System.in);           int x = enter.nextInt(), y = enter.nextInt(), z = enter.nextInt(),         k = enter.nextInt();        int oldx = x, oldy = y, oldz = z;        while (k != 0)        {            if(x > 1){x--; k--;}            if(k == 0)break;            if(y > 1){y--; k--;}            if(k == 0)break;            if(z > 1){z--; k--;}            if(k == 0)break;            if(x == 1 && y == 1 && z == 1)break;        }        String first = "", second = "", third = "", hits = new String();        first += (oldx-x+1); second += (oldy-y+1); third += (oldz-z+1);         hits = multiply(multiply(first, second), third);        System.out.println(hits);    }    public static String multiply(String first, String second)    {        int process [][] = new int [first.length()][first.length()+second.length()],        row = -1, col = 0, sum = 0, carry = 0,         result [] = new int [first.length()+second.length()];        for(int i = first.length()-1 ; i >= 0 ; i--)        {            row++; col = first.length()+second.length()-1-row;carry =0;            for(int j = second.length()-1 ; j >= 0 ; j--)            {                sum = ((first.charAt(i)-48)*(second.charAt(j)-48)+carry) -                        ((first.charAt(i)-48)*(second.charAt(j)-48)+carry)/10*10;                carry = ((first.charAt(i)-48)*(second.charAt(j)-48)+carry)/10;                process[row][col] = sum ;                col--;            }            process[row][col] = carry;        }                sum = 0; carry = 0;        for(int j = first.length()+second.length()-1 ; j >= 0  ; j--)        {            for(int i = 0 ; i < first.length() ; i++)                sum += process[i][j] ;            result[j] = (sum+carry) - (sum+carry)/10*10;            carry = (sum+carry) /10;            sum = 0;        }                result[first.length()+second.length()-1] += carry;        String third = "";        for(int i = 0 ; i < first.length()+second.length() ; i++)            if(result[i] != 0)            {                for(int j = i ; j < first.length()+second.length() ; j++)                    third += result[j];                break;            }        return third;    }} 
