import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Main {	static class InputReader {		protected BufferedReader br = null;		StringTokenizer tokenizer = null; 		public InputReader(InputStream is) {			super();			br = new BufferedReader(new InputStreamReader(is));		} 		public String next() {			for (; tokenizer == null || !tokenizer.hasMoreTokens();) {				try {					tokenizer = new StringTokenizer(br.readLine());				} catch (IOException e) {					// TODO Auto-generated catch block					e.printStackTrace();					throw new RuntimeException(e);				}			}			return tokenizer.nextToken();		} 		public int nextInt() {			return Integer.parseInt(next());		}	} 	public static void main(String[] args) {		InputReader in = new InputReader(System.in);		int n = in.nextInt(), l = in.nextInt(), r = in.nextInt(), Ql = in.nextInt(), Qr = in.nextInt();		int[] dp = new int[n + 1];		dp[0] = 0;		for (int i = 0; i < n; ++i) {			dp[i + 1] = dp[i] + in.nextInt();		}		int res = Integer.MAX_VALUE;		for (int i = 0; i <= n; ++i) {			int t = dp[i] * l + (dp[n] - dp[i]) * r;			if (i < n - i) {				t += (n - i * 2 - 1) * Qr;			} else if (i > n - i) {				t += (i * 2 - n - 1) * Ql;			}			res = Math.min(res, t);		}		System.out.println(res);	}}  	 	 	 		 	 		  			   						
