import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.IOException;import java.util.ArrayList;import java.util.Arrays;import java.util.StringTokenizer;public class Solution{    static char[][] board = new char[8][8];    static boolean[][] visited = new boolean[8][8];    public static void main(String[] args){        try(BufferedReader in = new BufferedReader(new InputStreamReader(System.in))){            for(int i=0;i<8;i++){				board[i] = in.readLine().toCharArray();				Arrays.fill(visited[i],false);			}			dfs(7,0,0);			System.out.println("LOSE");        }catch(IOException e){Â         }    }    static void dfs(int row , int col , int step){		if(row<0 || row>=8 || col<0 || col>=8) return;		if(board[row][col] == 'A' || step>=7){			System.out.println("WIN");			System.exit(0);		}		for(int i=-1;i<=1;i++)			for(int j=-1;j<=1;j++){				int x = row+i;int y = col+j;				if(x<0 || x>=8 || y<0 || y>=8) continue;				if(x-step>=0 && board[x-step][y] == 'S') continue;				if(x-step-1>=0 && board[x-step-1][y] == 'S') continue;				dfs(x,y,step+1);			}    }}
