import java.io.*;import java.lang.*;import java.util.*;import java.math.*; public class code{	static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }       static int counter = 1;	public static void main(String args[])throws IOException	{ 		Scanner scn = new Scanner(System.in);         int n = scn.nextInt();        int m = scn.nextInt();        String temp = scn.nextLine();        String[] grid = new String[n];         for(int i = 0; i < n; i++)            grid[i] = scn.nextLine();         int count = 0;         for(int i = 0; i < n; i++)        {            int status = 0;            for(int j = 0; j < m; j++)            {                if(grid[i].charAt(j) == 'B')                {                    if(status == 0)                    {                        status = 1;                    }                    else if(status == 2)                    {                        System.out.println("NO"); return;                    }                 }                else if(status == 1)                    status = 2;             }        }         for(int j = 0; j < m; j++)        {            int status = 0;            for(int i = 0; i < n; i++)            {                if(grid[i].charAt(j) == 'B')                {                    if(status == 0)                    {                        status = 1;                    }                    else if(status == 2)                    {                        System.out.println("NO"); return;                    }                 }                else if(status == 1)                    status = 2;             }        }         int[] row_start_of_column = new int[m];        int[] row_end_of_column = new int[m];        int starting_column = -1;        int ending_column = -1;        for(int j = 0; j < m; j++)        {            row_start_of_column[j] = -1;            row_end_of_column[j] = -1;            for(int i = 0; i < n; i++)            {                if(grid[i].charAt(j)=='B')                {                    row_start_of_column[j] = i;                    break;                }            }             for(int i = n - 1; i >= 0; i--)            {                if(grid[i].charAt(j)=='B')                {                    row_end_of_column[j] = i;                    break;                }            }        }         for(int j = 0; j < m; j++)        {            if(row_start_of_column[j]!=-1)            {                starting_column = j;                break;            }        }        for(int j = 0; j < m; j++)        {            if(row_start_of_column[j]!=-1)                ending_column = j;        }         for(int i = 0; i < n; i++)        {            for(int j = 0; j < m; j++)            {                if(grid[i].charAt(j)=='W')                    continue;                                 int row = i;                int column = j;                 int this_row_start = row_start_of_column[column];                int this_row_end = row_end_of_column[column];                 int this_column_start = j;                int this_column_end = j;                while(this_column_start > 0 && grid[row].charAt(this_column_start - 1)=='B')                    this_column_start--;                while(this_column_end < m - 1 && grid[row].charAt(this_column_end + 1)=='B')                    this_column_end++;                  if(starting_column==this_column_start && ending_column==this_column_end)                    continue;                 int top_row = n+1;                int bottom_row = -1;                for(int k = starting_column; k < this_column_start; k++)                {                    top_row = Math.min(top_row, row_start_of_column[k]);                    bottom_row = Math.max(bottom_row, row_end_of_column[k]);                }                for(int k = this_column_end + 1; k < ending_column; k++)                {                    top_row = Math.min(top_row, row_start_of_column[k]);                    bottom_row = Math.max(bottom_row, row_end_of_column[k]);                }                 if(top_row >= this_row_start && bottom_row <= this_row_end)                {                 }                else                {                    System.out.println("NO");                    return;                }             }        }         System.out.println("YES");        return;            } } 
