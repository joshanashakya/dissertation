import java.io.*;import java.util.StringTokenizer;  public class ivanTheFool {    public static long mod = 1000000007;    public static void fout(long x){        System.out.println(x);    }    /**-----------fast reader------------*/    static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }     /**-----end of fast reader----------------*/     public static long pmod(long  x,long  y){        long r = 1;        while(y > 0){            if(y%2 == 1){                r = (r * x)%mod;            }            x = (x * x)%mod;            y >>= 1;        }        return r;    }     public static void main(String[] args) {        FastReader rd = new FastReader();        long n,m;        n = rd.nextLong();        m = rd.nextLong();        long answer = 0;        long []fact = new long[200000];        fact[0] = 1;        for(long i = 1;i<200000;++i){            fact[(int)i] = (fact[(int)i-1]*i)%mod;        }        answer += 2;//all adj cells are different        if(m >= 2){            for(long blk = 1 ; blk <= (m/2);blk++){                long bins = m - (2*blk) + 1;                long sub = (fact[(int)(bins + blk -1)]*pmod(fact[(int)blk],mod-(long)2))%mod;                sub = (sub * pmod(fact[(int)bins-1],mod-(long)2))%mod;                sub = (2 * sub)%mod;                //fout(sub);                answer = (answer + sub)%mod;            }        }        if(n >= 2){            for(long blk = 1 ; blk <= (n/2);blk++){                long bins = n - (2*blk) + 1;                long sub = (fact[(int)(bins + blk -1)]*pmod(fact[(int)blk],mod-(long)2))%mod;                sub = (sub * pmod(fact[(int)bins-1],mod-(long)2))%mod;                sub = (2 * sub)%mod;                answer = (answer + sub)%mod;            }        }        // if(m == 1 ^ n == 1){        //     answer = (answer + 2)%mod;        // }        fout(answer);    }}
