#include <cstdio>#include <algorithm>#include <queue>#include <set>#include <cstring> using namespace std; typedef long long ll;typedef pair<ll, int> pli;const ll P = 1e9 + 7; const int N = 3e5 + 10; #define mk make_pair#define pb push_back#define fr first#define sc second  int rd() {    int x = 0, f = 1; char c = getchar();    while (c > '9' || c < '0') f = c == '-' ? -1 : 1, c = getchar();    while (c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();    return x * f;} int n,cnt,sl,sr,sum[N];char s[N],tmp[N];int main(){    // freopen("1.in", "r", stdin);    n=rd(); scanf("%s",s+1);    int pos=0,now=0,mi=0;    for(int i=1;i<=n;i++)    {        now+=s[i]=='(' ? 1 : -1;        if(now<mi) mi=now,pos=i;    }    if(now!=0) { printf("0\n1 1\n"); return 0; }    for(int i=1;i<=n;i++) tmp[i]=s[ (pos+i-1)%n+1 ];    vector <int> V; V.pb(0);    for(int i=1;i<=n;i++)    {        s[i]=tmp[i]; sum[i]=sum[i-1] + (s[i]=='(' ? 1 : -1);        if(!sum[i]) cnt++,V.pb(i);    }    int ans=cnt,L=1,R=1,len=V.size();    for(int i=1;i<len;i++)    {        int l=V[i-1]+1,r=V[i],t=0;        for(int j=l;j<=r;j++) t+=sum[j]==1;        if(t>ans) ans=t,L=l,R=r;    }    V.clear(); for(int i=1;i<=n;i++) if(sum[i]==1) V.pb(i);    len=V.size();    for(int i=1;i<len;i++)    {        int l=V[i-1]+1,r=V[i],t=cnt;        if(sum[l]==0) continue;        for(int j=l;j<=r;j++) t+=sum[j]==2;        if(t>ans) ans=t,L=l,R=r;    }    printf("%d\n%d %d\n",ans,(L+pos-1)%n+1,(R+pos-1)%n+1);    return 0;}	 		 	 		 	 		 	  			 	 	    		
