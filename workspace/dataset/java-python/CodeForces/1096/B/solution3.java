import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; public class Main{        static long mod = 998244353;    public static void main(String[] args)    {         FastScanner input = new FastScanner();        int  n= input.nextInt();        String s = input.next();        long firstcount=0;        long lastcount=0;        char first = s.charAt(0);        char last = s.charAt(n-1);        for (int i = 0; i < n; i++) {           if(s.charAt(i)==first)               firstcount++;           else               break;        }        for (int i = n-1; i >=0; i--) {            if(s.charAt(i)==last)                lastcount++;            else break;        }        if(first==last)        {            System.out.println((firstcount+1)*(lastcount+1)%mod);                    }        else        {            System.out.println(1+firstcount+lastcount);        }           }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
