import java.util.*;import java.io.*; public class cf_6 {    public static void main(String[] args) {        new Solution().solve();    }} class Solution {    public void solve() {        FastScanner fs = new FastScanner();        int tests = fs.nextInt();        testcase : for (int t=0; t < tests; t++) {            int n = fs.nextInt();            long w = fs.nextLong();            int[] weights = fs.readIntArray(n);            long minRequired = (w+1)/2; // ceiling value            long currentSum = 0;            StringBuilder sb = new StringBuilder();            // System.out.println("---- n, w, weights : " + n + ", " + w + ", " + Arrays.toString(weights));            int indexCount = 0;            for (int i=0; i<n; i++) {                int num = weights[i];                if (num > w) { // If item weight is greater than knapsack, skip it                    continue;                } else if (num >= minRequired) { // If one item is greater than half                    System.out.println(1);                    System.out.println(i+1); // 1 indexed                     continue testcase; // solution found, move to next testcase                               } else if ((currentSum + num) <= w) {                    currentSum += num;                    sb.append(i+1); // 1 indexed                    sb.append(" ");                    indexCount++;                }                if (currentSum >= minRequired && currentSum <= w) { // check if conditions are satisfied                    System.out.println(indexCount);                    System.out.println(sb.toString());                    continue testcase; // solution found, move to next testcase                   }                             }            System.out.println("-1"); // no solution        }    }} class FastScanner {    private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    private StringTokenizer st = new StringTokenizer("");        public String next() {        while (!st.hasMoreTokens())            try {                st = new StringTokenizer(br.readLine());            } catch (IOException e) {                e.printStackTrace();            }        return st.nextToken();    }        public int[] readIntArray(int n) {        int[] arr = new int[n];        for (int i=0; i<n; i++) {            arr[i] = nextInt();        }        return arr;    }     public int nextInt() {        return Integer.parseInt(next());    }            public long nextLong() {        return Long.parseLong(next());    }     public double nextDouble() {        return Double.parseDouble(next());    }     public float nextFloat() {        return Float.parseFloat(next());    }    }
