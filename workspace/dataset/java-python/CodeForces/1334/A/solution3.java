import java.io.BufferedReader;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.io.InputStreamReader;import java.nio.file.Paths;import java.util.Arrays;import java.util.StringTokenizer; public class Main1 { 	public Main1() throws FileNotFoundException { //		File file = Paths.get("input.txt").toFile();//		if (file.exists()) {//			System.setIn(new FileInputStream(file));//		}		long t = System.currentTimeMillis(); 		FastReader reader = new FastReader(); 		int ttt = reader.nextInt(); 		for (int tt = 0; tt < ttt; tt++) { 			int n = reader.nextInt();						int p=0;			int c=0;			boolean ok=true;			for(int i=0;i<n;i++) {				int np=reader.nextInt();				int nc=reader.nextInt();								int dp=np-p;				int dc=nc-c;				if(dp<0||dc<0||dp<dc) {					ok=false;				}				p=np;				c=nc;			}			System.out.println(ok?"YES":"NO"); 						 		} 		// System.out.println("TIME: "+(System.currentTimeMillis()-t));	} 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	} 	public static void main(String[] args) throws FileNotFoundException {		new Main1();	} }
