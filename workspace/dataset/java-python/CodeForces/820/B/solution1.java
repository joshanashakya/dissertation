import java.util.Scanner; public class B820 {     public static void main(String[] args) {        Scanner in = new Scanner(System.in);        int N = in.nextInt();        double alpha = Math.toRadians(in.nextInt());        double minDiff = Double.POSITIVE_INFINITY;        int[] answer = null;        // binary search for highest angle that is at most alpha        // do not forget to consider next one (the first higher one)        // start-0-mid angle        for (int start=1; start<N; start++) {            int low = start;            int high = N-1;            while (low < high) {                int mid = (low + high + 1)/2;                double angle = angle(N, start, mid);                if (angle > alpha) {                    high = mid - 1;                } else {                    low = mid;                }            }            if (start != low) {                double angle1 = angle(N, start, low);                double diff = Math.abs(angle1-alpha);                if (diff < minDiff) {                    minDiff = diff;                    answer = new int[] {start, low};                }            }            if (low < N-1) {                double angle2 = angle(N, start, low+1);                double diff = Math.abs(angle2 - alpha);                if (diff < minDiff) {                    minDiff = diff;                    answer = new int[] {start, low+1};                }            }        }        System.out.println((answer[0] + 1) + " 1 " + (answer[1] + 1));    }     static double angle(int N, int start, int mid) {        double startAngle = 2*Math.PI*start/N;        double startx = Math.cos(startAngle);        double starty = Math.sin(startAngle);        double midAngle = 2*Math.PI*mid/N;        double midx = Math.cos(midAngle);        double midy = Math.sin(midAngle);        double dx1 = startx - 1;        double dy1 = starty;        double dx2 = midx - 1;        double dy2 = midy;        double norm1 = Math.sqrt(dx1*dx1+dy1*dy1);        double norm2 = Math.sqrt(dx2*dx2+dy2*dy2);        double product = dx1*dx2+dy1*dy2;        double angle = Math.acos(product/(norm1*norm2));                return angle;    } }
