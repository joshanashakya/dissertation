import java.io.*;import java.util.*; public class B_Mister_B_and_Angle_in_Polygon{        public static void main(String[] args) throws Exception{        int[] na = in.readA();        int n = na[0], a = na[1];        double internalangle = (double)(n-2)*180/n;        double shiftangle = (double)180/n;        double diff = abs(internalangle - a);        int[] ans = {1,2,3};         for(int i = 4; i <= n; i++){            internalangle -= shiftangle;            if(diff > abs(internalangle-a)){                diff = abs(internalangle-a);                ans[2] = i;            }        }                System.out.println(ans[0]+" "+ans[1]+" "+ans[2]);    }    public static double abs (double x){        return Math.abs(x);    }     static Inputer in;    static {        in = new Inputer();    }     static class Inputer{        BufferedReader br;        Inputer(){            try{                br = new BufferedReader(new InputStreamReader(System.in));            }            catch(Exception e){}        }        public int readInt() throws Exception{            return Integer.parseInt(readLine());        }        public long readLong() throws Exception{            return Long.parseLong(readLine());        }        public int[] readA(String delim) throws Exception{            String[] s = readLine().split(delim);            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public int[] readA() throws Exception{            String[] s = readLine().split("\\s+");            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public long[] readLA() throws Exception{            String[] s = readLine().split("\\s+");            long[] A = new long[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Long.parseLong(s[i]);            return A;        }        public String readLine() throws Exception{            return br.readLine();        }        public int[] copyA(int[] A){            int[] B = new int[A.length];            for(int i= 0 ; i < A.length; i++)                B[i] = A[i];            return B;        }    }    static void shuffle(int[] A){        int n = A.length;        Random rand = new Random();        for(int t = 0; t < A.length; t++){            int i1 = rand.nextInt(n);            int i2 = rand.nextInt(n);            int tmp = A[i1];            A[i1] = A[i2];            A[i2] = tmp;        }    }}
