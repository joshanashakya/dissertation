import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayDeque;import java.util.Arrays;import java.util.Comparator;import java.util.StringTokenizer; public class Codeforces {    public  void solve(){        FastScanner fs = new FastScanner();        StringBuilder print = new StringBuilder();        int n = fs.nextInt(), m = fs.nextInt(), q = fs.nextInt();        int[][]grid = new int[n][m];        int[]maxInRow = new int[n];        for(int i=0;i<n;i++){            int cnt = 0;            for(int j=0;j<m;j++){                grid[i][j] = fs.nextInt();                if(grid[i][j]==1)cnt++;                else {                    maxInRow[i] = Math.max(maxInRow[i],cnt);                    cnt=0;                }            }            maxInRow[i] = Math.max(maxInRow[i],cnt);        }        while (q-- > 0 ){            int l = fs.nextInt() -1 ,r= fs.nextInt()-1;            grid[l][r] ^= 1;            maxInRow[l] = 0;            int temp = 0;            for(int i=0;i<m;i++){                if(grid[l][i] == 1)temp++;                else{                    maxInRow[l]=Math.max(maxInRow[l],temp);                    temp = 0;                }            }            maxInRow[l]=Math.max(maxInRow[l],temp);            int ans = 0;            for(int i=0;i<n;i++)ans = Math.max(ans,maxInRow[i]);            print.append(ans).append("\n");        }        System.out.println(print);    }    public static void main(String[]args){        try{            new Codeforces().solve();        }catch (Exception e){            e.printStackTrace();        }    }    class FastScanner {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");        String next() {            while (!st.hasMoreTokens())                try {                    st=new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }        String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }         int nextInt() {            return Integer.parseInt(next());        }        long nextLong() {            return Long.parseLong(next());        }    } } 
