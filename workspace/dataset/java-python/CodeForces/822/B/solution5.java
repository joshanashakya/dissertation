import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*; public class Main{       public static int match(String s1,String s2,int start)    {        int count=0;        int j =0;        for (int i = start; i <start+s1.length()&&(start+s1.length())<=s2.length(); i++,j++) {                        if(s1.charAt(j)==s2.charAt(i))                count++;        }        return count;    }     public static void main(String[] args) throws IOException    {         FastScanner input = new FastScanner();        int start=0;              int n = input.nextInt();      int  m = input.nextInt();      String s1 = input.next();      String s2 = input.next();      int minIndex =0;      int max  = Integer.MIN_VALUE;        for (int i = 0; i <s2.length(); i++) {            int mat = match(s1, s2, i);//            System.out.println("match->"+mat);            if(max<mat)            {                minIndex = i;                max = mat;            }        }//        System.out.println("minindex-->"+minIndex);        System.out.println(s1.length()-max);        int j =0;        for (int i = minIndex; i <minIndex+s1.length(); i++) {            if(s1.charAt(j)!=s2.charAt(i))            {                System.out.print(j+1+" ");            }            j++;        }        System.out.println("");           }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
