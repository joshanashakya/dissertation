#include<bits/stdc++.h> using namespace std; #define LL long long#define DD double#define Pb push_back#define Bp pop_back#define Pf push_front#define Fp pop_front#define Ub upper_bound#define Lb lower_bound#define Bs binary_search#define In insert#define Mp make_pair#define All(x) x.begin(), x.end()#define mem(a, b) memset(a, b, sizeof(a))#define fast ios_base::sync_with_stdio(0);cin.tie(0)#define X first#define Y second const int mx1 = 55;const int mx2 = 505;const int mx3 = 1005;const int mx4 = 30005;const int mx5 = 100005;const int mx6 = 1000005; typedef vector<int> Vi;typedef vector<DD> Vd;typedef vector<bool> Vb;typedef vector<Vi> VVi;typedef pair<int, int> Pii;typedef pair<DD, DD> Pdd;typedef vector<Pii> Vpi;typedef vector<Pdd> Vpd;typedef queue<int> Qi;typedef stack<int> Si;typedef deque<int> Di; int _toggle(int N, int pos) {return N = N ^ (1 << pos);}int _set(int N, int pos) {return N = N | (1 << pos);}int _reset(int N, int pos) {return N = N & ~(1 << pos);}bool _check(int N, int pos) {return (bool)(N & (1 << pos));}bool _upper(char a) {return a >= 'A' && a <= 'Z';}bool _lower(char a) {return a >= 'a' && a <= 'z';}bool _digit(char a) {return a >= '0' && a <= '9';} int dx[] = {1, -1, 0, 0, -1, -1, 1, 1};int dy[] = {0, 0, 1, -1, -1, 1, -1, 1}; ///******************************************************/// LL t1, t2, x1, x2, t0;LL up, down, time1, time2;bool f; void solve(){    cin >> t1 >> t2 >> x1 >> x2 >> t0;    if(t1 == t2){        cout << x1 << ' ' << x2 << '\n';        return;    }    if(t1 == t0){        cout << x1 << ' ' << 0 << '\n';        return;    }    if(t2 == t0){        cout << 0 << ' ' << x2 << '\n';        return;    }    for(LL y1 = 0; y1 <= x1; y1++){        LL top = t1 * y1 - t0 * y1;        LL bot = t0 - t2;        LL y[3];        y[0] = top / bot, y[1] = y[0] + 1, y[2] = y[0] - 1;        for(int i = 0; i < 3; i++){            if(y[i] >= 0 && y[i] <= x2 && y1 + y[i] > 0){                LL g = __gcd(t1 * y1 + t2 * y[i], y1 + y[i]);                LL uu = (t1 * y1 + t2 * y[i]) / g;                LL dd = (y1 + y[i]) / g;                LL T0 = uu / dd;                if(T0 < t0){                    continue;                }                if(!f){                    up = uu, down = dd, time1 = y1, time2 = y[i];                    f = 1;                }                else{                    LL Aup = uu * down;                    LL Bup = up * dd;                    if(Aup == Bup && y1 + y[i] > time1 + time2){                        time1 = y1, time2 = y[i];                    }                    if(Aup < Bup){                        up = uu, down = dd, time1 = y1, time2 = y[i];                    }                }            }        }    }    for(LL y2 = 0; y2 <= x2; y2++){        LL top = t2 * y2 - t0 * y2;        LL bot = t0 - t1;        LL y[3];        y[0] = top / bot, y[1] = y[0] + 1, y[2] = y[0] - 1;        for(int i = 0; i < 3; i++){            if(y[i] >= 0 && y[i] <= x1 && y2 + y[i] > 0){                LL g = __gcd(t2 * y2 + t1 * y[i], y2 + y[i]);                LL uu = (t2 * y2 + t1 * y[i]) / g;                LL dd = (y2 + y[i]) / g;                LL T0 = uu / dd;                if(T0 < t0){                    continue;                }                if(!f){                    up = uu, down = dd, time1 = y[i], time2 = y2;                    f = 1;                }                else{                    LL Aup = uu * down;                    LL Bup = up * dd;                    if(Aup == Bup && y2 + y[i] > time1 + time2){                        time1 = y[i], time2 = y2;                    }                    if(Aup < Bup){                        up = uu, down = dd, time1 = y[i], time2 = y2;                    }                }            }        }    }    cout << time1 << ' ' << time2 << '\n';} int main(){    //freopen("input.txt", "r", stdin);    //freopen("output.txt", "w", stdout);    fast;    int tc = 1;    //cin >> tc;    while(tc--){        solve();    }}   		 	  		 		 	 	 		  	   	  		
