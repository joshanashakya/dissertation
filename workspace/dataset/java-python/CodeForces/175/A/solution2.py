import sysimport mathfrom heapq import *;input = sys.stdin.readlinefrom functools import cmp_to_key; def pi():    return(int(input()))def pl():    return(int(input(), 16))def ti():    return(list(map(int,input().split())))def ts():    s = input()    return(list(s[:len(s) - 1]))def invr():    return(map(int,input().split()))mod = 1000000007;f = [];def fact(n,m):    global f;    f = [1 for i in range(n+1)];    f[0] = 1;    for i in range(1,n+1):        f[i] = (f[i-1]*i)%m; def fast_mod_exp(a,b,m):    res = 1;    while b > 0:        if b & 1:            res = (res*a)%m;        a = (a*a)%m;        b = b >> 1;    return res; def inverseMod(n,m):    return fast_mod_exp(n,m-2,m); def ncr(n,r,m):    if n < 0 or r < 0 or r > n: return 0;    if r == 0: return 1;    return ((f[n]*inverseMod(f[n-r],m))%m*inverseMod(f[r],m))%m; def main():    A(); def A():    s = input()[:-1];    if len(s) > 21 or len(s) < 3:        print(-1);        return;    mx = 0;    f = 0;    for i in range(len(s)-2):        for j in range(i+1,len(s)-1):            a = s[0:i+1];            b = s[i+1:j+1];            c = s[j+1:len(s)];             if (a[0] != '0' or len(a) == 1) and (b[0] != '0' or len(b) == 1) and (c[0] != '0' or len(c) == 1) and ((int(a) <= 1000000 and int(b) <= 1000000 and int(c) <= 1000000)):                f = 1;                mx = max(mx,int(a)+int(b)+int(c));        if f == 0:        print(-1);    else:        print(mx);           main();
