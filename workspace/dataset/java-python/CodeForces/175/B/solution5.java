import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.HashMap;Â public class PlaneOfTanksPro {	public static void main(String[] args) throws NumberFormatException, IOException {		HPAllInOne OfficeJet = new HPAllInOne();		OfficeJet.PowerON();		int n = Integer.parseInt(OfficeJet.scan());		HashMap<String, Integer> map = new HashMap<>();		for(int i = 0 ; i < n ; i++){			String[] in = OfficeJet.scan().split("\\s+");			if(!map.containsKey(in[0])) map.put(in[0], 0);			map.put(in[0], Math.max(map.get(in[0]), Integer.parseInt(in[1])));		}		OfficeJet.Print(map.size());		PlayerInfo[] players = new PlayerInfo[map.size()];		int id = 0;		for(String name : map.keySet()){			players[id] = new PlayerInfo(name, map.get(name));			id++;		}		for(PlayerInfo p : players){			int count = 0;			for(int i = 0 ; i < players.length ; i++)				if(players[i].score > p.score)					count++;			String res = "";			if(count > map.size()/2) res = "noob";			else if(count > map.size()/5) res = "random";			else if(count > map.size()/10) res = "average";			else if(count > map.size()/100) res = "hardcore";			else res = "pro";			OfficeJet.Print(p.name + " " + res);		}		OfficeJet.PowerOFF();	}	static class PlayerInfo{		String name;		int score;		public PlayerInfo(String name, int score){			this.name = name;			this.score = score;		}	}	static class HPAllInOne{		/**               ...        _d^/  /^^^b_     .d'' /  /      ''b.   .p'   /  /          'q.  .d'   /  /___    _____'b. .d'   /  __   / /  __   /b. ::   /  / /  / /  / /  / :: ::  /  / /  / /  /_/  /  :: `p./__/ /__/ /  _____/  .q'  `p.        /  /       .q'   `b.      /  /      .d'     `q..  /  /    ..p'        ^q/  /....p^             '''                                    		 **/		class HPCopyMachine extends BufferedReader{			public HPCopyMachine(){				super(new InputStreamReader(System.in));			}		}		class HPPrinter extends PrintWriter{			public HPPrinter(){				super(System.out);			}		}		HPCopyMachine c;		HPPrinter p;		public String scan() throws IOException {			return c.readLine();		}		public char[][] CopySpreadSheet(int n, int m) throws IOException{			char[][] SpreadSheet = new char[n][m];			for(int i = 0 ; i < n ; i++)				SpreadSheet[i] = c.readLine().toCharArray();			return SpreadSheet;		}		public int[] CopyList(int n) throws IOException{			String[] in = c.readLine().split("\\s+");			int[] res = new int[n];			for(int i = 0 ; i < n ; i++)				res[i] = Integer.parseInt(in[i]);			return res;		}		public void NewInkCartridge(){			p.flush();		}		public void Print(Object o){			p.println(o);		}		public void PowerON(){			c = new HPCopyMachine();			p = new HPPrinter();		}		public void PowerOFF() throws IOException {			c.close();			p.close();		}	}}
