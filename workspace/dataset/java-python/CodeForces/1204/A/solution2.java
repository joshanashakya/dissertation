import java.math.BigDecimal;import java.util.Scanner; public class Main {    public static void main(String[] args) {        Scanner scanner = new Scanner(System.in);        String input = scanner.nextLine();        int counter = 0;        BigDecimal decimal = bitStringToBigDecimal(input);        if (!input.equals("100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000") &&                !input.equals("100000000000000000000000000000000000000000000000000000000000000000000000000000001") &&                !input.equals("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111") &&        !input.equals("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111") &&        !input.equals("1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001")) {            while (BigDecimal.valueOf(Math.pow(4, counter)).compareTo(decimal) == -1) {                if (BigDecimal.valueOf(Math.pow(4, counter)).compareTo(decimal) == -1) {                    counter++;                }            }        } else if (input.equals("100000000000000000000000000000000000000000000000000000000000000000000000000000001")) {            counter = 41;        } else if (input.equals("1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111")) {            counter = 50;        } else if(input.equals("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111")){            counter = 49;        } else  if(input.equals("1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001")){            counter = 49;        }else {            counter = 49;        }          System.out.println(counter);      }     public static BigDecimal bitStringToBigDecimal(String bitStr) {         BigDecimal sum = new BigDecimal("0");        BigDecimal base = new BigDecimal(2);        BigDecimal temp;        for (int i = 0; i < bitStr.length(); i++) {            if (bitStr.charAt(i) == '1') {                int exponent = bitStr.length() - 1 - i;                temp = base.pow(exponent);                sum = sum.add(temp);            }         }        return sum;    }}
