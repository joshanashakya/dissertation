n, m = map(int, input().split())matrix = [[*map(int, input().split())] for _ in range(n)] MAX_ELEM = int(2e5) def sieve():    prime = [1] * MAX_ELEM    i = 2    while i*i < MAX_ELEM:        if prime[i]:            j = 2            while i*j < MAX_ELEM:                prime[i*j] = False                j += 1        i += 1    prime[0] = prime[1] = False    nxtPrime = [0] * MAX_ELEM    cur = -1    for i in range(MAX_ELEM-1, -1, -1):        if prime[i]:            cur = i        nxtPrime[i] = cur    return nxtPrime nxtPrime = sieve() ans = int(1e9) for i in range(n):    res = 0    for k in range(m):        res += nxtPrime[matrix[i][k]] - matrix[i][k]    ans = min(ans, res) for j in range(m):    res = 0    for k in range(n):        res += nxtPrime[matrix[k][j]] - matrix[k][j]    ans = min(ans, res) print(ans)  
