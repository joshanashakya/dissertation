import java.util.*;import java.io.*;import java.math.*; public class First{    public static int bs(int a[], int s, int e, int m)    {          int ans=-1;          while(s<=e)          {               int mid = (s+e)/2;               if(a[mid]==m)               {                   return mid;               }               if(a[mid]<m)               {                    s = mid+1;               }               else               {                    e = mid-1;               }          }          return ans;    }     public static int bs2(int a[], int s, int e, int m)    {         int ans=-1;         while(s<=e)         {             int mid = (s+e)/2;             if(a[mid]<=m)             {                  s = mid+1;             }             else             {                 ans=mid;                 e = mid-1;             }         }         return ans;    }     public static void process()throws IOException    {         int m = ni();         int n = ni();         int mat[][] = new int[m+1][n+1];         for(int i=1;i<=m;i++)         {             for(int j=1;j<=n;j++)             {                  mat[i][j] = ni();             }         }         int a[] = new int[100050];         boolean b[] = new boolean[100050];         int current=0;         for(int i=2;i<100050;i++)         {              if(b[i]==false)              {                  a[current] = i;                  current++;                  for(int j=i*2;j<100050;j+=i)                  {                       b[j] = true;                  }              }         }         long h[][] = new long[m+1][n+1];         long v[][] = new long[m+1][n+1];          for(int i=1;i<=m;i++)         {              for(int j=1;j<=n;j++)              {                  int in = bs(a,0,current-1,mat[i][j]);                  if(in!=-1)                  {                       h[i][j] = h[i][j-1];                       v[i][j] = v[i-1][j];                  }                  else                  {                       in = bs2(a,0,current-1,mat[i][j]);                       long d = a[in]-mat[i][j];                       h[i][j] = h[i][j-1] + d;                       v[i][j] = v[i-1][j] + d;                  }              }         }          long min1=Long.MAX_VALUE,min2 = Long.MAX_VALUE;         for(int i=1;i<=m;i++)         {              min1 = Math.min(min1,h[i][n]);         }         for(int j=1;j<=n;j++)         {              min2 = Math.min(min2,v[m][j]);         }                 pn(Math.min(min1,min2));     }    	static AnotherReader sc;    static PrintWriter out;    public static void main(String[]args)throws IOException    {        out = new PrintWriter(System.out);        sc=new AnotherReader();        boolean oj = true;     // 	oj = System.getProperty("ONLINE_JUDGE") != null;    // 	if(!oj) sc=new AnotherReader(100);     //     long s = System.currentTimeMillis();                    int t=1;        while(t-->0)            process();        out.flush();        // if(!oj)        //     System.out.println(System.currentTimeMillis()-s+"ms");        System.out.close();      }     static void pn(Object o){out.println(o);}    static void p(Object o){out.print(o);}    static void pni(Object o){out.println(o);System.out.flush();}    static int ni()throws IOException{return sc.nextInt();}    static long nl()throws IOException{return sc.nextLong();}    static double nd()throws IOException{return sc.nextDouble();}    static String nln()throws IOException{return sc.nextLine();}    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}    static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));}    static boolean multipleTC=false;   /////////////////////////////////////////////////////////////////////////////////////////////////////////     static class AnotherReader{BufferedReader br; StringTokenizer st;    AnotherReader()throws FileNotFoundException{    br=new BufferedReader(new InputStreamReader(System.in));}    AnotherReader(int a)throws FileNotFoundException{    br = new BufferedReader(new FileReader("input.txt"));}    String next()throws IOException{    while (st == null || !st.hasMoreElements()) {try{    st = new StringTokenizer(br.readLine());}    catch (IOException  e){ e.printStackTrace(); }}    return st.nextToken(); } int nextInt() throws IOException{    return Integer.parseInt(next());}    long nextLong() throws IOException    {return Long.parseLong(next());}    double nextDouble()throws IOException { return Double.parseDouble(next()); }    String nextLine() throws IOException{ String str = ""; try{    str = br.readLine();} catch (IOException e){    e.printStackTrace();} return str;}}    /////////////////////////////////////////////////////////////////////////////////////////////////////////////}  
