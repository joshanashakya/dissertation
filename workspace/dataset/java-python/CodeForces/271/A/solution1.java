import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.HashSet;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastScanner in = new FastScanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        ABeautifulYear solver = new ABeautifulYear();        solver.solve(1, in, out);        out.close();    }     static class ABeautifulYear {        public void solve(int testNumber, FastScanner fs, PrintWriter out) {            int y = fs.nextInt(), ans = y + 1;            HashSet<Integer> dist = new HashSet<>();            for (int i = y + 1; i <= 10000; i++) {                int t = i;                dist.clear();                boolean yes = true;                while (t > 0) {                    int d = t % 10;                    if (dist.contains(d)) {                        yes = false;                        break;                    }                    dist.add(d);                    t /= 10;                }                if (yes) {                    out.println(i);                    break;                }            }        }     }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream inputStream) {            br = new BufferedReader(new InputStreamReader(inputStream));        }         public String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
