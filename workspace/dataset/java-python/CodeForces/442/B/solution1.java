import java.util.*;import java.io.*;//import java.math.*; public class Task{        //  ..............code begins here.............. static long mod=(long)1e9+7;static void solve() throws  IOException {            int n=int_v(read());            double[] d=new double[n];            double[] d1=new double[n];            String[] s=read().split(" ");            double res=0;            for(int i=0;i<n;i++){                d[i]=Double.parseDouble(s[i]);                res=Math.max(res,d[i]);            }            Arrays.sort(d);            for(int i=0;i<n;i++){                d1[i]=1d-d[i];            }            if(res==1d){                out.write("1.0");return;            }            for(int i=1;i<=n;i++){                for(int j=1;j+i-1<=n;j++){                    double tmp=0,tmp1=1d;                    for(int k=j;k<=j+i-1;k++) tmp1*=d1[k-1];                    for(int k=j;k<=j+i-1;k++){                        tmp+=(double)(tmp1/d1[k-1])*d[k-1];                    }                    res=Math.max(res,tmp);                }            }            out.write(res+"\n");}public static void main(String[] args) throws  IOException{                assign();                int t=1;//int_v(read());                while(t--!=0) solve();                out.flush();} // taking inputsstatic BufferedReader s1;static BufferedWriter out;static String read() throws IOException{String line="";while(line.length()==0){line=s1.readLine();continue;}return line;}static int int_v (String s1){return Integer.parseInt(s1);}static long long_v(String s1){return Long.parseLong(s1);}static void sort(int[] a){List<Integer> l=new ArrayList<>();for(int x:a){l.add(x);}Collections.sort(l);for(int i=0;i<a.length;i++){a[i]=l.get(i);}}static int[] int_arr() throws IOException{String[] a=read().split(" ");int[] b=new int[a.length];for(int i=0;i<a.length;i++){b[i]=int_v(a[i]);}return b;}static long[] long_arr() throws IOException{String[] a=read().split(" ");long[] b=new long[a.length];for(int i=0;i<a.length;i++){b[i]=long_v(a[i]);}return b;}static void assign(){s1=new BufferedReader(new InputStreamReader(System.in));out=new BufferedWriter(new OutputStreamWriter(System.out));}//static String setpreciosion(double d,int k){BigDecimal d1 = new BigDecimal(Double.toString(d));return d1.setScale(k,RoundingMode.HALF_UP).toString();}//UP DOWN HALF_UPstatic int gcd(int a,int b){if(b==0){return a;}return gcd(b,a%b);}static long Modpow(long a,long p,long m){long res=1;while(p>0){if((p&1)!=0){res=(res*a)%m;}p >>=1;a=(a*a)%m;}return res%m;}static long Modmul(long a,long b,long m){return ((a%m)*(b%m))%m;}static long ModInv(long a,long m){return Modpow(a,m-2,m);}//static long nck(int n,int r,long m){if(r>n){return 0l;}return Modmul(f[n],ModInv(Modmul(f[n-r],f[r],m),m),m);}//static long[] f;}             
