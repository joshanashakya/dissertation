import java.util.*;import java.io.*;import static java.lang.Math.*; public class PracticeProblem{    public static FastReader in = new FastReader();    public static PrintWriter out = new PrintWriter(System.out);     public static void main(String[] args)    {        solve();        out.close();    }     public static void solve()    {        int n = in.nextInt();        double[] arr = new double[n];        for (int i = 0; i < n; i++)            arr[i] = in.nextDouble();         Arrays.sort(arr);         if (arr[n - 1] == 1)        {            out.println(1.);            return;        }         double p = 1 - arr[n - 1];        double s = arr[n - 1] / (1 - arr[n - 1]);         for (int i = n - 2; i >= 0; i--)        {            if (s > 1)                break;            p *= 1 - arr[i];            s += arr[i] / (1 - arr[i]);        }         out.println(p * s);     }     /*     * This FastReader code is taken from GeeksForGeeks.com     * https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/     *     * The article was written by Rishabh Mahrsee     */    public static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {            return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
