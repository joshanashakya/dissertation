import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.InputMismatchException;import java.io.IOException;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top * * @author Pradyumn Agrawal coderbond007 */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastReader in = new FastReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskA solver = new TaskA();        solver.solve(1, in, out);        out.close();    }     static class TaskA {        public void solve(int testNumber, FastReader in, PrintWriter out) {            int n = in.nextInt();            String colour = "RGBYW";            int[][] f = new int[5][5];            for (int i = 0; i < n; i++) {                char[] s = in.nextString().toCharArray();                f[colour.indexOf(s[0])][s[1] - '1'] += 1;            }             int ret = 999999999;            for (int i = 0; i < (1 << 5); i++) {                inner:                for (int j = 0; j < (1 << 5); j++) {                    int[][] g = new int[6][6];                    for (int k = 0; k < 5; k++) {                        for (int l = 0; l < 5; l++) {                            int r = i << 31 - k < 0 ? Integer.bitCount(i & (1 << k) - 1) + 1 : 0;                            int c = j << 31 - l < 0 ? Integer.bitCount(j & (1 << l) - 1) + 1 : 0;                            if (f[k][l] > 0 && g[r][c] > 0) {                                continue inner;                            }                            g[r][c] += f[k][l];                        }                    }                    ret = Math.min(ret, Integer.bitCount(i) + Integer.bitCount(j));                }            }            out.println(ret);        }     }     static class FastReader {        private InputStream stream;        private byte[] buf = new byte[8192];        private int curChar;        private int pnumChars;        private FastReader.SpaceCharFilter filter;         public FastReader(InputStream stream) {            this.stream = stream;        }         public int read() {            if (pnumChars == -1) {                throw new InputMismatchException();            }            if (curChar >= pnumChars) {                curChar = 0;                try {                    pnumChars = stream.read(buf);                } catch (IOException e) {                    throw new InputMismatchException();                }                if (pnumChars <= 0) {                    return -1;                }            }            return buf[curChar++];        }         public int nextInt() {            int c = read();            while (isSpaceChar(c))                c = read();            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                if (c == ',') {                    c = read();                }                if (c < '0' || c > '9') {                    throw new InputMismatchException();                }                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public String nextString() {            int c = read();            while (isSpaceChar(c))                c = read();            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                c = read();            } while (!isSpaceChar(c));            return res.toString();        }         public boolean isSpaceChar(int c) {            if (filter != null) {                return filter.isSpaceChar(c);            }            return isWhitespace(c);        }         public static boolean isWhitespace(int c) {            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         public interface SpaceCharFilter {            public boolean isSpaceChar(int ch);         }     }}
