// package codeforces.contests.R253div1; /** * * @author Abhishek Shankhadhar */import java.io.*;import java.util.*; public class A {     InputStream obj;    PrintWriter out;    String check = "";     //Solution !!    void solution() {        int n = inti();        boolean arr[][] = new boolean[5][5];        boolean color[][]=new boolean[5][5];        boolean number[][]=new boolean[5][5];        for (int i = 0; i < n; i++) {            char c = chi(), d = chi();            int a, b;            switch (c) {                case 'R':                    a = 0;                    break;                case 'G':                    a = 1;                    break;                case 'B':                    a = 2;                    break;                case 'Y':                    a = 3;                    break;                default:                    a = 4;                    break;            }            b = d - '0' - 1;            arr[a][b] = true;        }//        pa(arr);        int ans = Integer.MAX_VALUE / 2;                for (int i = 0; i < (1 << 10); i++) {            boolean bits[]=new boolean[10];            int p = i, in = 0, ones = 0;            while (p != 0) {                if ((p & 1) == 1) {                    bits[in]=true;                    ones++;                }                p = p >> 1;                in++;            }//            for(int j=0;j<5;j++){//                for(int k=0;k<5;k++){//                    color[j][k]=number[j][k]=!arr[j][k];//                }//            }            for (int j = 0; j < 5; j++) {                for (int k = 0; k < 5; k++) {                    if (bits[j])                        color[j][k] = true;                    if (bits[k + 5])                        number[j][k] = true;                }            }            int count=0;            for(int j=0;j<5;j++){                for(int k=0;k<5;k++){                    if(arr[j][k] && !number[j][k] && !color[j][k]){                        count++;                    }                    else if(arr[j][k] && number[j][k] && !color[j][k]){                        for(int l=0;l<5;l++){                            if(arr[l][k] && number[l][k] && !color[l][k] && l!=j){                                count++;                            }                        }                    }                    else if(arr[j][k] && !number[j][k] && color[j][k]){                        for(int l=0;l<5;l++){                            if(arr[j][l] && !number[j][l] && color[j][l] && l!=k){                                count++;                            }                        }                    }                }            }            if(count<=1)                ans=Math.min(ans, ones);            color=reset(color);            number=reset(number);        }        out.println(ans);    }     boolean[][] reset(boolean arr[][]) {        for (int i = 0; i < 5; i++) {            for (int j = 0; j < 5; j++) {                arr[i][j] = false;            }        }        return arr;    }     boolean check(int mark[][], int arr[][], int n) {        int ones = 0,rOne=0,cOne=0,zero=0;        for(int i=0;i<5;i++){            ones=0;            for(int j=0;j<5;j++){                if(arr[i][j]==1){                    if(mark[i][j]==1){                        ones++;                    }                    if(mark[i][j]==0){                        zero++;                    }                }            }            if(ones>1)                rOne=ones;        }        for(int i=0;i<5;i++){            ones=0;            for(int j=0;j<5;j++){                if(arr[j][i]==1){                    if(mark[j][i]==1){                        ones++;                    }                }            }            if(ones>1)                cOne=ones;        }        if(zero>1)            return false;                return true;    }    //------->ends !!     public static void main(String[] args) throws IOException {        new Thread(null, new Runnable() {            public void run() {                try {                    new A().ace();                } catch (IOException e) {                    e.printStackTrace();                } catch (StackOverflowError e) {                    System.out.println("RTE");                }            }        }, "1", 1 << 26).start();    }     void ace() throws IOException {        out = new PrintWriter(System.out);        obj = check.isEmpty() ? System.in : new ByteArrayInputStream(check.getBytes());//        obj=check.isEmpty() ? new FileInputStream("location of file") : new ByteArrayInputStream(check.getBytes());//        long t1=System.currentTimeMillis();        solution();//        long t2=System.currentTimeMillis();//        out.println(t2-t1);        out.flush();        out.close();    }    byte inbuffer[] = new byte[1024];    int lenbuffer = 0, ptrbuffer = 0;     int readByte() {        if (lenbuffer == -1) {            throw new InputMismatchException();        }        if (ptrbuffer >= lenbuffer) {            ptrbuffer = 0;            try {                lenbuffer = obj.read(inbuffer);            } catch (IOException e) {                throw new InputMismatchException();            }        }        if (lenbuffer <= 0) {            return -1;        }        return inbuffer[ptrbuffer++];    }     boolean isSpaceChar(int c) {        return (!(c >= 33 && c <= 126));    }     String stri() {        int b = skip();        StringBuilder sb = new StringBuilder();        while (!(isSpaceChar(b))) // when nextLine, (isSpaceChar(b) && b!=' ')        {            sb.appendCodePoint(b);            b = readByte();        }        return sb.toString();    }     int skip() {        int b;        while ((b = readByte()) != -1 && isSpaceChar(b));        return b;    }     int inti() {        int num = 0, b;        boolean minus = false;        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));        if (b == '-') {            minus = true;            b = readByte();        }        while (true) {            if (b >= '0' && b <= '9') {                num = num * 10 + (b - '0');            } else {                return minus ? -num : num;            }            b = readByte();        }    }     long loni() {        long num = 0;        int b;        boolean minus = false;        while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));        if (b == '-') {            minus = true;            b = readByte();        }        while (true) {            if (b >= '0' && b <= '9') {                num = num * 10 + (b - '0');            } else {                return minus ? -num : num;            }            b = readByte();        }    }     float fl() {        return Float.parseFloat(stri());    }     double dou() {        return Double.parseDouble(stri());    }     char chi() {        return (char) skip();    }     int[] arri(int n) {        int a[] = new int[n];        for (int i = 0; i < n; i++) {            a[i] = inti();        }        return a;    }     long[] arrl(int n) {        long a[] = new long[n];        for (int i = 0; i < n; i++) {            a[i] = loni();        }        return a;    }     String[] stra(int n) {        String a[] = new String[n];        for (int i = 0; i < n; i++) {            a[i] = stri();        }        return a;    }     private static void pa(Object... o) {        System.out.println(Arrays.deepToString(o));    }//    uwi mod pow function     public static long pow(long a, long n, long mod) {//		a %= mod;        long ret = 1;        int x = 63 - Long.numberOfLeadingZeros(n);        for (; x >= 0; x--) {            ret = ret * ret % mod;            if (n << 63 - x < 0) {                ret = ret * a % mod;            }        }        return ret;    }     int gcd(int a, int b) {        if (a == 0) {            return b;        }        return gcd(b % a, a);    }}
