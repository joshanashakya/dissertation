import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.Arrays;import java.util.Random;import java.util.StringTokenizer;Â public class Solution{		    public static void main(String[] args) throws IOException {         	FastScanner fs = new FastScanner();    	PrintWriter out = new PrintWriter(System.out);    	    		    		    	int tt = 1;    	while(tt-->0) {    		    		int hy = fs.nextInt(), ay = fs.nextInt(), dy = fs.nextInt();    		int hm = fs.nextInt(), am = fs.nextInt(), dm = fs.nextInt();    		    		int H = fs.nextInt(), A = fs.nextInt(), D = fs.nextInt();    		    		int min = (int)1e9;    		    		for(int atk=ay;atk<=200;atk++) {    			for(int def=dy;def<=100;def++) {    				if(atk<=dm) continue;    				int t = (hm+atk-dm-1)/(atk-dm);    				int reqhp = t*Math.max(0, am-def) + 1;    				int coins = (atk-ay)*A + (def-dy)*D + Math.max(0, reqhp-hy)*H;    				if(coins<min) {    					min = coins;    				}    			}    		}    		    		out.println(min);    		    		    		    		    		    		    		    	}    	    		    		    		    	out.close();    		    }                              static final Random random=new Random();    	    static void ruffleSort(int[] a) {    	int n=a.length;//shuffle, then sort     	for (int i=0; i<n; i++) {    		int oi=random.nextInt(n); int temp=a[oi];    		a[oi]=a[i]; a[i]=temp;    	}    	Arrays.sort(a);    }             	    	    static class FastScanner{    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));    	StringTokenizer st = new StringTokenizer("");         	public String next(){    		while(!st.hasMoreElements()){    			try{    				st = new StringTokenizer(br.readLine());    			} catch(IOException e){    				e.printStackTrace();    			}    		}    		return st.nextToken();    	}    		    	public String nextLine() throws IOException {    		return br.readLine();    	}    		    	public int nextInt(){    		return Integer.parseInt(next());    	}         	public int[] readArray(int n){    		int[] a = new int[n];    		for(int i=0;i<n;i++)    			a[i] = nextInt();    		return a;    	}    		    	public long nextLong() {    		return Long.parseLong(next());    	}    		    	public char nextChar() {    		return next().toCharArray()[0];    	}    }   	}
