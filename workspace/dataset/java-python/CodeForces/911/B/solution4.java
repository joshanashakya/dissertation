import java.io.BufferedReader;import java.io.InputStreamReader;import java.util.StringTokenizer; public class Two_Cake {    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (Exception e) {                     e.printStackTrace();                }             }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (Exception e) {                e.printStackTrace();            }            return str;        }         long nextLong() {            return Long.parseLong(next());        }    }     public static void main(String[] args) {        FastReader in = new FastReader();        int n = in.nextInt();        int a = in.nextInt();        int b = in.nextInt();         System.out.println(Solve(n,a,b));    }    static int Solve(int n,int a,int b){        int l = 1;        int r = Math.min(a,b);        int ans = 0;        while(l <= r){            int mid = (l + r)/2;            if(good(mid,n,a,b)){                l = mid + 1;                ans = mid;            }else{                 r = mid - 1;            }        }        return ans;    }    static boolean good(int mid,int n,int a,int b){        return a/mid + b/mid >= n;    } }
