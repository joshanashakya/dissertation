import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{     public static void main(String[] args)    {         FastScanner input = new FastScanner();        int n = input.nextInt();        int k = input.nextInt();        int a[] = new int[n];            for (int i = 0; i < n; i++) {            a[i] = input.nextInt();                                }         if(n<=k)        {            System.out.println(a[n-1]);        }                else        {            int i = 0;            int j = n-(k*2-n)-1;            int max= Integer.MIN_VALUE;            while(i<=j)            {                max = Math.max(max, a[i]+a[j]);                i++;                j--;            }            max = Math.max(max, a[a.length-1]);            System.out.println(max);                    }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
