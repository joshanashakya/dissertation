import java.util.*;import java.io.*;import java.math.*;public class Main7{	static int mod=1000000007;	static class Pair    {        int x;        int y;        Pair(int x, int y)        {            this.x=x;            this.y=y;        }    }    public static long pow(long a, long b,long m)    {        long result=1;        while(b>0)        {            if (b % 2 != 0)            {                result=(result*a)%m;                b--;            }             a=(a%mod*a%m)%m;            b /= 2;        }           return result;    }	public static long pow1(long a, long b)    {        long result=1;        while(b>0)        {            if (b % 2 != 0)            {                result=(result*a);                b--;            }             a=(a%mod*a);            b /= 2;        }           return result;    }	public static int[] sort(int[] a)    {        int n=a.length;        ArrayList<Integer> ar=new ArrayList<>();        for(int i=0;i<a.length;i++)        {            ar.add(a[i]);        }        Collections.sort(ar);        for(int i=0;i<n;i++)        {            a[i]=ar.get(i);        }        return a;    }	static int[] tree;	static ArrayList<ArrayList<Integer>> graph;	static public void main(String args[])throws IOException	{		int tt=1;		StringBuilder sb=new StringBuilder();		for(int ttt=1;ttt<=tt;ttt++)		{			int n=i();			int m=i();			char[][] a=new char[n][m];			int startx=0,starty=0,endx=0,endy=0;			for(int i=0;i<n;i++)			{				String s=s();				for(int j=0;j<m;j++)				{					a[i][j]=s.charAt(j);					if(a[i][j]=='S')					{						startx=i;						starty=j;					}					if(a[i][j]=='T')					{						endx=i;						endy=j;					}				}			}			if(startx==endx)			{				int flag=0;				for(int i=Math.min(starty,endy);i<Math.max(endy,starty);i++)				{					if(a[startx][i]=='*')						flag=1;				}				if(flag==0)					pln("YES");				else					pln("NO");			}			else if(starty==endy)			{				int flag=0;				for(int i=Math.min(startx,endx);i<Math.max(endx,startx);i++)				{					if(a[i][starty]=='*')						flag=1;				}				if(flag==0)					pln("YES");				else					pln("NO");			}			else			{				int ans=0;				for(int col=0;col<m;col++)				{					int flag=0;					for(int i=Math.min(startx,endx);i<=Math.max(startx,endx);i++)					{						if(a[i][col]=='*')						{							flag=1;						}					}					if(flag==0)					{						for(int i=Math.min(col,starty);i<=Math.max(col,starty);i++)						{							if(a[startx][i]=='*')								flag=1;						}						if(flag==0)						{							for(int i=Math.min(col,endy);i<=Math.max(col,endy);i++)							{								if(a[endx][i]=='*')									flag=1;							}							if(flag==0)							{								ans=1;								pln("YES");								break;							}						}											}				}				if(ans!=1)				{					for(int row=0;row<n;row++)					{						int flag=0;						for(int i=Math.min(starty,endy);i<=Math.max(starty,endy);i++)						{							if(a[row][i]=='*')							{								flag=1;							}						}						if(flag==0)						{							for(int i=Math.min(row,startx);i<=Math.max(row,startx);i++)							{								if(a[i][starty]=='*')									flag=1;							}							if(flag==0)							{								for(int i=Math.min(row,endx);i<=Math.max(row,endx);i++)								{									if(a[i][endy]=='*')										flag=1;								}								if(flag==0)								{									ans=1;									pln("YES");									break;								}							}						}					}				}				if(ans!=1)					pln("NO");				}		}		System.out.print(sb.toString());	}Â 				/**/	static InputReader in=new InputReader(System.in);	static OutputWriter out=new OutputWriter(System.out);	public static long l()	{		String s=in.String();		return Long.parseLong(s);	}	public static void pln(String value)	{		System.out.println(value);	}	public static int i()	{		return in.Int();	}	public static String s()	{		return in.String();	}}	class InputReader 	{		private InputStream stream;		private byte[] buf = new byte[1024];		private int curChar;		private int numChars;		private SpaceCharFilter filter;	 		public InputReader(InputStream stream) {			this.stream = stream;		}	 		public int read() {			if (numChars== -1)				throw new InputMismatchException();			if (curChar >= numChars) {				curChar = 0;				try {					numChars = stream.read(buf);				} catch (IOException e) {					throw new InputMismatchException();				}				if (numChars <= 0)					return -1;			}			return buf[curChar++];		}	 		public int Int() {			int c = read();			while (isSpaceChar(c))				c = read();			int sgn = 1;			if (c == '-') {				sgn = -1;				c = read();			}			int res = 0;			do {				if (c < '0' || c > '9')					throw new InputMismatchException();				res *= 10;				res += c - '0';				c = read();			} while (!isSpaceChar(c));			return res * sgn;		}	 		public String String() {			int c = read();			while (isSpaceChar(c))				c = read();			StringBuilder res = new StringBuilder();			do {				res.appendCodePoint(c);				c = read();			} while (!isSpaceChar(c));			return res.toString();		}	 		public boolean isSpaceChar(int c) {			if (filter != null)				return filter.isSpaceChar(c);			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;		}	 		public String next() {			return String();		}	 		public interface SpaceCharFilter {			public boolean isSpaceChar(int ch);		}	}	 	class OutputWriter {		private final PrintWriter writer;	 		public OutputWriter(OutputStream outputStream) {			writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));		}	 		public OutputWriter(Writer writer) {			this.writer = new PrintWriter(writer);		}	 		public void print(Object...objects) {			for (int i = 0; i < objects.length; i++) {				if (i != 0)					writer.print(' ');				writer.print(objects[i]);			}		}	 		public void printLine(Object...objects) {			print(objects);			writer.println();		}	 		public void close() {			writer.close();		}	 		public void flush() {			writer.flush();		}	 		}	 		class IOUtils {	 		public static int[] readIntArray(InputReader in, int size) {			int[] array = new int[size];			for (int i = 0; i < size; i++)				array[i] = in.Int();			return array;		}	 	} 
