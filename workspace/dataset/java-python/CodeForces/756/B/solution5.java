import java.io.*;import java.util.*; public class Main {     static TreeSet<Integer> set = new TreeSet<>();    static int[] a;    static int n;    static HashMap<Integer, Integer> map = new HashMap<>();     public static void main(String[] args) throws Exception {        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(System.out);        n = Integer.parseInt(in.readLine());        a = new int[n+1];        set.add((int) -1e8);        a[0] = (int)-1e8;        map.put((int)-1e8, 0);        for (int i = 1; i <= n; i++) {            a[i] = Integer.parseInt(in.readLine());            set.add(a[i]);            map.put(a[i], i);        }        int[] cost = new int[n+1];        for (int i = 1; i <= n; i++) {            cost[i] = getCost(i);        }        for (int i = 1; i <= n; i++) {            out.println(cost[i]-cost[i-1]);        }        out.close();    }     static int[] dp = new int[100001];    static int getCost(int pos) {        if (pos <= 0) {            return 0;        }        if (dp[pos] > 0) {            return dp[pos];        }        int time = a[pos];        int res = Integer.MAX_VALUE;        res = Math.min(res, getCost(map.get(set.lower(time))) + 20);        res = Math.min(res, getCost(map.get(set.lower(time - 89))) + 50);        res = Math.min(res, getCost(map.get(set.lower(time - 1439))) + 120);        dp[pos] = res;        return res;    } }/*  */
