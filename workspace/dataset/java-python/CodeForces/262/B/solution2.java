import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class RomaAndChangingSigns {     public static void main(String[] args) {        FastReader reader = new FastReader();         int n = reader.nextInt();        int k = reader.nextInt();        int ed = n-1, st = 0;        int a[] = new int[n];        long sum = 0;         for (int i = 0; i < n; i++)            a[i] = reader.nextInt();         while (st < ed) {            if (a[st] < 0 && Math.abs(a[st]) >= a[ed] && k > 0) {                k--;                sum += Math.abs(a[st++]);            } else {                sum += a[ed--];            }        }         for (int i = st; i <= ed; i++) {            sum += a[i];        }         if (k > 0) {            sum -= a[ed];            sum += (k%2 == 0) ? a[ed] : a[ed]*-1;        }        System.out.println(sum);    }     static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            }            catch (IOException e) {                e.printStackTrace();            }            return str;        }    }}
