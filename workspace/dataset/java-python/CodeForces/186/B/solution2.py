import sysimport mathfrom heapq import *;input = sys.stdin.readlinefrom functools import cmp_to_key; def pi():    return(int(input()))def pl():    return(int(input(), 16))def ti():    return(list(map(int,input().split())))def ts():    s = input()    return(list(s[:len(s) - 1]))def invr():    return(map(int,input().split()))mod = 1000000007;f = [];def fact(n,m):    global f;    f = [1 for i in range(n+1)];    f[0] = 1;    for i in range(1,n+1):        f[i] = (f[i-1]*i)%m; def fast_mod_exp(a,b,m):    res = 1;    while b > 0:        if b & 1:            res = (res*a)%m;        a = (a*a)%m;        b = b >> 1;    return res; def inverseMod(n,m):    return fast_mod_exp(n,m-2,m); def ncr(n,r,m):    if n < 0 or r < 0 or r > n: return 0;    if r == 0: return 1;    return ((f[n]*inverseMod(f[n-r],m))%m*inverseMod(f[r],m))%m; def main():    B(); def cmp(a,b):    if a[1] < b[1]: return 1;    if a[1] > b[1]: return -1;    if a[1] == b[1]:        if a[0] < b[0]: return -1;        else: return 1; def B():    [n,t1,t2,k] = ti();    a,b = [],[];    for i in range(n):        [x,y] = ti();        a.append(x);        b.append(y);    pair = [0 for i in range(n)];    for i in range(n):        pair[i] = [i,round(max(t1*a[i]*(100-k)/100+t2*b[i], t1*b[i]*(100-k)/100+t2*a[i]),2)];     pair.sort(key=cmp_to_key(cmp));        for i in range(n):        print(pair[i][0]+1, pair[i][1] if len(str(pair[i][1]).split('.')[1]) == 2 else str(pair[i][1])+'0'); main();
