# link: https://codeforces.com/contest/186/problem/B from collections import defaultdict if __name__ == "__main__":    n,t1,t2,k = map(int, input().split())    results = defaultdict(list)    i = 1    while n:        # 2 cases        # consider t1 first and then t2        a,b = map(int, input().split())        first_height = ((a*t1) - (a*t1*k/100)) + (b*t2)        second_height = ((b*t1) - (b*t1*k/100)) + (a*t2)        height = round(max(first_height, second_height), 2)        results[height].append(i)        i += 1        n -= 1    for key in sorted(results, reverse = True):        for i in results[key]:            s = str(key)            s = s.split('.')            if len(s[-1]) == 1:                print(i, s[0]+'.'+s[-1]+'0')            else:                    print(i,key)
