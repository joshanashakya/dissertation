import java.util.*;import java.io.*;  public class A {  	public static void main(String[]args)throws IOException {		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out); 		int n = sc.nextInt(), t1 = sc.nextInt(), t2 = sc.nextInt(), k = sc.nextInt();		List<Pair>list = new ArrayList<>();		int t = 0;		while (t++ < n) {			int ai = sc.nextInt(), bi = sc.nextInt();			double v1 = (1.00 * ai * t1) - (1.00 * ai * t1 * k / 100) + (bi * t2);			double v2 = (1.00 * bi * t1) - (1.00 * bi * t1 * k / 100) + (ai * t2);			list.add(new Pair(t, Math.max(v1, v2)));		} 		list.sort(new comp());		for (Pair p : list) {			out.print(p.i + " ");			out.printf("%.2f", p.h);			out.println();		}		out.close();	}}  // public static int  gcd(int a, int b) {// 	if (a == 0)// 		return b; // 	return gcd(b % a, a);// } class Pair {	int i;	double h;	Pair(int i, double h) {		this.i = i;		this.h = h;	}}  class comp implements Comparator<Pair> {	public int compare(Pair p1, Pair p2) {		if (p1.h == p2.h)			return p1.i - p2.i; 		else if (p2.h > p1.h)			return 1; 		return -1;	}}  class FastReader { 	BufferedReader br;	StringTokenizer st; 	public FastReader() {		br = new BufferedReader(new InputStreamReader(System.in));	} 	String next() {		while (st == null || !st.hasMoreElements()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException  e) {				e.printStackTrace();			}		}		return st.nextToken();	} 	int nextInt() {		return Integer.parseInt(next());	} 	int [] nextIntArray(int n) {		int [] arr = new int[n];		for (int i = 0; i < n; i++)			arr[i] = nextInt(); 		return arr; 	}  	long nextLong() {		return Long.parseLong(next());	} 	long [] nextLongArray(int n) {		long [] arr = new long[n];		for (int i = 0; i < n; i++)			arr[i] = nextLong(); 		return arr; 	} 	double nextDouble() {		return Double.parseDouble(next());	} 	String nextLine() {		String str = "";		try {			str = br.readLine();		} catch (IOException e) {			e.printStackTrace();		}		return str;	} }
