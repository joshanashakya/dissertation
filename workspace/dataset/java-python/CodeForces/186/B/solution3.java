import java.math.BigDecimal;import java.text.DecimalFormat;import java.util.*; public class Main {    public static class Pair implements Comparable<Pair> {        public int number;        public double result;         public Pair(int number, double result) {            this.number = number;            this.result = result;        }         @Override        public String toString() {            return number + " " + result;        }         @Override        public int compareTo(Pair pair) {            if (pair.result < this.result) return -1;            else if (pair.result > this.result) return 1;            else if (pair.result == this.result) {                if (pair.number > this.number) return -1;                else if (pair.number < this.number) return 1;            }            return 0;        }    }     public static class Speed {        public int a;        public int b;         public Speed(int a, int b) {            this.a = a;            this.b = b;        }    }     public static void main(String[] args) {        Scanner in = new Scanner(System.in);        int n = in.nextInt();        int t1 = in.nextInt();        int t2 = in.nextInt();        int k = in.nextInt();        List<Speed> list = new ArrayList<>();        for (int i = 0; i < n; i++) {            int x = in.nextInt();            int y = in.nextInt();            Speed s = new Speed(x, y);            list.add(s);        }         PriorityQueue<Pair> queue = new PriorityQueue<>();        DecimalFormat df = new DecimalFormat("0.00");        for (int i = 0; i < n; i++) {            int x = list.get(i).a;            int y = list.get(i).b;            double res1 = (x * t1 - ((double) k / 100 * (x * t1))) + y * t2;            double res2 = (y * t1 - ((double) k / 100 * (y * t1))) + x * t2;            double value = Math.max(res1, res2);            double round = Math.round(value * 100.0) / 100.0;             Pair pair = new Pair(i + 1, round);            queue.add(pair);        }         for (int i = 0; i < n; i++) {            Pair p = queue.poll();            System.out.println(p.number + " " + df.format(p.result));         }         in.close();     }}       
