import sys def solve():    n, k, = rv()    giv = [[False if val == '.' else True for val in list(input())] for _ in range(n)]    maxsize = pow(n, k)    tab = [[False] * maxsize for _ in range(maxsize)]    for step in range(k):        size = maxsize // pow(n, step)        for row in range(0, maxsize, size):            for col in range(0, maxsize, size):                for r in range(row, row + size):                    for c in range(col, col + size):                        rtrans = (r - row) * n // size                        ctrans = (c - col) * n // size                        oldval = giv[rtrans][ctrans]                        if not tab[r][c] and oldval:                            tab[r][c] = True    print('\n'.join(''.join('*' if ch else '.' for ch in line) for line in tab))  def prt(l): return print(''.join(l))def rv(): return map(int, input().split())def rl(n): return [list(map(int, input().split())) for _ in range(n)]if sys.hexversion == 50594544 :    sys.stdin = open("test.txt")else:    sys.stdin = open("input.txt")    sys.stdout = open("output.txt", 'w')solve()
