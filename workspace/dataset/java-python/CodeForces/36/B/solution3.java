import java.io.File;import java.io.FileNotFoundException;import java.io.PrintWriter;import java.util.Scanner; /*Name: Abdulaziz Waleed AlshememryID: 1537869E-Mail: azzoz_4_ever@outlook.comDate: * */public class Main {     public static void main(String[] args) throws FileNotFoundException {        File read = new File("input.txt");                Scanner input = new Scanner(read);        PrintWriter output = new PrintWriter("output.txt");                int n = input.nextInt(), k = input.nextInt();        char[][] neverChanged = new char[n][n];        for (int i = 0; i < n; i++) {            String temp = input.next();            neverChanged[i] = temp.toCharArray();        }        char[][] lastPage = neverChanged.clone();        for (int i = 1; i < k; i++) {            char[][] newPage = new char[(int) Math.pow(n, i + 1)][(int) Math.pow(n, k)];            for (int j = 0, x = 0; j < newPage.length; j += n, x++) {                for (int w = 0, y = 0; w < newPage.length; w += n, y++) {                    newPage[j][w] = lastPage[x][y];                    int tempJ = j;                    if (newPage[j][w] == '.') {                        for (int l = 0; l < neverChanged.length; l++) {                            int tempW = w;                            for (int m = 0; m < neverChanged[l].length; m++) {                                newPage[tempJ][tempW] = neverChanged[l][m];                                tempW++;                            }                            tempJ++;                        }                    } else {                        for (int l = 0; l < neverChanged.length; l++) {                            int tempW = w;                            for (int m = 0; m < neverChanged[l].length; m++) {                                newPage[tempJ][tempW] = '*';                                tempW++;                            }                            tempJ++;                        }                    }                }            }            lastPage = newPage.clone();        }        for (int i = 0; i < lastPage.length; i++) {            output.println(lastPage[i]);        }        output.close();    } }
