import java.io.*;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;import java.util.StringTokenizer; public class A_MagicalBoxes_1600 {    public static void main(String[] args) {        MyScanner sc = new MyScanner();        out = new PrintWriter(new BufferedOutputStream(System.out));        int N = sc.nextInt();        Map<Integer, Integer> boxes = new HashMap<>();        int largest = 0;        for(int i = 0; i < N; i++) {            int temp1 = Integer.parseInt(sc.next());            int temp2 = Integer.parseInt(sc.next());            if(temp1 > largest) largest = temp1;            boxes.put(temp1, temp2);        }        int smallestBox = largest+1;        for(int i : boxes.keySet()) {            while(boxes.get(i) > Math.pow(4, smallestBox-i)) {                smallestBox++;            }        }         System.out.println(smallestBox);          out.close();    }     public static PrintWriter out;     public static class MyScanner {        BufferedReader br;        StringTokenizer st;         public MyScanner() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine(){            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }     }}
