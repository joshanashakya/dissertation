from os import pathimport sys,time# mod = int(1e9 + 7)# import refrom math import ceil, floor,gcd,log,log2 ,factorialfrom collections import defaultdict , Counter,dequefrom itertools import permutations# from bisect import bisect_left, bisect_rightmaxx = float('inf')#----------------------------INPUT FUNCTIONS------------------------------------------#I = lambda :int(sys.stdin.buffer.readline())tup= lambda : map(int , sys.stdin.buffer.readline().split())lint = lambda :[int(x) for x in sys.stdin.buffer.readline().split()]S = lambda: sys.stdin.readline().replace('\n', '').strip()def grid(r, c): return [lint() for i in range(r)]stpr = lambda x : sys.stdout.write(f'{x}' + '\n')star = lambda x: print(' '.join(map(str, x)))# input = sys.stdin.readlinelocalsys = 0start_time = time.time()if (path.exists('input.txt')):	sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');#left shift --- num*(2**k) --(k - shift)n , m = tup()ls = lint()ls.sort()tot  , req , prevh =0 ,0 , 0for i in ls:	tot+=i	req+=1	if i > prevh:		prevh+=1req+= ls[n-1] - prevhprint(tot - req)     if localsys:	print("\n\nTime Elased :",time.time() - start_time,"seconds")
