import java.util.*;import java.io.*;   public class A {  	public static void main(String[]args)throws IOException {		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out);		String dra = sc.next();		String dre = sc.next();		int drazil = dra.length() - dra.replaceAll("\\+", "").length() - (dra.length() - dra.replaceAll("\\-", "").length());		int dreamoon = dre.length() - dre.replaceAll("\\+", "").length() - (dre.length() - dre.replaceAll("\\-", "").length());		int des = drazil - dreamoon;		int count = 0;		int unrex = dre.length() - dre.replaceAll("\\?", "").length();		for (int i = (int)Math.pow(2, unrex) - 1 ; i >= 0; i--) {			int plus = Integer.bitCount(i);			int minus = -1 * ( unrex - plus);			if (plus + minus == des)				count++;		}		out.println((double)count / Math.pow(2, unrex));		out.close();	}} class FastReader { 	BufferedReader br;	StringTokenizer st; 	public FastReader() {		br = new BufferedReader(new InputStreamReader(System.in));	} 	String next() {		while (st == null || !st.hasMoreElements()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException  e) {				e.printStackTrace();			}		}		return st.nextToken();	} 	int nextInt() {		return Integer.parseInt(next());	} 	int [] nextIntArray(int n) {		int [] arr = new int[n];		for (int i = 0; i < n; i++)			arr[i] = nextInt(); 		return arr; 	}  	long nextLong() {		return Long.parseLong(next());	} 	long [] nextLongArray(int n) {		long [] arr = new long[n];		for (int i = 0; i < n; i++)			arr[i] = nextLong(); 		return arr; 	} 	double nextDouble() {		return Double.parseDouble(next());	} 	String nextLine() {		String str = "";		try {			str = br.readLine();		} catch (IOException e) {			e.printStackTrace();		}		return str;	} }
