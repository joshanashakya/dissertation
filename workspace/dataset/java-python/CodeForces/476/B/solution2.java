import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class B476M2{     static int mod=(int)(1e9+7);    static long MOD=(long)(1e9+7);    static FastReader in=new FastReader();    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));            public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {						char a[]=in.nextLine().toCharArray();						char b[]=in.nextLine().toCharArray();            int n=a.length;            long pos=0;            long ap=0;            long am=0;                        int bp,bm,bq;            bp=bm=bq=0;                        for(int i=0;i<n;i++)            {				if(a[i]=='+')				{					pos++;					ap++;				}				else 				{					pos--;					am++;				}								if(b[i]=='+')bp++;				else if(b[i]=='-')bm++;				else bq++;			}																		if(ap>bp+bq||am>bm+bq||bm>am||bp>ap)			{				pr.println(0);				continue;											}							if(bq==0)			{				pr.println(1);				continue;			}							long dif=Math.max(am-bm,ap-bp);			//pr.println(dif);					double req=1;			for(long i=1;i<=bq;i++)			{				req*=0.5;			}			double val1=fact(bq);			double val2=fact(dif);			double val3=fact(bq-dif);						double ways=(val1)/(val2*val3);						//pr.println(ways+" "+req);			req*=ways;						pr.println(req);         }        pr.flush();            }        static long fact(long a)    {		long r=1;		for(long i=1;i<=a;i++)		{			r*=i;		}		return r;	}                   static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }   
