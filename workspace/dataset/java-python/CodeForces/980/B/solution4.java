//Code by Sounak, IIESTimport java.io.*;import java.math.*;import java.util.*;import java.util.Arrays;public class Test1{    public static void main(String args[])throws IOException{        FastReader sc = new FastReader();        StringBuilder sb = new StringBuilder();        int n=sc.nextInt();        int k=sc.nextInt();        char a[][]=new char[4][n];        int i,j=0;        System.out.println("YES");        for(i=0;i<4;i++)        {            for(j=0;j<n;j++)            a[i][j]='.';        }        if(k%2==1)        {            a[1][n/2]='#';            k--;        }        else if(k==2*(n-2))        {            a[2][n/2]='#';            a[1][n/2]='#';            k-=2;        }        for(i=1;i<n/2;i++)        {            if(k<=0)            break;            a[1][i]='#';            a[1][n-1-i]='#';            k-=2;        }        for(i=1;i<n/2;i++)        {            if(k<=0)            break;            a[2][i]='#';            a[2][n-1-i]='#';            k-=2;        }        if(k>0)        a[2][n/2]='#';        for(i=0;i<4;i++)        {            for(j=0;j<n;j++)            System.out.print(a[i][j]);            System.out.println();        }    }    public static long pow(long x, long n)    {        long res = 1l;         while (n>0)         {             if ((n & 1)>0)             res = (res * x) % 1000000007l;             x = (x * x) % 1000000007l;             n >>= 1;         }        return res;    }    public static long gcd(long a, long b)     {         if (a == 0)             return b;                   return gcd(b%a, a);     }}  class FastReader {    BufferedReader br;    StringTokenizer st;     public FastReader() { br = new BufferedReader(new InputStreamReader(System.in)); }    String next() {        while (st == null || !st.hasMoreElements()) {            try {                st = new StringTokenizer(br.readLine());            } catch (IOException e) {                e.printStackTrace();            }        }        return st.nextToken();    }    int nextInt() { return Integer.parseInt(next()); }    long nextLong() { return Long.parseLong(next()); }    double nextDouble() { return Double.parseDouble(next()); }    String nextLine() {        String str = "";        try {            str = br.readLine();        } catch (IOException e) {            e.printStackTrace();        }        return str;    }}
