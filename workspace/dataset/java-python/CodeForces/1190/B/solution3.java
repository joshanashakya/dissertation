import java.io.*;import java.util.*; public class Drogon {    public static void main(String[] args) throws Exception {        FastReader sc = new FastReader();        int n=sc.nextInt();        int arr[]=new int[n];        long sum=0;        HashMap<Integer,Integer> map=new HashMap<>();        for (int i=0;i<n;i++){            arr[i]=sc.nextInt();            map.put(arr[i],map.getOrDefault(arr[i],0)+1);        }        int c=0;        for (int i:map.keySet()){            if (map.get(i)>=2)c++;        }        boolean t=true;        if (c>1){            System.out.println("cslnb");            return;        }        if (c==1){            for (int i:map.keySet()){                if (map.get(i)>2){                    System.out.println("cslnb");                    return;                }            }            int x=-1;            for (int i:map.keySet()){                if (map.get(i)==2){                    x=i;                }            }            if (x==0){                System.out.println("cslnb");                return;            }            if (map.containsKey(x-1)){                System.out.println("cslnb");                return;            }            for (int i=0;i<n;i++){                if (arr[i]==x){                    arr[i]--;                    break;                }            }            t=false;        }        long sum2=0;        for (int i=0;i<n;i++){            sum2+=i;            sum+=arr[i];        }        long diff=sum-sum2;        if (diff%2==0){            if (!t){                System.out.println("sjfnb");            }else System.out.println("cslnb");        }else {            if (!t){                System.out.println("cslnb");            }else System.out.println("sjfnb");        }    }    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }}
