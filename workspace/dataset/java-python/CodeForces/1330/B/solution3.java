import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer;  public class Zad1330B {	static int[] a;	public static void main(String[] args) {		// TODO Auto-generated method stub		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out);				int test = sc.nextInt();		while(test-->0) {			StringBuilder f =  new StringBuilder();			int n = sc.nextInt();			a = new int[n+1];			int max = -1;			int posmax = -1;			for(int i = 1;i<=n;i++) {				a[i] = sc.nextInt();				if(a[i]>max) {					posmax = i;					max = a[i];				}			}			if(n==2) {				if(a[1]==a[2] && a[1]==1) {					out.println(1);					out.println(1+" "+1);				} else {					out.println(0);				}				continue;			}			if(a[posmax]<n/2+n%2) {				out.println(0);				continue;			}			int answer = 0;			boolean isAns = true;			boolean[] isHad = new boolean[n+1]; 			for(int i = 1;i<=a[posmax];i++) {				if(!isHad[a[i]]) {					isHad[a[i]] = true;				} else {					isAns = false;					break;				}			}			for(int i = 1;i<=a[posmax];i++) {				if(!isHad[i]) {					isAns = false;					break;				}			}			if(isAns) {				if(!isGood(a[posmax]+1,n)) {									} else {					f.append((a[posmax])+" "+(n-a[posmax]));					answer++;				}			}			setZero(isHad);			isAns = true;			for(int i = n;i>n-a[posmax];i--) {				if(!isHad[a[i]]) {					isHad[a[i]] = true;				} else {					isAns = false;					break;				}			}			for(int i = a[posmax];i>n-a[posmax];i--) {				if(!isHad[i]) {					isAns = false;					break;				}			}			if(isAns) {				if(!isGood(1,n-a[posmax])) { 				} else {					String s = (n-a[posmax])+" "+(a[posmax]);					if(s.equals(f.toString())) {						out.println(1);						out.println(s);						continue;					}					if(answer==1)f.append("\n");					f.append((n-a[posmax])+" "+(a[posmax]));					answer++;				}			}			if(answer==0) {				out.println(0);				continue;			} else	{				out.println(answer+"\n"+f);			}		}		out.close();	}	static boolean isGood(int l, int r) {		boolean[] isHad = new boolean[r+2-l]; 		for(int i = l;i<=r;i++) {			if(a[i]<=r-l+1 && !isHad[a[i]]) {				isHad[a[i]] = true;			} else {				return false;			}		}		for(int i = 1;i<isHad.length;i++) {			if(!isHad[i]) return false;		}		return true;	}	static void setZero(boolean[] a) {		for(int i = 0;i<a.length;i++) a[i] = false;	}	static class FastReader 	{ 		BufferedReader br; 		StringTokenizer st;  		public FastReader() 		{ 			br = new BufferedReader(new					InputStreamReader(System.in)); 		}  		String next() 		{ 			while (st == null || !st.hasMoreElements()) 			{ 				try				{ 					st = new StringTokenizer(br.readLine()); 				} 				catch (IOException e) 				{ 					e.printStackTrace(); 				} 			} 			return st.nextToken(); 		}  		int nextInt() 		{ 			return Integer.parseInt(next()); 		}  		long nextLong() 		{ 			return Long.parseLong(next()); 		}  		double nextDouble() 		{ 			return Double.parseDouble(next()); 		}  		String nextLine() 		{ 			String str = ""; 			try			{ 				str = br.readLine(); 			} 			catch (IOException e) 			{ 				e.printStackTrace(); 			} 			return str; 		} 	} }
