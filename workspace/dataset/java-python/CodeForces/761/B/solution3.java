import java.io.*;import java.util.*; public class Solution{        public static void main(String[] args) throws Exception{        int[] nl = in.readA();        int n = nl[0], L = nl[1];        int[] k = in.readA();        int[] s = in.readA();         int[] dk = calcdist(k, L);        int[] ds = calcdist(s, L);         for(int i = 0; i < n; i++){            boolean valid = true;            for(int j = 0; j < n; j++){                if(dk[(i+j)%n] != ds[j])                    valid = false;            }            if(valid){                System.out.println("YES");                return;            }        }        System.out.println("NO");    }    public static int[] calcdist(int[] A, int L){        int[] dist = new int[A.length];        int n = A.length;        for(int i = 0; i < n-1; i++){            dist[i] = A[i+1]-A[i];        }        dist[n-1] = L-A[n-1]+A[0];        return dist;    }     static Inputer in;    static {        in = new Inputer();    }     static class Inputer{        BufferedReader br;        Inputer(){            try{                br = new BufferedReader(new InputStreamReader(System.in));            }            catch(Exception e){}        }        public int readInt() throws Exception{            return Integer.parseInt(readLine());        }        public long readLong() throws Exception{            return Long.parseLong(readLine());        }        public int[] readA(String delim) throws Exception{            String[] s = readLine().split(delim);            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public int[] readA() throws Exception{            String[] s = readLine().split("\\s+");            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public long[] readLA() throws Exception{            String[] s = readLine().split("\\s+");            long[] A = new long[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Long.parseLong(s[i]);            return A;        }        public String readLine() throws Exception{            return br.readLine();        }        public int[] copyA(int[] A){            int[] B = new int[A.length];            for(int i= 0 ; i < A.length; i++)                B[i] = A[i];            return B;        }    }    static void shuffle(int[] A){        int n = A.length;        Random rand = new Random();        for(int t = 0; t < A.length; t++){            int i1 = rand.nextInt(n);            int i2 = rand.nextInt(n);            int tmp = A[i1];            A[i1] = A[i2];            A[i2] = tmp;        }    }}
