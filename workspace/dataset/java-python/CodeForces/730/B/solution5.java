import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.sql.Array;import java.util.ArrayList;import java.util.StringTokenizer;  public class Abood3A {  	public static void main(String[] args) throws Exception{ 		Scanner sc = new Scanner(System.in);		PrintWriter out = new PrintWriter(System.out); 		int T = sc.nextInt();				for (int i = 0; i < T; i++) {			int n = sc.nextInt();			ArrayList<Integer> min = new ArrayList<>();			ArrayList<Integer> max = new ArrayList<>();						for (int j = 1; j <= n; j+=2) {				if(j == n) {					max.add(j);					min.add(j);					continue;				}				out.println("? " + j + " " + (j + 1));				out.flush();				if(sc.next().charAt(0) == '<') {					min.add(j);					max.add(j + 1);				}else {					min.add(j + 1);					max.add(j);				}			}						while(min.size() > 1) {				ArrayList<Integer> l = new ArrayList<>();				for (int j = 0; j < min.size(); j+=2) {					if(j == min.size() - 1) {						l.add(min.get(j));						continue;					}										out.println("? " + min.get(j) + " " + min.get(j + 1));					out.flush();					if(sc.next().charAt(0) == '<')						l.add(min.get(j));					else						l.add(min.get(j + 1));									}				min = l;			}						while(max.size() > 1) {				ArrayList<Integer> l = new ArrayList<>();				for (int j = 0; j < max.size(); j+=2) {					if(j == max.size() - 1) {						l.add(max.get(j));						continue;					}										out.println("? " + max.get(j) + " " + max.get(j + 1));					out.flush();					if(sc.next().charAt(0) == '<')						l.add(max.get(j + 1));					else						l.add(max.get(j));									}				max = l;			}			out.println("! " + min.get(0) + " " + max.get(0));			out.flush();		}		out.flush();		out.close();	} 	static class Scanner 	{		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream System){br = new BufferedReader(new InputStreamReader(System));}		public String next() throws IOException 		{			while (st == null || !st.hasMoreTokens()) 				st = new StringTokenizer(br.readLine());			return st.nextToken();		}		public String nextLine()throws IOException{return br.readLine();}		public int nextInt() throws IOException {return Integer.parseInt(next());}		public double nextDouble() throws IOException {return Double.parseDouble(next());}		public char nextChar()throws IOException{return next().charAt(0);}		public Long nextLong()throws IOException{return Long.parseLong(next());}		public boolean ready() throws IOException{return br.ready();}		public void waitForInput(){for(long i = 0; i < 3e9; i++);}	}}
