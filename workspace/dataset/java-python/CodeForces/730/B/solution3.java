import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class Task730bb {    StringTokenizer st;    BufferedReader in;    PrintWriter out;     public static void main(String[] args) throws IOException {        Task730bb task = new Task730bb();        task.open();        task.solve();        task.close();     }     private void close() {        out.flush();    }      private void solve() throws IOException {        int T = nextInt();        for (int z = 0; z < T; z++) {            int n = nextInt();            if (n == 1) {                System.out.println("! 1 1");            } else {                int min = -1;                int max = -1;                if (n % 2 == 0) {                 } else {                    min = 0;                    max = 0;                }                for (int i = (n % 2); i < n; i += 2) {                    System.out.println("? " + (i + 1) + " " + (i + 2));                    char c = next().charAt(0);                    if (c == '>') {                        if (min == -1) {                            min = i + 1;                            max = i;                        } else {                            System.out                                    .println("? " + (min + 1) + " " + (i + 2));                            char c1 = next().charAt(0);                            if (c1 == '>') {                                min = i + 1;                            }                            System.out                                    .println("? " + (max + 1) + " " + (i + 1));                            char c2 = next().charAt(0);                            if (c2 == '<') {                                max = i;                            }                         }                    } else {                        if (min == -1) {                            min = i;                            max = i + 1;                        } else {                            System.out                                    .println("? " + (min + 1) + " " + (i + 1));                            char c1 = next().charAt(0);                            if (c1 == '>') {                                min = i;                            }                            System.out                                    .println("? " + (max + 1) + " " + (i + 2));                            char c2 = next().charAt(0);                            if (c2 == '<') {                                max = i + 1;                            }                         }                    }                }                System.out.println("! " + (min + 1) + " " + (max + 1));              }        }    }    public String next() {         while (st == null || !st.hasMoreTokens()) {            try {                st = new StringTokenizer(in .readLine());            } catch (Exception e) {                throw new RuntimeException();            }        }        return st.nextToken();    }      private void open() {        in = new BufferedReader(new InputStreamReader(System.in));        out = new PrintWriter(System.out);    }     private String nextToken() throws IOException {        while (st == null || !st.hasMoreTokens()) {            String line = in.readLine();            if (line == null) return null;            st = new StringTokenizer(line);        }        return st.nextToken();    }     private int nextInt() throws IOException {        return Integer.parseInt(nextToken());    }     private double nextDouble() throws IOException {        return Double.parseDouble(nextToken());    }     private long nextLong() throws IOException {        return Long.parseLong(nextToken());    } }
