import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer;Â public class A819 {	static int count(int[] cc, int l, int r) {		boolean[] used = new boolean[24];		int cnt = 0;		for (int i = l; i <= r; i++) {			int c = cc[i];			if (!used[c]) {				used[c] = true;				cnt++;			}		}		return cnt;	}	public static void main(String[] args) throws IOException {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer(br.readLine());		int a = Integer.parseInt(st.nextToken());		int b = Integer.parseInt(st.nextToken());		int l = Integer.parseInt(st.nextToken()) - 1;		int r = Integer.parseInt(st.nextToken()) - 1;		int ab = a + b;		int m = 4;	//	ab ab ab ab		int[] cc = new int[ab * m];		int h = l / ab;		l -= h * ab;		r -= h * ab;		h = (r - l + 1) / ab;		if (h > 2)			r -= (h - 2) * ab;		int d = a > b ? a - b : 1;		for (h = 0; h < m; h++) {			for (int k = 0; k < a - d; k++)				cc[(a + b) * h + k] = k;			for (int k = 0; k < d; k++)				cc[(a + b) * h + a - d + k] = h % 2 == 0 ? a - d + k : a + k;		}		int min = a + a;		for (int k0 = 1; k0 <= d; k0++) {			for (int k = 0; k < b; k++)				cc[(a + b) * 0 + a + k] = cc[(a + b) * 0 + a - k0];			for (int k1 = 1; k1 <= d; k1++) {				for (int k = 0; k < b; k++)					cc[(a + b) * 1 + a + k] = cc[(a + b) * 1 + a - k1];				for (int k2 = 1; k2 <= d; k2++) {					for (int k = 0; k < b; k++)						cc[(a + b) * 2 + a + k] = cc[(a + b) * 2 + a - k2];					for (int k3 = 1; k3 <= d; k3++) {						for (int k = 0; k < b; k++)							cc[(a + b) * 3 + a + k] = cc[(a + b) * 3 + a - k3];						min = Math.min(min, count(cc, l, r));					}				}			}		}		System.out.println(min);	}}
