import java.io.*;import java.util.*; // Not finishedpublic class d820 { 	public static void main(String[] args) throws IOException {		IO io = new IO(System.in); 		int n = io.nextInt(); 		int[] p = new int[n];		for (int i = 0; i < p.length; i++) {			p[i] = io.nextInt() - 1;		} 		int[] pm = new int[n+1]; 		for (int i = 0; i < n; i++) {			if (p[i] >= i) {				pm[0]--;				pm[p[i] - i] += 2;				pm[n - i - 1] -= 1;				pm[n - i]--;			} else {				pm[0]++;				pm[n - i - 1]--;				pm[n - i]--;				pm[n - i + p[i]] += 2;			}		} 		long cur = 0;		for (int i = 0; i < n; i++) {			cur += Math.abs(p[i] - i);		} 		long increasing = 0;		long best = cur;		long bestid = 0;		for (int i = 0; i < n-1; i++) {//			io.println(cur);			increasing += pm[i];			cur += increasing;			cur = cur - (n - 1) + 2 * p[n - 1 - i]; // jump						if (cur < best) {				best = cur;				bestid = i+1;			}		}				io.printf("%d %d\n",best,bestid); 		io.close();	} 	static class IO extends PrintWriter {		static BufferedReader r;		static StringTokenizer t; 		public IO(InputStream i) {			super(new BufferedOutputStream(System.out));			r = new BufferedReader(new InputStreamReader(i));			t = new StringTokenizer("");		} 		public String next() throws IOException {			while (!t.hasMoreTokens()) {				t = new StringTokenizer(r.readLine());			}			return t.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		} 		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public double nextDouble() throws IOException {			return Double.parseDouble(next());		}	}}
