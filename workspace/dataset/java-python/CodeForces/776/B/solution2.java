import java.io.BufferedReader;import java.io.InputStreamReader; public class SherlockAndGF {		static int n = 1000000; 	static int[] sieve = new int[n+1]; 	static void createSieve() {		sieve[0] = sieve[1] = 0;		for(int i = 2; i <= n; i++) {			sieve[i] = 1;		}				for(int i = 2; i*i <=n ; i++) {			if(sieve[i] == 1) {				for(int j = i*i ; j <= n; j= j+i) {					sieve[j] = 0;				}			}		}				}		public static void main(String[] args) {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		try {			StringBuilder sb = new StringBuilder();			createSieve();			int X=Integer.parseInt(br.readLine().trim());			int nonPrime = 0;			int prime = 0;			for(int i = 2; i <= X+1; i++) {				if(sieve[i] == 1) {					prime++;				}else {					nonPrime++;				}			}						if(nonPrime == 0) {				System.out.println(1);			}else {				System.out.println(2);			}						for(int i = 2; i <= X+1; i++) {				if(sieve[i] == 1) {					System.out.print(1+" ");				}else {					System.out.print(2+" ");				}			}		} catch (Exception e) {			e.printStackTrace();		} 	} }
