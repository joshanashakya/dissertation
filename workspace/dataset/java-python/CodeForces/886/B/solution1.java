import java.io.*;import java.util.*;public class VsRohan{	static Reader sc=new Reader();    static PrintWriter out=new PrintWriter((System.out));    public static void main(String args[])throws IOException    {        int t=sc.nextInt();        int arr[] = new int[200001];        Arrays.fill(arr, (int)1e9);        for(int i = 0; i < t; ++i) {        	int a = sc.nextInt();        	arr[a] = i;        }        int min = (int)1e9, ans = 0;;        for(int i = 0; i < arr.length; ++i) {        	if(arr[i]<min) {        		min =arr[i];        		ans = i;        	}        	        }        out.println(ans);	out.close();    }Â     static class Reader     {         BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");        public String next()        {            while(!st.hasMoreTokens())            {                try                {                    st=new StringTokenizer(br.readLine());                }                catch(Exception e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }        public int nextInt()        {            return Integer.parseInt(next());        }        public long nextLong()        {            return Long.parseLong(next());        }        public double nextDouble()        {            return Double.parseDouble(next());        }        public String nextLine()        {            try            {                return br.readLine();            }            catch(Exception e)            {                e.printStackTrace();            }            return null;        }        public boolean hasNext()        {            String next=null;            try            {                next=br.readLine();            }            catch(Exception e)            {            }            if(next==null)            {                return false;            }            st=new StringTokenizer(next);            return true;        }    } }
