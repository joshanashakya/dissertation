import sysfrom math import sqrt, gcd, ceil, log# from bisect import bisect, bisect_leftfrom collections import defaultdict, Counter, deque# from heapq import heapify, heappush, heappopinput = sys.stdin.readlineread = lambda: list(map(int, input().strip().split())) # sys.setrecursionlimit(10**5) def main():	n, m = read()	adj = defaultdict(set)	for i in range(1, n+1):adj[i].add(i)	for i in range(m):		u, v = read()		adj[u].add(v)		adj[v].add(u)	visited = defaultdict(int)	for i in range(1, n+1):		if not visited[i]:			for child in adj[i]:				if not visited[child]:					visited[child] = 1					if adj[i] != adj[child]:						print("NO")						exit()	print("YES") 	  if __name__ == "__main__":	main()
