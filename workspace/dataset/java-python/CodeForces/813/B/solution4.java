import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.Collections;import java.util.List;import java.util.StringTokenizer;  public class Main {        public static void main(String[] args) {        Scanner sc = new Scanner() ;         long x , y , l , r ;         x = sc.nextLong();         y = sc.nextLong();        l = sc.nextLong();         r = sc.nextLong();                List<Long> xl = new ArrayList<Long>();         List<Long> yl = new ArrayList<Long>();         List<Long> list = new ArrayList<Long>();                 long xp = 1 ;         long yp = 1 ;                 while(r / x >= xp ){            xl.add(xp);            xp *= x;                     }        xl.add(xp);                while(r / y >=yp){            yl.add(yp);            yp *= y ;         }        yl.add(yp);                long tmp1 , tmp2 ;                 for (int i = 0; i < xl.size(); i++) {            tmp1 = xl.get(i);            for (int j = 0; j < yl.size(); j++) {                tmp2 = yl.get(j);                if(tmp1 + tmp2 >= l && tmp1 + tmp2 <= r){                    list.add(tmp1 + tmp2 );                 }                            }}            list.add(l-1 );            list.add(r+1);                        Collections.sort(list);                        long max = 0 ;                         for (int i = 1; i < list.size(); i++) {              max = Math.max(max, list.get(i) - list.get(i-1) -1 );        }            System.out.println(max);                               }    } class Scanner{    BufferedReader br ;    StringTokenizer st;        public Scanner(){        InputStreamReader inr =new InputStreamReader(System.in);        br=new BufferedReader(inr);            }        String next(){        while(st==null || !st.hasMoreElements()){        try{        st=new StringTokenizer(br.readLine());        }        catch(IOException e){            e.printStackTrace();        }}        return st.nextToken();    }        int nextInt(){        return Integer.parseInt(next());    }        double nextDouble(){        return Double.parseDouble(next());            }        long nextLong(){        return Long.parseLong(next());    }            String nextLine(){        String str="";        try{            str=br.readLine();        }        catch(IOException e)        {            e.printStackTrace();        }        return str;    }} 
