def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()): #CODE def fast_power2(x , y):     if y == 0 :        return 1     temp = fast_power2(x , int(y / 2))    if y % 2 == 0 :        return temp * temp    else:        return x * temp * temp  x , y , l , r = MAP()nums = []l2 , r2 = 0 , 0 for i in range(63):    for j in range(63):        v = fast_power2(x , i) + fast_power2(y , j)        if v > r :            break         if v >= l and v <= r :            nums.append(v)         if v == l :            l2 = 1         if v == r :            r2 = 1  if l2 == 0 :    nums.append(l - 1) if r2 == 0 :    nums.append(r + 1) nums.sort()mx = 0for i in range(len(nums) - 1):    mx = max(mx , (nums[i +1] - nums[i] - 1)) print(mx) 
