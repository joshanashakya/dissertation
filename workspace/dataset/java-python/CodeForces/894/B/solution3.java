import java.util.*;import java.lang.*;import java.io.*;import java.math.*;public class Prac{         static class InputReader {         private final InputStream stream;        private final byte[] buf = new byte[8192];        private int curChar, snumChars;        public InputReader(InputStream st) {            this.stream = st;        }         public int read() {            if (snumChars == -1)                throw new InputMismatchException();            if (curChar >= snumChars) {                curChar = 0;                try {                    snumChars = stream.read(buf);                }                 catch (IOException e) {                    throw new InputMismatchException();                }                if (snumChars <= 0)                    return -1;            }            return buf[curChar++];        }        public int ni() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            int res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public long nl() {            int c = read();            while (isSpaceChar(c)) {            c = read();            }            int sgn = 1;            if (c == '-') {                sgn = -1;                c = read();            }            long res = 0;            do {                res *= 10;                res += c - '0';                c = read();            } while (!isSpaceChar(c));            return res * sgn;        }         public int[] nia(int n) {            int a[] = new int[n];            for (int i = 0; i < n; i++) {                a[i] = ni();            }            return a;        }         public String rs() {            int c = read();            while (isSpaceChar(c)) {                c = read();            }            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                    c = read();            } while (!isSpaceChar(c));            return res.toString();        }        public String nextLine() {            int c = read();            while (isSpaceChar(c))                c = read();            StringBuilder res = new StringBuilder();            do {                res.appendCodePoint(c);                c = read();            } while (!isEndOfLine(c));            return res.toString();        }         public boolean isSpaceChar(int c) {            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;        }         private boolean isEndOfLine(int c) {            return c == '\n' || c == '\r' || c == -1;        }     }    public static class Key {         private final int x;        private final int y;         public Key(int x, int y) {            this.x = x;            this.y = y;        }         @Override        public boolean equals(Object o) {            if (this == o) return true;            if (!(o instanceof Key)) return false;            Key key = (Key) o;            return x == key.x || y == key.y;        }         @Override        public int hashCode() {            int result = x;            result = 31 * result + y;            return result;        }     }    static class Pair{        int x,y;        public Pair(int x,int y){            this.y=y;            this.x=x;        }    }    static long  power(long x, long y) {         long temp=0;         if( y == 0)             return 1;         temp = power(x, y/2);         if (y%2 == 0)             return (temp*temp)%mod1;         else            return (((x*temp)%mod1)*temp)%mod1;     }     static PrintWriter w = new PrintWriter(System.out);    static long mod=998244353L,mod1=1000000007;    //    static int arr[][],n,m,on[][],minone[][];//    static void fill(int i,int j){//        if(i>n){//            int one=0,min=0;//            for(int i1=1;i1<=n;i1++){//                int ans=1;//                for(int j1=1;j1<=m;j1++){//                    ans*=arr[i1][j1];//                }//                if(ans==1)one++;//                else min++;//            }//            for(int j1=1;j1<=m;j1++){//                int ans=1;//                for(int i1=1;i1<=n;i1++){//                    ans*=arr[i1][j1];//                }//                if(ans==1)one++;//                else min++;//            }//            if(one==0)minone[n][m]++;//            else if(min==0)on[n][m]++;//            return ;//        }//        if(j>m){//            fill(i+1,1);//            return;//        }//        arr[i][j]=1;//        fill(i,j+1);//        arr[i][j]=-1;//        fill(i,j+1);//    }    public static void main(String [] args){        InputReader sc=new InputReader(System.in);        long n=sc.nl();        long m=sc.nl();        int k=sc.ni();        if(k==-1&&(n+m)%2!=0)w.println(0);        else {            long ans=power(2,n-1);            ans=power(ans,m-1);            w.println(ans);        }        w.close();    }}
