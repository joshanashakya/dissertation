import java.util.*;import java.io.*;import java.text.*;public class Main{    //SOLUTION BEGIN    //Into the Hardware Mode    void pre() throws Exception{}    void solve(int TC)throws Exception{        int n = ni();        char[] s = n().toCharArray(), t = n().toCharArray();        TreeMap<char[], Integer> mp = new TreeMap<>((char[] c1, char[] c2) -> {            if(c1[0] != c2[0])return Character.compare(c1[0], c2[0]);            return Character.compare(c1[1], c2[1]);        });        TreeMap<Character, Integer> ss = new TreeMap<>(), tt = new TreeMap<>();        int ham = 0;        int ch = 0;        int[] sw = new int[]{-2, -2};        for(int i = 0; i< n; i++){            if(s[i] != t[i]){                ham++;                if(ch < 2 && mp.containsKey(new char[]{t[i], s[i]})){                    ch = 2;                    sw[0] = mp.get(new char[]{t[i], s[i]});                    sw[1] = i;                }                if(ch < 1 && ss.containsKey(t[i])){                    ch = 1;                    sw[0] = ss.get(t[i]);                    sw[1] = i;                }                if(ch < 1 && tt.containsKey(s[i])){                    ch = 1;                    sw[0] = tt.get(s[i]);                    sw[1] = i;                }                mp.put(new char[]{s[i], t[i]}, i);                ss.put(s[i], i);                tt.put(t[i], i);            }        }        pn(ham-ch);        pn((1+sw[0])+" "+(1+sw[1]));    }        //SOLUTION END    void hold(boolean b)throws Exception{if(!b)throw new Exception("Hold right there, Sparky!");}    void exit(boolean b){if(!b)System.exit(0);}    long IINF = (long)1e18;    final int INF = (int)1e9+2, MX = (int)2e6+5;    DecimalFormat df = new DecimalFormat("0.00000000000");    double PI = 3.141592653589793238462643383279502884197169399, eps = 1e-7;    static boolean multipleTC = false, memory = false, fileIO = false;    FastReader in;PrintWriter out;    void run() throws Exception{        if(fileIO){            in = new FastReader("C:/users/user/desktop/inp.in");            out = new PrintWriter("C:/users/user/desktop/out.out");        }else {            in = new FastReader();            out = new PrintWriter(System.out);        }        //Solution Credits: Taranpreet Singh        int T = (multipleTC)?ni():1;        pre();        for(int t = 1; t<= T; t++)solve(t);        out.flush();        out.close();    }    public static void main(String[] args) throws Exception{        if(memory)new Thread(null, new Runnable() {public void run(){try{new Main().run();}catch(Exception e){e.printStackTrace();}}}, "1", 1 << 28).start();        else new Main().run();    }    int find(int[] set, int u){return set[u] = (set[u] == u?u:find(set, set[u]));}    int digit(long s){int ans = 0;while(s>0){s/=10;ans++;}return ans;}    long gcd(long a, long b){return (b==0)?a:gcd(b,a%b);}    int gcd(int a, int b){return (b==0)?a:gcd(b,a%b);}    int bit(long n){return (n==0)?0:(1+bit(n&(n-1)));}    void p(Object o){out.print(o);}    void pn(Object o){out.println(o);}    void pni(Object o){out.println(o);out.flush();}    String n()throws Exception{return in.next();}    String nln()throws Exception{return in.nextLine();}    int ni()throws Exception{return Integer.parseInt(in.next());}    long nl()throws Exception{return Long.parseLong(in.next());}    double nd()throws Exception{return Double.parseDouble(in.next());}     class FastReader{        BufferedReader br;        StringTokenizer st;        public FastReader(){            br = new BufferedReader(new InputStreamReader(System.in));        }         public FastReader(String s) throws Exception{            br = new BufferedReader(new FileReader(s));        }         String next() throws Exception{            while (st == null || !st.hasMoreElements()){                try{                    st = new StringTokenizer(br.readLine());                }catch (IOException  e){                    throw new Exception(e.toString());                }            }            return st.nextToken();        }         String nextLine() throws Exception{            String str = "";            try{                   str = br.readLine();	            }catch (IOException e){                throw new Exception(e.toString());            }              return str;        }    }   }
