import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{     public static void main(String args[])    {        FastScanner input = new FastScanner();        int n = input.nextInt();        String s1 = input.next();        String s2 = input.next();        int count = 0;        int Uletter[] = new int[26];        int Lletter[] = new int[26];        boolean check = false;        for (int i = 0; i < n; i++) {            if(s1.charAt(i)!=s2.charAt(i))            {                count++;                Uletter[s1.charAt(i)-'a']++;                Lletter[s2.charAt(i)-'a']++;                            }                    }        char same = 'a';        for (int i = 0; i < 26; i++) {            if(Uletter[i]>0&&Lletter[i]>0)            {                same= (char)('a'+i);                check = true;                break;            }        }        if(!check)        {                       System.out.println(count);            System.out.println("-1 -1");        }        else        {                        for (int i = 'a'; i <='z'; i++) {                for (int j = 'a'; j <='z'; j++) {                    if(i==j)                        continue;                    int c=0;                    int tempf =-1,templ=-1;                    int firstIndex=0 ,lastindex=0;                    for (int k = 0; k < n; k++) {                       if(tempf ==-1&&s1.charAt(k)==i&&s2.charAt(k)==j)                        {                            firstIndex = k;                            tempf++;                            c++;                        }                        if(templ==-1&&s1.charAt(k)==j&&s2.charAt(k)==i)                        {                            lastindex = k;                            templ++;                            c++;                        }                    }                    if(c==2)                    {                                              System.out.println(count-2);                        System.out.println((firstIndex+1)+" "+(lastindex+1));                        return;                    }                                  }            }            int firstIndex=-1 ,lastindex=-1;                                               firstIndex=-1 ;                         lastindex=-1;                        for (int k = 0; k < n; k++) {                            if(s1.charAt(k)!=s2.charAt(k))                            {                                if(firstIndex==-1&&s1.charAt(k)==same)                                {                                    firstIndex = k;                                }                                else if(lastindex==-1&&s2.charAt(k)==same)                                {                                    lastindex = k;                                }                            }                        }                         System.out.println(count-1);                        System.out.println((firstIndex+1)+" "+(lastindex+1));                                                                }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
