import java.util.*;public final class Ideone {        private static int[] solve(String s, String t) {    	//System.out.println(String.format("%s, %s", s, t));        Map<Character, Map<Character, Integer>> mismatch = new HashMap<>();        int md = 0;        int n = s.length();        for (int i = 0; i<n; i++) {            if (s.charAt(i) != t.charAt(i)) {                md++;            }        }                int mr = 0;        int[] res = new int[]{-1, -1};        for (int i = 0; i<n; i++) {            char sc = s.charAt(i);            char tc = t.charAt(i);            if (sc != tc) {            	//System.out.println(mismatch);                if (mismatch.containsKey(tc)) {                    if (mismatch.get(tc).containsKey(sc)) {                        return new int[]{md -2, mismatch.get(tc).get(sc) + 1, i + 1};                    } else {                        if (mr == 0) {                            mr = 1;                            res = new int[]{mismatch.get(tc).values().iterator().next() + 1, i + 1};                        }                    }                } else {                	//System.out.println("Searching " + sc);                	Collection<Map<Character, Integer>> rm = mismatch.values();                	for (Map<Character, Integer> rmj : rm) {	                	for (Map.Entry<Character, Integer> rmi : rmj.entrySet()) {	                		if (rmi.getKey() == sc) {	                			mr = 1;	                			res = new int[]{rmi.getValue() + 1, i + 1};	                		}	                	}                	}                }                mismatch.putIfAbsent(sc, new HashMap<>());                mismatch.get(sc).put(tc, i);            }        }                return new int[]{md - mr, res[0], res[1]};    }        public static void main(String[] args) {        Scanner s = new Scanner(System.in);        s.nextInt();        s.nextLine();        String s1 = s.nextLine();        String s2 = s.nextLine();        int[] ans = solve(s1, s2);        System.out.println(ans[0]);        System.out.println(String.format("%s %s", ans[1], ans[2]));    }}
