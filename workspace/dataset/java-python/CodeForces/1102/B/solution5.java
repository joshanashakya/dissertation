 import java.util.*;import java.io.*;  public class B { Â     public static void taskSolver(FastReader sc){     int n=sc.nextInt();     int k=sc.nextInt();     HashMap<Integer,ArrayList<Integer>> map=new HashMap();int max=0;     for(int i=0;i<n;i++){         int num=sc.nextInt();         if(!map.containsKey(num)){             map.put(num,new ArrayList<Integer>());         }         map.get(num).add(i);         max=Math.max(max,map.get(num).size());         }     if(max>k || k>n){        System.out.println("NO");return;      }int c=0;     int ans[]=new int[n];     for(int i:map.keySet()){         ArrayList<Integer>list=map.get(i);         for(int j=0;j<list.size();j++){             ans[list.get(j)]=c;             c=(c+1)%k;         }              }     System.out.println("YES");     for(int i=0;i<n;i++){         System.out.print(ans[i]+1+" ");     }     System.out.println();    }    public static void main(String args[]){       FastReader sc=new FastReader();        taskSolver(sc);    }     public static long gcd(long a,long b){          if(a==0)return b;         return gcd(b%a,a);      }    static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }         }   
