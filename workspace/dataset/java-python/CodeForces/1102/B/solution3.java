import java.io.*;import java.util.Arrays;import java.util.StringTokenizer;// نورت الكود يا كبير اتفضل // يا رب Acceptedpublic class ArrayKColoring {    public static void main(String[] args) {        FastReader in = new FastReader();        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));         int n = in.nextInt();        int k = in.nextInt();         Pair[] arr = new Pair[n];        int[] freq = new int[5001];         for (int i = 0; i < n; i++) {            int x = in.nextInt();            arr[i] = new Pair(i, x);            freq[x]++;            if (freq[x] > k) {                out.println("NO");                out.flush();                return;            }        }         Arrays.sort(arr);         int[] res = new int[n];          int color = 0;        for (Pair pair : arr) {            res[pair.index] = (color++ % k) + 1;        }         out.println("YES");        for (Integer i : res) {            out.print(i + " ");        }         out.println();         out.close();    }     private static class Pair implements Comparable<Pair> {        private final int index;        private final int value;         public Pair(int index, int value) {            this.index = index;            this.value = value;        }         @Override        public int compareTo(Pair o) {            return this.value - o.value;        }    }     private static class FastReader {        BufferedReader br;        StringTokenizer st;         FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }    }}
