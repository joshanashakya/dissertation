import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*; public class Main {     IIO io;     Main(IIO io) {        this.io = io;    }     public static void main(String[] args) throws IOException {         ConsoleIO io = new ConsoleIO();        Main m = new Main(io);        m.solve();        io.flush(); //        Tester test = new Tester();test.run();    }     public void solve() {        String s1 = io.readLine();        String s2 = io.readLine();        int n = Math.max(s1.length(), s2.length()) + 5;        int[] c1 = new int[n];        int[] c2 = new int[n];        for(int i = 0;i<s1.length();i++){            c1[n-1-i] = s1.charAt(s1.length()-1-i)-'0';        }        for(int i = 0;i<s2.length();i++){            c2[n-1-i] = s2.charAt(s2.length()-1-i)-'0';        }        for(int i = 2;i<n;i++) {            int k = i;            while (c1[k] + c1[k - 1] == 2) {                c1[k - 2] = 1;                c1[k] = 0;                c1[k - 1] = 0;                k-=2;            }            k = i;            while (c2[k] + c2[k - 1] == 2) {                c2[k - 2] = 1;                c2[k] = 0;                c2[k - 1] = 0;                k-=2;            }        }        for(int i = 0;i<n;i++){            if(c1[i]<c2[i]){io.writeLine("<");return;}            if(c1[i]>c2[i]){io.writeLine(">");return;}        }        io.writeLine("=");    } } class ConsoleIO extends BaseIO {    BufferedReader br;    PrintWriter out;    public ConsoleIO(){        br = new BufferedReader(new InputStreamReader(System.in));        out = new PrintWriter(System.out);    }    public void flush(){        this.out.close();    }    public void writeLine(String s) {        this.out.println(s);    }    public void writeInt(int a) {        this.out.print(a);        this.out.print(' ');    }    public void writeWord(String s){        this.out.print(s);    }    public String readLine() {        try {            return br.readLine();        }        catch (Exception ex){            return "";        }    }    public int read(){        try {            return br.read();        }        catch (Exception ex){            return -1;        }    }}abstract class BaseIO implements IIO {     public long readLong() {        return Long.parseLong(this.readLine());    }     public int readInt() {        return Integer.parseInt(this.readLine());    }     public int[] readIntArray() {        String line = this.readLine();        String[] nums = line.split(" ");        int[] res = new int[nums.length];        for (int i = 0; i < nums.length; i++) {            res[i] = Integer.parseInt(nums[i]);        }        return res;    }    public long[] readLongArray() {        String line = this.readLine();        String[] nums = line.split(" ");        long[] res = new long[nums.length];        for (int i = 0; i < nums.length; i++) {            res[i] = Long.parseLong(nums[i]);        }        return res;    }}interface IIO {    void writeLine(String s);    void writeInt(int a);    void writeWord(String s);    String readLine();    long readLong();    int readInt();    int read();    int[] readIntArray();    long[] readLongArray();} 
