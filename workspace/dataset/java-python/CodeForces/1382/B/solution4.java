import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastI in = new FastI(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BSequentialNim solver = new BSequentialNim();        solver.solve(1, in, out);        out.close();    }     static class BSequentialNim {        public void solve(int testNumber, FastI sc, PrintWriter out) {            int t = sc.nextInt();            while (t > 0) {                t--;                int n = sc.nextInt();                int[] a = new int[n];                for (int i = 0; i < n; i++) {                    a[i] = sc.nextInt();                }                int cnt = 0;                for (int i = 0; i < n; i++) {                    if (a[i] == 1) {                        cnt++;                    } else {                        break;                    }                }                if (cnt == n) {                    if (cnt % 2 == 0) {                        out.println("Second");                    } else {                        out.println("First");                    }                } else {                    if (cnt % 2 == 0) {                        out.println("First");                    } else {                        out.println("Second");                    }                }            }        }     }     static class FastI {        BufferedReader br;        StringTokenizer st;         public FastI(InputStream inputStream) {            br = new BufferedReader(new                    InputStreamReader(inputStream));         }         public String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
