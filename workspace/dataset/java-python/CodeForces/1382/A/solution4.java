import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.HashSet;import java.util.StringTokenizer;public class Main{    static class FastScanner {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next() {            while (!st.hasMoreTokens())                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         int[] nextArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }        long[] nextArray(long n) {            long[] a = new long[(int) n];            for (int i = 0; i < n; i++) a[i] = nextLong();            return a;        }         long nextLong() {            return Long.parseLong(next());        }    }    static class FastWriter extends PrintWriter {            FastWriter(){                super(System.out);            }            void println(int[] array) {                for(int i=0; i<array.length; i++) {                    print(array[i]+" ");                }                println();            }            void println(long [] array) {                for(int i=0; i<array.length; i++) {                    print(array[i]+" ");                }                println();            }        }    public static void main(String[] args){        FastScanner in = new FastScanner();        FastWriter out = new FastWriter();        int t=in.nextInt();        outer:while (t-->0) {            int n = in.nextInt();            int m = in.nextInt();            int[] ar1=in.nextArray(n);            int[] ar2=in.nextArray(m);            HashSet<Integer> set=new HashSet<>();            for (int i = 0; i < n; i++) {                set.add(ar1[i]);            }            for (int k = 0; k < m; k++) {                if(set.contains(ar2[k])){                    out.println("YES");                    out.println("1 "+ar2[k]);                    continue outer;                }            }            out.println("NO");        }        out.close();    }}
