import java.util.ArrayList;import java.util.Scanner; public class Surrounded {    public static void main(String[] args) {        Scanner s = new Scanner(System.in);        ArrayList<Integer> firstInput = new ArrayList<>();        ArrayList<Integer> secondInput = new ArrayList<>();        for (int i = 0; i < 3; i++) {            firstInput.add(s.nextInt());        }        for (int i = 0; i < 3; i++) {            secondInput.add(s.nextInt());        }         getMinRadius(firstInput, secondInput);     }     private static void getMinRadius(ArrayList<Integer> firstInput, ArrayList<Integer> secondInput) {        double eucledianDistance = getEucledianDistance(firstInput,secondInput);        double diameter = eucledianDistance - (firstInput.get(2) + secondInput.get(2));        double radius = diameter / 2.0;        if (radius<=0) {            if(Math.max(firstInput.get(2),secondInput.get(2))>eucledianDistance + Math.min(firstInput.get(2),secondInput.get(2))){                System.out.printf("%.15f", Math.abs(radius)-Math.min(firstInput.get(2),secondInput.get(2)));            }else{                System.out.printf("%.15f", 0f);            }        }else{            System.out.printf("%.15f", radius);         }    }     private static double getEucledianDistance(ArrayList<Integer> firstInput, ArrayList<Integer> secondInput) {        return Math.sqrt(Math.pow(secondInput.get(1) - firstInput.get(1), 2) + Math.pow(secondInput.get(0) - firstInput.get(0), 2));    } }
