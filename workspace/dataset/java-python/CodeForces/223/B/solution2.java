/*If you want to aim high, aim highDon't let that studying and grades consume youJust live life young******************************What do you think? What do you think?1st on Billboard, what do you think of itNext is a Grammy, what do you think of itHowever you think, I’m sorry, but shit, I have no fcking interest*******************************I'm standing on top of my Monopoly boardThat means I'm on top of my game and it don't stoptil my hip don't hop anymorehttps://www.a2oj.com/Ladder16.html*******************************300iq as writer = Sad!*/import java.util.*;import java.io.*;import java.math.*;    public class x223B   {      public static void main(String hi[]) throws Exception      {         BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));         char[] arr = infile.readLine().toCharArray();         char[] brr = infile.readLine().toCharArray();         int N = arr.length;  int M = brr.length;         if(N < M || bad(arr, brr))            System.out.println("No");         else         {            int[] left = new int[N];            int[] right = new int[N];            int[] place = new int[26];            Arrays.fill(place, N+M+M+N);            int dex = 0;            for(int i=0; i < N; i++)            {               if(dex < M && arr[i] == brr[dex])               {                  left[i] = place[arr[i]-'a'] = dex;                  dex++;               }               else                  left[i] = place[arr[i]-'a'];            }            dex = M-1;            place = new int[26];            Arrays.fill(place, N+M+M+N);            for(int i=N-1; i >= 0; i--)            {               if(dex >= 0 && arr[i] == brr[dex])               {                  right[i] = place[arr[i]-'a'] = dex;                  dex--;               }               else                  right[i] = place[arr[i]-'a'];            }            /*            Arrays.fill(left, -1);            Arrays.fill(right, -1);            int dex = 0;            for(int i=0; i < N; i++)            {               if(dex < M && arr[i] == brr[dex])               {                  left[dex] = i;                  dex++;               }            }            dex = M-1;            for(int i=N-1; i >= 0; i--)            {               if(dex >= 0 && arr[i] == brr[dex])               {                  right[dex] = i;                  dex--;               }            }            */            String res = "Yes";            for(int i=0; i < N; i++)               if(right[i] > left[i])                  res = "No";            System.out.println(res);         }      }      public static boolean bad(char[] a, char[] b)      {         HashSet<Character> set = new HashSet<Character>();         for(char c: b)            set.add(c);         for(char c: a)            if(!set.contains(c))               return true;         return false;      }   }
