import bisectimport string s = input()t = input() max_match = [0 for i in range(len(s))]min_match = [0 for i in range(len(s))]char_idx = [0 for i in range(30)]char_occur = [ [] for i in range(30) ] for (i, ch) in enumerate(t):    idx = ord(ch) - ord('a')    char_occur[idx].append(i) for ch in string.ascii_lowercase:    idx = ord(ch) - ord('a')    char_occur[idx].append(len(t)+1) matched = -1for (i, ch) in enumerate(s):    if matched==len(t)-1:        max_match[i] = matched    else:        if ch == t[matched+1]:            matched += 1        max_match[i] = matched matched = len(t)for (i, ch) in enumerate(s[::-1]):    i = len(s) - i - 1    if matched==0:        min_match[i] = matched    else:        if ch == t[matched-1]:            matched -= 1        min_match[i] = matched for (i, ch) in enumerate(s):    low = min_match[i]    high = max_match[i]        ch = ord(ch) - ord('a')    idx = char_idx[ch]    while idx<len(char_occur[ch]) and char_occur[ch][idx]<low:        idx += 1    char_idx[ch] = idx        if idx == len(char_occur[ch]):        print("No")        exit()    if char_occur[ch][idx] > high:        print("No")        exit() print("Yes")
