//package com.codeforces.Round606; import java.io.*;import java.util.Arrays;import java.util.StringTokenizer; public class Div2A {     static class FastReader {         BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            }            catch (IOException e) {                e.printStackTrace();            }            return str;        }    }     public static void main(String[] args) {         PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));         FastReader fsr = new FastReader();         long digits;        long count;        long n;        long[] arr = new long[10];          int T = fsr.nextInt();          for (int i = 1; i <= T; i++) {             Arrays.fill(arr, 0);             n = fsr.nextLong();             digits = 0;             for (long d = 1L; d <= n; d *= 10) {                for (int k = 1; k <= 9; k++) {                    arr[k] = (arr[k] * 10) + k;                }                digits++;            }             count = (--digits * 9);             for (int j = 1; j <= 9; j++) {                if (arr[j] <= n) {                    count++;                }            }             out.println(count);        }          out.flush();        out.close();    }}
