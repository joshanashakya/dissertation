##from sys import stdin,stdout##input = stdin.readline######def main():##    #t = int(input())##    t=1##    for i in range(t):##        n = int(input())##        #n1, n2, k1, k2 = map(int,input().split())##        ai = list(map(int,input().split()))##        ##main()from sys import stdin,stdoutfrom collections import dequeinput = stdin.readlinefrom math import gcddef main():    n = int(input())    ai = list(map(int,input().split()))    if n == 2:        print(ai[0]*ai[1]//gcd(ai[0],ai[1]))        return    def create(ai):        tr = [[[ai[i],i,i] for i in range(n)]]        n2 = n        while n2 > 1:            n3 = n2 // 2 + n2 % 2            tr += [[[0,n,0] for j in range(n3)]]            for i in range(n2):                if i+1-i%2*2 < n2:                    tr[-1][i//2][0] = gcd(tr[-2][i][0],tr[-2][i+1-i%2*2][0])                else:                    tr[-1][i//2][0] = tr[-2][i][0]                tr[-1][i//2][1] = min(tr[-1][i//2][1],tr[-2][i][1])                tr[-1][i//2][2] = max(tr[-1][i//2][2],tr[-2][i][2])            n2 = n3        return tr    def change(ind,val):        n2 = len(tr)        change = val - tr[0][ind][0]        for i in range(n2):            tr[i][ind][0] += change             ind //= 2        return 0    def count(l,r):        d = deque()        d.append([-1,0])        ans = 0        while len(d) > 0:            i,j = d.pop()            if tr[i][j][1] >= l and tr[i][j][2] <= r:                if ans == 0:                    ans = tr[i][j][0]                else:                    ans = gcd(ans,tr[i][j][0])            elif min(tr[i][j][2],r) >= max(tr[i][j][1],l):                d.append([i-1,j*2])                if j*2+1 < len(tr[i-1]):                    d.append([i-1,j*2+1])        return ans     tr = create(ai)    ans = count(0,n-2)    temp = count(1,n-1)    ans = ans * temp // gcd(temp,ans)    for i in range(1,n-1):        temp = count(0,i-1)        temp2 = count(i+1,n-1)        temp = gcd(temp,temp2)        ans = ans * temp // gcd(temp,ans)    print(ans)main()
