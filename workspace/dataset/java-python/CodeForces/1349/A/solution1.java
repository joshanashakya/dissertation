import java.util.*;public class OracAndLCM {    public static void main(String[] args) {        boolean[] sieve = new boolean[200001];        ArrayList<Integer> primes = new ArrayList<>();        for (int i = 2; i <= 200000; i++) {            if (!sieve[i]) {                primes.add(i);                for (int j = i; j <= 200000; j += i) {                    sieve[j] = true;                }            }        }        Scanner in = new Scanner(System.in);        int N = in.nextInt();        int[] arr = new int[N];        for (int i = 0; i < N; i++) {            arr[i] = in.nextInt();        }        long res = 1;        for (int p : primes) {            int min = Integer.MAX_VALUE;            int min2 = Integer.MAX_VALUE;            for (int i : arr) {                int count = count(i, p);                if (count < min2) {                    min2 = Math.max(min, count);                }                if (count < min) {                    min = count;                }                if (min2 == 0) {                    break;                }            }            res *= (long)Math.pow(p, min2);        }        System.out.println(res);    }    public static int count(int n, int p) {        int count = 0;        while (n % p == 0) {            n /= p;            count++;        }        return count;    }}
