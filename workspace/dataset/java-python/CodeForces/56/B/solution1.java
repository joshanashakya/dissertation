import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				static int gcd(int a, int b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO io = new FastIO();				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				int n = io.nextInt();				int arr[] = new int[n + 1];		for(int i = 1; i <= n; i++) {			arr[i] = io.nextInt();		}				int end = 0;		int start = 0;				for(int i = 1; i <= n; i++) {			if(arr[i] != i) {				end = arr[i];				start = i;				break;			}		}				if(start == 0 && end == 0) {			System.out.println(0 + " " + 0);		}				else {						for(int i = start + 1; i <= end; i++) {				if(arr[i] != arr[i - 1] - 1) {					System.out.println(0 + " " + 0);					return;				}			}						for(int i = end + 1; i <= n; i++) {				if(arr[i] != i) {					System.out.println(0 + " " + 0);					return;				}			}						System.out.println(start + " " + end);		} 	}}
