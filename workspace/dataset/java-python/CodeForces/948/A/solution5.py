from sys import stdout def transpose(m): #m is a list of strings.    ml = []    for i, s in enumerate(m):        ml.append(list(s))    # ml now same as m but with lists of chars instead of strings.    #print('m=', m)    #print('ml=', ml)    xm = []    for i in range(len(ml[0])): # num of rows in orig matrix = num of cols in new matrix        xm.append(['.'] * len(ml))    # xm is now blank but addressable.    #print('xm=', xm)    for i in range(len(ml)):        for j in range(len(ml[0])):            xm[j][i] = ml[i][j]    #print('xmf=', xm)    xms = []    for r in xm:        xms.append(''.join(r))    #print('xms=', xms)    return xms         def answer(m):    for r in m:        if 'WS' in r or 'SW' in r:            return 'No'    xm = transpose(m)        for r in xm:        if 'WS' in r or 'SW' in r:            return 'No'        return 'Yes'  def main():    R, C = [int(i) for i in input().split()]    m = ['.'] * R    for j in range(R):        m[j] = input()    #print('Initial m=', m)    ans = answer(m)    print(ans)    if ans == 'Yes':        for s in m:            for c in s:                if c == '.':                    print('D', end='')                else:                    print(c, end='')            print()                        #print(m)  main()
