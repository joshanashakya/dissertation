  import java.util.*;import java.io.*;import java.util.Arrays;public class Main {					public static void main (String [] args) throws IOException 	{		Scanner s=new Scanner(System.in);		PrintWriter pw=new PrintWriter(System.out);		StringBuilder sb=new StringBuilder();						 				 		int x=s.nextInt();		int y=s.nextInt();						boolean ceil=true;		while (true)		{			if (ceil)			{				if (x>=2 && y>=2)				{					x-=2;					y-=2;				}				else if (x==1 && y>=12)				{					x--;					y-=12;				}				else if (x==0 && y>=22)				{					y-=22;				}				else				{					pw.println("Hanako");					break;				}							}					else			{				if (y>=22)				{					y-=22;				}				else if (x>=1 && y>=12)				{					x--;					y-=12;				}				else if (x>=2 && y>=2)				{					x-=2;					y-=2;				}				else				{					pw.println("Ciel");					break;				}			}									ceil=!ceil;				}														pw.flush();		}																																								 					     	     	         	public static void shuffle(int[] a)	{		int n = a.length;		for(int i = 0; i < n; i++)		{			int r = i + (int)(Math.random() * (n - i));			int tmp = a[i];			a[i] = a[r];			a[r] = tmp;		}	} 	   	static class Scanner	{		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s){	br = new BufferedReader(new InputStreamReader(s));} 		public String next() throws IOException		{			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {return Integer.parseInt(next());} 		public long nextLong() throws IOException {return Long.parseLong(next());} 		public String nextLine() throws IOException {return br.readLine();} 		public double nextDouble() throws IOException		{			String x = next();			StringBuilder sb = new StringBuilder("0");			double res = 0, f = 1;			boolean dec = false, neg = false;			int start = 0;			if(x.charAt(0) == '-')			{				neg = true;				start++;			}			for(int i = start; i < x.length(); i++)				if(x.charAt(i) == '.')				{					res = Long.parseLong(sb.toString());					sb = new StringBuilder("0");					dec = true;				}				else				{					sb.append(x.charAt(i));					if(dec)						f *= 10;				}			res += Long.parseLong(sb.toString()) / f;			return res * (neg?-1:1);		} 		public boolean ready() throws IOException {return br.ready();}  	}}
