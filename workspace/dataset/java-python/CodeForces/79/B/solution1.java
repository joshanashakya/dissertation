import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;import java.util.Stack;import java.util.Queue;import java.util.LinkedList; public class B79{     static int mod=(int)(1e9+7);    static long MOD=(long)(1e9+7);    static FastReader in=new FastReader();    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));            public static void main(String args[])    {           int tc=1;             //tc=in.nextInt();        tcloop: while(tc-->0)        {            int n=in.nextInt();            int m=in.nextInt();           // char arr[][]=new char[n][m];			int k=in.nextInt();			int t=in.nextInt();						ArrayList<ArrayList<Integer>> al=new ArrayList<>();			int ob[]=new int[n+1];			for(int i=0;i<n;i++)			{				al.add(new ArrayList<Integer>());			}									while(k-->0)			{				int a=in.nextInt();				int b=in.nextInt();				a--;				b--;								al.get(a).add(b);				ob[a+1]++;															}						for(int i=0;i<n;i++)			{				if(al.get(i).size()>0)Collections.sort(al.get(i));			}												for(int i=1;i<n;i++)			{				ob[i]+=ob[i-1];			}												outer: while(t-->0)			{				int a=in.nextInt();				int b=in.nextInt();				a--;				b--;								int val=((a*m)+b-ob[a])%3;								for(int i=0;i<=b&&i<al.get(a).size();i++)				{					//pr.println(a+" "+b+" "+" "+val+" "+ob[a]);										if(al.get(a).get(i)==b)					{												pr.println("Waste");						continue outer;											}															if(al.get(a).get(i)>b)					{						break;											}										val=(val-1);										if(val<0)						val=2;					val%=3;				}												if(val==0)pr.println("Carrots");				else if(val==1)pr.println("Kiwis");				else				{					pr.println("Grapes");				}															}          }        pr.flush();            }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }                 int[] readIntArray(int n)        {		int a[]=new int[n];		for(int i=0;i<n;i++)a[i]=nextInt();		return a;	}			long[] readLongArray(int n)	{		long a[]=new long[n];		for(int i=0;i<n;i++)a[i]=nextLong();		return a;	}	        String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }   
