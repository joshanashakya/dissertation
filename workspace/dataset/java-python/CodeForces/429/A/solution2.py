from sys import stdin,stdoutfrom collections import defaultdict,dequenmbr = lambda: int(stdin.readline())lst = lambda: list(map(int,stdin.readline().split()))def bfs():    global ans    q=deque()    p[1]=-1    q.append(1)    while q:        src=q.popleft()        if p[src] != -1 and p[p[src]] != -1:            dp[src] = dp[p[p[src]]]        if dp[src]^init[src-1]!=goal[src-1]:                dp[src]^=1                ans+=[src]        for neigh in g[src]:            if neigh==p[src]:continue            p[neigh]=src            q.append(neigh)Â for _ in range(1):#nmbr():    n=nmbr()    g=defaultdict(list)    for i in range(n-1):        u,v=lst()        g[u]+=[v]        g[v]+=[u]    init=lst()    goal=lst()    p=[0]*(1+n)    dp=[0]*(1+n)    ans=[]    bfs()    print(len(ans))    print(*sorted(ans),sep='\n')
