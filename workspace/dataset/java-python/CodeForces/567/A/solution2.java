import java.util.*; public class Runner {	public static void main(String[] args) {				Scanner sc = new Scanner(System.in);				int numOfCitys = sc.nextInt();				sc.nextLine();		int[] cityDistances = stringToIntArray(sc.nextLine());				for(int i = 0; i < numOfCitys; i++) {					int highestNum = getHighestNum(cityDistances, i);			int lowestNum = getLowestNum(cityDistances, i);									System.out.println(lowestNum + " " + highestNum);		}		}		private static int getLowestNum(int[] cityDistances, int index) {		int lowestOne = Math.abs(cityDistances[index] - cityDistances[constrainToRange(index - 1, 0, cityDistances.length-1)]);		int lowestTwo = Math.abs(cityDistances[index] - cityDistances[constrainToRange(index + 1, 0, cityDistances.length-1)]);				if(lowestOne == 0) {			return Math.abs(lowestTwo);		} else if(lowestTwo == 0) {			return Math.abs(lowestOne);		}				if(lowestOne < lowestTwo) {			return Math.abs(lowestOne);		}		return Math.abs(lowestTwo);	}		private static int getHighestNum(int[] cityDistances, int index) {		int highestOne = Math.abs(cityDistances[index] - cityDistances[0]);		int highestTwo = Math.abs(cityDistances[index] - cityDistances[cityDistances.length-1]);				if(highestOne > highestTwo) {			return highestOne;		}		return highestTwo;	}		private static int constrainToRange(int num, int min, int max) {		int finalNum = num;				if(num > max) {			finalNum = max;		} else if(num < min) {			finalNum = min;		}				return finalNum;	}		private static int getPrice(int num1, int num2) {		return Math.abs(num1 - num2);	}		private static int[] stringToIntArray(String str) {		String[] strs = str.trim().split(" ");				int[] intArr = new int[strs.length];						for(int i = 0; i < strs.length; i++) {			intArr[i] = Integer.parseInt(strs[i]);		}				return intArr;	} }
