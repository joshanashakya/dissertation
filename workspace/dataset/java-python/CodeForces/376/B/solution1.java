import java.util.Scanner; public class B376 {     public static void main(String[] args) {        Scanner in = new Scanner(System.in);        int N = in.nextInt();        int[][] D = new int[N][N];        int M = in.nextInt();        for (int m=0; m<M; m++) {            int from = in.nextInt()-1;            int to = in.nextInt()-1;            int amount = in.nextInt();            D[from][to] = amount;            D[to][from] = -amount;        }        for (int n=0; n<N; n++) {            int pos = 0;            int neg = 0;            while (true) {                while (pos < N && D[pos][n] <= 0) pos++;                if (pos == N) break;                while (neg < N && D[neg][n] >= 0) neg++;                if (neg == N) break;                int transfer = Math.min(D[pos][n], -D[neg][n]);                D[pos][n] -= transfer;                D[n][pos] += transfer;                D[neg][n] += transfer;                D[n][neg] -= transfer;                D[pos][neg] += transfer;                D[neg][pos] -= transfer;            }        }        int answer = 0;        for (int from=0; from<N; from++) {            for (int to=from+1; to<N; to++) {                answer += Math.abs(D[from][to]);            }        }        System.out.println(answer);    } }
