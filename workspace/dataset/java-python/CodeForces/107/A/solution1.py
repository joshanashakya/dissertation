from sys import stdin, stdoutnmbr = lambda: int(stdin.readline())lst = lambda: list(map(int, stdin.readline().split()))def dfs(src):    global mn    if g[src]==src or g[src]==-1:return src    neigh=g[src]    wt=cost[src,neigh]    mn=min(wt,mn)    return dfs(neigh)for _ in range(1):#nmbr()):    n,eg=lst()    ind=[0]*(1+n)    g=[-1]*(1+n)    cost={}    ans=[]    for i in range(eg):        u,v,wt=lst()        g[u]=v        cost[u,v]=wt        ind[v]+=1    for i in range(1,n+1):        if ind[i]==0:            mn=float('inf')            des=dfs(i)            if des!=i:                ans+=[[i,des,mn]]    print(len(ans))    for k,v,w in ans:        print(k,v,w)
