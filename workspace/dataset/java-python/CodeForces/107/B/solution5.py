from collections import Counter,defaultdict,deque#from heapq import *#from itertools import *#from operator import itemgetter#from itertools import count, islice#from functools import reduce#alph = 'abcdefghijklmnopqrstuvwxyz'#dirs = [[1,0],[0,1],[-1,0],[0,-1]]#from math import factorial as fact#a,b = [int(x) for x in input().split()]#sarr = [x for x in input().strip().split()]#import math#from math import * import sysinput=sys.stdin.readline#sys.setrecursionlimit(2**30)#MOD = 10**9+7def solve():    n,m,h = [int(x) for x in input().split()]    arr = [int(x) for x in input().split()]    s = sum(arr)    if s<n:        print(-1)        return    nk = s-arr[h-1]    if nk<n-1:        print(1)        return    p1 = 1    for i in range(1,n):        p1*=(nk)/(s-i)        nk-=1    p = 1-p1    print(p) tt = 1#int(input())for test in range(tt):    solve()                #
