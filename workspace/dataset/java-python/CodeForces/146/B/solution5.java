import java.util.*;import java.io.*;import java.math.*;public class Euler {	    public static void main(String[] args){        FastReader in = new FastReader();        PrintWriter o = new PrintWriter(System.out);                int a = in.nextInt();        int b = in.nextInt();                for (int j = a + 1; j <= 1000000000; j++) {						String str = Integer.toString(j);			StringBuilder sb = new StringBuilder("");						for (int k = 0; k < str.length(); k++) {				if (str.charAt(k) == '4' || str.charAt(k) == '7') {					sb.append(str.charAt(k));				}			}						String c =  sb.toString();			String bb = Integer.toString(b);			if (c.equals(bb)) {				o.println(j);				break;			}								}                                                                o.close();        o.flush();        return;    }       static final Random random=new Random();     static void ruffleSort(int[] a) {		int n=a.length;//shuffle, then sort 		for (int i=0; i<n; i++) {			int oi=random.nextInt(n), temp=a[oi];			a[oi]=a[i]; a[i]=temp;		}		Arrays.sort(a);	}       	    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }                int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long[] readLongArray(int n) {            long[] a = new long[n];            for (int i = 0; i < n; i++) a[i] = nextLong();            return a;        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }  }
