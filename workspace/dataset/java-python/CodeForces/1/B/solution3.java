import java.io.BufferedReader;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.*;     public class Main { 	public static boolean gsd(long x , int y) {		for(int i = 2 ; i <= Math.min(y, x) ; i ++ ) {			if (x%i == 0 && y%i == 0 ) return true;		}		return false;	}	public static int s(long x) {		int sum = 0 ; 		do {			sum += x%10 ; 			x /= 10;		}while(x >0 );		return sum;	}	public static int right(String s) {		int c = 0 ; 		for(int i = s.length()-1 ; i>=0; i -- ) {			if(s.charAt(i) == 'a') c++ ; 			else break;		}		return c; 	}	public static int left(String s) {		int c = 0 ; 		for(int i = 0 ; i<s.length(); i ++ ) {			if(s.charAt(i) == 'a') c++ ; 			else break;		}		return c; 	}	public static boolean onlyas (String s) {		for (int i = 0 ; i < s.length() ; i ++ ) {			if (s.charAt(i) != 'a') return false ; 		}return true;	}	public static String convert(String s) {		StringBuilder sb = new StringBuilder();		for (int i = 0 ; i < s.length() ; i ++ ) {			if (s.charAt(i) == '1') sb.append("0"); 			else sb.append("1");		}		return sb.toString();	}	public static int check (String s) {//		boolean flag = false ; 		for (int i = 0 ; i < s.length() ; i ++) {			if (Character.isDigit(s.charAt(i)) ) {				for (int j = i ; j <s.length() ; j ++ ) {					if (!Character.isDigit(s.charAt(j)))return 0 ; 				}				return 1 ;			}						}		return 1;	}	public static String s26 (int n) {		StringBuilder st = new StringBuilder();		while (n >0) {			int x = n%26 ; 			n /= 26 ;			if (x-1 <0 ) {				x = 26;n-- ;			}			st.insert(0, letters[x-1]);		}		return st.toString();	}					public static char [] letters = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O'			,'P','Q','R','S','T','U','V','W','X','Y', 'Z'};	public static void main(String[] args)  throws IOException, InterruptedException{		PrintWriter pw = new PrintWriter(System.out);		Scanner sc = new Scanner (System.in); 		int t = sc.nextInt();		while (t-- > 0 ) {			String s = sc.nextLine();			StringBuilder st ;			StringBuilder nums; int sum  ;			if (check(s) == 1) {							st = new StringBuilder();				 nums = new StringBuilder();  sum = 0 ;					for (int i = s.length()-1 ; i >= 0 ; i -- ) {					// -64					if (!Character.isDigit(s.charAt(i))) {						for (int j = 0 ; i >=0  ; j++ , i -- ) {							sum += (s.charAt(i)-64)*Math.pow(26, j);													}					}					else nums.insert(0, s.charAt(i));				}				pw.println("R" + nums+ "C"+ sum);			}			else {				 st = new StringBuilder();				 nums = new StringBuilder();  sum = 0 ;//				 System.out.println(nums);				for(int i = 1 ; i <s.length() ; i ++ ) {					if(s.charAt(i) != 'C') {						st.append(s.charAt(i));					}					else for(i = i+1 ; i < s.length() ; i ++ ) {						nums.append(s.charAt(i));					}				}				int clm = Integer.parseInt(nums.toString());				String clmString = s26(clm);							pw.println(clmString+""+st);			}					}  					pw.close ();	}	static class Scanner {		StringTokenizer st;		BufferedReader br; 		public Scanner(InputStream s) {			br = new BufferedReader(new InputStreamReader(s));		} 		public Scanner(String file) throws FileNotFoundException {			br = new BufferedReader(new FileReader(file));		} 		public String next() throws IOException {			while (st == null || !st.hasMoreTokens())				st = new StringTokenizer(br.readLine());			return st.nextToken();		} 		public int nextInt() throws IOException {			return Integer.parseInt(next());		}		public long nextLong() throws IOException {			return Long.parseLong(next());		} 		public String nextLine() throws IOException {			return br.readLine();		}		public double nextDouble() throws IOException {			return Double.parseDouble(next());		} 		public boolean ready() throws IOException {			return br.ready();		} 	}  } 	  	  		 						 	  	    	 		 	
