import stringt = int(input()) def to_26(y):    ans = str()    while(y > 0):        r = int(y % 26)                if r == 0 : r = 26        r -= 1        y -= r        ans += chr(ord('A') + r)        if y == 0: continue        y = int(y / 26)        ans = ans[::-1]    return ans def from_26(q):    ans = int()    i = int()    base = len(q) - 1       while(base > -1):        le = ord(q[i]) - 64                bas = int(1)        qk = int()        while (qk < base ):            bas *= 26            qk += 1                ans += le * bas         base -= 1        i += 1     return ans   while(t > 0):    t -= 1    s = input()    r = s.find('R')    c = s.find('C')     if(r != -1 and c != -1 and s[r+1].isdigit() and s[c+1].isdigit()):        u = 0        rnm = str()        while(s[u] != 'C'):                        if(s[u] == 'R'):                 u += 1                continue            rnm += s[u]            u += 1        s = s[u + 1:]        cnm = int(s)        print(to_26(cnm),rnm ,sep="")        else:        v = int()        m = str()        while(s[v].isdigit() == 0):            m += s[v]            v += 1                s = s[v:]        ansy = from_26(m)        print('R',s,'C',ansy,sep="")
