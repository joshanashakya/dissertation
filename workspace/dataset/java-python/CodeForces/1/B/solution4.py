"""CONTESTANT: ngtien2CONTEST: Codeforces Beta Round #1LANGUAGE: Python 3.7PROBLEM: B. Spreadsheets""" # Courtesy to `@kakkarotssj` in Python 2# My interpretation: To improve speed in slow Python, we program a# *parser* which only loops once through input. And think more dynamic# when dealing with positional number systems (i.e. not reversing# something and iterating through in a complicated manner, but simply# treat the number as *[a1a2a3...an] = [a1a2...a(n-1)]*b + an* in base# *b*. for _ in range(int(input())):    cell = input()    split = cell.split("C")    # Alternative notation    if len(split) >= 2 and split[-2] and split[-2][-1].isdigit():        row, col = split[0][1:], int(split[1])        base_26 = []         while col:            digit = col % 26            if digit:                base_26.append(digit)                col //= 26            else:                base_26.append(26)                col = col//26 - 1         col_alpha = ""        for digit in base_26:            col_alpha = chr(digit+64) + col_alpha         print(f"{col_alpha}{row}")     else:  # Normal notation        row = col = 0        for char in cell:            if char.isdigit():                row = row*10 + int(char)            else:                col = col*26 + ord(char)-64        print(f"R{row}C{col}")
