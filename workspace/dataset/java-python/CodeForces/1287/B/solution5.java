import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.HashSet;import java.util.StringTokenizer; public class HyperSet {    public static void main(String[] args) {        FastReader input=new FastReader();        int n=input.nextInt();        int l=input.nextInt();        String str[]=new String[n];        HashMap<String,Integer> map=new HashMap<>();        for(int i=0;i<n;i++)        {            str[i]=input.next();            map.put(str[i],i);        }        int count=0;        int sum='S'+'T'+'E';        for(int i=0;i<n-2;i++)        {            for(int j=i+1;j<n-1;j++)            {                String s1=str[i];                String s2=str[j];                String s3="";                for(int k=0;k<l;k++)                {                    if(s1.charAt(k)==s2.charAt(k))                    {                        s3+=s1.charAt(k);                    }                    else                    {                        s3+=(char)(sum-s1.charAt(k)-s2.charAt(k));                    }                }                if(map.containsKey(s3))                {                    int key=map.get(s3);                    if(key>j)                    {                        count++;                    }                }            }        }        System.out.println(count);    }    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }}
