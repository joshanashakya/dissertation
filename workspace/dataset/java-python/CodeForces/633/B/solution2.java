import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader; import java.util.Scanner;import java.util.StringTokenizer;  public class Main {	static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(                new InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() { return Integer.parseInt(next()); }         long nextLong() { return Long.parseLong(next()); }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try {                str = br.readLine();            }            catch (IOException e) {                e.printStackTrace();            }            return str;        }    }		public static int zeroes(int n) {		int count = 0;		while(n>0) {			n /= 5;			count += n;		}		return count;	}		public static void binarySearch(int n) {		int low =0;		int high = Integer.MAX_VALUE;		while( low < high) {			int middle = (low + high)/2;			int count = zeroes(middle);			if(count < n) {				low = middle + 1;			}			else {				high = middle;			}		}		int ans[] = new int[1000];		int k = 0;		while(zeroes(low)==n) {			ans[k] = low;			k++;			low++;		}		System.out.println(k);		for (int i = 0; i < k; i++) {			System.out.print(ans[i] + " ");		}	}  	public static void main(String[] args)  {		Scanner s = new Scanner(System.in);		FastReader sc = new FastReader();		int n = sc.nextInt();		binarySearch(n);	} }  			 				   	 			     	   			 	
