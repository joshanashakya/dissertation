def STR(): return list(input())def INT(): return int(input())def MAP(): return map(int, input().split())def MAP2():return map(float,input().split())def LIST(): return list(map(int, input().split()))def STRING(): return input()import stringimport sysfrom heapq import heappop , heappushfrom bisect import *from collections import deque , Counter , defaultdictfrom math import *from itertools import permutations , accumulatedx = [-1 , 1 , 0 , 0  ]dy = [0 , 0  , 1  , - 1]#visited = [[False for i in range(m)] for j in range(n)]#sys.stdin = open(r'input.txt' , 'r')#sys.stdout = open(r'output.txt' , 'w')#for tt in range(INT()):  #CODE  team_home = STRING()team_away = STRING()n = INT()st1 = set()st2 = set()d = defaultdict(list)for i in range(1 , 100):    d[i] = [0 , team_home] d2 = defaultdict(list)for i in range(1 , 100):    d2[i] = [0 , team_away] res = []for i in range(n):    l= input().split()    t = int(l[0])    s = l[1]    num = int(l[2])    c = l[3]    if (s == 'h' and num not in st1) or (s == 'a' and num not in st2):        if c == 'r':            if s == 'h':                res.append([team_home , num , t])                st1.add(num)            else:                res.append([team_away , num , t])                st2.add(num)        else:            if s == 'h':                if d[num][0] == 0 :                    d[num][0] = 1                else:                    res.append([team_home , num , t])                    st1.add(num)            else:                if d2[num][0] == 0 :                    d2[num][0] = 1                else:                    res.append([team_away , num , t])                    st2.add(num) #print(res)for i in res:    print(*i)    
