import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.io.PrintWriter;import java.io.BufferedWriter;import java.io.IOException;import java.io.InputStreamReader;import java.util.ArrayList;import java.util.StringTokenizer;import java.io.Writer;import java.io.OutputStreamWriter;import java.io.BufferedReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        OutputWriter out = new OutputWriter(outputStream);        BVasyaAndWrestling solver = new BVasyaAndWrestling();        solver.solve(1, in, out);        out.close();    }     static class BVasyaAndWrestling {        public void solve(int testNumber, InputReader in, OutputWriter out) {            int n = in.nextInt();            int[] arr = in.nextIntArray(n);            ArrayList<Integer> w1 = new ArrayList<>();            ArrayList<Integer> w2 = new ArrayList<>();            long cw1 = 0, cw2 = 0;            for (int i = 0; i < n; i++) {                if (arr[i] > 0) {                    cw1 += arr[i];                    w1.add(arr[i]);                } else {                    cw2 += -arr[i];                    w2.add((-arr[i]));                }            }            if (cw1 > cw2) {                out.println("first");            } else if (cw2 > cw1) {                out.println("second");            } else {                for (int i = 0; i < w1.size(); i++) {                    if (w1.get(i) > w2.get(i)) {                        out.println("first");                        return;                    } else if (w2.get(i) > w1.get(i)) {                        out.println("second");                        return;                    }                }                out.println(arr[n - 1] > 0 ? "first" : "second");            }        }     }     static class InputReader {        BufferedReader reader;        StringTokenizer tokenizer;         public InputReader(InputStream stream) {            reader = new BufferedReader(new InputStreamReader(stream), 32768);            tokenizer = null;        }         public String next() {            while (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return tokenizer.nextToken();        }         public int[] nextIntArray(int n) {            int[] array = new int[n];            for (int i = 0; i < n; ++i) array[i] = nextInt();            return array;        }         public int nextInt() {            return Integer.parseInt(next());        }     }     static class OutputWriter {        private final PrintWriter writer;         public OutputWriter(OutputStream outputStream) {            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));        }         public OutputWriter(Writer writer) {            this.writer = new PrintWriter(writer);        }         public void print(Object... objects) {            for (int i = 0; i < objects.length; i++) {                if (i != 0) {                    writer.print(' ');                }                writer.print(objects[i]);            }        }         public void println(Object... objects) {            print(objects);            writer.println();        }         public void close() {            writer.close();        }     }} 
