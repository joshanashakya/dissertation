import java.io.*;import java.util.*; public class B {    private static class Cup implements Comparable<Cup> {        public int price;        public int weight;         Cup(int price, int weight) {            this.price = price;            this.weight = weight;        }         @Override        public int compareTo(Cup other) {            if (this.price == other.price) {                return this.weight - other.weight;            }            return other.price - this.price;        }    }    public static void main(String args[]) {        Scanner in = new Scanner(System.in);        int n = in.nextInt();        int m = in.nextInt();        int d = in.nextInt();         Cup a[] = new Cup[n];        Cup b[] = new Cup[m];         for (int i = 0; i < n; ++i) {            int c = in.nextInt();            int w = in.nextInt();            a[i] = new Cup(c, w);        }         for (int i = 0; i < m; ++i) {            int c = in.nextInt();            int w = in.nextInt();            b[i] = new Cup(c, w);        }        Arrays.sort(a);        Arrays.sort(b);         long mp = 0;                long cw = 0;        long cp = 0;         int mi = -1;        for (int i = 0; i < n; ++i) {            if (cw + a[i].weight <= d) {                cw += a[i].weight;                cp += a[i].price;                mi = i;            } else {                break;            }        }         int j = 0;        while (mi >= 0) {            while (j < m && cw + b[j].weight <= d) {                cw += b[j].weight;                cp += b[j].price;                ++j;            }            if (j > 0) {                mp = Math.max(mp, cp);            }            cp -= a[mi].price;            cw -= a[mi].weight;            --mi;        }        System.out.println(mp);    }}
