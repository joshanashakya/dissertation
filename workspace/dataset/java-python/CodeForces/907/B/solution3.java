import java.util.*;import java.io.*;/** * * @author alanl */public class Main{    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));    static StringTokenizer st;    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    static char[][]adj = new char[11][11];    static ArrayList<edge>x = new ArrayList(), y = new ArrayList();    public static void main(String[] args) throws IOException{        int xcnt = 0, ycnt = 0;        for(int i = 0; i<11; i++){            String s = readLine();            if(s.length()!=11)continue;            for(int j = 0; j<11; j++){                if(s.charAt(j)=='x'){                    xcnt++;                    x.add(new edge(i, j));                }                else if(s.charAt(j)=='o'){                    ycnt++;                    y.add(new edge(i, j));                }                adj[i][j] = s.charAt(j);            }        }        solve();        for(int i = 0; i<11; i++){            if(i==3||i==7){                println();                continue;            }            for(int j = 0; j<11; j++){                if(j==3||j==7)print(" ");                else print(adj[i][j]);            }            println();        }        println();    }    static void solve() throws IOException{        int a = readInt(), b = readInt();        if(a<=3)a--;        if(b<=3)b--;        if(a>=7)a++;        if(b>=7)b++;        if(a%4==0 && b%4==0)loop(3, 3);        else if(a%4==0 && b%4==1)loop(3, 7);        else if(a%4==0 && b%4==2)loop(3, 10);        else if(a%4==1 && b%4==0)loop(7, 3);        else if(a%4==1 && b%4==1)loop(7, 7);        else if(a%4==1 && b%4==2)loop(7, 10);        else if(a%4==2 && b%4==0)loop(10, 3);        else if(a%4==2 && b%4==1)loop(10, 7);        else if(a%4==2 && b%4==2)loop(10, 10);    }    static void loop(int a, int b){        int cnt = 0;        for(int i = a-3; i<=a; i++){            for(int j = b-3; j<=b; j++){                if(adj[i][j]=='.'){                    adj[i][j] = '!';                    cnt++;                }            }        }        if(cnt==0)fill();    }    static void fill(){        for(int i = 0; i<11; i++){            for(int j = 0; j<11; j++){                if(adj[i][j]=='.'){                    adj[i][j] = '!';                }            }        }    }    static class edge{        int x, y;        edge(int x0, int y0){            x = x0;            y = y0;        }    }    static String next () throws IOException {        while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(input.readLine().trim());        return st.nextToken();    }    static long readLong () throws IOException {        return Long.parseLong(next());    }    static int readInt () throws IOException {        return Integer.parseInt(next());    }    static double readDouble () throws IOException {        return Double.parseDouble(next());    }    static char readChar () throws IOException {        return next().charAt(0);    }    static String readLine () throws IOException {        return input.readLine().trim();    }    static void print(Object b) {        System.out.print(b);    }    static void println(Object b) {        System.out.println(b);    }    static void println() {        System.out.println();    }}
