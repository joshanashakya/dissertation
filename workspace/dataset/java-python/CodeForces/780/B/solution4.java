//package albert.codeforces.themeetingplacecannotbechanged780b; import java.util.Comparator;import java.util.Scanner; public class Solution {    public static void main(String[] args) {        double threshold = 1e-6;        Scanner scan = new Scanner(System.in);        int n = scan.nextInt();        int[][] f = new int[n][2];         for (int i = 0; i < n; i++) {            f[i][0] = scan.nextInt();        }        for (int i = 0; i < n; i++) {            f[i][1] = scan.nextInt();        }         Comparator<int[]> comparator = Comparator.comparingInt(o -> o[0]);        //Arrays.sort(f, comparator);          double lo = 0;        double hi = 1e9;         double prev = -1;         while (lo <= hi) {            double mid = lo + (hi - lo) / 2;            boolean can = true;             double min = 1e-9;            double max = 1e9;             for (int i = 0; i < f.length; i++) {                int c = f[i][0];                int s = f[i][1];                double localMin = c - s * mid;                double localMax = c + s * mid;                if (localMin <= max && localMin >= min || localMax >= min && localMax <= max || localMax >= max && localMin <= min) {                    max = Math.min(max, localMax);                    min = Math.max(min, localMin);                } else {                    can = false;                    break;                }            }            if (can) {                hi = mid;                if (Math.abs(mid - prev) <= threshold) {                    break;                } else {                    prev = mid;                }            } else {                lo = mid;            }        }        System.out.println(lo);    }}
