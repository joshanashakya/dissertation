//package albert.codeforces.frodoandpillows760b; import java.util.Scanner; public class Solution {    public static void main(String[] args) {        Scanner scan = new Scanner(System.in);        long h = scan.nextLong();        long p = scan.nextLong();        long k = scan.nextLong();        long lftovr = p - h;        long hi = p - h;        long lo = 0;        while (lo <= hi) {            long mid = lo + (hi - lo) / 2;            if (can(h, k, mid, lftovr)) {                lo = mid + 1;            } else {                hi = mid - 1;            }        }        System.out.println(hi + 1);    }     private static boolean can(long h, long k, long fp, long lftovr) {        long le = k - 1;        long ri = h - k;        long min = Math.min(le, ri);        long max = Math.max(le, ri);        long st = fp - 1;        final long aa = calcNeed(st, min);        final long bb = calcNeed(st, max);        return aa + bb <= lftovr - fp;    }     static long calcNeed(long highest, long len) {        if (len >= highest) {            return a(highest);        } else {            return a(highest) - a(highest - len);        }    }     static long a(long n) {        return (n * (n + 1)) / 2;    }}
