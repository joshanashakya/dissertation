import sys,os,iofrom sys import stdinfrom math import log, gcd, ceilfrom collections import defaultdict, deque, Counterfrom heapq import heappush, heappop, heapifyfrom bisect import bisect_left , bisect_rightimport math def ii():    return int(input())def li():    return list(map(int,input().split()))if(os.path.exists('input.txt')):    sys.stdin = open("input.txt","r") ; sys.stdout = open("output.txt","w") else:    input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline no = "NO"yes = "YES" def solve():    n = ii()    # print(n)    a = []    b = []    # print(a)    # n=len(a)    l = []    for i in range(n):        x,y = li()        l.append([x,y])        # a.append(x)        # b.append(y)    l.sort()    for i in range(n):        a.append(l[i][0])        b.append(l[i][1])    DP = [0]*(n)    for i in range(n):        x = bisect_left(a,a[i]-b[i])        if x==0:            DP[i]=1        else:            DP[i]=DP[x-1]+1    print(n-max(DP))        t = 1# t = int(input())for _ in range(t):    solve()    
