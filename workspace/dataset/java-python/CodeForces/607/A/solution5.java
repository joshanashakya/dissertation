import java.io.*;import java.math.*;         /* Author : Life Lover */import java.util.*; public class Main {     static FastReader in;    static PrintWriter o;     public static void solve() {        int n = in.nextInt();        int maxn = (int)1e6 + 5;        int[] dp = new int[maxn];        int[] b = new int[maxn];        int[] arr = new int[n];        for (int i = 0; i < n; i++) {            int a = in.nextInt();            arr[i] = a;            b[a] = in.nextInt();        }        if (b[0] != 0) dp[0] = 1;        for (int i = 1; i < maxn; i++) {            if (b[i] == 0) {                dp[i] = dp[i-1];            } else {                if (b[i] >= i) {                    dp[i] = 1;                } else {                    dp[i] = dp[i-b[i]-1] + 1;                }            }        }        int max = Integer.MIN_VALUE;        for (int i = 0;i < n; i++) {            max = Math.max(max, dp[arr[i]]);        }        o.println(n-max);        o.close();        return;    }     public static void main(String[] args) {        in = new FastReader();        o = new PrintWriter(System.out);        solve();        return;    }      static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         int[] readArray(int n) {            int[] a = new int[n];            for (int i = 0; i < n; i++) a[i] = nextInt();            return a;        }         long[] readLongArray(int n) {            long[] a = new long[n];            for (int i = 0; i < n; i++) a[i] = nextLong();            return a;        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    } }
