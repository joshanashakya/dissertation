import java.io.*;import java.util.*; public class Main{     static int n;    static int[] arr;      static int[][] dp;     static int recur(int L, int R){         if(L > R)            return 0;        if(L == R)            return 1;        if(dp[L][R] != -1)            return dp[L][R];        int res = Integer.MAX_VALUE;        if(arr[L] == arr[R]) // 两个端点相同，则求出里面的最小值即可，外面的两个端点一点可以消去            res = Math.min(res, recur(L+1, R-1) + (L == R-1 ? 1 : 0)); // 注意类似(2 2)要返回1,而不是返回0        for(int i = L; i < R; i++)             res = Math.min(res, recur(L, i) + recur(i+1, R));        return dp[L][R] = res;    }     public static void main(String[] args) {        Scanner cin = new Scanner(new BufferedInputStream(System.in));        PrintStream out = System.out;        n = cin.nextInt();        arr = new int[n];        for(int i = 0; i < n; i++)            arr[i] = cin.nextInt();        dp = new int[n][n];        for(int i = 0; i < n; i++)            for(int j = 0; j < n; j++)                dp[i][j] = -1;        out.println(recur(0, n-1));    }}
