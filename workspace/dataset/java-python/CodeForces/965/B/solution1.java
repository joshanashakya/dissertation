import java.io.*;import java.util.*; public class B_Battleship{        public static void main(String[] args) throws Exception{        int[] nk = in.readA();        int n = nk[0], k = nk[1];        int[][] mat = new int[n][n];        char[][] inpMat = new char[n][];        for(int i = 0; i < n; i++){            inpMat[i] = in.readLine().toCharArray();        }        // check vertical        for(int i = 0; i < n; i++){            for(int j = 0; j < n; j++){                boolean valid = true;                for(int t = 0; t < k; t++){                    if(i+t >= n || inpMat[i+t][j] == '#')                        valid = false;                }                if(valid)                    for(int t = 0; t < k; t++){                        mat[i+t][j] +=1;                    }            }        }        int ans[] = new int[2], mxs = 0;        // check horizontal        for(int i = 0; i < n; i++){            for(int j = 0; j < n; j++){                boolean valid = true;                for(int t = 0; t < k; t++){                    if(j+t >= n || inpMat[i][j+t] == '#')                        valid = false;                }                if(valid)                    for(int t = 0; t < k; t++){                        mat[i][j+t] +=1;                    }                if(mat[i][j] > mxs){                    ans[0] = i;                    ans[1] = j;                    mxs = mat[i][j];                }            }        }        System.out.println((ans[0]+1)+" "+(ans[1]+1));    }     static Inputer in;    static {        in = new Inputer();    }     static class Inputer{        BufferedReader br;        Inputer(){            try{                br = new BufferedReader(new InputStreamReader(System.in));            }            catch(Exception e){}        }        public int readInt() throws Exception{            return Integer.parseInt(readLine());        }        public long readLong() throws Exception{            return Long.parseLong(readLine());        }        public int[] readA(String delim) throws Exception{            String[] s = readLine().split(delim);            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public int[] readA() throws Exception{            String[] s = readLine().split("\\s+");            int[] A = new int[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Integer.parseInt(s[i]);            return A;        }        public long[] readLA() throws Exception{            String[] s = readLine().split("\\s+");            long[] A = new long[s.length];            for(int i = 0; i < s.length; i++)                A[i] = Long.parseLong(s[i]);            return A;        }        public String readLine() throws Exception{            return br.readLine();        }        public int[] copyA(int[] A){            int[] B = new int[A.length];            for(int i= 0 ; i < A.length; i++)                B[i] = A[i];            return B;        }    }    static void shuffle(int[] A){        int n = A.length;        Random rand = new Random();        for(int t = 0; t < A.length; t++){            int i1 = rand.nextInt(n);            int i2 = rand.nextInt(n);            int tmp = A[i1];            A[i1] = A[i2];            A[i2] = tmp;        }    }}
