import sys  def read_input(input_path=None):    if input_path is None:        f = sys.stdin    else:        f = open(input_path, 'r')     n, k = map(int, f.readline().split())    field = list()    for _ in range(n):        field.append(f.readline().rstrip())     return n, k, field  # def sol(n, k, field):#     ans = [(1, 1)]#     horizonal = [[0 for _ in range(n)] for _ in range(n)]#     for i in range(n):#         for j in range(n):#             if field[i][j] == '#':#                 horizonal[i][j] = 0#             elif i == 0:#                 horizonal[i][j] = 1#             else:#                 horizonal[i][j] = horizonal[i - 1][j] + 1#     vertical = [[0 for _ in range(n)] for _ in range(n)]#     for i in range(n):#         for j in range(n):#             if field[i][j] == '#':#                 vertical[i][j] = 0#             elif j == 0:#                 vertical[i][j] = 1#             else:#                 vertical[i][j] = vertical[i][j - 1] + 1# #     f = [[0 for _ in range(n)] for _ in range(n)]#     for i in range(n):#         for j in range(n):#             for z in range(k):#                 if i + z < n and k <= horizonal[i + z][j]:#                     f[i][j] += 1#                 if j + z < n and k <= horizonal[i][j + z]:#                     f[i][j] += 1#             if f[ans[0][0] - 1][ans[0][1] - 1] < f[i][j]:#                 ans = [(i + 1, j + 1)]#             elif f[ans[0][0] - 1][ans[0][1] - 1] < f[i][j]:#                 ans.append((i + 1, j + 1))#     if sum([sum(f[i]) for i in range(n)]) == 0:#         ans = list()#         for i in range(n):#             for j in range(n):#                 if field[i][j] == '.':#                     ans.append((i + 1, j + 1))# #     return ans def sol(a, b, z):    r=[[0]*a for _ in " "*a]    c=[[0]*a for _ in " "*a]    for i in range(a):        for j in range(a-b+1):            ok=1            for k in range(b):                if z[i][j+k]=='#':ok=0;break            if ok:                for k in range(b):                    r[i][j+k]+=1            ok=1            for k in range(b):                if z[j+k][i]=='#':ok=0;break            if ok:                for k in range(b):                    c[j+k][i]+=1    i1,j1=1,1;ma=0    for i in range(a):        for j in range(a):            if c[i][j]+r[i][j]>ma:i1=i+1;j1=j+1;ma=c[i][j]+r[i][j]    return [(i1, j1)] ### def answer(input_path=None):#     return battleship(*read_input(input_path))### def judge(input_path, outputs):#     try:#         assert len(outputs) == 1##         x, y = map(int, outputs[0].split())##         ans = battleship(*read_input(input_path))#         print(ans)##         # if (x, y) in ans:#         #     return 'passed'#         # return 'wrong answer'#         if x == ans[0] and y == ans[1]:#             return 'passed'#         return 'wrong answer'#     except:#         return 'runtime error'  def main():    for ans in sol(*read_input()):        print(f"{' '.join(map(str, ans))}")        break  if __name__ == '__main__':    main()    # print(judge('/mnt/sdb2/data/contest21/4/C/sample/test_53.txt', ['1 8']))
