import java.io.*;import java.util.*;Â public class CF685A {	static int digits(int n) {		return n == 0 ? 0 : 1 + digits(n / 7);	}	static int power(int k) {		return k == 0 ? 1 : 7 * power(k - 1);	}	static boolean[] used = new boolean[7];	static boolean valid(int n, int k) {		for (int d = 0; d < 7; d++)			used[d] = false;		for (int i = 0; i < k; i++) {			int d = n % 7;			if (used[d])				return false;			used[d] = true;			n /= 7;		}		return true;	}	public static void main(String[] args) throws IOException {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		StringTokenizer st = new StringTokenizer(br.readLine());		int n = Integer.parseInt(st.nextToken());		int m = Integer.parseInt(st.nextToken());		int kn = n == 1 ? 1 : digits(n - 1);		int km = m == 1 ? 1 : digits(m - 1);		int k = kn + km;		if (k > 7) {			System.out.println(0);			return;		}		int M = power(km);		int cnt = 0;		for (int n_ = 0; n_ < n; n_++)			for (int m_ = 0; m_ < m; m_++) {				int nm = n_ * M + m_;				if (valid(nm, k))					cnt++;			}		System.out.println(cnt);	}}
