import java.io.*;import java.util.*;public final class robbers_watch{    static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));	static FastScanner sc=new FastScanner(br);    static PrintWriter out=new PrintWriter(System.out);	static int n,m,len,len1,len2;		static int getLen(int val)	{		if(val<7)		{			return 1;		}		return 1+getLen(val/7);	}		static long solve(int idx,int mask,long val1,long val2)	{		if(idx>len)		{			if(val1<=n-1 && val2<=m-1)			{				return 1;			}			return 0;		}		long ret=0;		for(int i=0;i<7;i++)		{			if((mask&(1<<i))==0)			{				if(idx<=len1)				{					ret=ret+solve(idx+1,mask|(1<<i),val1+((int)Math.pow(7,idx-1)*i),0);				}				else				{					ret=ret+solve(idx+1,mask|(1<<i),val1,val2+((int)Math.pow(7,idx-len1-1)*i));				}			}		}		return ret;	}		public static void main(String args[]) throws Exception	{		n=sc.nextInt();m=sc.nextInt();len1=getLen(n-1);len2=getLen(m-1);		if(len1+len2>7)		{			out.println(0);		}		else		{			len=len1+len2;long res=0;			for(int i=0;i<7;i++)			{				res=(res+solve(2,1<<i,i,0));			}			out.println(res);		}		out.close();	}}class FastScanner{    BufferedReader in;    StringTokenizer st;     public FastScanner(BufferedReader in) {        this.in = in;    }	    public String nextToken() throws Exception {        while (st == null || !st.hasMoreTokens()) {            st = new StringTokenizer(in.readLine());        }        return st.nextToken();    }		public String next() throws Exception {		return nextToken().toString();	}	    public int nextInt() throws Exception {        return Integer.parseInt(nextToken());    }     public long nextLong() throws Exception {        return Long.parseLong(nextToken());    }     public double nextDouble() throws Exception {        return Double.parseDouble(nextToken());    }}
