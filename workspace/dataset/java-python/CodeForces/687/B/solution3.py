import sys, mathinput = sys.stdin.readline def getInts():    return [int(s) for s in input().split()] def getInt():    return int(input()) def getStrs():    return [s for s in input().split()] def getStr():    return input().strip() def listStr():    return list(input().strip()) import collections as colimport math def prime_factors(n):    factors = []    num = 0    while n % 2 == 0:        num += 1        n //= 2    if num:        factors.append((2,num))    i = 3    while n > 1 and i*i <= n:        num = 0        while n % i == 0:            num += 1            n //= i        if num:            factors.append((i,num))        i += 2    if n > 2:        factors.append((n,1))    return factors def fails(num,C):    for c in C:        if c % num == 0:            return False    return True def solve():    #we need to know whether, amongst the C values, there are two or more pairwise coprime values whose product equals K    N, K = getInts()    C = set(getInts())    K_facs = prime_factors(K)    for k0, k1 in K_facs:        if fails(k0**k1,C):            return "No"    return "Yes"    #for _ in range(getInt()):print(solve())     
