import java.io.*;import java.util.*; public class Solution {	 public static void main(String[] args) throws Exception    {		     FastReader fr=new FastReader();            		     String s=fr.next();             int cl=0;             int op=0;             for(int i=0;i<s.length();i++) {            	 char c=s.charAt(i);            	 if(c==')')            		 cl++;            		              }                          int b=-1;             for(int i=0;i<=s.length();i++) {            	 if(op==cl) {            		 b=i;            		 break;            	 }            	 if(s.charAt(i)=='(')            		 op++;            	 else            		 cl--;             }             ArrayList<Integer> ans=new ArrayList<>();             for(int i=0;i<b;i++) {            	 if(s.charAt(i)=='(')            	 ans.add(i+1);             }             for(int i=b;i<s.length();i++) {            	 if(s.charAt(i)==')')            	 ans.add(i+1);             }             if(ans.size()==0)            	 System.out.println(0);             else {            	 System.out.println(1);            	            	 System.out.println(ans.size());            	 for(int i:ans)            		 System.out.print(i+" ");            	              }                             }	 public static boolean isPrime(int n) {		 		 for(int i=2;(i*i)<=n;i++) {			 if(n%i==0)				 return false;		 }		 return true;	 }            	                                } class Pair{	 int x;	 int y;	 Pair(int x,int y){		 this.x=x;		 this.y=y;	 } }		 		 	     class FastReader{    BufferedReader br;    StringTokenizer st;     public FastReader()    {        br = new BufferedReader(new                InputStreamReader(System.in));    }     String next()    {        while (st == null || !st.hasMoreElements())        {            try            {                st = new StringTokenizer(br.readLine());            }            catch (IOException e)            {                e.printStackTrace();            }        }        return st.nextToken();    }     int nextInt()    {        return Integer.parseInt(next());    }     long nextLong()    {        return Long.parseLong(next());    }     double nextDouble()    {        return Double.parseDouble(next());    }     String nextLine()    {        String str = "";        try        {            str = br.readLine();        }        catch (IOException e)        {            e.printStackTrace();        }        return str;    }} 
