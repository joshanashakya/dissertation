import sys,os,ioimport math,bisect,operatorinf,mod = float('inf'),10**9+7# sys.setrecursionlimit(10 ** 6)from itertools import groupby,accumulatefrom heapq import heapify,heappop,heappushfrom collections import deque,Counter,defaultdictinput = iter(sys.stdin.buffer.read().decode().splitlines()).__next__Neo = lambda : list(map(int,input().split()))# test, = Neo()s = list(input())m, = Neo()A = Neo()n = len(s)mark = [0]*(n+1)for i in A:    l = i-1    r = n-i-1    mark[l] += 1    mark[r+1] -= 1mark = list(accumulate(mark))  # print(mark)for i in range(n//2):    if mark[i]%2:        s[i],s[n-i-1] = s[n-i-1],s[i]print(''.join(s))        
