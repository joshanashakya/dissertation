import math,sys,bisect,heapq,osfrom collections import defaultdict,Counter,dequefrom itertools import groupby,accumulatefrom functools import lru_cache#sys.setrecursionlimit(200000000)int1 = lambda x: int(x) - 1def input(): return sys.stdin.readline().rstrip('\r\n')#input = iter(sys.stdin.buffer.read().decode().splitlines()).__next__aj = lambda: list(map(int, input().split()))def list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]#MOD = 1000000000 + 7def Y(c):  print(["NO","YES"][c])def y(c):  print(["no","yes"][c])def Yy(c):  print(["No","Yes"][c]) def solve():	s = input()	n, = aj()	A = aj()	dif = [0]*(len(s)+1)	for i in A:		dif[i-1] += 1		dif[len(s)-i+1] -= 1	#print(dif)	dif = list(accumulate(dif))	Ans = [*s]	#print(A)	for i in range(len(dif)-1):		if dif[i]%2:			Ans[i],Ans[len(s)-i-1] = Ans[len(s)-i-1],Ans[i]			dif[len(s)-i-1] = 0	print("".join(Ans))      try:	#os.system("online_judge.py")	sys.stdin = open('input.txt', 'r') 	sys.stdout = open('output.txt', 'w')except:	pass solve()
