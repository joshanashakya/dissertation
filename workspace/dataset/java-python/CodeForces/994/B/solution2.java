import java.text.*;import java.util.*;  public class Main {	public static void main(String[] args) {		Scanner scanner = new Scanner(System.in);		int n = scanner.nextInt();		int k = scanner.nextInt();		ArrayList<Integer> a = new ArrayList<>();		for (int i = 0; i < 13; ++i)			a.add(0);		a.set(0, 0x3f3f3f3f);		int opt = 0;		ArrayList<A> arr = new ArrayList<>();		arr.add(new A(-100, 0, -100, 0));		for (int i = 1; i <= n; ++i)		{			arr.add(new A(scanner.nextInt(),0, i, 0));		}		for (int i = 1; i <= n; ++i)		{			A temp = new A(arr.get(i).power,scanner.nextInt(), i, 0);			arr.set(i, temp);		}		Collections.sort(arr, new Comparator<A>() {			public int compare(A o1, A o2)			{				return o1.power < o2.power ? -1						: (o1.power == o2.power ? 0 : 1);			}		});		A temp = new A(arr.get(1).power, arr.get(1).coins,				arr.get(1).id, arr.get(1).coins);		arr.set(1, temp);		for (int i = 2; i <= n; ++i)		{			if (opt == k)			{				Collections.sort(a, new Comparator<Integer>() {					public int compare(Integer o1, Integer o2)					{						if (o1 < o2)							return 1;						else if (o1 == o2)							return 0;						return -1;					}				});				a.set(k, Math.max(a.get(k), arr.get(i - 1).coins));			}			if (opt < k)			{				opt++;				a.set(opt, arr.get(i - 1).coins);			}			for (int j = 1; j <= opt; j++)			{				A temp2 = new A(arr.get(i).power, arr.get(i).coins,					arr.get(i).id, arr.get(i).presure + a.get(j));				arr.set(i, temp2);			}			A temp2 = new A(arr.get(i).power, arr.get(i).coins,					arr.get(i).id, arr.get(i).presure + arr.get(i).coins);			arr.set(i, temp2);		}		Collections.sort(arr, new Comparator<A>() {			public int compare(A o1, A o2)			{				if (o1.id > o2.id)					return 1;				else if (o1.id == o2.id)					return 0;				return -1;			}		});		for (int i = 1; i <= n; ++i)		{			System.out.print(arr.get(i).presure + " ");		}		scanner.close();	} // end main} // end class  class A{	int power;	int coins;	int id;	long presure;	public A(int a, int b, int c, long d)	{		power = a;		coins = b;		id = c;		presure = d;	}}                      		  					  	   							    	 	
