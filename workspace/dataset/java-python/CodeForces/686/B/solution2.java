import java.io.*;import java.math.*;import java.security.*;import java.text.*;import java.util.*;import java.util.concurrent.*;import java.util.regex.*;import java.util.Arrays;import java.util.ArrayList;import java.lang.Math;    public class project {     static class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }                   String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }          static boolean binarySearch(int a[],int k,int l,int h){               while(l<=h){         int mid = (l+h)/2;         if(a[mid]==k) return true;         else if(a[mid]>k) h=mid-1;         else if(a[mid]<k) l =mid+1;      }                return false;    }        public static void main(String[] args) throws Exception     {                FastReader sc = new FastReader();               int n = sc.nextInt();       int a[] = new int[n];       int m[] = new int[n];              for(int i= 0;i<n;i++) { int c = sc.nextInt(); a[i]=c; m[i]=c;}       Arrays.sort(m);                    int b[][] = new int[20000][2];       int k = 0,x=0;       boolean f = true;       int i,j;       while(true && f){        // System.out.print("1");         i=0;          for(;i<n-1;){        // System.out.print(i+" ");           if(a[i]>a[i+1]){               int c = a[i+1];               a[i+1] = a[i];               a[i]= c;                              x++;               if(x<=20000){               b[k][0]=i+1;               b[k][1]=i+2;               k++;               i+=2;               }           }           else i++;       }       j=0;       for(i=0;i<n;i++){           if(a[i] != m[i]){break;}           else j++;       }       if(j==n) f = false;           }     for(i=0;i<x;i++){         System.out.println(b[i][0]+ " "+b[i][1]);     }       }}                    
