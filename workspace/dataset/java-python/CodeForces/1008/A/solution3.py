# MasterKali from sys import stdinfrom collections import Counter, defaultdict, dequefrom math import sqrt, factorial, log10, log, floor, ceilfrom itertools import permutations, combinations, combinations_with_replacement, product input = stdin.readlinedef li(): return list(map(int, input().split()))def lis(): return list(map(str, input().split()))def mp(): return map(int, input().split())def inp(): return int(input())def inps(): return str(input().strip())def pr(n): return stdout.write(str(n)+"\n") def primes(pmax):	D = {}	q = 2	while q <= pmax:		if q not in D:			yield q			D[q*q] = [q]		else:			for p in D[q]:				D.setdefault(p+q, []).append(p)			del D[q]		q+=1 def gcd(i, j):	while j > 0:		i, j = j, i%j	return i  INF = float('inf')  def solve():	s = inps()	vowel = ['a', 'o', 'u', 'i', 'e'] 	flag = True	nxt = 1	for i in range(len(s)):		if s[i] not in vowel and nxt == 0:			flag = False			break		elif s[i] not in vowel and s[i] != 'n':			nxt = 0		elif s[i] in vowel or s[i] == 'n':			nxt = 1		if i == len(s)-1 and (s[i] not in vowel and s[i] != 'n'):			flag = False 	if flag == True: print("YES")	else: print("NO")t = 1for i in range(t):		solve() 
