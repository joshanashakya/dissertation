import java.util.*;import java.io.*;import java.lang.*; public class MainClass {	    private static BufferedReader br = null;	private static StringTokenizer st = null;		static {			br = new BufferedReader(new InputStreamReader(System.in));	}		private static String str() throws IOException {		return br.readLine();	}		private static int ints() throws IOException {		return Integer.parseInt(br.readLine());	}		private static int[] ints(int N) throws IOException {		st = new StringTokenizer(br.readLine());		int[] nums = new int[N];		for(int i = 0; i < N; i += 1) {			nums[i] = Integer.parseInt(st.nextToken());		}		return nums;	}		public static void main(String[] args) throws IOException {		int N = ints();		int[] nums = ints(N);		Solution obj = new Solution();		System.out.println(obj.pairs(nums, N));    }} class Solution {	public int pairs(int[] nums, int N) {		Map<Integer, Integer> hm = new HashMap<>();		for(int num : nums) {		    if(num == 0) continue;		    hm.put(num, hm.getOrDefault(num, 0) + 1);		}				int cnt_pairs = 0;				for(int freq : hm.values()) {		    if(freq > 2) return -1;		    if(freq == 2) cnt_pairs += 1;		}			    return cnt_pairs == 0 ? 0 : cnt_pairs;	}} 
