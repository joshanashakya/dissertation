import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.StringTokenizer; public class B222 {     public static void main(String[] args) throws IOException {        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer tokenizer = new StringTokenizer(br.readLine());        int R = Integer.parseInt(tokenizer.nextToken());        int C = Integer.parseInt(tokenizer.nextToken());        int Q = Integer.parseInt(tokenizer.nextToken());        int[][] A = new int[R][C];        for (int r=0; r<R; r++) {            tokenizer = new StringTokenizer(br.readLine());            for (int c=0; c<C; c++) {                A[r][c] = Integer.parseInt(tokenizer.nextToken());            }        }        int[] rows = new int[R];        int[] columns = new int[C];        for (int r=0; r<R; r++) {            rows[r] = r;        }        for (int c=0; c<C; c++) {            columns[c] = c;        }        StringBuilder output = new StringBuilder();        for (int q=0; q<Q; q++) {            tokenizer = new StringTokenizer(br.readLine());            char type = tokenizer.nextToken().charAt(0);            int x = Integer.parseInt(tokenizer.nextToken())-1;            int y = Integer.parseInt(tokenizer.nextToken())-1;            if (type == 'c') {                int temp = columns[x];                columns[x] = columns[y];                columns[y] = temp;            } else if (type == 'r') {                int temp = rows[x];                rows[x] = rows[y];                rows[y] = temp;            } else {                int answer = A[rows[x]][columns[y]];                output.append(answer).append('\n');            }        }        System.out.print(output);    } }
