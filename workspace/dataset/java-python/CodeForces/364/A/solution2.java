import java.util.*;import java.io.*; public class Main {    public static void main(String[] args) throws IOException {        FastScanner in = new FastScanner(System.in);        PrintWriter out = new PrintWriter(System.out);        new Main().run(in, out);        out.close();    }     void run(FastScanner in, PrintWriter out) {         long a = in.nextInt();        char[] ca = in.next().toCharArray();        int n = ca.length;         Map<Long, Long> rangeSumCount = new HashMap<>();         long cnt = 0;        for (int l = 0; l < n; l++) {            long sum = 0;            for (int r = l; r < n; r++) {                sum += ca[r]-'0';                long prev = rangeSumCount.getOrDefault(sum, 0L);                rangeSumCount.put(sum, prev + 1);            }        }         for (long l : rangeSumCount.keySet()) {            if (a == 0) {                cnt += rangeSumCount.getOrDefault(0L, 0L) * rangeSumCount.get(l);            }            if (l != 0 && (a%l == 0) && rangeSumCount.containsKey(a/l)) {                cnt += rangeSumCount.get(l) * rangeSumCount.get(a/l);            }        }          out.println(cnt);    }     static class FastScanner {        BufferedReader br;        StringTokenizer st;         public FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }    }}
