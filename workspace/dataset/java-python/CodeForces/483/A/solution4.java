import java.util.*;import java.lang.*;import java.io.*; 	public class FastIO{					BufferedReader br;		StringTokenizer st;				public FastIO(){ // constructor						br = new BufferedReader(new InputStreamReader(System.in));		}				String next(){						while (st == null || !st.hasMoreElements()){				try{					st = new StringTokenizer(br.readLine());				}								catch (IOException e){					e.printStackTrace();				}			}			return st.nextToken();		}				int nextInt(){						return Integer.parseInt(next());		}				long nextLong(){						return Long.parseLong(next());		}				double nextDouble(){			return Double.parseDouble(next());		} 		String nextLine(){						String str = "";			try{								str = br.readLine();			}			catch (IOException e){								e.printStackTrace();			}			return str;		}				// T.C. -> O(log N) N = max(a, b) 		static long gcd(long a, long b) {						if(b == 0) {				return a;			}						return gcd(b, a % b);		}			public static void main(String[] args) throws IOException {				FastIO in = new FastIO();		PrintWriter out = new PrintWriter(System.out);				// int n = io.nextInt(); -> for int		// double d = io.nextDouble(); -> for double		// String ch = io.next(); -> for one word		// String str = io.nextLine(); -> for the entire line				long l = in.nextLong();		long r = in.nextLong();				for(long a = l; a <= r; a++) {			for(long b = a + 1; b <= r; b++) {				if(gcd(a, b) == 1) {					for(long c = b + 1; c <= r; c++) {						if(gcd(b, c) == 1) {							if(gcd(a, c) != 1) {								System.out.println(a + " " + b + " " + c);								return;							}						}					}				}			}		}				System.out.println(-1);				out.flush();		out.close();	}}
