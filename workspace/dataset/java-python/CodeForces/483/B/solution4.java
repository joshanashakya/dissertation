import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.PrintWriter;import java.util.StringTokenizer; public class Main{	public static void main(String[] args) {		new Thread(null, new Runnable() {			public void run() {                solve();            }        }, "1", 1 << 26).start();	}	static void solve () {		FastReader fr =new FastReader();	PrintWriter op =new PrintWriter(System.out);				long c1 =fr.nextLong() ,c2 =fr.nextLong() ,x =fr.nextLong() ,y =fr.nextLong() ,l ,r ,md ,dm ,i ,j ,k ;		l =1 ;	r =j =(long)1e10 ;		while (l<=r) {		 	md =i =(l+r)/2l ;	dm =(i/x) + (i/y) - (i/(x*y)) ;	k =c1 ;		 			 	if (k <= (md - dm + (i/y - i/(x*y)))) {		 		k -= (i/y - i/(x*y)) ;	k =Math.max(k , 0l) ;		 		md -= (dm+k) ;		 		if (c2 <= (md + (i/x - i/(x*y)))) {		 			j =i ;	r =i-1l ;		 		}		 		else 	l =i+1l ;		 	}		 	else 	l =i+1l ;		} 		op.println(j) ;	op.flush();	op.close();	}	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br =new BufferedReader(new InputStreamReader(System.in));		} 		String next() {			while (st==null || (!st.hasMoreElements())) 			{				try				{					st =new StringTokenizer(br.readLine());				}				catch(IOException e)				{					e.printStackTrace();				}							}			return st.nextToken();		} 		String nextLine() {			String str =""; 			try			{				str =br.readLine();			}			catch(IOException e)			{				e.printStackTrace();			} 			return str;		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next()) ;		}	}}
