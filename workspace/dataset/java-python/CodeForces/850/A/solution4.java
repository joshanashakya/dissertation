import java.io.*;import java.util.*; public class Main {     public static void main(String[] args) throws Exception {        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));        PrintWriter out = new PrintWriter(System.out);        int n = Integer.parseInt(in.readLine());        int[][] a = new int[5][n];        for (int i = 0; i < n; i++) {            StringTokenizer st = new StringTokenizer(in.readLine());            for (int j = 0; j < 5; j++) {                a[j][i] = Integer.parseInt(st.nextToken());            }        }        int good = 0;        Queue<Integer> q = new LinkedList<>();        outer: for (int p1 = 0; p1 < n; p1++) {            int[][] b = new int[5][n];            for (int p2 = 0; p2 < n; p2++) {                if (p2 == p1) continue;                for (int j = 0; j < 5; j++) {                    b[j][p2] = a[j][p2]-a[j][p1];                }            }            for (int p2 = 0; p2 < n; p2++) {                for (int p3 = 0; p3 < n; p3++) {                    if (p2 == p1 || p3 == p1) continue;                    if (p2 == p3) continue;                   // System.out.println("POINT: ( " + p1 + " , " + p2 + " , " + p3 + " )");                    double num = 0;                    for (int j = 0; j < 5; j++) {                        num += b[j][p2]*b[j][p3];                    }                    double denA = 0;                    double denB = 0;                    for (int j = 0; j < 5; j++) {                        denA += b[j][p2]*b[j][p2];                        denB += b[j][p3]*b[j][p3];                    }                    denA = Math.sqrt(denA);                    denB = Math.sqrt(denB);                    //System.out.println("NUM: " + num);                    //System.out.println("DEN: " + (denA*denB));                    double frac = num/(denA*denB);                    //System.out.println(frac);                    if (Math.abs(frac) > 0.001 && Math.abs(frac) != 1) {                        continue outer;                    }                }            }            q.offer(p1+1);            good++;        }        out.println(good);        for (int i = 0; i < good; i++) {            out.println(q.poll());        }        out.close();    } } /*   */
