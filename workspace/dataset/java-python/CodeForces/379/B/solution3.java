import java.util.*;import java.io.*;public class problem2 {	public static void primeFactors(int n,ArrayList<Integer> arr)     {         // Print the number of 2s that divide n         while (n%2==0)         {             arr.add(2);             n /= 2;         }           // n must be odd at this point.  So we can         // skip one element (Note i = i +2)         for (int i = 3; i <= Math.sqrt(n); i+= 2)         {             // While i divides n, print i and divide n             while (n%i == 0)             {                 arr.add(i);                 n /= i;             }         }           // This condition is to handle the case whien         // n is a prime number greater than 2         if (n > 2)             arr.add(n);     } 	public static void main(String[] args) throws IOException {		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		int n = Integer.parseInt(br.readLine());		int arr[] = new int[n];		StringTokenizer st = new StringTokenizer(br.readLine());		int count0 = 0;		for(int i=0;i<n;i++) {			arr[i] = Integer.parseInt(st.nextToken());			if(arr[i] == 0)count0++;		}		int a2[] = new int[n];		for(int i=0;i<n;i++) {			while(a2[i]<arr[i]) {				if(i == 0) {					System.out.print("RLP");				}				else {					System.out.print("LRP");				}				a2[i]++;			}				if(i!=n-1) {					System.out.print("R");				}		}		System.out.println();    }Â }
