from os import pathimport sys,timefrom math import ceil, floor,gcd,log,log2 ,factorialfrom collections import defaultdict ,Counter , OrderedDict , dequefrom heapq import heapify , heappush , heappopfrom bisect import *# from functools import reducefrom operator import mulmaxx, mod  = float('inf') , int(1e9 + 7)localsys ,start_time = 0 , time.time()if (path.exists('input.txt')):    localsys = 1;sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');#left shift --- num*(2**k) --(k - shift)input = sys.stdin.readlinefor _ in range(int(input())):    s = list(input().rstrip() + '-1'*4)    #twone,one,two    ans , n = [] ,len(s)    i = 0    while i < n :        x = None        if s[i] == 't' and s[i+1] == 'w' and s[i+2] == 'o' and s[i+3] == 'n' and s[i+4] == 'e':            x = i+3            i+=4        elif s[i] == 't' and s[i+1] == 'w' and s[i+2] == 'o':            x = i+2            i+=2        elif s[i] == 'o' and s[i+1] == 'n'  and s[i+2] == 'e':            x = i+2            i+=2        i+=1        if x:ans.append(x)    print(len(ans)) ; print(*ans)                            # for _ in range (int(input())):#     n , m = map(int, input().split())#     prev , mini , maxi,ans  = 0 , m , m ,'YES'#     for __ in range(n):#         t , L , R = map(int , input().split())#         x = t - prev#         prev, mini , maxi  = t , mini - x , maxi + x#         if mini <= R and maxi >=L:#             mini, maxi  = max(L, mini) , min(maxi, R)#             continue#         ans = 'NO'#     else:print(ans)    # s = input().rstrip()# cnt ,  ans, arr  = [0]*26 , 0 , [[0 for i in range(26)] for j in range(26)]# for i in s:#     x = ord(i) - 97#     for j in range(26):#         arr[x][j]+=cnt[j] #x ka row mei sab elements ke saath add ho raha hai #     cnt[x]+=1# for i in range(26):#     for j in range(26):#         ans = max(ans , arr[i][j])#     ans = max(ans , cnt[i])# print(ans)  if localsys:    print("\n\n\nTime Elased :",time.time() - start_time,"seconds")
