import sysinput=sys.stdin.buffer.readlinedef dfs (start,end):    visited=[0 for i in range(n+1)]    stack=[start]    while stack:        start=stack.pop()        if(start==end or visited[start]):            continue        visited[start]=1        for i in graph[start]:            if(visited[i]==0):                stack.append(i)    return visited   for _ in range(int(input())):    n,m,a,b=map(int,input().split())    graph=[[] for i in range(n+1)]    for i in range(m):        x,y=map(int,input().split())        graph[x].append(y)        graph[y].append(x)    vis=dfs(a,b)    vis2=dfs(b,a)    ans1, ans2 = 0, 0    for i in range(1, n+1):        if i == a or i == b:continue        if vis[i] and not vis2[i]:            ans1 += 1        if not vis[i] and vis2[i]:            ans2 += 1    print(ans1*ans2)
