import java.util.*; public class Solution { 	static class Node {		int x, y; 		Node (int p) {			x = p;			y = p;		} 		Node(int p, int q) {			x = p;			y = q;		}	} 	public static long sum(Queue<Node> queue, int x) {		long result = 0;		boolean isRobotShutdown = false;		while(!queue.isEmpty()) {			Node currNode = queue.remove();			if(isRobotShutdown) {				result += currNode.y;				continue;			}			if(currNode.x % x == 0) {				result += currNode.y;				currNode.x /= x;				queue.add(currNode);			} else {				result += currNode.y;				isRobotShutdown = true;			}		}		return result;	} 	public static void main(String args[]) {		Scanner in = new Scanner(System.in);		int testCases = in.nextInt();		in.nextLine();		for(int  i = 0 ; i < testCases; i++) {			int n = in.nextInt();			int x = in.nextInt();			in.nextLine();			Queue<Node> input = new LinkedList<Node>();			for(int j = 0 ; j < n; j++) {				input.add(new Node(in.nextInt()));			}			in.nextLine();			System.out.println(sum(input, x));		}	}}
