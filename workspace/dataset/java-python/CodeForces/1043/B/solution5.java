import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.FileReader;import java.io.InputStreamReader;import java.util.ArrayList;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        Scanner in = new Scanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        BLostArray solver = new BLostArray();        solver.solve(1, in, out);        out.close();    }     static class BLostArray {        int n;        int[] arr;         public void solve(int testNumber, Scanner sc, PrintWriter pw) {            n = sc.nextInt();            arr = new int[n + 1];            for (int i = 1; i <= n; i++)                arr[i] = sc.nextInt();            ArrayList<Integer> list = new ArrayList<>();            for (int i = 0; i <= n - 1; i++)                list.add(arr[i] - arr[i + 1]);            ArrayList<Integer> ans = new ArrayList<>();            for (int i = 1; i <= list.size(); i++) {                boolean f = true;                for (int j = 0; j < i; j++)                    for (int k = j + i; k < list.size(); k += i)                        if (list.get(k).intValue() != list.get(j).intValue())                            f = false;                if (f)                    ans.add(i);            }            pw.println(ans.size());            for (int x : ans)                pw.print(x + " ");        }     }     static class Scanner {        StringTokenizer st;        BufferedReader br;         public Scanner(FileReader r) {            br = new BufferedReader(r);        }         public Scanner(InputStream s) {            br = new BufferedReader(new InputStreamReader(s));        }         public String next() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
