from os import pathimport sys,time# mod = int(1e9 + 7)# import refrom math import ceil, floor,gcd,log,log2 ,factorialfrom collections import defaultdict ,Counter , OrderedDict , dequefrom itertools import combinations , groupby , zip_longest,permutations# from string import ascii_lowercase ,ascii_uppercasefrom bisect import *from functools import reducefrom operator import mulmaxx = float('inf')#----------------------------INPUT FUNCTIONS------------------------------------------#I = lambda :int(sys.stdin.buffer.readline())tup= lambda : map(int , sys.stdin.buffer.readline().split())lint = lambda :[int(x) for x in sys.stdin.buffer.readline().split()]S = lambda: sys.stdin.readline().strip('\n')grid = lambda  r :[lint() for i in range(r)]stpr = lambda x : sys.stdout.write(f'{x}' + '\n')star = lambda x: print(' '.join(map(str, x))) localsys = 0start_time = time.time()if (path.exists('input.txt')):	sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');#left shift --- num*(2**k) --(k - shift)# input = sys.stdin.readlinen = I()ls = lint()arr, ans  =[0]*(n-1) , []for i in range(1,n):	arr[i-1] = ls[i] - ls[i-1]arr.insert(0, ls[0])for i in range(1,n):	r = n% i	d = n//i	if arr[:i]*d + arr[:r] == arr:		ans.append(i)ans.append(n)print(len(ans))print(*ans) 	       if localsys:	print("\n\nTime Elased :",time.time() - start_time,"seconds")  
