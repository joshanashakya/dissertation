//package bronze;import java.io.*;import java.util.*;public class silver2020_p1 {	public static void main(String[] args) throws IOException{		Scanner sc = new Scanner(System.in);		int n = sc.nextInt();		char pole = 'n';		int dist  = 0;		for (int i = 0; i < n; i++) {			int d = sc.nextInt();			String s = sc.next();			if (s.equals("East") || s.equals("West")) {				if (dist == 0 || dist == 20000) {					System.out.println("NO");					return;				}			}			if (s.equals("South")) {				if (dist == 0 && pole == 's') {					System.out.println("NO");					return;				}				dist += d;				if (dist == 20000) pole = 's';				if (dist > 20000) {					System.out.println("NO");					return;				}			}			if (s.equals("North")) {				if (dist == 0 && pole == 'n') {					System.out.println("NO");					return;				}				dist -= d;				if (dist == 0) pole = 'n';				if (dist < 0) {					System.out.println("NO");					return;				}			}					}		System.out.println(pole == 'n' && dist == 0 ? "YES" : "NO");	}	public static int fac(int n) {		int a = 1;	//	System.out.println(n);		for (int i = 1; i <= n; i++) {			//if (i==1) a = i;			a *= i;		}		return a;	}}  //opposites attract//int t = sc.nextInt();//int[] a = new int[t];////int zero = 0;//int[] nums = new int[20];//int[] tem = new int[t];//for (int i = 0; i < t; i++) {//	int n = sc.nextInt();//	tem[i] = n;//	if (n > 0) n+=9;//	else if (n < 0) n = -1*n-1;//	else {//		zero++;//		continue;//	}//	nums[n]++;//}//Arrays.sort(tem);////for (int i : tem) System.out.println(i);//int ans = 0;//for (int i = 0; i < 10; i++) {//	ans += nums[i]*nums[i+10];//}////if (zero-2 >= 0)//	ans += fac(zero)/(fac(zero-2)*2);//System.out.println(ans);////for (int i = -10; i <= 10; i++) {////	System.out.println(i);////	System.out.println(i);////}
