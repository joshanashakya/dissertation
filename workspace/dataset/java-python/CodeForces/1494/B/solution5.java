import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.*; public class Main{     public static void main(String args[])    {        FastScanner input = new FastScanner();         int tc = input.nextInt();        while (tc-- > 0) {            int n = input.nextInt();            int u = input.nextInt();            int r = input.nextInt();            int d = input.nextInt();            int l = input.nextInt();            int u1 = u;            int r1 = r;            int d1 = d;            int l1 = l;             if (u == n) {                l1--;                r1--;            } else if (u == n - 1) {                if (l1 > r1) {                    l1--;                } else {                    r1--;                }            }            if (d == n) {                l1--;                r1--;            } else if (d == n - 1) {                if (l1 > r1) {                    l1--;                } else {                    r1--;                }            }            if (l == n) {                u1--;                d1--;            } else if (l == n - 1) {                if (u1 > d1) {                    u1--;                } else {                    d1--;                }            }            if (r == n) {                u1--;                d1--;            } else if (r == n - 1) {                if (u1 > d1) {                    u1--;                } else {                    d1--;                }            }             if (l1 < 0 || r1 < 0 || d1 < 0 || u1 < 0) {                System.out.println("NO");            } else {                System.out.println("YES");            }        }    }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
