#!python  def canberegular(stringcase):    cases = ["A", "B", "C"]    options = ["(", ")"]    # this case will always be (    first_letter = stringcase[0]    variable_cases = [x for x in cases if x != first_letter]    try_cases = []     for i, option1 in enumerate(options):        dictcases = {}        dictcases[first_letter] = "("        for j, option2 in enumerate(options):            # print(j)            dictcases[variable_cases[0]] = option1            dictcases[variable_cases[1]] = option2            try_cases.append(dictcases.copy())     for try_case in try_cases:        if checkbalanced(stringcase, try_case) == "YES":            return "YES"     return "NO"  def checkbalanced(stringcase, try_case):    num_stack = 0    for letter in stringcase:        if try_case[letter] == "(":            num_stack += 1        else:            if num_stack == 0:                return "NO"            else:                num_stack -= 1    if num_stack == 0:        return "YES"    else:        return "NO"  num_cases = int(input()) for i in range(num_cases):    case = input()    print(canberegular(case))
