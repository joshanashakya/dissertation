import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{     public static void main(String[] args)    {         FastScanner input = new FastScanner();        int n = input.nextInt();        int m = input.nextInt();        int k = input.nextInt();        TreeSet<Integer> set = new TreeSet<>();        for (int i = 0; i < m; i++) {            set.add(input.nextInt());        }        int start=1;        for (int i = 0; i < k; i++) {            int u = input.nextInt();            int v = input.nextInt();           if(set.contains(start))           {               System.out.println(start);               return;           }                        if(start==u)            {                start = v;            }            else if(start==v)            {                start = u;            }        }        System.out.println(start);            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
