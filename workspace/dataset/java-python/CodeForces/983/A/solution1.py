import java.io.*;import java.util.*;public class Main {    public static void main(String args[])    {        FastReader input=new FastReader();        PrintWriter out=new PrintWriter(System.out);        int T=input.nextInt();        while(T-->0)        {            long p=input.nextLong();            long q=input.nextLong();            long b=input.nextLong();            q=q/gcd(p,q);            long g=gcd(q,b);            while(g>1)            {                while(q%g==0)                {                    q=q/g;                }                g=gcd(q,b);            }            if(q==1)            {                out.println("Finite");            }            else            {                out.println("Infinite");            }        }        out.close();    }    public static long gcd(long a, long b)    {        if(a==0)        {            return b;        }        else        {            return gcd(b%a,a);        }    }    static class FastReader    {        BufferedReader br;        StringTokenizer st;         public FastReader()        {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next()        {            while (st == null || !st.hasMoreElements())            {                try                {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e)                {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {             return Double.parseDouble(next());        }         String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }    }}
