import java.util.*;import java.lang.*;import java.math.*;import java.text.*;import java.io.*; public class Solution {	static PrintWriter out = new PrintWriter(System.out); 	 static void flush() { 		out.flush(); 	}	static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }               String next() {            while (st == null || !st.hasMoreElements()) {                try{                    st = new StringTokenizer(br.readLine());                }                catch (IOException  e) {                    e.printStackTrace();                }            }            return st.nextToken();        }        int nextInt() {            return Integer.parseInt(next());        }        long nextLong() {            return Long.parseLong(next());        }        static int fact(int n) {   		 if(n == 1) return 1;   		 return n * fact(n-1);   	 }	public int[] readIntArray(int n) {			int[] arr = new int[n];			for(int i=0; i<n; ++i)				arr[i]=nextInt();			return arr;		}		static int gcd(int a, int b) { 	    if (b == 0) return a; 	    return gcd(b, a % b);  		}        double nextDouble() {            return Double.parseDouble(next());        }        String nextLine() {            String str = "";            try{                str = br.readLine();            }            catch (IOException e) {                e.printStackTrace();            }            return str;        }    }	 static void solve(String str1, String str2) {		 String[] arr = {"monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday","monday","tuesday","wednesday"};		 boolean flag = false;		 for(int i = 0; i <= 6;i++) {			 if(str1.equals(arr[i])) {				 if(str2.equals(arr[i]) ||str2.equals(arr[i+2])|| str2.equals(arr[i+3])) {					flag = true;					break;				 }			 }		 }		 if(flag == false) {			 out.println("NO");		 }		 else {			 out.println("YES");		 }	 }	public static void main(String args[]) throws Exception {        FastReader sc = new FastReader();       String str1 = sc.nextLine();       String str2 = sc.nextLine();               solve(str1, str2);        	flush();        	long end = System.currentTimeMillis();        	NumberFormat formatter = new DecimalFormat("#0.00000");        	//System.out.print("Execution time is " + formatter.format((end - start) / 1000d) + " seconds");        }}
