from os import pathimport sys,time# mod = int(1e9 + 7)# import refrom math import ceil, floor,gcd,log,log2 ,factorialfrom collections import defaultdict ,Counter , OrderedDict , dequefrom itertools import combinations , groupby , zip_longest,permutations# from string import ascii_lowercase ,ascii_uppercasefrom bisect import *from functools import reducefrom operator import mulmaxx = float('inf')#----------------------------INPUT FUNCTIONS------------------------------------------#I = lambda :int(sys.stdin.buffer.readline())tup= lambda : map(int , sys.stdin.buffer.readline().split())lint = lambda :[int(x) for x in sys.stdin.buffer.readline().split()]S = lambda: sys.stdin.readline().strip('\n')grid = lambda  r :[lint() for i in range(r)]stpr = lambda x : sys.stdout.write(f'{x}' + '\n')star = lambda x: print(' '.join(map(str, x))) localsys = 0start_time = time.time()if (path.exists('input.txt')):	sys.stdin=open('input.txt','r');sys.stdout=open('output.txt','w');#left shift --- num*(2**k) --(k - shift)input = sys.stdin.readlinefor _ in range(int(input())):	s =list(input().rstrip())	lo , up , dig  = 0 , 0, 0	c1 =c2 =c3 = 0	for i in s:		if i.isdigit():			dig=1			c3+=1		elif i.islower():			lo =1			c1+=1		else:			up =1			c2+=1	l = lo + up + dig	N = len(s)	if l == 2:		for i in range(N):			if lo ==0:				if c2 == 1 or c3 == 1:					if c2 == 1 and s[i].isdigit():						s[i] = 'u'						break					if c3 ==1 and s[i].isupper():						s[i] = 'u'						break				else:					s[i] = 'u'					break			elif up == 0:				# print(c1,c2,c3,''.join(s),'lo up dig')				if c1 ==1 or c3 == 1:					if c1 == 1 and s[i].isdigit():						s[i] ='A'						break					if c3 ==1 and s[i].islower():						s[i] ='A'						break				else:					s[i] = 'A'					break			elif dig == 0:				if c1 ==1 or c2 == 1:					if c1==1 and s[i].isupper():						s[i] ='9'						break					if c2 ==1 and s[i].islower():						s[i] ='9'						break				else:					s[i] ='9'					break	elif l == 1:		for i in range(N-1):			if lo :				if not s[i].islower() and not s[i+1].islower():					s[i] = '9'					s[i+1] ='A'					break				elif not s[i].islower() and c1 >=2:					s[i] = '9'					s[i+1] ='A'					break				elif c1 > 2 :					s[i] = '9'					s[i+1] = 'A'					break			elif up :				if not s[i].isupper() and not s[i+1].isupper():					s[i] ='9'					s[i+1] ='u'					break				elif not s[i].isupper() and c2 >= 2 :					s[i] = '9'					s[i+1] ='u'					break				elif c2 > 2 :					s[i] = '9'					s[i+1] = 'u'					break			elif dig :				if not s[i].isdigit() and not s[i+1].isdigit():					s[i] = 'u'					s[i+1] ='A'					break				elif not s[i].isdigit() and c3 >=2 :					s[i] = 'u'					s[i+1] ='A'					break				elif c3 > 2 :					s[i] = 'u'					s[i+1] ='A'					break	print(''.join(s))				         if localsys:	print("\n\nTime Elased :",time.time() - start_time,"seconds")  
