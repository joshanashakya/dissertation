import java.util.*; public class Practise {     static int[][] dp;     static long sum=0;    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        int  t = sc.nextInt();        while(t>0){             int n= sc.nextInt();         int[] arr =new int[n];         for(int i=0;i<n;i++){             arr[i]=sc.nextInt();          }         Arrays.sort(arr);         int incourt=n;         for(int i=n-1;i>=0;i--){             if(incourt>=arr[i]){                 break;             }else                 incourt--;          }            System.out.println(incourt+1);             // System.out.println();            t--;        }               //System.out.println(Arrays.toString(arr));               }     private static boolean funn(int[] arr, int mid,int k) {        return (sum/mid)/mid>=k;           }     private static int numberofsumsubset(int[] arr, int i,int sum) {        if(i<0)            return 0;        if(sum==0)            return 1;        if(sum<0)            return 0;        return numberofsumsubset(arr,i-1,sum)+numberofsumsubset(arr,i-1,sum-arr[i])  ;    }     private static long numberOfways(long n) {        if(n<=0)            return 0;        if(n==1)            return 2;        if(n==2)            return 3;         return ((numberOfways(n-1)+numberOfways(n-2))%1000000007);    }     private static boolean fun(int mid, int[] ar,int m) {        long ans=0;        for(int i=0;i<ar.length;i++){            if(ar[i]>mid){                ans+=(ar[i]-mid);            }        }        return ans>=m;    }     public static double maxAverageRatio(int[][] classes, int extraStudents) {        classes[2][1]+=extraStudents;        classes[2][0]+=extraStudents;        double ans=0;        for(int i=0;i<classes.length;i++){            ans+=(classes[i][0])/(double)(classes[i][1]);        }        ans=ans/(double) (classes.length);        return ans;      }}
