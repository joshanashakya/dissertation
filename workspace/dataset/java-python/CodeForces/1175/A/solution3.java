import java.util.*; public class ICPC {    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        int t=sc.nextInt();         for(int i=1;i<=t;i++){            long n=sc.nextLong();            long k=sc.nextLong();            long c= 0;          //  n=n-n%k;            while (n>0){                if((n%k==0)){                    n=n/k;                    c++;                }else {                    c=  (c+n%k);                    n=n-n%k;                }               // c++;            }            System.out.println(c);           /*long log1= (long) (Math.log(n)/Math.log(k));           long pow=n%(long) Math.pow(k,log1);           //System.out.println(pow);           if(pow==0){               System.out.println(log1+2);           }else {               System.out.println(log1+pow);           }*/        }       }          public List<Integer> getDivisors(int n) {        List<Integer> list = new ArrayList<>();        for (int d = 2; d * d <= n; d++) {            while (n % d == 0) {                list.add(d);                n /= d;            }        }        if (n > 1) {            list.add(n);        }        return list;    }     public int gcd(int n1, int n2) {        int gcd = 1;        for (int i = 1; i <= n1 && i <= n2; ++i) {            // Checks if i is factor of both integers            if (n1 % i == 0 && n2 % i == 0)                gcd = i;        }         // int lcm = (n1 * n2) / gcd;        return gcd;    }}	 	  					    	      	   					
