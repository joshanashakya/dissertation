from collections import *from itertools import *from string import *from bisect import *from queue import *from heapq import *from math import *from sys import *from re import *def fast(): return stdin.readline().strip()def zzz(): return [int(i) for i in fast().split()]  z, zz = input, lambda: list(map(int, z().split()))szz, graph, mod, szzz = lambda: sorted(    zz()), {}, 10**9 + 7, lambda: sorted(zzz())  def lcd(xnum1, xnum2): return (xnum1 * xnum2 // gcd(xnum1, xnum2))def output(answer): stdout.write(str(answer))  dx = [-1, 1, 0, 0, 1, -1, 1, -1]dy = [0, 0, 1, -1, 1, -1, -1, 1]  ###########################---Test-Case---#################################"""  If you Know me , Then you probably don't know me ! """###########################---START-CODING---##############################   n = int(z())arr = zzz()cnt=[0]*(10**5 +1)for i in arr:cnt[i]+=i dp=[0]*(10**5 +1)dp[0]=cnt[0]dp[1]=cnt[1] for i in range(10**5+1):    dp[i]=max(dp[i-1],cnt[i]+dp[i-2])print(max(dp))
