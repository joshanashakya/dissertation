import java.util.*;import java.io.*;  public class C_Div1_A_Boredom {	    public static void main(String args[]) throws NumberFormatException, IOException{        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        int n =Integer.parseInt(br.readLine());                String[] sarr=br.readLine().split(" ");        long[] arr=new long[100001];        for(int i=0;i<n;i++) {        	int val=Integer.parseInt(sarr[i]);        	arr[val]++;        }                long[] dp=new long[100001];        dp[1]=arr[1];        for(int i=2;i<arr.length;i++) {        	dp[i]=Math.max(dp[i-1], dp[i-2]+i*arr[i]);        }                System.out.println(dp[100000]);    }}  //*************************************************************************************************************************************//public class C_Div1_A_Boredom {////	static int count=1;//	public static int solve(HashMap<Integer,Integer> map,HashMap<Set<Integer> ,Integer> dp) {//		if(map.size()==0) {//			return 0;//		}//		if(dp.containsKey(map.keySet())) {//			return dp.get(map.keySet());//		}////		System.out.println(count++);//		ArrayList<Integer> list=new ArrayList<>(map.keySet());//		int ans=0;//		for(int i=0;i<list.size();i++) {//			int val=list.get(i);//			//			int f=map.remove(val);//			int fp1=0;//			if(map.containsKey(val+1)) {//				fp1=map.remove(val+1);//			}//			int fm1=0;//			if(map.containsKey(val-1)) {//				fm1=map.remove(val-1);//			}//			//			int ta=solve(map,dp);//			//			ans=Math.max(ta+f*val, ans);//			map.put(val, f);//			if(fp1>0) {//				map.put(val+1, fp1);//			}//			if(fm1>0) {//				map.put(val-1, fm1);//			}//			//		}//		Set<Integer> set=new TreeSet<>(map.keySet());//		dp.put(set,ans);//		return ans;//	}//	//    public static void main(String args[]) throws NumberFormatException, IOException{//        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));//        int n =Integer.parseInt(br.readLine());//        //        String[] sarr=br.readLine().split(" ");//        HashMap<Integer,Integer> map=new HashMap<>();//        for(int i=0;i<n;i++) {//        	int val=Integer.parseInt(sarr[i]);//        	map.put(val, map.getOrDefault(val, 0)+1);//        }//        int ans=0;//        ans=solve(map,new HashMap<>());//        //        //        System.out.println(ans);//    }//}
