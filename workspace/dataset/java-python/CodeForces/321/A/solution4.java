import java.io.FileInputStream;import java.io.FileNotFoundException;import java.util.Scanner; public class Main{    public static void main(String[] args) throws FileNotFoundException {        Scanner scanner =new Scanner(System.in);//        Scanner scanner =new Scanner(new FileInputStream("src/in.txt"));        int a=scanner.nextInt();        int b=scanner.nextInt();//        System.out.println(a+" "+b);        String s = scanner.next();        Destination destination = new Destination(s,a,b);        Point once = destination.walk(0,0);//        System.out.println("once = " + once);        if(a==0&&b==0||once.x==Integer.MIN_VALUE){            System.out.println("Yes");            return;        }         if(once.x!=0){            int sx,sy;            int t = a/once.x;            t=Math.max(0,t-100);            sx = once.x*t;            sy = once.y*t;//            System.out.println(sx+" "+sy);//            System.out.println(Math.abs(sx-a));            while (Math.abs(sx-a)<=101*Math.abs(once.x)){//                System.out.println("???");                Point walk = destination.walk(sx, sy);                if(walk.x==Integer.MIN_VALUE){                    System.out.println("Yes");                    return;                }                sx+=once.x;                sy+=once.y;            }        }        if(once.y!=0){            int sx,sy;            int t = b/once.y;            t=Math.max(0,t-100);            sx = once.x*t;            sy = once.y*t;             while (Math.abs(sy-b)<=101*once.y){                Point walk = destination.walk(sx, sy);                if(walk.x==Integer.MIN_VALUE){                    System.out.println("Yes");                    return;                }//                System.out.println(sx+" "+sy);                sx+=once.x;                sy+=once.y;            }        }        System.out.println("No");       }} class Destination{    String path;    int a,b;     public Destination(String path, int a, int b) {        this.path = path;        this.a = a;        this.b = b;    }     public Point walk(int x, int y){        if(x==a&&y==b){            x=y=Integer.MIN_VALUE;            return new Point(x,y);        }        int len = path.length();        for(int i=0;i<len;i++){            char c=path.charAt(i);            if(c=='U'){                y++;            }else if(c=='D'){                y--;            }else if(c=='L'){                x--;            }else if(c=='R'){                x++;            }            if(x==a&&y==b){                x=y=Integer.MIN_VALUE;                break;            }        }        return new Point(x,y);    } } class Point{    int x,y;     public Point(int x, int y) {        this.x = x;        this.y = y;    }     @Override    public String toString() {        return "Point{" +                "x=" + x +                ", y=" + y +                '}';    }}
