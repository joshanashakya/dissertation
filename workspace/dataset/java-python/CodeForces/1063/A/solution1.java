import java.io.*; import java.util.*; public class Solution {	 public static void main(String[] args) throws Exception    {		 FastReader fr=new FastReader();		 int n=fr.nextInt();		 String s=fr.next();		 char c[]=s.toCharArray();		 Arrays.sort(c);		 for(char ch:c)			 System.out.print(ch);	 		 	 }	 public static boolean isPali(String s) {		 int i=0;		 int j=s.length()-1;		 while(i<=j) {			 if(s.charAt(i)!=s.charAt(j))				 return false;			 i++;			 j--;		 }		 return true;	 }	 public static String reverse(String s) {		 String res="";		 for(int i=0;i<s.length();i++) {			 res+=s.charAt(i);		 }		 return res;	 }				 	 public static int bsearch(long suf[],long val) {		 int i=0;		 int j=suf.length-1;		 while(i<=j) {			 int mid=(i+j)/2;			 if(suf[mid]==val)				 return mid;			 else if(suf[mid]<val)				 j=mid-1;			 else				 i=mid+1;		 }		 return -1;	 }	 	 	 		 	 public static void print(String str) {		 System.out.println(str);	 }	public static int[] getFreq(String s) {		int a[]=new int[26];		for(int i=0;i<s.length();i++) {			a[s.charAt(i)-'a']++;		}		return a;			}	 	 public static boolean isPrime(int n) {		 		 for(int i=2;(i*i)<=n;i++) {			 if(n%i==0)				 return false;		 }		 return true;	 }            	                                } class Pair{	 int x;	 int y;	 long cost;	 Pair(int x,int y,long cost){		 this.x=x;		 this.y=y;		 this.cost=cost;	 } }		 		 	     class FastReader{    BufferedReader br;    StringTokenizer st;     public FastReader()    {        br = new BufferedReader(new                InputStreamReader(System.in));    }     String next()    {        while (st == null || !st.hasMoreElements())        {            try            {                st = new StringTokenizer(br.readLine());            }            catch (IOException e)            {                e.printStackTrace();            }        }        return st.nextToken();    }     int nextInt()    {        return Integer.parseInt(next());    }     long nextLong()    {        return Long.parseLong(next());    }     double nextDouble()    {        return Double.parseDouble(next());    }     String nextLine()    {        String str = "";        try        {            str = br.readLine();        }        catch (IOException e)        {            e.printStackTrace();        }        return str;    }} 
