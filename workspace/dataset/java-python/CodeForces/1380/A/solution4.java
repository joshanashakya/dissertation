/*input342 1 4 364 6 1 2 5 355 3 1 2 4*/ import java.io.*;import java.math.*;import java.util.*; public class Main {	public static void main(String[] args) throws IOException {		FastReader scan = new FastReader();		PrintWriter out = new PrintWriter(System.out);		Task solver = new Task();		ans = new StringBuilder();		int T = scan.nextInt();		for (int tt = 0; tt < T; tt++)			solver.solve(tt, scan, out);		out.print(ans);		out.close();	} 	static StringBuilder ans; 	static class Task {		private String[] split; 		public void solve(int testNumber, FastReader scan, PrintWriter out) {			int n = scan.nextInt();			int a[] = new int[n + 1];			for (int i = 1; i <= n; i++)				a[i] = scan.nextInt();			int i = 1, j = n, k = -1;			while (i < j) {				while (i < n) {					if (a[i] < a[i + 1])						break;					i++;				}				while (j > 0) {					if (a[j] < a[j - 1])						break;					j--;				}				for (int h = i + 1; h <= j - 1; h++) {					if (a[h] > a[i] && a[h] > a[j]) {						k = h;						break;					}				}				if (k != -1)					break;			}			if (k == -1)				ans.append("NO\n");			else {				ans.append("YES\n");				ans.append(i + " " + k + " " + j);				ans.append("\n");			}		}	} 	static class FastReader {		BufferedReader br;		StringTokenizer st; 		public FastReader() {			br = new BufferedReader(new InputStreamReader(System.in));		} 		public FastReader(String s) throws FileNotFoundException {			br = new BufferedReader(new FileReader(new File(s)));		} 		String next() {			while (st == null || !st.hasMoreElements()) {				try {					st = new StringTokenizer(br.readLine());				} catch (IOException e) {					e.printStackTrace();				}			}			return st.nextToken();		} 		int nextInt() {			return Integer.parseInt(next());		} 		long nextLong() {			return Long.parseLong(next());		} 		double nextDouble() {			return Double.parseDouble(next());		} 		String nextLine() {			String str = "";			try {				str = br.readLine();			} catch (IOException e) {				e.printStackTrace();			}			return str;		}	}}
