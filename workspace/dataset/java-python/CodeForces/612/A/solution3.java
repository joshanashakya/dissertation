import java.util.*;import java.util.Scanner;import java.io.*;import javax.lang.model.util.ElementScanner6; import static java.lang.System.out;  public class A612M2{         public static void main(String args[])    {           FastReader in=new FastReader();        PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));        int tc=1;             //tc=in.nextInt();        while(tc-->0)        {                    	double n=in.nextDouble();			double p=in.nextDouble();			double q=in.nextDouble();			char arr[]=in.nextLine().toCharArray();						int a=-1;			int b=-1;			for(double i=0;i<=n;i++)			{				double a1=(n-i*q)/p;								if(a1>=0&&a1==(int)a1)				{					a=(int)a1;					b=(int)i;					break;				}							}			int nn=(int)n;			int pp=(int)p;			int qq=(int)q;			//pr.println(a+" "+b);			if(a==-1)			{				pr.println(a);				continue;			}			pr.println(a+b);			for(int i=0;i<nn;i++)			{				if(i<=a*pp)				{					if(i%pp==0&&i!=0)						pr.println();				}					else 				{					if((i-a*pp)%qq==0&&i!=0)						pr.println();				}							pr.print(arr[i]);			}			         }        pr.flush();    }           static void sort(long[] a) {		ArrayList<Long> l = new ArrayList<>();		for (long i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);	}        	static void sort(int[] a) {		ArrayList<Integer> l = new ArrayList<>();		for (int i : a)			l.add(i);		Collections.sort(l);		for (int i = 0; i < a.length; i++)			a[i] = l.get(i);    }         static class FastReader    {         BufferedReader br;         StringTokenizer st;          public FastReader()         {             br = new BufferedReader(new InputStreamReader(System.in));         }          String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }          int nextInt()         {             return Integer.parseInt(next());         }          long nextLong()         {             return Long.parseLong(next());         }          double nextDouble()         {             return Double.parseDouble(next());         }          String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     } }
