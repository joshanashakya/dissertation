#region Header#!/usr/bin/env python3# from typing import * import sysimport ioimport mathimport collectionsimport decimalimport itertoolsimport bisectimport heapq def input():    return sys.stdin.readline()[:-1] sys.setrecursionlimit(1000000)#endregion # _INPUT = """3# 1 3 1# 1 2 1# 3 2 1# """# sys.stdin = io.StringIO(_INPUT) def main():    N = int(input())    G = [list() for _ in range(N)]    total = 0    for _ in range(N):        a, b, c = list(map(int, input().split()))        total += c        G[a-1].append((b-1, c))        G[b-1].append((a-1, -c))     p_prev = -1    p = 0    cost = 0    while True:        if G[p][0][0] != p_prev:            p_next, c = G[p][0]        else:            p_next, c = G[p][1]        if c < 0:            cost += -c        p_prev = p        p = p_next        if p == 0:            break     ans = min(cost, total - cost)    print(ans) if __name__ == '__main__':    main()
