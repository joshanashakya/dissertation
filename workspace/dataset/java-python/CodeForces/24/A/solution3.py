n = int(input()) g = {}d = {} visited = set()solved = Falsepaths = []  def walk(v, path):    global solved     if solved:        return     if len(path) == n:        paths.append(path)        solved = True        return     if v in visited:        return     visited.add(v)    path.append(v)    for v2 in g[v]:        path2 = path[:]        walk(v2, path2)  for _ in range(n):    a, b, c = map(int, input().split())    if a not in g:        g[a] = set()    g[a].add(b)    if b not in g:        g[b] = set()    g[b].add(a)    d[(a, b)] = c    d[(b, a)] = -c walk(1, [])path = paths[0]# print(path) switch = Falsec1 = c2 = 0# print(d)for k in range(len(path)):    v = path[k]    v2 = path[k + 1] if k < n - 1 else path[0]    # print(v, v2)    c = d[(v, v2)]    if c >= 0:        c1 += c    else:        switch = True        c2 += abs(c) if not switch:    print(0)else:    print(min([c1, c2]))
