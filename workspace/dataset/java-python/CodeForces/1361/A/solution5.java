import java.util.*;import java.io.*; public class A1361{ 	public static void main(String[] args){		JS scan = new JS();		PrintWriter out = new PrintWriter(System.out);		int n = scan.nextInt();		int m = scan.nextInt();		ArrayList<Integer>[] graph = new ArrayList[n];		for(int i = 0; i < n; i++){			graph[i] = new ArrayList<Integer>();		}		for(int i = 0; i < m; i++){			int u = scan.nextInt()-1;			int v = scan.nextInt()-1;			graph[u].add(v);			graph[v].add(u);		}		int[] desiree = new int[n];		Item[] arr = new Item[n];		for(int i = 0; i < n; i++){			desiree[i] = scan.nextInt();			arr[i] = new Item(i, desiree[i]);		}		Arrays.sort(arr);		int[] val = new int[n];		HashSet<Integer> freq = new HashSet<Integer>();		for(int i = 0; i < n; i++){			int curr = arr[i].i;			int mex = 1;			for(int j : graph[curr]){				freq.add(val[j]);				while(freq.contains(mex)) mex++;			}			val[curr] = mex;			freq.clear();		}		boolean ok = true;		for(int i = 0; i < n; i++){			ok &= desiree[i] == val[i];		}		if(!ok) out.println(-1);		else{			for(int i = 0; i < n; i++) out.print((arr[i].i+1)+" ");		}		out.flush();	} 	static class Item implements Comparable<Item>{ 		int i;		int v; 		public Item(int ii, int vv){			i = ii;			v = vv;		} 		public int compareTo(Item o){			return this.v-o.v;		}	} 	static class JS{		public int BS = 1<<16;		public char NC = (char)0;		byte[] buf = new byte[BS];		int bId = 0, size = 0;		char c = NC;		double num = 1;		BufferedInputStream in; 		public JS() {			in = new BufferedInputStream(System.in, BS);		} 		public JS(String s) throws FileNotFoundException {			in = new BufferedInputStream(new FileInputStream(new File(s)), BS);		} 		public char nextChar(){			while(bId==size) {				try {					size = in.read(buf);				}catch(Exception e) {					return NC;				}								if(size==-1)return NC;				bId=0;			}			return (char)buf[bId++];		} 		public int nextInt() {			return (int)nextLong();		} 		public long nextLong() {			num=1;			boolean neg = false;			if(c==NC)c=nextChar();			for(;(c<'0' || c>'9'); c = nextChar()) {				if(c=='-')neg=true;			}			long res = 0;			for(; c>='0' && c <='9'; c=nextChar()) {				res = (res<<3)+(res<<1)+c-'0';				num*=10;			}			return neg?-res:res;		} 		public double nextDouble() {			double cur = nextLong();			return c!='.' ? cur:cur+nextLong()/num;		} 		public String next() {			StringBuilder res = new StringBuilder();			while(c<=32)c=nextChar();			while(c>32) {				res.append(c);				c=nextChar();			}			return res.toString();		} 		public String nextLine() {			StringBuilder res = new StringBuilder();			while(c<=32)c=nextChar();			while(c!='\n') {				res.append(c);				c=nextChar();			}			return res.toString();		} 		public boolean hasNext() {			if(c>32)return true;			while(true) {				c=nextChar();				if(c==NC)return false;				else if(c>32)return true;			}		}	}}
