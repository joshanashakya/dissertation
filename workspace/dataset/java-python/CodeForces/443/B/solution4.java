import java.util.*;import java.io.*;import java.math.*;public class Main{    public static void process()throws IOException    {        char[]x=nln().toCharArray();        int n=x.length;        int len=ni();        if(len>=n)            {pn((len+n)&~(1<<0));return;}        int ans=len;         for(int i=1;i<=(len+n)/2;i++)        {            int flag=0;            for(int j=n-len-1-i;j>n-len-1-i-i;j--)            {                if(j<0)                {                    flag=1;                    break;                }                if(x[j]!=x[j+len+i])                    flag=1;            }            if(flag==0)                ans=len+i;        }        for(int i=1;i<=n/2;i++)        {            for(int j=0;j<n-2*i;j++)            {                int flag=0;                for(int k=j;k<j+i;k++)                    if(x[k]!=x[k+i])                        flag=1;                if(flag==0)                    ans=Math.max(ans,i);            }        }        pn(2*ans);    }     static AnotherReader sc;    static PrintWriter out;    public static void main(String[]args)throws IOException    {        boolean oj = System.getProperty("ONLINE_JUDGE") != null;        if(oj){sc=new AnotherReader();out=new PrintWriter(System.out);}        else{sc=new AnotherReader(100);out=new PrintWriter("output.txt");}        int t=1;        // t=ni();        while(t-->0) {process();}        out.flush();out.close();      }     static void pn(Object o){out.println(o);}    static void p(Object o){out.print(o);}    static void pni(Object o){out.println(o);out.flush();}    static int ni()throws IOException{return sc.nextInt();}    static long nl()throws IOException{return sc.nextLong();}    static double nd()throws IOException{return sc.nextDouble();}    static String nln()throws IOException{return sc.nextLine();}    static int[] nai(int N)throws IOException{int[]A=new int[N];for(int i=0;i!=N;i++){A[i]=ni();}return A;}    static long[] nal(int N)throws IOException{long[]A=new long[N];for(int i=0;i!=N;i++){A[i]=nl();}return A;}    static long gcd(long a, long b)throws IOException{return (b==0)?a:gcd(b,a%b);}    static int gcd(int a, int b)throws IOException{return (b==0)?a:gcd(b,a%b);}    static int bit(long n)throws IOException{return (n==0)?0:(1+bit(n&(n-1)));} /////////////////////////////////////////////////////////////////////////////////////////////////////////     static class AnotherReader{BufferedReader br; StringTokenizer st;    AnotherReader()throws FileNotFoundException{    br=new BufferedReader(new InputStreamReader(System.in));}    AnotherReader(int a)throws FileNotFoundException{    br = new BufferedReader(new FileReader("input.txt"));}    String next()throws IOException{    while (st == null || !st.hasMoreElements()) {try{    st = new StringTokenizer(br.readLine());}    catch (IOException  e){ e.printStackTrace(); }}    return st.nextToken(); } int nextInt() throws IOException{    return Integer.parseInt(next());}    long nextLong() throws IOException    {return Long.parseLong(next());}    double nextDouble()throws IOException { return Double.parseDouble(next()); }    String nextLine() throws IOException{ String str = ""; try{    str = br.readLine();} catch (IOException e){    e.printStackTrace();} return str;}}   /////////////////////////////////////////////////////////////////////////////////////////////////////////////}
