import java.io.*;import java.util.*;import java.math.*; public class Main {     FastScanner in;    PrintWriter out;     static class FastScanner {         BufferedReader br;        StringTokenizer st;         FastScanner(InputStream in) {            br = new BufferedReader(new InputStreamReader(in));            st = null;        }         String next() throws IOException {            while (st == null || !st.hasMoreTokens())                st = new StringTokenizer(br.readLine());            return st.nextToken();        }         String nextLine() throws IOException {            if (st == null || !st.hasMoreTokens())                return br.readLine();            StringBuilder result = new StringBuilder(st.nextToken());            while (st.hasMoreTokens()) {                result.append(" ");                result.append(st.nextToken());            }            return result.toString();        }         int nextInt() throws IOException {            return Integer.parseInt(next());        }         long nextLong() throws IOException {            return Long.parseLong(next());        }         double nextDouble() throws IOException {            return Double.parseDouble(next());        }     }     void run() throws IOException {        in = new FastScanner(System.in);        out = new PrintWriter(System.out, false);        solve();        out.close();    }     public static void main(String[] args) throws IOException{        new Main().run();    }     public void printArr(int[] arr){        for(int i = 0; i < arr.length; i++){            out.print(arr[i] + " ");        }        out.println();    }     public long gcd(long a, long b){        if(a == 0) return b;        return gcd(b % a, a);    }     public boolean isPrime(long num){         if(num == 0 || num == 1){            return false;        }         for(int i = 2; i * i <= num; i++){            if(num % i == 0){                return false;            }        }         return true;    }     class Pair{        int x; int y;        Pair(int ix, int iy){            x = ix;            y = iy;        }    }     class Tuple{        int x; int y; int z;        Tuple(int ix, int iy, int iz){            x = ix;            y = iy;            z = iz;        }    }     public void solve() throws IOException{         String str = in.next();        int k = in.nextInt();        str += String.join("", Collections.nCopies(k, "?"));        int n = str.length();        int maxLen = 0;         for(int l = 1; l <= n / 2; l++){             for(int i = 0; i <= n - 2 * l; i++){                 boolean found = true;                            for(int j = 0; j < l; j++){                    if(str.charAt(i + j) == str.charAt(i + l + j) || str.charAt(i + l + j) == '?'){                        continue;                    }else{                        found = false;                        break;                    }                }                 if(found){                    maxLen = Math.max(maxLen, l);                    break;                }            }        }                out.println(maxLen * 2);        return;    }   }
