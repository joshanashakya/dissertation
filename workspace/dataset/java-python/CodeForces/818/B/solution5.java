import java.util.ArrayDeque;import java.util.ArrayList;import java.util.Arrays;import java.util.Scanner; public final  class PermutationGamesCF {    public static void main(String[] args) {        Scanner sc=new Scanner(System.in);        int n=sc.nextInt();        int m=sc.nextInt();        int arr[]=new int[m];        for(int i=0;i<m;i++){            arr[i]=sc.nextInt();        }        int ans[]=new int[n+1];        Arrays.fill(ans,-1);        boolean vis[]=new boolean[n+1];        boolean isTrue=true;        for(int i=0;i<m-1;i++){            int src=arr[i];            int dest=arr[i+1];            if(dest>src){                int val=dest-src;              //  System.out.println(src+" "+val);                if( (ans[src]==-1 && !vis[val]) || (ans[src]==val) ){                    ans[src]=val;                    vis[val]=true;                }else{                    isTrue=false;                    break;                }            }else{                int val=(n-src)+dest;             //   System.out.println(src+" "+val);                if((ans[src]==-1 && !vis[val]) || (ans[src]==val) ){                    ans[src]=val;                    vis[val]=true;                }else{                    isTrue=false;                    break;                }            }        }         if(!isTrue){            System.out.println("-1");        }else{            ArrayDeque<Integer> deque=new ArrayDeque<>();            for(int i=1;i<=n;i++){                if(!vis[i]){                    deque.addLast(i);                }            }             for(int i=1;i<=n;i++){                if(ans[i]==-1){                    ans[i]=deque.pop();                }            }              for(int i=1;i<=n;i++){                System.out.print(ans[i]+" ");            }            System.out.println();        }      }}
