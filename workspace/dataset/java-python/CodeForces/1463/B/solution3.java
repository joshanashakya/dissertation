import java.io.BufferedReader;import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; import javafx.util.Pair; public class Main{          public static void main(String args[])    {        FastScanner input = new FastScanner();               int tc = input.nextInt();        while (tc-- > 0) {           int n = input.nextInt();        long sum =0;        int a[] = new int[n];        int max =0;        int maxIndex = -1;        for (int i = 0; i < n; i++) {            a[i] = input.nextInt();            sum+=a[i];            if(max<=a[i])            {                max = a[i];                maxIndex = i;            }        }        long total1 = 0,total2=0;//            System.out.println(sum+" ");            StringBuilder ans1 = new StringBuilder(),ans2 = new StringBuilder();        if(true)        {                        for (int i = 0; i <n; i++) {                if(i%2!=0)                {                    ans1.append(1+" ");                    total1+=Math.abs(a[i]-1);                }                else                {                    ans1.append(a[i]+" ");                    total1+=Math.abs(a[i]-a[i]);                }            }                    }        if(true)        {                                      for (int i = 0; i <n; i++) {                if(i%2==0)                {                    ans2.append(1+" ");                    total2+=Math.abs(a[i]-1);                }                else                {                    ans2.append(a[i]+" ");                     total2+=Math.abs(a[i]-a[i]);                }            }                   }            if(total1<=total2)            {                System.out.println(ans1);            }            else                System.out.println(ans2);        }            }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
