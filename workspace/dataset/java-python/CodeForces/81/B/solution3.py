# Code by Sounak, IIESTS#------------------------------warmup---------------------------- import osimport sysimport mathfrom io import BytesIO, IOBasefrom fractions import Fractionfrom collections import defaultdict  BUFSIZE = 8192  class FastIO(IOBase):    newlines = 0        def __init__(self, file):        self._fd = file.fileno()        self.buffer = BytesIO()        self.writable = "x" in file.mode or "r" not in file.mode        self.write = self.buffer.write if self.writable else None         def read(self):        while True:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            if not b:                break            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines = 0        return self.buffer.read()     def readline(self):        while self.newlines == 0:            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))            self.newlines = b.count(b"\n") + (not b)            ptr = self.buffer.tell()            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)        self.newlines -= 1        return self.buffer.readline()     def flush(self):        if self.writable:            os.write(self._fd, self.buffer.getvalue())            self.buffer.truncate(0), self.buffer.seek(0)  class IOWrapper(IOBase):    def __init__(self, file):        self.buffer = FastIO(file)        self.flush = self.buffer.flush        self.writable = self.buffer.writable        self.write = lambda s: self.buffer.write(s.encode("ascii"))        self.read = lambda: self.buffer.read().decode("ascii")        self.readline = lambda: self.buffer.readline().decode("ascii")  sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)input = lambda: sys.stdin.readline().rstrip("\r\n") #-------------------game starts now-----------------------------------------------------s=input()l=list()for i in range(len(s)):    if s[i]==' ':        if s[i-1]!=' ':            l.append(' ')    else:        l.append(s[i])a=list()#print(*l,sep='')num=0for i in range (len(l)):    if l[i]!=' ':        a.append(l[i])    else:        if l[i-1]!='.' and l[i+1]!='.' and l[i-1]!=',' and l[i+1]!=',':            a.append(' ')n=len(a)b=list()#print(*a,sep='')b.append(' ')curr=0for i in range(n):    if a[i]=='.':        curr+=1    else:        curr=0    if curr==4:        curr=1    if a[i]==',':        b.append(',')        b.append(' ')    elif a[i]=='.':        if curr==1 and b[-1]!=' ':            b.append(' ')            b.append('.')        else:            b.append('.')    else:        b.append(a[i])j=len(b)if b[-1]==' ':    j-=1print(*b[1:j],sep='')
