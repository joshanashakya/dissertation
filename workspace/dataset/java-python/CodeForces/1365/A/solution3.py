from itertools import accumulate as acfrom collections import Counter as ccfrom bisect import bisect_left as bslfrom bisect import bisect as bsfrom math import factorial as ffrom collections import *from itertools import *from string import *from bisect import *from queue import *from heapq import *from math import *from sys import *from re import *def fast(): return stdin.readline().strip()def zzz(): return [int(i) for i in fast().split()]  z, zz = input, lambda: list(map(int, z().split()))szz, graph, mod, szzz = lambda: sorted(    zz()), {}, 10**9 + 7, lambda: sorted(zzz())  def lcd(xnum1, xnum2): return (xnum1 * xnum2 // gcd(xnum1, xnum2))def output(answer): stdout.write(str(answer))  ###########################---Test-Case---#################################"""   If you Know me , Then you probably don't know me !  """###########################---START-CODING---############################## num = int(z()) for _ in range(num):    n,m=zzz()    lst=[]    unclam_row=0    unclam_col=0    for i in range(n):        arr=zzz()        lst.append(arr)        if sum(arr)==0:            unclam_row+=1    for i in range(m):        cnt=0        for j in range(n):            cnt+=lst[j][i]         if cnt==0:unclam_col+=1     mi=min(unclam_col,unclam_row)     if mi%2==0:        print("Vivek")    else:        print("Ashish")          
