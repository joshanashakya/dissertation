#include <iostream>#include <string>using namespace std; int cnt[10];int cnta[10];int cntb[10]; int main(){	string n;	cin >> n;	for(int i=0;i<10;i++)		cnt[i] = 0;	for(int i=0;i<n.size();i++)	{		cnt[n[i]-'0']++;		cnta[n[i]-'0']++;		cntb[n[i]-'0']++;	}	string besta,bestb;	int bestlen = 0;	for(int pos=1;pos<=5;pos++)	{		int other = 10-pos;		other %= 10;		if(!cnt[pos])			continue;		if(!cnt[other])			continue;		string a,b;		int curlen = 0;		cnta[pos]--;		cntb[other]--;		a.push_back((char)pos + '0');		b.push_back((char)(other) + '0');		curlen++;		for(int c=0;c<=9;c++)		{			for(int i=0;i<min(cnta[c],cntb[9-c]);i++)			{				a.push_back((char)c + '0');				b.push_back((char)(9-c) + '0');				curlen++;			}		}		cnta[pos]++;		cntb[other]++; 		if(curlen > bestlen)		{			bestlen = curlen;			besta = a;			bestb = b;		}	}	for(int i=0;i<10;i++)	{		cnta[i] = cnt[i];		cntb[i] = cnt[i];	}	for(int i=0;i<besta.size();i++)		cnta[besta[i]-'0']--;	for(int i=0;i<bestb.size();i++)		cntb[bestb[i]-'0']--;	for(int c=0;c<(cnta[0]-cntb[0]);c++)		besta.push_back('0');	for(int c=0;c<(cntb[0]-cnta[0]);c++)		bestb.push_back('0');	for(int i=1;i<10;i++)	{		for(int c=0;c<cnta[i];c++)			besta.push_back((char)i + '0');		for(int c=0;c<cntb[i];c++)			bestb.push_back((char)i + '0');	}	reverse(besta.begin(),besta.end());	reverse(bestb.begin(),bestb.end());	for(int c=0;c<min(cnta[0],cntb[0]);c++)		besta.push_back('0');	for(int c=0;c<min(cnta[0],cntb[0]);c++)		bestb.push_back('0');	cout << besta << endl;	cout << bestb << endl;}
