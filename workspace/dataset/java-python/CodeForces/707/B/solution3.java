import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*; public class Main{     public static void main(String[] args)    {         FastScanner input = new FastScanner();        int n = input.nextInt();        int m = input.nextInt();        int k = input.nextInt();        HashMap<String, Integer> map = new HashMap<>();        int a[][] = new int[m][3];        for (int i = 0; i < m; i++) {            int u =a[i][0] = input.nextInt();            int v = a[i][1]= input.nextInt();           int l = a[i][2]= input.nextInt();            if (map.containsKey(u + " " + v)) {                int min = Math.min(l, map.get(u + " " + v));                map.put(u + " " + v, min);            } else {                map.put(u + " " + v, l);            }                  }      int ans = Integer.MAX_VALUE;      HashSet<Integer> set = new HashSet<>();              for (int i = 0; i < k; i++) {           set.add(input.nextInt());        }        for (int i = 0; i < m; i++) {            if(set.contains(a[i][0])^set.contains(a[i][1]))            {                ans = Math.min(ans, map.get(a[i][0]+" "+a[i][1]));            }        }                       if(ans ==Integer.MAX_VALUE)        {            System.out.println("-1");        }        else        {            System.out.println(ans);        }     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
