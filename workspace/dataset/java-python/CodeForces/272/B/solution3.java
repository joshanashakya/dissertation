import java.util.*;import java.io.*;/** * * @author alanl */public class Solve {Â     /**     * @param args the command line arguments     */    static BufferedReader input = new BufferedReader(new InputStreamReader(System.in));    static StringTokenizer st;    static PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));    public static void main(String[] args) throws IOException{        int n = readInt(), arr[] = new int[n];        for(int i = 0; i<n; i++){            arr[i] = readInt();        }        Map<Integer, Integer>mp = new HashMap();        for(int i = 0; i<n; i++){            //String val = Integer.toBinaryString(arr[i]);            int ones = Integer.bitCount(arr[i]);            mp.put(ones, mp.getOrDefault(ones, 0)+1);        }        long ans = 0;        for(Map.Entry<Integer, Integer>e:mp.entrySet()){            ans+=1L*e.getValue()*(e.getValue()-1)/2;        }        println(ans);    }    static String next () throws IOException {        while (st == null || !st.hasMoreTokens())            st = new StringTokenizer(input.readLine().trim());        return st.nextToken();    }    static long readLong () throws IOException {        return Long.parseLong(next());    }    static int readInt () throws IOException {        return Integer.parseInt(next());    }    static double readDouble () throws IOException {        return Double.parseDouble(next());    }    static char readChar () throws IOException {        return next().charAt(0);    }    static String readLine () throws IOException {        return input.readLine().trim();    }    static void print(Object b) {        System.out.print(b);    }    static void println(Object b) {        System.out.println(b);    }    static void println() {        System.out.println();    }}
