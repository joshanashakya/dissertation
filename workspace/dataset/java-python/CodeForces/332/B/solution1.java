import java.util.*;Â public class Main {    public static void main(String []args) {        new Main().run();    }        void run() {        Scanner sc = new Scanner(System.in);                int n = sc.nextInt();        int k = sc.nextInt();                long[] a = new long[n];        for(int i = 0; i < n; i++) {            a[i] = sc.nextLong();            if(i > 0) {                a[i] += a[i - 1];            }        }        TreeSet<long[]> set = new TreeSet<>(new Comparator<long[]>() {            @Override            public int compare(long[] p, long[] q) {                if(p[1] != q[1]) return Long.compare(q[1], p[1]);                return Long.compare(p[0], q[0]);            }        });        for(int i = k; i < n; i++) {            if(i + k - 1 >= a.length) break;            set.add(new long[] {i, get(i, i + k - 1, a)});        }                long max = 0, L = -1, R = -1;        for(int i = 0; i < n; i++) {            long sum = get(i, i + k - 1, a);            if(set.isEmpty()) break;            long[] first = set.first();            sum += first[1];            if(sum > max) {                max = sum;                L = i;                R = first[0];            }            int left = i + k;            set.remove(new long[] {left, get(left, left + k - 1, a)});        }                L++; R++;                System.out.println(L + " " + R);    }        long get(int l, int r, long[] a) {        if(r >= a.length) return -999999;        return (l == 0) ? a[r] : a[r] - a[l - 1];    }}
