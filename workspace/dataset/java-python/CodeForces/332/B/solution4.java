 import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.nio.Buffer;import java.util.*; public class Hamburgers {    static class FastReader {        BufferedReader br;        StringTokenizer st;         public FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         String nextLine() {            String str = "";            try {                str = br.readLine();            } catch (IOException e) {                e.printStackTrace();            }            return str;        }    }    private static int gcd(int a , int b){        return (a%b==0)?b:gcd(b,a%b);    }     private static int primes(int a){        int ct=0;        while (a % 2 == 0)        {            ct++;            a = a/2;        }        while (a % 3 == 0)        {            ct++;            a = a/3;        }        while (a % 5 == 0)        {            ct++;            a = a/5;        }        if(a==1) return ct;        return -1;     }    static List<Long> ls=new ArrayList<Long>();     private static void rec(long num,int ct4,int ct7){        if(num>=(long)1e10)            return;        if(ct4==ct7)            ls.add(num);        rec(num*10+4,ct4+1,ct7);        rec(num*10+7,ct4,ct7+1);    }     private static int[] getArray(BufferedReader b) throws IOException {         String s=b.readLine();         String[] S=s.split(" ");        int arr[]=new int[S.length];        for(int i=0;i<S.length;i++){            arr[i]=Integer.parseInt(S[i]);        }        return arr;    }      public static void main(String[] args) throws IOException {       // Scanner in=new Scanner(System.in);         FastReader in= new FastReader();        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));         String s=br.readLine();         String S[]=s.split(" ");         int n=Integer.parseInt(S[0]);         int k=Integer.parseInt(S[1]);          int [] arr=getArray(br);         long[] suff= new long[n];         suff[n-1]=arr[n-1];          for(int i=n-2;i>=0;i--){             suff[i]=suff[i+1]+arr[i];         }         long max[]=new long[n];         int idx[]=new int[n];         for(int i=n-k;i>=0;i--){             if(i+k>=n){                 max[i]=suff[i];                 idx[i]=i;             }else{                 if(suff[i]-suff[i+k]>=max[i+1]){                     max[i]=suff[i]-suff[i+k];                     idx[i]=i;                 }                 else{                     max[i]=max[i+1];                     idx[i]=idx[i+1];                 }             }          }         int a=0,b=0;         long sum=0;         for(int i=0;i<=n-2*k;i++){             if(suff[i]-suff[i+k]+max[i+k]>sum){                 a=i;                 b=idx[i+k];                 sum=suff[i]-suff[i+k]+max[i+k];             }          }         System.out.println((a+1) + " " +(b+1));          }}        
