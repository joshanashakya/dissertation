import java.util.*; import java.io.*; public class Main {		public static void solve(InputReader in) {		int n = in.readInt();		char temp[] = in.readString().toCharArray();		char s[] = new char[n+1]; 		for(int i= 1; i<s.length; i++) {			s[i] = temp[i-1];		}		int num_g = 0; 		for(int i = 0; i<s.length; i++) {			if(s[i] == 'G') num_g++; 		}		int pref[] = new int[n+2]; 		int suf[] = new int[n+2]; 		for(int i= 1; i<=n; i++) {			if(s[i] == 'G')				pref[i] = pref[i-1] + 1;			else pref[i] = 0; 		}		for(int i= n; i>=1; i--) {			if(s[i] == 'G')			    suf[i] = suf[i+1] + 1;			else 				suf[i] = 0; 		}		int ans = 0; 		for(int i = 1; i<=n; i++) {			ans = Math.max(ans, pref[i]); 			ans = Math.max(ans, suf[i]); 			if(s[i] == 'G')				continue; 			ans = Math.max(ans, Math.min(num_g, pref[i-1] + suf[i+1] + 1)); 		}		System.out.println(ans); 	}		public static void main(String[] args) {		InputReader in = new InputReader(System.in);  		int t = 1;		while (t-- > 0) 			solve(in);	}}  class InputReader{	private InputStream stream;	private byte[] buf = new byte[1024];	private int curChar;	private int numChars;	private SpaceCharFilter filter; 	 public InputReader(InputStream stream) {		this.stream = stream;	}      public int read() {		if (numChars == -1)			throw new InputMismatchException();		if (curChar >= numChars) {			curChar = 0;			try {				numChars = stream.read(buf);			} catch (IOException e) {				throw new InputMismatchException();			}			if (numChars <= 0)				return -1;		}		return buf[curChar++];	}      public int readInt() {		int c = read();		while (isSpaceChar(c))			c = read();		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		int res = 0;		do {			if (c < '0' || c > '9')				throw new InputMismatchException();			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}      public String readString() {		int c = read();		while (isSpaceChar(c))			c = read();		StringBuilder res = new StringBuilder();		do {			res.appendCodePoint(c);			c = read();		} while (!isSpaceChar(c));		return res.toString();	}      public long readLong() {		int c = read();		while (isSpaceChar(c)) {			c = read();		}		int sgn = 1;		if (c == '-') {			sgn = -1;			c = read();		}		long res = 0;		do {			if (c < '0' || c > '9') {				throw new InputMismatchException();			}			res *= 10;			res += c - '0';			c = read();		} while (!isSpaceChar(c));		return res * sgn;	}	     public boolean isSpaceChar(int c) {		if (filter != null)			return filter.isSpaceChar(c);		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;	}          public String next() {		return readString();	}         public interface SpaceCharFilter {		public boolean isSpaceChar(int ch);	}}
