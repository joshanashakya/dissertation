import java.util.*;import java.io.*; public class CJ3 { 	public static void main(String[] args) throws Exception { 		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));		String inp[]=br.readLine().split(" ");		int n=Integer.parseInt(inp[0]);		int k=Integer.parseInt(inp[1]);		int arr[]=new int[k];		inp=br.readLine().split(" ");		int lasttime[]=new int[n];		int firsttime[]=new int[n];		for (int i=0;i<k;i++)		{			arr[i]=Integer.parseInt(inp[i])-1;			lasttime[arr[i]]=i+1;			if (firsttime[arr[i]]==0)				firsttime[arr[i]]=i+1;		}		HashSet<String> poss=new HashSet<>();		HashSet<Integer> complete = new HashSet<>();		for (int i=0;i<n;i++)		{			if (i+1<n && lasttime[i+1]==0)				poss.add(i+" "+i+1);			if (i-1>=0 && lasttime[i-1]==0)				poss.add(i+" "+(i-1));			if (lasttime[i]==0)				poss.add(i+" "+i);			complete.add(i);		}		HashSet<Integer> set=new HashSet<>();		for (int i=0;i<k;i++)		{			int e=arr[i];			set.add(e);			if (lasttime[e]>i+1)				continue;			int op1=e+1;			int op2=e-1;			String op1s=e+1+" "+e;			String op2s=e-1+" "+e;			if (op1<n && set.contains(op1)==false)				poss.add(op1s);			if (op2>=0 && set.contains(op2)==false)				poss.add(op2s);		}		System.out.println(poss.size());	}}
