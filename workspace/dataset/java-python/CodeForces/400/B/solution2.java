import java.util.*;import java.io.*;   public class A {  	public static void main(String[]args)throws IOException {		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out); 		int n = sc.nextInt(), m = sc.nextInt();		int [] diff = new int[n];		for (int i = 0; i < n; i++) {			String str = sc.next();			int s = str.indexOf('S');			int g = str.indexOf('G');			if (s < g) {				out.println(-1);				out.close();				return;			} 			diff[i] = s - g;		}		Arrays.sort(diff);		int count = 0;		while (true) {			int min = 0;			for (int i = 0; i < n; i++) {				if (diff[i] != 0) {					min = diff[i];					break;				}			}			if (min == 0)				break; 			for (int i = 0; i < n; i++)				diff[i] = Math.max(0, diff[i] - min); 			count++; 		} 		out.println(count);		out.close();	} }  // public static int  gcd(int a, int b) {// 	if (a == 0)// 		return b; // 	return gcd(b % a, a);// } class FastReader { 	BufferedReader br;	StringTokenizer st; 	public FastReader() {		br = new BufferedReader(new InputStreamReader(System.in));	} 	String next() {		while (st == null || !st.hasMoreElements()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException  e) {				e.printStackTrace();			}		}		return st.nextToken();	} 	int nextInt() {		return Integer.parseInt(next());	} 	int [] nextIntArray(int n) {		int [] arr = new int[n];		for (int i = 0; i < n; i++)			arr[i] = nextInt(); 		return arr; 	}  	long nextLong() {		return Long.parseLong(next());	} 	long [] nextLongArray(int n) {		long [] arr = new long[n];		for (int i = 0; i < n; i++)			arr[i] = nextLong(); 		return arr; 	} 	double nextDouble() {		return Double.parseDouble(next());	} 	String nextLine() {		String str = "";		try {			str = br.readLine();		} catch (IOException e) {			e.printStackTrace();		}		return str;	} }
