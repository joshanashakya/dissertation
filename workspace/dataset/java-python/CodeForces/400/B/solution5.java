import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; import java.util.*; public class Main {	 	public static void main(String args[] ) throws Exception {    	   Solve instance = new Solve();	   instance.solve();} }  class Solve{	FastReader sc;	String s[];	int n;	int m;	HashSet<Integer> set = new HashSet<>();	public Solve()	{		 sc = new FastReader();	}			private void input()	{		n = sc.nextInt();		m = sc.nextInt();		s = new String[n];		for(int i =0;i<n;i++){			s[i] = sc.next();		}	}	public void solve()	{			input();			for(int i= 0;i<n;i++)			{				if(s[i].charAt(m-1) == 'G')				{					System.out.println("-1");					System.exit(0);				}				else if((s[i].indexOf('S') - s[i].indexOf('G')) < 0)				{					System.out.println("-1");					System.exit(0);				}else				{					set.add((s[i].indexOf('S') - s[i].indexOf('G')));				}			}			System.out.println(set.size());								}	}     class FastReader     {         BufferedReader br;         StringTokenizer st;           public FastReader()         {             br = new BufferedReader(new                     InputStreamReader(System.in));         }           String next()         {             while (st == null || !st.hasMoreElements())             {                 try                {                     st = new StringTokenizer(br.readLine());                 }                 catch (IOException  e)                 {                     e.printStackTrace();                 }             }             return st.nextToken();         }           int nextInt()         {             return Integer.parseInt(next());         }           long nextLong()         {             return Long.parseLong(next());         }           double nextDouble()         {             return Double.parseDouble(next());         }           String nextLine()         {             String str = "";             try            {                 str = br.readLine();             }             catch (IOException e)             {                 e.printStackTrace();             }             return str;         }     }   
