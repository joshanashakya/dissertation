import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashSet;import java.util.Set;import java.util.StringTokenizer; public class InnaAndNewMatrixOfCandies {    public static void main(String[] args) {        FastReader fs = new FastReader();        StringBuilder sb = new StringBuilder();        Set<Integer> set = new HashSet<>();        int n = fs.nextInt();        int m = fs.nextInt();        for(int i = 0; i < n; i++) {            String s = fs.next();            int sweet = -1;            int dwarf = -1;            for(int j = 0; j < m; j++) {               if(s.charAt(j) == 'G') dwarf = j;               else if(s.charAt(j) == 'S') sweet = j;            }            if(sweet - dwarf < 0) {                System.out.println(-1);                return;            }else set.add(sweet - dwarf);        }        System.out.println(set.size());    }     static class FastReader {        BufferedReader br;        StringTokenizer st;        public FastReader() {            br = new BufferedReader(new InputStreamReader(System.in));        }         String next() {            while(st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                }                catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }         long nextLong() {            return Long.parseLong(next());        }         double nextDouble() {            return Double.parseDouble(next());        }         float nextFloat() {            return Float.parseFloat(next());        }    }}
