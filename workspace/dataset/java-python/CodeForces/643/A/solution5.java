import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        InputReader in = new InputReader(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskA solver = new TaskA();        solver.solve(1, in, out);        out.close();    }     static class TaskA {        public void solve(int testNumber, InputReader in, PrintWriter out) {            int n = in.nextInt();            int[] t = new int[n];            for (int i = 0; i < n; i++) {                t[i] = in.nextInt();            }            int ans[] = new int[n + 1];            for (int i = 0; i < n; i++) {                int[] colorCount = new int[n + 1];                int maxV = 0;                int dom = 0;                for (int j = i; j < n; j++) {                    colorCount[t[j]]++;                    if (colorCount[t[j]] > maxV) {                        maxV = colorCount[t[j]];                        dom = t[j];                    } else if (colorCount[t[j]] == maxV) {                        if (dom > t[j]) {                            dom = t[j];                        }                    }                    ans[dom]++;                }            }            for (int i = 1; i <= n; i++) out.print(ans[i] + " ");        }     }     static class InputReader {        private StringTokenizer tokenizer;        private BufferedReader reader;         public InputReader(InputStream inputStream) {            reader = new BufferedReader(new InputStreamReader(inputStream));        }         private void fillTokenizer() {            if (tokenizer == null || !tokenizer.hasMoreTokens()) {                try {                    tokenizer = new StringTokenizer(reader.readLine());                } catch (Exception e) {                    throw new RuntimeException(e);                }            }        }         public String next() {            fillTokenizer();            return tokenizer.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }     }} 
