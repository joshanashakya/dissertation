import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.math.BigInteger;import java.util.*;import static java.util.Arrays.sort;import javafx.util.Pair; public class Main{     public static void main(String[] args)    {         FastScanner input = new FastScanner();         String s = input.next();         int point = s.indexOf(".");         int power = Integer.parseInt(s.substring(s.indexOf("e") + 1));        s = s.substring(0, s.indexOf("e"));         point += power;        point++;        StringBuilder ans = new StringBuilder();        for (int i = 0; i < s.length(); i++) {            if (s.charAt(i) != '.') {                if (i == point) {                    ans.append(".");                }                ans.append(s.charAt(i));            }        }         point -= s.length();        while (point-- > 0) {            ans.append("0");        }//         System.out.println(ans);        boolean check = true;        int count = 0;        int len = ans.length();        if (ans.indexOf(".") != -1) {            for (int i = ans.indexOf("."); i < ans.length(); i++) {                if (ans.charAt(i) == '0') {                    count++;                }            }//            System.out.println("count->" + count);//            System.out.println(ans.length()-ans.indexOf("."));            if (ans.length() - ans.indexOf(".") == count+1) {                len = ans.indexOf(".");             }        }         for (int i = 0; i < len; i++) {            if (check) {                if (i != len - 1 && ans.charAt(i) == '0' && ans.charAt(i + 1) != '.') {                    continue;                } else {                    System.out.print(ans.charAt(i));                    check = false;                    continue;                }             } else {                System.out.print(ans.charAt(i));            }         }        System.out.println("");     }     static class FastScanner    {         BufferedReader br = new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st = new StringTokenizer("");         String next()        {            while (!st.hasMoreTokens()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt()        {            return Integer.parseInt(next());        }         long nextLong()        {             return Long.parseLong(next());        }         double nextDouble()        {            return Double.parseDouble(next());        }         String nextLine() throws IOException        {            return br.readLine();        }    } }
