import java.lang.*;import java.util.*;import java.io.*;public class Codechef {     public void solve()throws IOException{        FastScanner fs = new FastScanner();        StringBuilder ans = new StringBuilder("");//        int t = fs.nextInt();        int n = fs.nextInt();        int[]ar = new int[n];        int[]cost = new int[n+1];        Arrays.fill(cost,Integer.MAX_VALUE);        for(int i=0;i<n;i++)ar[i] = fs.nextInt();        int m = fs.nextInt();         for(int i=0;i<m;i++){            int u = fs.nextInt(),v=fs.nextInt(),c=fs.nextInt();            if(cost[v] > c)cost[v]=c;        }        int count =0,tsum=0;        for(int i=1;i<=n;i++){            if(cost[i] == Integer.MAX_VALUE)count++;            else tsum += cost[i];        }        if(count > 1)ans.append("-1\n");        else ans.append(tsum).append("\n");        System.out.println(ans);    }    public static void main(String[]args)throws IOException{        try{            new Codechef().solve();        }catch (Exception e){            return;//            e.printStackTrace();        }    }    static class FastScanner {        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));        StringTokenizer st=new StringTokenizer("");        String next() {            while (!st.hasMoreTokens())                try {                    st=new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            return st.nextToken();        }        String nextLine()        {            String str = "";            try            {                str = br.readLine();            }            catch (IOException e)            {                e.printStackTrace();            }            return str;        }         int nextInt() {            return Integer.parseInt(next());        }        int[] readArray(int n) {            int[] a=new int[n];            for (int i=0; i<n; i++) a[i]=nextInt();            return a;        }        long nextLong() {            return Long.parseLong(next());        }    } }
