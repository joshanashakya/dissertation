import sysfrom collections import defaultdict,deque# import logging# logging.root.setLevel(level=logging.INFO)# import logging# logging.root.setLevel(level=logging.INFO) limit, demand = map(int,sys.stdin.readline().strip().split())if demand == 0:    print("YES")    exit(0)is_prime = [True for i in range(limit+1)] for i in range(2,limit):    if is_prime[i]:        composite = 2*i        while(composite < limit):            is_prime[composite] = False            composite += i primes = [i for i in range(2,limit) if is_prime[i]]# print(primes)count = 0is_fit = 'NO'for pre,cur in zip(primes,primes[1:]):    if count == demand:        is_fit = 'YES'        break    num = pre+cur+1    if (num <= limit):        count += (is_prime[num])        # logging.info(f"{pre}\t{cur}\t{pre+cur+1}")    else:        breakprint(is_fit)        
