import java.io.*;import java.util.ArrayList;import java.util.StringTokenizer;// نورت الكود يا كبير اتفضل // يا رب Acceptedpublic class NoldbachProblem {    private static final int N = 1001;    private static final boolean[] prime = new boolean[N];     private static void sieveOfEratosthenes() {        for (int i = 0; i < N; i++)            prime[i] = true;        for (int p = 2; p * p < N; p++) {            if (prime[p]) {                for (int i = p * p; i < N; i += p)                    prime[i] = false;            }        }    }     public static void main(String[] args) {        FastReader in = new FastReader();        PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));         int n = in.nextInt();        int k = in.nextInt();        sieveOfEratosthenes();         int counter = 0;         ArrayList<Integer> arr = new ArrayList<>();         for (int i = 2; i <= n; i++)            if (prime[i])                arr.add(i);             for (int i = 0, j = i + 1; i < arr.size() - 1; i++, j++) {            int sum = ((arr.get(i) + arr.get(j)) + 1);            if (sum <= n && prime[sum]) {                //out.println(arr.get(i) + " " + arr.get(j) + " " + (arr.get(i) + arr.get(j) + 1));                counter++;            }            if (counter >= k)                break;        }         out.println((counter >= k) ? "YES" : "NO");        out.close();    }     private static class FastReader {        BufferedReader br;        StringTokenizer st;         FastReader() {            br = new BufferedReader(new                    InputStreamReader(System.in));        }         String next() {            while (st == null || !st.hasMoreElements()) {                try {                    st = new StringTokenizer(br.readLine());                } catch (IOException e) {                    e.printStackTrace();                }            }            return st.nextToken();        }         int nextInt() {            return Integer.parseInt(next());        }    }}
