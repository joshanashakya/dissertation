import java.util.*;import java.io.*;   public class A {  	public static void main(String[]args)throws IOException {		FastReader sc = new FastReader();		PrintWriter out = new PrintWriter(System.out);		int r1 = sc.nextInt(); 		int r = 0;		while (r1-- > 0)r = Math.max(r, sc.nextInt()); 		int p1 = sc.nextInt();		int [] diskDensity = sc.nextIntArray(p1); 		int p2 = sc.nextInt();		int p = Integer.MAX_VALUE;		while (p2-- > 0)p = Math.min(p, sc.nextInt());		int a = sc.nextInt(), b = sc.nextInt(); 		double ratio = (double)a / b;		double r2 = 0;		for (int pp = 0; pp < p1; pp++) {		    double temp=(1.0000*diskDensity[pp] * r * r) / (ratio * p + diskDensity[pp]);		    temp=Math.sqrt(temp);			r2 = Math.max(r2,temp);		} 		out.println(r2);		out.close();	}  }  class FastReader { 	BufferedReader br;	StringTokenizer st; 	public FastReader() {		br = new BufferedReader(new InputStreamReader(System.in));	} 	String next() {		while (st == null || !st.hasMoreElements()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException  e) {				e.printStackTrace();			}		}		return st.nextToken();	} 	int nextInt() {		return Integer.parseInt(next());	} 	int [] nextIntArray(int n) {		int [] arr = new int[n];		for (int i = 0; i < n; i++)			arr[i] = nextInt(); 		return arr; 	}  	long nextLong() {		return Long.parseLong(next());	} 	long [] nextLongArray(int n) {		long [] arr = new long[n];		for (int i = 0; i < n; i++)			arr[i] = nextLong(); 		return arr; 	} 	double nextDouble() {		return Double.parseDouble(next());	} 	String nextLine() {		String str = "";		try {			str = br.readLine();		} catch (IOException e) {			e.printStackTrace();		}		return str;	} }
