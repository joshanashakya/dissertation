import java.io.OutputStream;import java.io.IOException;import java.io.InputStream;import java.io.PrintWriter;import java.util.StringTokenizer;import java.io.IOException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.io.InputStream; /** * Built using CHelper plug-in * Actual solution is at the top */public class Main {    public static void main(String[] args) {        InputStream inputStream = System.in;        OutputStream outputStream = System.out;        FastScanner in = new FastScanner(inputStream);        PrintWriter out = new PrintWriter(outputStream);        TaskA solver = new TaskA();        solver.solve(1, in, out);        out.close();    }     static class TaskA {        public void solve(int testNumber, FastScanner in, PrintWriter out) {            int n = in.nextInt();            long t = in.nextLong();            long[] a = new long[n + 1];            for (int i = 0; i < n; i++) {                a[i] = in.nextLong();            }            int[] x = new int[n];            for (int i = 0; i < n; i++) {                x[i] = in.nextInt() - 1;                if (x[i] < i) {                    out.println("No");                    return;                }            }             long[] b = new long[n];            for (int i = 0; i < n; i++) {                if (x[i] == i) {                    b[i] = a[i] + t;                } else {                    b[i] = a[i + 1] + t;                }                 if (i > 0 && b[i] <= b[i - 1]) {                    b[i] = b[i - 1] + 1;                }            }             for (int i = 0; i < n; i++) {                if (x[i] + 1 < n && b[x[i]] >= a[x[i] + 1] + t) {                    out.println("No");                    return;                }            }             out.println("Yes");            for (int i = 0; i < n; i++) {                if (i > 0) {                    out.print(" ");                }                out.print(b[i]);            }            out.println();        }     }     static class FastScanner {        private BufferedReader in;        private StringTokenizer st;         public FastScanner(InputStream stream) {            in = new BufferedReader(new InputStreamReader(stream));        }         public String next() {            while (st == null || !st.hasMoreTokens()) {                try {                    st = new StringTokenizer(in.readLine());                } catch (IOException e) {                    throw new RuntimeException(e);                }            }            return st.nextToken();        }         public int nextInt() {            return Integer.parseInt(next());        }         public long nextLong() {            return Long.parseLong(next());        }     }} 
