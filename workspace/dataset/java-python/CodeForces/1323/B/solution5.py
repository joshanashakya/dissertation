from collections import defaultdict t = 1for _ in range(t):    n, m, k = [int(i) for i in input().split()]    a = [int(i) for i in input().split()]    b = [int(i) for i in input().split()]    cont_ones = []    count = 0    for i in range(n):        if a[i] == 1:            count += 1        else:            cont_ones.append(count)            count = 0    if count > 0:        cont_ones.append(count)    Dict_a = defaultdict(int)    for i in range(len(cont_ones)):        for j in range(1, min(k+1, cont_ones[i]+1)):            Dict_a[j] += (cont_ones[i]-j+1)    cont_ones = []    count = 0    for i in range(m):        if b[i] == 1:            count += 1        else:            cont_ones.append(count)            count = 0    if count > 0:        cont_ones.append(count)    Dict_b = defaultdict(int)    for i in range(len(cont_ones)):        for j in range(1, min(k+1, cont_ones[i] + 1)):            Dict_b[j] += (cont_ones[i]-j+1)    vals = list(Dict_b.keys())    ans = 0    for i in vals:        needed = k / i        ans += (Dict_b[i]*Dict_a[needed])    print(ans)    
