'''    Auther: ghoshashis545 Ashis Ghosh    College: jalpaiguri Govt Enggineering College '''from os import pathfrom io import BytesIO, IOBaseimport sysfrom heapq import heappush,heappopfrom functools import cmp_to_key as ctkfrom collections import deque,Counter,defaultdict as dd from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_rightfrom itertools import permutationsfrom datetime import datetimefrom math import ceil,sqrt,log,gcddef ii():return int(input())def si():return input().rstrip()def mi():return map(int,input().split())def li():return list(mi())abc='abcdefghijklmnopqrstuvwxyz'mod=1000000007#mod=998244353inf = float("inf")vow=['a','e','i','o','u']dx,dy=[-1,1,0,0],[0,0,1,-1] def bo(i):    return ord(i)-ord('0') file = 1def ceil(a,b):    return (a+b-1)//b    def solve():      # for _ in range(ii()):    n,m,k = mi()    a = li()    b = li()    x,y = [],[]    c = 0    for i in range(n):        if a[i] == 0:            if c > 0:                x.append(c)            c = 0        else:            c+=1    if c > 0:        x.append(c)     c = 0    for i in range(m):        if b[i] == 0:            if c > 0:                y.append(c)            c = 0        else:            c+=1    if c > 0:        y.append(c)     x.sort()    y.sort()    nx,ny= len(x),len(y)     sufx = [0]*nx    sufy = [0]*ny        for i in range(nx-1,-1,-1):        if i != nx-1:            sufx[i] += sufx[i+1]        sufx[i] += x[i]     for i in range(ny-1,-1,-1):        if i != ny-1:            sufy[i] += sufy[i+1]        sufy[i] += y[i]     def get(p,q):        idx1 = bisect_left(x,p)        idx2 = bisect_left(y,q)        cnt1,cnt2 = 0,0        if idx2 < ny:            cnt2 = sufy[idx2] - (q-1)*(ny-idx2)        if idx1 < nx:            cnt1 = sufx[idx1] - (p-1)*(nx-idx1)        return cnt1*cnt2     ans = 0    for i in range(2,int(sqrt(k))+1):        if k%i == 0:            p = i            q = k//i            ans += get(p,q)            if p!=q:                ans += get(q,p)     ans += get(1,k)    if k!=1:        ans += get(k,1)    print(ans)                                                       if __name__ =="__main__":     if(file):         if path.exists('tmp/input.txt'):            sys.stdin=open('tmp/input.txt', 'r')            sys.stdout=open('tmp/output.txt','w')        else:            input=sys.stdin.readline    solve()
