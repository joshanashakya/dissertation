import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static float f@@ i@@ n@@ d@@ R@@ a@@ d@@ i@@ u@@ s@@ O@@ f@@ c@@ i@@ r@@ c@@ u@@ m@@ circle ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; float radius = ( float ) Math . sqrt ( Math . pow ( l , 2 ) + Math . pow ( b , 2 ) ) / 2 ; return radius ; } public static void main ( String args [ ] ) { float l = 4 , b = 3 ; System . out . println ( f@@ i@@ n@@ d@@ R@@ a@@ d@@ i@@ u@@ s@@ O@@ f@@ c@@ i@@ r@@ c@@ u@@ m@@ circle ( l , b ) ) ; } }
class Test { static int arr [ ] = { 10 , 324 , 45 , 90 , 9808 } ; static int largest ( ) { int i ; int max = arr [ 0 ] ; for ( i = 1 ; i < arr . length ; i ++ ) if ( arr [ i ] > max ) max = arr [ i ] ; return max ; } public static void main ( String [ ] args ) { System . out . println ( "Largest in given array is " + largest ( ) ) ; } }
import java . util . * ; import java . io . * ; import java . math . * ;  public class Task {
class Main { static int getMissingNo ( int a [ ] , int n ) { int i , total ; total = ( n + 1 ) * ( n + 2 ) / 2 ; for ( i = 0 ; i < n ; i ++ ) total -= a [ i ] ; return total ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 2 , 4 , 5 , 6 } ; int miss = getMissingNo ( a , 5 ) ; System . out . println ( miss ) ; } }
import java . io . * ; class GFG { static int C@@ o@@ u@@ n@@ t@@ A@@ l@@ l@@ P@@ a@@ i@@ r@@ s ( int N , int K ) { int count = 0 ; if ( N > K ) { count = N - K ; for ( int i = K + 1 ; i <= N ; i ++ ) count = count + ( ( N - K ) / i ) ; } return count ; } public static void main ( String [ ] args ) { int N = 11 , K = 5 ; System . out . println ( C@@ o@@ u@@ n@@ t@@ A@@ l@@ l@@ P@@ a@@ i@@ r@@ s ( N , K ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;
class Test { public static void main ( String args [ ] ) { double r = 3 ; double R = 7 ; float pi = ( float ) 3.14159 ; double V@@ o@@ l@@ u@@ m@@ e = 0 ; V@@ o@@ l@@ u@@ m@@ e = 2 * pi * pi * R * r * r ; System . out . printf ( "@@ V@@ o@@ l@@ u@@ m@@ e@@ : %f" , V@@ o@@ l@@ u@@ m@@ e ) ; double S@@ u@@ r@@ f@@ a@@ c@@ e = 4 * pi * pi * R * r ; System . out . printf ( "@@ \@@ n@@ S@@ u@@ r@@ f@@ a@@ c@@ e@@ : %f" , S@@ u@@ r@@ f@@ a@@ c@@ e ) ; } }
import java . util . * ; public class SortExample { static void printOrder ( Integer [ ] arr , int k ) { int n = arr . length ; Arrays . sort ( arr , 0 , k ) ; Arrays . sort ( arr , k , n , Collections . reverseOrder ( ) ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 5 , 4 , 6 , 2 , 1 , 3 , 8 , 9 , - 1 } ; int k = 4 ; printOrder ( arr , k ) ; System . out . printf ( "@@ %@@ s@@ " , Arrays . toString ( arr ) ) ; } }
import java . util . * ; import java . math . * ; public class C@@ a@@ t@@ C@@ y@@ c@@ l@@ e { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int runs = sc . nextInt ( ) ; while ( runs -- > 0 ) { int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) - 1 ; int f = n / 2 ; int out = ( k + ( n % 2 ) * k / f ) % n + 1 ; System . out . println ( out ) ; } } }
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . StringTokenizer ;  public class Main { public static void main ( String [ ] args )
public class GFG { static int m@@ s@@ b@@ P@@ o@@ s ( int n ) { int pos = 0 ; while ( n != 0 ) { pos ++ ; n = n > > 1 ; } return pos ; } static int j@@ o@@ s@@ e@@ p@@ h@@ i@@ f@@ y ( int n ) { int position = m@@ s@@ b@@ P@@ o@@ s ( n ) ; int j = 1 << ( position - 1 ) ; n = n ^ j ; n = n << 1 ; n = n | 1 ; return n ; } public static void main ( String [ ] args ) { int n = 41 ; System . out . println ( j@@ o@@ s@@ e@@ p@@ h@@ i@@ f@@ y ( n ) ) ; } }
public class GFG { public static int getSum ( int arr [ ] , int p ) { return arr . length ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 6 , 8 } ; int p = 7 ; System . out . print ( getSum ( arr , p ) ) ; } }
import java . io . * ; import java . util . * ; public class T { public static void main ( String [ ] args ) throws IOException { Scanner sc = new Scanner ( System . in ) ; int l@@ o@@ o@@ p@@ s = sc . nextInt ( ) ; for ( int i = 2 ; i <= l@@ o@@ o@@ p@@ s ; i ++ ) while ( l@@ o@@ o@@ p@@ s % i == 0 ) { System . out . print ( i ) ; l@@ o@@ o@@ p@@ s /= i ; } } }
public class GFG { static int add ( int x , int y ) { while ( y > 0 && y != 0 ) { x ++ ; y -- ; } while ( y < 0 && y != 0 ) { x -- ; y ++ ; } return x ; } public static void main ( String args [ ] ) { System . out . println ( add ( 43 , 23 ) ) ; System . out . println ( add ( 43 , - 23 ) ) ; } }
import java . util . * ; class GFG { public static int f@@ i@@ n@@ d@@ M@@ a@@ x@@ R@@ e@@ c ( int A [ ] , int n ) { if ( n == 1 ) return A [ 0 ] ; return Math . max ( A [ n - 1 ] , f@@ i@@ n@@ d@@ M@@ a@@ x@@ R@@ e@@ c ( A , n - 1 ) ) ; } public static void main ( String args [ ] ) { int A [ ] = { 1 , 4 , 45 , 6 , - 50 , 10 , 2 } ; int n = A . length ; System . out . println ( f@@ i@@ n@@ d@@ M@@ a@@ x@@ R@@ e@@ c ( A , n ) ) ; } }
import java . io . * ; import java . util . * ;  public class P1 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; } Arrays . sort ( a ) ; System . out . println ( a [ n - k ] ) ; } }
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c705a {
import java . io . * ; class GFG { static float Area ( float a , float b ) { if ( a < 0 && b < 0 ) return - 1 ; float h = ( float ) Math . sqrt ( ( ( Math . pow ( a , 2 ) + Math . pow ( b , 2 ) ) / ( Math . pow ( a , 2 ) * Math . pow ( b , 2 ) ) ) ) ; float A = ( float ) ( 0.70477 * Math . pow ( h , 2 ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 5 , b = 4 ; System . out . println ( Area ( a , b ) ) ; } }
import java . io . * ; class GFG { static void s@@ u@@ b@@ s@@ e@@ t@@ Sums ( int [ ] arr , int l , int r , int sum ) { if ( l > r ) { System . out . print ( sum + " " ) ; return ; } s@@ u@@ b@@ s@@ e@@ t@@ Sums ( arr , l + 1 , r , sum + arr [ l ] ) ; s@@ u@@ b@@ s@@ e@@ t@@ Sums ( arr , l + 1 , r , sum ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 5 , 4 , 3 } ; int n = arr . length ; s@@ u@@ b@@ s@@ e@@ t@@ Sums ( arr , 0 , n - 1 , 0 ) ; } }
class GFG { static int findCount ( String str ) { int result = 0 ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( i == ( str . charAt ( i ) - 'a' ) || i == ( str . charAt ( i ) - 'A' ) ) { result ++ ; } } return result ; } public static void main ( String [ ] args ) { String str = "@@ A@@ b@@ g@@ d@@ e@@ F@@ " ; System . out . print ( findCount ( str ) ) ; } }
import java . util . * ; import java . io . * ;  public class CFA { BufferedReader br ; PrintWriter out ; StringTokenizer st ; boolean eof ; private static final long MOD = 1000L * 1000L * 1000L + 7 ; private static final int [ ] dx = { 0 , - 1 , 0 , 1 } ; private static final int [ ] dy = { 1 , 0 , - 1 , 0 } ; private static final String yes = "Yes" ; private static final String no = "No" ;  void solve ( ) { int T = nextInt ( ) ;
import java . util . * ;  public class Practice {  public static void main ( String [ ] args ) {
import java . io . BufferedReader ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . util . Arrays ; import java . util . StringTokenizer ;  public class Main { public static void main ( String [ ] args )
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
class GFG { static void solve ( String s ) { String z = s ; int l = s . length ( ) ; int i ; String str ; if ( s . indexOf ( '+' ) != - 1 ) { i = s . indexOf ( '+' ) ; str = s . replace ( '+' , '-' ) ; } else { i = s . indexOf ( '-' ) ; str = s . replace ( '-' , '+' ) ; } System . out . println ( "@@ C@@ o@@ n@@ j@@ u@@ g@@ a@@ t@@ e of " + z + " = " + str ) ; } public static void main ( String [ ] args ) { String s = "@@ 3@@ -@@ 4@@ i@@ " ; solve ( s ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;
import java . util . Scanner ;
class GFG { public static long SubArraySum ( int arr [ ] , int n ) { long result = 0 ; for ( int i = 0 ; i < n ; i ++ ) result += ( arr [ i ] * ( i + 1 ) * ( n - i ) ) ; return result ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 3 } ; int n = arr . length ; System . out . println ( "Sum of SubArray " + SubArraySum ( arr , n ) ) ; } }
import java . io . * ; class GFG { static int m@@ a@@ x@@ Area ( float perimeter ) { int length = ( int ) Math . ceil ( perimeter / 4 ) ; int breadth = ( int ) Math . floor ( perimeter / 4 ) ; return length * breadth ; } public static void main ( String [ ] args ) { float n = 38 ; System . out . println ( "Maximum Area = " + m@@ a@@ x@@ Area ( n ) ) ; } }
import java . util . * ; public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int res = 1 ; for ( int i = 1 ; i < n ; i ++ ) { res += 4 * i ; } System . out . println ( res ) ; } }
import java . util . * ; class Gfg { static int countDigits ( int n ) { return ( int ) ( n * Math . log10 ( 2 ) + 1 ) ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( countDigits ( n ) ) ; } }
import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_cicumscribed ( double a ) { return ( a * a * ( PI / 3 ) ) ; } public static void main ( String [ ] args ) { double a = 6.0 ; System . out . println ( "Area of c@@ i@@ r@@ c@@ u@@ m@@ s@@ c@@ r@@ i@@ b@@ e@@ d circle is :" + area_cicumscribed ( a ) ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;
import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner k@@ e@@ y@@ b@@ o@@ a@@ r@@ d = new Scanner ( System . in ) ;  int n , min ; n = k@@ e@@ y@@ b@@ o@@ a@@ r@@ d . nextInt ( ) ; min = k@@ e@@ y@@ b@@ o@@ a@@ r@@ d . nextInt ( ) ; int [ ] h@@ o@@ t@@ e@@ l = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { h@@ o@@ t@@ e@@ l [ i ] = k@@ e@@ y@@ b@@ o@@ a@@ r@@ d . nextInt ( ) ; } 
import java . io . * ; import java . util . * ;  public class Solution {  public static void main ( String [ ] args ) {
class GFG { static float squareRoot ( float n ) { float x = n ; float y = 1 ; double e = 0.000001 ; while ( x - y > e ) { x = ( x + y ) / 2 ; y = n / x ; } return x ; } public static void main ( String [ ] args ) { int n = 50 ; System . out . printf ( "@@ Square root of " + n + " is " + squareRoot ( n ) ) ; } }
import java . io . * ; class GFG { static int countPairs ( int n ) { int count = 0 ; for ( int x = 1 ; x < n ; x ++ ) { for ( int y = x + 1 ; y <= n ; y ++ ) { if ( ( y * x ) % ( y + x ) == 0 ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( countPairs ( n ) ) ; } }
class GFG { static void t@@ o@@ w@@ e@@ r ( int n , char s@@ o@@ u@@ r@@ c@@ e@@ P@@ o@@ l@@ e , char d@@ e@@ s@@ t@@ i@@ n@@ a@@ t@@ i@@ o@@ n@@ P@@ o@@ l@@ e , char a@@ u@@ x@@ i@@ l@@ i@@ a@@ r@@ y@@ P@@ o@@ l@@ e ) { if ( 0 == n ) return ; t@@ o@@ w@@ e@@ r ( n - 1 , s@@ o@@ u@@ r@@ c@@ e@@ P@@ o@@ l@@ e , a@@ u@@ x@@ i@@ l@@ i@@ a@@ r@@ y@@ P@@ o@@ l@@ e , d@@ e@@ s@@ t@@ i@@ n@@ a@@ t@@ i@@ o@@ n@@ P@@ o@@ l@@ e ) ; System . out . printf ( "@@ Move the d@@ i@@ s@@ k %@@ d from %@@ c to %@@ c@@ \n" , n , s@@ o@@ u@@ r@@ c@@ e@@ P@@ o@@ l@@ e , d@@ e@@ s@@ t@@ i@@ n@@ a@@ t@@ i@@ o@@ n@@ P@@ o@@ l@@ e ) ; t@@ o@@ w@@ e@@ r ( n - 1 , a@@ u@@ x@@ i@@ l@@ i@@ a@@ r@@ y@@ P@@ o@@ l@@ e , d@@ e@@ s@@ t@@ i@@ n@@ a@@ t@@ i@@ o@@ n@@ P@@ o@@ l@@ e , s@@ o@@ u@@ r@@ c@@ e@@ P@@ o@@ l@@ e ) ; } public static void main ( String [ ] args ) { t@@ o@@ w@@ e@@ r ( 3 , '@@ S@@ ' , 'D' , 'A' ) ; } }
import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;
import java . io . * ; import java . util . * ; class GFG { static boolean isPowerOfTwo ( int x ) { return x != 0 && ( ( x & ( x - 1 ) ) == 0 ) ; } static boolean d@@ i@@ f@@ f@@ e@@ r@@ A@@ t@@ O@@ n@@ e@@ B@@ i@@ t@@ P@@ o@@ s ( int a , int b ) { return isPowerOfTwo ( a ^ b ) ; } public static void main ( String args [ ] ) { int a = 13 , b = 9 ; if ( d@@ i@@ f@@ f@@ e@@ r@@ A@@ t@@ O@@ n@@ e@@ B@@ i@@ t@@ P@@ o@@ s ( a , b ) == true ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . io . * ; import java . util . * ;  public class Jumps {  public static void main ( String [ ] args ) throws IOException {
class GFG { static char [ ] a@@ l@@ p@@ h@@ a@@ b@@ e@@ t@@ s = "abcdefghijklmnopqrstuvwxyz" . toCharArray ( ) ; static String c@@ o@@ n@@ v@@ e@@ r@@ s@@ i@@ o@@ n ( String c@@ h@@ a@@ r@@ Set , char [ ] str1 ) { String s2 = "" ; for ( char i : str1 ) s2 += a@@ l@@ p@@ h@@ a@@ b@@ e@@ t@@ s [ c@@ h@@ a@@ r@@ Set . indexOf ( i ) ] ; return s2 ; } public static void main ( String [ ] args ) { String c@@ h@@ a@@ r@@ Set = "@@ q@@ w@@ e@@ r@@ t@@ y@@ u@@ i@@ o@@ p@@ a@@ s@@ d@@ f@@ g@@ h@@ j@@ k@@ l@@ z@@ x@@ c@@ v@@ b@@ n@@ m@@ " ; String str1 = "@@ e@@ g@@ r@@ t@@ " ; System . out . print ( c@@ o@@ n@@ v@@ e@@ r@@ s@@ i@@ o@@ n ( c@@ h@@ a@@ r@@ Set , str1 . toCharArray ( ) ) ) ; } }
import java . util . Scanner ; public class R@@ e@@ c@@ o@@ n@@ n@@ a@@ i@@ s@@ s@@ a@@ n@@ c@@ e@@ 2 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; String a = s . next ( ) , b = s . next ( ) , c , d ; int l@@ o@@ o@@ p = s . nextInt ( ) ; System . out . println ( a + " " + b ) ; for ( int i = 0 ; i < l@@ o@@ o@@ p ; i ++ ) { c = s . next ( ) ; d = s . next ( ) ; if ( a . e@@ q@@ u@@ a@@ l@@ s@@ I@@ g@@ n@@ o@@ r@@ e@@ C@@ a@@ s@@ e ( c ) ) a = d ; else b = d ; System . out . println ( a + " " + b ) ; } } }
 import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  public class Solution implements Runnable {   public void run ( ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; int i = 0 , j = 0 , k = 0 ; int t = 0 ;
class GFG { static void f@@ i@@ n@@ d@@ T@@ h@@ e@@ Number ( int n ) { if ( n == 1 ) { System . out . print ( "@@ I@@ m@@ p@@ o@@ s@@ s@@ i@@ b@@ l@@ e@@ " + "\n" ) ; return ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { System . out . print ( "@@ 5" ) ; } System . out . print ( "@@ 4" ) ; } public static void main ( String [ ] args ) { int n = 12 ; f@@ i@@ n@@ d@@ T@@ h@@ e@@ Number ( n ) ; } }
import java . io . * ; import java . util . * ; import java . math . * ;  public class A@@ 2@@ 9@@ 3 { static char [ ] s@@ arr ; public static void main ( String [ ] args ) throws IOException { FastScanner fs = new FastScanner ( ) ; PrintWriter out = new PrintWriter ( System . out ) ;
import java . util . Scanner ;  public class A1455 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int T = in . nextInt ( ) ; for ( int t = 0 ; t < T ; t ++ ) { String S = in . next ( ) ; System . out . println ( S . length ( ) ) ; } }  }
class GFG { static int squareDigitSum ( String number ) { int s@@ u@@ m@@ m = 0 ; int num = Integer . parseInt ( number ) ; int s@@ q@@ u@@ a@@ r@@ e@@ Num = num * num ; while ( s@@ q@@ u@@ a@@ r@@ e@@ Num > 0 ) { s@@ u@@ m@@ m = s@@ u@@ m@@ m + ( s@@ q@@ u@@ a@@ r@@ e@@ Num % 10 ) ; s@@ q@@ u@@ a@@ r@@ e@@ Num = s@@ q@@ u@@ a@@ r@@ e@@ Num / 10 ; } return s@@ u@@ m@@ m ; } public static void main ( String [ ] args ) { String N = "1111" ; System . out . println ( squareDigitSum ( N ) ) ; } }
import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; String s = "abcd" ; for ( int i = 0 ; i < n / 4 ; i ++ ) System . out . print ( s ) ; System . out . print ( s . substring ( 0 , n % 4 ) ) ; } }
 import java . util . * ; import java . lang . * ;
import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; System . out . println ( n ) ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( i + " " ) ; System . out . println ( ) ; } } }
class GFG { static int m@@ u@@ l@@ t@@ i@@ p@@ l@@ y@@ W@@ i@@ t@@ h@@ 3@@ P@@ o@@ i@@ n@@ t@@ 5 ( int x ) { return ( x << 1 ) + x + ( x > > 1 ) ; } public static void main ( String [ ] args ) { int x = 2 ; System . out . println ( m@@ u@@ l@@ t@@ i@@ p@@ l@@ y@@ W@@ i@@ t@@ h@@ 3@@ P@@ o@@ i@@ n@@ t@@ 5 ( x ) ) ; } }
class Test { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int a = 98 , b = 56 ; System . out . println ( "GCD of " + a + " and " + b + " is " + gcd ( a , b ) ) ; } }
import java . io . * ; class GFG { static boolean solve ( int n , int k ) { if ( n >= ( k * ( k + 1 ) ) / 2 ) { return true ; } return false ; } public static void main ( String [ ] args ) { int n = 12 , k = 4 ; if ( solve ( n , k ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . util . Scanner ; import java . util . Arrays ; public class Main { public static void main ( String args [ ] ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; while ( t -- != 0 ) { int n = s . nextInt ( ) ; int arr [ ] = new int [ 2 * n ] ; for ( int i = 0 ; i < 2 * n ; i ++ ) { arr [ i ] = s . nextInt ( ) ; } Arrays . sort ( arr ) ; System . out . println ( arr [ n ] - arr [ n - 1 ] ) ; } } }
import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; class GFG { static void p@@ r@@ i@@ n@@ t@@ N@@ o@@ s ( int n ) { if ( n > 0 ) { p@@ r@@ i@@ n@@ t@@ N@@ o@@ s ( n - 1 ) ; System . out . print ( n + " " ) ; } return ; } public static void main ( String [ ] args ) { p@@ r@@ i@@ n@@ t@@ N@@ o@@ s ( 100 ) ; } }
import java . util . Scanner ;  public class S@@ t@@ o@@ n@@ e@@ s@@ O@@ n@@ Table { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; scanner . nextLine ( ) ;  String s = scanner . nextLine ( ) ;  int res = 0 ; for ( int i = 1 ; i < s . length ( ) ; ) { char ch = s . charAt ( i ) ;  if ( ch == s . charAt ( i - 1 ) ) { res ++ ; s = s . substring ( 0 , i ) + s . substring ( i + 1 ) ;
import java . util . * ; class solution { static void p@@ r@@ i@@ n@@ t@@ T@@ h@@ r@@ e@@ e@@ P@@ a@@ r@@ t@@ s ( int N ) { if ( N % 3 == 0 ) System . out . println ( "x = 1@@ , y = 1@@ , z = " + ( N - 2 ) ) ; else System . out . println ( " x = 1@@ , y = 2@@ , z = " + ( N - 3 ) ) ; } public static void main ( String args [ ] ) { int N = 10 ; p@@ r@@ i@@ n@@ t@@ T@@ h@@ r@@ e@@ e@@ P@@ a@@ r@@ t@@ s ( N ) ; } }
class GFG { static double f@@ i@@ n@@ d@@ H@@ y@@ p@@ o@@ t@@ e@@ n@@ u@@ se ( double s@@ i@@ d@@ e@@ 1 , double s@@ i@@ d@@ e@@ 2 ) { double h = Math . sqrt ( ( s@@ i@@ d@@ e@@ 1 * s@@ i@@ d@@ e@@ 1 ) + ( s@@ i@@ d@@ e@@ 2 * s@@ i@@ d@@ e@@ 2 ) ) ; return h ; } public static void main ( String s [ ] ) { int s@@ i@@ d@@ e@@ 1 = 3 , s@@ i@@ d@@ e@@ 2 = 4 ; System . out . printf ( "%.2f" , f@@ i@@ n@@ d@@ H@@ y@@ p@@ o@@ t@@ e@@ n@@ u@@ se ( s@@ i@@ d@@ e@@ 1 , s@@ i@@ d@@ e@@ 2 ) ) ; } }
import java . io . * ; class GFG { static int calculateSum ( int n ) { return ( int ) Math . pow ( n * ( n + 1 ) / 2 , 2 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( calculateSum ( n ) ) ; } }
import java . io . * ; import java . util . * ; import java . math . BigInteger ;  public class test { static class sort implements Comparator < int [ ] >
import java . io . * ; import java . util . StringTokenizer ;
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) ; System . out . println ( 26 * ( s . length ( ) + 1 ) - s . length ( ) ) ; } }
import java . util . ArrayList ; import java . util . Collections ; import java . util . List ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; List < Integer > list = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; ++ i ) { list . add ( scanner . nextInt ( ) ) ; }
class GFG { static int sumOfTheSeries ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int k = 2 ; for ( int j = 1 ; j <= i ; j ++ ) { sum += k ; k += 2 ; } } return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . printf ( "Sum = %d" , sumOfTheSeries ( n ) ) ; } }
class GFG { static int nthTerm ( int N ) { int nth = 0 ; if ( N % 2 == 1 ) nth = ( N * N ) + 1 ; else nth = ( N * N ) - 1 ; return nth ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . print ( nthTerm ( N ) + "\n" ) ; } }
import java . util . * ; 
import java . io . * ; class GFG { static void c@@ e@@ n@@ t@@ e@@ r@@ e@@ d@@ H@@ e@@ x@@ a@@ g@@ o@@ n@@ a@@ l@@ Series ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( 3 * i * ( i - 1 ) + 1 + " " ) ; } public static void main ( String args [ ] ) { int n = 10 ; c@@ e@@ n@@ t@@ e@@ r@@ e@@ d@@ H@@ e@@ x@@ a@@ g@@ o@@ n@@ a@@ l@@ Series ( n ) ; } }
class gfg { public void decToBinary ( int n ) { for ( int i = 31 ; i >= 0 ; i -- ) { int k = n > > i ; if ( ( k & 1 ) > 0 ) System . out . print ( "1" ) ; else System . out . print ( "0" ) ; } } } class geek { public static void main ( String [ ] args ) { gfg g = new gfg ( ) ; int n = 32 ; g . decToBinary ( n ) ; } }
import java . io . * ; import java . math . * ; import java . security . * ; import java . text . * ; import java . time . LocalTime ; import java . util . * ; import java . util . concurrent . * ; import java . util . regex . * ;   import java . math . * ;    public class A {  static boolean f@@ o@@ u@@ n@@ d ; public static void main ( String [ ] args ) { FastScanner scan = new FastScanner ( ) ; int t = 1 ;
class GFG { static void line ( double x@@ 0 , double y@@ 0 ) { double c = ( int ) ( 2 * y@@ 0 * x@@ 0 ) ; System . out . println ( y@@ 0 + "@@ x@@ " + " + " + x@@ 0 + "y = " + c ) ; } public static void main ( String [ ] args ) { double x@@ 0 = 4 , y@@ 0 = 3 ; line ( x@@ 0 , y@@ 0 ) ; } }
import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {
import java . util . * ;  public class CF10 { public static void main ( String [ ] args ) {
import java . util . * ; import java . io . * ; public class Solution { static int rock = 0 ; static BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; public static void main ( String [ ] args ) throws Exception {
class GFG { static int summation ( int n ) { int a@@ b@@ s@@ _@@ sum = n * ( n + 1 ) / 2 ; int s@@ i@@ g@@ n = n + 1 % 2 == 0 ? 1 : - 1 ; int r@@ e@@ s@@ u@@ l@@ t@@ _@@ sum = s@@ i@@ g@@ n * a@@ b@@ s@@ _@@ sum ; return r@@ e@@ s@@ u@@ l@@ t@@ _@@ sum ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( summation ( N ) ) ; } }
import java . util . * ; import java . io . * ; public class EdE { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {
import java . util . ArrayList ; import java . util . Scanner ;  public class t@@ w@@ e@@ n@@ t@@ y@@ o@@ n@@ e {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . math . BigInteger ; import java . util . * ;  import javafx . util . Pair ;  public class Main {
import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ;  public static void main ( String [ ] args ) {
class GFG { static void L@@ e@@ a@@ d@@ i@@ n@@ g@@ Z@@ e@@ r@@ o@@ s ( int x , int y ) { if ( ( x ^ y ) <= ( x & y ) ) System . out . print ( "@@ \@@ n@@ E@@ q@@ u@@ a@@ l@@ " ) ; else if ( ( x & ( ~ y ) ) > y ) System . out . print ( y ) ; else System . out . print ( x ) ; } public static void main ( String [ ] args ) { int x = 10 , y = 16 ; L@@ e@@ a@@ d@@ i@@ n@@ g@@ Z@@ e@@ r@@ o@@ s ( x , y ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
import java . util . Scanner ; import java . util . Arrays ; import java . util . Vector ; import java . util . Collections ;   public class Problem_Solving1 { public static long fac ( long n ) { long f = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { f *= i ; } return f ; }  public static void main ( String [ ] args ) {
import java . util . Scanner ; public class A { static int val = 10000 ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = "" ; int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= val ; i ++ ) { s += i ; } System . out . println ( s . charAt ( n - 1 ) ) ;  } }
class GFG { static int kthSmallest ( int n , int k ) { return ( 2 * k ) ; } public static void main ( String args [ ] ) { int n = 8 , k = 4 ; System . out . print ( kthSmallest ( n , k ) ) ; } }
class GFG { static int countSolutions ( int n , int val ) { int total = 0 ; if ( n == 1 && val >= 0 ) return 1 ; for ( int i = 0 ; i <= val ; i ++ ) { total += countSolutions ( n - 1 , val - i ) ; } return total ; } public static void main ( String [ ] args ) { int n = 5 ; int val = 20 ; System . out . print ( countSolutions ( n , val ) ) ; } }
class GFG { static void T@@ w@@ e@@ n@@ t@@ y@@ o@@ n@@ e@@ M@@ a@@ t@@ c@@ h@@ stick ( int arr [ ] , int N ) { for ( int i = 0 ; i < N ; i += 1 ) { System . out . print ( 5 - arr [ i ] + " " ) ; } System . out . println ( ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 4 , 2 , 2 } ; int N = arr . length ; T@@ w@@ e@@ n@@ t@@ y@@ o@@ n@@ e@@ M@@ a@@ t@@ c@@ h@@ stick ( arr , N ) ; } }
import java . util . Scanner ;  public class v@@ a@@ n@@ y@@ a@@ A@@ n@@ d@@ F@@ e@@ n@@ c@@ e {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int h = sc . nextInt ( ) ; int res = n ; for ( int i = 1 ; i <= n ; i ++ ) { int hi = sc . nextInt ( ) ; if ( hi > h ) { res ++ ; } } System . out . println ( res ) ; }  }
import java . io . * ; import java . util . * ;     public class A {
import java . io . * ; import java . util . * ; import java . lang . * ;  public class c1 { public static void main ( String [ ] args ) { MyScanner scan = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ;  int t = 1 ;
import java . io . * ; import java . util . * ; public class code implements Runnable {
import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { FastReader scn = new FastReader ( ) ;
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class d@@ i@@ s@@ c@@ o@@ u@@ n@@ t@@ s {
import java . util . * ; import java . util . jar . JarOutputStream ;  public class Practise {  public static int [ ] [ ] dp ; public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . Scanner ;  public class C@@ F@@ _@@ 5@@ 6@@ 9@@ A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int T = sc . nextInt ( ) , S = sc . nextInt ( ) , q = sc . nextInt ( ) ; int cnt = 0 ; while ( S < T ) { S = S * q ; cnt ++ ; } System . out . print ( cnt ) ; } }
import java . util . * ; class GFG { public static void main ( String [ ] args ) { int a [ ] = { 1 , 2 , 3 , 4 , 5 } ; int i ; for ( i = 0 ; i < 5 ; i ++ ) System . out . printf ( "%d " , a [ i ] ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class Ideone { public static String sort ( String inputString ) {
import java . io . * ; import java . util . * ; class GFG { static long fourthPowerSum ( int n ) { long sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum = sum + ( i * i * i * i ) ; return sum ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( fourthPowerSum ( n ) ) ; } }
  import java . io . * ; import java . util . * ; import java . text . * ; import java . math . * ; import java . util . regex . * ; public class R@@ o@@ c@@ k@@ B { Scanner in = new Scanner ( System . in ) ;  private R@@ o@@ c@@ k@@ B ( ) throws IOException {
class GFG { static int summation ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) sum += ( i * i ) ; else sum -= ( i * i ) ; } return sum ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( summation ( N ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; int e = sc . nextInt ( ) ; int e@@ u@@ m@@ in = 5 * e , r@@ e@@ l = n ; for ( int i = 0 ; i * d <= n ; i ++ ) {
class Main { static int f@@ i@@ n@@ d@@ M@@ a@@ x@@ i@@ m@@ u@@ m ( int arr [ ] , int low , int high ) { int max = arr [ low ] ; int i ; for ( i = low ; i <= high ; i ++ ) { if ( arr [ i ] > max ) max = arr [ i ] ; } return max ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 30 , 40 , 50 , 60 , 70 , 23 , 20 } ; int n = arr . length ; System . out . println ( "The maximum element is " + f@@ i@@ n@@ d@@ M@@ a@@ x@@ i@@ m@@ u@@ m ( arr , 0 , n - 1 ) ) ; } }
import java . util . Scanner ;  public class L@@ o@@ v@@ e@@ Triangle {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int p@@ l@@ a@@ n@@ e@@ s@@ Number = sc . nextInt ( ) ;  sc . nextLine ( ) ;
public class GFG { public static int cubesum ( int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += ( 2 * i + 1 ) * ( 2 * i + 1 ) * ( 2 * i + 1 ) ; return sum ; } public static void main ( String args [ ] ) { int a = 5 ; System . out . println ( cubesum ( a ) ) ; } }
import java . util . * ;  public class Codeforces { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; if ( n >= 0 ) { System . out . println ( n ) ; } else { int max = Math . max ( n / 10 , n / 100 * 10 + n % 10 ) ; System . out . println ( max ) ; } System . out . println ( ) ;  }  }
class GfG { static int countWays ( int N ) { int E = ( N * ( N - 1 ) ) / 2 ; if ( N == 1 ) return 0 ; return ( int ) Math . pow ( 2 , E - 1 ) ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( countWays ( N ) ) ; } }
import java . util . * ; public class C@@ i@@ f@@ e@@ r@@ a { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long k = sc . nextLong ( ) ; long l = sc . nextLong ( ) ; sc . close ( ) ; 
import java . io . * ; import java . util . * ;  public class K@@ D@@ i@@ v@@ i@@ s@@ b@@ l@@ e@@ Sum {  public static void main ( String [ ] args ) throws IOException {
import java . util . * ; class GFG { static int countDigit ( long n ) { return ( int ) Math . floor ( Math . log10 ( n ) + 1 ) ; } public static void main ( String [ ] args ) { long n = 345289467 ; System . out . print ( "Number of digits : " + countDigit ( n ) ) ; } }
import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; int count = 0 ; int d = Math . abs ( a - b ) ; count = count + d / 5 ; d = d % 5 ; count = count + d / 2 ; d = d % 2 ; count = count + d ; System . out . println ( count ) ; } } }
import java . io . * ; class GFG { static int surfaceArea ( int b , int s ) { return 2 * b * s + ( int ) Math . pow ( b , 2 ) ; } public static void main ( String [ ] args ) { int b = 3 , s = 4 ; System . out . println ( surfaceArea ( b , s ) ) ; } }
class GFG { static int numberOfPaths ( int m , int n ) { int path = 1 ; for ( int i = n ; i < ( m + n - 1 ) ; i ++ ) { path *= i ; path /= ( i - n + 1 ) ; } return path ; } public static void main ( String [ ] args ) { System . out . println ( numberOfPaths ( 3 , 3 ) ) ; } }
import java . util . * ; import java . lang . * ; public class GfG { public static int k@@ t@@ h@@ d@@ i@@ g@@ i@@ t ( int a , int b , int k ) { int p = ( int ) Math . pow ( a , b ) ; int count = 0 ; while ( p > 0 && count < k ) { int rem = p % 10 ; count ++ ; if ( count == k ) return rem ; p = p / 10 ; } return 0 ; } public static void main ( String argc [ ] ) { int a = 5 , b = 2 ; int k = 1 ; System . out . println ( k@@ t@@ h@@ d@@ i@@ g@@ i@@ t ( a , b , k ) ) ; } }
class GFG { static void p@@ a@@ i@@ r@@ w@@ i@@ s@@ e@@ D@@ i@@ f@@ f@@ e@@ r@@ e@@ n@@ c@@ e ( int arr [ ] , int n ) { int diff ; for ( int i = 0 ; i < n - 1 ; i ++ ) { diff = Math . abs ( arr [ i ] - arr [ i + 1 ] ) ; System . out . print ( diff + " " ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 10 , 15 , 5 , 6 } ; int n = arr . length ; p@@ a@@ i@@ r@@ w@@ i@@ s@@ e@@ D@@ i@@ f@@ f@@ e@@ r@@ e@@ n@@ c@@ e ( arr , n ) ; } }
import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; double n = sc . nextInt ( ) ; double h = sc . nextDouble ( ) ; double b = 1 ; double a = ( b * h ) / ( 2 * n ) ; double t = Math . a@@ t@@ a@@ n@@ 2 ( h , 0.5 ) ; for ( int m = 1 ; m <= n - 1 ; m ++ ) { double ax = m * a ; double ans = Math . sqrt ( ax * Math . tan ( t ) ) ; System . out . print ( ans + " " ) ; } } } 
import java . io . * ; class GFG { static int nthTerm ( int n ) { return 2 * ( int ) Math . pow ( n , 2 ) + n - 3 ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }
import java . util . * ; public class D@@ e@@ s@@ i@@ g@@ n@@ T@@ u@@ t@@ o@@ r@@ i@@ a@@ l@@ LearnFromMath { public static void main ( String [ ] args ) {  Scanner sc = new Scanner ( System . in ) ; int val = sc . nextInt ( ) ;  int v@@ a@@ l@@ 1 ; if ( val % 2 == 0 ) { v@@ a@@ l@@ 1 = 8 ; } else { v@@ a@@ l@@ 1 = 9 ;  } System . out . println ( v@@ a@@ l@@ 1 + " " + ( val - v@@ a@@ l@@ 1 ) ) ; } }
import java . util . Scanner ;  import static java . lang . Math . max ; 
class GFG { static int getValue ( int n ) { int i = 0 , k = 1 ; while ( i < n ) { i = i + k ; k = k * 2 ; } return k / 2 ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( getValue ( n ) ) ; n = 1025 ; System . out . println ( getValue ( n ) ) ; } }
import java . util . * ; public class P@@ o@@ l@@ y@@ c@@ a@@ r@@ p@@ Training { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int size = sc . nextInt ( ) ; Integer [ ] arr = new Integer [ size ] ; for ( int i = 0 ; i < size ; i ++ ) arr [ i ] = sc . nextInt ( ) ; Arrays . sort ( arr ) ; int index = 1 ; for ( int i = 0 ; i < size ; i ++ ) { if ( arr [ i ] >= index ) { index ++ ; } } System . out . println ( index - 1 ) ; } }
class GFG { public static int solve ( int n ) { int ans = ( n * n / 4 ) ; return ans ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( solve ( n ) ) ; } }
class GFG { static float sumOfAP ( float a , float d , int n ) { float sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum = sum + a ; a = a + d ; } return sum ; } public static void main ( String args [ ] ) { int n = 20 ; float a = 2.5f , d = 1.5f ; System . out . println ( sumOfAP ( a , d , n ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int k = sc . nextInt ( ) ; if ( k > 36 ) { System . out . print ( "-1" ) ; return ; } while ( k >= 2 ) { k -= 2 ; System . out . print ( "@@ 8@@ " ) ; } if ( k == 1 ) { System . out . print ( "6" ) ; } } }
import java . util . Scanner ;  public class _@@ 0@@ 8@@ 4@@ 2@@ S@@ h@@ o@@ v@@ e@@ l@@ s@@ a@@ n@@ d@@ S@@ words {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ;
import java . io . * ; import java . util . StringTokenizer ;
import java . util . Scanner ; public class test { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String x = sc . nextLine ( ) ; String [ ] num = x . split ( " " ) ;
import java . util . Scanner ; public class E@@ x {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , count = 0 ; while ( n != 0 ) { if ( n >= 5 ) { n = n - 5 ; count ++ ; } else { n = n - n ; count ++ ; } } System . out . println ( count ) ; } }
class GFG { public static double m@@ a@@ x@@ E@@ d@@ g@@ e@@ s ( double N ) { double e@@ d@@ g@@ e@@ s = 0 ; e@@ d@@ g@@ e@@ s = Math . floor ( ( N * N ) / 4 ) ; return e@@ d@@ g@@ e@@ s ; } public static void main ( String [ ] args ) { double N = 5 ; System . out . println ( m@@ a@@ x@@ E@@ d@@ g@@ e@@ s ( N ) ) ; } }
import java . util . Scanner ;  public class G@@ e@@ n@@ a@@ s@@ C@@ o@@ d@@ e {  static boolean i@@ s@@ B@@ e@@ a@@ u@@ t@@ i@@ f@@ u@@ l ( String s ) { boolean f@@ o@@ u@@ n@@ d@@ O@@ n@@ e = false ; for ( char c : s . toCharArray ( ) ) { if ( c == '1' ) { if ( f@@ o@@ u@@ n@@ d@@ O@@ n@@ e ) return false ;
import java . util . Scanner ;  public class A@@ 7@@ 23 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int x1 = scanner . nextInt ( ) , x2 = scanner . nextInt ( ) , x3 = scanner . nextInt ( ) , max , min ;  max = Math . max ( x1 , Math . max ( x2 , x3 ) ) ; min = Math . min ( x1 , Math . min ( x2 , x3 ) ) ; System . out . println ( max - min ) ; } }
import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {
class Solution { public int [ ] a@@ n@@ a@@ g@@ r@@ a@@ m@@ M@@ a@@ p@@ p@@ i@@ n@@ g@@ s ( int [ ] A , int [ ] B ) { int [ ] ans = new int [ A . length ] ; HashMap < Integer , Integer > v@@ a@@ l@@ I@@ n@@ d@@ e@@ x = new HashMap < > ( ) ; for ( int i = 0 ; i < B . length ; i ++ ) v@@ a@@ l@@ I@@ n@@ d@@ e@@ x . put ( B [ i ] , i ) ; for ( int i = 0 ; i < A . length ; i ++ ) ans [ i ] = v@@ a@@ l@@ I@@ n@@ d@@ e@@ x . get ( A [ i ] ) ; return ans ; } }
import java . util . * ; public class S@@ p@@ o@@ r@@ t@@ _@@ M@@ a@@ f@@ i@@ a { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long sum = 0 ; long i = 1 ; for ( i = 1 ; i <= n ; i ++ ) { sum = i * ( i + 1 ) ; sum = sum / 2 ; sum -= ( n - i ) ; if ( sum == k ) { System . out . println ( n - i ) ; break ; } } } }
import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class K@@ e@@ a@@ n@@ u@@ R@@ e@@ a@@ v@@ e@@ s { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {
class GFG { static int f@@ i@@ n@@ d@@ S ( int s ) { int sum = 0 ; for ( int n = 1 ; sum < s ; n ++ ) { sum += n ; if ( sum == s ) return n ; } return - 1 ; } public static void main ( String [ ] args ) { int s = 15 ; int n = f@@ i@@ n@@ d@@ S ( s ) ; if ( n == - 1 ) System . out . println ( "-1" ) ; else System . out . println ( n ) ; } }
import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; while ( sc . hasNextInt ( ) ) { int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; System . out . println ( Math . max ( 0 , Math . abs ( a - b ) + Math . abs ( a - c ) + Math . abs ( b - c ) - 4 ) ) ; } } } }
import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int ans = 1 ;   for ( int i = 0 ; i < n ; i ++ ) { int num = sc . nextInt ( ) ; if ( num == 1 ) { ans = - 1 ;
import java . util . * ; import java . io . * ;
import java . io . * ; import java . math . * ; import java . text . * ; import java . util . * ; import java . util . regex . * ; class GFG { static int summingSeries ( long n ) { int S = 0 ; for ( i = 1 ; i <= n ; i ++ ) S += i * i - ( i - 1 ) * ( i - 1 ) ; return S ; } public static void main ( String [ ] args ) { int n = 100 ; System . out . println ( "The sum of n term is: " + summingSeries ( n ) ) ; } }
   import java . awt . * ; import java . io . * ; import java . util . * ; public class Main { public static void main ( String [ ] args ) throws Exception { Scanner sc = new Scanner ( System . in ) ;
import java . util . * ;  import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws IOException { FastScanner in = new FastScanner ( System . in ) ; PrintWriter out = new PrintWriter ( System . out ) ; new Main ( ) . run ( in , out ) ; out . close ( ) ; } 
import java . util . * ; import java . io . * ; import java . math . * ; public class Main {
class GFG { static int k@@ smallest ( int arr [ ] , int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] <= k ) k ++ ; else break ; } return k ; } public static void main ( String args [ ] ) { int k = 1 ; int arr [ ] = { 1 } ; int n = arr . length ; System . out . println ( k@@ smallest ( arr , n , k ) ) ; } }
class GFG { static int n@@ t@@ h@@ X@@ o@@ r@@ F@@ i@@ b ( int n , int a , int b ) { if ( n == 0 ) return a ; if ( n == 1 ) return b ; if ( n == 2 ) return ( a ^ b ) ; return n@@ t@@ h@@ X@@ o@@ r@@ F@@ i@@ b ( n % 3 , a , b ) ; } public static void main ( String [ ] args ) { int a = 1 , b = 2 , n = 10 ; System . out . println ( n@@ t@@ h@@ X@@ o@@ r@@ F@@ i@@ b ( n , a , b ) ) ; } }
import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ;  public class p@@ r@@ o@@ b@@ l@@ e@@ m@@ 3@@ 4 {  public static void main ( String [ ] args ) {
import java . io . * ; class GFG { public static int countSetBits ( int n ) { if ( n == 0 ) return 0 ; else return 1 + countSetBits ( n & ( n - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( countSetBits ( n ) ) ; } }
import java . io . File ; import java . math . BigInteger ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class p@@ 0@@ 0@@ 8 { public static void main ( String args [ ] ) throws Exception {
class GFG { static int __gcd ( int a , int b ) { if ( b == 0 ) return a ; return __gcd ( b , a % b ) ; } static void n@@ o@@ O@@ f@@ Squares ( int x1 , int y1 , int x2 , int y2 ) { int dx = Math . abs ( x2 - x1 ) ; int dy = Math . abs ( y2 - y1 ) ; int ans = dx + dy - __gcd ( dx , dy ) ; System . out . println ( ans ) ; } public static void main ( String [ ] args ) { int x1 = 1 , y1 = 1 , x2 = 4 , y2 = 3 ; n@@ o@@ O@@ f@@ Squares ( x1 , y1 , x2 , y2 ) ; } }
import java . util . Scanner ;  public class c@@ i@@ f@@ e@@ r@@ a { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int number = sc . nextInt ( ) ; int i = 1 ; if ( number % n != 0 ) { System . out . println ( "NO" ) ; return ; } else { while ( Math . pow ( n , i ) <= number ) { i ++ ;
import java . util . * ; public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; List < Integer > list = new ArrayList < > ( ) ; int sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) {
import java . io . * ; class GFG { static int countBits ( int number ) { return ( int ) ( Math . log ( number ) / Math . log ( 2 ) + 1 ) ; } public static void main ( String [ ] args ) { int num = 65 ; System . out . println ( countBits ( num ) ) ; } }
import java . io . * ; class GFG { static int highestPowerof2 ( int n ) { int p = ( int ) ( Math . log ( n ) / Math . log ( 2 ) ) ; return ( int ) Math . pow ( 2 , p ) ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( highestPowerof2 ( n ) ) ; } }
import java . io . * ; class GFG { static void C@@ a@@ l@@ P@@ e@@ r@@ i ( ) { int S = 5 , Perimeter ; Perimeter = 10 * S ; System . out . println ( "The Perimeter of D@@ e@@ c@@ a@@ g@@ o@@ n is : " + Perimeter ) ; } public static void main ( String [ ] args ) { C@@ a@@ l@@ P@@ e@@ r@@ i ( ) ; } }
class GFG { static boolean isPossible ( int w , int h , int x , int y ) { if ( x * 2 == w && y * 2 == h ) return true ; return false ; } public static void main ( String [ ] args ) { int w = 1 , h = 2 , x = 1 , y = 2 ; if ( isPossible ( w , h , x , y ) ) System . out . print ( "Yes" ) ; else System . out . print ( "No" ) ; } }
class GFG { static void s@@ u@@ b@@ String ( char str [ ] , int n ) { for ( int len = 1 ; len <= n ; len ++ ) { for ( int i = 0 ; i <= n - len ; i ++ ) { int j = i + len - 1 ; for ( int k = i ; k <= j ; k ++ ) { System . out . print ( str [ k ] ) ; } System . out . println ( ) ; } } } public static void main ( String [ ] args ) { char str [ ] = { 'a' , 'b' , 'c' } ; s@@ u@@ b@@ String ( str , str . length ) ; } }
import java . io . * ; import java . util . * ;  public class m@@ a@@ h@@ a@@ k@@ al {  static long mod = ( long ) 1e9 + 7@@ l ; public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ;  int res = ( int ) Math . ceil ( ( double ) ( n * y ) / 100 ) ; System . out . println ( Math . max ( 0 , res - x ) ) ;  } }   
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int count = 0 ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( a [ i ] + k ) <= 5 ) count ++ ; } System . out . println ( count / 3 ) ; } }
import java . util . Scanner ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Cv {
public class GFG { static int findNum ( int div [ ] , int rem [ ] , int N ) { int num = rem [ N - 1 ] ; for ( int i = N - 2 ; i >= 0 ; i -- ) { num = num * div [ i ] + rem [ i ] ; } return num ; } public static void main ( String [ ] args ) { int div [ ] = { 8 , 3 } ; int rem [ ] = { 2 , 2 } ; int N = div . length ; System . out . println ( findNum ( div , rem , N ) ) ; } }
import java . io . * ; import java . util . * ;   public class D {  static int longestPrefixSuffix ( String s ) { int n = s . length ( ) ; int l@@ p@@ s [ ] = new int [ n ] ;
import java . io . * ; class GFG { static float I@@ n@@ s@@ c@@ r@@ i@@ b@@ e@@ d@@ C@@ i@@ r@@ c@@ l@@ e@@ Area ( float n , float a ) { if ( a < 0 && n < 0 ) return - 1 ; float r = a / ( float ) ( 2 * Math . tan ( ( 180 / n ) * 3.14159 / 180 ) ) ; float Area = ( float ) ( 3.14 ) * ( r ) * ( r ) ; return Area ; } public static void main ( String [ ] args ) { float n = 6 ; float a = 4 ; System . out . println ( I@@ n@@ s@@ c@@ r@@ i@@ b@@ e@@ d@@ C@@ i@@ r@@ c@@ l@@ e@@ Area ( n , a ) ) ; } }
import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;
import java . io . * ; class GFG { static int getSum ( int n ) { int sum ; for ( sum = 0 ; n > 0 ; sum += n % 10 , n /= 10 ) ; return sum ; } public static void main ( String [ ] args ) { int n = 687 ; System . out . println ( getSum ( n ) ) ; } }
import java . util . * ; class GFG { static double sumOfSeries ( int n ) { return 0@@ .@@ 0@@ 2@@ 4@@ 6 * ( Math . pow ( 10 , n ) - 1 - ( 9 * n ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( sumOfSeries ( n ) ) ; } }
import java . util . * ; public class o@@ p { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = in . nextInt ( ) ; int i , j ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; } if ( a [ 0 ] + a [ 1 ] <= a [ n - 1 ] ) System . out . println ( 1 + " " + 2 + " " + n ) ; else System . out . println ( - 1 ) ; } } }
import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class Exam { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;
import java . io . * ; class GFG { static void printSquares ( int n ) { int square = 0 , p@@ r@@ e@@ v@@ _@@ x = 0 ; for ( int x = 0 ; x < n ; x ++ ) { square = ( square + x + p@@ r@@ e@@ v@@ _@@ x ) ; System . out . print ( square + " " ) ; p@@ r@@ e@@ v@@ _@@ x = x ; } } public static void main ( String [ ] args ) { int n = 5 ; printSquares ( n ) ; } }
import java . util . * ; class GFG { static int round ( int n ) { int a = ( n / 10 ) * 10 ; int b = a + 10 ; return ( n - a > b - n ) ? b : a ; } public static void main ( String [ ] args ) { int n = 4@@ 7@@ 22 ; System . out . println ( round ( n ) ) ; } }
import java . util . Scanner ; public class Main {  public static void main ( String [ ] args ) {
class GFG { static void findNthTerm ( int N ) { int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( i % 2 == 0 ) { ans = ans + 6 ; } else { ans = ans + 2 ; } } System . out . print ( ans + "\n" ) ; } public static void main ( String [ ] args ) { int N = 3 ; findNthTerm ( N ) ; } }
class GFG { static int c@@ o@@ u@@ n@@ t@@ N@@ u@@ m@@ s ( int l , int r ) { int cnt = 0 ; for ( int i = l ; i <= r ; i ++ ) { int lastDigit = ( i % 10 ) ; if ( ( lastDigit % 10 ) == 2 || ( lastDigit % 10 ) == 3 || ( lastDigit % 10 ) == 9 ) { cnt ++ ; } } return cnt ; } public static void main ( String [ ] args ) { int l = 11 , r = 33 ; System . out . print ( c@@ o@@ u@@ n@@ t@@ N@@ u@@ m@@ s ( l , r ) ) ; } }
public class GFG { static int I@@ N@@ T@@ _@@ SIZE = 32 ; static int R@@ i@@ g@@ h@@ t@@ _@@ m@@ o@@ s@@ t@@ _@@ s@@ e@@ t@@ bit ( int num ) { int pos = 1 ; for ( int i = 0 ; i < I@@ N@@ T@@ _@@ SIZE ; i ++ ) { if ( ( num & ( 1 << i ) ) == 0 ) pos ++ ; else break ; } return pos ; } public static void main ( String [ ] args ) { int num = 18 ; int pos = R@@ i@@ g@@ h@@ t@@ _@@ m@@ o@@ s@@ t@@ _@@ s@@ e@@ t@@ bit ( num ) ; System . out . println ( pos ) ; } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ;
import java . io . * ; import java . util . * ; public class A@@ W@@ r@@ o@@ n@@ g@@ S@@ u@@ b@@ s@@ t@@ r@@ a@@ c@@ t@@ i@@ o@@ n { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n , k ; n = input . nextInt ( ) ; k = input . nextInt ( ) ; for ( int i = 0 ; i < k ; i ++ ) { if ( n % 10 == 0 ) n = n / 10 ; else n -- ; } System . out . println ( n ) ; } }
class GFG { static int rev_num = 0 ; static int b@@ a@@ s@@ e@@ _@@ pos = 1 ; static int reversDigits ( int num ) { if ( num > 0 ) { reversDigits ( num / 10 ) ; rev_num += ( num % 10 ) * b@@ a@@ s@@ e@@ _@@ pos ; b@@ a@@ s@@ e@@ _@@ pos *= 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( reversDigits ( num ) ) ; } }
import java . util . * ; import java . lang . * ; class GFG { public static int sumOfSeries ( int n ) { int sum = 0 ; for ( int x = 1 ; x <= n ; x ++ ) sum += x * x * x ; return sum ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( sumOfSeries ( n ) ) ; } }
class GFG { static int countPairs ( int arr [ ] , int n ) { int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i + 1 ; j < n ; j ++ ) if ( arr [ i ] == arr [ j ] ) ans ++ ; return ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 1 , 2 } ; int n = arr . length ; System . out . println ( countPairs ( arr , n ) ) ; } }
import java . util . Scanner ;  public class F@@ a@@ s@@ h@@ i@@ o@@ n@@ a@@ b@@ l@@ e@@ L@@ e@@ e { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int test = sc . nextInt ( ) ; for ( int i = 0 ; i < test ; i ++ ) { long side = sc . nextInt ( ) ; if ( side % 4 == 0 ) { System . out . println ( "YES" ) ; } else { System . out . println ( "NO" ) ; } } } }
import java . io . * ; import java . util . * ;  public class W@@ o@@ r@@ m@@ E@@ v@@ o@@ l@@ u@@ t@@ i@@ o@@ n@@ _@@ E@@ d@@ u@@ 31 { public static void main ( String [ ] args ) throws IOException { FastReader fr = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new OutputStreamWriter ( System . out ) ) ; int n = fr . nextInt ( ) ; int [ ] arr = new int [ n ] ;  for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = fr . nextInt ( ) ; } 
class GFG { static int printPermutation ( int n ) { if ( n % 2 != 0 ) { System . out . println ( "-1" ) ; } else for ( int i = 1 ; i <= n / 2 ; i ++ ) { System . out . print ( 2 * i + " " + ( ( 2 * i ) - 1 ) + " " ) ; } return n ; } public static void main ( String [ ] args ) { int n = 4 ; printPermutation ( n ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long a = sc . nextLong ( ) ; long b = sc . nextLong ( ) ; System . out . println ( "YES" ) ; for ( long i = a ; i < b ; i += 2 ) { System . out . println ( Long . toString ( i ) + " " + Long . toString ( i + 1 ) ) ; }  } }
import java . util . Scanner ;  public class A {  public static int MOD = 1_000_000_007 ; public static void main ( String [ ] args ) {  Scanner scanner = new Scanner ( System . in ) ; long l = scanner . nextLong ( ) ; long r = scanner . nextLong ( ) ; long L = I@@ n@@ t@@ e@@ r@@ val ( l - 1 ) ; long R = I@@ n@@ t@@ e@@ r@@ val ( r ) ;
class GFG { static String i@@ s@@ E@@ v@@ e@@ n@@ O@@ r@@ Odd ( int L , int R ) { int oddCount = ( R - L ) / 2 ; if ( R % 2 == 1 || L % 2 == 1 ) oddCount ++ ; if ( oddCount % 2 == 0 ) return "Even" ; else return "Odd" ; } public static void main ( String [ ] args ) { int L = 5 , R = 15 ; System . out . println ( i@@ s@@ E@@ v@@ e@@ n@@ O@@ r@@ Odd ( L , R ) ) ; } }
import java . util . Scanner ;  public class A@@ 1@@ 2@@ 14 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int N = in . nextInt ( ) ; int D = in . nextInt ( ) ; int E = 5 * in . nextInt ( ) ; int min = N ; for ( int e = 0 ; e <= N ; e += E ) { min = Math . min ( min , ( N - e ) % D ) ; } System . out . println ( min ) ; }  }
import java . io . * ; import java . util . * ;  public class r@@ a@@ n@@ j@@ an {  public static Reader cin ; public static PrintWriter cout ; public static boolean [ ] visited ; public static final long b@@ i@@ l = ( long ) 1e9 + 7 ; public static void main ( String [ ] arg ) throws IOException {
import java . util . * ; import java . io . * ; public class Main { static int [ ] A ; static int [ ] B ; static int [ ] C ; static int n ; static int ans ; public static void main ( String [ ] args ) throws IOException {
import java . util . Arrays ; import java . util . Collections ; import java . util . HashSet ; import java . util . LinkedList ; import java . util . Queue ; import java . util . Scanner ; import java . util . Set ;  public class N@@ e@@ w@@ M@@ a@@ i@@ n@@ 2 {  public static void main ( String [ ] args ) {
import java . util . * ; class solution { static long getNthTerm ( long N ) { return 4 * ( long ) Math . pow ( N , 2 ) - 3 * N + 2 ; } public static void main ( String arr [ ] ) { long N = 10 ; System . out . println ( getNthTerm ( N ) ) ; } }
import java . util . * ; import java . io . * ;  public class A@@ 1@@ 1@@ 9@@ 5 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ;
class GFG { static int sum ( int h ) { return ( int ) Math . pow ( 2 , h - 1 ) ; } public static void main ( String [ ] args ) { int L = 3 ; System . out . println ( sum ( L ) ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . * ; public class Main { public static void main ( String [ ] args ) { FastScanner sc = new FastScanner ( ) ;
import java . util . * ; class GFG { public static int c@@ o@@ u@@ n@@ t@@ D@@ i@@ s@@ t@@ i@@ n@@ ct ( int arr [ ] , int n ) { HashSet < Integer > h@@ s = new HashSet < Integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { h@@ s . add ( arr [ i ] ) ; } return h@@ s . size ( ) ; } public static void main ( String [ ] args ) { int arr [ ] = new int [ ] { 6 , 10 , 5 , 4 , 9 , 120 , 4 , 6 , 10 } ; System . out . println ( c@@ o@@ u@@ n@@ t@@ D@@ i@@ s@@ t@@ i@@ n@@ ct ( arr , arr . length ) ) ; } }
import java . io . * ; class GFG { static void C@@ o@@ u@@ n@@ t@@ S@@ e@@ g@@ m@@ e@@ n@@ t@@ s ( int N , int a [ ] ) { int frequency [ ] = new int [ 10001 ] ; int c = 0 ; for ( int i = 0 ; i < N ; i ++ ) { frequency [ a [ i ] ] ++ ; } for ( int i = 0 ; i <= 10000 ; i ++ ) c = Math . max ( c , frequency [ i ] ) ; System . out . println ( c ) ; } public static void main ( String [ ] args ) { int N = 6 ; int [ ] a = { 1 , 3 , 4 , 3 , 2 , 3 } ; C@@ o@@ u@@ n@@ t@@ S@@ e@@ g@@ m@@ e@@ n@@ t@@ s ( N , a ) ; } }
 import java . util . * ; import java . lang . * ;
import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;
import java . util . * ; import java . util . Collections ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( 1 + " " ) ; System . out . println ( ) ; } } }
import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {
public class D@@ i@@ a@@ g@@ o@@ n@@ a@@ l@@ s { static int n@@ u@@ m@@ b@@ e@@ r@@ O@@ f@@ D@@ i@@ a@@ g@@ o@@ n@@ a@@ l@@ s ( int n ) { return n * ( n - 3 ) / 2 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . print ( n + " s@@ i@@ d@@ e@@ d c@@ o@@ n@@ v@@ e@@ x p@@ o@@ l@@ y@@ g@@ o@@ n h@@ a@@ v@@ e " ) ; System . out . println ( n@@ u@@ m@@ b@@ e@@ r@@ O@@ f@@ D@@ i@@ a@@ g@@ o@@ n@@ a@@ l@@ s ( n ) + " d@@ i@@ a@@ g@@ o@@ n@@ a@@ l@@ s@@ " ) ; } }
import java . util . * ;  public class C@@ h@@ at {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ; class GFG { static boolean D@@ i@@ v@@ _@@ b@@ y@@ _@@ 8 ( int n ) { return ( ( ( n > > 3 ) << 3 ) == n ) ; } public static void main ( String [ ] args ) { int n = 16 ; if ( D@@ i@@ v@@ _@@ b@@ y@@ _@@ 8 ( n ) ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int nthTerm ( int n ) { return 4 * ( int ) Math . pow ( n , 2 ) - 7 * n + 3 ; } public static void main ( String args [ ] ) { int N = 4 ; System . out . print ( nthTerm ( N ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int check ( int n ) { int sum = 0 ; while ( n != 0 ) { sum += n % 10 ; n = n / 10 ; } if ( sum % 7 == 0 ) return 1 ; else return 0 ; } public static void main ( String args [ ] ) { int n = 25 ; String s = ( check ( n ) == 1 ) ? "YES" : "NO" ; System . out . println ( s ) ; } }
import java . util . * ; import java . io . * ;  public class t@@ a@@ s@@ k@@ B { static char b@@ o@@ a@@ r@@ d [ ] [ ] ; public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; b@@ o@@ a@@ r@@ d = new char [ 6 ] [ 6 ] ; for ( int i = 1 ; i <= 4 ; i ++ ) { String str = br . readLine ( ) ; for ( int j = 1 ; j <= 4 ; j ++ ) { b@@ o@@ a@@ r@@ d [ i ] [ j ] = str . charAt ( j - 1 ) ; } }
public class GFG { static int E@@ q@@ u@@ a@@ l@@ Numbers ( int a [ ] , int n ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += a [ i ] ; if ( sum % n != 0 ) return n - 1 ; return n ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 4 , 1 } ; int n = a . length ; System . out . println ( E@@ q@@ u@@ a@@ l@@ Numbers ( a , n ) ) ; } }
import java . util . Scanner ; public class Main { public static void main ( String [ ] args ) { Scanner puttingvaluesinside = new Scanner ( System . in ) ; puttingvaluesinside . nextInt ( ) ; int i = puttingvaluesinside . nextInt ( ) ; puttingvaluesinside . nextLine ( ) ; int max = 0 , w@@ i@@ n@@ s = 0 ; for ( ; i > 0 ; i -- ) { char [ ] c = puttingvaluesinside . nextLine ( ) . toCharArray ( ) ; boolean flag = false ;
class GfG { static int findAnswer ( int X , int N ) { return ( N - 1 ) * 9 + X ; } public static void main ( String [ ] args ) { int X = 7 , N = 43 ; System . out . println ( findAnswer ( X , N ) ) ; } }
import java . util . * ; import java . io . * ; public class Main { static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; if ( n > 36 ) w . println ( - 1 ) ; else { for ( int i = 1 ; i <= n / 2 ; i ++ ) w . print ( "@@ 8@@ " ) ; if ( n % 2 == 1 ) w . print ( "@@ 4" ) ; } w . close ( ) ; } }
import java . io . * ; class GFG { static int findSum ( int n , int a , int b ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) if ( i % a == 0 || i % b == 0 ) sum += i ; return sum ; } public static void main ( String [ ] args ) { int n = 10 , a = 3 , b = 5 ; System . out . println ( findSum ( n , a , b ) ) ; } }
import java . io . * ; class GFG { static int findSum ( int N , int K ) { int ans = 0 ; int y = N / K ; int x = N % K ; ans = ( K * ( K - 1 ) / 2 ) * y + ( x * ( x + 1 ) ) / 2 ; return ans ; } static public void main ( String [ ] args ) { int N = 10 , K = 2 ; System . out . println ( findSum ( N , K ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static void printPattern ( int N ) { for ( int i = 1 ; i <= N ; i ++ ) { System . out . print ( " " + ( ( i % 2 == 0 ) ? ( i - 1 ) : ( i + 1 ) ) ) ; } } public static void main ( String args [ ] ) { int N = 10 ; printPattern ( N ) ; } }
import java . util . * ;  public class watermelon { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; if ( w > 0 && w <= 100 && w % 2 == 0 && w > 2 ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } }
import java . util . * ;  public class A@@ 8@@ 6@@ 9 { public static void main ( String [ ] args ) { System . out . println ( "@@ K@@ a@@ r@@ e@@ n@@ " ) ; } }
import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int [ ] ar = new int [ n ] ; int min = Integer . MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { ar [ i ] = sc . nextInt ( ) ; if ( k % ar [ i ] == 0 ) { min = Math . min ( min , k / ar [ i ] ) ; } } System . out . println ( min ) ;
import java . util . * ; class GFG { public static int nthTerm ( int n ) { return ( n * n ) + ( n * n * n ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . print ( nthTerm ( n ) ) ; } }
import java . util . * ; class GFG { static int g@@ e@@ t@@ Min ( int arr [ ] , int n ) { int m@@ i@@ n@@ V@@ al = Arrays . stream ( arr ) . min ( ) . getAsInt ( ) ; return m@@ i@@ n@@ V@@ al ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 3 , 1 , 6 , 9 } ; int n = arr . length ; System . out . println ( g@@ e@@ t@@ Min ( arr , n ) ) ; } }
import java . util . * ; class gfg { public static double calculateSum ( double n ) { return 2 * ( Math . pow ( n , 6 ) + 15 * Math . pow ( n , 4 ) + 15 * Math . pow ( n , 2 ) + 1 ) ; } public static void main ( String [ ] args ) { double n = 1@@ .@@ 4@@ 1@@ 4@@ 2 ; System . out . println ( ( int ) Math . ceil ( calculateSum ( n ) ) ) ; } }
import java . io . * ; class GFG { static void d@@ e@@ c@@ T@@ o@@ O@@ c@@ t@@ al ( int n ) { int [ ] o@@ c@@ t@@ a@@ l@@ Num = new int [ 100 ] ; int i = 0 ; while ( n != 0 ) { o@@ c@@ t@@ a@@ l@@ Num [ i ] = n % 8 ; n = n / 8 ; i ++ ; } for ( int j = i - 1 ; j >= 0 ; j -- ) System . out . print ( o@@ c@@ t@@ a@@ l@@ Num [ j ] ) ; } public static void main ( String [ ] args ) { int n = 33 ; d@@ e@@ c@@ T@@ o@@ O@@ c@@ t@@ al ( n ) ; } }
class GFG { static void find ( int a [ ] , int n ) { int count_odd = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 != 0 ) { count_odd += 1 ; } } int result = ( int ) ( Math . pow ( 2 , n ) - 1 ) ; result -= ( Math . pow ( 2 , count_odd ) - 1 ) ; System . out . println ( result ) ; } public static void main ( String [ ] args ) { int a [ ] = { 2 , 2 , 3 } ; int n = a . length ; find ( a , n ) ; } }
import java . util . * ; import java . io . PrintWriter ;  public class r1 { static PrintWriter o = new PrintWriter ( System . out ) ; public static void main ( String [ ] args ) { Scanner b@@ h = new Scanner ( System . in ) ; String str1 = b@@ h . next ( ) ; String str2 = b@@ h . next ( ) ; String day [ ] = { "@@ m@@ o@@ n@@ d@@ a@@ y@@ " , "@@ t@@ u@@ e@@ s@@ d@@ a@@ y@@ " , "@@ w@@ e@@ d@@ n@@ e@@ s@@ d@@ a@@ y@@ " , "@@ t@@ h@@ u@@ r@@ s@@ d@@ a@@ y@@ " , "@@ f@@ r@@ i@@ d@@ a@@ y@@ " , "@@ s@@ a@@ t@@ u@@ r@@ d@@ a@@ y@@ " , "@@ s@@ u@@ n@@ d@@ a@@ y@@ " } ;
import java . io . * ; class GFG { static float geometricMean ( int [ ] arr , int n ) { float sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum = sum + ( float ) Math . log ( arr [ i ] ) ; sum = sum / n ; return ( float ) Math . exp ( sum ) ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } ; int n = arr . length ; System . out . println ( geometricMean ( arr , n ) ) ; } }
import java . io . * ; class GFG { static int f@@ i@@ n@@ d@@ V@@ a@@ l@@ u@@ e@@ A@@ t@@ X ( int n ) { return ( n * n * n ) + n ; } public static void main ( String [ ] args ) { System . out . println ( f@@ i@@ n@@ d@@ V@@ a@@ l@@ u@@ e@@ A@@ t@@ X ( 10 ) ) ; System . out . println ( f@@ i@@ n@@ d@@ V@@ a@@ l@@ u@@ e@@ A@@ t@@ X ( 2 ) ) ; } }
class C@@ L@@ G { static float h@@ e@@ x@@ a@@ g@@ o@@ n@@ side ( float a ) { if ( a < 0 ) return - 1 ; float x = a / 3 ; return x ; } public static void main ( String [ ] args ) { float a = 6 ; System . out . println ( h@@ e@@ x@@ a@@ g@@ o@@ n@@ side ( a ) ) ; } }
class GFG { static double e@@ x@@ p@@ e@@ c@@ t ( double m , double n ) { double ans = 0.0 , i ; for ( i = m ; i > 0 ; i -- ) ans += ( Math . pow ( i / m , n ) - Math . pow ( ( i - 1 ) / m , n ) ) * i ; return ans ; } public static void main ( String [ ] args ) { double m = 6 , n = 3 ; System . out . println ( String . format ( "%.5f" , e@@ x@@ p@@ e@@ c@@ t ( m , n ) ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
 import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; char p = 'a' ; int c = 1 ; StringBuilder h = new StringBuilder ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( c > 2 ) { if ( p == 'a' ) p = 'b' ; else p = 'a' ; c = 1 ; } h . append ( p ) ;
import java . util . * ; class solution { static boolean E@@ q@@ u@@ a@@ l@@ Number ( int A , int B ) { if ( ( A ^ B ) != 0 ) return true ; else return false ; } public static void main ( String args [ ] ) { int A = 5 , B = 6 ; if ( E@@ q@@ u@@ a@@ l@@ Number ( A , B ) == false ) System . out . println ( 1 ) ; else System . out . println ( 0 ) ; } }
import java . util . * ; public class W@@ i@@ z@@ r@@ d@@ s@@ _@@ Duel { public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ;  public class i@@ c@@ p@@ c { public static void main ( String [ ] args ) throws IOException { Reader in = new Reader ( ) ;
class GFG { static boolean isPossible ( int x , int y , int k ) { int minMoves = Math . abs ( x ) + Math . abs ( y ) ; if ( k >= minMoves && ( k - minMoves ) % 2 == 0 ) return true ; return false ; } public static void main ( String [ ] args ) { int x = 5 , y = 8 , k = 20 ; if ( isPossible ( x , y , k ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . io . * ; import java . util . * ; class GFG { static int f@@ i@@ n@@ d@@ O@@ p@@ t@@ i@@ m@@ a@@ l@@ Solution ( int [ ] a , int N ) { Arrays . sort ( a ) ; int p@@ o@@ i@@ n@@ t@@ s = 0 ; for ( int i = 0 ; i < N ; i ++ ) { p@@ o@@ i@@ n@@ t@@ s += a [ i ] * i ; } return p@@ o@@ i@@ n@@ t@@ s ; } public static void main ( String args [ ] ) { int [ ] a = { 1 , 4 , 2 , 3 , 9 } ; int N = a . length ; System . out . println ( f@@ i@@ n@@ d@@ O@@ p@@ t@@ i@@ m@@ a@@ l@@ Solution ( a , N ) ) ; } }
import java . util . * ; public class e@@ a@@ s@@ y { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int c = 0 , d = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc . nextInt ( ) ; if ( x == 0 ) c ++ ; else d ++ ; } if ( d == 0 ) System . out . println ( "EASY" ) ; else System . out . println ( "HARD" ) ; } }
class GFG { static void findNumbers ( int n ) { String ans = "" ; for ( int i = 0 ; i < n - 1 ; i ++ ) ans += '7' ; String even = ans + '@@ 6@@ ' ; String odd = ans + '7' ; System . out . println ( "Even : " + even ) ; System . out . println ( "Odd : " + odd ) ; } public static void main ( String args [ ] ) { int n = 4 ; findNumbers ( n ) ; } }
import javax . print . DocFlavor ; import javax . swing . * ; import java . awt . image . BandedSampleModel ; import java . util . * ;  public class Example { static long [ ] [ ] dp ;
class GFG { final static long mod = 1000000007 ; static long fact ( long n ) { if ( n == 1 ) return 1 ; else return ( fact ( n - 1 ) * n ) % mod ; } static long countPairs ( int m , int n ) { long ans = fact ( 2 * m + n - 1 ) / ( fact ( n - 1 ) * fact ( 2 * m ) ) ; return ( ans % mod ) ; } public static void main ( String [ ] args ) { int n = 5 , m = 3 ; System . out . println ( countPairs ( m , n ) ) ; } }
class GFG { static void o@@ t@@ h@@ e@@ r@@ E@@ n@@ d@@ Point ( int x1 , int y1 , int m1 , int m2 ) { float x2 = ( float ) ( 2 * m1 - x1 ) ; float y2 = ( float ) ( 2 * m2 - y1 ) ; System . out . println ( "@@ x2 = " + x2 + ", " + "@@ y2 = " + y2 ) ; } public static void main ( String args [ ] ) { int x1 = - 4 , y1 = - 1 , m1 = 3 , m2 = 5 ; o@@ t@@ h@@ e@@ r@@ E@@ n@@ d@@ Point ( x1 , y1 , m1 , m2 ) ; } }
import java . util . Scanner ;  public class B@@ i@@ t { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int result = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String str = s . next ( ) ; if ( str . equals ( "@@ X@@ +@@ +@@ " ) || str . equals ( "@@ +@@ +@@ X@@ " ) ) { result = result + 1 ; } else { result = result - 1 ; } } System . out . println ( result ) ; } }
import java . util . Scanner ;  public class G@@ e@@ o@@ r@@ g@@ e@@ _@@ a@@ n@@ d@@ _@@ A@@ c@@ c@@ o@@ m@@ m@@ o@@ d@@ a@@ t@@ i@@ o@@ n {  static Scanner sc = new Scanner ( System . in ) ; public static void main ( String [ ] args ) { int number = sc . nextInt ( ) ; int count = 0 ; while ( number > 0 ) { int i@@ n@@ t@@ o = sc . nextInt ( ) ; int max = sc . nextInt ( ) ; if ( ( max - i@@ n@@ t@@ o ) >= 2 ) { count ++ ; } number -- ; } System . out . println ( count ) ; } }
class GFG { static int x@@ o@@ r@@ O@@ f@@ Sum ( int a [ ] , int n ) { int answer = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) answer ^= ( a [ i ] + a [ j ] ) ; } return answer ; } public static void main ( String [ ] args ) { int n = 3 ; int A [ ] = { 1 , 2 , 3 } ; System . out . print ( x@@ o@@ r@@ O@@ f@@ Sum ( A , n ) ) ; } }
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class c@@ 7@@ 1@@ 0@@ b {
import java . util . Scanner ; public class A@@ c@@ m@@ 2@@ c@@ h@@ a@@ l@@ l@@ e@@ n@@ g@@ e@@ 3 { public static void main ( String [ ] args ) {
import java . util . * ; class GFG { static float g@@ e@@ t@@ P@@ e@@ r@@ c@@ e@@ n@@ t@@ i@@ l@@ e ( int rank , int s@@ t@@ u@@ d@@ e@@ n@@ t@@ s ) { float result = ( float ) ( s@@ t@@ u@@ d@@ e@@ n@@ t@@ s - rank ) / s@@ t@@ u@@ d@@ e@@ n@@ t@@ s * 100 ; return result ; } public static void main ( String [ ] args ) { int y@@ o@@ u@@ r@@ _@@ rank = 8@@ 0@@ 5 ; int t@@ o@@ t@@ a@@ l@@ _@@ s@@ t@@ u@@ d@@ e@@ n@@ t@@ s = 9@@ 7@@ 4@@ 81 ; System . out . print ( g@@ e@@ t@@ P@@ e@@ r@@ c@@ e@@ n@@ t@@ i@@ l@@ e ( y@@ o@@ u@@ r@@ _@@ rank , t@@ o@@ t@@ a@@ l@@ _@@ s@@ t@@ u@@ d@@ e@@ n@@ t@@ s ) ) ; } }
import java . util . * ; class GFG { static int calculateSum ( int n ) { if ( n % 2 == 1 ) return ( n + 1 ) / 2 ; return - n / 2 ; } public static void main ( String ar [ ] ) { int n = 8 ; System . out . println ( calculateSum ( n ) ) ; } }
class GFG { static boolean i@@ s@@ R@@ e@@ c@@ t@@ angle ( int a , int b , int c , int d ) { if ( ( a ^ b ^ c ^ d ) != 0 ) return false ; else return true ; } public static void main ( String [ ] args ) { int a , b , c , d ; a = 3 ; b = 2 ; c = 3 ; d = 2 ; if ( i@@ s@@ R@@ e@@ c@@ t@@ angle ( a , b , c , d ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . util . * ;  public class CF102 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . next ( ) ; int length = s . length ( ) ; int index = s . lastIndexOf ( '1' ) ; if ( length == 1 ) { System . out . println ( 0 ) ; return ; } if ( index != ( 0 ) ) { long ans = ( length - 1 ) / 2 + 1 ;
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . io . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;
import java . util . * ; import java . lang . * ; class GFG { public static void main ( String args [ ] ) { float x1 = 1 , x2 = 3 , x3 = 6 ; float y1 = 2 , y2 = - 4 , y3 = - 7 ; float x = ( x1 + x2 + x3 ) / 3 ; float y = ( y1 + y2 + y3 ) / 3 ; System . out . println ( "@@ C@@ e@@ n@@ t@@ r@@ o@@ i@@ d = " + "(" + x + ", " + y + ")" ) ; } }
import java . util . HashSet ; class Solution { public int n@@ u@@ m@@ U@@ n@@ i@@ q@@ u@@ e@@ E@@ m@@ a@@ i@@ l@@ s ( String [ ] e@@ m@@ a@@ i@@ l@@ s ) { HashSet < String > e@@ m@@ a@@ i@@ l@@ Set = new HashSet < > ( ) ; for ( String e@@ m@@ a@@ i@@ l : e@@ m@@ a@@ i@@ l@@ s ) { String f@@ i@@ r@@ s@@ t@@ S@@ p@@ l@@ i@@ t [ ] = e@@ m@@ a@@ i@@ l . split ( "@@ @@@ " ) ; String s@@ e@@ c@@ o@@ n@@ d@@ S@@ p@@ l@@ i@@ t [ ] = f@@ i@@ r@@ s@@ t@@ S@@ p@@ l@@ i@@ t [ 0 ] . replaceAll ( "." , "" ) . split ( "@@ [@@ +@@ ]@@ " ) ; e@@ m@@ a@@ i@@ l@@ Set . add ( s@@ e@@ c@@ o@@ n@@ d@@ S@@ p@@ l@@ i@@ t [ 0 ] + f@@ i@@ r@@ s@@ t@@ S@@ p@@ l@@ i@@ t [ 1 ] ) ; } return e@@ m@@ a@@ i@@ l@@ Set . size ( ) ; } }
import java . io . * ; class GFG { static int c@@ o@@ u@@ n@@ t@@ M@@ a@@ x@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( int left , int right ) { while ( ( left | ( left + 1 ) ) <= right ) left |= left + 1 ; return left ; } public static void main ( String [ ] args ) { int l = 1 ; int r = 5 ; System . out . println ( c@@ o@@ u@@ n@@ t@@ M@@ a@@ x@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( l , r ) ) ; l = 1 ; r = 10 ; System . out . println ( c@@ o@@ u@@ n@@ t@@ M@@ a@@ x@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( l , r ) ) ; } }
import java . util . Scanner ;  public class E@@ i@@ e@@ ve {  public static void main ( String args [ ] ) {  Scanner input = new Scanner ( System . in ) ;  long k = input . nextLong ( ) , p = input . nextLong ( ) ; long j = 0 , i1 = 0 , sum = 0 , c = 1 , j1 = 0 ;  for ( int i = 1 ; i <= k ; i ++ ) { j = i ; j1 = i ; while ( j1 > 0 ) {  j = j * 10 + j1 % 10 ;
  import java . util . Scanner ;  public class J@@ O@@ E@@ i@@ s@@ O@@ n@@ T@@ V { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n == 1 ) { System . out . println ( "1" ) ; return ; } double d = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { d = d + ( float ) 1 / i ; } System . out . println ( d ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; System . out . println ( n + 1 ) ; } }
 import java . math . BigInteger ; import java . util . * ;   public class Main { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int b@@ o@@ y@@ s , g@@ i@@ r@@ l@@ s ; b@@ o@@ y@@ s = input . nextInt ( ) ; g@@ i@@ r@@ l@@ s = input . nextInt ( ) ; int n = input . nextInt ( ) ; int count = 0 ; int r = n ; for ( int b = 0 ; b <= n ; b ++ , r -- ) { if ( b <= b@@ o@@ y@@ s && r <= g@@ i@@ r@@ l@@ s ) count ++ ; } System . out . println ( count ) ; } } 
import java . io . * ; public class GFG { static int findSum ( int n ) { n -- ; int sum = 0 ; sum += ( n * ( n + 1 ) ) / 2 ; sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; return sum ; } static public void main ( String [ ] args ) { int n = 3 ; System . out . println ( findSum ( n ) ) ; } }
public class F@@ I@@ N@@ D@@ S@@ U@@ M { static long mod = 1000000007 ; public static long findSum ( long n ) { return ( ( n % mod ) * ( n % mod ) ) % mod ; } public static void main ( String [ ] args ) { long n = 2@@ 2@@ 9@@ 1@@ 3@@ 7@@ 9@@ 9@@ 9 ; System . out . print ( findSum ( n ) ) ; } }
import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;
import java . util . * ; class GFG { static int c@@ o@@ u@@ n@@ t@@ U@@ n@@ i@@ q@@ u@@ e ( int arr [ ] , int n ) { HashSet < Integer > s = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { s . add ( arr [ i ] ) ; } int count = ( int ) Math . pow ( s . size ( ) , 2 ) ; return count ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 2 , 4 , 2 , 5 , 3 , 5 } ; int n = arr . length ; System . out . println ( c@@ o@@ u@@ n@@ t@@ U@@ n@@ i@@ q@@ u@@ e ( arr , n ) ) ; } }
import java . util . Arrays ; import java . util . Collections ; class GFG { public static int kthgroupsum ( int k ) { return k * k * k ; } public static void main ( String [ ] args ) { int k = 3 ; System . out . print ( kthgroupsum ( k ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . io . * ; class GFG { public int nthTerm ( int N ) { return ( N * N * N ) + ( N * N ) + N ; } public static void main ( String [ ] args ) { int N = 3 ; GFG a = new GFG ( ) ; System . out . println ( a . nthTerm ( N ) ) ; } }
import java . util . * ; public class Letter { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String s = sc . nextLine ( ) ; HashSet < Character > h@@ s = new HashSet < > ( ) ; for ( int i = 0 ; i < s . length ( ) ; i ++ ) { if ( s . charAt ( i ) >= 'a' && s . charAt ( i ) <= 'z' ) h@@ s . add ( s . charAt ( i ) ) ; } System . out . println ( h@@ s . size ( ) ) ; } }
import java . util . * ; class solution { static long sumAP ( long n , long d ) { n /= d ; return ( n ) * ( 1 + n ) * d / 2 ; } static long sumMultiples ( long n ) { n -- ; return sumAP ( n , 3 ) + sumAP ( n , 7 ) - sumAP ( n , 21 ) ; } public static void main ( String args [ ] ) { long n = 24 ; System . out . println ( sumMultiples ( n ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; in . nextInt ( ) ; int l = in . nextInt ( ) , r = in . nextInt ( ) , n = in . nextInt ( ) , out = 0 ; for ( ; n > 0 ; n -- ) { int x = in . nextInt ( ) ; if ( ( l < x ) && ( x < r ) ) { out ++ ; } } System . out . println ( out ) ; in . close ( ) ; } }
import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int c = 0 ; int x = sc . nextInt ( ) ; int y = sc . nextInt ( ) ; int m = ( int ) Math . max ( x , y ) ; int n = ( int ) Math . min ( x , y ) ; int d = 2 * ( n ) ; int m@@ d = 0 ; if ( m - n != 0 ) m@@ d = ( m - n ) * 2 - 1 ; System . out . println ( d + m@@ d ) ; } } }
import java . util . Scanner ;  public class V@@ l@@ a@@ d@@ i@@ k@@ F@@ l@@ i@@ g@@ h@@ t@@ s { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , a = in . nextInt ( ) - 1 , b = in . nextInt ( ) - 1 ; String s = in . next ( ) ;  in . close ( ) ; System . out . println ( s . charAt ( a ) == s . charAt ( b ) ? 0 : 1 ) ; } }
import java . io . * ; class GFG { static float f@@ i@@ n@@ d@@ V@@ o@@ l@@ u@@ m@@ e ( float l , float b , float h ) { float volume = ( l * b * h ) / 2 ; return volume ; } public static void main ( String [ ] args ) { float l = 18 , b = 12 , h = 9 ; System . out . println ( "Volume of triangular p@@ r@@ i@@ s@@ m@@ : " + f@@ i@@ n@@ d@@ V@@ o@@ l@@ u@@ m@@ e ( l , b , h ) ) ; } }
class GFG { static double Perimeter ( double s , int n ) { double perimeter = 1 ; perimeter = n * s ; return perimeter ; } public static void main ( String [ ] args ) { int n = 5 ; double s = 2@@ .@@ 5 , p@@ e@@ r@@ i ; p@@ e@@ r@@ i = Perimeter ( s , n ) ; System . out . println ( "@@ Perimeter of Regular P@@ o@@ l@@ y@@ g@@ o@@ n@@ " + " with " + n + " s@@ i@@ d@@ e@@ s of length " + s + " = " + p@@ e@@ r@@ i ) ; } }
import java . util . * ;   public class p@@ r@@ a@@ c { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; long N = s . nextLong ( ) ; long M = s . nextLong ( ) ; long K = s . nextLong ( ) ; if ( K < N ) { System . out . println ( K + 1 + " " + 1 ) ; return ; } K -= N ; M -- ; System . out . println ( N - K / M + " " + ( K / M % 2 == 0 ? K % M + 2 : M + 1 - K % M ) ) ; } }
import java . io . * ; import java . util . * ; import java . math . * ; import java . lang . * ;  
import java . math . * ; class GFG { public static boolean possible ( int n ) { if ( n > 3 ) { int sum = ( n * ( n + 1 ) ) / 2 ; if ( sum % 3 == 0 ) { return true ; } } return false ; } public static void main ( String [ ] args ) { int n = 5 ; if ( possible ( n ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
n = int ( input ( ) ) arr = list ( map ( int , input ( ) . split ( ) ) ) arr2 = s@@ o@@ r@@ t@@ e@@ d ( arr ) count = 0 a = 0f or i in range ( n ) : if arr [ i ] != arr2 [ i ] : count += 1 k = arr [ i ] arr [ i ] = arr2 [ i ] z = arr . index ( arr2 [ i ] ) arr [ z ] = k if count > 2 : a = 1 b@@ r@@ e@@ a@@ k@@ if a == 0 : print ( "YES" ) else : print ( "NO" )
class GFG { static int countNumbers ( int n ) { return n - n / 2 - n / 3 - n / 5 - n / 7 + n / 6 + n / 10 + n / 14 + n / 15 + n / 21 + n / 35 - n / 30 - n / 42 - n / 70 - n / 1@@ 0@@ 5 + n / 2@@ 10 ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( countNumbers ( n ) ) ; } }
import java . util . * ; public class A@@ b@@ c { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; int Q = in . nextInt ( ) ; for ( int i = 0 ; i < Q ; i ++ ) { long p = in . nextLong ( ) ; long half = ( n % 2 == 0 ) ? n / 2 : n / 2 + 1 ;  if ( p % 2 == 1 ) { System . out . println ( ( p + 1 ) / 2 ) ; } else { long jump = n - 1 ; jump -= p / 2 - 1 ;
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
class GFG { static long oddNumSum ( int n ) { return ( n * ( 2 * n + 1 ) * ( 24 * n * n * n - 12 * n * n - 14 * n + 7 ) ) / 15 ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( oddNumSum ( n ) ) ; } }
class GFG { static int numberOfPaths ( int m , int n ) { int [ ] dp = new int [ n ] ; dp [ 0 ] = 1 ; for ( int i = 0 ; i < m ; i ++ ) { for ( int j = 1 ; j < n ; j ++ ) { dp [ j ] += dp [ j - 1 ] ; } } return dp [ n - 1 ] ; } public static void main ( String args [ ] ) { System . out . println ( numberOfPaths ( 3 , 3 ) ) ; } }
class GFG { static int n@@ u@@ m@@ b@@ e@@ r@@ O@@ f@@ C@@ u@@ t@@ s ( int M , int N ) { int result = 0 ; result = ( M - 1 ) * ( N - 1 ) ; return result ; } public static void main ( String args [ ] ) { int M = 4 , N = 4 ; int C@@ u@@ t@@ s = n@@ u@@ m@@ b@@ e@@ r@@ O@@ f@@ C@@ u@@ t@@ s ( M , N ) ; System . out . println ( "Maximum c@@ u@@ t@@ s = " + C@@ u@@ t@@ s ) ; } }
import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String s = sc . next ( ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( n % i == 0 ) { String s1 = s . substring ( 0 , i ) ; String s2 = s . substring ( i ) ; StringBuilder stringBuilder = new StringBuilder ( s1 ) ; s = stringBuilder . reverse ( ) + s2 ;
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { public static void main ( String args [ ] ) { int N = 6 ; int Even = N / 2 ; int Odd = N - Even ; System . out . println ( Even * Odd ) ; } }
class GFG { static int addOne ( int x ) { int m = 1 ; while ( ( int ) ( x & m ) >= 1 ) { x = x ^ m ; m <<= 1 ; } x = x ^ m ; return x ; } public static void main ( String [ ] args ) { System . out . println ( addOne ( 13 ) ) ; } }
import java . util . * ; public class D@@ e@@ m@@ o { public static void main ( String [ ] args ) { int n , t ; Scanner sc = new Scanner ( System . in ) ; n = sc . nextInt ( ) ; for ( int i = 1 ; i < n ; i ++ ) { int z = i * ( i + 1 ) ; if ( n < z ) break ; t = ( int ) Math . sqrt ( 2 * n - z ) ; t = t * ( t + 1 ) ; if ( t == 2 * n - z ) { System . out . println ( "YES" ) ; return ; } } System . out . println ( "NO" ) ; } }
import java . util . Scanner ; public class N@@ i@@ n@@ e@@ t@@ e@@ e@@ n { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; String s ;
class GfG { static long i@@ s@@ p@@ o@@ w@@ e@@ r@@ o@@ f@@ 2 ( long num ) { if ( ( num & ( num - 1 ) ) == 0 ) return 1 ; return 0 ; } public static void main ( String [ ] args ) { long num = 5@@ 4@@ 9@@ 7@@ 5@@ 5@@ 8@@ 1@@ 3@@ 8@@ 8@@ 8@@ L ; System . out . println ( i@@ s@@ p@@ o@@ w@@ e@@ r@@ o@@ f@@ 2 ( num ) ) ; } }
n = int ( input ( ) ) if n == 1 : print ( 1 , 1 ) print ( 1 ) else : print ( ( n - 1 ) * 2 , 2 ) print ( 1 , 2 )
import java . util . * ; import java . io . * ; import java . lang . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ;  for ( int i = 0 ; i < t ; i ++ ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; System . out . println ( Math . max ( ( a + b ) , ( c + d ) ) ) ; } } 
class GFG { static int calculateLeaps ( int n ) { if ( n == 0 || n == 1 ) { return 1 ; } else { int l@@ e@@ a@@ p@@ s = 0 ; for ( int i = 0 ; i < n ; i ++ ) l@@ e@@ a@@ p@@ s += calculateLeaps ( i ) ; return l@@ e@@ a@@ p@@ s ; } } public static void main ( String [ ] args ) { System . out . println ( calculateLeaps ( 4 ) ) ; } }
import java . io . * ; import java . util . * ;  public class B {  public static void main ( String [ ] args ) throws FileNotFoundException { FastScanner fs = new FastScanner ( ) ; FastOutput fo = new FastOutput ( ) ; long initial_time = System . currentTimeMillis ( ) ; int testcases = fs . nextInt ( ) ; for ( int tt = 0 ; tt < testcases ; tt ++ ) {
import java . io . * ; import java . util . * ; import java . math . * ;  public class Main { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {
import java . io . * ; class GFG { static int m@@ a@@ k@@ e@@ Odd ( int n ) { if ( n % 2 != 0 ) return 1 ; int ans = 1 ; while ( n % 2 == 0 ) { n /= 2 ; ans *= 2 ; } return ans ; } public static void main ( String [ ] args ) { int n = 36 ; int res = m@@ a@@ k@@ e@@ Odd ( n ) ; System . out . println ( res ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
import java . io . * ; import java . util . * ;  public class Main { public static void main ( String [ ] args ) throws IOException {
class GFG { static int setBitNumber ( int n ) { n |= n > > 1 ; n |= n > > 2 ; n |= n > > 4 ; n |= n > > 8 ; n |= n > > 16 ; n = n + 1 ; return ( n > > 1 ) ; } public static void main ( String arg [ ] ) { int n = 273 ; System . out . print ( setBitNumber ( n ) ) ; } }
import java . util . * ; public class W@@ a@@ t@@ c@@ h@@ i@@ n@@ g@@ A@@ M@@ o@@ v@@ i@@ e { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int x = sc . nextInt ( ) ;  int sum = 0 ; int temp = 1 ;  for ( int i = 0 ; i < n ; i ++ ) { int l = sc . nextInt ( ) ; int r = sc . nextInt ( ) ;  sum = sum + ( l - temp ) % x ; sum = sum + ( r - l ) + 1 ; temp = r + 1 ; } sc . close ( ) ;  System . out . println ( sum ) ;  } }
import java . io . * ; class GFG { public static String p@@ r@@ e@@ f@@ i@@ x@@ Suffix ( String a , String b , int l ) { String p@@ r@@ e@@ f@@ i@@ x = a . substring ( 0 , l ) ; int l@@ b = b . length ( ) ; String s@@ u@@ f@@ f@@ i@@ x = b . substring ( l@@ b - l ) ; return ( p@@ r@@ e@@ f@@ i@@ x + s@@ u@@ f@@ f@@ i@@ x ) ; } public static void main ( String args [ ] ) throws IOException { String a = "@@ r@@ e@@ m@@ u@@ n@@ e@@ r@@ a@@ t@@ i@@ o@@ n@@ " , b = "@@ a@@ c@@ q@@ u@@ i@@ e@@ s@@ c@@ e@@ " ; int l = 5 ; System . out . println ( p@@ r@@ e@@ f@@ i@@ x@@ Suffix ( a , b , l ) ) ; } }
import java . util . * ; import java . io . * ;  public class C@@ J@@ 2 {  public static void main ( String [ ] args ) throws Exception {
import java . util . * ; class GFG { static long sum ( long n ) { long root = ( long ) Math . sqrt ( n ) ; long ans = 0 ; for ( int i = 1 ; i <= root ; i ++ ) ans += n / i ; ans = 2 * ans - ( root * root ) ; return ans ; } public static void main ( String [ ] args ) { long n = 35 ; System . out . println ( sum ( n ) ) ; } }
import java . io . FileInputStream ; import java . io . FileNotFoundException ; import java . io . IOException ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . List ; import java . util . Scanner ; import java . util . stream . Collectors ; public class _@@ p@@ 0@@ 0@@ 1@@ 1@@ 4@@ 8@@ A { static public void main ( final String [ ] args ) throws IOException { p@@ 0@@ 0@@ 1@@ 1@@ 4@@ 8@@ A . _main ( args ) ; }
import java . util . * ; public class P2 {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int w = sc . nextInt ( ) ; int h = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int r = 0 ; for ( int i = 0 ; i < k ; i ++ ) { r += 2 * ( h ) ; r += 2 * ( w - 2 ) ; w -= 4 ; h -= 4 ; } System . out . println ( r ) ; } }
class GFG { static int minOperations ( int N ) { double x = Math . log ( N ) / Math . log ( 2 ) ; int ans = ( int ) ( Math . ceil ( x ) ) ; return ans ; } public static void main ( String [ ] args ) { int N = 10 ; System . out . println ( minOperations ( N ) ) ; } }
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) * sc . nextInt ( ) ; while ( a -- > 0 ) { String x = sc . next ( ) ; if ( ! ( x . equals ( "B" ) | x . equals ( "@@ G@@ " ) | x . equals ( "@@ W@@ " ) ) ) { System . out . println ( "@@ #@@ C@@ o@@ l@@ o@@ r@@ " ) ; return ; } } System . out . println ( "@@ #@@ B@@ l@@ a@@ c@@ k@@ &@@ W@@ h@@ i@@ t@@ e@@ " ) ; } }
import java . util . Scanner ;  public class M@@ a@@ x@@ i@@ m@@ u@@ m@@ GCD { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int test = sc . nextInt ( ) ; for ( int i = 0 ; i < test ; i ++ ) { int num = sc . nextInt ( ) ; System . out . println ( num / 2 ) ; } } }
import java . util . Scanner ;   public class Main {  public static void main ( String [ ] args ) {
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t = scan . nextInt ( ) ; while ( t > 0 ) { int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ; t -- ; if ( n == 1 || m == 1 || ( n == 2 && m == 2 ) ) { System . out . println ( "YES" ) ; } else { System . out . println ( "NO" ) ; } } } }
import java . util . * ; import java . io . * ; import java . math . BigInteger ;  public class cp { public static void main ( String [ ] args ) throws IOException {  BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ; StringTokenizer st = new StringTokenizer ( br . readLine ( ) ) ; int n = Integer . parseInt ( st . n@@ e@@ x@@ t@@ T@@ o@@ k@@ e@@ n ( ) ) ; int v = Integer . parseInt ( st . n@@ e@@ x@@ t@@ T@@ o@@ k@@ e@@ n ( ) ) ;  int r@@ e@@ q = ( n - 1 ) ;
import java . io . * ; class GFG { static int o@@ c@@ t@@ a@@ l@@ T@@ o@@ D@@ e@@ c@@ i@@ m@@ al ( int n ) { int num = n ; int dec_value = 0 ; int base = 1 ; int temp = num ; while ( temp > 0 ) { int last_digit = temp % 10 ; temp = temp / 10 ; dec_value += last_digit * base ; base = base * 8 ; } return dec_value ; } public static void main ( String [ ] args ) { int num = 6@@ 7 ; System . out . println ( o@@ c@@ t@@ a@@ l@@ T@@ o@@ D@@ e@@ c@@ i@@ m@@ al ( num ) ) ; } }
class GFG { static int squares ( int l , int b , int a ) { return ( int ) ( Math . ceil ( l / ( double ) a ) * Math . ceil ( b / ( double ) a ) ) ; } public static void main ( String [ ] args ) { int l = 11 , b = 23 , a = 14 ; System . out . println ( squares ( l , b , a ) ) ; } }
import java . io . * ; class GFG { static int L@@ a@@ r@@ g@@ e@@ s@@ t@@ power ( int n , int p ) { int ans = 0 ; while ( n > 0 ) { n /= p ; ans += n ; } return ans ; } public static void main ( String [ ] args ) { int n = 10 ; int p = 3 ; System . out . println ( " T@@ h@@ e largest power of " + p + " t@@ h@@ at d@@ i@@ v@@ i@@ d@@ e@@ s " + n + "! is " + L@@ a@@ r@@ g@@ e@@ s@@ t@@ power ( n , p ) ) ; } }
import java . io . * ; class GFG { static float area ( float a ) { if ( a < 0 ) return - 1 ; float area = ( float ) Math . pow ( ( a * Math . sqrt ( 3 ) ) / ( Math . sqrt ( 2 ) ) , 2 ) ; return area ; } public static void main ( String [ ] args ) { float a = 5 ; System . out . println ( area ( a ) ) ; } }
import java . io . * ; class GFG { static int averageOdd ( int n ) { if ( n % 2 == 0 ) { System . out . println ( "Invalid Input" ) ; return - 1 ; } int sum = 0 , count = 0 ; while ( n >= 1 ) { count ++ ; sum += n ; n = n - 2 ; } return sum / count ; } public static void main ( String args [ ] ) { int n = 15 ; System . out . println ( averageOdd ( n ) ) ; } }
import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextInt ( ) ; long k = sc . nextInt ( ) ; if ( k == 1 ) { System . out . println ( n + 1 ) ; return ; } if ( n % k == 0 ) ++ n ; long x = n % k ; System . out . println ( n + ( k - x ) ) ; } }
class c@@ f@@ g { static float squareSide ( float a ) { if ( a < 0 ) return - 1 ; float x = ( 0@@ .@@ 4@@ 2@@ 3@@ f * a ) ; return x ; } public static void main ( String [ ] args ) { float a = 8 ; System . out . println ( squareSide ( a ) ) ; } }
import java . io . * ; class GFG { static int i@@ n@@ v@@ e@@ r@@ s@@ e@@ grayCode ( int n ) { int inv = 0 ; for ( ; n != 0 ; n = n > > 1 ) inv ^= n ; return inv ; } public static void main ( String [ ] args ) { int n = 15 ; System . out . println ( i@@ n@@ v@@ e@@ r@@ s@@ e@@ grayCode ( n ) ) ; } }
class X@@ or { static int m@@ a@@ x@@ X@@ O@@ R@@ I@@ n@@ R@@ a@@ n@@ g@@ e ( int L , int R ) { int L@@ X@@ R = L ^ R ; int m@@ s@@ b@@ P@@ o@@ s = 0 ; while ( L@@ X@@ R > 0 ) { m@@ s@@ b@@ P@@ o@@ s ++ ; L@@ X@@ R >>= 1 ; } int maxXOR = 0 ; int t@@ w@@ o = 1 ; while ( m@@ s@@ b@@ P@@ o@@ s -- > 0 ) { maxXOR += t@@ w@@ o ; t@@ w@@ o <<= 1 ; } return maxXOR ; } public static void main ( String [ ] args ) { int L = 8 ; int R = 20 ; System . out . println ( m@@ a@@ x@@ X@@ O@@ R@@ I@@ n@@ R@@ a@@ n@@ g@@ e ( L , R ) ) ; } }
import java . io . * ; class GFG { static int steps ( int N , int M ) { if ( N == 1 ) return 0 ; else if ( N == 2 ) return M ; return 2 * M + ( N - 3 ) ; } public static void main ( String [ ] args ) { int N = 4 , M = 4 ; System . out . print ( steps ( N , M ) ) ; } }
import java . io . * ; class GFG { static boolean i@@ s@@ P@@ o@@ s@@ s@@ i@@ b@@ l@@ e@@ T@@ o@@ Z@@ e@@ r@@ o ( int a [ ] , int n ) { int num = 0 ; for ( int i = 0 ; i < n ; i ++ ) num = num * 10 + a [ i ] ; return ( num % 11 == 0 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 0 , 1 , 1 , 0 } ; int n = arr . length ; if ( i@@ s@@ P@@ o@@ s@@ s@@ i@@ b@@ l@@ e@@ T@@ o@@ Z@@ e@@ r@@ o ( arr , n ) ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } }
import java . util . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ;  public class S@@ n@@ o@@ w@@ _@@ W@@ a@@ l@@ k@@ i@@ n@@ g@@ _@@ R@@ o@@ b@@ o@@ t {  public static void main ( String [ ] args ) throws NumberFormatException , IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System . in ) ) ;
static int mod ( int a , int m ) { return ( a % m + m ) % m ; }
class GFG { static int cntSquares ( int n ) { int squares = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { squares += Math . pow ( i , 2 ) ; } return squares ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . print ( cntSquares ( 4 ) ) ; } }
import java . util . * ;  public class StackBracket { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = sc . nextInt ( ) ; int [ ] ar = new int [ n ] ; for ( int j = 0 ; j < n ; j ++ ) { ar [ j ] = sc . nextInt ( ) ; } int [ ] m@@ i@@ n@@ ar = new int [ n ] ;
import java . util . * ;  public class Example { static int [ ] dp ;  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ;
import java . util . * ;  public class Main { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ;  int n = in . nextInt ( ) ; int e@@ x@@ i@@ s@@ t@@ e@@ d = 0 ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = in . nextInt ( ) ; e@@ x@@ i@@ s@@ t@@ e@@ d += x ; max = Math . max ( max , x ) ; } System . out . println ( n * max - e@@ x@@ i@@ s@@ t@@ e@@ d ) ; }  }  
import java . util . * ; class GFG { static int s@@ e@@ t@@ a@@ l@@ l@@ b@@ i@@ t@@ g@@ i@@ v@@ e@@ n@@ range ( int n , int l , int r ) { int range = ( ( ( 1 << ( l - 1 ) ) - 1 ) ^ ( ( 1 << ( r ) ) - 1 ) ) ; return ( n | range ) ; } public static void main ( String [ ] args ) { int n = 17 , l = 2 , r = 3 ; System . out . println ( s@@ e@@ t@@ a@@ l@@ l@@ b@@ i@@ t@@ g@@ i@@ v@@ e@@ n@@ range ( n , l , r ) ) ; } }
import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int tc = sc . nextInt ( ) ; while ( tc -- > 0 ) { int n = sc . nextInt ( ) ; int mid = 2 * n ; int count = n ; for ( int i = 4 * n ; i > mid && count > 0 ; i -= 2 ) { System . out . print ( i + " " ) ; count -- ; } System . out . println ( ) ; } sc . close ( ) ; }  }
import java . util . HashSet ; import java . util . Scanner ;  public class p@@ r@@ o@@ b@@ l@@ e@@ m@@ 60 {  public static void main ( String [ ] args ) {
public class GFG { static int count ( int N ) { int sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += 7 * Math . pow ( 8 , i - 1 ) ; } return sum ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( count ( N ) ) ; } }
import java . util . * ; class GFG { static int check ( int n , List < Integer > m@@ a@@ r@@ k@@ s ) { Integer x = Collections . max ( m@@ a@@ r@@ k@@ s ) ; int b@@ o@@ n@@ u@@ s = 100 - x ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( m@@ a@@ r@@ k@@ s . get ( i ) + b@@ o@@ n@@ u@@ s >= 50 ) c += 1 ; } return c ; } public static void main ( String [ ] args ) { int n = 5 ; List < Integer > m@@ a@@ r@@ k@@ s = Arrays . a@@ s@@ List ( 0 , 21 , 83 , 45 , 64 ) ; System . out . println ( check ( n , m@@ a@@ r@@ k@@ s ) ) ; } }
class GFG { static String e@@ v@@ e@@ n@@ _@@ o@@ r@@ _@@ odd ( String N ) { int len = N . length ( ) ; if ( N . charAt ( len - 1 ) == '0' || N . charAt ( len - 1 ) == '@@ 2@@ ' || N . charAt ( len - 1 ) == '4' || N . charAt ( len - 1 ) == '@@ 6@@ ' ) return ( "Even" ) ; else return ( "Odd" ) ; } public static void main ( String [ ] args ) { String N = "@@ 7@@ 3@@ 5@@ " ; System . out . print ( e@@ v@@ e@@ n@@ _@@ o@@ r@@ _@@ odd ( N ) ) ; } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {
class M@@ a@@ x@@ C@@ o@@ n@@ s@@ e@@ c@@ u@@ t@@ i@@ v@@ e@@ O@@ n@@ e@@ s { private static int m@@ a@@ x@@ C@@ o@@ n@@ s@@ e@@ c@@ u@@ t@@ i@@ v@@ e@@ O@@ n@@ e@@ s ( int x ) { int count = 0 ; while ( x != 0 ) { x = ( x & ( x << 1 ) ) ; count ++ ; } return count ; } public static void main ( String s@@ t@@ r@@ i@@ n@@ g@@ s [ ] ) { System . out . println ( m@@ a@@ x@@ C@@ o@@ n@@ s@@ e@@ c@@ u@@ t@@ i@@ v@@ e@@ O@@ n@@ e@@ s ( 14 ) ) ; System . out . println ( m@@ a@@ x@@ C@@ o@@ n@@ s@@ e@@ c@@ u@@ t@@ i@@ v@@ e@@ O@@ n@@ e@@ s ( 2@@ 22 ) ) ; } }
import java . io . BufferedReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class m@@ o@@ n@@ s@@ t@@ e@@ r {  public static void main ( String [ ] args ) {
import java . io . * ; class GFG { static int L@@ a@@ r@@ g@@ e@@ s@@ t@@ power ( int n , int p ) { int ans = 0 ; while ( n > 0 ) { n /= p ; ans += n ; } return ans ; } public static void main ( String [ ] args ) { int n = 10 ; int p = 3 ; System . out . println ( " T@@ h@@ e largest power of " + p + " t@@ h@@ at d@@ i@@ v@@ i@@ d@@ e@@ s " + n + "! is " + L@@ a@@ r@@ g@@ e@@ s@@ t@@ power ( n , p ) ) ; } }
public class GFG { static int c@@ o@@ u@@ n@@ t@@ S@@ u@@ b@@ s@@ t@@ r@@ i@@ n@@ g@@ W@@ i@@ t@@ h@@ E@@ q@@ u@@ a@@ l@@ E@@ n@@ d@@ s ( String s ) { int result = 0 ; int n = s . length ( ) ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = i ; j < n ; j ++ ) if ( s . charAt ( i ) == s . charAt ( j ) ) result ++ ; return result ; } public static void main ( String args [ ] ) { String s = "@@ a@@ b@@ c@@ a@@ b@@ " ; System . out . println ( c@@ o@@ u@@ n@@ t@@ S@@ u@@ b@@ s@@ t@@ r@@ i@@ n@@ g@@ W@@ i@@ t@@ h@@ E@@ q@@ u@@ a@@ l@@ E@@ n@@ d@@ s ( s ) ) ; } }
import java . io . * ; class GFG { static int power ( int x , int y ) { int res = 1 ; while ( y > 0 ) { if ( ( y & 1 ) == 1 ) res = res * x ; y = y > > 1 ; x = x * x ; } return res ; } public static void main ( String [ ] args ) { int x = 3 ; int y = 5 ; System . out . println ( "Power is " + power ( x , y ) ) ; } }
import java . io . * ; import java . util . * ; import java . math . * ;   public class Main { public static final Long mod = Long . valueOf ( 998244353 ) ; public static final int N = 2@@ 0@@ 0@@ 0@@ 20 ; public static Long [ ] ch = new Long [ N ] ; public static int [ ] d@@ e@@ g = new int [ N ] ; public static void main ( String args [ ] ) { Scanner in ; PrintStream out ;
class GFG { static int N = 10000 ; static int MOD = 1000000007 ; static int [ ] F = new int [ N ] ; static void p@@ r@@ e@@ compute ( ) { F [ 1 ] = 2 ; F [ 2 ] = 3 ; F [ 3 ] = 4 ; for ( int i = 4 ; i < N ; i ++ ) F [ i ] = ( F [ i - 1 ] + F [ i - 2 ] ) % MOD ; } public static void main ( String [ ] args ) { int n = 8 ; p@@ r@@ e@@ compute ( ) ; System . out . println ( F [ n ] ) ; } }
import java . util . * ;  public class A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int r = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { int v = sc . nextInt ( ) ; if ( v > r + 1 ) { System . out . println ( i + 1 ) ; return ; } r = Math . max ( v , r ) ; } System . out . println ( - 1 ) ; sc . close ( ) ; } }
import java . util . * ; public class a { public static void main ( String [ ] a@@ r@@ g@@ r@@ s ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int k = in . nextInt ( ) ; int t = in . nextInt ( ) ; int a = ( n * k * t ) / 100 ; for ( int i = 0 ; i < n ; i ++ ) { int u@@ se = Math . min ( k , a ) ; System . out . printf ( "%d " , u@@ se ) ; a -= u@@ se ; } System . out . println ( ) ; } }
class Test { static void p@@ r@@ i@@ n@@ t@@ F@@ i@@ b@@ o@@ n@@ a@@ c@@ c@@ i@@ Numbers ( int n ) { int f1 = 0 , f2 = 1 , i ; if ( n < 1 ) return ; for ( i = 1 ; i <= n ; i ++ ) { System . out . print ( f2 + " " ) ; int next = f1 + f2 ; f1 = f2 ; f2 = next ; } } public static void main ( String [ ] args ) { p@@ r@@ i@@ n@@ t@@ F@@ i@@ b@@ o@@ n@@ a@@ c@@ c@@ i@@ Numbers ( 7 ) ; } }
import java . io . * ; import java . util . * ; public class Main {  public static void main ( String [ ] args ) { InputReader sc = new InputReader ( System . in ) ; PrintWriter pw = new PrintWriter ( System . out ) ; Random gen = new Random ( ) ; int test = 1 ;
import java . io . * ; class GFG { static int f@@ i@@ n@@ d@@ _@@ sum ( int n , int k ) { int t@@ o@@ t@@ a@@ l@@ _@@ sum = ( n * ( n + 1 ) ) / 2 ; int power = k ; while ( power <= n ) { t@@ o@@ t@@ a@@ l@@ _@@ sum -= power ; power *= k ; } return t@@ o@@ t@@ a@@ l@@ _@@ sum ; } public static void main ( String [ ] args ) { int n = 11 , k = 2 ; System . out . println ( f@@ i@@ n@@ d@@ _@@ sum ( n , k ) ) ; } }
class GFG { static int m@@ a@@ x@@ L@@ C@@ M ( int n ) { return ( n * ( n - 1 ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( m@@ a@@ x@@ L@@ C@@ M ( n ) ) ; } }
import java . util . * ;  public class password {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . StringTokenizer ;
import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . BigInteger ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;
class GFG { static int b@@ a@@ n@@ k@@ N@@ o@@ t@@ e@@ s ( int A , int B , int S , int N ) { int numerator = S - ( B * N ) ; int denominator = A - B ; if ( numerator % denominator == 0 ) return ( numerator / denominator ) ; return - 1 ; } public static void main ( String [ ] args ) { int A = 1 , B = 2 , S = 7 , N = 5 ; System . out . print ( b@@ a@@ n@@ k@@ N@@ o@@ t@@ e@@ s ( A , B , S , N ) ) ; } }
import java . io . * ; import java . util . StringTokenizer ;  public class Main { public void solve ( ) { int a [ ] = new int [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { a [ i ] = ni ( ) ; } long l = ni ( ) ;  long total = ( l + 1 ) * ( l + 2 ) * ( l + 3 ) / 6 ;
import java . util . * ; public class F@@ i@@ n@@ d@@ i@@ n@@ g@@ S@@ a@@ s@@ u@@ k@@ e {  public static void main ( String [ ] args ) {
import java . util . Scanner ;  public class _@@ 0@@ 6@@ 7@@ 1@@ R@@ o@@ u@@ n@@ d@@ H@@ o@@ u@@ se {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; System . out . println ( ( ( a - 1 + b ) % n + n ) % n + 1 ) ; }  }
import java . util . Scanner ;  public class MyClass { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String N = in . nextLine ( ) ; String n@@ e@@ w@@ N = N ; System . out . print ( N ) ; for ( int i = N . length ( ) - 1 ; i >= 0 ; i -- ) { System . out . print ( N . charAt ( i ) ) ; } } }
import java . util . * ; import java . io . * ; import java . text . * ; import java . math . * ; import java . lang . Math . * ;  public class A { public static void main ( String [ ] args ) throws Exception { new A ( ) . run ( ) ; } public FastIO file = new FastIO ( ) ; public int n@@ t@@ c , c@@ t@@ c ; public final long MOD = 1000000007L ;
import java . util . * ; class GFG { static void f@@ i@@ n@@ d@@ B@@ a@@ l@@ a@@ n@@ c@@ e ( int x , float b@@ al ) { if ( x % 10 == 0 && ( ( float ) x + 1@@ .@@ 50 ) <= b@@ al ) { System . out . printf ( "@@ %@@ .@@ 2@@ f@@ \n" , b@@ al - x - 1@@ .@@ 50 ) ; } else { System . out . printf ( "@@ %@@ .@@ 2@@ f@@ \n" , b@@ al ) ; } } public static void main ( String [ ] args ) { int x = 50 ; float b@@ al = ( float ) 1@@ 0@@ 0@@ .@@ 50 ; f@@ i@@ n@@ d@@ B@@ a@@ l@@ a@@ n@@ c@@ e ( x , b@@ al ) ; } }
import java . util . * ; class GFG { static void checksum ( int n ) { if ( n % 3 == 0 ) System . out . println ( n / 3 - 1 + " " + n / 3 + " " + ( n / 3 + 1 ) ) ; else System . out . println ( "-1" ) ; } public static void main ( String [ ] args ) { int n = 6 ; checksum ( n ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
import java . util . * ; public class A@@ r@@ pa { public static void main ( String args [ ] ) { Scanner S = new Scanner ( System . in ) ; int n = S . nextInt ( ) ; if ( n == 0 ) System . out . println ( "1" ) ; else { int mod = n % 4 ; if ( mod == 1 ) System . out . println ( "@@ 8@@ " ) ; else if ( mod == 2 ) System . out . println ( "@@ 4" ) ; else if ( mod == 3 ) System . out . println ( "2" ) ; else if ( mod == 0 ) System . out . println ( "6" ) ; } } }
import java . util . * ; class GFG { static int c@@ o@@ u@@ n@@ t@@ O@@ c@@ c@@ u@@ r@@ r@@ a@@ n@@ c@@ e@@ s ( int n , int d ) { int count = 0 ; while ( n > 0 ) { count = ( n % 10 == d ) ? count + 1 : count ; n = n / 10 ; } return count ; } public static void main ( String args [ ] ) { int d = 2 ; int n = 2@@ 1@@ 4@@ 2@@ 1@@ 5@@ 4@@ 21 ; System . out . println ( c@@ o@@ u@@ n@@ t@@ O@@ c@@ c@@ u@@ r@@ r@@ a@@ n@@ c@@ e@@ s ( n , d ) ) ; } }
import java . util . Scanner ;  public class W@@ o@@ r@@ d@@ C@@ a@@ p@@ i@@ t@@ a@@ l@@ i@@ s@@ a@@ t@@ i@@ o@@ n {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String str = sc . nextLine ( ) ; String ans = "" ; for ( int i = 0 ; i < str . length ( ) ; i ++ ) { if ( i == 0 ) { ans += str . charAt ( i ) ; ans = ans . toUpperCase ( ) ; } else { ans += str . charAt ( i ) ; } }  System . out . println ( ans ) ; }  }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; public class GfG { public static int d@@ o@@ M@@ a@@ t@@ ch ( String A , String B ) { for ( int i = 0 ; i < A . length ( ) ; i ++ ) { if ( A . charAt ( i ) != '@@ *@@ ' && B . charAt ( i ) != '@@ *@@ ' ) { if ( A . charAt ( i ) != B . charAt ( i ) ) return 0 ; } } return 1 ; } public static void main ( String [ ] args ) { String A = "@@ g@@ e@@ e@@ *@@ s@@ f@@ o@@ r@@ geeks" ; String B = "geeksforgeeks" ; System . out . println ( d@@ o@@ M@@ a@@ t@@ ch ( A , B ) ) ; } }
import java . io . * ; class GFG { static int s@@ u@@ m@@ o@@ f@@ product ( int n ) { int ans = 0 ; for ( int x = 1 ; x <= n ; x ++ ) { int y = n / x ; ans += ( y * x ) ; } return ans ; } static public void main ( String [ ] args ) { int n = 10 ; System . out . println ( s@@ u@@ m@@ o@@ f@@ product ( n ) ) ; } }
class GFG { static int count ( int n ) { return ( int ) ( - 1 + Math . sqrt ( 1 + 8 * n ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( count ( n ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int lcm ( int n , int m ) { return ( n * m ) / gcd ( n , m ) ; } public static void main ( String [ ] args ) { int n = 2 , m = 3 , k = 5 ; System . out . print ( k / lcm ( n , m ) ) ; } }
 import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception { Scanner scn = new Scanner ( System . in ) ; int t = scn . nextInt ( ) ; while ( t -- > 0 ) { int n = scn . nextInt ( ) ; int x = n / 2020 ; if ( n % 2020 <= x ) { System . out . println ( "YES" ) ; } else { System . out . println ( "NO" ) ; } } } }
class GFG { static int A@@ V@@ L@@ nodes ( int height ) { if ( height == 0 ) return 1 ; else if ( height == 1 ) return 2 ; return ( 1 + A@@ V@@ L@@ nodes ( height - 1 ) + A@@ V@@ L@@ nodes ( height - 2 ) ) ; } public static void main ( String args [ ] ) { int H = 3 ; System . out . println ( A@@ V@@ L@@ nodes ( H ) ) ; } }
class GFG { static String t@@ r@@ i@@ b@@ W@@ ord ( int n ) { String Sn_1 = "1" ; String S@@ n@@ _@@ 2 = "12" ; String S@@ n@@ _@@ 3 = "@@ 1@@ 2@@ 1@@ 3@@ " ; String tmp ; for ( int i = 3 ; i <= n ; i ++ ) { tmp = S@@ n@@ _@@ 3 ; S@@ n@@ _@@ 3 += ( S@@ n@@ _@@ 2 + Sn_1 ) ; Sn_1 = S@@ n@@ _@@ 2 ; S@@ n@@ _@@ 2 = tmp ; } return S@@ n@@ _@@ 3 ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . print ( t@@ r@@ i@@ b@@ W@@ ord ( n ) ) ; } }
class GFG { public static int i@@ n@@ d@@ e@@ x@@ O@@ f@@ F@@ i@@ r@@ s@@ t@@ O@@ n@@ e ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == 1 ) return i ; return - 1 ; } public static void main ( String [ ] args ) { int arr [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 } ; int n = arr . length ; System . out . println ( i@@ n@@ d@@ e@@ x@@ O@@ f@@ F@@ i@@ r@@ s@@ t@@ O@@ n@@ e ( arr , n ) ) ; } }
   import java . math . BigInteger ; import java . util . * ;   public class dummycodes {    public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += sc . nextInt ( ) ; if ( sum % n == 0 ) System . out . println ( n ) ; else System . out . println ( n - 1 ) ;    } }  
import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ;  public class absolute { public static long process ( long n , long [ ] ar , long k ) { int i = 0 , steps = 0 ; long s@@ t@@ div = ar [ 0 ] / k , st = ( s@@ t@@ div + ( ( ar [ 0 ] % k != 0 ) ? 1 : 0 ) ) * k ; if ( k == 1 ) return ar . length ; while ( i < ar . length ) { int count = 0 ;
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class b@@ 7@@ 55 {
import java . util . Scanner ;  public class MAIN {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; String s = in . nextLine ( ) ; in . close ( ) ; int res = 0 ; if ( s != null && s . length ( ) > 0 ) {
class GFG { static int f@@ i@@ n@@ d@@ _@@ count ( int [ ] arr ) { int ans = 0 ; for ( int i : arr ) { int x = Integer . bitCount ( i ) ; if ( i % x == 0 ) ans += 1 ; } return ans ; } public static void main ( String [ ] args ) { int [ ] arr = { 1 , 2 , 3 , 4 , 5 , 6 } ; System . out . print ( f@@ i@@ n@@ d@@ _@@ count ( arr ) ) ; } }
class GFG { static int factorial ( int n ) { if ( n == 0 ) return 1 ; return n * factorial ( n - 1 ) ; } static int countNum ( int n ) { if ( n > 10 ) return 0 ; return ( 9 * factorial ( 9 ) / factorial ( 10 - n ) ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( countNum ( n ) ) ; } }
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . math . * ; public class c@@ 7@@ 0@@ 5@@ b {
import java . io . * ; class GFG { static void fib ( int n ) { int a = 0 , b = 1 ; if ( n >= 0 ) System . out . print ( a + " " ) ; if ( n >= 1 ) System . out . print ( b + " " ) ; for ( int i = 2 ; i <= n ; i ++ ) { System . out . print ( a + b + " " ) ; b = a + b ; a = b - a ; } } public static void main ( String [ ] args ) { fib ( 9 ) ; } }
class GfG { static int l@@ a@@ r@@ g@@ e@@ s@@ t@@ C@@ o@@ prime ( int N ) { if ( N == 6 ) return 1 ; else if ( N % 4 == 0 ) return ( N / 2 ) - 1 ; else if ( N % 2 == 0 ) return ( N / 2 ) - 2 ; else return ( ( N - 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 50 ; System . out . println ( l@@ a@@ r@@ g@@ e@@ s@@ t@@ C@@ o@@ prime ( n ) ) ; } }
import java . io . * ; class GFG { static int fact ( int n ) { int res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) res = res * i ; return res ; } static int C@@ o@@ u@@ n@@ t@@ _@@ number ( int N ) { return ( N * fact ( N ) ) ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . print ( C@@ o@@ u@@ n@@ t@@ _@@ number ( N ) ) ; } }
 import java . util . * ; import java . lang . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) throws java . lang . Exception {
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ; int i = n + 1 ; int j , f ; while ( true ) { f = 1 ; for ( j = 2 ; j <= i / 2 ; j ++ ) { if ( i % j == 0 ) f = 0 ; } if ( f == 1 ) break ; i ++ ; } if ( i == m ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } }
import java . io . * ; import java . util . * ;  public class codeforces {  BufferedReader br ; StringTokenizer st ; public codeforces ( ) {
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; public class d@@ i@@ v@@ 3@@ _@@ p@@ r@@ a@@ c@@ a {
import java . util . * ;  public class C@@ o@@ d@@ e@@ F@@ o@@ r@@ c@@ e@@ s@@ 1@@ 2@@ 0@@ 1@@ B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; long sum = 0 ; int max = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = input . nextInt ( ) ; sum += a ; max = Math . max ( max , a ) ; } if ( sum % 2 == 0 && max * 2 <= sum ) { System . out . println ( "YES" ) ; } else { System . out . println ( "NO" ) ; } } }
import java . util . Scanner ;  public class m@@ u@@ s@@ i@@ c {  public static int helper ( int t , int s , int q ) { int ans = s ; int count = 0 ; while ( ans < t ) { ans = ans + ans * ( q - 1 ) ; count ++ ; } if ( count == 0 ) return 1 ; else return count ; }  public static void main ( String [ ] args ) {
class GFG { static void updateArray ( int arr [ ] , int n ) { for ( int i = n - 1 ; i > 0 ; i -- ) arr [ i ] = arr [ i - 1 ] ; arr [ 0 ] = - 1 ; for ( int i = 0 ; i < n ; i ++ ) System . out . print ( arr [ i ] + " " ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 5 , 1 , 3 , 2 , 4 } ; int N = arr . length ; updateArray ( arr , N ) ; } }
class GFG { static void findRemainder ( int n ) { int l = n % 10 ; while ( n >= 10 ) n /= 10 ; int f = n ; int remainder = f % l ; System . out . println ( remainder ) ; } public static void main ( String [ ] args ) { int n = 5@@ 2@@ 23 ; findRemainder ( n ) ; } }
import java . util . * ;  public class D@@ e@@ s@@ i@@ g@@ n@@ T@@ u@@ t@@ o@@ r@@ i@@ al { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; if ( n % 2 == 0 ) { System . out . println ( "@@ 8 " + ( n - 8 ) ) ; } else { System . out . println ( "@@ 9 " + ( n - 9 ) ) ; } } }
import java . util . * ; public class C@@ o@@ d@@ e { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int d = in . nextInt ( ) ; int L = in . nextInt ( ) ; int v1 = in . nextInt ( ) ; int v2 = in . nextInt ( ) ; System . out . println ( ( double ) ( L - d ) / ( v1 + v2 ) ) ; } }
import java . io . * ; class GFG { static int t@@ r@@ a@@ i@@ l@@ i@@ n@@ g@@ Z@@ e@@ r@@ o ( int x ) { int i = 5 , count = 0 ; while ( x > i ) { count = count + x / i ; i = i * 5 ; } return count ; } static int c@@ o@@ u@@ n@@ t@@ P@@ r@@ o@@ d@@ u@@ c@@ t@@ T@@ r@@ a@@ i@@ l@@ i@@ n@@ g ( int M , int N ) { return t@@ r@@ a@@ i@@ l@@ i@@ n@@ g@@ Z@@ e@@ r@@ o ( N ) + t@@ r@@ a@@ i@@ l@@ i@@ n@@ g@@ Z@@ e@@ r@@ o ( M ) ; } public static void main ( String args [ ] ) { int N = 6@@ 7 , M = 98 ; System . out . println ( c@@ o@@ u@@ n@@ t@@ P@@ r@@ o@@ d@@ u@@ c@@ t@@ T@@ r@@ a@@ i@@ l@@ i@@ n@@ g ( N , M ) ) ; } }
import java . io . * ; class GFG { static int c@@ e@@ n@@ t@@ e@@ r@@ e@@ d@@ _@@ cube ( int n ) { return ( 2 * n + 1 ) * ( n * n + n + 1 ) ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . print ( n + "th Centered" + " cube number: " ) ; System . out . println ( c@@ e@@ n@@ t@@ e@@ r@@ e@@ d@@ _@@ cube ( n ) ) ; n = 10 ; System . out . print ( n + "th Centered" + " cube number: " ) ; System . out . println ( c@@ e@@ n@@ t@@ e@@ r@@ e@@ d@@ _@@ cube ( n ) ) ; } }
import java . util . * ; import java . io . * ;
import java . io . * ; class GFG { static void findNumbers ( int n , int d ) { for ( int i = 0 ; i < n - 2 ; i ++ ) System . out . print ( "1" + " " ) ; System . out . print ( "2" + " " ) ; System . out . println ( n + d ) ; } public static void main ( String args [ ] ) { int N = 3 , D = 5 ; findNumbers ( N , D ) ; } }
import java . util . Scanner ; class P@@ a@@ t@@ t@@ e@@ r@@ n { static void d@@ i@@ s@@ p@@ l@@ a@@ y ( int n ) { int i , j , k ; for ( i = 1 ; i <= n ; i ++ ) { for ( j = 1 , k = i ; j <= i ; j ++ , k -- ) { if ( k % 2 == 0 ) { System . out . print ( j ) ; } else { System . out . print ( "*" ) ; } } System . out . print ( "\n" ) ; } } public static void main ( String [ ] args ) { int n = 5 ; d@@ i@@ s@@ p@@ l@@ a@@ y ( n ) ; } }
import java . util . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; 
import java . io . * ; import java . util . * ;  public class O@@ d@@ d@@ D@@ i@@ v@@ i@@ s@@ or {
import java . util . Scanner ;  public class A@@ 4@@ 0@@ 2 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int K = in . nextInt ( ) ; int A = in . nextInt ( ) ; int B = in . nextInt ( ) ; int V = in . nextInt ( ) ; int b@@ o@@ x@@ e@@ s = 0 ; while ( A > 0 ) { b@@ o@@ x@@ e@@ s ++ ; int divisors = Math . min ( K - 1 , B ) ; B -= divisors ; A -= ( divisors + 1 ) * V ; } System . out . println ( b@@ o@@ x@@ e@@ s ) ; }  }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x1 = in . nextInt ( ) ; int y1 = in . nextInt ( ) ; int x2 = in . nextInt ( ) ; int y2 = in . nextInt ( ) ; ans += ( x2 - x1 + 1 ) * ( y2 - y1 + 1 ) ; } System . out . println ( ans ) ; } }
class GFG { static byte l@@ o@@ n@@ g@@ S@@ i@@ z@@ e = 8 ; static int U@@ L@@ L@@ _@@ SIZE = 8 * l@@ o@@ n@@ g@@ S@@ i@@ z@@ e ; static boolean b@@ i@@ t@@ _@@ a@@ n@@ a@@ g@@ r@@ a@@ m@@ _@@ check ( long a ) { return ( Integer . bitCount ( ( int ) a ) == ( U@@ L@@ L@@ _@@ SIZE > > 1 ) ) ; } public static void main ( String [ ] args ) { long a = 4@@ 2@@ 9@@ 4@@ 9@@ 6@@ 7@@ 2@@ 9@@ 5@@ L ; System . out . println ( b@@ i@@ t@@ _@@ a@@ n@@ a@@ g@@ r@@ a@@ m@@ _@@ check ( a ) ) ; } }
import java . util . * ; public class U@@ S@@ B@@ D@@ r@@ i@@ v@@ e@@ _@@ 6@@ 0@@ 9@@ A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int m = sc . nextInt ( ) ;  int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc . nextInt ( ) ; }  Arrays . sort ( a ) ; int count = 0 , i = n - 1 ; while ( m > 0 ) { m -= a [ i ] ; i -- ; count ++ ; } System . out . println ( count ) ;   } }
import java . util . * ; import java . io . * ; import java . lang . * ; import java . math . * ; public class B { public static void main ( String [ ] args ) throws Exception { BufferedReader bf = new BufferedReader ( new InputStreamReader ( System . in ) ) ;
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . ArrayList ; import java . util . Collections ; import java . util . StringTokenizer ;  public class A { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; int t = fs . nextInt ( ) ; while ( t -- > 0 ) { int a = fs . nextInt ( ) ; int b = fs . nextInt ( ) ; int n = fs . nextInt ( ) ;
import java . io . * ; import java . util . StringTokenizer ;
import java . io . * ; class GFG { static int n@@ u@@ m@@ o@@ f@@ string ( int n , int m ) { if ( n == 1 ) return m ; if ( n == 2 ) return m * ( m - 1 ) ; return m * ( m - 1 ) * ( int ) Math . pow ( m - 2 , n - 2 ) ; } public static void main ( String [ ] args ) { int n = 2 , m = 3 ; System . out . println ( n@@ u@@ m@@ o@@ f@@ string ( n , m ) ) ; } }
class GFG { static long c@@ a@@ l@@ _@@ m@@ i@@ n@@ i@@ m@@ u@@ m@@ _@@ time ( long X ) { long t = 0 ; long sum = 0 ; while ( sum < X ) { t ++ ; sum = sum + t ; } return t ; } public static void main ( String [ ] args ) { long n = 6 ; long ans = c@@ a@@ l@@ _@@ m@@ i@@ n@@ i@@ m@@ u@@ m@@ _@@ time ( n ) ; System . out . println ( "The minimum time r@@ e@@ q@@ u@@ i@@ r@@ e@@ d is : " + ans ) ; } }
a = input ( ) b = input ( ) x = a . count ( '1' ) x = x + x % 2 x -= b . count ( '1' ) print ( "NO" if x < 0 else "YES" )
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; long t = sc . nextLong ( ) ; long [ ] arr = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc . nextLong ( ) ; }
public class GFG { static int c@@ o@@ u@@ n@@ t@@ F@@ i@@ bs ( int low , int high ) { int f1 = 0 , f2 = 1 , f3 = 1 ; int result = 0 ; while ( f1 <= high ) { if ( f1 >= low ) result ++ ; f1 = f2 ; f2 = f3 ; f3 = f1 + f2 ; } return result ; } public static void main ( String args [ ] ) { int low = 10 , high = 100 ; System . out . println ( "Count of Fibonacci Numbers is " + c@@ o@@ u@@ n@@ t@@ F@@ i@@ bs ( low , high ) ) ; } }
import java . io . * ; class GFG { static long h@@ e@@ x@@ a@@ d@@ e@@ c@@ a@@ g@@ o@@ n@@ a@@ l@@ Num ( long n ) { return ( ( 14 * n * n ) - 12 * n ) / 2 ; } public static void main ( String [ ] args ) { long n = 5 ; System . out . println ( n + "th " + "@@ H@@ e@@ x@@ a@@ d@@ e@@ c@@ a@@ g@@ o@@ n@@ al number : " + h@@ e@@ x@@ a@@ d@@ e@@ c@@ a@@ g@@ o@@ n@@ a@@ l@@ Num ( n ) ) ; n = 9 ; System . out . println ( n + "th " + "@@ H@@ e@@ x@@ a@@ d@@ e@@ c@@ a@@ g@@ o@@ n@@ al number : " + h@@ e@@ x@@ a@@ d@@ e@@ c@@ a@@ g@@ o@@ n@@ a@@ l@@ Num ( n ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; class solution { static int calculateSum ( int n ) { return ( ( int ) Math . pow ( 10 , n + 1 ) * ( 9 * n - 1 ) + 10 ) / ( int ) Math . pow ( 9 , 3 ) - n * ( n + 1 ) / 18 ; } public static void main ( String ar [ ] ) { int n = 3 ; System . out . println ( "@@ S@@ u@@ m@@ = " + calculateSum ( n ) ) ; } }
import java . util . * ; class GFG { static int count ( int n ) { if ( n == 0 ) return 1 ; if ( n == 1 ) return 1 ; else return ( n * count ( n - 1 ) ) + ( ( n - 1 ) * count ( n - 2 ) ) ; } public static void main ( String [ ] args ) { int A [ ] = { 1 , 2 , 3 , 9 } ; int n = 4 ; System . out . println ( count ( n - 1 ) ) ; } }
import java . io . * ; class GFG { static float r@@ h@@ o@@ m@@ b@@ u@@ s@@ area ( float l , float b ) { if ( l < 0 || b < 0 ) return - 1 ; return ( l * b ) / 2 ; } public static void main ( String [ ] args ) { float l = 16 , b = 6 ; System . out . println ( r@@ h@@ o@@ m@@ b@@ u@@ s@@ area ( l , b ) ) ; } }
public class GFG { public static int f@@ i@@ n@@ d@@ _@@ value ( int a [ ] , int n , int k ) { int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } return sum % k ; } public static void main ( String [ ] args ) { int n = 5 , k = 3 ; int a [ ] = { 12 , 4 , 13 , 0 , 5 } ; System . out . println ( f@@ i@@ n@@ d@@ _@@ value ( a , n , k ) ) ; } }
import java . lang . * ; class GFG { static boolean i@@ s@@ D@@ i@@ v@@ B@@ y@@ 9 ( int n ) { if ( n == 0 || n == 9 ) return true ; if ( n < 9 ) return false ; return i@@ s@@ D@@ i@@ v@@ B@@ y@@ 9 ( ( int ) ( n > > 3 ) - ( int ) ( n & 7 ) ) ; } public static void main ( String arg [ ] ) { for ( int i = 0 ; i < 100 ; i ++ ) if ( i@@ s@@ D@@ i@@ v@@ B@@ y@@ 9 ( i ) ) System . out . print ( i + " " ) ; } }
import java . util . * ;  public final class c@@ _@@ 2@@ 3@@ 1@@ A { public static void main ( String [ ] Args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; s . nextLine ( ) ; int ans = 0 ; while ( n > 0 ) { int sum = s . nextInt ( ) ; sum += s . nextInt ( ) ; sum += s . nextInt ( ) ; s . nextLine ( ) ; if ( sum >= 2 ) { ans ++ ; } n -- ; } System . out . println ( ans ) ; } }
import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;
import java . util . * ; import java . io . * ; import java . lang . * ;   public class f@@ e@@ b@@ c@@ h@@ al { static int mod = 1@@ 0@@ 0@@ 0@@ 0@@ _@@ 0@@ 0@@ 0@@ 0@@ 7 ; 
 import java . util . * ; import java . lang . * ; import java . io . * ; import java . math . * ;   public class file {  
public class Main { static int findSum ( int n ) { int sum = 0 ; for ( int i = 1 ; 1 << i < n ; i ++ ) { for ( int j = 0 ; j < i ; j ++ ) { int num = ( 1 << i ) + ( 1 << j ) ; if ( num <= n ) sum += num ; } } return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( findSum ( n ) ) ; } }
class GFG { static long factorial ( int n ) { long res = 1 ; for ( int i = 2 ; i <= n ; i ++ ) { res *= i ; } return res ; } static void p@@ r@@ i@@ n@@ t@@ N@@ C@@ o@@ m@@ p@@ o@@ s@@ i@@ t@@ e ( int n ) { long fact = factorial ( n + 1 ) ; for ( int i = 2 ; i <= n + 1 ; ++ i ) { System . out . print ( fact + i + " " ) ; } } public static void main ( String [ ] args ) { int n = 4 ; p@@ r@@ i@@ n@@ t@@ N@@ C@@ o@@ m@@ p@@ o@@ s@@ i@@ t@@ e ( n ) ; } }
import java . util . Scanner ;  public class Q@@ u@@ e@@ u@@ e@@ B@@ u@@ s@@ S@@ t@@ o@@ p { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , m = in . nextInt ( ) , i , o = 1 , c = m ; for ( i = 0 ; i < n ; i ++ ) {  int a = in . nextInt ( ) ; if ( a <= c ) { c -= a ; } else { o ++ ; c = m - a ; } } in . close ( ) ; System . out . println ( o ) ; } }
import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static FileWriter fw ; static long oo = Long . MAX_VALUE ;
import java . io . * ; class GFG { static int m@@ a@@ k@@ e@@ Odd ( int n ) { if ( n % 2 != 0 ) return 1 ; int i ; for ( i = 2 ; i <= n ; i ++ ) if ( ( n % i == 0 ) && ( ( n / i ) % 2 == 1 ) ) break ; return i ; } public static void main ( String [ ] args ) { int n = 36 ; int res = m@@ a@@ k@@ e@@ Odd ( n ) ; System . out . println ( res ) ; } }
import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class A@@ 6@@ 20 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;
import java . util . Scanner ;  public class H@@ o@@ n@@ g@@ c@@ o@@ w@@ C@@ y@@ c@@ l@@ i@@ c@@ S@@ h@@ i@@ f@@ t { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; String s = in . next ( ) , t = s + s ;  in . close ( ) ; System . out . println ( t . indexOf ( s , 1 ) ) ; } }
class g@@ e@@ e@@ k@@ s { public static int f@@ i@@ r@@ s@@ t@@ S@@ e@@ t@@ B@@ i@@ t ( int n ) { int x = n & ( n - 1 ) ; return ( n ^ x ) ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( f@@ i@@ r@@ s@@ t@@ S@@ e@@ t@@ B@@ i@@ t ( n ) ) ; } }
import java . io . * ; import java . util . * ;  public class Main {  public static void main ( String [ ] args ) throws IOException { String s = sc . nextLine ( ) ; int k = sc . nextInt ( ) ; if ( k > s . length ( ) ) pw . println ( "impossible" ) ; else {
import java . util . * ; import java . io . * ;  public class HelloWorld {  public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; double n1 = ( double ) scanner . nextInt ( ) ; int n2 = scanner . nextInt ( ) ; int n@@ 3 = scanner . nextInt ( ) ; int n@@ 4 = scanner . nextInt ( ) ; double ans = ( n2 - n1 ) / ( n@@ 3 + n@@ 4 ) ; System . out . println ( ans ) ; } }
import java . util . Scanner ;   public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= 1000 ; i ++ ) { if ( Math . pow ( 2 , i ) > n ) { System . out . println ( i ) ; break ; } } }  }
import java . util . * ; import java . io . * ; import java . math . * ;  public class Practice  { static FastReader sc = new FastReader ( ) ; static int dx [ ] = { - 1 , 0 , 1 , 0 } ; static int dy [ ] = { 0 , 1 , 0 , - 1 } ; static int k ; public static void main ( String [ ] args ) {
class GFG { static int f@@ i@@ n@@ d@@ Min ( int arr [ ] , int n ) { int ans = 1 ; for ( int i = 0 ; i < n ; i ++ ) { int j = i + 1 ; while ( j < n && arr [ j ] >= arr [ j - 1 ] ) j ++ ; ans = Math . max ( ans , j - i ) ; i = j - 1 ; } return n - ans ; } public static void main ( String [ ] args ) { int arr [ ] = { 3 , 2 , 1 } ; int n = arr . length ; System . out . println ( f@@ i@@ n@@ d@@ Min ( arr , n ) ) ; } }
import java . util . Scanner ;  public class B@@ 3@@ 27 { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int c = n ; for ( int i = 0 ; i < n ; i ++ ) { System . out . print ( ++ c + ( i == n - 1 ? "" : " " ) ) ; } } }
import java . util . Scanner ; public class MyClass { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int a = s . nextInt ( ) ; int b = s . nextInt ( ) ; int i = 0 ; while ( a <= b ) { a = a * 3 ; b = b * 2 ; i ++ ; } System . out . println ( i ) ; } }
import java . io . * ; class GFG { static double trianglearea ( double a ) { if ( a < 0 ) return - 1 ; double area = ( 3 * Math . sqrt ( 3 ) * Math . pow ( a , 2 ) ) / 4 ; return area ; } public static void main ( String [ ] args ) { double a = 6 ; System . out . println ( trianglearea ( a ) ) ; } }
import java . io . * ; import java . lang . reflect . Array ; import java . util . * ; public class i@@ c@@ p@@ c { public static void main ( String [ ] args ) throws IOException { Reader in = new Reader ( ) ;
import java . io . * ; import java . lang . * ; class GfG { public static int f@@ i@@ n@@ d@@ L@@ C@@ M ( int a , int b ) { int l@@ ar = Math . max ( a , b ) ; int small = Math . min ( a , b ) ; for ( int i = l@@ ar ; ; i += l@@ ar ) { if ( i % small == 0 ) return i ; } } public static void main ( String [ ] argc ) { int a = 5 , b = 7 ; System . out . println ( "LCM of " + a + " and " + b + " is " + f@@ i@@ n@@ d@@ L@@ C@@ M ( a , b ) ) ; } }
import java . util . * ;   public class Main {   public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; String str = sc . next ( ) ; int c = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( str . charAt ( i ) == str . charAt ( i + 1 ) ) { c ++ ; } } System . out . println ( c ) ; } } 
class GFG { static void f@@ i@@ n@@ d@@ W@@ i@@ n@@ n@@ e@@ r ( int n ) { if ( ( n - 1 ) % 6 == 0 ) { System . out . println ( "@@ S@@ e@@ c@@ o@@ n@@ d P@@ l@@ a@@ y@@ e@@ r w@@ i@@ n@@ s the g@@ a@@ m@@ e@@ " ) ; } else { System . out . println ( "@@ F@@ i@@ r@@ st P@@ l@@ a@@ y@@ e@@ r w@@ i@@ n@@ s the g@@ a@@ m@@ e@@ " ) ; } } public static void main ( String [ ] args ) { int n = 7 ; f@@ i@@ n@@ d@@ W@@ i@@ n@@ n@@ e@@ r ( n ) ; } }
public class GFG { static int s@@ t@@ r@@ i@@ n@@ g@@ T@@ o@@ I@@ n@@ t ( String str ) { if ( str . length ( ) == 1 ) return ( str . charAt ( 0 ) - '0' ) ; double y = s@@ t@@ r@@ i@@ n@@ g@@ T@@ o@@ I@@ n@@ t ( str . substring ( 1 ) ) ; double x = str . charAt ( 0 ) - '0' ; x = x * Math . pow ( 10 , str . length ( ) - 1 ) + y ; return ( int ) ( x ) ; } public static void main ( String [ ] args ) { String str = "@@ 1@@ 2@@ 3@@ 5@@ " ; System . out . print ( s@@ t@@ r@@ i@@ n@@ g@@ T@@ o@@ I@@ n@@ t ( str ) ) ; } }
import java . util . * ; public class C@@ o@@ n@@ test {  public static void main ( String [ ] args ) {
class GFG { static int check ( int n , int m ) { if ( m % n == 0 ) { System . out . print ( "YES" ) ; } else { System . out . print ( "NO" ) ; } return 0 ; } public static void main ( String [ ] args ) { int n = 5 ; int m = 10 ; check ( n , m ) ; } }
import java . util . * ; public class B@@ a@@ d@@ Triangle { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int c = 0 , n = sc . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) a [ i ] = sc . nextInt ( ) ; if ( a [ 0 ] + a [ 1 ] <= a [ n - 1 ] ) System . out . println ( 1 + " " + 2 + " " + n ) ; else System . out . println ( - 1 ) ; } } }
import java . util . * ; public class p@@ o@@ i { public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; int t = 1 ; int i , j ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; int a [ ] = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) { a [ i ] = in . nextInt ( ) ; }
class GFG { static int m@@ i@@ n@@ L@@ e@@ t@@ t@@ e@@ r@@ s@@ N@@ e@@ e@@ d@@ e@@ d ( int n ) { if ( n % 26 == 0 ) return ( n / 26 ) ; else return ( ( n / 26 ) + 1 ) ; } public static void main ( String args [ ] ) { int n = 52 ; System . out . print ( m@@ i@@ n@@ L@@ e@@ t@@ t@@ e@@ r@@ s@@ N@@ e@@ e@@ d@@ e@@ d ( n ) ) ; } }
import java . util . Scanner ;  public class A@@ 233 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; if ( n % 2 == 1 ) System . out . println ( - 1 ) ; else for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) { System . out . print ( ( i + 1 ) + " " ) ; } else { System . out . print ( ( i - 1 ) + " " ) ; } } } }
import java . util . * ; import java . math . * ; public class Jumps { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int runs = sc . nextInt ( ) ; while ( runs -- > 0 ) { int x = sc . nextInt ( ) ; int cur = 0 ; int i = 1 ; while ( cur < x ) { cur += i ++ ; } if ( cur == x + 1 ) System . out . println ( i ) ; else System . out . println ( i - 1 ) ; }  } }
class GFG { static void c@@ o@@ u@@ n@@ t@@ P@@ e@@ r@@ m@@ u@@ t@@ a@@ t@@ i@@ o@@ n@@ s ( int N , int B ) { int x = ( int ) Math . pow ( B , N ) ; int y = ( int ) Math . pow ( B , N - 1 ) ; System . out . println ( x - y ) ; } public static void main ( String [ ] args ) { int N = 6 ; int B = 4 ; c@@ o@@ u@@ n@@ t@@ P@@ e@@ r@@ m@@ u@@ t@@ a@@ t@@ i@@ o@@ n@@ s ( N , B ) ; } }
import java . util . Scanner ;  public class P@@ r@@ o@@ b@@ l@@ e@@ m@@ 28 {  public static void main ( String [ ] args ) {
import java . util . Scanner ;  public class A@@ 1@@ 7@@ 1 {  public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int a = in . nextInt ( ) ; int b = Integer . parseInt ( new StringBuilder ( in . next ( ) ) . reverse ( ) . toString ( ) ) ; System . out . println ( a + b ) ; }  }
import java . util . Scanner ;  public class S@@ h@@ e@@ l@@ l@@ G@@ a@@ m@@ e { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) % 6 , x = in . nextInt ( ) ; in . close ( ) ;  String [ ] a = { "@@ 0@@ 1@@ 2@@ " , "@@ 1@@ 0@@ 2" , "@@ 1@@ 2@@ 0" , "@@ 2@@ 1@@ 0@@ " , "@@ 2@@ 0@@ 1@@ " , "@@ 0@@ 2@@ 1@@ " } ; System . out . println ( a [ n ] . charAt ( x ) ) ; } }
class I@@ s@@ Divisible { static boolean check ( String str ) { int n = str . length ( ) ; int digitSum = 0 ; for ( int i = 0 ; i < n ; i ++ ) digitSum += ( str . charAt ( i ) - '0' ) ; return ( digitSum % 9 == 0 ) ; } public static void main ( String [ ] args ) { String str = "@@ 9@@ 9@@ 3@@ 3@@ 3" ; if ( check ( str ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ; static HashSet < Long > list = new HashSet < > ( ) ; public static void main ( String [ ] args ) {
class Gfg { static int c@@ a@@ s@@ s@@ i@@ n@@ i ( int n ) { return ( n & 1 ) != 0 ? - 1 : 1 ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( c@@ a@@ s@@ s@@ i@@ n@@ i ( n ) ) ; } }
import java . util . * ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int n = input . nextInt ( ) ; int k = input . nextInt ( ) ; int a [ ] = new int [ n * k ] ; for ( int i = 0 ; i < n * k ; i ++ ) { a [ i ] = i + 1 ; } String ans [ ] = new String [ k ] ;
import java . io . * ; class GFG { static long f@@ i@@ n@@ d@@ T@@ r@@ i@@ a@@ n@@ g@@ u@@ l@@ a@@ r@@ Number ( int n ) { return ( n * ( n + 1 ) ) / 2 ; } static void printSeries ( int n ) { long prev = 0 ; long curr ; for ( int i = 1 ; i <= n ; i ++ ) { curr = f@@ i@@ n@@ d@@ T@@ r@@ i@@ a@@ n@@ g@@ u@@ l@@ a@@ r@@ Number ( i ) ; curr = curr + prev ; System . out . print ( curr + " " ) ; prev = curr ; } } public static void main ( String [ ] args ) { int n = 10 ; printSeries ( n ) ; } }
import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int t , a , b , n ; t = scan . nextInt ( ) ; while ( t -- > 0 ) { a = scan . nextInt ( ) ; b = scan . nextInt ( ) ; n = scan . nextInt ( ) ; int c@@ t@@ r = 0 ; while ( a <= n && b <= n ) { if ( a <= b ) a += b ; else b += a ; ++ c@@ t@@ r ; } System . out . println ( c@@ t@@ r ) ; } } }
import java . util . * ; import java . io . * ;  public class Main { public static void main ( String [ ] args ) { Scanner scn = new Scanner ( System . in ) ; long a = scn . nextLong ( ) ; long b = scn . nextLong ( ) ; System . out . println ( "YES" ) ; for ( long i = a ; i <= b ; i += 2 ) { System . out . println ( i + " " + ( i + 1 ) ) ; } } }
import java . util . * ; import java . io . * ; public class E@@ d@@ A { static long [ ] mods = { 1000000007 , 998244353 , 1000000009 } ; static long mod = mods [ 0 ] ; public static MyScanner sc ; public static PrintWriter out ; public static void main ( String [ ] omkar ) throws Exception {
class GFG { static int g@@ e@@ t@@ P@@ a@@ s@@ s@@ i@@ n@@ g@@ C@@ a@@ r@@ s ( int A [ ] , int n ) { int c@@ o@@ u@@ n@@ t@@ O@@ n@@ e = 0 , result = 0 ; while ( n >= 1 ) { if ( A [ n - 1 ] == 1 ) c@@ o@@ u@@ n@@ t@@ O@@ n@@ e ++ ; else result += c@@ o@@ u@@ n@@ t@@ O@@ n@@ e ; n -- ; } return result ; } public static void main ( String [ ] args ) { int A [ ] = { 0 , 1 , 0 , 1 , 1 } ; int n = A . length ; System . out . println ( g@@ e@@ t@@ P@@ a@@ s@@ s@@ i@@ n@@ g@@ C@@ a@@ r@@ s ( A , n ) ) ; } }
public final class p@@ 1@@ 1@@ 7 implements EulerSolution { public static void main ( String [ ] args ) { System . out . println ( new p@@ 1@@ 1@@ 7 ( ) . run ( ) ) ; } private static final int L@@ E@@ N@@ G@@ T@@ H = 50 ; public String run ( ) { long [ ] ways = new long [ L@@ E@@ N@@ G@@ T@@ H + 1 ] ; ways [ 0 ] = 1 ; for ( int n = 1 ; n <= L@@ E@@ N@@ G@@ T@@ H ; n ++ ) { for ( int k = 1 ; k <= 4 && k <= n ; k ++ ) ways [ n ] += ways [ n - k ] ; } return Long . toString ( ways [ L@@ E@@ N@@ G@@ T@@ H ] ) ; } }
import java . util . * ;  public class ICPC { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int k = sc . nextInt ( ) ; int c = 0 ; process : for ( int i = 1 ; i <= n ; i ++ ) { String [ ] s = sc . next ( ) . split ( "" ) ; boolean [ ] ar = new boolean [ k + 1 ] ; for ( String s1 : s ) { int num = Integer . parseInt ( s1 ) ; if ( num > k ) {
import java . io . IOException ; import java . util . * ; public class G@@ u@@ e@@ s@@ s@@ T@@ h@@ e@@ P@@ e@@ r@@ m@@ u@@ t@@ a@@ t@@ i@@ o@@ n {  public static void main ( String [ ] args ) throws IOException {
import java . util . Scanner ;   public class Main {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; String a = sc . nextLine ( ) ; String b = sc . nextLine ( ) ; char [ ] c = new char [ a . length ( ) ] ; for ( int i = 0 ; i < a . length ( ) ; i ++ ) { if ( a . charAt ( i ) == b . charAt ( i ) ) { c [ i ] = '0' ; } else { c [ i ] = '1' ; } } System . out . println ( c ) ; }  }
class GFG { static int count ( int n ) { return ( int ) Math . pow ( 2 , n - 1 ) ; } public static void main ( String [ ] args ) { int n = 4 ; System . out . println ( count ( n ) ) ; } }
public class GFG { static long c@@ o@@ u@@ n@@ t@@ N@@ o@@ n@@ D@@ e@@ c@@ r@@ e@@ a@@ s@@ i@@ n@@ g ( int n ) { int N = 10 ; long count = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { count *= ( N + i - 1 ) ; count /= i ; } return count ; } public static void main ( String args [ ] ) { int n = 3 ; System . out . print ( c@@ o@@ u@@ n@@ t@@ N@@ o@@ n@@ D@@ e@@ c@@ r@@ e@@ a@@ s@@ i@@ n@@ g ( n ) ) ; } }
import java . io . * ; class GFG { static Boolean i@@ s@@ P@@ e@@ n@@ t@@ a@@ g@@ o@@ n@@ al ( int N ) { double n = ( 1 + Math . sqrt ( 24 * N + 1 ) ) / 6 ; return ( n - ( int ) n ) == 0 ; } public static void main ( String [ ] args ) { int N = 19 ; if ( i@@ s@@ P@@ e@@ n@@ t@@ a@@ g@@ o@@ n@@ al ( N ) ) System . out . println ( N + " is p@@ e@@ n@@ t@@ a@@ g@@ o@@ n@@ al " ) ; else System . out . println ( N + " is not p@@ e@@ n@@ t@@ a@@ g@@ o@@ n@@ a@@ l@@ " ) ; } }
class GFG { static int S@@ U@@ M ( int n , int m ) { if ( m == 1 ) return ( n * ( n + 1 ) / 2 ) ; int sum = S@@ U@@ M ( n , m - 1 ) ; return ( sum * ( sum + 1 ) / 2 ) ; } public static void main ( String [ ] args ) { int n = 5 ; int m = 3 ; System . out . println ( "@@ S@@ U@@ M@@ (" + n + ", " + m + "@@ )@@ : " + S@@ U@@ M ( n , m ) ) ; } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . HashMap ; import java . util . LinkedHashMap ; import java . util . Map ; import java . util . Scanner ; import java . util . * ; import java . util . stream . Collectors ;  public class absolute {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ;  import static java . lang . Math . * ;  public class V@@ a@@ l@@ u@@ e@@ d@@ K@@ e@@ y@@ s {
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . Scanner ;  public class D@@ i@@ v@@ e@@ r@@ s@@ e@@ S@@ u@@ b@@ S { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , i ; String s = in . next ( ) , o = "NO" ; in . close ( ) ;  for ( i = 0 ; i < n - 1 ; i ++ ) if ( s . charAt ( i ) != s . charAt ( i + 1 ) ) { o = "YES\n" + s . substring ( i , i + 2 ) ; break ; } System . out . println ( o ) ; } }
import java . util . * ; public class M@@ a@@ g@@ i@@ c@@ Square {  public static void main ( String [ ] args ) {
class GFG { static void swap ( int [ ] xp , int [ ] yp ) { xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; } public static void main ( String [ ] args ) { int [ ] x = { 10 } ; swap ( x , x ) ; System . out . println ( "After swap(&x, &x): x = " + x [ 0 ] ) ; } }
class GFG { static int b@@ i@@ t@@ w@@ i@@ s@@ e@@ A@@ n@@ d@@ Odd ( int n ) { int result = 1 ; for ( int i = 3 ; i <= n ; i = i + 2 ) { result = ( result & i ) ; } return result ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( b@@ i@@ t@@ w@@ i@@ s@@ e@@ A@@ n@@ d@@ Odd ( n ) ) ; } }
import java . util . * ;  public class T@@ r@@ a@@ c@@ e@@ _@@ B {  public static void main ( String [ ] args ) {
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . ArrayList ; import java . util . HashMap ; import java . util . StringTokenizer ;  public class Main { static InputReader in ; static PrintWriter out ; public static void main ( String [ ] args ) throws IOException {
import java . util . Scanner ;  public class B@@ 9@@ 78 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) , a = 0 , res = 0 ; String file = scanner . next ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( file . charAt ( i ) == '@@ x@@ ' ) { a ++ ; if ( a > 2 ) { res ++ ; } } else { a = 0 ; } } System . out . println ( res ) ; } }
import java . io . * ; import java . math . BigDecimal ; import java . math . BigInteger ; import java . math . RoundingMode ; import java . util . * ; import java . util . concurrent . LinkedBlockingDeque ;  import java . util . ArrayList ; import java . util . HashMap ; import java . util . LinkedList ;  
import java . util . Scanner ;  public class A@@ 4@@ 32 { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ;  int n = scanner . nextInt ( ) , k = scanner . nextInt ( ) , count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int y = scanner . nextInt ( ) ; if ( 5 - y >= k ) { count ++ ; } } System . out . println ( count / 3 ) ; } }
import java . util . * ; public class S@@ a@@ i@@ t@@ a@@ m@@ a@@ _@@ D@@ e@@ s@@ t@@ r@@ o@@ y@@ s@@ _@@ H@@ o@@ t@@ e@@ l {  public static void main ( String [ ] args ) {
import java . util . * ; public class MyClass { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int q = sc . nextInt ( ) ; while ( q -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int n = sc . nextInt ( ) ; int s = sc . nextInt ( ) ; int k = Math . min ( s / n , a ) ; k = s - k * n ; if ( k <= b ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } } }
import java . util . * ; public class c1 { public static void main ( String [ ] args ) { int n ; Scanner reader = new Scanner ( System . in ) ; n = reader . nextInt ( ) ; int [ ] a = new int [ n ] ; int days , max = 0 , i ; for ( i = 0 ; i < n ; ++ i ) { a [ i ] = reader . nextInt ( ) ; } for ( i = days = 0 ; i < n ; ++ i ) { if ( max < a [ i ] ) max = a [ i ] ; if ( max == i + 1 ) ++ days ; } System . out . println ( days ) ; } }
import java . io . * ; class GFG { static float polyarea ( float n , float a ) { if ( a < 0 && n < 0 ) return - 1 ; float A = ( a * a * n ) / ( float ) ( 4 * Math . tan ( ( 180 / n ) * 3.14159 / 180 ) ) ; return A ; } public static void main ( String [ ] args ) { float a = 9 , n = 6 ; System . out . println ( polyarea ( n , a ) ) ; } }
 import java . math . * ; import java . util . * ; import java . io . * ; public class gr13b {
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static int factorial ( int N ) { int fact = 1 ; for ( int i = 1 ; i <= N ; i ++ ) fact = fact * i ; return fact ; } static int nthTerm ( int N ) { return ( factorial ( N ) * ( N + 2 ) / 2 ) ; } public static void main ( String args [ ] ) { int N = 6 ; System . out . println ( nthTerm ( N ) ) ; } }
import java . util . * ; public class C@@ o@@ u@@ n@@ t@@ e@@ r@@ Example { public static long c@@ o@@ _@@ prime ( long n1 , long n2 ) {
class GFG { static int c@@ a@@ l@@ Num ( int year ) { return ( year / 4 ) - ( year / 100 ) + ( year / 400 ) ; } static void l@@ e@@ a@@ p@@ Num ( int l , int r ) { l -- ; int num1 = c@@ a@@ l@@ Num ( r ) ; int num2 = c@@ a@@ l@@ Num ( l ) ; System . out . print ( num1 - num2 + "\n" ) ; } public static void main ( String [ ] args ) { int l1 = 1 , r1 = 400 ; l@@ e@@ a@@ p@@ Num ( l1 , r1 ) ; int l2 = 400 , r2 = 2000 ; l@@ e@@ a@@ p@@ Num ( l2 , r2 ) ; } }
import java . util . ArrayList ; import java . util . Scanner ;   public class P@@ a@@ p@@ e@@ r@@ W@@ o@@ r@@ k {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ; public class Asd { static PrintWriter w = new PrintWriter ( System . out ) ; static FastScanner s = new FastScanner ( ) ;  public static void main ( String [ ] args ) {
class GFG { static int x@@ o@@ r@@ C@@ a@@ l@@ c ( int k ) { if ( k == 1 ) return 2 ; if ( ( ( k + 1 ) & k ) == 0 ) return k / 2 ; return 1 ; } public static void main ( String [ ] args ) { int k = 31 ; System . out . println ( x@@ o@@ r@@ C@@ a@@ l@@ c ( k ) ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; import java . util . Collections ; public class Main { public static void main ( String [ ] args ) { FastScanner fs = new FastScanner ( ) ; int T = 1 ;
import java . io . * ; import java . math . * ; import java . util . * ; 
public class GFG { static int getTotalXorOfSubarrayXors ( int arr [ ] , int N ) { int res = 0 ; for ( int i = 0 ; i < N ; i ++ ) for ( int j = i ; j < N ; j ++ ) for ( int k = i ; k <= j ; k ++ ) res = res ^ arr [ k ] ; return res ; } public static void main ( String args [ ] ) { int arr [ ] = { 3 , 5 , 2 , 4 , 6 } ; int N = arr . length ; System . out . println ( getTotalXorOfSubarrayXors ( arr , N ) ) ; } }
import java . util . * ; class solution { static int nthTerm ( int n ) { return 7 * ( int ) Math . pow ( n , 2 ) - 7 * n + 7 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }
import java . util . * ; class GFG { static int f@@ i@@ n@@ d@@ Min ( int a [ ] , int n ) { double sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) sum += Math . log ( a [ i ] ) ; int x = ( int ) Math . exp ( sum / n ) ; return x + 1 ; } public static void main ( String [ ] args ) { int a [ ] = { 3 , 2 , 1 , 4 } ; int n = a . length ; System . out . println ( f@@ i@@ n@@ d@@ Min ( a , n ) ) ; } }
class Main { static int findCount ( int m , int n ) { int num1 = 0 ; for ( int i = 0 ; i < m ; i ++ ) num1 = ( num1 * 10 ) + 9 ; int num2 = 0 ; for ( int i = 0 ; i < ( m - 1 ) ; i ++ ) num2 = ( num2 * 10 ) + 9 ; return ( ( num1 / n ) - ( num2 / n ) ) ; } public static void main ( String [ ] args ) { int m = 2 , n = 6 ; System . out . println ( findCount ( m , n ) ) ; } }
import java . util . Scanner ;  public class D@@ Z@@ Y@@ H@@ a@@ s@@ h { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int p = in . nextInt ( ) , n = in . nextInt ( ) , a [ ] = new int [ p ] , i , o = - 1 ;  for ( i = 0 ; i < n ; i ++ ) { int x = in . nextInt ( ) ; a [ x % p ] ++ ; if ( a [ x % p ] > 1 ) { o = i + 1 ; break ; } } in . close ( ) ; System . out . println ( o ) ; } }
import java . util . * ; import java . math . * ; public class RandomTeams { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long m = sc . nextLong ( ) ; long max = n - ( m - 1 ) ; max = max * ( max - 1 ) / 2 ; long x = n / m , y = n % m ; long min = 0 ; min += ( m - y ) * x * ( x - 1 ) / 2 ; x ++ ; min += y * x * ( x - 1 ) / 2 ; System . out . println ( min + " " + max ) ; } }
import java . util . * ; class GFG { static int m@@ i@@ n@@ I@@ t@@ e@@ ms ( int k , int r ) { for ( int i = 1 ; i < 10 ; i ++ ) if ( ( i * k - r ) % 10 == 0 || ( i * k ) % 10 == 0 ) return i ; return 10 ; } public static void main ( String args [ ] ) { int k = 15 ; int r = 2 ; System . out . println ( m@@ i@@ n@@ I@@ t@@ e@@ ms ( k , r ) ) ; } }
import java . util . * ; public class L@@ l@@ p@@ s {  public static void main ( String [ ] args ) {
import java . io . * ; import java . util . * ; import javax . print . attribute . standard . Finishings ;  import java . math . * ;  public class C@@ o@@ m@@ p@@ e { static final Random random = new Random ( ) ; static PrintWriter out = new PrintWriter ( ( System . out ) ) ; static Reader sc = new Reader ( ) ;  public static void main ( String args [ ] ) throws IOException {
class GFG { static void solve ( int A , int B ) { double p = B / 2.0 ; double M = Math . ceil ( 4 * p ) ; int N = 1 ; int O = - 2 * A ; double Q = Math . ceil ( A * A + 4 * p * p ) ; System . out . println ( M + " " + N + " " + O + " " + Q ) ; } public static void main ( String [ ] args ) { int a = 1 ; int b = 1 ; solve ( a , b ) ; } }
import java . io . * ; class GFG { static int A@@ d@@ d ( int x , int y ) { while ( y != 0 ) { int c@@ a@@ r@@ r@@ y = x & y ; x = x ^ y ; y = c@@ a@@ r@@ r@@ y << 1 ; } return x ; } public static void main ( String arg [ ] ) { System . out . println ( A@@ d@@ d ( 15 , 32 ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
import java . io . * ; class GFG { static long a@@ n@@ d@@ O@@ p@@ e@@ r@@ a@@ t@@ or ( long a , long b ) { while ( a < b ) { b -= ( b & - b ) ; } return b ; } public static void main ( String [ ] args ) { long a , b ; a = 10 ; b = 15 ; System . out . println ( a@@ n@@ d@@ O@@ p@@ e@@ r@@ a@@ t@@ or ( a , b ) ) ; } }
import java . io . * ; import java . util . * ;  public class p@@ r@@ a@@ c@@ t@@ i@@ c@@ e@@ 6@@ 6@@ 5@@ a { public static void main ( String [ ] args ) throws Exception {
class GFG { static int countPairs ( int n ) { int count = 0 ; for ( int x = 1 ; x < n ; x ++ ) { for ( int y = x + 1 ; y <= n ; y ++ ) { if ( ( y + x ) % ( y ^ x ) == 0 ) count ++ ; } } return count ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( countPairs ( n ) ) ; } }
import java . io . * ; class GFG { static int f@@ i@@ n@@ d@@ E@@ v@@ e@@ n@@ Pair ( int A [ ] , int N ) { int count = 0 ; for ( int i = 0 ; i < N ; i ++ ) if ( ( ! ( ( A [ i ] & 1 ) > 0 ) ) ) count ++ ; return count * ( count - 1 ) / 2 ; } public static void main ( String [ ] args ) { int A [ ] = { 5 , 6 , 2 , 8 } ; int N = A . length ; System . out . println ( f@@ i@@ n@@ d@@ E@@ v@@ e@@ n@@ Pair ( A , N ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; public class Codechef { 
 import java . math . * ; import java . util . * ; import java . io . * ; public class gr13b {
import java . io . * ; import java . util . * ; public class kuchBhi { public static void main ( String [ ] args ) throws Throwable {
import java . io . * ; import java . util . * ; public class Main { static int mod = ( int ) ( Math . pow ( 10 , 9 ) + 7 ) ; public static void main ( String [ ] args ) { MyScanner sc = new MyScanner ( ) ; out = new PrintWriter ( new BufferedOutputStream ( System . out ) ) ; int n = sc . nextInt ( ) ; out . println ( 6 * n * ( n - 1 ) + 1 ) ; out . close ( ) ; } static void m@@ e@@ r@@ g@@ e@@ S@@ o@@ r@@ t ( int [ ] A ) {
import java . util . * ; public class Main { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ; int x = scan . nextInt ( ) ; int y = scan . nextInt ( ) ; System . out . println ( ( x * y ) / 2 ) ; } }
import java . io . * ; class GFG { static float C@@ a@@ l@@ c@@ u@@ l@@ a@@ t@@ e@@ _@@ G@@ S@@ T ( float o@@ r@@ g@@ _@@ cost , float N@@ _@@ price ) { return ( ( ( N@@ _@@ price - o@@ r@@ g@@ _@@ cost ) * 100 ) / o@@ r@@ g@@ _@@ cost ) ; } public static void main ( String [ ] args ) { float o@@ r@@ g@@ _@@ cost = 100 ; float N@@ _@@ price = 120 ; System . out . print ( " G@@ S@@ T = " + C@@ a@@ l@@ c@@ u@@ l@@ a@@ t@@ e@@ _@@ G@@ S@@ T ( o@@ r@@ g@@ _@@ cost , N@@ _@@ price ) + "%" ) ; } }
import java . util . Arrays ; import java . util . HashMap ; import java . util . Scanner ; import java . util . Vector ; import javafx . util . Pair ;  public class NewClass {  static int n@@ 11 = 100000 ; static boolean a@@ 11 [ ] = new boolean [ n@@ 11 + 1 ] ; static Vector < Long > v@@ 11 = new Vector ( ) ;  static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } return gcd ( b , a % b ) ; }  static void s@@ e@@ i@@ ve ( ) {
import java . util . * ; class GFG { static double ReuleauxArea ( double r ) { if ( r < 0 ) return - 1 ; double A = 0.70477 * 2 * Math . pow ( r , 2 ) ; return A ; } public static void main ( String args [ ] ) { double r = 6 ; System . out . println ( ReuleauxArea ( r ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ; class GFG { static void p@@ r@@ i@@ n@@ t@@ L@@ i@@ n@@ e@@ s ( int n , int k ) { for ( int i = 0 ; i < n ; i ++ ) { System . out . println ( k * ( 6 * i + 1 ) + " " + k * ( 6 * i + 2 ) + " " + k * ( 6 * i + 3 ) + " " + k * ( 6 * i + 5 ) ) ; } } public static void main ( String args [ ] ) { int n = 2 , k = 2 ; p@@ r@@ i@@ n@@ t@@ L@@ i@@ n@@ e@@ s ( n , k ) ; } }
import java . util . Scanner ;  public class _@@ 0@@ 6@@ 7@@ 4@@ F@@ i@@ n@@ d@@ A@@ m@@ i@@ r {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; if ( n % 2 == 0 ) { System . out . println ( n / 2 - 1 ) ; } else { System . out . println ( n / 2 ) ; } }  }
import java . util . Scanner ;  public class A {  public static void main ( String args [ ] ) { Scanner in = new Scanner ( System . in ) ; long n = in . nextLong ( ) ; long p@@ o@@ w@@ 3 = 1 ; while ( p@@ o@@ w@@ 3 <= n ) { if ( n % p@@ o@@ w@@ 3 != 0 ) { System . out . println ( n / p@@ o@@ w@@ 3 + 1 ) ; return ; } p@@ o@@ w@@ 3 = p@@ o@@ w@@ 3 * 3 ; } System . out . println ( 1 ) ;  } }
import java . io . * ; class GFG { static long fifthPowerSum ( int n ) { return ( ( 2 * n * n * n * n * n * n ) + ( 6 * n * n * n * n * n ) + ( 5 * n * n * n * n ) - ( n * n ) ) / 12 ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . println ( fifthPowerSum ( n ) ) ; } }
import java . io . * ; import java . util . StringTokenizer ;
import java . util . Scanner ;  public class N@@ k { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ;  int t = input . nextInt ( ) ;  while ( t -- > 0 ) {  long a = input . nextLong ( ) ; long b = input . nextLong ( ) ; long c = input . nextLong ( ) ; long u = ( a + b + c ) / 2 ;  System . out . println ( u ) ; } } }
import java . io . * ; import java . math . * ; import java . util . * ; public class J@@ u@@ m@@ p@@ i@@ n@@ g@@ B@@ all { public static void main ( String [ ] args ) { FastScanner I = new FastScanner ( ) ;
class GFG { static void printSeriesSum ( int N ) { long sum = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { sum += Math . pow ( i , i - 1 ) ; } System . out . print ( sum + "\n" ) ; } public static void main ( String [ ] args ) { int N = 5 ; printSeriesSum ( N ) ; } }
public class GFG { static boolean i@@ s@@ P@@ r@@ o@@ d@@ u@@ c@@ t@@ Even ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) if ( ( arr [ i ] & 1 ) == 0 ) return true ; return false ; } public static void main ( String args [ ] ) { int arr [ ] = { 2 , 4 , 3 , 5 } ; int n = arr . length ; if ( i@@ s@@ P@@ r@@ o@@ d@@ u@@ c@@ t@@ Even ( arr , n ) ) System . out . println ( "Even" ) ; else System . out . println ( "Odd" ) ; } }
import java . io . * ; import java . math . * ; class GFG { static int n@@ o@@ n@@ square ( int n ) { return n + ( int ) ( 0.5 + ( Math . sqrt ( n ) ) ) ; } static void p@@ r@@ i@@ n@@ t@@ N@@ o@@ n@@ Square ( int n ) { for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( n@@ o@@ n@@ square ( i ) + " " ) ; } public static void main ( String args [ ] ) { int n = 10 ; p@@ r@@ i@@ n@@ t@@ N@@ o@@ n@@ Square ( n ) ; } }
class GFG { static void f@@ i@@ n@@ d@@ S@@ u@@ b@@ A@@ r@@ r ( int arr [ ] , int n ) { for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( Math . abs ( arr [ i ] - arr [ i + 1 ] ) >= 2 ) { System . out . print ( arr [ i ] + " " + arr [ i + 1 ] ) ; return ; } } System . out . print ( - 1 ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 4 , 6 , 7 } ; int n = arr . length ; f@@ i@@ n@@ d@@ S@@ u@@ b@@ A@@ r@@ r ( arr , n ) ; } }
import java . util . * ; import java . io . * ; import java . math . * ; 
class GFG { static double p@@ e@@ n@@ t@@ d@@ i@@ a@@ g@@ o@@ n@@ al ( double a ) { if ( a < 0 ) return - 1 ; double d = 1@@ .@@ 22 * a ; return d ; } static public void main ( String args [ ] ) { double a = 6 ; System . out . println ( p@@ e@@ n@@ t@@ d@@ i@@ a@@ g@@ o@@ n@@ al ( a ) ) ; } }
import java . io . * ; import java . util . StringTokenizer ;
import java . util . Scanner ;  public class N@@ Y@@ Days { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int x = in . nextInt ( ) ; String s = in . nextLine ( ) ;  in . close ( ) ; System . out . println ( s . charAt ( s . length ( ) - 1 ) == '@@ k@@ ' ? x == 5 || x == 6 ? 53 : 52 : x < 30 ? 12 : x < 31 ? 11 : 7 ) ; } }
class GFG { static float power ( float x , int y ) { float temp ; if ( y == 0 ) return 1 ; temp = power ( x , y / 2 ) ; if ( y % 2 == 0 ) return temp * temp ; else { if ( y > 0 ) return x * temp * temp ; else return ( temp * temp ) / x ; } } public static void main ( String [ ] args ) { float x = 2 ; int y = - 3 ; System . out . printf ( "@@ %@@ f@@ " , power ( x , y ) ) ; } }
import java . util . * ; import java . * ;  public class Solution { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ; int [ ] arr = new int [ n ] ; int m = sc . nextInt ( ) ;
import java . io . * ; class GFG { static int g@@ e@@ t@@ M@@ i@@ n@@ V@@ al ( int p , int q ) { if ( q % p == 0 ) return p ; return - 1 ; } public static void main ( String [ ] args ) { int p = 24 , q = 48 ; System . out . println ( g@@ e@@ t@@ M@@ i@@ n@@ V@@ al ( p , q ) ) ; } }
import java . util . * ; class GFG { static int countWays ( int A , int B , int C ) { int m@@ i@@ n@@ A@@ d@@ d@@ A = Math . max ( 0 , ( C + B - A + 2 ) / 2 ) ; int c@@ o@@ u@@ n@@ t@@ _@@ ways = Math . max ( C - m@@ i@@ n@@ A@@ d@@ d@@ A + 1 , 0 ) ; return c@@ o@@ u@@ n@@ t@@ _@@ ways ; } public static void main ( String args [ ] ) { int A = 3 , B = 5 , C = 5 ; System . out . println ( countWays ( A , B , C ) ) ; } }
import java . io . BufferedReader ; import java . io . File ; import java . io . FileReader ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class a@@ _@@ 4@@ 9@@ 1 {  public static void main ( String [ ] args ) throws Exception {
import java . util . Scanner ; public class C@@ a@@ l@@ c@@ u@@ l@@ a@@ t@@ e@@ _@@ C@@ u@@ b@@ e {
import java . util . Scanner ;  public class T@@ a@@ b@@ l@@ e@@ C@@ o@@ l@@ o@@ r@@ i@@ n@@ g { public static void main ( String [ ] args ) { Scanner scan = new Scanner ( System . in ) ;  int n = scan . nextInt ( ) ; int m = scan . nextInt ( ) ;  for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( scan . nextInt ( ) == 1 && ( i == 0 || i == n - 1 || j == 0 || j == m - 1 ) ) { System . out . println ( 2 ) ; return ; } } } System . out . println ( 4 ) ; } }
import java . util . * ;  public class questionCF {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int n = sc . nextInt ( ) ; for ( int i = 1 ; i <= n ; i ++ ) System . out . print ( 4 + " " ) ; System . out . println ( ) ; }   } }
class GFG { static void g@@ o@@ u@@ l@@ d@@ S@@ e@@ q@@ u@@ e@@ n@@ c@@ e ( int n ) { for ( int r@@ o@@ w@@ _@@ num = 1 ; r@@ o@@ w@@ _@@ num <= n ; r@@ o@@ w@@ _@@ num ++ ) { int count = 1 ; int c = 1 ; for ( int i = 1 ; i <= r@@ o@@ w@@ _@@ num ; i ++ ) { c = c * ( r@@ o@@ w@@ _@@ num - i ) / i ; if ( c % 2 == 1 ) count ++ ; } System . out . print ( count + " " ) ; } } public static void main ( String [ ] args ) { int n = 16 ; g@@ o@@ u@@ l@@ d@@ S@@ e@@ q@@ u@@ e@@ n@@ c@@ e ( n ) ; } }
import java . util . Scanner ; 
class GFG { public static void main ( String [ ] args ) { int first , second ; for ( first = 1 ; first <= 5 ; ++ first ) for ( second = 1 ; second <= 5 ; ++ second ) System . out . printf ( "%d \n" , 5 * first + second - 5 ) ; } }
import java . io . * ; import java . util . * ; class GFG { static int c@@ o@@ u@@ n@@ t@@ g@@ r@@ o@@ u@@ p ( int a [ ] , int n ) { int x@@ s = 0 ; for ( int i = 0 ; i < n ; i ++ ) x@@ s = x@@ s ^ a [ i ] ; if ( x@@ s == 0 ) return ( 1 << ( n - 1 ) ) - 1 ; return 0 ; } public static void main ( String args [ ] ) { int a [ ] = { 1 , 2 , 3 } ; int n = a . length ; System . out . println ( c@@ o@@ u@@ n@@ t@@ g@@ r@@ o@@ u@@ p ( a , n ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; class GFG { static int T@@ O@@ T@@ A@@ L@@ _@@ B@@ I@@ T@@ S = 32 ; static boolean isPossible ( int n ) { int cnt = Integer . bitCount ( n ) ; if ( cnt == T@@ O@@ T@@ A@@ L@@ _@@ B@@ I@@ T@@ S / 2 ) return true ; return false ; } static public void main ( String [ ] arr ) { int n = 5@@ 2@@ 4@@ 2@@ 8@@ 0 ; if ( isPossible ( n ) ) System . out . println ( "Yes" ) ; else System . out . println ( "No" ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ; import java . util . StringTokenizer ;  public class Cv {
import java . util . * ;  public class Check2 { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; long k = sc . nextLong ( ) ; long [ ] ar = new long [ ( int ) ( n + 1 ) ] ; for ( int i = 1 ; i <= n ; i ++ ) { ar [ i ] = sc . nextLong ( ) ; } long y = 0 ; for ( long j = k ; j >= 0 ; j -- ) { long g = ( 1 + 8 * j ) ;
import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int t = s . nextInt ( ) ; int a ; int b ; int mn ; for ( int i = 0 ; i < t ; i ++ ) { a = s . nextInt ( ) ; b = s . nextInt ( ) ; mn = Math . min ( a , b ) ; System . out . println ( ( a ^ mn ) + ( b ^ mn ) ) ; } } }
import java . util . * ; import java . io . * ;  public class Solution { public static PrintWriter w = new PrintWriter ( System . out ) ; public static void main ( String args [ ] ) throws Exception { Reader in = new Reader ( ) ; long w = in . nextLong ( ) ; long h = in . nextLong ( ) ; long ans = 0 ; long a = ( h / 2 ) * ( h - h / 2 ) ; for ( int i = 1 ; i <= w ; i ++ ) ans += ( Math . min ( i , w - i ) * a ) ; System . out . println ( ans ) ;
import java . io . * ; class GFG { static int g@@ e@@ t@@ V@@ a@@ l@@ u@@ e@@ O@@ f@@ F ( int n ) { if ( n == 1 ) return 0 ; if ( n == 2 ) return 1 ; int cnt = 0 ; while ( n % 2 == 0 ) { cnt += 1 ; n /= 2 ; } return 2 * cnt ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( g@@ e@@ t@@ V@@ a@@ l@@ u@@ e@@ O@@ f@@ F ( n ) ) ; } }
import java . util . Arrays ; import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; long t , a , b = 1 , sum ; t = scanner . nextLong ( ) ; for ( long i = 0 ; i < t ; i ++ ) { a = scanner . nextLong ( ) ; b = 1 ; sum = a * ( a + 1 ) / 2 ; while ( b <= a ) { sum -= 2 * b ; b *= 2 ; } System . out . println ( sum ) ; } } }
import java . io . BufferedReader ; import java . io . FileReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . Scanner ; import java . util . StringTokenizer ; import java . util . * ; import java . io . * ; public class codeforces { static class Student { int x , y ; Student ( int x , int y ) { this . x = x ; this . y = y ;
import java . util . Scanner ;  public class Main {  public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int a , b ; int t = input . nextInt ( ) ; while ( t != 0 ) { a = input . nextInt ( ) ; b = input . nextInt ( ) ; if ( a % b == 0 ) { System . out . println ( "YES" ) ; } else { System . out . println ( "NO" ) ; } t -- ; } } }
import java . io . * ; class GFG { static int g@@ e@@ t@@ C@@ h@@ i@@ c@@ k@@ s ( int n ) { int c@@ h@@ i@@ c@@ k@@ s = ( int ) Math . pow ( 3 , n - 1 ) ; return c@@ h@@ i@@ c@@ k@@ s ; } public static void main ( String [ ] args ) { int n = 3 ; System . out . println ( g@@ e@@ t@@ C@@ h@@ i@@ c@@ k@@ s ( n ) ) ; } }
import java . util . * ; import java . io . * ; import java . math . BigInteger ; import java . text . * ; public class Main { static long mod = 1000_000_007 ; static long mod1 = 998244353 ; static boolean fileIO = false ; static boolean memory = true ; static FastScanner f ; static PrintWriter pw ; static double eps = ( double ) 1e-6 ; static int oo = ( int ) 1e7 ;
import java . util . Scanner ;  public class S@@ a@@ v@@ e@@ L@@ u@@ k@@ e { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; double d = in . nextDouble ( ) , l = in . nextDouble ( ) , v1 = in . nextDouble ( ) , v2 = in . nextDouble ( ) ;  in . close ( ) ; System . out . println ( ( l - d ) / ( v1 + v2 ) ) ; } }
import java . io . File ; import java . util . Arrays ; import java . util . Scanner ; import java . util . StringTokenizer ;  public class p@@ 0@@ 21 { public static void main ( String args [ ] ) throws Exception {
import java . util . * ; import java . math . * ; public class Letter { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int [ ] h@@ A@@ r@@ r = new int [ 123 ] ; int [ ] t@@ A@@ r@@ r = new int [ 123 ] ; Arrays . fill ( h@@ A@@ r@@ r , 0 ) ; Arrays . fill ( t@@ A@@ r@@ r , 0 ) ; char [ ] arr = sc . nextLine ( ) . replaceAll ( "\\s" , "" ) . toCharArray ( ) ;
import java . io . * ; class GFG { static void a@@ n@@ g@@ l@@ e@@ q@@ u@@ i@@ chord ( int z ) { System . out . println ( "The angle is " + z + " degrees" ) ; } public static void main ( String [ ] args ) { int z = 48 ; a@@ n@@ g@@ l@@ e@@ q@@ u@@ i@@ chord ( z ) ; } }
class GFG { static void findNumbers ( int n ) { int i = 1 ; while ( i <= n ) { System . out . print ( ( 3 * i * ( i - 1 ) + 1 ) + " " ) ; i ++ ; } } public static void main ( String [ ] args ) { int n = 4 ; findNumbers ( n ) ; } }
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . * ;  public class experiment {  static int M = 1_000_000_007 ; static int INF = Integer . MAX_VALUE ; static final FastScanner fs = new FastScanner ( ) ; 
import java . util . * ; class GFG { static void m@@ a@@ x@@ i@@ m@@ u@@ m@@ Area ( int l , int b , int x , int y ) { int left , right , a@@ b@@ o@@ ve , b@@ e@@ l@@ o@@ w ; left = x * b ; right = ( l - x - 1 ) * b ; a@@ b@@ o@@ ve = l * y ; b@@ e@@ l@@ o@@ w = ( b - y - 1 ) * l ; System . out . print ( Math . max ( Math . max ( left , right ) , Math . max ( a@@ b@@ o@@ ve , b@@ e@@ l@@ o@@ w ) ) ) ; } public static void main ( String [ ] args ) { int L = 8 , B = 8 ; int X = 0 , Y = 0 ; m@@ a@@ x@@ i@@ m@@ u@@ m@@ Area ( L , B , X , Y ) ; } }
import java . io . * ; import java . util . ArrayList ; import java . util . Collections ; import java . util . StringTokenizer ;
import java . io . * ; class GFG { static int findSum ( int n ) { int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) for ( int j = 1 ; j <= n ; j ++ ) ans += ( i / j ) ; return ans ; } public static void main ( String [ ] args ) { int N = 2 ; System . out . println ( findSum ( N ) ) ; } }
class GFG { static int ways ( int n ) { return n / 2 ; } public static void main ( String args [ ] ) { int n = 2 ; System . out . println ( ways ( n ) ) ; } }
class GFG { static int rev_num = 0 ; static int b@@ a@@ s@@ e@@ _@@ pos = 1 ; static int reversDigits ( int num ) { if ( num > 0 ) { reversDigits ( num / 10 ) ; rev_num += ( num % 10 ) * b@@ a@@ s@@ e@@ _@@ pos ; b@@ a@@ s@@ e@@ _@@ pos *= 10 ; } return rev_num ; } public static void main ( String [ ] args ) { int num = 4562 ; System . out . println ( reversDigits ( num ) ) ; } }
class GFG { static String allBitsSetInTheGivenRange ( int n , int l , int r ) { int num = ( ( 1 << r ) - 1 ) ^ ( ( 1 << ( l - 1 ) ) - 1 ) ; int new_num = n & num ; if ( num == new_num ) return "Yes" ; return "No" ; } public static void main ( String [ ] args ) { int n = 22 ; int l = 2 , r = 3 ; System . out . print ( allBitsSetInTheGivenRange ( n , l , r ) ) ; } }
import java . util . Collections ; import java . util . Arrays ; public class GfG { public static int getMinCost ( Integer arr [ ] , int n ) { int m@@ i@@ n@@ _@@ ele = Collections . min ( Arrays . a@@ s@@ List ( arr ) ) ; return m@@ i@@ n@@ _@@ ele * ( n - 1 ) ; } public static void main ( String [ ] args ) { Integer [ ] arr = { 4 , 2 , 5 } ; int n = arr . length ; System . out . println ( getMinCost ( arr , n ) ) ; } }
import java . util . * ; class solution { static int findSum ( int N ) { return ( 2 * N * ( N + 1 ) * ( 4 * N + 17 ) + 5@@ 4 * N ) / 6 ; } public static void main ( String arr [ ] ) { int N = 4 ; System . out . println ( findSum ( N ) ) ; } }
import java . util . ArrayList ; import java . util . Arrays ; import java . util . Collections ; import java . util . Scanner ; import java . lang . Math ; public class Account { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int n = sc . nextInt ( ) ;
import java . util . * ; public class Solution {  public static void main ( String [ ] args ) {
import java . util . Scanner ;  public class Supermarket { public static void main ( String [ ] args ) {  Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) , m = in . nextInt ( ) ; double c = Double . POSITIVE_INFINIT@@ Y ;  while ( n -- > 0 ) { double a = in . nextDouble ( ) , b = in . nextDouble ( ) ; if ( a / b < c ) { c = a / b ; } } in . close ( ) ; System . out . println ( c * m ) ; } }
import java . util . * ; public class root { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; long n = sc . nextLong ( ) ; System . out . println ( ( n - 1 ) % 9 + 1 ) ; } }
class GFG { static int m@@ i@@ n@@ P@@ o@@ w@@ e@@ r ( int n , int x ) { if ( x == 1 ) return n ; int ans = 0 ; while ( n > 0 ) { ans += ( n % x ) ; n /= x ; } return ans ; } public static void main ( String [ ] args ) { int n = 5 , x = 3 ; System . out . println ( m@@ i@@ n@@ P@@ o@@ w@@ e@@ r ( n , x ) ) ; } }
import java . util . * ; import java . io . * ; public class Main { public static int mod = 1000000007 ; public static void solve ( InputReader in ) { int n = in . readInt ( ) ; int ans = 0 ; while ( n > 1 ) { ans ++ ; n /= 2 ; } System . out . println ( ans + 1 ) ; } public static void main ( String [ ] args ) {
  import java . util . Scanner ;  public class Main { public static void main ( String [ ] args ) { Scanner puttingvaluesinside = new Scanner ( System . in ) ; int a = puttingvaluesinside . nextInt ( ) ; int b = puttingvaluesinside . nextInt ( ) ; int diff = ( int ) Math . abs ( a - b ) ; int step = diff / 2 ; step *= step + 1 ; if ( diff % 2 == 1 ) step += diff / 2 + 1 ; System . out . println ( step ) ; } }
import java . util . * ; import java . util . Scanner ; import java . io . * ; import javax . lang . model . util . ElementScanner6 ; import static java . lang . System . out ;   public class A@@ 3@@ 5@@ 8 {  public static void main ( String args [ ] ) {  FastReader in = new FastReader ( ) ; PrintWriter pr = new PrintWriter ( new BufferedWriter ( new OutputStreamWriter ( System . out ) ) ) ; int tc = 1 ;
import java . io . * ; class GFG { static int countBits ( int n ) { int count = 0 ; while ( n > 0 ) { count ++ ; n >>= 1 ; } return count ; } public static void main ( String [ ] args ) { int n = 32 ; System . out . println ( "Minimum value of K is = " + countBits ( n ) ) ; } }
class GFG { static int swapBits ( int x , int p1 , int p2 , int n ) { int s@@ e@@ t@@ 1 = ( x > > p1 ) & ( ( 1 << n ) - 1 ) ; int s@@ e@@ t@@ 2 = ( x > > p2 ) & ( ( 1 << n ) - 1 ) ; int x@@ or = ( s@@ e@@ t@@ 1 ^ s@@ e@@ t@@ 2 ) ; x@@ or = ( x@@ or << p1 ) | ( x@@ or << p2 ) ; int result = x ^ x@@ or ; return result ; } public static void main ( String [ ] args ) { int res = swapBits ( 28 , 0 , 3 , 2 ) ; System . out . println ( "@@ Result = " + res ) ; } }
class GFG { static int m@@ a@@ x@@ H@@ a@@ n@@ d@@ s@@ h@@ a@@ k@@ e ( int n ) { return ( n * ( n - 1 ) ) / 2 ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( m@@ a@@ x@@ H@@ a@@ n@@ d@@ s@@ h@@ a@@ k@@ e ( n ) ) ; } }
 import java . util . Scanner ;  public class A@@ 201 { public static void main ( String [ ] args ) { new A@@ 201 ( ) . run ( ) ; }  private void run ( ) { Scanner scanner = new Scanner ( System . in ) ; int x = scanner . nextInt ( ) ;  int r2 = x * 2 - 1 ;  int i = 1 ; while ( i * i < r2 ) { i += 2 ; }  if ( x == 3 ) { System . out . println ( 5 ) ; } else { System . out . println ( i ) ; }  } }
class GFG { static long m@@ u@@ l@@ mod ( long a , long b , long mod ) { long res = 0 ; a = a % mod ; while ( b > 0 ) { if ( b % 2 == 1 ) { res = ( res + a ) % mod ; } a = ( a * 2 ) % mod ; b /= 2 ; } return res % mod ; } public static void main ( String [ ] args ) { long a = 9@@ 2@@ 2@@ 3@@ 3@@ 7@@ 2@@ 0@@ 3@@ 6@@ 8@@ 5@@ 4@@ 7@@ 7@@ 5@@ 8@@ 0@@ 7@@ L , b = 9@@ 2@@ 2@@ 3@@ 3@@ 7@@ 2@@ 0@@ 3@@ 6@@ 8@@ 5@@ 4@@ 7@@ 7@@ 5@@ 8@@ 0@@ 7@@ L ; System . out . println ( m@@ u@@ l@@ mod ( a , b , 1@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ L ) ) ; } }
import java . util . * ; import java . lang . * ; import java . io . * ;  public class FastIO { BufferedReader br ; StringTokenizer st ; public FastIO ( ) {
class GFG { static int fun ( int n ) { return n & ( n - 1 ) ; } public static void main ( String arg [ ] ) { int n = 7 ; System . out . print ( "The number a@@ f@@ t@@ e@@ r u@@ n@@ s@@ e@@ t@@ t@@ i@@ n@@ g " + "the r@@ i@@ g@@ h@@ t@@ most set bit " + fun ( n ) ) ; } }
import java . util . * ; public class Main { public static void main ( String args [ ] ) { Scanner sc = new Scanner ( System . in ) ; int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; for ( int i = 1 ; i <= a ; i ++ ) { if ( i % 2 == 0 ) { if ( i % 4 == 0 ) { System . out . print ( "@@ #@@ " ) ; for ( int j = 0 ; j < b - 1 ; j ++ ) { System . out . print ( "." ) ; } } else if ( i % 2 == 0 ) {
class GFG { static int g@@ e@@ t@@ H@@ C@@ F ( int x , int y ) { int minimum = Math . min ( x , y ) ; if ( x % minimum == 0 && y % minimum == 0 ) return minimum ; for ( int i = minimum / 2 ; i >= 2 ; i -- ) { if ( x % i == 0 && y % i == 0 ) return i ; } return 1 ; } public static void main ( String [ ] args ) { int x = 16 , y = 32 ; System . out . println ( g@@ e@@ t@@ H@@ C@@ F ( x , y ) ) ; } }
import java . util . * ; class GFG { static int g@@ e@@ t@@ H@@ e@@ r@@ m@@ i@@ t@@ e@@ Number ( int n ) { if ( n == 0 ) return 1 ; else if ( n == 1 ) return 1 ; else return - 2 * ( n - 1 ) * g@@ e@@ t@@ H@@ e@@ r@@ m@@ i@@ t@@ e@@ Number ( n - 2 ) ; } public static void main ( String [ ] args ) { int n = 6 ; System . out . println ( g@@ e@@ t@@ H@@ e@@ r@@ m@@ i@@ t@@ e@@ Number ( n ) ) ; } }
class GFG { static long difference ( long M , long N ) { return M + N ; } public static void main ( String [ ] args ) { long M = 9@@ 9@@ 9@@ 9@@ 99999 ; long N = 1@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0@@ 0 ; System . out . print ( difference ( M , N ) + "\n" ) ; } }
public class GFG { static int R@@ a@@ n@@ k ( int E@@ d@@ g@@ e@@ s , int V@@ e@@ r@@ t@@ i@@ c@@ e@@ s ) { int result = 0 ; result = E@@ d@@ g@@ e@@ s - V@@ e@@ r@@ t@@ i@@ c@@ e@@ s + 1 ; return result ; } public static void main ( String [ ] args ) { int E@@ d@@ g@@ e@@ s = 7 , V@@ e@@ r@@ t@@ i@@ c@@ e@@ s = 5 ; System . out . println ( "@@ C@@ i@@ r@@ c@@ u@@ i@@ t R@@ a@@ n@@ k = " + R@@ a@@ n@@ k ( E@@ d@@ g@@ e@@ s , V@@ e@@ r@@ t@@ i@@ c@@ e@@ s ) ) ; } }
class GFG { static int m@@ a@@ x@@ P@@ r@@ i@@ m@@ e@@ s ( int n ) { return n / 2 ; } public static void main ( String [ ] args ) { int n = 17 ; System . out . println ( m@@ a@@ x@@ P@@ r@@ i@@ m@@ e@@ s ( n ) ) ; } }
import java . util . * ; import java . math . * ; import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . util . StringTokenizer ; 
import java . util . * ; import java . io . * ; public class A { static FastReader in = new FastReader ( ) ; static final Random random = new Random ( ) ; static long mod = 1000000007L ; public static void main ( String args [ ] ) throws IOException { int t = 1 ;
class GFG { static void findNthTerm ( int n ) { if ( n % 2 == 0 ) { n = n / 2 ; n = 2 * ( n - 1 ) ; System . out . println ( n / 2 ) ; } else { n = ( n / 2 ) + 1 ; n = 2 * ( n - 1 ) ; System . out . println ( n ) ; } } public static void main ( String args [ ] ) { int X = 10 ; findNthTerm ( X ) ; X = 7 ; findNthTerm ( X ) ; } }
import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStream ; import java . io . InputStreamReader ; import java . io . OutputStream ; import java . io . PrintWriter ; import java . util . Arrays ; import java . util . Comparator ; import java . util . StringTokenizer ;
 import java . io . BufferedReader ; import java . io . IOException ; import java . io . InputStreamReader ; import java . io . PrintWriter ;
import java . util . * ; public class CodeForces1487B { public static void main ( String [ ] args ) { Scanner input = new Scanner ( System . in ) ; int t = input . nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = input . nextInt ( ) ; int k = input . nextInt ( ) - 1 ; if ( n % 2 == 0 ) { System . out . println ( ( k % n ) + 1 ) ; } else { int m = k / ( n / 2 ) ; System . out . println ( ( k + m ) % n + 1 ) ; } } } }
import java . util . * ; import java . io . * ; public class Solution { public static class Suffix implements Comparable < Suffix > { int index ; int rank ; int next ; public Suffix ( int ind , int r , int nr ) { index = ind ; rank = r ; next = nr ; }
import java . util . Scanner ; public class A { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System . in ) ; int n = in . nextInt ( ) ; int m = in . nextInt ( ) ; int res = 0 ; if ( m == 0 || m == 1 ) res = 1 ; else if ( m <= n / 2 ) res = m ; else res = n - m ; System . out . println ( res ) ; } }
import java . util . * ; public class Solution { public static void main ( String [ ] args ) { Scanner s = new Scanner ( System . in ) ; int n = s . nextInt ( ) ; int k = s . nextInt ( ) ; int t = s . nextInt ( ) ; int count = 0 ; if ( t <= k ) count = t ; else if ( t > k && t < n ) count = k ; else if ( t >= n ) { count = k - ( t - n ) ; } else if ( n == k && k == t ) count = n ; System . out . println ( count ) ; } }
class GFG { static int C@@ o@@ u@@ n@@ t@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( int n ) { if ( n == 0 ) return 0 ; if ( ( n & 1 ) == 1 ) return 1 + C@@ o@@ u@@ n@@ t@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( n > > 1 ) ; else return C@@ o@@ u@@ n@@ t@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( n > > 1 ) ; } public static void main ( String [ ] args ) { int n = 21 ; System . out . println ( C@@ o@@ u@@ n@@ t@@ S@@ e@@ t@@ B@@ i@@ t@@ s ( n ) ) ; } }
import java . io . * ; class GFG { static long gcd ( long a , long b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static long p@@ o@@ w@@ GCD ( long a , long n , long b ) { for ( int i = 0 ; i < n ; i ++ ) a = a * a ; return gcd ( a , b ) ; } public static void main ( String [ ] args ) { long a = 10 , b = 5 , n = 2 ; System . out . println ( p@@ o@@ w@@ GCD ( a , n , b ) ) ; } }
import java . io . * ; class GFG { static float f@@ i@@ n@@ d@@ R@@ a@@ d@@ i@@ u@@ s@@ O@@ f@@ c@@ i@@ r@@ c@@ u@@ m@@ circle ( float n , float a ) { if ( n < 0 || a < 0 ) return - 1 ; float radius = ( float ) ( a / Math . sqrt ( 2 - ( 2 * Math . c@@ o@@ s ( 360 / n ) ) ) ) ; return radius ; } public static void main ( String [ ] args ) { float n = 5 , a = 6 ; System . out . println ( f@@ i@@ n@@ d@@ R@@ a@@ d@@ i@@ u@@ s@@ O@@ f@@ c@@ i@@ r@@ c@@ u@@ m@@ circle ( n , a ) ) ; } }
import java . util . Scanner ;  public class B@@ e@@ a@@ r@@ A@@ n@@ d@@ B@@ i@@ g@@ B@@ r@@ o@@ t@@ h@@ e@@ r { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; short a = scanner . n@@ e@@ x@@ t@@ B@@ y@@ t@@ e ( ) , b = scanner . n@@ e@@ x@@ t@@ B@@ y@@ t@@ e ( ) ; byte count = 0 ; while ( a <= b ) { count ++ ; a *= 3 ; b *= 2 ; } System . out . println ( count ) ; } }
class GFG { static void p@@ r@@ i@@ n@@ t@@ F@@ u@@ n ( int test ) { if ( test < 1 ) return ; else { System . out . printf ( "%d " , test ) ; p@@ r@@ i@@ n@@ t@@ F@@ u@@ n ( test - 1 ) ; System . out . printf ( "%d " , test ) ; return ; } } public static void main ( String [ ] args ) { int test = 3 ; p@@ r@@ i@@ n@@ t@@ F@@ u@@ n ( test ) ; } }
import java . util . Scanner ;  public class n@@ 2@@ 7@@ 0@@ A { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System . in ) ; int n = scanner . nextInt ( ) ; int a ; for ( int i = 0 ; i < n ; i ++ ) { a = scanner . nextInt ( ) ; if ( 360 % ( 180 - a ) == 0 ) System . out . println ( "YES" ) ; else System . out . println ( "NO" ) ; } } }
import java . lang . * ; import java . util . * ; import java . util . stream . Collectors ; import java . io . * ; public class C@@ a@@ t@@ _@@ F@@ u@@ r@@ r@@ i@@ e@@ r { public static void main ( String [ ] args ) {
import java . util . * ; class GFG { static double c@@ o@@ u@@ n@@ t@@ digits ( int n , int k ) { if ( n == 0 ) return 0 ; int d@@ i@@ g@@ i@@ t = n % 10 ; if ( d@@ i@@ g@@ i@@ t == k ) return 1 + c@@ o@@ u@@ n@@ t@@ digits ( n / 10 , k ) ; return c@@ o@@ u@@ n@@ t@@ digits ( n / 10 , k ) ; } public static void main ( String [ ] args ) { int n = 1000 ; int k = 0 ; System . out . println ( c@@ o@@ u@@ n@@ t@@ digits ( n , k ) ) ; } }
import java . util . * ; public class Main { final static int maxn = ( int ) 1e5 + 10 ; static int b [ ] = new int [ maxn ] ; static int g [ ] = new int [ maxn ] ; public static void main ( String args [ ] ) {
public class m@@ i@@ n@@ F@@ l@@ i@@ p@@ s { static int f@@ i@@ n@@ d@@ F@@ l@@ i@@ p@@ s ( String str , int n ) { char last = ' ' ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( last != str . charAt ( i ) ) res ++ ; last = str . charAt ( i ) ; } return res / 2 ; } public static void main ( String [ ] args ) { String str = "@@ 0@@ 0@@ 0@@ 1@@ 1@@ 1@@ 1@@ 0@@ 0@@ 0@@ 1@@ 1@@ 1@@ 0@@ " ; int n = str . length ( ) ; System . out . println ( f@@ i@@ n@@ d@@ F@@ l@@ i@@ p@@ s ( str , n ) ) ; } }
import java . util . * ;  public class a { public static void main ( String [ ] arg ) { Scanner in = new Scanner ( System . in ) ; long x = in . nextLong ( ) ; long at = 0 , a@@ u@@ x = x , u = 1 , cnt = 1 ; while ( a@@ u@@ x >= 10 ) { at += x - u ; a@@ u@@ x /= 10 ; u *= 10 ; cnt ++ ; } at += ( x - u + cnt ) ;  System . out . printf ( "%d\n" , at ) ; } }
import java . util . * ; import java . io . * ; import java . math . * ; public class Main {
import java . util . * ; import java . lang . * ; public class GfG { public static int first ( int a , int b , int c ) { a %= b ; for ( int i = 1 ; i <= b ; i ++ ) { a = a * 10 ; if ( a / b == c ) return i ; a %= b ; } return - 1 ; } public static void main ( String argc [ ] ) { int a = 1 , b = 4 , c = 5 ; System . out . println ( first ( a , b , c ) ) ; } }
import java . util . * ; public class B@@ ar {  public static void main ( String [ ] args ) {
class GFG { static int minAbsDiff ( int n ) { int mod = n % 4 ; if ( mod == 0 || mod == 3 ) { return 0 ; } return 1 ; } public static void main ( String [ ] args ) { int n = 5 ; System . out . println ( minAbsDiff ( n ) ) ; } }
import java . util . * ; public class Main { static Scanner in = new Scanner ( System . in ) ; static int N = 110 ; public static void main ( String [ ] args ) { int t = in . nextInt ( ) ; while ( t -- > 0 ) { int n = in . nextInt ( ) ; for ( int i = n ; i >= 1 ; i -- ) System . out . print ( i + " " ) ; System . out . println ( ) ; } } }
class GFG { static int nthTerm ( int N ) { return ( 2 * N + 3 ) * ( 2 * N + 3 ) - 2 * N ; } public static void main ( String [ ] args ) { int N = 4 ; System . out . println ( nthTerm ( N ) ) ; } }
import java . util . * ; import java . util . Arrays ; public class Main { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; String h = sc . next ( ) ; String [ ] d = new String [ t ] ; for ( int i = 0 ; i < t ; i ++ ) { d [ i ] = sc . next ( ) ; } if ( t % 2 == 0 ) { System . out . println ( "@@ h@@ o@@ m@@ e@@ " ) ; } else { System . out . println ( "@@ c@@ o@@ n@@ t@@ e@@ s@@ t@@ " ) ; } } }
import java . io . * ; class GFG { static long calculateSum ( int n ) { long sum = 0 ; for ( int row = 0 ; row < n ; row ++ ) { sum = sum + ( 1 << row ) ; } return sum ; } public static void main ( String [ ] args ) { int n = 10 ; System . out . println ( "Sum of all elements:" + calculateSum ( n ) ) ; } }
import java . util . * ; public class HelloWorld {  public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System . in ) ; int t = sc . nextInt ( ) ; while ( t -- > 0 ) { int a = sc . nextInt ( ) ; int b = sc . nextInt ( ) ; int c = sc . nextInt ( ) ; int d = sc . nextInt ( ) ; System . out . println ( Math . max ( ( a + b ) , ( c + d ) ) ) ; } } }
import java . util . * ; import java . lang . * ; class GFG { public static int summation ( int n ) { return ( n * ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } public static void main ( String args [ ] ) { int n = 10 ; System . out . println ( summation ( n ) ) ; } }
